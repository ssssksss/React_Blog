{"version":3,"sources":["components/Main/HtmlContent/HtmlBasic.jsx","components/Main/HtmlContent/HtmlDOM.jsx","components/Main/CssContent/CssBasic.jsx","components/Main/JspServletContent/JspServletInformation.jsx","components/Main/JavaContent/JavaBasic.jsx","components/Main/JspServletContent/JspServletBasic.jsx","components/Main/JspServletContent/JspServletBulletinBoard.jsx","components/Main/JspServletContent/JspServletJstl.jsx","components/Main/JspServletContent/JspServletEl.jsx","components/Main/JspServletContent/Jdbc.jsx","components/Main/ReactContent/ReactBasic.jsx","components/Main/SpringContent/SpringError.jsx","components/Main/SpringContent/SpringCode.jsx","components/Main/SpringContent/SpringStudy.jsx","components/Main/SpringContent/SpringSecurityExCode1.jsx","components/Main/SpringContent/SpringSecurityExCode2.jsx","components/Main/SpringContent/SpringSecurityExCode3.jsx","components/Main/SpringContent/SpringSecurityExCode4.jsx","components/Main/SpringContent/SpringSecurityExCode5.jsx","components/Main/SpringContent/SpringSecurityExCode6.jsx","components/Main/SpringContent/SpringInitSetting.jsx","components/Main/WindowContent/WindowCommand.jsx","components/Main/DatabaseContent/OracleDBStudy.jsx","components/Main/DatabaseContent/MySQLStudy.jsx","components/Main/DatabaseContent/DatabaseName.jsx","components/Main/KeyMapContent/KeyMap.jsx","components/Main/TermContent/Term.jsx","components/Main/GithubContent/GithubBasic.jsx","components/Main/RefBlogContent/RefBlog.jsx","components/Main.jsx","components/LsideMenu/HtmlList.jsx","components/LsideMenu/CssList.jsx","components/LsideMenu/JavaSciptList.jsx","components/LsideMenu/ReactList.jsx","components/LsideMenu/JavaList.jsx","components/LsideMenu/PhpList.jsx","components/LsideMenu/NodeJsList.jsx","components/LsideMenu/JspServletList.jsx","components/LsideMenu/SpringList.jsx","components/LsideMenu/WindowList.jsx","components/LsideMenu/TermList.jsx","components/LsideMenu/KeyMapList.jsx","components/LsideMenu/GithubList.jsx","components/NavMenu.jsx","components/LsideMenu/DatabaseList.jsx","components/LsideMenu/RefBlogList.jsx","components/NavMenu2.jsx","components/FootterMenu.jsx","App.js","reportWebVitals.js","index.js"],"names":["HtmlBasic","props","useState","setScrollY","logit","window","pageYOffset","elementHeight","document","getElementsByClassName","scrollHeight","testdis","getBoundingClientRect","left","documentElement","scrollTop","innerWidth","blockRef","current","style","position","maxWidth","height","outerHeight","display","useRef","useEffect","addEventListener","removeEventListener","className","onClick","ref","elem","href","open","name","target","backgroundColor","textDecoration","src","process","alt","width","method","action","type","placeholder","required","value","htmlFor","id","cols","rows","resize","border","overflow","selected","disabled","label","marginLeft","background","colSpan","rowSpan","HtmlDOM","console","log","scrollWidth","CssBasic","JspServletInformation","SpringError","JspServletBasic","JspServletBulletinBoard","JspServletJstl","Blank","Jdbc","ReactBasic","clsssName","SpringCode","SpringStudy","SpringSecurityExCode1","SpringSecurityExCode2","SpringSecurityExCode3","SpringSecurityExCode4","SpringSecurityExCode5","SpringSecurityExCode6","WindowCommand","OracleDBStudy","MySQLStudy","KeyMap","Term","GithubBasic","RefBlog","Main","page2","JavaBasic","JspServletEl","SpringInitSetting","DatabaseName","showpage","HtmlList","send","onChangePage","CssList","JavaSciptList","ReactList","JavaList","PhpList","NodeJsList","JspServletList","SpringList","WindowList","TermList","KeyMapList","GithubList","NavMenu","page","DatabaseList","RefBlogList","NavMenu2","FootterMenu","App","whatPage","setWhatPage","whatPage2","setWhatPage2","e","changePage","changePage2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12315159.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst HtmlBasic = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b>  </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary>  </summary>\r\n                            <a href=\"#주석\">주석</a>\r\n                            <a href=\"#특수문자\">특수문자</a>\r\n                            <a href=\"#div태그\">div태그</a>\r\n                            <a href=\"#span태그\">span태그</a>\r\n                            <a href=\"#h태그\">h태그</a>\r\n                            <a href=\"#p태그\">p태그</a>\r\n                            <a href=\"#스타일 관련 태그\">스타일 관련 태그</a>\r\n                            <a href=\"#시멘틱 태그\">시멘틱 태그</a>\r\n                            <a href=\"#a태그\">a태그</a>\r\n                            <a href=\"#link태그\">link태그</a>\r\n                            <a href=\"#img태그\">img태그</a>\r\n                            <a href=\"#input태그\">input태그</a>\r\n                            <a href=\"#form태그\">form태그</a>\r\n                            <a href=\"#label태그\">label태그</a>\r\n                            <a href=\"#select태그\">select태그</a>\r\n                            <a href=\"#list태그\">list태그</a>\r\n                            <a href=\"#table태그\">table태그</a>\r\n                            <a href=\"#detail태그\">detail태그</a>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n\r\n                    <span className=\"mtitle\"> <a name=\"\">  Html Study  </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"주석\"> HTML 주석 </a> </span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. 주석은 컴퓨터는 인식하지 못하고 사람만 인식이 가능한 설명문이다. </p>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; !-- 설명문 작성 -- &gt; </p>\r\n                            <span> &lt; !-- 여기는 주석을 적는 공간입니다 -- &gt; </span>\r\n                            <p> 현재는 리액트를 사용하여 보이지만 HTML에서는 보이지 않는다. </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"특수문자\"> 특수문자 </a> </span>\r\n                        <p> 특징 : </p>\r\n                        <p> &lt; , &gt; , &amp; , &quot; , &copy; , &nbsp; </p>\r\n                        <p> 위에 있는 문자들은 HTML문법과 동일한 문자들이 있어서 사용하려면 겹쳐서 에러가 발생하게 된다</p>\r\n                        <p> 그래서 사용하려면 다른 문자의 결합으로 작성해야 한다.</p>\r\n                        <p> <a href=\"https://dev.w3.org/html5/html-author/charref\" target=\"_blank\"> Entity Code </a> </p>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; : &amp;lt; , 좌측 화살표</p>\r\n                            <p> &gt; : &amp;gt; , 우측 화살표</p>\r\n                            <p> &amp; : &amp;amp; , and문자 </p>\r\n                            <p> &quot; : &amp;quot; , 쌍따옴표</p>\r\n                            <p> &copy; : &amp;copy; , 카피라이터 문자</p>\r\n                            <p> &nbsp; : &amp;nbsp; , 띄어쓰기</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"div태그\"> div태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. block이라는 속성만 가지며 아무런 특징이 없다. </p>\r\n                        <p> block이란 가로 공간을 전부 차지하는 것이다. </p>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; div style=\"background-color:red\"&gt; &lt; /div &gt; </p>\r\n                            <div style={{ backgroundColor: 'red' }}> div태그의 예시 </div>\r\n                            <p> 블록속성을 가지고 있어 빨갛게 길게 칠해지는것을 볼 수 있다.</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"span태그\"> span태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. inline이라는 속성만 가지며 아무런 특징이 없다. </p>\r\n                        <p> inline이란 글자가 있는 공간만 차지하는 것이다. </p>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; span style=\"background-color:red\"&gt; &lt; /span &gt; </p>\r\n                            <span style={{ backgroundColor: 'red' }}> span태그의 예시 </span>\r\n                            <p> 인라인속성을 가지고 있어 글자만 빨간 것을 볼 수 있다.</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"h태그\"> h태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. block 속성 </p>\r\n                        <p> 2. 글자 크기에 맞추어 폰트의 크기가 정해져 있음 </p>\r\n                        <p> 3. 글자 크기가 정해져 있으므로 css스타일로 폰트크기를 바꾸는 것을 권장하지 않음 </p>\r\n                        <p> 4. h1태그 부터 h6태그 까지 존재함 </p>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; h1 style=\"background-color:red\"&gt; &lt; /h1 &gt; </p>\r\n                            <h1 style={{ backgroundColor: 'red' }}> h1태그의 예시 </h1>\r\n                            <p> &lt; h2 style=\"background-color:skyblue\"&gt; &lt; /h2 &gt; </p>\r\n                            <h2 style={{ backgroundColor: 'skyblue' }}> h2태그의 예시 </h2>\r\n                            <p> &lt; h3 style=\"background-color:red\"&gt; &lt; /h3 &gt; </p>\r\n                            <h3 style={{ backgroundColor: 'red' }}> h3태그의 예시 </h3>\r\n                            <p> &lt; h4 style=\"background-color:skyblue\"&gt; &lt; /h4 &gt; </p>\r\n                            <h4 style={{ backgroundColor: 'skyblue' }}> h4태그의 예시 </h4>\r\n                            <p> &lt; h5 style=\"background-color:red\"&gt; &lt; /h5 &gt; </p>\r\n                            <h5 style={{ backgroundColor: 'red' }}> h5태그의 예시 </h5>\r\n                            <p> &lt; h6 style=\"background-color:skyblue\"&gt; &lt; /h6 &gt; </p>\r\n                            <h6 style={{ backgroundColor: 'skyblue' }}> h6태그의 예시 </h6>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"p태그\"> p태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. block 속성 </p>\r\n                        <p> 2. 한 줄 띄어쓰기의 특성을 가짐 </p>\r\n                        <p> 3. 문단 태그라고도 불리며 자주 사용되는 태그 </p>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; span style=\"background-color:red\"&gt; &lt; /span &gt; </p>\r\n                            <p style={{ backgroundColor: 'red' }}> p태그의 예시 </p>\r\n                            <p> 블록속성을 가지고 있어 빨갛게 길게 칠해지는것을 볼 수 있다.</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"스타일 관련 태그\"> 스타일 관련 태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. 인라인 속성 </p>\r\n                        <p> 2. css스타일을 사용하지 않고도 사용됨 </p>\r\n                        <p> 3. 솔직히 b, br태그 외에는 다른것은 가끔 사용하는것 같다</p>\r\n                        <p> 4. css에서만 스타일을 적용해야 된다는 논쟁이 있는것으로 알고 있어서 저는 css에서만 스타일을 적용합니다</p>\r\n                        <span className=\"sblock\">\r\n                            <b> b태그 : 굵은 글씨 </b> <br />\r\n                            <i> i태그 : 이탤릭체 </i> <br />\r\n                            <ins> ins태그 : 글씨아래 밑줄 </ins> <br />\r\n                            <del> del태그 : 중간에 줄</del> <br />\r\n                            <mark style={{ backgroundColor: 'skyblue' }}> mark태그 : 형광펜 </mark> <br />\r\n                            <sub> sub태그 : 아래 첨자</sub> <br />\r\n                            <sup> sup태그 : 위 첨자</sup> <br />\r\n                            <big> big태그 : 큰 글씨</big> <br />\r\n                            <small> small태그 : 작은 글씨</small> <br />\r\n                            br태그 : 띄어쓰기 태그(&lt;br/&gt;) 태그가 1개임 <br />\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"시멘틱 태그\"> 시멘틱태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. block 속성 </p>\r\n                        <p> 2. div태그와 동일하다 </p>\r\n                        <p> 3. 사용하는 이유는 태그의 이름을 이용하여 시멘틱태그안에는 정해진 내용을 넣겠다라는 의미이다 </p>\r\n                        <p> header : 상단 구역 </p>\r\n                        <p> nav : 상단 구역에 메뉴 </p>\r\n                        <p> aside : 사이드 영역 </p>\r\n                        <p> section : 메인 영역 </p>\r\n                        <p> article : 신문,기사,글 영역 </p>\r\n                        <p> footer : 하단 구역, 저작권, 회사명, 주소, SNS 등등 </p>\r\n                        <p> 시멘틱 태그가 몇개 더 있는것으로 기억하지만 일단 기억나는대로만 작성하였다. </p>\r\n\r\n                        <span className=\"sblock\">\r\n                            <header className=\"sstitle\"> header태그의 예시 </header>\r\n                            <nav className=\"sstitle\"> nav태그의 예시 </nav>\r\n                            <aside className=\"sstitle\"> aside태그의 예시 </aside>\r\n                            <section className=\"sstitle\"> section태그의 예시 </section>\r\n                            <article className=\"sstitle\"> article태그의 예시 </article>\r\n                            <footer className=\"sstitle\"> footer태그의 예시 </footer>\r\n                            <div> 시멘틱 태그는 div태그이지만 이름만 다른 태그인 것을 알 수 있다. </div>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"a태그\"> a태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. inline 속성 </p>\r\n                        <p> 2. 주소로 이동시켜는 태그 </p>\r\n                        <p> 3. href속성이 있으면 클릭이 된다 </p>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; a href=\"#\" &gt; a태그의 예시1 &lt; /a &gt; </p>\r\n                            <a href=\"#\"> href=\"#\" 은 글씨가 클릭되고 제일 최상단으로 이동한다. </a>\r\n                            <p> &lt; a href=\"#\" style=\"text-decoration=none\"&gt; a태그의 예시2 &lt; /a &gt; </p>\r\n                            <a href=\"#\" style={{ textDecoration: 'none' }}> text-decoration 속성은 밑줄을 없애준다 </a>\r\n                            <p> &lt; a href=\"https://www.naver.com/\" &gt; a태그의 예시3 &lt; /a &gt; </p>\r\n                            <a href=\"https://www.naver.com/\" > 네이버 주소로 이동 </a>\r\n                            <p> &lt; a href=\"https://www.naver.com/\" target=\"_blank\" &gt; a태그의 예시4 &lt; /a &gt; </p>\r\n                            <a href=\"https://www.naver.com/\" target=\"_blank\" > 새탭을 이용하여 네이버 주소로 이동 </a>\r\n                            <span className=\"mblock\">\r\n                                <p> 홈페이지에 보면 맨 위로 이동할 때 아래와 같이 사용한다. 만약에 아래와 같이 작성을하고 버튼을 눌렀는데\r\n                                    이동하지 않았다면 2개의 태그가 너무 가까워서 움직이지 않은 것처럼 보였을 것이다.\r\n                                    그러므로 저 위로 이동하여 놓고 해보면 작동할 것이다.\r\n                                    그리고 반드시 a태그를 이용하여야만 작동이 된다.\r\n                                </p>\r\n                                <p> &lt; a name=\"top\" &gt; a태그의 예시5 목적지 주소&lt; /a &gt; </p>\r\n                                <a name=\"top\"> 내부 a태그 주소(하이퍼링크)로 이동 </a>\r\n                                <p> &lt; a href=\"#top\" &gt; a태그의 예시5 이동할 주소&lt; /a &gt; </p>\r\n                                <a href=\"#top\"> 내부 a태그 주소(하이퍼링크)로 이동 </a>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"link태그\"> link태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. 비어있는 태그 </p>\r\n                        <p> 2. 속성만 넣을 수 있음  </p>\r\n                        <p> 3. 외부 소스를 불러주는 태그 </p>\r\n                        <p> 4. HTML에서 css파일을 불러서 사용할 떄 일반적으로 사용 </p>\r\n                        <span className=\"sblock\">\r\n                            <p> link태그는 &lt;head&gt; HTML head태그 안에 넣는다 &lt;/head&gt;</p>\r\n                            <p> 아래 코드는 style.css 이름을 가진 css 파일을 불러오는 방법</p>\r\n                            <p> &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt;</p>\r\n                            <p> rel: 필수 속성으로, 현재 문서에 어떤 리소스 인지 알려준다 </p>\r\n                            <p> type: 외부 리소스의 미디어 타입 </p>\r\n                            <p> href: 외부 리소스의 URL </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"img태그\"> img태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. 이미지 태그 </p>\r\n                        <p> 2. src 속성 : 이미지의 주소입력 , null값이면 에러발생  </p>\r\n                        <p> 3. alt 속성 : 이미지의 설명 </p>\r\n                        <span className=\"sblock\">\r\n                            <p> img태그는 &lt;img src=\"URL주소\" alt=\"이미지설명\" width=\"100px\" &gt; </p>\r\n                            <img src={process.env.PUBLIC_URL + '/img/mountain_and_sea.jpg'} alt=\"산과바다\" width=\"100px\" />\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"input태그\"> input태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <ol>\r\n                            <li> 사용자가 입력을 할 수 있는 태그 </li>\r\n                            <li> 아이디,회원가입 등에서 사용하는 태그로 form태그와 같이 사용된다.  </li>\r\n                            <li> input태그는 type속성을 이용하여 여러가지의 데이터를 입력할 수 있다. </li>\r\n                            <li> input태그의 대표적 속성 required, placeholder </li>\r\n                            <li> required 속성을 사용한 input태그는 제출시 제출이 불가능 </li>\r\n                            <li> placeholder 속성을 사용하면 무엇을 입력할지 설명을 넣을 수 있다. </li>\r\n                        </ol>\r\n                        <span className=\"sblock\">\r\n                            <p> input태그의 예시 </p>\r\n                            <p> &lt;form&gt; method=\"GET\" action=\"#\"&gt;</p>\r\n                            <p> &lt;p&gt; &lt;input type=\"text\" placeholder=\"아이디를 입력해주세요\" required /&gt; &lt;/p&gt;</p>\r\n                            <p> &lt;p&gt; &lt;input type=\"password\" placeholder=\"비밀번호를 입력해주세요\" required /&gt; &lt;/p&gt;</p>\r\n                            <p> &lt;p&gt; &lt;button&gt; type=\"submit\"&gt; 제출 &lt;/button&gt;  &lt;/p&gt;</p>\r\n                            <p> &lt;/form&gt;</p>\r\n                            <form method=\"GET\" action=\"#\">\r\n                                <p> <input type=\"text\" placeholder=\"아이디를 입력해주세요\" required /> </p>\r\n                                <p> <input type=\"password\" placeholder=\"비밀번호를 입력해주세요\" required /> </p>\r\n                                <p> <button type=\"submit\"> 제출 </button>  </p>\r\n                            </form>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"form태그\"> form태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <ol>\r\n                            <li> 프론트엔드에서 사용자가 입력을 하고 백엔드 서버에 데이터를 보낼 때 사용  </li>\r\n                            <li> form으로 보내는 방식에는 get,post 방식 등이 있다. </li>\r\n                            <li> form태그 안에 여러가지 input 태그가 존재한다. </li>\r\n                            <li> form태그 자체로는 아무런 특성이 없다. </li>\r\n                            <li> input태그에서 자주 사용되는 속성</li>\r\n                        </ol>\r\n                        <span className=\"sblock\">\r\n                            <p> form태그 </p>\r\n                            <p> GET방식은 빠르지만 보안이 좋지 않아 사생활 정보가 필요없을 때 사용, 검색 등</p>\r\n                            <p> POST방식은 상대적으로 느리지만 보안이 좋아 사생활 정보가 필요할 때, 로그인,회원가입 등 </p>\r\n                            <p> &lt; form method=\"POST\"혹은\"GET\" action=\"양식을보낼주소\" &gt; 이곳에 input태그들을 작성한다 &lt; /form &gt;</p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p> fieldset태그 </p>\r\n                            <p> form태그와 같이 사용할 수 있는 태그</p>\r\n                            <p> form태그의 범위를 볼 수 있고 테두리를 감싸 줌 </p>\r\n                            <p> &lt;form&gt;  &lt;fieldset&gt; 123123 &lt;/fieldset&gt; &lt;/form&gt; </p>\r\n                            <p> <form>  <fieldset> 123123 </fieldset> </form> </p>\r\n                        </span>\r\n                        <span className=\"sstitle\"> form에서 사용하는 input 태그의 종류 </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 텍스트 입력시 숫자로 입력 </p>\r\n                            <p> &lt;input type=\"number\"/&gt;</p>\r\n                            <p> <input type=\"number\" /> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 텍스트 입력시 * 처리, 비밀번호를 입력할 때 사용</p>\r\n                            <p> &lt;input type=\"password\"/&gt;</p>\r\n                            <p> <input type=\"password\" /> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 라디오 버튼 , 여러개의 선택지 중에서 한 개를 선택할 때 사용</p>\r\n                            <p> &lt;input type=\"radio\" name=\"gender\" value=\"man\"/&gt; </p>\r\n                            <p> &lt;input type=\"radio\" name=\"gender\" value=\"woman\"/&gt; </p>\r\n                            <p> <input type=\"radio\" name=\"gender\" value=\"man\" /> 남 </p>\r\n                            <p> <input type=\"radio\" name=\"gender\" value=\"woman\" /> 녀 </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 체크박스, 여러개의 선택지 중에서 여러개 를 선택할 때 사용 </p>\r\n                            <p> &lt;input type=\"checkbox\" name=\"hooby\" value=\"music\"/&gt; 음악</p>\r\n                            <p> &lt;input type=\"checkbox\" name=\"hooby\" value=\"sport\" /&gt; 운동 </p>\r\n                            <p> &lt;input type=\"checkbox\" name=\"hooby\" value=\"game\"/&gt; 게임 </p>\r\n                            <p> 좋아하는 취미를 고르세요 </p>\r\n                            <p> <input type=\"checkbox\" name=\"hooby\" value=\"music\" /> 음악 </p>\r\n                            <p> <input type=\"checkbox\" name=\"hooby\" value=\"sport\" /> 운동</p>\r\n                            <p> <input type=\"checkbox\" name=\"hooby\" value=\"game\" /> 게임</p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> <a name=\"label태그\"> label태그 </a> </p>\r\n                            <p> 체크박스나 라디오 버튼을 사용할 떄 자주 사용되는 태그 </p>\r\n                            <p> 체크박스를 클릭하지 않아도 글자를 클릭하면 클릭할 수 있다. </p>\r\n                            <p> 체크박스를 안보이게 하고 라벨 글자만 클릭하여 css 애니메이션을 만들기도 한다 </p>\r\n                            <p> label태그의 for=\"\" 하고 input태그의 id=\"\" 값하고 연결된다 </p>\r\n                            <p> &lt; label for=\"music\" &gt; 음악 클릭 &lt; /label &gt;  </p>\r\n                            <p> &lt; input type=\"checkbox\" id=\"music\" &gt; &lt;/input &gt;  </p>\r\n                            <p> <label htmlFor=\"music\"> <mark> 음악 클릭 </mark> </label> </p>\r\n                            <p> <input type=\"checkbox\" id=\"music\" ></input>  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 텍스트 , 텍스트를 입력할 때 </p>\r\n                            <p> placeholder는 흐릿하게 무엇을 적을지 보여주는 값이다. 입력되면 사라진다. </p>\r\n                            <p> &lt;input type=\"text\" name=\"text\" placeholder=\"텍스트를 입력하세요\"/&gt; </p>\r\n                            <p> <input type=\"text\" name=\"text\" placeholder=\"텍스트를 입력하세요\" />  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 텍스트 영역 , 블로그나 문의사항 메일 등 긴 장문의 텍스트를 입력할 때 사용</p>\r\n                            <p> 속성 설명 : cols(가로길이) , rows(세로줄) , resize(크기조절) , border(테두리) , overflow(글자가넘칠때) </p>\r\n                            <p> &lt;textarea cols=\"20\" rows=\"5\" style=\"resize:none; border:none; overflow:auto\"/&gt; </p>\r\n                            <p> <textarea cols=\"20\" rows=\"5\" style={{ resize: 'none', border: 'none', overflow: 'auto' }} />  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> <a name=\"select태그\"> select태그 </a> , 여러개의 조건 중에 선택을 할 수 있음</p>\r\n                            <p> 속성 설명 : selected(처음 선택되어 있는 옵션) , disabled(옵션으로 선택 불가능)</p>\r\n                            <p> &lt;select name=\"area\"&gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt;option value=\"\" selected disabled&gt; &lt;/option&gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt;option value=\"서울\"&gt; 서울 &lt;/option&gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt;option value=\"부산\"&gt; 부산 &lt;/option&gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt;option value=\"경기\"&gt; 경기 &lt;/option&gt; </p>\r\n                            <p> &nbsp;&lt;optgroup label=\"한국\"&gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt;option value=\"대구\"&gt; 대구 &lt;/option&gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt;option value=\"대전\"&gt; 대전 &lt;/option&gt; </p>\r\n                            <p> &nbsp;&lt;/optgroup&gt; </p>\r\n                            <p> &lt;/select&gt; </p>\r\n                            <select name=\"area\">\r\n                                <option value=\"\" selected disabled> 선택 </option>\r\n                                <option value=\"서울\"> 서울 </option>\r\n                                <option value=\"부산\"> 부산 </option>\r\n                                <option value=\"경기\"> 경기 </option>\r\n                                <optgroup label=\"한국\">\r\n                                    <option value=\"대구\"> 대구 </option>\r\n                                    <option value=\"대전\"> 대전 </option>\r\n                                </optgroup>\r\n                            </select>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 제출 , form 태그에 작성된 양식을 action으로 보낼 때 사용</p>\r\n                            <p> 각 input태그에 name속성과 value속성을 이용하여 백엔드 서버로 보냄 </p>\r\n                            <p> 백엔드 서버에서는 name이라는 값을 참조하여 value값을 사용할 수 있음 </p>\r\n                            <p> 예를들어 어떤 input태그에 name=\"gender\" value=\"man\" 이라고 한다면\r\n                                백엔드에서 String sex = request.getParameter(\"gender\"); //sex = man으로 사용됨\r\n                            </p>\r\n                            <p> &lt;button type=\"submit\"&gt; 제출 &lt;/button&gt; </p>\r\n                            <p> <button type=\"submit\">  제출  </button> </p>\r\n                            <p> &lt;input type=\"submit\" value=\"제출\"/&gt; </p>\r\n                            <p> <input type=\"submit\" value=\"제출\" /> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 기타 등등 나중에 시간나면 추가로 적을 계획 </p>\r\n                            <p> range(좌우스크롤바), reset(초기화), search(검색창),\r\n                                tel(전화번호), time(시간), week(날짜), datetime(날짜?),\r\n                                email(이메일양식), month(달력) </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"list태그\"> list태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. 리스트 형식으로 나열될 때 사용  </p>\r\n                        <p> 2. 실제로는 세로로 나열보다는 css를 이용하여 가로로 배열하는데 사용하는것 같다. </p>\r\n                        <p> 3. 리스트 태그에는 순서가 있는(ul)태그와 순서가 없는(ol)태그가 있다. </p>\r\n                        <p> 그냥 ul만 써도 충분한것 같다. </p>\r\n                        <p> 4. 리스트태그는 왼쪽에 원판(disc) 원(circle) 등 list-style-type 속성을 가지고있다. </p>\r\n                        <p> 왠만하면 그냥 list-style-type=\"none\" 으로 사용할 것 같다. </p>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; ul &gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt; li &gt; 첫번째 &lt; /li &gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt; li &gt; 두번째 &lt; /li &gt; </p>\r\n                            <p> &lt; /ul &gt; </p>\r\n                            <p>\r\n                                <ul>\r\n                                    <li style={{ marginLeft: \"20px\" }}>첫번째</li>\r\n                                    <li style={{ marginLeft: \"20px\" }}>두번째</li>\r\n                                </ul>\r\n                            </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p> &lt; ol &gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt; li &gt; 첫번째 &lt; /li &gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt; li &gt; 두번째 &lt; /li &gt; </p>\r\n                            <p> &lt; /ol &gt; </p>\r\n                            <p>\r\n                                <ol>\r\n                                    <li style={{ marginLeft: \"20px\" }}>첫번째</li>\r\n                                    <li style={{ marginLeft: \"20px\" }}>두번째</li>\r\n                                </ol>\r\n                            </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"table태그\"> table태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 표를 만들 때 사용하는 태그 </p>\r\n                        <p> 알고 있어야 되는 개념이지만 자주 사용되지 않아 그냥 기억만 하고 있다. </p>\r\n                        <p> 테이블과 관련된 태그의 종류 및 속성 , 많지만 필요한것만 정리</p>\r\n                        <span className=\"sblock\">\r\n                            <p> table(표) (th(표의제목) tr(가로줄) td(셸,한칸))\r\n                                (colgroup col)(표의 길이나 색상등을 지정할 수 있음)\r\n                                thead(테이블상단구역) tbody(테이블중간구역) tfoot(테이블하단구역)\r\n                            </p>\r\n                            <p>\r\n                                colspan=\"2\"(셸의 가로줄을 합치는 갯수), rowspan=\"2\"(셸의 세로줄을 합치는갯수)\r\n                            </p>\r\n                        </span>\r\n                        <p> 테이블 태그의 예시 </p>\r\n                        <span className=\"sblock\">\r\n                            <p>\r\n                                <p> &lt;table border=\"1\"&gt; </p>\r\n                                <p> &nbsp;&lt;colgroup&gt; </p>\r\n                                <p> &nbsp;&nbsp;&lt;col width=\"50px\" style=\"background:red\"/&gt; </p>\r\n                                <p> &nbsp;&nbsp;&lt;col width=\"150px\" style=\"background:green\" /&gt;</p>\r\n                                <p> &nbsp;&lt;col width=\"250px\" style=\"background:blue\" /&gt;</p>\r\n                                <p> &nbsp;&lt;/colgroup&gt;</p>\r\n                                <p> &nbsp;&lt;thead&gt;</p>\r\n                                <p> &nbsp;&nbsp;&lt;tr&gt;</p>\r\n                                <p> &nbsp;&nbsp;&nbsp;&lt;th colSpan=\"2\"&gt; 제목 &lt;/th&gt; </p>\r\n                                <p> &nbsp;&nbsp;&nbsp;&lt;th rowSpan=\"3\"&gt; 번호번호번호 &lt;/th&gt; </p>\r\n                                <p> &nbsp;&lt;/tr&gt;</p>\r\n                                <p> &nbsp;&lt;/thead&gt;</p>\r\n                                <p> &nbsp; &lt;tbody&gt;</p>\r\n                                <p> &nbsp;&nbsp; &lt;tr&gt;</p>\r\n                                <p> &nbsp;&nbsp;&nbsp; &lt;td&gt; 1번 &lt;/td&gt;</p>\r\n                                <p> &nbsp;&nbsp;&nbsp; &lt;td&gt; 1 &lt;/td&gt;</p>\r\n                                <p> &nbsp;&nbsp;&nbsp; &lt;td&gt; 1 &lt;/td&gt;</p>\r\n                                <p> &nbsp;&nbsp;&lt;/tr&gt;</p>\r\n                                <p> &nbsp; &lt;/tbody&gt;</p>\r\n                                <p> &nbsp;&lt;tfoot&gt;</p>\r\n                                <p> &nbsp;&nbsp; &lt;tr&gt;</p>\r\n                                <p> &nbsp;&nbsp;&nbsp;  &lt;td&gt; 2번 &lt;/td&gt;</p>\r\n                                <p> &nbsp;&nbsp;&nbsp; &lt;td&gt; 2 &lt;/td&gt;</p>\r\n                                <p> &nbsp;&nbsp;&nbsp; &lt;td&gt; 2 &lt;/td&gt;</p>\r\n                                <p> &nbsp;&nbsp; &lt;/tr&gt;</p>\r\n                                <p> &nbsp; &lt;/tfoot&gt;</p>\r\n                                <p> &lt;/table&gt;</p>\r\n                            </p>\r\n\r\n                            <table border=\"1\">\r\n                                <colgroup>\r\n                                    <col width=\"50px\" style={{ background: \"red\" }} />\r\n                                    <col width=\"150px\" style={{ background: \"green\" }} />\r\n                                    <col width=\"250px\" style={{ background: \"blue\" }} />\r\n                                </colgroup>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th colSpan=\"2\"> 제목 </th>\r\n                                        <th rowSpan=\"3\"> 번호번호번호 </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td> 1번 </td>\r\n                                        <td> 1 </td>\r\n                                        <td> 1 </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <td> 2번 </td>\r\n                                        <td> 2 </td>\r\n                                        <td> 2 </td>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"detail태그\"> detail태그 </a></span>\r\n                        <p> 특징 : </p>\r\n                        <p> 1. block속성 </p>\r\n                        <p> 2. 메뉴를 펼치고 접는 것을 하는 태그 </p>\r\n                        <p> 속성 </p>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 1. open : html에서는 펼쳐진 상태로 , css에서는 펼쳐졌을때 details[open]</p>\r\n                            <p> &lt; details &gt; </p>\r\n                            <p> &nbsp;&nbsp;&lt; summary &gt; </p>\r\n                            <p> &nbsp;&nbsp;안에 내용적고 details를 써서 여러번 사용 가능</p>\r\n                            <p> &nbsp;&nbsp;&lt; /summary &gt; </p>\r\n                            <p> &lt; /details &gt; </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> </a></span>\r\n                        <p> 특징 : </p>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> </p>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HtmlBasic;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst HtmlDOM = (props) => {\r\n\r\n    const [scrollY, setScrollY] = useState(0);\r\n    // let common_height = document.getElementsByClassName('common_style')\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n        // console.log(new Date().getTime());\r\n        // console.log(document.documentElement.scrollTop);\r\n        console.log(document.getElementsByClassName('common_style')[0].scrollWidth);\r\n\r\n        document.documentElement.scrollTop > 800 ?\r\n            (blockRef.current[0].style.position = 'fixed') :\r\n            (blockRef.current[0].style.position = 'relative');\r\n        document.documentElement.scrollTop > 800 ?\r\n            (blockRef.current[1].style.left = '25%') :\r\n            (blockRef.current[1].style.left = '25%');\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <p> HTML DOM </p>\r\n                    </span>\r\n                    <p className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary className=\"col_g\"> test </summary>\r\n                            <a href=\"#\" className=\"col_p\"> test </a>\r\n                        </details>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\"> HTML DOM  </a> </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> element 위치관련 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <p> <i> offsetWidth </i> 엘리먼트의 너비 </p>\r\n                            <p> <i> offsetHeight </i> 엘리먼트의 높이 </p>\r\n                            <p> <i> offsetLeft </i> 엘리먼트의 x위치  </p>\r\n                            <p> <i> offsetTop </i> 엘리먼트의  y위치 </p>\r\n                            <p> <i> scrollWidth </i> 엘리먼트의 너비 </p>\r\n                            <p> <i> scrollHeight </i> 엘리먼트의 높이 </p>\r\n                            <p> <i> scrollLeft </i> 엘리먼트의 x위치 </p>\r\n                            <p> <i> scrollTop </i> 엘리먼트의 y위치 </p>\r\n                            <p> <i> clientWidth </i> </p>\r\n                            <p> <i> clientHeight </i> </p>\r\n                            <p> <i> clientLeft </i> </p>\r\n                            <p> <i> clientTop </i> </p>\r\n                            <p> <i> window.pageXOffset</i> </p>\r\n                            <p> <i> window.pageYOffset</i> </p>\r\n                            <p> <i> element.getBoundingClientRect().top</i> </p>\r\n                            <p> <i> element.getBoundingClientRect().bottom</i> </p>\r\n                            <p> <i> element.getBoundingClientRect().left</i> </p>\r\n                            <p> <i> element.getBoundingClientRect().right</i> </p>\r\n                            <p> <i> clientX </i> </p>\r\n                            <p> <i> pageX </i> </p>\r\n                            <p> <i> offsetX </i> </p>\r\n                            <p> <i> screenX </i> </p>\r\n                            <p> <i> offsetParent </i> </p>\r\n                            <p> <i> window.innerWidth </i> 뷰포트 값 </p>\r\n                            <p> <i> window.outerHeight </i> 전체화면(툴바,스크롤 포함) </p>\r\n                            <p> <i> screen.width</i> 사용자의 해상도 </p>\r\n                            <p> <i> </i> </p>\r\n                            <p> <i> </i> </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> element 요소  </a> </span>\r\n                        <p> <i> document.getElemenById('id태그 이름') </i> </p>\r\n                        <p> <i> document.getElemenById('id태그 이름') </i> </p>\r\n                        <span className=\"sblock\">\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> element 위치 </a> </span>\r\n                        <span className=\"sblock\">\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default HtmlDOM;\r\n\r\n","import React from 'react';\r\n\r\nconst CssBasic = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> 0. (하이퍼링크) </span>\r\n                <span className=\"mblock\">\r\n                    <p className=\"hyperlink\">\r\n                        <a href=\"#\"> </a>\r\n                        {/* <a href=\"#\"> </a> */}\r\n                    </p>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            {/* <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CssBasic;","import React from 'react';\r\n\r\nconst JspServletInformation = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"lblocknav_container\">\r\n                <span className=\"lblocknav\">\r\n                    <span className=\"mtitle\"> 0. 서블릿과 JSP(하이퍼링크) </span>\r\n                    <span className=\"mblock\">\r\n                        <p className=\"hyperlink\">\r\n                            <a href=\"#Servlet이란\">1. Servlet이란</a>\r\n                            <a href=\"#Servlet Lifecycle\">2. Servlet Lifecycle</a>\r\n                            <a href=\"#Servlet 장점\">3. Servlet 장점</a>\r\n                            <a href=\"#JSP란\">4. JSP란</a>\r\n                            <a href=\"#JSP변환과정\">5. JSP변환과정</a>\r\n                            <a href=\"#서블릿컨테이너의역할\">6. 서블릿컨테이너의역할</a>\r\n                        </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Servlet이란\"> 1. Servlet이란</a> </span>\r\n                    <p> 서블릿은 자바언어를 사용하여 클라이언트의 요청을 동적으로 처리하는 자바 클래스입니다. </p>\r\n                    <p> 현재는 클라이언트의 요청을 받아 어떤 작업을 해야할지 관리해주는 Controller의 역할을 한다</p>\r\n                    <p> CGI(Common GateWay Interface) 웹서버와 프로그램사이에서 주고 받는 방법, 구현된 언어와 체계가 다르기\r\n                        때문에 맞추어주는 하나의 규약 , Servlet은 자바에서 사용되는 CGI이다 </p>\r\n                    <p> 기존에 CGI는 멀티프로세스 방식으로 다수의 요청처리에 부하가 심하지만 Servlet은 멀티쓰레드\r\n                        방식으로 부하가 덜하다.\r\n                    </p>\r\n                    <span className=\"mblock\">\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/Servlet.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Servlet Lifecycle\"> 2. Servlet Lifecycle</a> </span>\r\n                    <p> 클라이언트가 요청을 하게 되면 서블릿의 생성에서 소멸되기 까지의 과정이다. </p>\r\n                    <p> Init() , Service() , Destroy()  3가지의 메서드로 구성된다. </p>\r\n                    <p> Init() : Servlet객체가 처음 생성될 때 실행된다 </p>\r\n                    <p> Service() : 클라이언트가 Servlet을 요청할 때 마다 실행된다 </p>\r\n                    <p> Destroy() : 서블릿객체가 소멸될 떄는 더이상 사용하지 않을 떄라고 되어있는데\r\n                        서버가 종료되거나 기존에 있던 서블릿객체의 내용이 새로 갱신되었을 경우 </p>\r\n                    <span className=\"mblock\">\r\n                        <p> 1. 클라이언트 요청 </p>\r\n                        <p> 2. 웹 컨테이너에서 클라이언트가 요청한 서블릿 객체가 있는지 확인 </p>\r\n                        <p> 3. 없으면 서블릿 객체를 생성</p>\r\n                        <p> 4. 서블릿 객체에 service()메소드를 실행 , 일반적으로 사용할 때는 HttpServlet클래스를\r\n                            상속받기 떄문에 요청된 방식에 따라 doGet(), doPost() 메소드로 사용한다\r\n                        </p>\r\n                        <p> 5. 그 다음 DAO,DB,JSP 등 다른 과정을 거치고 사용자에게 응답한다.</p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/Servlet_Lifecycle.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Servlet 장점\"> 3. Servlet 장점 </a> </span>\r\n                    <p> 1. 자바기반으로 Java API를 사용이 가능하다 </p>\r\n                    <p> 2. 쓰레드를 이용하기 떄문에 클라이언트의 요청에 대해 자원을 효율적으로 사용가능한다 </p>\r\n                    <p> 다수의 클라이언트가 요청하면 서블릿 객체를 여러개를 만드는 것이 아니라 한개의 서블릿 객체만을 만들고\r\n                        쓰레드를 이용하여 객체가 접근하므로 효율적으로 작동이 가능하다 </p>\r\n                    <p> 3. 비즈니스 로직(서비스) 과 프레젠테이션(클라이언트가 보는 화면)의 분리가 가능하다 </p>\r\n                    <p> 4. 업무분담이 좋아지고 , 유지보수가 수월하며 , 기능확장도 좋다  </p>\r\n                    <p> 단점 : 서블릿에는 HTML 코드가 섞여있어 불편함 -&gt; JSP로 어느정도 해결</p>\r\n                    <span className=\"mblock\">\r\n                        <p>  </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"JSP란\"> 4. JSP란 </a> </span>\r\n                    <p> Java Servet Page로 자바환경에서 HTML을 처리  </p>\r\n                    <p> JSP파일은 Servlet파일로 변환이 되어서 사용  </p>\r\n                    <p> 과거의 서블릿은 HTML + Java 혼합, 보기도 불편하고,\r\n                        로직도 작성하기 힘들고,\r\n                        HTML코드 때문에 매번 컴파일 과정을 거쳐야함</p>\r\n                    <p> HTML(프레젠테이션 로직,사용자가보는화면)은 JSP가 처리</p>\r\n                    <p> Java(비즈니스 로직, 서비스처리 과정)은 Servlet가 처리</p>\r\n                    <span className=\"mblock\">\r\n                        <p>  </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"JSP변환과정\"> 5. JSP변환과정 </a> </span>\r\n                    <p> 1. 웹 컨이너가 Servlet객체가 있는지 판단(변환된 JSP객체) </p>\r\n                    <p> 2. Jsp를 Java소스파일로 변환 </p>\r\n                    <p> 3. Java소스파일을 컴파일 하여 Servlet클래스로 변환 </p>\r\n                    <p> 4. Servlet클래스를 사용 </p>\r\n                    <span className=\"mblock\">\r\n                        <p> JSP 또한 서블릿이므로 LifeCycle을 가진다</p>\r\n                        <p> JSP의 장점으로 JSP의 파일 내부의 값이 자동으로 변환이 된다 </p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/JSP_Lifecycle.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"서블릿컨테이너의역할\"> 6. 서블릿컨테이너의역할 </a> </span>\r\n                    <p> 서블릿 컨테이너의 역할 </p>\r\n                    <p> 1. 서블릿 생명주기 관리</p>\r\n                    <p> 2. 웹 서버와의 통신 지원</p>\r\n                    <p> 3. 멀티쓰레드 지원 및 관리</p>\r\n                    <p> 4. xml 파일 등 관리 </p>\r\n                    <span className=\"mblock\">\r\n                        <p> 클라이언트가 요청할 때 서블릿컨테이너가 하는 역할</p>\r\n                        <p> 아래의 순서는 약간 차이가 있을 수 있지만 과정은 아래와 같습니다</p>\r\n                        <p> 1. HttpServletRequest객체, HttpServletResponse객체 생성</p>\r\n                        <p> 2. 쓰레드 생성 </p>\r\n                        <p> 3. 생성된 객체를 쓰레드에게 전달</p>\r\n                        <p> 4. xml 파일을 참조하여 URL을 분석하고 어느 서블릿을 요청할지 찾음</p>\r\n                        <p> 5. 사용자가 요청한 서블릿 호출</p>\r\n                        <p> 6. 쓰레드가 서블릿에서 doGet(),doPost() 실행시켜 동적페이지를 Response()객체에 보관</p>\r\n                        <p> 7. Responser() 객체를 HttpResponse()형태로 전환하고 쓰레드와 응답,요청 객체 소멸</p>\r\n                        <p> 8. 클라이언트 응답을 보냄( WAS -&gt; 웹서버로 이동 )</p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/ServletContainer.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"JSP변환과정\"> 7. Servlet사용하기 </a> </span>\r\n                    <p> 1. 웹 컨이너가 Servlet객체가 있는지 판단(변환된 JSP객체) </p>\r\n                    <p> 2. Jsp를 Java소스파일로 변환 </p>\r\n                    <p> 3. Java소스파일을 컴파일 하여 Servlet클래스로 변환 </p>\r\n                    <p> 4. Servlet클래스를 사용 </p>\r\n                    <span className=\"mblock\">\r\n                        <p> JSP 또한 서블릿이므로 LifeCycle을 가진다</p>\r\n                        <p> JSP의 장점으로 JSP의 파일 내부의 값이 자동으로 변환이 된다 </p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/JSP_Lifecycle.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JspServletInformation;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringError = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b> 스프링 공부 </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> 자바 문법 </summary>\r\n                            <a href=\"#Optional\" className=\"col_p\"> Optional </a>\r\n                            <a href=\"#Stream\" className=\"col_p\">Stream </a>\r\n                            <a href=\"#함수의 종류\" className=\"col_p\">함수의 종류</a>\r\n                            <a href=\"#Assertion\" className=\"col_p\">Assertion </a>\r\n                            <a href=\"#자료구조 map\" className=\"col_p\">자료구조 map </a>\r\n                            <a href=\"#Enum\" className=\"col_p\">Enum </a>\r\n                            <a href=\"#Generic\" className=\"col_p\">Generic </a>\r\n                            <a href=\"#\" className=\"col_p\"> </a>\r\n                            {/* <a href=\"#\" className=\"col_p\"> </a> */}\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"자바 문법\"> 자바 문법 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Optional </span>\r\n                            <p> T타입의 객체를 포장해주는 래퍼 클래스 </p>\r\n                            <p> Null을 예외처리하지 않고 처리가 가능하다는 장점이 있다. </p>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.isEmpty() \"} </i> : 값이 존재하는지 boolean값 리턴 </p>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.orElseGet() \"} </i> : 저장된 값이 존재하면 값을 반환 값이 없으면 인수로 전달된\r\n                                        람다 표현식 결과값 반환 </p>\r\n                                </span>\r\n                                <p> 시작 처리 : 옵셔널 객체 생성 메소드 </p>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\"Optional.of()\"} </i> : 저장된 값이 존재하면 입력된 값을 반환 없으면\r\n                                        인수로 전달된 예외를 발생 </p>\r\n                                    <p>  Optional&lt;String&gt; opt = Optional.of(\"result\"); </p>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\"Optional.ofNullable()\"} </i> : value가 null인 경우 Optional 반환</p>\r\n                                    <p> Optional&lt;String&gt; opt = Optional.ofNullable(객체); </p>\r\n                                    <p> 객체가 존재하지 않으면 return Optional.empty + 에러발생</p>\r\n                                    <p> 객체가 존재하면 return Optional객체 </p>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\"Optional.empty()\"} </i> : 비어있는 Optional 객체 생성, Optional을 null로 초기화하기도 함 </p>\r\n                                    <p> Optional&lt;String&gt; opt = Optional.empty(); </p>\r\n                                </span>\r\n                                <p> 중간 처리 , 옵셔널 객체가 생성된 후 사용가능, 아래 메서드는 옵셔널 객체를 반환 </p>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.ifPresent() \"} </i> : </p>\r\n                                    <p> Optional.of(\"객체\").ifPresent((value) {\"->\"} {\"{\"} {\"}\"} );</p>\r\n                                    <p> Optional.ofNullable(null).ifPresent((value) {\"->\"} {\"{\"} {\"}\"} );</p>\r\n                                </span>\r\n                                <p> 종단 처리 , 옵셔널 객체의 체이닝을 끝냄 </p>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.ifPresent() \"} </i> : </p>\r\n                                    <p> Optional.of(\"객체\").ifPresent((value) {\"->\"} {\"{\"} {\"}\"} );</p>\r\n                                    <p> Optional.ofNullable(null).ifPresent((value) {\"->\"} {\"{\"} {\"}\"} );</p>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.isPresent() \"} </i> : 객체가 존재하는지 여부 판단, 있으면 true </p>\r\n                                    <p>  {\" Optional.ofNullable(객체).isPresent(); \"} : 객체가 존재하는지 여부 판단, 있으면 true </p>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.get() \"} </i> : 객체를 꺼냄, 비어있는 옵셔널 객체면 예외 발생 </p>\r\n                                    <p>  {\" Optional.ofNullable(null).get(); \"}  </p>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.orElse() \"} </i> : 옵셔널 객체가 비어있든,아니든 실행 기본값으로 제공할 객체를 지정 </p>\r\n                                    <p>  {\" Optional.ofNullable(null).orElse(객체);\"} </p>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.orElseGet() \"} </i> : 옵셔널 객체가 비어있을때만 실행 , 기본갑으로 제공할 공급자함수 지정 </p>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <p> <i> {\" opt.orElseThrow() \"} </i> : (자바10)옵셔널 객체가 비어있으면 , 예외 공급자함수를 통해 예외 발생 </p>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                        </span>\r\n                    </span> */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"sstitle\"> <a name=\"Stream\"> Stream </a> </span>\r\n                        <p> 스트림은 배열 또는 컬렉션 인스턴스를 이용해서 사용 가능</p>\r\n                        <span className=\"sblock\">\r\n                            <p> 배열 스트림</p>\r\n                            <p> {\"Stream<String> stream = Arrays.stream(arr)\"} </p>\r\n                            <p> {\"Stream<String> streamOfArrayPart = Arrays.stream(arr,1,3)\"} </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p> 컬렉션 스트림</p>\r\n                            <p> {\"public interface Collection<E> extends Iterable<E>\"} </p>\r\n                            <p> {\"default Stream<E> stream() \"} </p>\r\n                            <p> {\" return StreamSupport.strea(spliterator(),false);\"} </p>\r\n                            <p> {\" \"}</p>\r\n                            <p> {\" Stream<String> stream = list.stream(); \"}</p>\r\n                            <p> {\" Stream<String> parallelStream = list.parallelStream(); \"}</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"sstitle\"> <a name=\"함수의 종류\"> 함수의 종류</a> </span>\r\n                        <span className=\"sblock\">\r\n\r\n                            <p> <a href=\"https://moreget.github.io/dev-00000061-Java-Consumer_Supplier/\" target=\"_blank\"> 참고 사이트 </a> </p>\r\n                            <p> Consumer : 매개값은 있고 리턴값은 없음 </p>\r\n\r\n                            <p> Supplier : 매개값은 없고, 리턴값은 있음</p>\r\n\r\n                            <p> Function : 매개값을 (주로)리턴값으로 반환 </p>\r\n\r\n                            <p> Operator : 매개값으로 연산하고 리턴 반환</p>\r\n\r\n                            <p> Predicate : 매개값은 있고 리턴은 boolean반환 </p>\r\n                        </span>\r\n\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"sstitle\"> <a name=\"Assertion\"> Assertion </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <p> 코드가 잘 작성되었는지 확인하는데 돕는 기능이다. 예외 처리와 비슷하기는\r\n                                하지만 예외처리는 개발자가 생각하지 못한 에러에 대한 처리를 담당하는 것이다.\r\n                            </p>\r\n                            <p> Assertion은 개발자가 정한 조건을 만족시키면 코드가 실행되고 그 외에는 실행되지\r\n                                못하게 하는 차이가 있다.\r\n                            </p>\r\n                            <p> Assertion을 적당한 위치에 배치시켜 사용하면 좋은 동작을 수행할 수 있다. 반대로\r\n                                모든 상황에 적용시키면 좋지 않다.\r\n                            </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"sstitle\"> <a name=\"자료구조 map\"> 자료구조 map </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <p> {\"Map<자료형,자료형> Map객체명 = new HashMap<>(); \"}</p>\r\n                            <p> 메서드 종류 </p>\r\n                            <p> <i> Map객체.put(키,값) </i> : 맵객체에 추가 </p>\r\n                            <p> <i> Map객체.keys() </i> : 객체의 키만 담은 배열 반환 </p>\r\n                            <p> <i> Map객체.values() </i> : 객체의 값만 담은 배열 반환 </p>\r\n                            <p> {\"Collection<String> values = map.values();\"}</p>\r\n                            <p> {\"String[] arr = values.toArray(new String[0]);\"}</p>\r\n                            <p> {\"List<String> list = new ArrayList<>(values);\"}</p>\r\n                            <p> {\"Set<String> set = new HashSet<>(values);\"}</p>\r\n                            <p> <i> Map객체.entries() </i> : 객체의 [키,값] 담은 배열 반환 </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"sstitle\"> <a name=\"Enum\"> Enum </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <small> 상수들로 만들어진 집합, 열거형 클래스</small>\r\n                            <p> enum 클래스를 만들고 사용할 때는 enum클래스.값 , enum클래스[인덱스] 처럼 사용</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"sstitle\"> <a name=\"Generic\"> Generic </a> </span>\r\n                        <small> 자료형 타입을 정해서 사용하는 메소드 </small>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Generic </span>\r\n                            <ul>\r\n                                <span className=\"sstitle\"> Generic Class</span>\r\n                                <p> public class 클래스명{'<T>'}  </p>\r\n                                <p> 클래스명{'<T>'} 객체명 = new 클래스{'<>'}() </p>\r\n                                <span className=\"sstitle\"> Generic Method </span>\r\n                                <p> public static {'<T>'} void 메소드명(T array)  </p>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <p>  </p>\r\n\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 제너릭 타입 이름 정하기 </span>\r\n                            <ul>\r\n                                <li> E : 요소(Element, 자바 컬렉션)  </li>\r\n                                <li> K : 키  </li>\r\n                                <li> N : 숫자  </li>\r\n                                <li> T : 타입  </li>\r\n                                <li> V : 값  </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Generic WildCard </span>\r\n                            <p> {'<?>'} : 모든 타입의 인자를 받을 수 있음  </p>\r\n                            <p> {'<? extends 부모클래스>'} : 부모 클래스의 자식 클래스를 인자로 받음,\r\n                                하지만 부모클래스의 정의된 기능만 사용가능하다?  </p>\r\n                            <p> {'<? super 자식클래스>'} : 자식클래스의 부모클래스를 인자로 받음  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Generic example </span>\r\n                            <p> ArrayList{'<T>'} array = new ArrayList{'<>'}(); </p>\r\n                            <p> 클래스{'<T extends 부모클래스>'} </p>\r\n                        </span>\r\n\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"sstitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <small>  </small>\r\n                            <p> </p>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"sstitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <small>  </small>\r\n                            <p> </p>\r\n                        </span>\r\n                    </span> */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringError;\r\n\r\n","import React from 'react';\r\n\r\nconst JspServletBasic = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> 0. 서블릿과 JSP(하이퍼링크) </span>\r\n                <span className=\"mblock\">\r\n                    <p className=\"hyperlink\">\r\n                        <a href=\"#HttpServlet 클래스\">1. HttpServlet 클래스 </a>\r\n                        <a href=\"#HttpServletRequest 클래스\">2. HttpServletRequest 클래스 </a>\r\n                        <a href=\"#HttpServletResponse 클래스\">3.HttpServletResponse 클래스 </a>\r\n                        <a href=\"#HttpSession 클래스\">4.HttpSession 클래스 </a>\r\n                        <a href=\"#JSP 커스텀태그\">JSP 커스텀태그 tag방식 </a>\r\n                        <a href=\"#JSP커스텀태그2 tld방식\">JSP커스텀태그2 tld방식</a>\r\n                        <a href=\"#JSP커스텀태그3\">JSP커스텀태그3</a>\r\n                        <a href=\"#JSTL\">JSTL </a>\r\n                    </p>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSP커스텀태그\"> JSP 커스텀태그 </a> </span>\r\n                <a href=\"https://gangzzang.tistory.com/entry/JSP-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%83%9C%EA%B7%B8Custom-Tag\" target=\"_blank\"> 참고사이트</a>\r\n                <p> 1. WEB-INF - tags 폴더 - 태그파일명.tag파일 </p>\r\n                <p> 2. .tag에서 커스텀태그 정의 </p>\r\n                <span className=\"mblock\">\r\n                    <p> <i> &lt;%@tag language=\"java\" pageEncoding=\"UTF-8\" body-content=\"empty\"%&gt;</i> : 태그 파일의 정보 명시</p>\r\n                    <span className=\"sblock\">\r\n                        <p> <i> body-content = </i>  empty: 몸체가 없음 , scriptless: (스트립틀릿,스크립팅,선언문)은 올수없음, tagdependent: 태그를 몸체로 사용\r\n                            ,JSP: JSP에 들어가는 내용이면 모두 가능\r\n                        </p>\r\n                    </span>\r\n                    <p> <i> &lt;%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%&gt; </i>\r\n                        :  태그파일에서 사용할 태그라이브러리 명시</p>\r\n                    <p> <i> &lt;%@ tag import =\"java.util.Arraylist\" %&gt;</i> : 자바 클래스 임포트 </p>\r\n                    <p> <i> &lt;%@ attribute name=\"매개변수\"%&gt;</i> : JSP에서 매개변수로 받아와 {\"${매개변수}\"}와 같이 사용 </p>\r\n                    <p> 나머지는 HTML 코드 작성 </p>\r\n                </span>\r\n                <p> 3. JSP에서 커스텀태그 사용 </p>\r\n                <span className=\"mblock\">\r\n                    <p> &lt;%@ prefix=\"사용할커스텀태그이름 taglib tagdir=\"/WEB-INF/tags\"\"%&gt; </p>\r\n                    <p> &lt;사용할커스텀태그이름:태그파일명 매개변수=\"값\"/&gt; </p>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSP커스텀태그2 tld방식\">JSP커스텀태그2 tld방식 </a> </span>\r\n                <p> 1. WEB-INF - tld 폴더 - 태그파일명.tld파일 </p>\r\n                <p> 2. .tld에서 커스텀태그 참고 </p>\r\n                <span className=\"mblock\">\r\n                    <p> {\"<taglib>\"} </p>\r\n                    <p> {\"<tag>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<name>student</name>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<tag-class>패키지.TagHandler클래스</tag-class>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<body-content>scriptless</body-content>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<attribute>\"} </p>\r\n                    <p> &nbsp;&nbsp;&nbsp;&nbsp;{\"<name>border</name>\"} </p>\r\n                    <p> &nbsp;&nbsp;&nbsp;&nbsp;{\"<required>true</required>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"</attribute>\"} </p>\r\n                    <p> {\"</tag>\"} </p>\r\n                    <p> {\"/taglib\"} </p>\r\n                </span>\r\n                <p> 3. jsp에서 커스텀태그 사용 </p>\r\n                <span className=\"mblock\">\r\n                    <p> <i> &lt;taglib uri=\"/WEB-INF/tld/stutag.tld\" prefix=\"mytag\"%&gt; </i>\r\n                        :  태그파일에서 사용할 태그라이브러리 명시</p>\r\n                    <p> <i> &lt;mytag:student border=\"10\"&gt;학생 목록&lt;/mytag:student&gt;</i> : 자바 클래스 임포트 </p>\r\n                </span>\r\n                <p> 4. .java 정의 </p>\r\n                <p> 파일명은 TagHandler 처럼 사용하는 것 같다</p>\r\n                <span className=\"mblock\">\r\n                    <p> SimpleTagSupport 클래스 상속</p>\r\n                    <p> public void doTag()에 정의하고 사용</p>\r\n                    <p> 추가 사용방법은 나중에 인터넷 참고 </p>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JspServletBasic;","import React from 'react';\r\n\r\nconst JspServletBulletinBoard = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> 0. 서블릿과 JSP(하이퍼링크) </span>\r\n                <span className=\"mblock\">\r\n                    <p className=\"hyperlink\">\r\n                        <a href=\"#서블릿 실행하기\">1. 서블릿 실행하기 </a>\r\n                    </p>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"서블릿 실행하기\"> 1. MVC2 모델 설계 </a> </span>\r\n                <p> 게시판을 만들기 위하여 설계를 먼저 대략하고 진행 </p>\r\n                <span className=\"mblock\">\r\n                    {/* <p> <img src={process.env.PUBLIC_URL + '/img/Servlet.png'} /> </p> */}\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JspServletBulletinBoard;","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst JspServletJstl = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> 0. JSTL (하이퍼링크) </span>\r\n                <span className=\"mblock\">\r\n                    <p className=\"hyperlink\">\r\n                        <a href=\"#JSTL core tag\"> 1. JSTL core tag </a>\r\n                        <a href=\"#JSTL function tag\"> 2. JSTL function tag </a>\r\n                        <a href=\"#JSTL formatting tag\"> 3. JSTL formatting tag </a>\r\n                        <a href=\"#JSTL XML tag\"> 4. JSTL XML tag </a>\r\n                        <a href=\"#JSTL SQL tag\"> 5. JSTL SQL tag </a>\r\n                        {/* <a href=\"#\"> </a> */}\r\n                    </p>\r\n                </span>\r\n            </span>\r\n            {/* <a href=\"https://gangzzang.tistory.com/entry/JSP-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%83%9C%EA%B7%B8Custom-Tag\" target=\"_blank\"> 참고사이트</a> */}\r\n            <span className=\"lblock\">\r\n                <p> <a href=\"https://velog.io/@ye050425/JSP-JSTL-%EC%A0%95%EB%A6%AC\" target=\"_blank\">참고사이트</a> </p>\r\n                <p> JSTL: 커스텀태그 기술을 이용해서 일반적으로 많이 사용되는 기능들을 표준화한것 </p>\r\n                <p> 접근 가능한 내장 객체 4종류 : application,session,request,page </p>\r\n                <span className=\"mtitle\"> <a name=\"JSTL core tag\">  1. JSTL core tag </a> </span>\r\n                <p> &lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt; </p>\r\n                <p> 변수지원, URL관리, 흐름 제어 등</p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:out\">  1. JSTL c:out </a> </span>\r\n                    <p> HTML 화면에 출력 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:out value=\"${\"{\"}출력할 내용{\"}\"}\" &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:if\">  2. JSTL c:if </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:if test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &lt; /c:if &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:choose,when,otherwise\">  3. JSTL c:choose,when,otherwise </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:choose &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:when test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:when &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:when test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:when &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:otherwise&gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:otherwise &gt;</p>\r\n                        <p> &lt; /c:choose &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:foreach\">  4. JSTL c:foreach </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forEach var=\"i\" begin=\"1\" end=\"2\" step=\"1\" &gt;</p>\r\n                        <p> &lt; /c:forEach&gt;</p>\r\n                    </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forEach var=\"i\" items=\"${\"키\"}\" &gt;</p>\r\n                        <p> &lt; /c:forEach&gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:param\">  5. JSTL c:param </a> </span>\r\n                    <p> URL 매개변수를 추가 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:url value=\"/경로\" var=\"URL경로값(get방식으로출력)\" &gt;</p>\r\n                        <p> &lt; c:param name=\"키\" value=\"값\" / &gt;</p>\r\n                        <p> &lt; c:param name=\"키\" value=\"값\" / &gt;</p>\r\n                        <p> &lt; /c:url  &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:set\">  6. JSTL c:set </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:set var=\"키\" scope=\"session\" value=\"${\"{\"}값{\"}\"}\" /&gt;</p>\r\n                        <p> &lt; c:out value=\"${\"{\"}키{\"}\"}\" /&gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:import\">  7. JSTL c:import </a> </span>\r\n                    <p> jsp에 inlcude와 비슷 </p>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:forTokens\">  8. JSTL c:forTokens </a> </span>\r\n                    <p> 문자열을 토큰으로 분리하여 사용, foreach와 비슷 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forTokens items=\"문자열\" delims=\"구분문자\" var=\"키\"  &gt;</p>\r\n                        <p> &lt; /c:forTokens &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:catch\">  9. JSTL c:catch </a> </span>\r\n                    <p> 에러가 발생할 경우 예외처리 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:catch var=\"키\" &gt;</p>\r\n                        <p> &lt; /c:catch  &gt;</p>\r\n                        <p> c:if test=\"${\"{\"} 예외키 != null {\"}\"}\"</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:redirect\">  10. JSTL c:redirect </a> </span>\r\n                    <p> 리다이렉트 처리 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:redirect url=\"주소\" &gt;</p>\r\n                        <p> &lt; c:param name=\"\" &gt; 값 &lt; /c:param&gt; </p>\r\n                        <p> &lt; /c:redirect &gt;</p>\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL function tag\">  2. JSTL function tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL formatting tag \"> 3. JSTL formatting tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL XML tag \"> 4. JSTL XML tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL SQL tag\"> 5. JSTL SQL tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            {/* <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                <span className=\"mblock\">\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JspServletJstl;","import React from 'react';\r\n\r\nconst Blank = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"lblocknav_container\">\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\"> 0. JSP EL (하이퍼링크) </span>\r\n                    <span className=\"mblock\">\r\n                        <p className=\"hyperlink\">\r\n                            <details className=\"list_style\">\r\n                                <summary className=\"list_style\"> 123123123 </summary>\r\n                                <p> 123123123 </p>\r\n                                <details>\r\n                                    <summary> 123123123 </summary>\r\n                                    <p> 123123123 </p>\r\n                                </details>\r\n                            </details>\r\n                            <details className=\"list_style\">\r\n                                <summary className=\"list_style\"> 123123123 </summary>\r\n                                <p> 123123123 </p>\r\n                                <details>\r\n                                    <summary> 123123123 </summary>\r\n                                    <p> 123123123 </p>\r\n                                </details>\r\n                            </details>\r\n                            {/* <a href=\"#\"> </a> */}\r\n                        </p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" >\r\n                {/* <a href=\"https://gangzzang.tistory.com/entry/JSP-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%83%9C%EA%B7%B8Custom-Tag\" target=\"_blank\"> 참고사이트</a> */}\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"sblock\">\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n                {/* <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span> */}\r\n            </div>\r\n        </ >\r\n    );\r\n}\r\n\r\nexport default Blank;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Jdbc = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b>  </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary>  </summary>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n\r\n                    <span className=\"mtitle\"> <a name=\"JDBC\">  JDBC </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> JDBC 이클립스 초기 설정  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"sblock\">\r\n                                <p>   1. jdbc 빌드 패스 추가 2.빨간줄 예외처리 </p>\r\n                                <span className=\"mblock\">\r\n                                    <ul>\r\n                                        <li> String url = \"jdbc:oracle:thin:@localhost:1521/xepdb1\";</li>\r\n                                        <li> String sql = \"SELECT * FROM MEMBER\";</li>\r\n                                        <li> Class.forName(\"oracle.jdbc.driver.OracleDriver\"); //드라이버 클래스 호출</li>\r\n                                        <li> Connection con = DriverManager.getConnection(url,\"TEST\",\"1234\"); //데이터 원본과 연결</li>\r\n                                        <li> Statement st = con.createStatement(); /쿼리완성?, 질의문장을 담아 인자로 전달</li>\r\n                                        <li> PreparedStatement st = con.prepareStatement(sql); //쿼리미완성? 위치값이 있을때? insert</li>\r\n                                        <li> ResultSet cursor = st.executeQuery(sql); , st.Set자료형(콜럼,넣을값) , st.executeUpdate();</li>\r\n                                        <li> //resultset은 그릇 , executeQuery : 래코드를 가리키는 커서</li>\r\n                                        <li> //executeQuery는 selec에서 데이터타입 전달 , executeUpdate는 DML에서 int타입 전달 </li>\r\n                                        <li> //오류가 날경우 SQL문법이 틀리거나, 패러미터 값이 틀리거나, 이클과SQL 인코딩 방식이 틀렸을떄</li>\r\n                                        <li> while(cursor.next()) {'String id = cursor.getString(“ID”);'}</li>\r\n                                        <li> {'System.out.println(id);'}</li>\r\n                                        <li> //try-resouce문으로 처리하면 안적어도됨</li>\r\n                                        <li> rs.close();</li>\r\n                                        <li> st.close();</li>\r\n                                        <li> con.close();</li>\r\n                                    </ul>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span> */}\r\n\r\n\r\n\r\n\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Jdbc;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst ReactBasic = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b>  </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary>  </summary>\r\n                            <a href=\"#프로젝트 설정\">1. 프로젝트 설정 </a>\r\n                            <a href=\"#리액트 깃허브에 올리기\">2. 리액트 깃허브에 올리기 </a>\r\n                            <a href=\"#리액트의 구조\">3. 리액트의 구조 </a>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <p> <img src={process.env.PUBLIC_URL + '/img/Servlet.png'} /> </p> */}\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 1. 프로젝트 설정 </a> </span>\r\n                <p> <i> 1. </i>  Node.js 설치를하고 cmd에서 설치되었는지 확인, node -v , npm -v </p>\r\n                <p> <i> 2. </i> Vscode 설치 </p>\r\n                <p> <i> 3. </i> cmd에서 cd React시작할폴더명 </p>\r\n                <p> <i> 4. </i> yarn create react-app 리액트폴더 혹은 npm create react-app 리액트폴더명 (폴더생성됨)</p>\r\n                <p> <i> 4.1 </i> 만약에 yarn이 설치되지 않는다면 npm install -g yarn </p>\r\n                <p> <i> 5. </i> cd 리액트폴더명 </p>\r\n                <p> <i> 6. </i> npm start  입력하여서 잘 작동되나 확인 </p>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"리액트 깃허브에 올리기\"> 2. 리액트 깃허브에 올리기 </a> </span>\r\n                <p><i>1.</i> github에 가서 저장소를 하나 만들기 (read.me 파일없이만들기)</p>\r\n                <p><i>2.</i> 만든 상태로 창을 가만히 놔두기( 복붙할 내용이 존재함)</p>\r\n                <p><i>3.</i> 리액트로 돌아와서 npm install gh-pages --save-dev 입력 </p>\r\n                <p><i>4.</i> 리액트 폴더에 pakage.json 파일을 열어서 아래와 같이 넣어주기</p>\r\n                <p><i>5.</i> 위쪽에 name위에 \"homepage\": \"http://깃허브유저명.github.io/저장소이름\"</p>\r\n                <p><i>6.</i> \"scripts: 부분 안에 \"predeploy\": \"npm run build\",  \"deploy\": \"gh-pages -d build\",</p>\r\n                <p><i>7.</i> 터미널 창에 git init 입력 (깃폴더 생성됨)</p>\r\n                <p><i>8.</i> 깃허브 창에서 git remote ~ 부분을 복붙해서 붙여넣기 </p>\r\n                <p><i>9.</i> npm run deploy <small> build 하는 과정 </small> </p>\r\n                <p><i>10.</i> git add . <small> 깃허브에 올릴 깃을 만드는 과정? </small> </p>\r\n                <p><i>11.</i> git commit -m \"커밋내용\" <small>커밋</small> </p>\r\n                <p><i>12.</i> git push -u origin master <small> 깃허브에 master 브랜치에 push </small> </p>\r\n                <p> 다음부터는 9~12 번만 반복하여서 사용</p>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"리액트의 구조\"> 3. 리액트 기초 설명 </a> </span>\r\n                <p><i>1.</i> JSX파일로 JS파일과는 차이가 있다. </p>\r\n                <p><i>2.</i> 페이스북에서 만든 오픈 소스 자바스크립트 UI라이브러리 </p>\r\n                <p><i>3.</i> 컴포넌트 형태로 사용이된다. </p>\r\n                <p><i>4.</i> HTML class를 className , for을  htmlFor 와 같이 약간의 차이가 있다. </p>\r\n                <p><i>5.</i> lower Camel Case 방식을 사용한다. </p>\r\n                <p><i>6.</i> .jsx파일은 대문자로 시작한다. </p>\r\n                <p><i>7.</i> {\"{\"}{\"}\"} 중괄호를 이용하면 변수들을 처리한다. </p>\r\n                <p><i>8.</i> 컴포넌트에서 사용한 리소스를 회수하는 것이 중요하다. </p>\r\n                <p><i>9.</i> 싱글 페이지이므로 렌더링을 부분적으로 일어나게 해야한다.</p>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 4. 리액트 코드 돌려보기 </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 5. css적용 방법 </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 6. 함수 </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 7. 조건문 </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 8. 반복문 </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 9. 컴포넌트 </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 10. Props </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 11. useState </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 12. useRef </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 13. useEffect </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 14. ReactHook </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 15. ReactRouter </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 16. React에 Emmet추가하는법 </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"프로젝트 설정\"> 17. React Redux </a> </span>\r\n                <span clsssName=\"mblock\">\r\n\r\n                </span>\r\n            </span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReactBasic;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringError = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#\" className=\"col_b\"> <b> 스프링 오류나 에러 </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> 에러 모음 </summary>\r\n                            <a href=\"#\" className=\"col_p\"> </a>\r\n                            {/* <a href=\"#\" className=\"col_p\"> </a> */}\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\"> 스프링 오류나 에러 </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> To display the conditions report re-run your application with 'debug' enabled </span>\r\n                            <p> 1. run &gt; edit configuration</p>\r\n                            <p> 2. enable debug output 체크해제 </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> hibernate나 DB연결문제 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured </span>\r\n                            <span className=\"sstitle\"> org.hibernate.service.spi.ServiceException: Unable to create requested service </span>\r\n                            <p> DB에 연결하는 설정 정보가 없어서 발생하는 에러이다. application.properties나 yml, xml 파일등에 datasource관련 코드를\r\n                                추가하며 해결이 된다. </p>\r\n                            <span className=\"mblock\">\r\n                                <p> spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver  </p>\r\n                                <p> spring.datasource.url=jdbc:mysql://localhost:3306/스키마이름?characterEncoding=UTF-8\r\n                                    &amp;serverTimezone=UTC  </p>\r\n                                <p> spring.datasource.username=DB유저이름  </p>\r\n                                <p> spring.datasource.password=DB유저비번  </p>\r\n                            </span>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"인텔리제이 한글 꺠짐\"> 인텔리제이 한글 꺠짐  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 파일 설정 encoding 바꾸기 </span>\r\n                            <p> ctrl+alt+s - settings - editor - file encodings </p>\r\n                            <p> Global Encoding , Project Encoding , Default encoding for properties files 3곳 UTF-8로 변경</p>\r\n                            <span className=\"sstitle\"> 인텔리제이 VM Options 바꾸기 </span>\r\n                            <p> Help - Edit Custom VM Options </p>\r\n                            <p> 제일 아래에 -Dfile.encoding=UTF-8 코드 추가 </p>\r\n                            <span className=\"sstitle\"> 톰캣 VM Options 바꾸기 </span>\r\n                        </span>\r\n                    </span>\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                        </span>\r\n                    </span> */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringError;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringCode = (props) => {\r\n\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#\" className=\"col_b\"> <b> Eclipse Bean Xml Injection </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> 스프링 코드 정리 </summary>\r\n                            <a href=\"#이클립스 applicationContext.xml\"> 이클립스 applicationContext.xml </a>\r\n                            <a href=\"#cmd창으로 빌드하고 실행해보기\"> cmd창으로 빌드하고 실행해보기 </a>\r\n                            <a href=\"#어노테이션\"> 어노테이션 </a>\r\n                            <a href=\"#xml과 어노테이션에서 관리할것\"> xml과 어노테이션에서 관리할것 </a>\r\n                            <a href=\"#Spring Security\"> Spring Security </a>\r\n                            <a href=\"#Spring Security Filter xml 설정\"> Spring Security Filter xml 설정 </a>\r\n                            <a href=\"#Spring Security Gradle 설정\"> Spring Security Gradle 설정 </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Directory_1.PNG'} alt='' /> </p> */}\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> 스프링 코드 정리 </span>\r\n                    <p> <small>  </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"이클립스 applicationContext.xml\">  이클립스 applicationContext.xml </a> </span>\r\n                        <p> <small> 이클립스 applicationContext.xml 사용법 </small> </p>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> &lt; bean &gt; </i>  </p>\r\n                            <p> 기본 생성자가 필요하다. </p>\r\n                            <p> <small> &lt; bean class=\"패키지.클래스명\" id=\"사용할빈이름\" init-method=\"메소드\" destroy-method=\"메소드\"\r\n                                lazy-init=\"false(default)\" scope=\"singleton(default)\" /&gt; </small> </p>\r\n                            <p> init-method=\"메소드() : 빈 객체가 생성될 떄 실행되는 메소드 </p>\r\n                            <p> destroy-methode=\"메소드() : 빈 객체가 사라질 떄 실행되는 메소드 </p>\r\n                            <p> lazy-init=\"false(default) : 빈 객체를 사용할 때 생성할지 말지 결정 </p>\r\n                            <p> scope=\"singleton(default) : 빈 객체를 하나만 사용하게 할지 말지 결정</p>\r\n                            <span className=\"lblock\">\r\n                                <p className=\"sstitle\" ><i> &lt; constructor-arg ref=\"\" &gt; </i>  </p>\r\n                                <p><small> &lt; constructor-arg ref=\"sw\" / &gt;  </small></p>\r\n                                <p><small> &lt; bean class=\"coupling.AppleWatch\" id=\"sw\" lazy-init=\"true\" / &gt;  </small></p>\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> &lt; import &gt; </i>  </p>\r\n                            <p><small> &lt; import resource=\"~~.xml\" / &gt;  </small></p>\r\n                            <p> resource : 다른 xml파일을들 불러모음(하나의 xml로 합치는 방법)  </p>\r\n                            <p> &lt;  &gt;  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> &lt; 어노테이션 설정 &gt; </i>  </p>\r\n                            <p> applicationContext.xml 파일 우클릭 - open with - Spring Config Editor 그리고 appliactionContext.xml 화면에\r\n                                하단 위쪽으로 보면  Namespaces탭에서 context 체크박스 체크\r\n                            </p>\r\n                            <p> 그러면 파일 내부에 xmlns:context=\"http://www.springframework.org/schema/context\" 코드 추가된것을 확인</p>\r\n                            <p> <i> 정의 </i> </p>\r\n                            <p> &lt; context:component-scan base-package=\"패키지명\" &gt;  </p>\r\n                            <p> <i> 사용 </i> </p>\r\n                            <p> @Componet(\"\") 선언하고 생성자가 필요하다고 함</p>\r\n\r\n                        </span>\r\n                        {/* <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> &lt; &gt; </i>  </p>\r\n                        </span> */}\r\n                    </span>\r\n                    {/* 이클립스 applicationContext.xml 끝 */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"cmd창으로 빌드하고 실행해보기\"> cmd창으로 빌드하고 실행해보기 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                            <p> cmd창 - cd 파일경로 - gradlew.bat build 입력 - cd build - cd libs - java -jar 파일명-0.0.1-SNAPSHOT.jar</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"어노테이션\"> 어노테이션 </a>\r\n                        </span>\r\n                        <p> 스프링 컨테이너가 </p>\r\n                        <p> 1. 이름을 보고 맵핑 </p>\r\n                        <p> 2. 타입을 보고 맵핑 </p>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> @Autowired </i>  </p>\r\n                            <p> 일반적으로 멤버변수에 사용 </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> @Qualifier </i>  </p>\r\n                            <p> 주입할 대상(객체)의 이름을 알려주는 어노테이션 </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>@Controller</i>  </p>\r\n                            <p> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>@Service</i>  </p>\r\n                            <p> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>@Repository</i>  </p>\r\n                            <p> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>@Configuration</i>  </p>\r\n                            <p> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                            <p> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                            <p> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                            <p> </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"xml과 어노테이션에서 관리할것\"> xml과 어노테이션에서 관리할것 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>xml</i>  </p>\r\n                            <p> 교체될 가능성이 있는 객체, 라이브러리, 자바소스변경x , 유지보수가능, 가독성저하\r\n                            </p>\r\n                            <p className=\"sstitle\" ><i>어노테이션</i>  </p>\r\n                            <p> 설정할필요 없음, 가독성o , 교체되지 않는 객체관리\r\n                            </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"Spring Security\"> Spring Security </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> <a href=\"https://docs.spring.io/spring-security/site/docs/3.2.4.RELEASE/reference/htmlsingle/#ns-web-advanced\" target=\"_blank\"> 필터의 종류 </a> </i>  </p>\r\n                            <p> DelegatingFilterProxy </p>\r\n                            <p> FilterChainProxy </p>\r\n                            <p className=\"mblock\">\r\n                                <p className=\"sstitle\" ><i> SecurityFiletrChain 종류 </i>  </p>\r\n                                <p> <i> 1. ChannelProcessingFilter </i> </p>\r\n                                <p> <i> 2. SecurityContextPersistenceFilter(필수) </i>\r\n                                    SecurityContextRepository에서 SecurityContext를 로드하고 저장하는 일을 담당 </p>\r\n                                <p> <i> 3. ConcurrentSessionFilter </i> </p>\r\n                                <p> <i> 4. HEADERS_FILTER </i> </p>\r\n                                <p> <i> 5. CSRF_FILTER </i> </p>\r\n                                <p> <i> 6. LogoutFilter(필수) </i>\r\n                                    로그아웃 URL로 지정된 가상URL에 대한 요청을 감시하고 매칭되는 요청이 있으면 사용자를\r\n                                    로그아웃시킴</p>\r\n                                <p> <i> 7. UsernamePasswordAuthenticationFilter(필수) </i>\r\n                                    사용자명과 비밀번호로 이뤄진 폼기반 인증에 사용하는 가상 URL요청을 감시하고 요청이\r\n                                    있으면 사용자의 인증을 진행함</p>\r\n                                <p> <i> 8. DefaultLoginPageGeneratingFilter </i> 폼기반 또는 OpenID 기반 인증에\r\n                                    사용하는 가상URL에 대한 요청을 감시하고 로그인 폼 기능을 수행하는데 필요한 HTML을 생성함</p>\r\n                                <p> <i> 9. CasAuthenticationFilter </i> </p>\r\n                                <p> <i> 10. BasicAuthenticationFilter(필수) </i> HTTP 기본 인증 헤더를 감시하고 이를 처리함 </p>\r\n                                <p> <i> 11.RequestCacheAwareFilter </i> 로그인 성공 이후 인증 요청에 의해 가로채어진 사용자의\r\n                                    원래 요청을 재구성하는데 사용됨</p>\r\n                                <p> <i> 12. SecurityContextHolderAwareRequestFilter </i> </p>\r\n                                <p> <i> 13. JaasApiIntegrationFilter </i> </p>\r\n                                <p> <i> 14. RememberMeAuthenticationFilter </i> </p>\r\n                                <p> <i> 15. AnonymousAuthenticationFilter </i>\r\n                                    이 필터가 호출되는 시점까지 사용자가 아직 인증을 받지 못했다면 요청 관련 인증\r\n                                    토큰에서 사용자가 익명 사용자로 나타나게 됨</p>\r\n                                <p> <i> 16. SessionManagementFilter </i>\r\n                                    인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련한 모든 세션들이 트래킹되도록 도움</p>\r\n                                <p> <i> 17. ExceptionTranslationFilter(필수) </i>\r\n                                    이 필터는 보호된 요청을 처리하는 동안 발생할 수 있는 기대한 예외의 기본\r\n                                    라우팅과 위임을 처리함</p>\r\n                                <p> <i> 18. FilterSecurityInterceptor(필수) </i>\r\n                                    이 필터는 권한부여와 관련한 결정을 AccessDecisionManager에게 위임해 권한부여\r\n                                    결정 및 접근 제어 결정을 쉽게 만들어 줌</p>\r\n                                {/* <p> <i>  </i> </p> */}\r\n                            </p>\r\n                            <p className=\"mblock\">\r\n                                요청에담긴권한 -\r\n                                AuthenticationManager구현체인 ProviderManager가 처리 -\r\n                                AuthenticationManager가 AuthenticationProvider를 통해\r\n                                UserDetailsService를 거쳐 인증을 받아 -\r\n                                UserDetails에 SercurityUser를 등록한다.\r\n                            </p>\r\n                            <p className=\"mblock\">\r\n                                <p className=\"sstitle\" ><i> 스프링 시큐리티 권한설정 </i>  </p>\r\n                                <p> &lt; http &gt;  </p>\r\n                                <p> auto-config=\"true\" </p>\r\n                                <p> use-expressions=\"true\" <small>(4부터는 default=\"true\")</small> : SpEL문법을 사용하게 해준다. </p>\r\n                                <p className=\"sblock\">\r\n                                    <p> intercept-url 태그를 사용할 떄는 위에서 아래로 순서로 설정된다</p>\r\n                                    <p> &lt; intercept-url <i>pattern=\"\" access=\"\" </i> &gt;  </p>\r\n                                    <p> pattern=\"/경로/**\" </p>\r\n                                    <p> access=\"@1('@2')\" </p>\r\n                                    <p> @1 : hasAnyRole(권한아무거나1개가지고 있을때), hasRole(권한1개가지고 있을 때) </p>\r\n                                    <p> @2 : ROLE_(GUEST,USER,MEMBER,ADMIN) : 유저 권한 주기 </p>\r\n                                    <p> premitAll : 모두 접근 가능 </p>\r\n                                    <p> denyAll : 모두 접근 불가 </p>\r\n                                    <p> isAnonymous() : Anonymous 사용자(인증x 사용자) </p>\r\n                                    <p> isRememberMe() : Remember-me기능으로 로그인한 사용자 </p>\r\n                                    <p> isAuthenticated() : Anonymous 사용자가 아닌경우(인증된 사용자) </p>\r\n                                    <p> isFullyAuthenticated() : Anonymous사용자x 이고 Remember-me으로 로그인하지 않은 사용자 </p>\r\n                                    <p> </p>\r\n                                </p>\r\n                            </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"stitle\">\r\n                                <a name=\"Spring Security Filter xml 설정\"> Spring Security Filter xml 설정 </a>\r\n                            </span>\r\n                            <span className=\"mblock\">\r\n                                <p className=\"sstitle\" ><i>web.xml 기본설정</i>  </p>\r\n                                <a href=\"https://to-dy.tistory.com/70?category=720806\" target=\"_blank\"> </a>\r\n                                <p>&lt;filter&gt;</p>\r\n                                <p>&lt;&nbsp;&nbsp;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;</p>\r\n                                <p>&lt;&nbsp;&nbsp;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;</p>\r\n                                <p>&lt;/filter&gt;</p>\r\n                                <p>&lt;filter-mapping&gt;</p>\r\n                                <p>&lt;&nbsp;&nbsp;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;</p>\r\n                                <p>&lt;&nbsp;&nbsp;url-pattern&gt;/*&lt;/url-pattern&gt;</p>\r\n                                <p>&lt;/filter-mapping&gt;</p>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"Spring Security Gradle 설정\"> Spring Security Gradle 설정  </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" > Spring Security 의존성 추가하면 발생하는 일  </p>\r\n                            <p> 서버가 시작되면 Spring Security 초기화 및 보안 설정 발생 </p>\r\n                            <p> 모든 요청이 인증이 되어야 자원에 접근이 가능 </p>\r\n                            <p> form로그인 방식과 httpbasic로그인 방식을 제공한다. </p>\r\n                            <p> 기본적인 로그인 페이지를 제공한다. </p>\r\n                            <p> 기본 계정 user와 비번 제공 </p>\r\n                            <p> application.properties에 설정이 가능하다. </p>\r\n                            <p> 계정추가, 권한추가, DB연동등 하지 않으면 사용을 할 수 없게 만듬 </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>spring security build.gradle</i>  </p>\r\n                            <p>    implementation 'org.springframework.boot:spring-boot-starter-security'</p>\r\n                            <p>    testImplementation 'org.springframework.security:spring-security-test'</p>\r\n                            <p>//  https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5</p>\r\n                            <p>    compileOnly group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'</p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" > java - configuration - SecurityConfig </p>\r\n                            <p> WebSecurityConfigurerAdapter(상속) </p>\r\n                            <p> configure(WebSecurity web) , configure(HttpSecurity http) 오버라이딩 </p>\r\n                            <p> 기초 sercurity 설정 및 구현하는 클래스 </p>\r\n                            <p> HttpSecurity 라는 세부적인 보안기능을 설정할 수 있는 API를 제공하는 클래스를 생성한다. </p>\r\n                            <p> =================================== </p>\r\n                            <p>  </p>\r\n                            <p>  </p>\r\n                            <p>  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span>\r\n                    </span>\r\n\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"\"> 소제목 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span>\r\n                    </span> */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringCode;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringStudy = (props) => {\r\n\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b> 스프링 공부 </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> Spring </summary>\r\n                            <details>\r\n                                <summary className=\"col_g\"> 설명 </summary>\r\n                                <a href=\"#스프링이란?\" className=\"col_p\"> 스프링이란? </a>\r\n                                <a href=\"#스프링 프레임워크의 기본 동작 원리\" className=\"col_p\"> 스프링 프레임워크의 기본 동작 원리 </a>\r\n                                <a href=\"#의존성 주입(Dependency Injection)\" className=\"col_p\"> 의존성 주입(Dependency Injection) </a>\r\n                                <a href=\"#AOP(Aspect Oriented Programming)\" className=\"col_p\"> AOP(Aspect Oriented Programming) </a>\r\n                                <a href=\"#컨테이너\" className=\"col_p\"> 컨테이너 </a>\r\n                                <a href=\"#파일 디렉토리\" className=\"col_p\"> 파일 디렉토리 </a>\r\n                                <a href=\"#템플릿 엔진\" className=\"col_p\"> 템플릿 엔진 </a>\r\n                                <a href=\"#JPA(Java Persistence API)\" className=\"col_p\"> JPA(Java Persistence API) </a>\r\n                                <a href=\"#application.properties\" className=\"col_p\"> application.properties </a>\r\n                                <a href=\"#application.yml\" className=\"col_p\"> application.yml </a>\r\n                                <a href=\"#xml\" className=\"col_p\"> xml </a>\r\n                                <a href=\"#lombok 어노테이션\" className=\"col_p\"> lombok 어노테이션 </a>\r\n                                <a href=\"#스프링 시큐리티 정의\" className=\"col_p\"> 스프링 시큐리티 정의 </a>\r\n                                <a href=\"#Cors(Cross Origin Resource Sharing)\" className=\"col_p\"> Cors(Cross Origin Resource Sharing) </a>\r\n                                <a href=\"#스프링 프레임워크 관련 객체\" className=\"col_p\"> 스프링 프레임워크 관련 객체 </a>\r\n                                <a href=\"#스프링 시큐리티 관련 객체\" className=\"col_p\"> 스프링 시큐리티 관련 객체 </a>\r\n                                <a href=\"#커스텀 스프링 시큐리티 관련 객체\" className=\"col_p\"> 커스텀 스프링 시큐리티 관련 객체 </a>\r\n                                <a href=\"#스프링 시큐리티 처리 필터 순서\" className=\"col_p\"> 스프링 시큐리티 처리 필터 순서 </a>\r\n                                <a href=\"#스프링 시큐리티 config\" className=\"col_p\"> 스프링 시큐리티 config </a>\r\n                                <a href=\"#csrf()\" className=\"col_p\"> csrf() </a>\r\n                                <a href=\"#sessionManagement()\" className=\"col_p\"> sessionManagement() </a>\r\n                                <a href=\"#authorizeRequests()\" className=\"col_p\"> authorizeRequests() </a>\r\n                                <a href=\"#formLogin()\" className=\"col_p\"> formLogin() </a>\r\n                                <a href=\"#\" className=\"col_p\">  </a>\r\n                                {/* <a href=\"#\" className=\"col_p\"> </a> */}\r\n                            </details>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Directory_1.PNG'} alt='' /> </p> */}\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"main\"> 스프링 공부 </a> </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"스프링이란?\"> 스프링이란? </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> 스프링</i>  </p>\r\n                            <p> 스프링은 Ioc기반의 프레임워크 , 자바 플랫폼 프레임워크 </p>\r\n                            <p> 의존성 주입(Denpendency Injection) 의존성 주입 : 개발자가 아닌 컨테이너가 관리하는 빈 객체를 주입하는 방법 </p>\r\n                            <p> POJO(Plain Old Java Object) : 기본적인 기능만 가진 자바 객체 </p>\r\n                            <p> AOP(Aspect Oriented Programming) : 관점 지향 프로그래밍 ,기존에 사용하던\r\n                                프로그래밍 방법은 객체지향 프로그래밍을 사용하지만 중복된 코드들이 많고\r\n                                확장,유지 보수를 떨어뜨린다. AOP에서는 핵심기능(서비스)와 공통기능(인증,필터 등)을\r\n                                분리하여 유지보수가 더 좋아지며 재활용성이 높아진다.\r\n                            </p>\r\n                            <p> 컨테이너 : BeanFactory와 ApplicationContext 2개의 대표적인 컨테이너가 있다. 컨테이너는\r\n                                인스턴스의 주기와 추가적인 기능을 관리하는 역할을 한다. </p>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"의존성 주입(Dependency Injection)\">  의존성 주입(Dependency Injection)</a> </span>\r\n                        <p> <small> 객체를 직접 만들지 않고 주입받아 사용하는 방법 </small> </p>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"><i> 사용하는 이유 </i> </p>\r\n                            <p> 1. </p>\r\n                            <p> 1. </p>\r\n                            <p> 1. </p>\r\n                        </span>\r\n                        <p className=\"stitle\"> 의존성 주입하는 방법 3가지 </p>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i> 생성자(Constructor) 주입(스프링 팀에서 추천하는 방식) </p>\r\n                            <p>  </p>\r\n                            <p> 1. 생성자로 객체를 생성하는 시점에 인자에 있는 Bean을 호출 </p>\r\n                            <p> 2. Bean을 호출할 때(초기에 생성x) BeanFacotry에 Bean을 만들고 만든 Bean을 찾음 </p>\r\n                            <p> 3. Bean을 찾았으므로 생성자 인자에 Bean을 주입 </p>\r\n                            <p> </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"><i>2.</i> 수정자(Setter) 주입</p>\r\n                            <p> 주입 과정 </p>\r\n                            <p> 1. &lt;bean&gt;을 보고 찾음, 찾으면 bean객체 생성 </p>\r\n                            <p> 2. setter호출,  </p>\r\n                            <p> 3. 이후에 주입하려는 빈 객체의 수정자를 호출하여 주입 </p>\r\n\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"><i>3.</i> 필드(Field) 주입(어노테이션 사용)</p>\r\n                            <p> 주입 과정  </p>\r\n                            <p> 1. 빈 객체를 생성  </p>\r\n                            <p> 2. 빈 객체를 찾아서 주입하는 방법  </p>\r\n                            <p>  </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"POJO(Plain Old Java Object)\">  POJO(Plain Old Java Object) </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> POJO가 탄생한 이유 </i>  </p>\r\n                            <p> 자바를 개발할 떄 과거에 개발자가 비즈니스로직 + 트랜잭션,보안,필터 등등을 구현해야\r\n                                했다. 그러므로 너무 많은 부담을 지게 되었고 그 부담을 덜기 위하여 기업에서 개발하기 위한\r\n                                서비스 EJB(Enterprise Java Beans)가 탄생하여 부담이 줄어들었다. 하지만 작은 서비스를 개발할떄도\r\n                                거대한 EJB를 상속받아 사용해야되는 불편함이 있었고 기능을 바꾸기 위해서는 전체적으로 코드를\r\n                                수정해야되는 문제점이 발생하였다. EJB는 객체지향의 특징과 장점을 사용할 수 없었다. </p>\r\n                            <p> POJO는 이러한 문제점에서 벗어나 객체지향에 집중하고, 클래스나 라이브러리에 종속되지 않아\r\n                                원하는 대로 사용을 할 수 있게 되었다. </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> POJO 사용 이유와 장점 </i> </p>\r\n                            <p> 특정 환경에 종속이 되지 않는다. </p>\r\n                            <p> 객체지향(OOP)를 자유롭게 사용할 수 있다. </p>\r\n                            <p> 로우레벨은 분리하면서 필요한 로직을 작성할 수 있다. </p>\r\n                            <p> 테스트 작업 환경에 좋다. </p>\r\n                            <p> EJB의 서비스와 기술은 그대로 사용하면서 자바 객체지향도 사용을 할 수 있어 좋다. </p>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"AOP(Aspect Oriented Programming)\">  AOP(Aspect Oriented Programming) </a>\r\n                        </span>\r\n                        <small> Aspect를 모아서 모듈화 하는 방법 , 각 클래스마다 비슷한 메소드 등을 따로 처리하는 방법 </small>\r\n                        <p> 자바에서는 다중상속이 불가능하여 공통기능을 부여하기에 한계가 있다. </p>\r\n                        <p> 로그처리, 보안처리, DB 트랜잭션 처리 등 , 코드의 중복을 줄이고 로직을 분리 할 수 있음 </p>\r\n                        <p> 관정을 횡단으로 보는 횡단 관심 사항, Cross Cutting Concern(부가적인로직) , Core Concern(비즈니스로직) </p>\r\n                        <p> proxy 방법을 이용한다. client - proxy(공통기능) - target(핵심기능) </p>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 관련 용어 </p>\r\n                            <ul>\r\n                                <li> Aspect : Advice와 Pointcut로 이루어져 있다.  </li>\r\n                                <li> Advice : Aspect 해야할 일, 기능 </li>\r\n                                <li> Pointcut : 어디에 적용할 지 </li>\r\n                                <li> Target : Pointcut에서 적용이 되는 대상  </li>\r\n                                <li> Join point : Advice를 사용할 지점(메서드 실행, 필드에서 값을 가져갈 떄 등)  </li>\r\n                                <li> Weaving : Advice를 핵심기능에 적용하는 행위  </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> 관련 태그? 메소드? </p>\r\n                            <ul>\r\n                                <li> aop:before : 메소드 실행전에 advice실행 </li>\r\n                                <li> aop:after-returning : 정상적으로 메소드 실행 후에 advice 실행  </li>\r\n                                <li> aop:after-throwing : 메소드 실행중 exception 발생시 advice 실행 </li>\r\n                                <li> aop:after : 메소드 실행중 exception이 발생해도 advice 실행 </li>\r\n                                <li> aop:around : 메소드 실행 전/후 및 exception 발생시 advice 실행 </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"컨테이너\">  컨테이너 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> 컨테이너의 빈 객체 </i>  </p>\r\n                            <p> CGLIB라는 바이트코드 조작 라이브러리를 이용하여 Bean객체를 싱글턴패턴으로 유지하게 한다.\r\n                                클래스를 복제?한 클래스객체를 따로 만들어서 컨테이너에서 만들어서 사용한다. 컨테이너에\r\n                                Bean객체가 없으면 Bean객체를 생성하고 존재한다면 기존에 Bean객체를 반환해준다. </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"파일 디렉토리\">  파일 디렉토리 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>DAO(Data Access Object)</i>  </p>\r\n                            <p> DB에 제일 가까이서 접근하는 객체 </p>\r\n                            <p> DB와 Service 구간사이에서 DB데이터를 보내고 받는다.</p>\r\n                            <p> 스프링에서는 직접 구현하지않고 CrudRepositoy나 JpaReposioty를 상속해서 처리한다. </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>DTO(Data Transfer Object) </i>  </p>\r\n                            <p> controller와 service사이에서 사용할 데이터를 주고 받는 객체 </p>\r\n                            <p> Entity와 비슷하지만 Entity는 DB와 데이터를 주고 받는 용도로 사용하고\r\n                                다른 곳에서 데이터를 주고 받는 용도로는 dto를 사용하는 것을 추천\r\n                            </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>VO(Value Object)</i>  </p>\r\n                            <p> VO는 DTO와 비슷하지만 오직 읽는 용도로만 사용하는 것이다. </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>Entity</i>  </p>\r\n                            <p> Entity </p>\r\n                            <p> toEntity() 메소드를 통해서 DTO에 필요한 부분만을 사용해서 Entity로 만들어서 사용 </p>\r\n                            <p> 실제 DB 테이블과 일치되는 클래스 </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> controller </i>  </p>\r\n                            <p> URL을 맵핑하고 service 로직을 처리 </p>\r\n                            <p> 반환 값으로 템플릿(view)나 JSON 등으로 응답한다. </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> service </i>  </p>\r\n                            <p> 비즈니스 로직을 구현 </p>\r\n                            <p> DB에 저장하거나 비즈니스 로직을 처리 </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> enity </i>  </p>\r\n                            <p> DB테이블과 연결되는 객체  </p>\r\n                            <p> JPA에서는 Entity객체를 사용 </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> repository </i>  </p>\r\n                            <p> 데이터를 가져오거나 조작하는 함수를 정의 </p>\r\n                            <p> JpaRepository&lt;Entity클래스,@Id타입&gt;나 CrudRepository 상속하여 그 안에 함수를 사용 </p>\r\n                            <p> <a href=\"https://docs.spring.io/spring-data/jpa/docs/1.10.1.\r\n                            RELEASE/reference/html/#jpa.sample-app.finders.strategies\"> 참고 사이트 </a></p>\r\n                            <span className=\"mblock\">\r\n                                <p className=\"sstitle\"> JPA 메소드 종류 </p>\r\n                                <p> save() : 레코드 저장(insert, update) </p>\r\n                                <p> findOne() : primary key로 레코드 한건 찾기 </p>\r\n                                <p> findAll() : 전체 레코드 불러오기, sort기능, pageable기능 </p>\r\n                                <p> count() : 레코드 갯수</p>\r\n                                <p> delete() : 레코드 삭제 </p>\r\n                                <p className=\"sstitle\"> 쿼리 메소드 종류 </p>\r\n                                <p> findBy : 쿼리를 요청하는 메서드 </p>\r\n                                <p> countBy : 쿼리 결과 레코드 수를 요청하는 메서드 </p>\r\n                                <p className=\"sstitle\"> 쿼리 메소드 키워드 종류 </p>\r\n                                <p> And : 여러필드를 검색 ( findByUserIdAndUserPwd(String userid,String userpwd)) </p>\r\n                                <p> Or : 여러필드를 검색 ( findByUserIdOrUserPwd(String userid,String userpwd)) </p>\r\n                                <p> Between : 필드의 두 값 사이의 항목 검색 findByCreatedAtBetween() </p>\r\n                                <p> LessThan : 작은 항목 검색 (findByAgeLessThanEqual(int)) </p>\r\n                                <p> GreaterThanEqual : 크거나 같은 항목 (findByAgeGraterThanEqual(int)) </p>\r\n                                <p> Like : like 사용 (findByNameLike(String)) </p>\r\n                                <p> IsNull : null인 항목 검색 (findByJoblsNull()) </p>\r\n                                <p> In : 여러 값 중에 하나의 항목 (findByJob(String...)) </p>\r\n                                <p> OrderBy : 검색 결과를 정렬하여 전달 (findByEmailOrderByNameAsc(String)) </p>\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> static </i>  </p>\r\n                            <p> css,js,img 등 자원을 모아놓는 공간 </p>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> templates </i>  </p>\r\n                            <p> 템플릿을 모아놓는 공간 </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"스프링 프레임워크의 기본 동작 원리\"> 스프링 프레임워크의 기본 동작 원리 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1. </i>  </p>\r\n                            <p> 1. 클라이언트 요청 </p>\r\n                            <p> 2. Dispatcher Servlet 접근 </p>\r\n                            <p> 3. Handler Mapping 참조하여 Controller 연결 </p>\r\n                            <p> 4. Mapping된 Controller에 서비스 로직에 따라 DAO,Entity등을 통해 DB에 접근  </p>\r\n                            <p> 5. 모델과 뷰 객체를 담아 DispatcherServlet에 반환 </p>\r\n                            <p> 6. ViewResolver를 통해 View와 연결되어 화면으로 출력 </p>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"템플릿 엔진\">  템플릿 엔진 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>thymeleaf </i> <a href=\"https://cyberx.tistory.com/132\"> 참고 </a>  </p>\r\n                            <p className=\"sstitle\"> 기본 문법 </p>\r\n                            <p> 변수 : ${\"{\"}{\"}\"} </p>\r\n                            <p> 객체 변수값 : *{\"{\"}{\"}\"} </p>\r\n                            <p> 메시지 : #{\"{\"}{\"}\"} , message properites에 문자열이 존재하면 사용 </p>\r\n                            <p> 링크 : @{\"{\"}{\"}\"} </p>\r\n                            <p> 삼항연산자(Elivs operator) : 참 ?: 거짓(default값)</p>\r\n                            <p> 속성값(css) : th:attr=\"src=@{\"{\"}/경로.png{\"}\"}\"  </p>\r\n                            <p> 조건문 </p>\r\n                            <p> &nbsp;&nbsp;th:if(if)=\"${\"{\"}파라미터{\"}\"}==조건</p>\r\n                            <p> &nbsp;&nbsp;th:unless(else)=\"${\"{\"}파라미터{\"}\"}==조건</p>\r\n                            <p className=\"sstitle\"> 예시 </p>\r\n                            <p> html 파일을 만들고 상단에 &lt;html xmlns:th=\"http://www.thymeleaf.org\"&gt; 선언 </p>\r\n                            <span className=\"mblock\">\r\n                                <p> &lt;tr th:each=\"반복변수명 : ${\"{\"}파라미터{\"}\"}\"&gt;</p>\r\n                                <p> &nbsp; &lt;td th:text=\"${\"{\"}반복변수명.파라미터{\"}\"}\"&gt;</p>\r\n                                <p> &lt;/tr&gt;</p>\r\n                            </span>\r\n                            <span className=\"mblock\">\r\n                                <p> &lt;tr th:object=\"${\"{\"}파라미터(객체){\"}\"}\"&gt;</p>\r\n                                <p> &nbsp; &lt;td th:text=\"*{\"{\"}파라미터멤버변수{\"}\"}\"&gt;</p>\r\n                                <p> &nbsp; &lt;td th:text=\"*{\"{\"}파라미터멤버변수{\"}\"}\"&gt;</p>\r\n                                <p> &lt;/tr&gt;</p>\r\n                            </span>\r\n                        </span>\r\n                        {/* <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span> */}\r\n\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"JPA(Java Persistence API)\">  JPA(Java Persistence API) </a>\r\n                        </span>\r\n                        <p> JPA의 구현체 Hibernate,EclipseLink,DataNucleus </p>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> Hibernate </i>  </p>\r\n                            <p className=\"sstitle\" ><i> EclipseLink</i>  </p>\r\n                            <p className=\"sstitle\" ><i> DataNucleus </i>  </p>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"코드 환경 설정\"> 코드 환경 설정  </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i> <a name=\"application.properties\"> application.properties</a>  </i>\r\n                                <span className=\"mblock\">\r\n                                    <p> DB설정 </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p> spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver </p>\r\n                                        <p> spring.datasource.url=jdbc:mysql://localhost:3306/스키마이름?characterEncoding=UTF-8&amp;serverTimezone=UTC </p>\r\n                                        <p> spring.datasource.username=DB유저이름 </p>\r\n                                        <p> spring.datasource.password=DB유저비번 </p>\r\n                                    </span>\r\n                                    <p> JPA </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p> spring.jpa.hibernate.ddl-auto=update </p>\r\n                                        <p> spring.jpa.properties.hibernate.format_sql=true </p>\r\n                                    </span>\r\n                                </span>\r\n                            </p>\r\n                            <p className=\"sstitle\" ><i> <a name=\"application.yml\">application.yml</a> </i>\r\n                                <span className=\"mblock\">\r\n                                    <p> DB설정 </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p>\r\n                                            spring: <br />\r\n                                            &nbsp;datasource: <br />\r\n                                            &nbsp;&nbsp;driver-class-name: com.mysql.cj.jdbc.Driver <br />\r\n                                            &nbsp;&nbsp;url: jdbc:mysql://localhost:3306/스키마이름?serverTimezone=UTC&amp;characterEncoding=UTF-8 <br />\r\n                                            &nbsp;&nbsp;username: DB유저이름 <br />\r\n                                            &nbsp;&nbsp;password: DB유저비번 <br />\r\n                                        </p>\r\n                                    </span>\r\n                                    <p> JPA </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p>\r\n                                            spring: <br />\r\n                                            <small> JPA 데이터베이스 플랫폼을 지정, MysQL InnoDB사용 </small> <br />\r\n                                            &nbsp;database-platform: org.hibernate.dialect.MySQL5InnoDBDialect <br />\r\n                                            <small> 웹 요청이 완료될 때까지 동일한 EntityManager를 갖도록 해줍니다., 성능과 확장에 좋지 않다고 하는데 정확하게는 아직 모름 </small> <br />\r\n                                            &nbsp;open-in-view: false <br />\r\n                                            <small> 콘솔에 JPA 쿼리를 출력 </small> <br />\r\n                                            &nbsp;show-sql: true <br />\r\n                                            &nbsp;hibernate: <br />\r\n                                            &nbsp;&nbsp;format_sql: true <br />\r\n                                            <small> none, create(기존테이블을삭제후다시생성), create-drop, update(변경된 스키마만 반영), validate(엔티티와 테이블이 정상적으로 매칭이 되었는지 확인, 운영을 할 떄 사용한다고 함) </small> <br />\r\n                                            &nbsp;&nbsp;ddl-auto: update <br />\r\n                                        </p>\r\n                                    </span>\r\n                                </span>\r\n                            </p>\r\n                            <p className=\"sstitle\" ><i><a name=\"xml\">xml</a>  </i>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </p>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"lombok 어노테이션\"> lombok 어노테이션  </a>\r\n                        </span>\r\n                        <small>  어노테이션으로 코드를 자동으로 만들어주는 라이브러리 </small>\r\n                        <p> 가독성, 유지보수, 자동생성으로 생산성 향상 </p>\r\n                        <span className=\"sblock\">\r\n                            <details>\r\n                                <summary className=\"sstitle\" ><i> 어노테이션의 종류 </i> </summary>\r\n                                <ol>\r\n                                    <li> @Value : 프로퍼티에서 정의한 값을 가져오는 방법 </li>\r\n                                    <li> @Controller : Model 객체를 이용하여 데이터를 담고 view를 찾아 이동하는 역할 </li>\r\n                                    <li> @PostMapping : Post방식으로 요청을 받을 때 맵핑을 처리함 </li>\r\n                                    <li> @GetMapping :  Get방식으로 요청을 받을 때 맵핑을 처리함 </li>\r\n                                    <li> @RequestBody : http요청 데이터를 담은 공간 </li>\r\n                                    <li> @ReponseBody : http응답 데이터를 담은 공간 </li>\r\n                                    <li> @RestController(@Controller + @ResponseBody) : 객체로 반환하고 JSON이나 XML형식으로 http에 담아서 응답  </li>\r\n                                    <li> @RequestMapping(\"\") : 어떤 Controller에 어떤 메소드를 처리할지 맵핑하는 용도  </li>\r\n                                    <span className=\"mblock\">\r\n                                        <ul>\r\n                                            <li> value(String) : URL값으로 맵핑 조건으로 사용 </li>\r\n                                            <li> method : HTTP Request 메소드값을 맵핑 조건으로 사용 </li>\r\n                                            <li> params : HTTP Request 파라미터(GET,POST 등)를 맵핑 조건으로 사용 </li>\r\n                                            <li> consumes : Content-Type request 헤더가 일치할 경우 URL이 호출됨 </li>\r\n                                            <li> produces : 설정과 Accept request 헤더가 일치할 경우에만 URL이 호출됨 </li>\r\n                                        </ul>\r\n                                    </span>\r\n                                    <li> @RequestParam : Controller메소드의 파라미터와 웹 요청 파라미터와 맵핑하는 용도 </li>\r\n                                    <li> @ModelAttribute : Controller 메소드의 파라미터나 리턴값을 Model 객체와 바인딩하기 위한 용도 </li>\r\n                                    <li> @SessionAttributes : Model 객체를 세션에 젖아하고 사용하기 위한 용도 </li>\r\n                                    <li> @RequestPart : Multipart 요청의 경우, 웹 요청 파라미터와 맵핑 용도 </li>\r\n                                    <li> @CommandMap : Controller메소드의 파라미터를 Map형태로 받을 떄 웹 요청 파라미터와 맵핑하기 위한 용도 </li>\r\n                                    <li> @ControllerAdvice : Controller에 쓰이는 공통기능을 모듈화하여 전역으로 쓰기 위한 용도 </li>\r\n                                    <li> @Transactional : </li>\r\n                                    <li> @NonNUll : null을 허용하지 않을 경우 </li>\r\n                                    <li> @Nullable : null을 허용할 경우 </li>\r\n                                    <li>  </li>\r\n                                </ol>\r\n                            </details>\r\n                            <details>\r\n                                <summary className=\"sstitle\" ><i> lombok 어노테이션의 종류 </i> </summary>\r\n                                <ol type='1'>\r\n                                    <li> @Getter : getter </li>\r\n                                    <li> @Settter : setter</li>\r\n                                    <li> @Entity : Entity객체 ,DB테이블과 맵핑되는 객체 </li>\r\n                                    <li> @Table(name=\"테이블이름지정\") : Entity가 맵핑될 테이블을 지정 </li>\r\n                                    <li> @Id : JPA가 식별할 기본키 </li>\r\n                                    <li> @GenerateValue(strategy = GenerationType.{\"[\"}IDENTITY,ATUO,SEAUENCE{\"]\"}) </li>\r\n                                    <li> @Column : DB필드 <br />속성 : name, unique=boolean , nullable=boolean , length=num , columnDefinition=\"설명?\"</li>\r\n                                    <li> @Enumerated(EnumType.STRING) : enum값을 인덱스가 아닌 문자열로 저장하는 방법 </li>\r\n                                    <li> @AllArgsConstructor : 모든 변수를 사용하는 생성자 </li>\r\n                                    <li> @NoArgsConstructor : 기본생성자 </li>\r\n                                    <li> @RequiredArgsConstructor : 특정변수만을 사용하는 생성자, @NonNull이나 final을 이용하여 의존성을 주입할 수 있다. </li>\r\n                                    <li> @EqualsAndHashCode : equals(),hashCode() 메소드 생성 <br />\r\n                                        (of={\"{\"}\"멤버변수1\",\"멤버변수2\"{\"}\"},callSuper=false)를 추가하면 멤버변수1과 멤버변수2가 같다면\r\n                                        같은 객체로 판단을 하여 처리하게 할 수 있다. </li>\r\n                                    <li> @ToString : tostring <br /> 원하지 않는 변수에는 @ToString(exclude=\"멤버변수\") 를 사용하면 제외를 시킬 수 있다. </li>\r\n                                    <li> @Data : @ToString,@EqualsAndHashCode,@Getter,@Setter,@RequiredArgsConstructor 를 만들어준다.\r\n                                        하지만 실무에서는 무거워서 사용을 하지 않는다. </li>\r\n                                    <li> @Builder : 해당 클래스에 빌드 패턴을 만들어 준다. <br /> 특정 변수만을 만드려면 생성자를 정의하고\r\n                                        그위에 @Builder를 붙여서 사용하면 된다. </li>\r\n                                    <li> @Delegate : 한 객체의 메소드를 다른 객체로 위임한다. </li>\r\n                                    <li> @Log4j2 : 로그를 사용 </li>\r\n                                    <li> @SequenceGenerator : 데이터베이스 시퀸스를 사용하는 방법(시퀸스에 대한 추가적으로 공부 필요)</li>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                </ol>\r\n                            </details>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"\">  소제목 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" ><i>1.</i>  </p>\r\n                        </span>\r\n                    </span>\r\n\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"SpringSecurity \"> SpringSecurity  </a> </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"스프링 프레임워크 관련 객체\"> 스프링 프레임워크 관련 객체 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> ResponseEntity  </p>\r\n                            <small> RestController에서 Object타입만을 반환하였지만\r\n                                ResponseEntity클래스는 Object타입 + (상태코드, 응답메시지 등)을 포함하여 반환이 가능하다는 장점이 있다. </small>\r\n                            <ul>\r\n                                <p> return new ResponseEntity(1번,2번 혹은 2번) </p>\r\n                                <li> 1. 단순한 메시지 리턴 </li>\r\n                                <li> 1. 객체를 응답 리턴 </li>\r\n                                <li> 1. header 리턴  </li>\r\n                                <li> 2. 상태코드를 리턴 (HttpStatus.OK .INTERNAL_SERVER_ERROR 등)  </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" > Mvc 관련  </p>\r\n                            <ul>\r\n                                <li> HandlerMapping : 클라이언트 요청(URL)을 어떤 Controller로 연결을 해줄지 결정  <br />\r\n                                    <small> 다수의 HandlerMapping이 가능하며 order프로퍼티로 순서를 정할 수 있다. </small>\r\n                                    <span className=\"mblock\">\r\n                                        <ul>\r\n                                            <li> SimpleUrlHandlerMapping : URL-Controller 을 직접 맵핑 </li>\r\n                                            <li> BeanNameUrlHandlerMapping :  URL-Bean이름과 일치하는 것을 컨트롤러로 사용</li>\r\n                                            <li> ControllerClassNameHandlerMapping : URL-매칭되는클래스 이름을 갖는 빈을 컨트롤러로 사용 </li>\r\n                                            <li> DefaultAnnotationHandlerMapping : @RequestMapping어노테이션을 이용하여 컨트롤러와 맵핑한다. </li>\r\n                                        </ul>\r\n                                    </span>\r\n                                </li>\r\n                                <li>   </li>\r\n                                <li>   </li>\r\n                                <li>   </li>\r\n                            </ul>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" > <a name=\"스프링 시큐리티 관련 객체\"> 스프링 시큐리티 관련 객체 </a>  </p>\r\n                            <ul>\r\n                                <li> 접근주체(Principal) : 보호된 대상에 접근하는 대상 </li>\r\n                                <li> 비밀번호(Credential) : Resource에 접근하는 대상의 비밀번호 </li>\r\n                                <li> 인증(Authentication) : 현재 유저가 누구인지 확인, 작업을 수행할 수 있는지 여부를 판단 </li>\r\n                                <li> 인가(Authorize) : 현재 유저가 어떤 서비스,페이지에 접근할 수 있는 권한이 있는지 검사 </li>\r\n                                <li> 권한 : 인증된 사람이 작업을 수행하는 권한이 있는지 판단 (GUEST,USER,MEMBER,ADMIN) </li>\r\n                            </ul>\r\n                            {/* <p>  </p> */}\r\n                            <span className=\"mblock\">\r\n                                <details>\r\n                                    <summary className=\"col_g\"> 인증관리자(Authentication Manager) :  </summary>\r\n                                    <p> <small>  </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> 접근결정관리자(Access Decision Manager) : </summary>\r\n                                    <p> <small>  </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> AuthenticationFilter </summary>\r\n                                    <p> <small>  </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> AuthenticationManager </summary>\r\n                                    <p> <small> 인증은 부분은 Security의 AuthenticationManager를 통해서 처리하게 되는데\r\n                                        실제로는 AuthenticationManager에 등록된 AuthenticationProvider에 의해 처리가 된다.\r\n                                        인증이 성공하면 isAuthenticated=true 객체를 생성해서 SecurityContext에 저장한다. </small> </p>\r\n                                    <p> Authentication authenticate(Authentication) </p> {/* 멤버 변수 */}\r\n                                    <p>  </p> {/* 멤버 변수 */}\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> AuthenticationProvider </summary>\r\n                                    <p> <small> 인증 전의 객체를 받아서 인증이 완료된 객체를 반환하는 역할 </small> </p>   {/* 설명 */}\r\n                                    <p> 커스텀 구현체 필요 </p> {/* 멤버 변수 */}\r\n                                    <p> Authentication authenticate(Authentication) </p> {/* 멤버 변수 */}\r\n                                    <p> boolean supports(Class&lt;?&gt;) </p> {/* 멤버 변수 */}\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> UserDetailsService </summary>\r\n                                    <p> <small>  </small> </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p className=\"sstitle\"> 코드 </p>\r\n                                        <p> UserDetails loadUserByUsername(String var1) throws UsernameNotFoundException; </p>\r\n                                    </span>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> UserDetails </summary>\r\n                                    <p> <small> 인증에 성공하여 생성된 UserDetails객체는 UsernamePasswordAuthenticationToken을 생성하기 위해\r\n                                        사용된다. </small> </p>\r\n                                    <p> 커스텀 구현체 필요(UserDto??)</p>\r\n                                    <span className=\"sblock\">\r\n                                        <p className=\"sstitle\"> 코드 </p>\r\n                                        <p> Collection&lt;? extends GrantedAuthority&gt; getAuthorities(); </p>\r\n                                        <p> String getPassword(); </p>\r\n                                        <p> String getUsername(); </p>\r\n                                        <p> boolean isAccountNonExpired(); </p>\r\n                                        <p> boolean isAccountNonLocked(); </p>\r\n                                        <p> boolean isCredentialsNonExpired(); </p>\r\n                                        <p> boolean isEnabled(); </p>\r\n                                    </span>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> AuthenticationManagerBuilder </summary>\r\n                                    <small>  (개인생각) 인증에 관련된 여러 멤버를 가지고 인증 작업을 처리 </small>\r\n                                    <span className=\"sblock\">\r\n                                        <p className=\"sstitle\"> 멤버변수 </p>\r\n                                        <ul>\r\n                                            <li> AuthenticationManager </li>\r\n                                            <li> List{'<AuthenticationProvider>'} </li>\r\n                                            <li> UserDetailService </li>\r\n                                            <li> AuthenticationEventPublisher </li>\r\n                                        </ul>\r\n                                        <p className=\"sstitle\"> 메소드 </p>\r\n                                        <ul>\r\n                                            <li>  authenticationEventPublisher </li>\r\n                                            <li>  eraseCredentials </li>\r\n                                            <li>  inMemoryAuthentication </li>\r\n                                            <li>  jdbcAuthentication </li>\r\n                                            <li>  userDetailsService </li>\r\n                                            <li>  ldapAuthentication </li>\r\n                                            <li>  authenticationProvider </li>\r\n                                            <li>  performBuild </li>\r\n                                            <li>  isConfigured </li>\r\n                                            <li>  getDefaultUserDetailsService </li>\r\n                                        </ul>\r\n\r\n                                    </span>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> ProviderManager </summary>\r\n                                    <p> <small> 첫번쨰 생성자는 인증전 객체를 생성하고 두번쨰 생성자는 인증이 완성된 객체를 생성 </small> </p>\r\n                                    <p> <small> AuthenticationManager, MessageSourceAware, InitializingBean 상속 </small> </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p className=\"sstitle\"> 코드  </p>\r\n                                        <p> List&lt;AuthenticationProvider&gt; getProviders() {\"{\"} return providers; {\"}\"} </p>\r\n                                        <span className=\"mblock\">\r\n                                            <p className=\"col_r\"> Authentication authenticate(Authentication) {\"{\"}</p>\r\n                                            <p> ... </p>\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p className=\"col_r\"> public UsernamePasswordAuthenticationToken(Object principal,\r\n                                                Object credentials, Collection&lt;? extends GrantedAuthority&gt; authorities) {\"{\"}</p>\r\n                                            <p> &nbsp;&nbsp;super(authorties); </p>\r\n                                            <p> &nbsp;&nbsp;this.principal=principal; </p>\r\n                                            <p> &nbsp;&nbsp;this.credentials=credentials; </p>\r\n                                            <p> &nbsp;&nbsp;super.setAuthenticated(true); </p>\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p className=\"col_r\"> public abstract class AbstractAuthenticationToken implements Authentication,\r\n                                                CredentialsContainer {\"{\"}</p>\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> SecurityContextHolder </summary>\r\n                                    <p> <small> 보안 주체의 세부 정보 + 응용프로그램의 현재 보안 컨텍스트 세부 정보를 저장,\r\n                                        스프링 시큐리티의 인메모리 세션저장소 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> SecurityContext </summary>\r\n                                    <p> <small> Authentication을 보관하는 역할 그리고 SecurityContext를 통해\r\n                                        Authentication 객체를 꺼내올 수도 있음 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> Authentication </summary>\r\n                                    <p> <small> 현재 접근하는 주체의 정보와 권한을 담는 인터페이스 , SecurityContext에 저장됨 ,\r\n                                        SecurityContextHolder를 통해 SecurityContext에 접근하고 SecurityContext를\r\n                                        통해 Authentication에 접근 가능하다. </small> </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p className=\"sstitle\"> 코드  </p>\r\n                                        <p> getCredentials() : credentials의 비밀번호를 가져온다. </p>\r\n                                        <p> getDetails() :  </p>\r\n                                        <p> getPrincipal() : Principal객체를 가져온다. </p>\r\n                                        <p> isAuthenticated() : 인증 여부를 가져온다. </p>\r\n                                        <p> setAuthenticated() : 인증여부를 설정 </p>\r\n                                    </span>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> UsernamePasswordAuthenticationToken </summary>\r\n                                    <p> <small> 첫번쨰 생성자는 인증전 객체를 생성하고 두번쨰 생성자는 인증이 완성된 객체를 생성 </small> </p>\r\n                                    <p> <small> AbstractAuthenticationToken 상속 </small> </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p className=\"sstitle\"> 코드  </p>\r\n                                        <p> private final Object principal : 사용자의 ID에 해당 </p>\r\n                                        <p> private Object credentials : 사용자의 PW에 해당 </p>\r\n                                        <span className=\"mblock\">\r\n                                            <p className=\"col_r\"> public UsernamePasswordAuthenticationToken(Object principal, Object credentials) {\"{\"}</p>\r\n                                            <p> &nbsp;&nbsp;super(null); </p>\r\n                                            <p> &nbsp;&nbsp;this.principal=principal; </p>\r\n                                            <p> &nbsp;&nbsp;this.credentials=credentials; </p>\r\n                                            <p> &nbsp;&nbsp;setAuthenticated(false); </p>\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p className=\"col_r\"> public UsernamePasswordAuthenticationToken(Object principal,\r\n                                                Object credentials, Collection&lt;? extends GrantedAuthority&gt; authorities) {\"{\"}</p>\r\n                                            <p> &nbsp;&nbsp;super(authorties); </p>\r\n                                            <p> &nbsp;&nbsp;this.principal=principal; </p>\r\n                                            <p> &nbsp;&nbsp;this.credentials=credentials; </p>\r\n                                            <p> &nbsp;&nbsp;super.setAuthenticated(true); </p>\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p className=\"col_r\"> public abstract class AbstractAuthenticationToken implements Authentication,\r\n                                                CredentialsContainer {\"{\"}</p>\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> GrantedAuthority </summary>\r\n                                    <p> <small> 현재 사용자(principal)이 가지고 있는 권한을 의미 , ROLE_* 형태와 같이 사용하며 보통 roles로 칭함\r\n                                        , UserDetailsService에 의해 불러올 수 있고 특정 자원에 권한이 있는지를 검사하여 접근 허용 여부를 결정을</small> </p>   {/* 설명 */}\r\n                                    <p>  </p> {/* 멤버 변수 */}\r\n                                    <span className=\"mblock\">\r\n                                        {/* 메소드 */}\r\n                                        <p className=\"col_r\"> {\"{\"}</p>\r\n                                        <p>  </p> {/* 코드 */}\r\n                                        <p className=\"col_r\"> {\"}\"} </p>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" > <a name=\"커스텀 스프링 시큐리티 관련 객체\"> 커스텀 스프링 시큐리티 관련 객체  </a>  </p>\r\n                            <span className=\"mblock\">\r\n                                <details>\r\n                                    <summary className=\"col_g\"> WebSecurityConfig </summary>\r\n                                    <p> <small> WebSecurityConfigurerAdapter 상속, @Configuration, @EnableWebSecurity </small> </p>\r\n                                    <span className=\"sblock\">\r\n                                        <p className=\"sstitle\"> 코드 </p>\r\n                                        <span className=\"mblock\">\r\n                                            <p> @Override , 권한이 필요없는 자원을 허용하게 해주는 메소드</p>\r\n                                            <p className=\"col_r\"> configure(WebSecurity web) {\"{\"}</p>\r\n                                            <p> web.ignoring().antMatchers(\"/css/**\",\r\n                                                \"/js/**\", \"/img/**\"); </p> {/* 코드 */}\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p> @Override </p>\r\n                                            <p className=\"col_r\"> void configure(HttpSecurity http) {\"{\"}</p>\r\n                                            {/* 이 아랫부분 수정하고 정리 필요 */}\r\n                                            <span className=\"sblock\">\r\n                                                <span className=\"sstitle\"> <a name=\"cors()\"> cors() :</a> </span>\r\n                                                <p> CorsFilter를 활성화 </p>\r\n                                                <span className=\"sstitle\"> <a name=\"csrf()\"></a> csrf()(Cross site request forgery) </span>\r\n                                                <p> 가짜로 페이지를 만들고 사용자가 입력하게 만들어서 그 값을 받고\r\n                                                    사용자의 쿠키를 이용해 대신 다른 정보를 입력하게 하는 방법이\r\n                                                    간단한 공격방법인데 막기위한 방법중 하나</p>\r\n                                                <p> 서버에 들어온 요청이 실제 서버에서 허용한 요청이 맞는지 확인하기 위한 토큰,\r\n                                                    서버에서 뷰페이지를 보낼 떄 랜덤으로 세션토큰을 하나 보내고, 사용자가 다시\r\n                                                    서버로 전송할 때 같이 토큰이 포함되어 서버가 사용자에게 보낸 토큰과\r\n                                                    사용자가 서버에 보낸 토큰이 일치하는지를 확인  </p>\r\n                                                <p> 스프링 버전과 스프링 시큐리티 버전이 일치해야 한다. </p>\r\n                                                <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/CSRF_1.PNG'} alt='' /> </p>\r\n                                                <p> <i>.csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse()) </i> </p>\r\n                                                <p> <i> .disable()</i> : csrf토큰을 사용하지 않는다.  </p>\r\n                                                <span className=\"sstitle\"> <a name=\"sessionManagement()\"> sessionManagement() </a> </span>\r\n                                                <p> <i>.sessionCreationPolicy(SessionCreationPolicy.STATELESS) </i> : 스프링시큐리티에서 세션을 관리하지 않음</p>\r\n                                                <span className=\"sstitle\"> <a name=\"authorizeRequests()\"> authorizeRequests() : 인증 절차에 대한 설정  </a> </span>\r\n                                                <p> <i>.antMatchers(\"/**\")  </i>: 특정 URL에 대해서 어떻게 처리할지 설정 </p>\r\n                                                <p> <i>+ .permitAll()  </i>: 모든 인증에 대해서 통과</p>\r\n                                                <p> <i>+ .denyAll() </i> : 모두 접근 불가 </p>\r\n                                                <p> <i>+ .hasAnyRole(\"ROLE_GUEST\",\"ROLE_USER\",\"ROLE_MEMBER\",\"ROLE_ADMIN\") </i> : 4개중 맞는 권한이 있어야 허용 </p>\r\n                                                <p> <i>+ .hasRole(\"ROLE_GUEST\",\"ROLE_USER\",\"ROLE_MEMBER\",\"ROLE_ADMIN\")  </i>: 1개의 선택한 권한이상이면 허용 </p>\r\n                                                <p> <i>anyRequest().authenticated()  </i>: 나머지 요청은 권한이 있어야 접근이 가능 </p>\r\n                                                <p> <i>.anonymous()  </i>: 인증이 된 유저는 접근이 불가능하게 한다. </p>\r\n                                                <p> <i> </i> </p>\r\n                                                <p> <i> </i> </p>\r\n                                                <span className=\"sstitle\"> <a name=\"formLogin()\"> formLogin() </a> </span>\r\n                                                <p> <i>.loginpage(\"/경로\")  </i>: 로그인페이지로 선택 </p>\r\n                                                <p><i> .defaultSuccessUrl(\"/경로\")  </i>: 로그인 성공시 이동할 경로 </p>\r\n                                                <p>  <i> .disable()</i> :  사용을 하지 않음</p>\r\n                                                <span className=\"sstitle\"> <a name=\"logout()\"> logout() </a> </span>\r\n                                                <p><i> .logoutSuccessUrl(\"/경로\")  </i>: 로그아웃 성공시 이동할 경로 </p>\r\n                                                <p><i> .invalidateHttpSession(true)  </i>: 세션 날리기  </p>\r\n                                                <p><i> .disable()</i> :  사용을 하지 않음</p>\r\n                                                <span className=\"sstitle\"> addFilterBefore(securityAuthenticationFilter(),\r\n                                                    UsernamePasswordAuthenticationFilter.class)  </span>\r\n                                                <p> 커스텀한 securityAuthenticationFilter() 필터를  </p>\r\n                                                <p>  <i> </i></p>\r\n                                                <p>  <i> </i></p>\r\n                                                <p>  <i> </i></p>\r\n                                                <span className=\"sstitle\"> <a name=\"\"></a> </span>\r\n                                                <p> </p>\r\n                                                {/* <span className=\"sstitle\">   </span>\r\n                                    <p> </p> */}\r\n\r\n                                            </span>\r\n                                            <p>  </p> {/* 코드 */}\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p> @Override </p>\r\n                                            <p className=\"col_r\"> configure(AuthenticationManagerBuilder auth) {\"{\"}</p>\r\n                                            <p> auth.authenticationProvider(customAuthenticationProvider()); </p> {/* 코드 */}\r\n                                            <p> auth.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder()); </p> {/* 코드 */}\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p> @Bean 커스텀 </p>\r\n                                            <p className=\"col_r\"> AuthenticationManager getAuthenticationManager() {\"{\"}</p>\r\n                                            <p> return super.authenticationManagerBean();</p> {/* 코드 */}\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p> @Bean 커스텀 </p>\r\n                                            <p className=\"col_r\"> CustomAuthenticationProvider customAuthenticationProvider() {\"{\"}</p>\r\n                                            <p> return new CustomAuthenticationProvider(); </p> {/* 코드 */}\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                        <span className=\"mblock\">\r\n                                            <p> @Bean 커스텀 </p>\r\n                                            <p className=\"col_r\"> PasswordEncoder passwordEncoder() {\"{\"}</p>\r\n                                            <p> return new BCryptPasswordEncoder(); </p> {/* 코드 */}\r\n                                            <p className=\"col_r\"> {\"}\"} </p>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> UserEntity </summary>\r\n                                    <p> <small> UserDetails 상속 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> UserService </summary>\r\n                                    <p> <small> UserDetailService 인터페이스 상속 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\">  </summary>\r\n                                    <p> <small> </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\">  </summary>\r\n                                    <p> <small> </small> </p>\r\n                                </details>\r\n                                {/* <details>\r\n                                    <summary className=\"col_g\">  </summary>\r\n                                    <p> <small> </small> </p>\r\n                                </details> */}\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\" > <a name=\"스프링 시큐리티 처리 필터 순서\"> 스프링 시큐리티 처리 필터 순서 </a>  </p>\r\n                            <span className=\"mblock\">\r\n                                <details>\r\n                                    <summary className=\"col_g\"> SecurityContextPersistenceFilter </summary>\r\n                                    <p> <small> SecurityContextRepository에서 SecurityContext 객체의 생성,저장,조회를 담당 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> LogoutFilter </summary>\r\n                                    <p> <small> 로그아웃 URL로 지정된 가상URL에 대한 요청을 감시하고 매칭되는 요청이 있으면 사용자를 로그아웃시킴 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> UsernamePasswordAuthenticationFilter(필수?) </summary>\r\n                                    <p> <small> 사용자명과 비밀번호로 이뤄진 폼기반 인증에 사용하는 가상 URL요청을 감시하고 요청이 있으면 사용자의 인증을 진행함 </small> </p>\r\n                                    <p> <img src={process.env.PUBLIC_URL + '/img/SpringStudy/SpringSecurity/UsernamePasswordAuthenticationFilter_1.PNG'} alt='' /> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> DefaultLoginPageGeneratingFilter </summary>\r\n                                    <p> <small> 폼기반 또는 OpenID 기반 인증에 사용하는 가상URL에 대한 요청을 감시하고 로그인 폼 기능을 수행하는데 필요한 HTML을 생성함 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> BasicAuthenticationFilter </summary>\r\n                                    <p> <small> HTTP 기본 인증 헤더를 감시하고 이를 처리함 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> SecurityContextHolderAwareRequestFilter </summary>\r\n                                    <p> <small>로그인 성공 이후 인증 요청에 의해 가로채어진 사용자의 원래 요청을 재구성하는데 사용됨\r\n                                        SecurityContextHolderAwareRequestFilter HttpServletRequest를 HttpServletRequestWrapper를\r\n                                        상속하는 하위 클래스(SecurityContextHolderAwareRequestWrapper)로 감싸서 필터 체인상 하단에\r\n                                        위치한 요청 프로세서에 추가 컨텍스트를 제공함  </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> AnonymoutAuthenticationFilter </summary>\r\n                                    <p> <small> 이 필터가 호출되는 시점까지 사용자가 아직 인증을 받지 못했다면 요청 관련 인증 토큰에서\r\n                                        사용자가 익명 사용자로 나타나게 됨 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> RequestCacheAwareFilter </summary>\r\n                                    <p> <small> 인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련한 모든 세션들이 트래킹되도록 도움 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> ExceptionTranslationFilter </summary>\r\n                                    <p> <small> 이 필터는 보호된 요청을 처리하는 동안 발생할 수 있는 기대한 예외의 기본 라우팅과 위임을 처리함 </small> </p>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_g\"> FilterSecurityInterceptor </summary>\r\n                                    <p> <small> 이 필터는 권한부여와 관련한 결정을 AccessDecisionManager에게\r\n                                        위임해 권한부여 결정 및 접근 제어 결정을 쉽게 만들어 줌 </small> </p>\r\n                                </details>\r\n                            </span>\r\n                        </span>\r\n                        {/* <span className=\"sblock\">\r\n                            <p className=\"sstitle\" > <a name=\"\">   </a>   </p>\r\n                            <p>  </p>\r\n                            <p>  </p>\r\n                        </span> */}\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n\r\n\r\n                    {/*  */}\r\n\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                        </span>\r\n                    </span> */}\r\n\r\n                    {/*  */}\r\n\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                        </span>\r\n                    </span> */}\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                        </span>\r\n                    </span> */}\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringStudy;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringSecurityExCode1 = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#Spring Security ExCode1\" className=\"col_b\"> <b> Spring Security ExCode1 </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> demo </summary>\r\n                            <details open>\r\n                                <summary> src</summary>\r\n                                <details open>\r\n                                    <summary className=\"col_r\"> main </summary>\r\n                                    <details>\r\n                                        <summary> java</summary>\r\n                                        <details>\r\n                                            <summary> 패키지명 </summary>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> config </summary>\r\n                                                <a href=\"#WebSecurityConfig\" className=\"col_p\"> WebSecurityConfig </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> controller </summary>\r\n                                                <a href=\"#UserController\" className=\"col_p\"> UserController </a>\r\n                                            </details>\r\n                                        </details>\r\n                                    </details>\r\n                                    <details>\r\n                                        <summary> resources </summary>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> templates </summary>\r\n                                            <a href=\"#login\" className=\"col_p\"> login </a>\r\n                                            <a href=\"#loginsuccess\" className=\"col_p\"> loginsuccess </a>\r\n                                        </details>\r\n                                        <p> <a className=\"col_p\" href=\"#application.properties\"> application.properties </a> </p>\r\n                                    </details>\r\n                                    {/* <a href=\"#build.gradle\" className=\"col_p\"> build.gradle </a> */}\r\n                                </details>\r\n\r\n                                {/* <details>\r\n                                    <summary className=\"col_r\"> test </summary>\r\n                                    <details>\r\n                                        <summary> java </summary>\r\n                                    </details>\r\n                                </details> */}\r\n                            </details>\r\n                        </details>\r\n                        <details>\r\n                            <summary> 결과 </summary>\r\n                            <a href=\"#view.login\" className=\"col_p\"> view.login </a>\r\n                            <a href=\"#view.loginsuccess\" className=\"col_p\"> view.loginsuccess </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Spring Security ExCode1\">  Spring Security ExCode1 </a> </span>\r\n                    <p> <small> 스프링 시큐리티 loginform 기능만 테스트하는 예제 </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"spring initializr\"> spring initializr</a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/SpringSecurityStart.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"WebSecurityConfig\"> WebSecurityConfig </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/WebSecurityConfig.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserController\"> UserController </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/UserController.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"><a name=\"login\"> login </a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/login.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"loginsuccess\"> loginsuccess </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/loginsuccess.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.properties\"> application.properties </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/application.properties.PNG'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"view.login\"> view.login </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/view.login.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"view.loginsuccess\"> view.loginsuccess </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/view.loginsuccess.PNG'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode1;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringSecurityExCode2 = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#Spring Security ExCode1\" className=\"col_b\"> <b> Spring Security ExCode2 </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> demo </summary>\r\n                            <details open>\r\n                                <summary> src</summary>\r\n                                <details open>\r\n                                    <summary className=\"col_r\"> main </summary>\r\n                                    <details>\r\n                                        <summary> java</summary>\r\n                                        <details>\r\n                                            <summary> 패키지명 </summary>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> config </summary>\r\n                                                <a href=\"#UserMvcConfig\" className=\"col_p\"> UserMvcConfig </a>\r\n                                                <a href=\"#WebSecurityConfig\" className=\"col_p\"> WebSecurityConfig </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> controller </summary>\r\n                                                <a href=\"#UserController\" className=\"col_p\"> UserController </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> domain </summary>\r\n                                                <a href=\"#UserEntity\" className=\"col_p\"> UserEntity </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> dto </summary>\r\n                                                <a href=\"#UserDto\" className=\"col_p\"> UserDto </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> repository </summary>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                        </details>\r\n                                    </details>\r\n                                    <details>\r\n                                        <summary> resources </summary>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> static </summary>\r\n                                            <a href=\"#index\" className=\"col_p\"> index </a>\r\n                                        </details>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> templates </summary>\r\n                                            <a href=\"#login\" className=\"col_p\"> login </a>\r\n                                            <a href=\"#main\" className=\"col_p\"> main </a>\r\n                                            <a href=\"#signup\" className=\"col_p\"> signup </a>\r\n                                        </details>\r\n                                        <p> <a className=\"col_p\" href=\"#application.yml\"> application.yml </a> </p>\r\n                                    </details>\r\n                                    {/* <a href=\"#build.gradle\" className=\"col_p\"> build.gradle </a> */}\r\n                                </details>\r\n\r\n                                {/* <details>\r\n                                    <summary className=\"col_r\"> test </summary>\r\n                                    <details>\r\n                                        <summary> java </summary>\r\n                                    </details>\r\n                                </details> */}\r\n                            </details>\r\n                        </details>\r\n                        <details>\r\n                            <summary> 결과 </summary>\r\n                            <a href=\"#view.login\" className=\"col_p\"> view.login </a>\r\n                            <a href=\"#view.loginsuccess\" className=\"col_p\"> view.loginsuccess </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Spring Security ExCode1\">  Spring Security ExCode2 </a> </span>\r\n                    <p> <small> 스프링 시큐리티 기능보다는 mysql에 데이터를 저장하고 로그인을 해보는 테스트 그리고 thymeleaf로 화면에 간단한 유저 정보 보여주기 </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"spring initializr\"> spring initializr</a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/SpringSecurityStart.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"WebSecurityConfig\"> WebSecurityConfig </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/WebSecurityConfig.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserMvcConfig\"> UserMvcConfig </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserMvcConfig.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserController\"> UserController </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserController.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserEntity\"> UserEntity </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserEntity.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserDto\"> UserDto </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserDto.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserRepository\"> UserRepository </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserRepository.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"><a name=\"index\"> index </a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/index.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"><a name=\"login\"> login </a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/login.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"><a name=\"main\"> main </a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/main.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"signup\"> signup </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/signup.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.yml\"> application.yml </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/application.yml.png'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> 결과 </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"view.login\"> view.login </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/view.login.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"view.signup\"> view.signup </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/view.signup.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"dosignup\"> dosignup </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/dosignup.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"mysql\"> mysql </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/mysql.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"dologin\"> dologin </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/dologin.png'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode2;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringSecurityExCode3 = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#\" className=\"col_b\"> <b> Spring Security ExCode3 </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> demo </summary>\r\n                            <details open>\r\n                                <summary> src</summary>\r\n                                <details open>\r\n                                    <summary className=\"col_r\"> main </summary>\r\n                                    <details>\r\n                                        <summary> java</summary>\r\n                                        <details>\r\n                                            <summary> 패키지명 </summary>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> controller </summary>\r\n                                                <a href=\"#UserController\" className=\"col_p\"> UserController </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> entity </summary>\r\n                                                <a href=\"#Users\" className=\"col_p\"> User </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> repository </summary>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> service </summary>\r\n                                                <details>\r\n                                                    <summary className=\"col_g\"> serviceImpl </summary>\r\n                                                    <a href=\"#UserService\" className=\"col_p\"> UserService</a>\r\n                                                </details>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                            <p> <a href=\"#DemoApplication\" className=\"col_p\"> DemoApplication </a> </p>\r\n                                        </details>\r\n                                    </details>\r\n                                    <details>\r\n                                        <summary> resources </summary>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> static </summary>\r\n                                        </details>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> templates </summary>\r\n                                        </details>\r\n                                        <p> <a className=\"col_p\" href=\"#application.properties\"> application.properties </a> </p>\r\n                                    </details>\r\n                                    <a href=\"#build.gradle\" className=\"col_p\"> build.gradle </a>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_r\"> test </summary>\r\n                                    <details>\r\n                                        <summary> java </summary>\r\n                                    </details>\r\n                                </details>\r\n                            </details>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">  Spring Security ExCode3  </a> </span>\r\n                    <p> <small> 스프링 Gradel을 이용하여 MySQL에 넣어보는 예제 Postman을 사용하여 파라미터를 입력하여\r\n                        MySQL에 저장하고 삭제하는 것 까지\r\n                    </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> 기초설정 </span>\r\n                        <p> File - Settings - Build,Execution,Deployment - Build Tools - Gradle - Build and run using,Run tests using\r\n                            칸에 Gradle을 Intellij IDEA로 변경 </p>\r\n                        <p> 만약에 디렉토리 폴더에 빨간줄이 뜨면 프로젝트폴더 우클릭 - git add 해주기 </p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/StartSpring_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Directory_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserController\">  controller/UserController.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserController_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Users\">  entity/Users.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Users_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserRepository\">  repository/UserRepository.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserRepository_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserServiceImpl\">  service/serviceImpl/UserServiceImpl.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserServiceImpl_1.PNG'} alt='' /> </p>\r\n                        <span className=\"sblock\">\r\n                            <p> 1. UserRepository 인터페이스 빈 객체를 userRepository로 사용 </p>\r\n                            <p> 2. getAllUsers() 메소드에서 return 값으로 userRepository.findAll()을 반환하는데</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserService\">  service/UserService.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserService_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.properties\"> resources/application.properties </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/application.properties_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"build.gradle\">  build.gradle </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/build.gradle_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode3;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringSecurityExCode4 = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#\" className=\"col_b\"> <b> Intellij-Gradle-JPA-MySQL </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> demo </summary>\r\n                            <details open>\r\n                                <summary> src</summary>\r\n                                <details open>\r\n                                    <summary className=\"col_r\"> main </summary>\r\n                                    <details>\r\n                                        <summary> java</summary>\r\n                                        <details>\r\n                                            <summary> 패키지명 </summary>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> controller </summary>\r\n                                                <a href=\"#UserController\" className=\"col_p\"> UserController </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> entity </summary>\r\n                                                <a href=\"#Users\" className=\"col_p\"> User </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> repository </summary>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> service </summary>\r\n                                                <details>\r\n                                                    <summary className=\"col_g\"> serviceImpl </summary>\r\n                                                    <a href=\"#UserService\" className=\"col_p\"> UserService</a>\r\n                                                </details>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                            <p> <a href=\"#DemoApplication\" className=\"col_p\"> DemoApplication </a> </p>\r\n                                        </details>\r\n                                    </details>\r\n                                    <details>\r\n                                        <summary> resources </summary>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> static </summary>\r\n                                        </details>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> templates </summary>\r\n                                        </details>\r\n                                        <p> <a className=\"col_p\" href=\"#application.properties\"> application.properties </a> </p>\r\n                                    </details>\r\n                                    <a href=\"#build.gradle\" className=\"col_p\"> build.gradle </a>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_r\"> test </summary>\r\n                                    <details>\r\n                                        <summary> java </summary>\r\n                                    </details>\r\n                                </details>\r\n                            </details>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">  Intellij-Gradle-JPA-MySQL </a> </span>\r\n                    <p> <small> 스프링 Gradel을 이용하여 MySQL에 넣어보는 예제 Postman을 사용하여 파라미터를 입력하여\r\n                        MySQL에 저장하고 삭제하는 것 까지\r\n                    </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> 기초설정 </span>\r\n                        <p> File - Settings - Build,Execution,Deployment - Build Tools - Gradle - Build and run using,Run tests using\r\n                            칸에 Gradle을 Intellij IDEA로 변경 </p>\r\n                        <p> 만약에 디렉토리 폴더에 빨간줄이 뜨면 프로젝트폴더 우클릭 - git add 해주기 </p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/StartSpring_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Directory_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserController\">  controller/UserController.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserController_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Users\">  entity/Users.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Users_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserRepository\">  repository/UserRepository.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserRepository_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserServiceImpl\">  service/serviceImpl/UserServiceImpl.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserServiceImpl_1.PNG'} alt='' /> </p>\r\n                        <span className=\"sblock\">\r\n                            <p> 1. UserRepository 인터페이스 빈 객체를 userRepository로 사용 </p>\r\n                            <p> 2. getAllUsers() 메소드에서 return 값으로 userRepository.findAll()을 반환하는데</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserService\">  service/UserService.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserService_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.properties\"> resources/application.properties </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/application.properties_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"build.gradle\">  build.gradle </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/build.gradle_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode4;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringSecurityExCode5 = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#\" className=\"col_b\"> <b> Intellij-Gradle-JPA-MySQL </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> demo </summary>\r\n                            <details open>\r\n                                <summary> src</summary>\r\n                                <details open>\r\n                                    <summary className=\"col_r\"> main </summary>\r\n                                    <details>\r\n                                        <summary> java</summary>\r\n                                        <details>\r\n                                            <summary> 패키지명 </summary>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> controller </summary>\r\n                                                <a href=\"#UserController\" className=\"col_p\"> UserController </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> entity </summary>\r\n                                                <a href=\"#Users\" className=\"col_p\"> User </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> repository </summary>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> service </summary>\r\n                                                <details>\r\n                                                    <summary className=\"col_g\"> serviceImpl </summary>\r\n                                                    <a href=\"#UserService\" className=\"col_p\"> UserService</a>\r\n                                                </details>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                            <p> <a href=\"#DemoApplication\" className=\"col_p\"> DemoApplication </a> </p>\r\n                                        </details>\r\n                                    </details>\r\n                                    <details>\r\n                                        <summary> resources </summary>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> static </summary>\r\n                                        </details>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> templates </summary>\r\n                                        </details>\r\n                                        <p> <a className=\"col_p\" href=\"#application.properties\"> application.properties </a> </p>\r\n                                    </details>\r\n                                    <a href=\"#build.gradle\" className=\"col_p\"> build.gradle </a>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_r\"> test </summary>\r\n                                    <details>\r\n                                        <summary> java </summary>\r\n                                    </details>\r\n                                </details>\r\n                            </details>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">  Intellij-Gradle-JPA-MySQL </a> </span>\r\n                    <p> <small> 스프링 Gradel을 이용하여 MySQL에 넣어보는 예제 Postman을 사용하여 파라미터를 입력하여\r\n                        MySQL에 저장하고 삭제하는 것 까지\r\n                    </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> 기초설정 </span>\r\n                        <p> File - Settings - Build,Execution,Deployment - Build Tools - Gradle - Build and run using,Run tests using\r\n                            칸에 Gradle을 Intellij IDEA로 변경 </p>\r\n                        <p> 만약에 디렉토리 폴더에 빨간줄이 뜨면 프로젝트폴더 우클릭 - git add 해주기 </p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/StartSpring_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Directory_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserController\">  controller/UserController.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserController_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Users\">  entity/Users.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Users_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserRepository\">  repository/UserRepository.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserRepository_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserServiceImpl\">  service/serviceImpl/UserServiceImpl.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserServiceImpl_1.PNG'} alt='' /> </p>\r\n                        <span className=\"sblock\">\r\n                            <p> 1. UserRepository 인터페이스 빈 객체를 userRepository로 사용 </p>\r\n                            <p> 2. getAllUsers() 메소드에서 return 값으로 userRepository.findAll()을 반환하는데</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserService\">  service/UserService.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserService_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.properties\"> resources/application.properties </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/application.properties_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"build.gradle\">  build.gradle </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/build.gradle_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode5;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SpringSecurityExCode6 = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#\" className=\"col_b\"> <b> Intellij-Gradle-JPA-MySQL </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> demo </summary>\r\n                            <details open>\r\n                                <summary> src</summary>\r\n                                <details open>\r\n                                    <summary className=\"col_r\"> main </summary>\r\n                                    <details>\r\n                                        <summary> java</summary>\r\n                                        <details>\r\n                                            <summary> 패키지명 </summary>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> controller </summary>\r\n                                                <a href=\"#UserController\" className=\"col_p\"> UserController </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> entity </summary>\r\n                                                <a href=\"#Users\" className=\"col_p\"> User </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> repository </summary>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                            <details>\r\n                                                <summary className=\"col_g\"> service </summary>\r\n                                                <details>\r\n                                                    <summary className=\"col_g\"> serviceImpl </summary>\r\n                                                    <a href=\"#UserService\" className=\"col_p\"> UserService</a>\r\n                                                </details>\r\n                                                <a href=\"#UserRepository\" className=\"col_p\"> UserRepository </a>\r\n                                            </details>\r\n                                            <p> <a href=\"#DemoApplication\" className=\"col_p\"> DemoApplication </a> </p>\r\n                                        </details>\r\n                                    </details>\r\n                                    <details>\r\n                                        <summary> resources </summary>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> static </summary>\r\n                                        </details>\r\n                                        <details>\r\n                                            <summary className=\"col_g\"> templates </summary>\r\n                                        </details>\r\n                                        <p> <a className=\"col_p\" href=\"#application.properties\"> application.properties </a> </p>\r\n                                    </details>\r\n                                    <a href=\"#build.gradle\" className=\"col_p\"> build.gradle </a>\r\n                                </details>\r\n                                <details>\r\n                                    <summary className=\"col_r\"> test </summary>\r\n                                    <details>\r\n                                        <summary> java </summary>\r\n                                    </details>\r\n                                </details>\r\n                            </details>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">  Intellij-Gradle-JPA-MySQL </a> </span>\r\n                    <p> <small> 스프링 Gradel을 이용하여 MySQL에 넣어보는 예제 Postman을 사용하여 파라미터를 입력하여\r\n                        MySQL에 저장하고 삭제하는 것 까지\r\n                    </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> 기초설정 </span>\r\n                        <p> File - Settings - Build,Execution,Deployment - Build Tools - Gradle - Build and run using,Run tests using\r\n                            칸에 Gradle을 Intellij IDEA로 변경 </p>\r\n                        <p> 만약에 디렉토리 폴더에 빨간줄이 뜨면 프로젝트폴더 우클릭 - git add 해주기 </p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/StartSpring_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Directory_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserController\">  controller/UserController.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserController_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Users\">  entity/Users.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Users_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserRepository\">  repository/UserRepository.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserRepository_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserServiceImpl\">  service/serviceImpl/UserServiceImpl.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserServiceImpl_1.PNG'} alt='' /> </p>\r\n                        <span className=\"sblock\">\r\n                            <p> 1. UserRepository 인터페이스 빈 객체를 userRepository로 사용 </p>\r\n                            <p> 2. getAllUsers() 메소드에서 return 값으로 userRepository.findAll()을 반환하는데</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserService\">  service/UserService.java </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/UserService_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.properties\"> resources/application.properties </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/application.properties_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"build.gradle\">  build.gradle </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/build.gradle_1.PNG'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode6;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Blank = (props) => {\r\n\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#\" className=\"col_b\"> <b> Intellij-Gradle-JPA-MySQL </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <p className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> Spring 초기 설정 </summary>\r\n                            <a href=\"#Eclipse Spring 설정\" className=\"col_r\"> Eclipse Spring 설정 </a>\r\n                        </details>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            {/* <p> <img src={process.env.PUBLIC_URL + '/img/SpringExCode1/Directory_1.PNG'} alt='' /> </p> */}\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">   </a> </span>\r\n                    <p> <small>\r\n                    </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Eclipse Spring 설정\">  Eclipse Spring 설정 </a> </span>\r\n                        <p> <i> 초기 설정 </i> </p>\r\n                        <p> <i>1.</i> Window - Preferencs - enc 입력 - Workspace, Css Files, HTML Files, JSP Files 인코딩\r\n                            UTF-8로 모두 바꾸어 주기  </p>\r\n                        <p> <i>2.</i> Help - Eclipse MarketPlace - Spring Tools 3(Standalone Edition) 설치 </p>\r\n                        <p> <i>3.</i> Help - Eclipse MarketPlace - Spring Tools 3(Add-On for Spring Tools)) 설치?? </p>\r\n                        <p> <i>4.</i> Help - Install New Software - Add - Name에 STS ,\r\n                            Location에 https://dist.springsource.com/snapshot/TOOLS/nightly/e4.18 입력\r\n                            그리고 Add버튼 클릭\r\n                        </p>\r\n                        <p> <i>5.</i> 체크박스 모드 체크 그리고 Next 버튼 클릭 그리고 모두 동의 및 Next </p>\r\n                        <p> <i>6.</i> File - New - Other - spring 입력 - Spring Legacy Project - 프로젝트 이름 입력-\r\n                            templates에서 Spring MVC Project로 선택 하고 다음 - com.spring.app 와 같이 3단계 이상으로\r\n                            이름 입력\r\n                        </p>\r\n                        <p> <i>7.</i> 프로젝트 우클릭 - Properties - Project Facets - 자바버전 맞추어주기\r\n                            (cmd창에서 java -version 으로 확인가능) - 우측에 runtimes 탭에 가서 - 아파치톰캣버전 선택하고 apply </p>\r\n                        <p> <i>8.</i> src/main/resources 에서 log4j.xml만 남기고 다 삭제 </p>\r\n                        <p> <i>9.</i> src - main - webapp - WEB-INF - spring과 views 파일 삭제 그리고 web.xml에 &lt;web-app&gt; 상단\r\n                            부분 뺴고 내부에 맵핑코드 삭제 </p>\r\n                        <p> <i>10.</i> pom.xml에 springframework버전을 4.2.4로 수정을 하고 강제 업데이트 하기</p>\r\n                        <p> <i>11.</i> 프로젝트 우클릭 - Maven - Update Project - 확인</p>\r\n                        <p> <i>12.</i> 제대로 설치되었으면 Java Resources - Libraries - Maven Dependencies 에서 버전 확인 </p>\r\n                        <p> <i>13.</i> 혹시 포로젝트 익스프롤러에 빨간줄이 보이면 버전이 자바버전이 틀려서 그럴수 있음\r\n                            pom.xml에거서 java-version, 아래쪽에 maven.plugins에 source,target 버전을 11(본인버전)으로 변경하고\r\n                            강제 업데이트 </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Directory\">  Directory </a> </span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Blank;","import React from 'react';\r\n\r\nconst WindowCommand = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> 0. 윈도우 명령어 (하이퍼링크) </span>\r\n                <span className=\"mblock\">\r\n                    <p className=\"hyperlink\">\r\n                        <a href=\"#톰캣 라이브러리\">1. </a>\r\n                    </p>\r\n                </span>\r\n            </span>\r\n            {/* <p> <img src={process.env.PUBLIC_URL + '/img/SpringBootLibrary.png'} /> </p> */}\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"\"> 1.cmd 명령어  </a> </span>\r\n                <p> <i> cd 폴더 </i>  : 폴더로 이동 </p>\r\n                <p> <i> cd.. </i>  : 이전 폴더로 돌아가기 </p>\r\n                <p> <i> dir </i>  : 폴더가 포함하고 있는 파일 목록 보여주기 </p>\r\n                <p> <i> 파일명 tasks </i>  : 파일로 실행할 수 있는 명령어 보여주기 </p>\r\n                <span className=\"mblock\">\r\n                    {/* <h3> HTML </h3>\r\n                    <h3> 자바 클래스 </h3> */}\r\n                </span>\r\n\r\n            </span>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default WindowCommand;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst OracleDBStudy = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b>  </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary>  </summary>\r\n                            <a href=\"#기본용어\">  기본용어 </a>\r\n                            <a href=\"#데이터베이스 관련\"> 데이터베이스 관련  </a>\r\n                            <a href=\"#테이블 관련\"> 테이블 관련  </a>\r\n                            <a href=\"#유저 관련 설정\"> 유저 관련 설정  </a>\r\n                            <a href=\"#권한 관련\">  권한 관련 </a>\r\n                            <a href=\"#REVOKE\">  REVOKE </a>\r\n                            <a href=\"#ALTER\"> ALTER  </a>\r\n                            <a href=\"#DROP\">  DROP </a>\r\n                            <a href=\"#TRUNCATE\">  TRUNCATE </a>\r\n                            <a href=\"#INSERT\"> INSERT </a>\r\n                            <a href=\"#UPDATE\"> UPDATE  </a>\r\n                            <a href=\"#DELETE\"> DELETE  </a>\r\n                            <a href=\"#SELECT\"> SELECT </a>\r\n                            <a href=\"#조건문\"> 조건문  </a>\r\n                            <a href=\"#트랜잭션\"> 트랜잭션  </a>\r\n                            <a href=\"#시퀸스\"> 시퀸스  </a>\r\n                            <a href=\"#날짜,시간\">  날짜,시간 </a>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n\r\n                    <span className=\"mtitle\"> <a name=\"MySQL Study\">  OracleDB 공부  </a> </span>\r\n                    <p> cmd창으로 접속 방법 : sqlplus 유저명/비번 </p>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"기본용어\"> 기본용어 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 기본용어 </span>\r\n                            <ul>\r\n                                <li> 스키마 : 사용자가 생성한 객체(테이블,인덱스,프로시저,뷰 등), DBMS마다 차이가 있음 </li>\r\n                                <li> 테이블 : DB데이터(레코드)를 정렬하여 보관하고 있는 단위 , 테이블을 컬럼(필드)과 레코드로 구성되어있다. </li>\r\n                                <li> 레코드 : 한 객체에 대한 정보, 테이블에 가로줄 , ex{\")\"} 한명의 유저의 아이디,비밀번호,이메일 등을 가지고 있는 단위 </li>\r\n                                <li> 컬럼,필드 : 객체에 있는 속성들을 정의하는 단위, ex{\")\"} 컬럼 종류 : 아이디, 비밀번호, 이메일, 부서, 나이 등등 </li>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"데이터베이스 관련\"> 데이터베이스 관련 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 모든 유저 조회 </span>\r\n                                <li> SELECT * FROM ALL_users; </li>\r\n                                <span className=\"sstitle\"> 특정 유저 조회 </span>\r\n                                <li> SELECT 유저명 FROM ALL_users; </li>\r\n                                <span className=\"sstitle\"> 모든 DB(스키마) 확인 </span>\r\n                                <li>  SELECT * FROM DBA_users; </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>   </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"테이블 관련\"> 테이블 관련 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 테이블의 컬럼 조회 </span>\r\n                                <li> DESC 테이블명; </li>\r\n                                <span className=\"sstitle\"> 모든 스키마 확인 </span>\r\n                                <li>   </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>   </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>   </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"유저 관련 설정\">  유저 관련 설정 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 유저 생성 </span>\r\n                                <li> create user c##유저명 identified by 비번; </li>\r\n                                <span className=\"sstitle\"> 접속 유저 변경 </span>\r\n                                <li> conn c##유저명/비번; (connect 권한이 필요) </li>\r\n                                <span className=\"sstitle\"> 접속사용자 확인 </span>\r\n                                <li> show user; </li>\r\n                                <span className=\"sstitle\"> 유저 비번 변경 </span>\r\n                                <li>  ALTER USER c##유저명 IDENTIFIED BY 변경할 비번; </li>\r\n                                <span className=\"sstitle\"> 사용자가 가진 테이블 목록을 보여준다. </span>\r\n                                <li> SELECT tname FROM tab; </li>\r\n                                <span className=\"sstitle\"> 유저 삭제 </span>\r\n                                <li> DROP USER c##유저명; </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"권한 관련\">  권한 관련 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> GRANT </span>\r\n                                <li> GRANT @ TO C##유저명; </li>\r\n                                <span className=\"mblock\">\r\n                                    <ul>\r\n                                        <span className=\"sstitle\"> @에 들어가는 코드 </span>\r\n                                        <li> connect </li>\r\n                                        <li> resource </li>\r\n                                        <li> create view : 뷰 생성</li>\r\n                                        <li> create procedure : 프로시저 생성 </li>\r\n                                        <li> create sequence : 시퀸스 생성 </li>\r\n                                        <li> dba </li>\r\n                                        <li> create user : 유저생성 </li>\r\n                                        <li> select any table : 모든 유저 테이블 조회 </li>\r\n                                        <li> create any table : 모든 유저 테이블 생성 </li>\r\n                                        <li> create session : 데이터 베이스 접속 </li>\r\n                                        <li> create table : 테이블 생성 </li>\r\n                                        <li> sysdba : 데이터베이스관리 최고권한(사용 비추) </li>\r\n                                        <li> sysoper : 데이터베이스 관리 권한 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </ul>\r\n                                </span>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"REVOKE\">  REVOKE </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 유저 연결 끊기 </span>\r\n                                <li> REVOKE connect FROM c##유저명; </li>\r\n                                <span className=\"sstitle\"> 유저 권한,sys명령,SQL 끊기 </span>\r\n                                <li> REVOKE 권한,sys명령,SQL on 테이블명 FROM c##유저명; </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> CREATE </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 테이블 생성 </span>\r\n                                <li> create table 테이블명(컬럼명 타입 속성) </li>\r\n                                <span className=\"mblock\">\r\n                                    <span className=\"sstitle\"> 타입 </span>\r\n                                    <ul>\r\n                                        <li> NUMBER : 숫자 </li>\r\n                                        <li> VARCHAR(데이터크기) : 가변길이 텍스트 </li>\r\n                                        <li> CLOB : 대용량 텍스트 </li>\r\n                                        <li> DATE : 고정길이 날짜 </li>\r\n                                        <li> BLOB : 대용량 이진데이터 </li>\r\n                                        <li> CHAR(데이터크기) : 고정길이 데이터 </li>\r\n                                        <li> NCHAR(데이터크기) : 전세계문자 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </ul>\r\n                                    <span className=\"sstitle\"> 속성 </span>\r\n                                    <ul>\r\n                                        <li> PRIMARY KEY </li>\r\n                                        <li> NOT NULL </li>\r\n                                        <li> DEFAULT 값  </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </ul>\r\n                                </span>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"ALTER\"> ALTER </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 테이블 컬럼의 타입과 속성을 변경한다 </span>\r\n                                <li> ALTER TABLE 테이블명 MODIFY(컬럼명 타입, 바꿀컬럼명 타입); </li>\r\n                                <span className=\"sstitle\"> 테이블 컬럼 추가 </span>\r\n                                <li> ALTER TABLE 테이블명 ADD(컬럼명 타입); </li>\r\n                                <span className=\"sstitle\"> 테이블 컬럼 삭제 </span>\r\n                                <li> ALTER TABLE 테이블명 DROP(컬럼명1, 컬럼명2) </li>\r\n                                {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"DROP\"> DROP </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 테이블 삭제 </span>\r\n                                <li> DROP TABLE 테이블명; , 테이블에 레코드가 존재하면 지워지지 않는것으로 알고 있음 </li>\r\n                                <span className=\"sstitle\"> 테이블에 레코드가 있을 떄 강제 삭제 </span>\r\n                                <li> DROP TABLE 테이블명 CASCADE CONSTRAINTS PURGE; </li>\r\n                                {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"TRUNCATE\"> TRUNCATE </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 테이블의 모든 레코드 삭제 </span>\r\n                                <li>  TRUNCATE TABLE 테이블명; </li>\r\n                                {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"INSERT\"> INSERT </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 레코드 생성 </span>\r\n                                <li> INSERT INTO 테이블명 VALUES(컬럼값1, 컬럼값2, ...); , 단 컬럼은 순서에 맞게 입력해야 한다. </li>\r\n                                <li> INSERT INTO 테이블명(컬럼명1, 컬럼명2, ...) VALUES(컬럼값1, 컬럼값2, ...);  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UPDATE\"> UPDATE </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 조건에 맞게 테이블 레코드의 컬럼값들을 변경  </span>\r\n                                <li> UPDATE 테이블명 SET 컬럼명=바꿀값 WHERE 조건문 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"DELETE\">  DELETE </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 조건에 맞는 테이블 레코드를 삭제 </span>\r\n                                <li> DELETE FROM 테이블명 WHERE 조건문 </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"SELECT\">  SELECT </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 테이블 특정 컬럼값만 조회 </span>\r\n                                <li> SELECT 컬럼명1,컬럼명2 FROM 테이블명;  </li>\r\n                                <span className=\"sstitle\"> 테이블 모든 컬럼값 조회 </span>\r\n                                <li> SELECT * FROM 테이블명; </li>\r\n                                <span className=\"sstitle\"> 시퀸스 조회 </span>\r\n                                <li> SELECT * FROM 시퀸스명; </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"조건문\"> 조건문 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"mblock\">\r\n                                    <span className=\"sstitle\"> WHERE </span>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"mblock\">\r\n                                    <span className=\"sstitle\"> LIKE </span>\r\n                                    <small> LIKE는 대소문자를 구분하여 컬럼값 검색 그러므로 문자열을 대문자나,소문자로 바꾸어서 검색</small>\r\n                                    <li> 와일드카드 : %(어떠한 문자든 검색) , _(자릿수 검색) </li>\r\n                                    <li> ex) WHERE 컬럼명 LIKE 'MI%' , 대문자 MI로 시작하는 컬럼값 비교 </li>\r\n                                    <li> ex) WHERE 컬럼명 LIKE '%KE' , 대문자 KE로 끝나는 컬럼값 검색 </li>\r\n                                    <li> ex) WHERE 컬럼명 LIKE '%IK%', 대문자 IK를 포함하는 컬럼값 검색  </li>\r\n                                    <li> ex) WHERE 컬럼명 (UPPER)LIKE (UPPER)'%IK%', IK를 포함하는 컬럼값 검색  </li>\r\n                                    <li> ex) WHERE 컬럼명 (LOWER)LIKE (LOWER)'%IK%', IK를 포함하는 컬럼값 검색  </li>\r\n                                    <li> ex) WHERE 컬럼명 LIKE '%IK%' OR 컬럼명 LIKE '%OH%', IK혹은 OH를 포함하는 컬럼값 검색  </li>\r\n                                    <li> ex) WHERE REGEXP _LIKE(컬럼명, 'MIKE|JOHN')  , IK혹은 OH를 포함하는 컬럼값 검색  </li>\r\n                                    <li> ex) WHERE 컬럼명 NOT LIKE '%IK%', IK를 포함하지않는 컬럼값 검색  </li>\r\n                                    <li> ex) WHERE 컬럼명 LIKE 'MIK_' , MIK + 1글자 를 가진 컬럼값을 검색   </li>\r\n                                    <li> ex) WHERE 컬럼명 LIKE '%K_' , %K + 1글자 K라는글자뒤에 1글자가 포함된 컬럼값 검색 </li>\r\n                                    <li> ex) WHERE 컬럼명 LIKE '%\\_%' ESCAPE '\\' , 언더바문자(_)를 포함하는 컬럼값 검색 ,\r\n                                        \\문자말고도 아무런 문자 사용이 가능하다. 동일하게만 설정해주면 가능하다 </li>\r\n                                </span>\r\n                                <span className=\"mblock\">\r\n                                    <span className=\"sstitle\"> BETWEEN </span>\r\n                                    <li> BETWEEN 시작범위 AND 종료범위 </li>\r\n                                    <li> SELECT * FROM emp where employage BETWEEN '10' AND '20' </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"트랜잭션\"> 트랜잭션 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 커밋 </span>\r\n                                <li> COMMIT; </li>\r\n                                <li> SET AUTOCOMMIT=1(auto),0(!auto) </li>\r\n                                <li> 자동 COMMIT : 정상 졸료되거나, DDL,DCL명령이 수행된 경우 </li>\r\n                                <span className=\"sstitle\"> 롤백 </span>\r\n                                <li> ROLLBACK; : 이전 커밋까지 복구 </li>\r\n                                <li> ROLLBACK TO SAVAPOINT 롤백세이브명 : 세이브 포인트 지점으로 롤백한다. </li>\r\n                                <li> SAVAPOINT 롤백세이브명 : 세이브 포인트 지점을 저장한다. </li>\r\n                                <li> 자동 ROLLBACK : 비정상종료 된 경우 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"시퀸스\">  시퀸스 </a> </span>\r\n                        <ul>\r\n                            <li><small> Unique값을 생성해주는 Oracle객체 </small>    </li>\r\n                            <li><small> 자동으로 증가하는 컬럼 생성가능 </small>   </li>\r\n                            <li><small>시퀸스는 테이블과 독립적으로 작용하며 여러 테이블에 사용이 가능한다. </small>    </li>\r\n                        </ul>\r\n                        <span className=\"sblock\">\r\n                            <small> 한번에 속성값을 포함하여 한줄로 코딩</small>\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 시퀸스 생성 </span>\r\n                                <li>  CREATE SEAUENCE 시퀸스명 </li>\r\n                                <span className=\"sstitle\"> 시퀸스 시작값 지정 </span>\r\n                                <li>  START WITH 시작값(숫자) </li>\r\n                                <span className=\"sstitle\"> 시퀸스 증가값 지정  </span>\r\n                                <li>  INCREMENT BY 증가값(숫자) </li>\r\n                                <span className=\"sstitle\"> 시퀸스 최댓값 지정 </span>\r\n                                <li>  MAXVALUE 최대값(숫자) </li>\r\n                                <span className=\"sstitle\"> 시퀸스 최솟값 지정 </span>\r\n                                <li>  MINVALUE 최솟값(default=20,숫자) </li>\r\n                                <span className=\"sstitle\"> CACHE 사용여부 </span>\r\n                                <li> NOCACHE / CACHE 캐시수(숫자) </li>\r\n                                <span className=\"sstitle\"> 최댓값 도달시 시작값부터 다시 반복 설정 </span>\r\n                                <li> NOCYCLE / CYCLE , 캐시를 사용하여 미리 값을 할당해 놓으면 속도가 빠르며, 동시 사용자가 많으면 유리하다고 한다.\r\n                                    그렇다면 반대는?</li>\r\n                                <span className=\"sstitle\"> 요청 순서대로 값을 생성할지 여부 </span>\r\n                                <li> NOORDER / ORDER , 요청순서로 값을 생성하여 순서를 보장하지만 시스템의 부하가 약간 있음</li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 시퀸스 수정 </span>\r\n                                <li> ALTER SEQUENCE 시퀸스명 수정할내용과값(ex) INCREMENT BY 1) </li>\r\n                                <span className=\"sstitle\"> 시퀸스 삭제 </span>\r\n                                <li> DROP SEQUENCE 시퀸스명 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"stitle\"> 시퀸스 사용 </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> NEXTVAL </span>\r\n                            <li> 시퀸스명.NEXTVAL , 시퀸스에 컬럼값을 넣을 떄 자동으로 값이 증가한다. </li>\r\n                            <span className=\"sstitle\"> CURRVAL </span>\r\n                            <li> SELECT 시퀸스명.CURRVAL FROM dual , 현재 시퀸스 순번을 가져온다. NEXTVAL을 한번 실행한\r\n                                쿼리에서 사용이 가능하다고 한다. </li>\r\n                            <span className=\"sstitle\">  </span>\r\n                            <li>  </li>\r\n                            <span className=\"sstitle\">  </span>\r\n                            <li>  </li>\r\n                            <span className=\"sstitle\">  </span>\r\n                            <li>  </li>\r\n                        </span>\r\n                    </span>\r\n\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"날짜,시간\"> 날짜,시간 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> TO_DATE('날짜', '형식') </span>\r\n\r\n                                <li> TO_DATE('2021-07-18','YYYY-MM-DD') </li>\r\n                                <li> TO_DATE('11:11:11','HH24:MI:SS') </li>\r\n                                <li> TO_DATE('2021-07-18 11:11:11','YYYY-MM-DD HH24:MI:SS') </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 날짜 차이 계산 </span>\r\n                                <small> ROUND나 TRUNC 함수를 이용하여 초단위를 처리 </small>\r\n                                <span className=\"sstitle\"> 시간 차이 계산 </span>\r\n                                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 </li>\r\n                                <li> TO_DATE(HH24:MI) - TO_DATE(HH24:MI) * 24 </li>\r\n                                <li> ROUND(TO_DATE(HH24:MI) - TO_DATE(HH24:MI) * 24,2) </li>\r\n                                <span className=\"sstitle\"> 분 차이 계산 </span>\r\n                                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 * 60 </li>\r\n                                <span className=\"sstitle\"> 초 차이 계산 </span>\r\n                                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 * 60 * 60</li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"기타\">  기타 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> cmd창에서 간격 조절 </span>\r\n                                <li> SET LINESIZE 문자수; </li>\r\n                                <li> SET PAGESIZE 라인수; </li>\r\n                                <li> COL 컬럼명 FOR a출력자리공간(숫자로 a뒤에 입력); </li>\r\n                                {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default OracleDBStudy;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst MySQLStudy = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b>  </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary>  </summary>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n\r\n                    <span className=\"mtitle\"> <a name=\"MySQL Study\">  MySQL Study  </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span> */}\r\n\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default MySQLStudy;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst MySQLStudy = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b>  </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary>  </summary>\r\n                            <a href=\"#회사 관련\">  회사 관련 </a>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n\r\n                    <span className=\"mtitle\"> <a name=\"데이터베이스 변수 이름\">  데이터베이스 변수 이름  </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"회사 관련\"> 회사 관련 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 직원 </span>\r\n                                <li> empno : 직원 번호 </li>\r\n                                <li> ename : 직원 이름 </li>\r\n                                <li> job : 직업 </li>\r\n                                <li> hiredate : 고용일 </li>\r\n                                <li> sal,salary : 월금 </li>\r\n                                <li> comm :  </li>\r\n                                <li> deptno : 부서 번호 </li>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li> </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default MySQLStudy;\r\n","import React from 'react';\r\n\r\nconst KeyMap = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> 0. 단축키 (하이퍼링크) </span>\r\n                <span className=\"mblock\">\r\n                    <p className=\"hyperlink\">\r\n                        <a href=\"#Intellij 단축키\">1. Intellij 단축키 </a>\r\n                    </p>\r\n                </span>\r\n            </span>\r\n            {/* <p> <img src={process.env.PUBLIC_URL + '/img/SpringBootLibrary.png'} /> </p> */}\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"Intellij 단축키\"> 1.Intellij 단축키  </a> </span>\r\n                <p> <a href=\"https://gmlwjd9405.github.io/2019/05/21/intellij-shortkey.html\" target=\"_blank\"> 참고 </a></p>\r\n                <p> <i> Alt + 1 </i>  : Project View 열고 닫기 </p>\r\n                <p>  Ctrl + Shift + T   : 테스트 코드 작성 </p>\r\n                <p> <i> Shift + F6 </i>  : 이름 변경(동일이름 전부 변경) </p>\r\n                <p> <i> Ctrl + D </i>  : 코드 한줄 아래 복사 붙여넣기 </p>\r\n                <p> <i> Ctrl + X </i>  : 코드 한줄 지우기 </p>\r\n                <p> Ctrl + A   : 코드 전체 드래그 </p>\r\n                <p> <i> Ctrl + Alt + l </i>  : 코드 정리 </p>\r\n                <p> <i> Alt + Insert </i>  : 생성자, getter,setter 등 </p>\r\n                <p> <i> Alt + Enter </i>  :  코드 수정 제안 </p>\r\n                <p> <i> Alt + Shift + 방향키 </i>  :  코드 라인 위치 옮기기 </p>\r\n                <p> <i> Ctrl + / </i>  : 해당 줄 주석 처리 </p>\r\n                <p> Ctrl + E   : 최근 실행 파일 확인 </p>\r\n                <p> Ctrl + B   : 코드에서 선택된 필드 코드로 이동 </p>\r\n                <p> Alt + F7   : 항목이 사용된 위치를 모두 표시 </p>\r\n                <p> Ctrl + W   : 코드 주위 영역 드래그 확대 </p>\r\n                <p> Ctrl + Shift + W   : 코드 주위 영역 드래그 축소 </p>\r\n                <p>  Shift + Ctrl + A   : 모든 액션을 검색 가능  </p>\r\n                <p> <i>  </i>  :  </p>\r\n                <p> <i>  </i>  :  </p>\r\n                <span className=\"mblock\">\r\n                    {/* <h3> HTML </h3>\r\n                    <h3> 자바 클래스 </h3> */}\r\n                </span>\r\n\r\n            </span>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default KeyMap;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Term = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testLeft = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.outerHeight);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.height = window.outerHeight;\r\n            blockRef.current[1].style.left = null;\r\n        }\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#main\" className=\"col_b\"> <b> 스프링 공부 </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> 기본 </summary>\r\n                            <a href=\"#프레임워크와 라이브러리\">  프레임워크와 라이브러리 </a>\r\n                            <a href=\"#URL과 URI\"> URL과 URI </a>\r\n                            <a href=\"#Restful API\"> Restful API</a>\r\n                            <a href=\"#IOC와 DI,POJO\">  IOC와 DI,POJO </a>\r\n                            <a href=\"#TDD (테스트 주도 개발)\">  TDD (테스트 주도 개발) </a>\r\n                            <a href=\"#ORM(Object Relation Mapping)\">  ORM(Object Relation Mapping) </a>\r\n                            <a href=\"#JPA(Java Persistence API)\"> JPA(Java Persistence API)   </a>\r\n                            <a href=\"#Spring MVC\"> Spring MVC  </a>\r\n                            <a href=\"#DataSource\"> DataSource  </a>\r\n                            <a href=\"#Controller와 RestController\"> Controller와 RestController  </a>\r\n                            <a href=\"#Transaction(트랜잭션)\"> Transaction(트랜잭션) </a>\r\n                            <a href=\"#JWT(Json Web Token)\"> JWT(Json Web Token)  </a>\r\n                            <a href=\"#세션,쿠키,토큰\"> 세션,쿠키,토큰  </a>\r\n                            <a href=\"#서버기반, 토큰기반 인증시스템 차이\">  서버기반, 토큰기반 인증시스템 차이 </a>\r\n                            <a href=\"#RequestBody, ModelAttribute, RequestParam의 차이\"> RequestBody, ModelAttribute, RequestParam의 차이  </a>\r\n                            <a href=\"#Bean, Configuration, Component\"> Bean, Configuration, Component  </a>\r\n                            <a href=\"#OOP의 5가지 원칙(SOLID)\"> OOP의 5가지 원칙(SOLID) </a>\r\n                            <a href=\"#Spring Security\"> Spring Security  </a>\r\n                            <a href=\"#Cors(Cross Origin Resource Sharing)\">  Cors(Cross Origin Resource Sharing) </a>\r\n                            <a href=\"#\">   </a>\r\n                            <a href=\"#\">   </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">  용어 정리  </a> </span>\r\n                    <p> <small>   </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"프레임워크와 라이브러리\"> 프레임워크와 라이브러리  </a> </span>\r\n                        <p> 프레임워크 : 소프트웨어의 특정 문제를 해결하기 위해서 상호 협력하는 클래스와 인터페이스의 집합,\r\n                            어플리케이션 개발할 떄 코드,자료구조,DB연결 등 기능들이 제공이 되는 소프트웨어 프로그램(Maven,Gradle 등)  </p>\r\n                        <p> 라이브러리 : 특정 기능들과 도구들을 모아놓은 집합 </p>\r\n                        <p>   </p>\r\n                        <p>   </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Restful API\">  Restful API </a> </span>\r\n                        <p> 어떤 자원에 대해 CRUD 연산을 수행하기 위해 URI(Resource)로 요청을 보내는 것 </p>\r\n                        <p> Resource(자원,URI) + Method(행위,POST) + Representation of Resource(자원형태,JSON) = REST </p>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Uniform Interface (유니폼 인터페이스) </span>\r\n                            <p> HTTP표준이면 어떤 플랫폼에서도 사용가능 </p>\r\n                            <span className=\"sstitle\">Stateless (상태 정보 유지 안함) </span>\r\n                            <p> 서버는 요청을 별개의 것으로 인식  </p>\r\n                            <span className=\"sstitle\"> Cacheable (캐시 가능)</span>\r\n                            <p> http캐싱기능 적용 가능 </p>\r\n                            <span className=\"sstitle\"> Client-Server Architecture </span>\r\n                            <p> 서버는 api(자원)를 제공하고 클라이언트는 인증,세션 등을 관리하여 역할을 구분시킴 </p>\r\n                            <span className=\"sstitle\"> Self-Descriptiveness(자체 표현 구조) </span>\r\n                            <p> REST API 메시지만 보고도 이해할 수 있는 구조 </p>\r\n                            <span className=\"sstitle\"> Layerd System (계층화) </span>\r\n                            <p> 보안, 로드 밸런싱, 암호화 등을 계층을 추가하여 구조를 변경할 수 있다. 또한 Proxy,GateWay와 같은 네트워크\r\n                                기반의 중간매체를 사용할 수 있게 해준다. 하지만 클라이언트는 직접 통신하는지, 중간 서버와\r\n                                통신하는지 알 수 없다. </p>\r\n                            <span className=\"sstitle\"> REST 규칙 </span>\r\n                            <ul>\r\n                                <ol> URI는 명사를 사용 </ol>\r\n                                <ol> 슬래시로 계층 관계를 표현 </ol>\r\n                                <ol> URI의 마지막에는 슬래시를 붙이지 않는다. </ol>\r\n                                <ol> URI는 소문자로 구성 </ol>\r\n                                <ol> 가독성이 떨어지는 경우 하이푼을 사용 </ol>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"URL과 URI\">  URL과 URI </a> </span>\r\n                        <p> URL(Uniform Resource Locator) : 인터넷에 있는 자원의 위치 </p>\r\n                        <p> URI(Uniform Resource Identifier) : 인터넷 상의 자원을 식별하는 문자열, URL을 포함하고 있음 </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"IOC와 DI,POJO\">  IOC와 DI,POJO </a> </span>\r\n                        <p>  </p>\r\n                        <p> DI(의존성 주입) : 객체 의존 관계를 외부에서 넣어주는 방법 @Autowired로 스프링에서는 넣어줌 ,\r\n                            방법은 생성자 주입,수정자(setter) 주입,필드 주입 3가지 방법중에 생성자 주입을 추천\r\n                        </p>\r\n                        <p>  </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"TDD (테스트 주도 개발)\">  TDD (테스트 주도 개발) </a> </span>\r\n                        <p> 단위테스트를 작성 {\"->\"} 구현 클래스믈 작성 {\"->\"} 통합테스트 {\"->\"} </p>\r\n                        <p>  </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"ORM(Object Relation Mapping)\"> ORM(Object Relation Mapping) </a> </span>\r\n                        <p> 객체(Object)와 DB의 테이블을 Mapping 시켜 RDB 테이블을 객체지향적으로 사용하게 해주는 기술 </p>\r\n                        <p> 과거에는 MyBatis라는 Object Mapping기술로 Java코드와 직접 작성한 SQL 코드를 Mapping하여\r\n                            사용하였지만 현재는 JPA와 구현체 Hibernate로 처리를 한다. </p>\r\n                        <p> 하지만 복잡한 쿼리를 작성하기에는 MyBatis가 더 편할 수도 있지만 생산성은 Hibernate가 더 좋다 그렇지만\r\n                        </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"JPA(Java Persistence API)\">  JPA(Java Persistence API) </a> </span>\r\n\r\n                        <span className=\"sblock\">\r\n                            <p> 자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 인터페이스 </p>\r\n                            <p> SQL언어가 아닌 자바 언어를 사용하여 객체지향 관점으로 관리할 수 있게 해준다.</p>\r\n                            <p> 개발자가 DB작업에 집중을 덜 하여도 되고 CRUD를 사용하기 쉬우며 SQL을 수정하기도 쉽고\r\n                                객체와 DB에 넣은 데이터타입의 불일치도 해결을 해준다.\r\n                            </p>\r\n                            <span className=\"sstitle\"> JPQL(Java Persistence Query Language) </span>\r\n                            <p> 자바 객체를 이용하여 SQL 쿼리를 이용할 수 있는 언어</p>\r\n                            <p> JPA(인터페이스)의 구현체 </p>\r\n                            <p> JPA를 사용하기 위해서 필수로 사용해야할 필요는 없다. </p>\r\n                            <p> 다른 구현체 ( DataNucleus,EclipseLink 등) 사용 가능 혹은 사용자 정의 구현체로도 사용 가능</p>\r\n                            <span className=\"sstitle\"> Spring Data JPA</span>\r\n                            <p> Repository 인터페이스로 메소드를 입력하면 적절한 쿼리를 날려준다. </p>\r\n                            <span className=\"sstitle\"> JDBC API </span>\r\n                            <p> JPA를 사용하면 SQL을 보내 DB와 통신하는 API 직접적으로 사용하는 일은 없다. </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Spring MVC\">  Spring MVC </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> Dispatcher Servlet </p>\r\n                            <p> 클라이언트 요청을 받고 HandlerMapping에게 찾으라고 지시  </p>\r\n                            <p className=\"sstitle\"> HandlerMapping </p>\r\n                            <p> Dispatcher Servlet에게 맵핑정보를 받아 Controller를 찾아 요청   </p>\r\n                            <p className=\"sstitle\"> front controller </p>\r\n                            <p> Controller의 명령에 따라 작업을 하고 View를 리턴 Dispatcher Servlet으로 보냄 </p>\r\n                            <p className=\"sstitle\"> ViewResolver </p>\r\n                            <p> Controller리턴 값 View를 검색 </p>\r\n                            <p className=\"sstitle\"> View </p>\r\n                            <p> 처리결과를 View에 송신하여 처리하고 그 View를 Dispatcher Servlet으로 이동하고 클라이언트에게 보냄 </p>\r\n                            <p className=\"sstitle\">  </p>\r\n                            <p>  </p>\r\n                            <p className=\"sstitle\">  </p>\r\n                            <p>  </p>\r\n                            {/* <p className=\"sstitle\">  </p>\r\n                            <p>  </p> */}\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"DataSource\"> DataSource  </a> </span>\r\n                        <p> 자바에서는 Connection Pool을 구현하여 사용하였는데 DB연동과 관련되 로직들이 추상화 되어있다. </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Controller와 RestController\">  Controller와 RestController </a> </span>\r\n                        <a href=\"https://mangkyu.tistory.com/49?category=761302\"> 참고 </a>\r\n                        <p> @Controller : 클라이언트의 요청을 받아 View를 반환 </p>\r\n                        <p> @RestController(@Controller+@ResponseBody) :\r\n                            클라이언트의 요청을 받아 객체형태(JSON 등)로 http에 담아 반환 </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Transaction(트랜잭션)\"> Transaction(트랜잭션)  </a> </span>\r\n                        <span className=\"sblock\">\r\n\r\n                            <p> 장바구니에 담기 여러개 상품구매나 호텔+항공 예약 등 여러개의 쿼리를 사용하여 처리할 때 도중에 문제가 생기면 처음으로\r\n                                돌려놓기 위한 방법   </p>\r\n                            <span className=\"sstitle\">  1. 트랜잭션 동기화 </span>\r\n                            <p> Connection 객체를 특정 장소에 보관하고 필요할 떄 꺼내쓰는 방법, 작업 쓰레드마다 Connection 객체를\r\n                                독립적으로 관리하기 떄문에, 멀티쓰레드 환경에서 충돌이 발생할 여지가 없다. JDBC와 같은 종속적인 트랜잭션 동기화 코드는\r\n                                hibernate에서 Connection이 아닌 session객체를 사용하기 떄문에 문제를 유발한다. </p>\r\n                            <span className=\"sstitle\">  2. 트랜잭션 추상화</span>\r\n                            <p> 스프링에서는 트랜잭션 기술의 공통점을 담은 추상화 기술을 제공하여 종속적인 코드를 이용하지 않고\r\n                                일관된 트랜잭션을 처리할 수 있게 도와준다.\r\n                            </p>\r\n                            <span className=\"sstitle\">  3. AOP를 이용한 트랜잭션</span>\r\n                            <p>  트랜잭션을 담당하는 코드를 비즈니스 로직과 분리하여 처리한다.\r\n                                <span className=\"mblock\">\r\n                                    <ul>\r\n                                        <li> 트랜잭션 전파 : Propagation Requied(추가), Propagation Requires New(생성), Propagation Not Supported(별도로 동작)\r\n                                            이외에도 처리방법이 존재 </li>\r\n                                        <li> 격리수준 : 서버에 여러 개의 트랜잭션이 동시에 진행될 때 순차진행 방법이 아닌 동시에 여러개를 진행하기 위해 조정 </li>\r\n                                        <li> 제한시간 : 트랜잭션을 수행하는 시간을 설정 </li>\r\n                                        <li> 읽기전용 : 트랜잭션 내에서 데이터를 조작하는 시도를 막고, 성능이 향상될 수 있다. </li>\r\n                                    </ul>\r\n                                </span>\r\n                            </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"세션,쿠키,토큰\"> 세션,쿠키,토큰,캐시  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 세션 </span>\r\n                            <span className=\"mblock\">\r\n                            </span>\r\n                            <span className=\"sstitle\"> 쿠키 </span>\r\n                            <span className=\"mblock\">\r\n                            </span>\r\n                            <span className=\"sstitle\"> 토큰 </span>\r\n                            <span className=\"mblock\">\r\n                            </span>\r\n                            <span className=\"sstitle\"> 캐시 </span>\r\n                            <small> 자주 사용하는 데이터를 복사해 놓는 임시 장소, 캐시는 저장 공간이 작고 비용이 비싸지만 빠른\r\n                                성능을 제공한다.  </small>\r\n                            <span className=\"mblock\">\r\n                                <p> 1. 접근 시간에 비해 원래 데이터를 접근하는 시간이 오래 걸리는 경우 </p>\r\n                                <p> 2. 반복적으로 동일한 결과를 돌려주는 경우(이미지나 썸네일 등) </p>\r\n                                <p> 3. memory에 저장하므로 DBMS의 부하를 줄일 수 있는 장점이 있다. </p>\r\n                                <p> 4. Cache Hit는 캐시에 해당 데이터가 존재하면 반환\r\n                                    , Cache Miss는 데이터가 캐시에 존재하지 않으면 DBMS 또는 서버에\r\n                                    요청을 하는 경우\r\n                                </p>\r\n                            </span>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"sstitle\"> Local Cache </span>\r\n                                <p> Local 장비에서만 사용되는 캐시, Local 장비의 Resource를 이용 </p>\r\n                                <p> Local에서만 작동되므로 속도가 빠름 </p>\r\n                                <p> Local에서 작동하므로 다른 서버와 데이터 공유가 어렵다. </p>\r\n                                <span className=\"sstitle\"> Global Cache </span>\r\n                                <p> 여러 서버에서 Cache Server에 접근하여 사용하는 캐시로 분산된 서버에서 데이터를 저장하고 조회할 수 있다 </p>\r\n                                <p> 네트워크를 통해 데이터를 가져오므로, Local Cache에 비해 상대적으로 느리다  </p>\r\n                                <p> 별도의 Cache서버를 이용하기 때문에 서버 간의 데이터 공유가 쉽다. </p>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"서버기반, 토큰기반 인증시스템 차이\"> 서버기반, 토큰기반 인증시스템 차이  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 서버 기반 인증 시스템  </span>\r\n                            <p> 서버측에서 사용자의 정보를 기억하는 방식 </p>\r\n                            <p> 서버에서 세션을 유지하는 방식 </p>\r\n                            <p>  Sateful 서버</p>\r\n                            <p>  하지만 세션을 저장하기 위해 메모리나 DB에 저장하는데 사용자가 많아지면 서버에 부하가 걸린다.\r\n                                또한 세션을 분산처리하기는 어렵고 그리고 CORS를 이용하기에도 번거로움</p>\r\n                            <span className=\"sstitle\"> 토큰 기반 인증 시스템  </span>\r\n                            <p> 인증받은 사용자에게 토큰을 발급하고 서버에 요청을 보낼때 헤더에 토큰을 함께\r\n                                보내도록 하여 유효성 검사를 하는 방식 </p>\r\n                            <p> Stateless서버 </p>\r\n                            <p> 여러개의 서버를 작동시키고 있을 경우 한개의 서버에만 세션이 저장될 경우 다른 서버를 이용하게 되면\r\n                                이용이 되지 않지만 토큰 방식은 클라이언트가 가지고 있으므로 서버가 변경이 되어도 어떤 서버에서\r\n                                처리를 해도 상관이 없어지는 장점이 있다. </p>\r\n                            <p> OAuth를 이용하게 되면 Facebook, Google 등과 같이 소셜계정을 이용하여 다른 웹서비스에 로그인을 할 수 있다.  </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"JWT(Json Web Token)\"> JWT(Json Web Token)  </a> </span>\r\n                        <small> Json 포맷을 이용하여 사용에 대한 속성을 저장하는 Web Token 기반  </small>\r\n                        <p> 토큰 자체를 정보로 사용하는 Self-Contained 방식으로 정보를 안전하게 전달한다. </p>\r\n                        <p> 토큰을 static변수(매번 로컬스토리지에 꺼내지 않기 위해서)와 로컬 스토리지에 저장 </p>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> JWT 구조 </span>\r\n                            <small> Base64로 인코딩, 각 부분을 .구분자를 사용하여 구분 </small>\r\n                            <ul>\r\n                                <li> Header </li>\r\n                                <span className=\"mblock\">\r\n                                    <p> typ : 토큰의 타입을 지정 </p>\r\n                                    <p> alg : 알고리즘 방식 지정, 서명 및 토큰 검증에 사용 </p>\r\n                                </span>\r\n                                <li> Payload </li>\r\n                                <small> 토큰에 사용되는 정보의 조각 클레임이 담겨있다. JSON형태로 다수의 정보를 넣는다.  </small>\r\n                                <span className=\"mblock\">\r\n                                    <ul>\r\n                                        <span className=\"sstitle\"> 등록된 클레임(Registered Claim) </span>\r\n                                        <ul>\r\n                                            <li> iss : 토큰 발급자 </li>\r\n                                            <li> sub : 토큰 제목 </li>\r\n                                            <li> aud : 토큰 대상자 </li>\r\n                                            <li> exp : 토큰 만료 시간(NumericDate형식으로 되야한다.) </li>\r\n                                            <li> nbf : 토큰 활성 날짜 , 토큰이 활성되는 날짜 </li>\r\n                                            <li> iat : 토큰 발급 시간 , 토큰 발급 경과 시간 </li>\r\n                                            <li> jti : JWT 토큰 식별자 , 중복 방지를 위해 사용, 일회용 토큰 등에 사용  </li>\r\n                                        </ul>\r\n                                        <span className=\"sstitle\"> 공개 클레임(Public Claim) </span>\r\n                                        <p> 사용자 정의 클레임, 공개용 정보를 위해 사용, 충동 방지를 위해 URI포맷을 사용 </p>\r\n                                        <span className=\"sstitle\"> 비공개 클레임(Private Claim) </span>\r\n                                        <p> 사용자 정의 클레임, 서버와 클라이언트 사이에 임의로 지정한 정보를 저장 </p>\r\n                                    </ul>\r\n                                </span>\r\n                                <li> Signature(서명) </li>\r\n                                <span className=\"mblock\">\r\n                                    <p> 토큰을 인코딩하거나 유효성 검증을 할 때 사용하는 고유한 암호화 코드 </p>\r\n                                    <p> 인코딩한 값을 비밀키를 이용해 헤더에서 정의한 알고리즘으로 해싱을 하고 다시 BASE64로 인코딩하여 생성한다. </p>\r\n                                </span>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> JWT의 단점 </span>\r\n                                <li> 토큰 자체에 정보를 담으므로 보안문제가 있을 수 있다. </li>\r\n                                <li> 토큰에 3개로 구분이 되므로 정보가 많으면 토큰의 길이가 늘어난다. </li>\r\n                                <li> 인코딩된 데이터는 탈취하여 디코딩하여 정보를 볼 수 있으므로 중요 데이터를 넣으면 안된다. </li>\r\n                                <li> JWT는 Stateless이므로 토큰에 만료시간을 꼭 넣어주어야 한다. </li>\r\n                                <li> 토큰을 클라이언트 측에서 관리해야 하기 떄문에 토큰을 저장해야 한다. </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 로그인 </span>\r\n                                <li> 로컬 스토리지에 토큰이 존재하는지 유무 확인 </li>\r\n                                <li> 만일 존재한다면 로그인 </li>\r\n                                <li> 존재하지 않는다면 서버에서 토큰 발행 응답 헤더에 담아서 클라이언트에 보냄 </li>\r\n                                <li> 클라이언트는 로컬스토리지와 static변수에 저장 그리고 로그인 </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 로그아웃  </span>\r\n                            <p> 로그아웃을 할 경우 토큰을 제거 </p>\r\n                            <p> 실제 서비스에서는 사용한 토큰을 DB테이블에 넣어서 접근을 막아준다.  </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"RequestBody, ModelAttribute, RequestParam의 차이\"> RequestBody, ModelAttribute, RequestParam의 차이  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <p className=\"sstitle\"> RequestParam </p>\r\n                            <p> 1개의 HTTP 요청 파라미터를 받기 위해 사용 </p>\r\n                            <p> 파라미터가 필수적으로 전송되어야 한다.(400에러 발생) </p>\r\n                            <p className=\"sstitle\"> RequestBody </p>\r\n                            <p> Json형태의 HTTP  Body 데이터를 MessageConverter를 통해 변환시킴 </p>\r\n                            <p> 바인딩이 아닌 변환이므로 Setter함수가 없어도 변수들이 저장됨 </p>\r\n                            <p className=\"sstitle\"> ModelAttribute </p>\r\n                            <p>  multipart/form-data 형태의 HTTP Body 내용과 HTTP 파라미터들을 Setter를 통해 1대1로 객체에 바인딩시킴 </p>\r\n                            <p> 변환이 아닌 바인딩 작업이므로 Setter함수가 필요(없으면 에러발생 )</p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Bean, Configuration, Component\"> Bean, Configuration, Component </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Bean </span>\r\n                            <p> Spring (Ioc 컨테이너,DI 컨테이너)에 의해 관리되는 POJO를 Bean라고 한다. </p>\r\n                            <ul>\r\n                                <li> class : Bean으로 등록할 Java 클래스 </li>\r\n                                <li> id : Bean의 고유 식별자 </li>\r\n                                <li> scope : Bean을 생성하기 위한 방법(singleton(기본), prototype, web(request,session,application)) </li>\r\n                                <li> constructor-arg : Bean 생성 시 생성자에 전달할 파라미터 </li>\r\n                                <li> property : Bean 생성 시 setter에 전달할 인수 </li>\r\n                            </ul>\r\n                            <span className=\"sstitle\"> Configuration </span>\r\n                            <p> Bean을 사용하기위해 명시 </p>\r\n                            <span className=\"sstitle\"> Component </span>\r\n                            <p> 개발한 클래스를 Bean으로 등록할 때 사용, Spring에서는 @Bean을 사용하면 그안에 포함이 되어있다 </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"OOP의 5가지 원칙(SOLID)\"> OOP의 5가지 원칙(SOLID)  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 단일 책임 원칙(Single responsibility principle) </span>\r\n                                <p> 하나의 클래스는 오직 하나의 책임(기능)만을 가져야 한다는 원칙, 예를 들어 로그인 클래스면 로그인만\r\n                                    담당을 해야지 회원가입이나 인증과 같은 기능들을 가지고 있으면 나중에 코드를 수정하거나 문제가 생길 때\r\n                                    파악이 어려울 수 있음 </p>\r\n                                <span className=\"sstitle\"> 개방 폐쇄 원칙(Open/closed principle) </span>\r\n                                <p> 클래스,모듈 함수 등은 쉽게 확장(코드 추가, 연결)이 되어야하고 수정에 대해서는 쉽게 일어나지 못하게\r\n                                    닫혀있어야 한다는 원칙 </p>\r\n                                <span className=\"sstitle\"> 리스코프 치환 원칙(Liskov substitution principle) </span>\r\n                                <p> 부모 클래스자리에 자식 클래스를 넣어도 작동이 잘 되어야 한다는 뜻, 자료형P의 객체를 자료형 C의 객체로\r\n                                    교체되어도 문제가 없어야 한다는 원칙 </p>\r\n                                <span className=\"sstitle\"> 인터페이스 분리 원칙(Interface segregation principle) </span>\r\n                                <p> 큰 덩어리의 인터페이스를 구체적이고 작은 단위들로 분리시킴으로 필요한 메서드 들만 이용한다는 원칙,\r\n                                    필요없는 모듈이나 기능을 가지고 있지 않게 하는 의미도 있고\r\n                                    인터페이스를 작은 단위들로 분리 시켜놓으면 리팩토링, 수정 등을 쉽게 할 수 있다. </p>\r\n                                <span className=\"sstitle\"> 의존관계 역전 원칙(Dependency inversion principle) </span>\r\n                                <p> 상위 모듈이 하위 모듈에 종속되어서는 안된다는 원칙, 하위 모듈에서 상위 모듈을 객체로 만들고\r\n                                    그 객체의 상위모듈에 영향을 주게 된다면 제일 하위 모듈에서 코드를 수정하게 되면 상위모듈에 영향을\r\n                                    미치게 되어 수정하기 어려운 경우가 될 수도 있다. </p>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Spring Security\"> Spring Security </a> </span>\r\n                        <small> 어플리케이션의 보안(인증,권한 등)을 처리하는 프레임워크  </small>\r\n                        <p> 스프링 기반의 보안관련 프레임워크, 인증과 권한을 담당 </p>\r\n                        <p> API서버에 특정 토큰을 Request헤더에 담아 보내면 인증이 완료되고\r\n                            api 기능을 사용할 권한을 갖게 된다.  </p>\r\n                        <p> 필터 기반으로 동작 </p>\r\n                        <p> 세션-쿠키 방식으로 인증, DB에 검증이 된 회원일 경우 JSESSIONID부여한 후\r\n                            다음 요청부터 JSESSIONID를 검증해서 유효하면 인증을 준다.\r\n                        </p>\r\n                        <p> 스프링 필터에는 엄청나게 많은 필터가 존재한다. </p>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 인증(Authorization) </span>\r\n                            <p> 사용자가 맞는지 확인 </p>\r\n                            <span className=\"sstitle\"> 인가(Authentication) </span>\r\n                            <p> 인증 성공 후 사용자가 자원에 접근 가능한지를 결정하는 절차 </p>\r\n                            <span className=\"sstitle\"> Principal(접근주체) </span>\r\n                            <p> Resource에 접근하는 대상 </p>\r\n                            <span className=\"sstitle\"> Credential(비밀번호) </span>\r\n                            <p> Resource에 접근하는 대상의 비밀번호 </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <p className=\"stitle\" > <a name=\"Cors(Cross Origin Resource Sharing)\"> Cors(Cross Origin Resource Sharing) 교차 출처 자원 공유  </a>   </p>\r\n                        <p> API서버에 SPA프레임워크(react,vue 등)을 사용하게 되면 스프링과SPA프레임워크의\r\n                            포트가 다르거나 서버가 다르면 서로 자원을 공유할 수 없게 하는 보안 정책 </p>\r\n                        <p> 스프링 시큐리티에서 특정 도메인을 열거나 닫을 수 있음 </p>\r\n                        <p> 필터나 mvc설정 등으로 처리가능 </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <p>  </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <p>  </p>\r\n                    </span>\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Term;\r\n","import React from 'react';\r\n\r\nconst GithubBasic = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> 0. (하이퍼링크) </span>\r\n                <span className=\"mblock\">\r\n                    <p className=\"hyperlink\">\r\n                        <a href=\"#\"> </a>\r\n                        {/* <a href=\"#\"> </a> */}\r\n                    </p>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            {/* <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GithubBasic;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst RefBlog = (props) => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    function logit() {\r\n        setScrollY(window.pageYOffset);\r\n\r\n        //위치 계산\r\n        let elementHeight = document.getElementsByClassName('navMenu')[0].scrollHeight +\r\n            document.getElementsByClassName('navMenu2')[0].scrollHeight;\r\n        let testdis = document.getElementsByClassName('common_style')[0].getBoundingClientRect().left\r\n            - document.getElementsByClassName('lblocknav_container')[0].getBoundingClientRect().left;\r\n        // console.log(window.innerWidth);\r\n\r\n        // 좌측 메뉴 이동 + 작은 버튼\r\n        if (document.documentElement.scrollTop > elementHeight && window.innerWidth < 1024) {\r\n            blockRef.current[0].style.display === 'inline-block' ?\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none' :\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            blockRef.current[0].style.maxWidth = '420px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n        // 좌측 메뉴 이동\r\n        else if (document.documentElement.scrollTop > elementHeight && window.innerWidth > 1023) {\r\n            // 좌측 메뉴 위치 고정, 보여주기 , 간격은 사이값\r\n            blockRef.current[0].style.position = 'fixed';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.maxWidth = testdis + \"px\";\r\n            blockRef.current[0].style.left = document.getElementsByClassName('navMenu2')[0].getBoundingClientRect().left + \"px\";\r\n            // 좌측에 메뉴가 생기므로 메인 메뉴를 왼쪽에서 이동시킴\r\n            blockRef.current[1].style.left = '25%';\r\n            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n        }\r\n        // 좌측 메뉴가 이동이 안되는 높이 일때 + \r\n        else if (document.documentElement.scrollTop < elementHeight && window.innerWidth > 1023) {\r\n            blockRef.current[0].style.position = 'relative';\r\n            blockRef.current[0].style.display = 'inline-block';\r\n            blockRef.current[0].style.left = '0px';\r\n            blockRef.current[1].style.left = '25%';\r\n        }\r\n\r\n    }\r\n\r\n    const blockRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        function watchScroll() {\r\n            window.addEventListener(\"scroll\", logit);\r\n        }\r\n        watchScroll();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", logit);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <button className=\"lblocknav_btn\" onClick={() => {\r\n                blockRef.current[0].style.display === 'inline-block' ?\r\n                    blockRef.current[0].style.display = 'none' :\r\n                    blockRef.current[0].style.display = 'inline-block';\r\n                document.getElementsByClassName('lblocknav_btn')[0].style.display = 'none';\r\n            }}> 🦉 </button>\r\n            <div className=\"lblocknav_container\" ref={(elem) => (blockRef.current[0] = elem)}>\r\n                <div className=\"lblocknav\">\r\n                    <span className=\"mtitle\">\r\n                        <a href=\"#\" className=\"col_b\"> <b> 참고 블로그 </b> </a>\r\n                        <button className=\"lblocknav_btn2\" onClick={() => {\r\n                            document.getElementsByClassName('lblocknav_btn')[0].style.display = 'block';\r\n                            document.getElementsByClassName('lblocknav_container')[0].style.display = 'none';\r\n\r\n                        }}> ❌ </button>\r\n                    </span>\r\n                    <div className=\"hyperlink\">\r\n                        <details open>\r\n                            <summary> demo </summary>\r\n                            <a href=\"#우아한 형제들\"> 우아한 형제들  </a>\r\n                        </details>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"common_style\" ref={(elem) => (blockRef.current[1] = elem)} >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"참고 블로그\">  참고 블로그  </a> </span>\r\n                    <p> <small> 공부에 도움되는 블로그를 모으고 공부한 내용 정리 </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"우아한 형제들\"> 우아한 형제들  </a> </span>\r\n                        <a href=\"https://techblog.woowahan.com/\"> 우아한 형제들 기술 블로그 링크  </a>\r\n\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default RefBlog;\r\n\r\n","import React from 'react';\r\nimport HtmlBasic from './Main/HtmlContent/HtmlBasic';\r\nimport HtmlDOM from './Main/HtmlContent/HtmlDOM';\r\nimport CssBasic from './Main/CssContent/CssBasic';\r\nimport JspServletInformation from './Main/JspServletContent/JspServletInformation';\r\nimport JavaBasic from './Main/JavaContent/JavaBasic';\r\nimport JspServletBasic from './Main/JspServletContent/JspServletBasic';\r\nimport JspServletBulletinBoard from './Main/JspServletContent/JspServletBulletinBoard';\r\nimport JspServletJstl from './Main/JspServletContent/JspServletJstl';\r\nimport JspServletEl from './Main/JspServletContent/JspServletEl';\r\nimport Jdbc from './Main/JspServletContent/Jdbc';\r\nimport ReactBasic from './Main/ReactContent/ReactBasic';\r\nimport SpringError from './Main/SpringContent/SpringError';\r\nimport SpringCode from './Main/SpringContent/SpringCode';\r\nimport SpringStudy from './Main/SpringContent/SpringStudy';\r\nimport SpringSecurityExCode1 from './Main/SpringContent/SpringSecurityExCode1';\r\nimport SpringSecurityExCode2 from './Main/SpringContent/SpringSecurityExCode2';\r\nimport SpringSecurityExCode3 from './Main/SpringContent/SpringSecurityExCode3';\r\nimport SpringSecurityExCode4 from './Main/SpringContent/SpringSecurityExCode4';\r\nimport SpringSecurityExCode5 from './Main/SpringContent/SpringSecurityExCode5';\r\nimport SpringSecurityExCode6 from './Main/SpringContent/SpringSecurityExCode6';\r\nimport SpringInitSetting from './Main/SpringContent/SpringInitSetting';\r\nimport WindowCommand from './Main/WindowContent/WindowCommand';\r\nimport OracleDBStudy from './Main/DatabaseContent/OracleDBStudy';\r\nimport MySQLStudy from './Main/DatabaseContent/MySQLStudy';\r\nimport DatabaseName from './Main/DatabaseContent/DatabaseName';\r\nimport KeyMap from './Main/KeyMapContent/KeyMap';\r\nimport Term from './Main/TermContent/Term';\r\nimport Github from './Main/GithubContent/GithubBasic';\r\nimport RefBlog from './Main/RefBlogContent/RefBlog';\r\nimport './Main.css';\r\nimport './commonStyle.css';\r\n\r\nconst Main = (props) => {\r\n    const showpage = () => {\r\n        switch (props.page2) {\r\n            case 'htmlbasic':\r\n                return <HtmlBasic> </HtmlBasic>;\r\n            case 'htmldom':\r\n                return <HtmlDOM> </HtmlDOM>;\r\n            case 'cssbasic':\r\n                return <CssBasic> </CssBasic>;\r\n            // React\r\n            case 'reactbasic':\r\n                return <ReactBasic> </ReactBasic>;\r\n            //Java\r\n            case 'javabasic':\r\n                return <JavaBasic> </JavaBasic>;\r\n\r\n            // JSP & Servlet\r\n            case 'jspservletinformation':\r\n                return <JspServletInformation> </JspServletInformation>;\r\n            case 'jspservletbasic':\r\n                return <JspServletBasic> </JspServletBasic>;\r\n            case 'jspservletbulletinboard':\r\n                return <JspServletBulletinBoard> </JspServletBulletinBoard>;\r\n            case 'jspservletjstl':\r\n                return <JspServletJstl> </JspServletJstl>;\r\n            case 'jspservletel':\r\n                return <JspServletEl> </JspServletEl>;\r\n            case 'jdbc':\r\n                return <Jdbc> </Jdbc>;\r\n\r\n            // 스프링 프레임워크\r\n            case 'springerror':\r\n                return <SpringError> </SpringError>;\r\n            case 'springcode':\r\n                return <SpringCode> </SpringCode>;\r\n            case 'springstudy':\r\n                return <SpringStudy> </SpringStudy>;\r\n            case 'springinitsetting':\r\n                return <SpringInitSetting> </SpringInitSetting>;\r\n            case 'springsecurityexcode1':\r\n                return <SpringSecurityExCode1> </SpringSecurityExCode1>;\r\n            case 'springsecurityexcode2':\r\n                return <SpringSecurityExCode2> </SpringSecurityExCode2>;\r\n            case 'springsecurityexcode3':\r\n                return <SpringSecurityExCode3> </SpringSecurityExCode3>;\r\n            case 'springsecurityexcode4':\r\n                return <SpringSecurityExCode4> </SpringSecurityExCode4>;\r\n            case 'springsecurityexcode5':\r\n                return <SpringSecurityExCode5> </SpringSecurityExCode5>;\r\n            case 'springsecurityexcode6':\r\n                return <SpringSecurityExCode6> </SpringSecurityExCode6>;\r\n            // DATA BASE\r\n            case 'oracledbstudy':\r\n                return <OracleDBStudy> </OracleDBStudy>;\r\n            case 'mysqlstudy':\r\n                return <MySQLStudy> </MySQLStudy>;\r\n            case 'databasename':\r\n                return <DatabaseName> </DatabaseName>;\r\n            //윈도우\r\n            case 'windowcommand':\r\n                return <WindowCommand> </WindowCommand>;\r\n            //용어\r\n            case 'term':\r\n                return <Term> </Term>;\r\n            //단축키\r\n            case 'keymap':\r\n                return <KeyMap> </KeyMap>;\r\n            //github\r\n            case 'githubbasic':\r\n                return <Github> </Github>;\r\n            //참고 블로그\r\n            case 'refblog':\r\n                return <RefBlog> </RefBlog>;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            {showpage()}\r\n        </div>);\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nconst HtmlList = (props) => {\r\n\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"htmllist\">\r\n            <button onClick={() => { send('htmlbasic'); }}> HTML 기본 문법 </button>\r\n            <button onClick={() => { send('htmldom'); }}> HTML DOM </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HtmlList;","import React from 'react';\r\n\r\nconst CssList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"csslist\">\r\n            <button onClick={() => { send('cssbasic') }}> CSS 기본 문법 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CssList;","import React from 'react';\r\n\r\nconst JavaSciptList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"javasciptlist\">\r\n            <button onClick={() => { send('javascript') }}> JS 기본 문법 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JavaSciptList;","import React from 'react';\r\n\r\nconst ReactList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"reactlist\">\r\n            <button onClick={() => { send('reactbasic') }}> react 기초 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactList;","import React from 'react';\r\n\r\nconst JavaList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Javalist\">\r\n            <button onClick={() => { send('javabasic') }}> JAVA 문법 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JavaList;","import React from 'react';\r\n\r\nconst PhpList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"phplist\">\r\n            <button onClick={() => { send('php') }}> PHP 기본 문법 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PhpList;","import React from 'react';\r\n\r\nconst NodeJsList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"nodejslist\">\r\n            <button onClick={() => { send('nodejs') }}> NodeJs 기본 문법 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NodeJsList;","import React from 'react';\r\n\r\nconst JspServletList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"jspservletlist\">\r\n            <button onClick={() => { send('jspservletinformation') }}> JSP&amp;Servlet 정보 </button>\r\n            <button onClick={() => { send('jspservletbasic') }}> JSP&amp;Servlet 코드 </button>\r\n            <button onClick={() => { send('jspservletbulletinboard') }}> JSP&amp;Servlet 게시판만들기 </button>\r\n            <button onClick={() => { send('jspservletjstl') }}> JSP JSTL </button>\r\n            <button onClick={() => { send('jspservletel') }}> JSP EL </button>\r\n            <button onClick={() => { send('테스트') }}> 테스트 </button>\r\n            <button onClick={() => { send('jdbc') }}> JDBC </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JspServletList;","import React from 'react';\r\nimport './LsideMenuStyle.css';\r\n\r\nconst SpringList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <button onClick={() => { send('springerror') }}> Spring 오류 </button>\r\n                <button onClick={() => { send('springcode') }}> Spring 코드 정리 </button>\r\n                <button onClick={() => { send('springstudy') }}> Spring 공부 </button>\r\n                <button onClick={() => { send('springinitsetting') }}> Spring 초기 설정 </button>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <button onClick={() => { send('springsecurityexcode1') }}> Spring Security ExCode1 </button>\r\n                <button onClick={() => { send('springsecurityexcode2') }}> Spring Security ExCode2 </button>\r\n                <button onClick={() => { send('springsecurityexcode3') }}> Spring Security ExCode3 </button>\r\n                <button onClick={() => { send('springsecurityexcode4') }}> Spring Security ExCode4 </button>\r\n                <button onClick={() => { send('springsecurityexcode5') }}> Spring Security ExCode5 </button>\r\n                <button onClick={() => { send('springsecurityexcode6') }}> Spring Security ExCode6 </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpringList;","import React from 'react';\r\n\r\nconst WindowList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"windowlist\">\r\n            <button onClick={() => { send('windowcommand') }}> 윈도우 명령어 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WindowList;","import React from 'react';\r\n\r\nconst TermList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"csslist\">\r\n            <button onClick={() => { send('term') }}> 용어 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TermList;","import React from 'react';\r\n\r\nconst KeyMapList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"keymaplist\">\r\n            <button onClick={() => { send('keymap') }}> 단축키 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeyMapList;","import React from 'react';\r\n\r\nconst GithubList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"githubList\">\r\n            <button onClick={() => { send('githubbasic') }}> 깃허브 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GithubList;","import React, { useState } from 'react';\r\nimport './NavMenu.css';\r\n\r\nconst NavMenu = (props) => {\r\n\r\n    function send(page) {\r\n        props.onChangePage(page)\r\n    }\r\n\r\n    return (\r\n        <div className=\"navMenu\">\r\n            <div className=\"firstMenu menu\">\r\n                <p> 백엔드 </p>\r\n                <button onClick={() => { send(\"java\") }}> JAVA </button>\r\n                <button onClick={() => { send(\"php\") }}> PHP </button>\r\n                <button onClick={() => { send(\"nodejs\") }}> Node.js </button>\r\n                <button onClick={() => { send(\"spring\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/SpringBoot_icon.png'} /> Spring </button>\r\n                <button onClick={() => { send(\"jspservlet\") }}> JSP&amp;servlet </button>\r\n            </div>\r\n            <div className=\"secondMenu menu\">\r\n                <p> 프론트엔드 </p>\r\n                <button onClick={() => { send(\"html\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Html_icon.png'} /> HTML </button>\r\n                <button onClick={() => { send(\"css\") }}> CSS </button>\r\n                <button onClick={() => { send(\"typescript\") }}> TypeScipt </button>\r\n                <button onClick={() => { send(\"javascript\") }}> JavaScipt </button>\r\n                <button onClick={() => { send(\"react\") }}> React </button>\r\n            </div>\r\n            <div className=\"thirdMenu menu\">\r\n                <p> 기타 </p>\r\n                <button onClick={() => { send(\"database\") }}> DataBase </button>\r\n                <button onClick={() => { send(\"designpattern\") }}> 디자인패턴 </button>\r\n                <button onClick={() => { send(\"security\") }}> 보안</button>\r\n                <button onClick={() => { send(\"network\") }}> 네트워크</button>\r\n                <button onClick={() => { send(\"algorithm\") }}> 알고리즘 </button>\r\n                <button onClick={() => { send(\"contructdata\") }}> 자료구조 </button>\r\n                <button onClick={() => { send(\"aws\") }}> AWS </button>\r\n                <button onClick={() => { send(\"prettier\") }}> prettier </button>\r\n                <button onClick={() => { send(\"window\") }}> window</button>\r\n                <button onClick={() => { send(\"term\") }}> 용어 </button>\r\n                <button onClick={() => { send(\"keymap\") }}> 단축키 </button>\r\n                <button onClick={() => { send(\"github\") }}> 깃허브 </button>\r\n                <button onClick={() => { send(\"refblog\") }}> 참고 블로그 </button>\r\n                <button className=\"block\">  효율적인 코드 작성 </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\n\r\nconst DatabaseList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"databaselist\">\r\n            <button onClick={() => { send('oracledbstudy') }}> OreacleDB 공부 </button>\r\n            <button onClick={() => { send('mysqlstudy') }}> Mysql 공부 </button>\r\n            <button onClick={() => { send('databasename') }}> Database 변수 이름 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatabaseList;","import React from 'react';\r\n\r\nconst RefBlogList = (props) => {\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"refbloglist\">\r\n            <button onClick={() => { send('refblog') }}> 참고 블로그 </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RefBlogList;","import HtmlList from './LsideMenu/HtmlList.jsx';\r\nimport CssList from './LsideMenu/CssList.jsx';\r\nimport JavaSciptList from './LsideMenu/JavaSciptList.jsx';\r\nimport ReactList from './LsideMenu/ReactList.jsx';\r\nimport JavaList from './LsideMenu/JavaList.jsx';\r\nimport PhpList from './LsideMenu/PhpList.jsx';\r\nimport NodeJsList from './LsideMenu/NodeJsList.jsx';\r\nimport JspServletList from './LsideMenu/JspServletList.jsx';\r\nimport SpringList from './LsideMenu/SpringList.jsx';\r\nimport DatabaseList from './LsideMenu/DatabaseList.jsx';\r\nimport WindowList from './LsideMenu/WindowList.jsx';\r\nimport TermList from './LsideMenu/TermList.jsx';\r\nimport KeyMapList from './LsideMenu/KeyMapList.jsx';\r\nimport GithubList from './LsideMenu/GithubList.jsx';\r\nimport RefBlogList from './LsideMenu/RefBlogList.jsx';\r\n\r\nimport './NavMenu2.css';\r\n\r\n\r\nconst NavMenu2 = (props) => {\r\n\r\n    function send(page) {\r\n        props.onChangePage(page)\r\n    }\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n    // function changeTitle(title) {\r\n    //     document.querySelector(\"title\").innerHTML = title;\r\n    // }\r\n\r\n\r\n    // NavMenu.jsx에서 선택한 목록을 보여주고 LsideMenu.jsx에서 클릭한 목록을 Main.jsx에 보여준다.\r\n    const showpage = () => {\r\n        // 프론트 엔드 메뉴\r\n        if (props.page === 'html') {\r\n            // { changeTitle('html') }\r\n            return <HtmlList onChangePage={(page2) => { send(page2) }}> </HtmlList>;\r\n        }\r\n        else if (props.page === 'css') {\r\n            return <CssList onChangePage={(page2) => { send(page2) }}> </CssList>;\r\n        }\r\n        else if (props.page === 'javascript') {\r\n            return <JavaSciptList onChangePage={(page2) => { send(page2) }}> </JavaSciptList>;\r\n        }\r\n        else if (props.page === 'react') {\r\n            return <ReactList onChangePage={(page2) => { send(page2) }}> </ReactList>;\r\n        }\r\n        // 백엔드 메뉴\r\n        else if (props.page === 'java') {\r\n            return <JavaList onChangePage={(page2) => { send(page2) }}> </JavaList>;\r\n        }\r\n        else if (props.page === 'php') {\r\n            return <PhpList onChangePage={(page2) => { send(page2) }}> </PhpList>;\r\n        }\r\n        else if (props.page === 'nodejs') {\r\n            return <NodeJsList onChangePage={(page2) => { send(page2) }}> </NodeJsList>;\r\n        }\r\n        else if (props.page === 'spring') {\r\n            return <SpringList onChangePage={(page2) => { send(page2) }}> </SpringList>;\r\n        }\r\n        else if (props.page === 'jspservlet') {\r\n            return <JspServletList onChangePage={(page2) => { send(page2) }}> </JspServletList>;\r\n        }\r\n        //기타 메뉴\r\n        else if (props.page === 'database') {\r\n            return <DatabaseList onChangePage={(page2) => { send(page2) }}> </DatabaseList>;\r\n        }\r\n        else if (props.page === 'window') {\r\n            return <WindowList onChangePage={(page2) => { send(page2) }}> </WindowList>;\r\n        }\r\n        else if (props.page === 'term') {\r\n            return <TermList onChangePage={(page2) => { send(page2) }}> </TermList>;\r\n        }\r\n        else if (props.page === 'keymap') {\r\n            return <KeyMapList onChangePage={(page2) => { send(page2) }}> </KeyMapList>;\r\n        }\r\n        else if (props.page === 'github') {\r\n            return <GithubList onChangePage={(page2) => { send(page2) }}> </GithubList>;\r\n        }\r\n        else if (props.page === 'refblog') {\r\n            return <RefBlogList onChangePage={(page2) => { send(page2) }}> </RefBlogList>;\r\n        }\r\n        else {\r\n            return <div> </div>;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"navMenu2\">\r\n            <div className=\"menu\">\r\n                <p> {props.page} </p>\r\n                <div>\r\n                    {showpage()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavMenu2;","import React from 'react';\r\nimport './FootterMenu.css';\r\n\r\nconst FootterMenu = () => {\r\n    return (\r\n        <div className=\"FootMenu\">\r\n            바닥\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FootterMenu;","import React, { useState } from 'react';\nimport './App.css';\nimport Main from './components/Main.jsx';\nimport LsideMenu from './components/LsideMenu';\nimport RsideMenu from './components/RsideMenu';\nimport NavMenu from './components/NavMenu';\nimport NavMenu2 from './components/NavMenu2';\nimport FootterMenu from './components/FootterMenu';\n\nconst App = () => {\n  const [whatPage,setWhatPage] = useState('main');\n  const [whatPage2,setWhatPage2] = useState('main');\n\n  const changePage = (page,e) => {\n    setWhatPage(page);\n  }\n\n  const changePage2 = (page2,e) => {\n    setWhatPage2(page2);\n  }\n\n\n  return (\n      <div className=\"app\">\n        <NavMenu onChangePage={(page)=>{{changePage(page)}}}> </NavMenu>\n        <NavMenu2 page={whatPage} onChangePage={(page2)=>{{changePage2(page2)}}}> </NavMenu2>\n        <div className=\"menu_container\"> \n        {/* LsideMenu는 NavMenu에서 page 파라미터를 받고 onChangePage로 Main 컴포넌트 변경 */}\n          {/* <LsideMenu page={whatPage} onChangePage={(page2)=>{{changePage2(page2)}}}> </LsideMenu> */}\n          <Main page2={whatPage2}> </Main>\n          {/* <RsideMenu> </RsideMenu> */}\n        </div>\n        <FootterMenu> </FootterMenu>\n      </div>\n\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}