{"version":3,"sources":["components/Main/JavaContent/JavaBasic.jsx","components/Main/JavaContent/JavaSerializable.jsx","components/Main/JavaContent/JavaModifier.jsx","components/Main/JavaContent/JavaAnnotation.jsx","components/Main/PhpContent/PhpBasic.jsx","components/Main/NodejsContent/NodejsBasic.jsx","components/Main/SpringContent/SpringError.jsx","components/Main/SpringContent/SpringCode.jsx","components/Main/SpringContent/SpringBasic.jsx","components/Main/SpringContent/SpringThymeleaf.jsx","components/Main/SpringContent/SpringLombok.jsx","components/Main/SpringContent/SpringAnnotation.jsx","components/Main/SpringContent/SpringJpa.jsx","components/Main/SpringContent/SpringSetting.jsx","components/Main/SpringContent/SpringAPI.jsx","components/Main/SpringContent/SpringOAuth2.jsx","components/Main/SpringContent/SpringSecurity.jsx","components/Main/SpringContent/SpringSecurityExCode1.jsx","components/Main/SpringContent/SpringSecurityExCode2.jsx","components/Main/SpringContent/SpringSecurityExCode3.jsx","components/Main/SpringContent/SpringSecurityExCode4.jsx","components/Main/JspServletContent/JspServletBasic.jsx","components/Main/JspServletContent/JspServletBulletinBoard.jsx","components/Main/JspServletContent/JspServletJstl.jsx","components/Main/JspServletContent/JspServletEl.jsx","components/Main/JspServletContent/JspServletJdbc.jsx","components/Main/JspServletContent/JspServletInformation.jsx","components/Main/BackendContent/BackendBasic.jsx","components/Main/BackendContent/BackendSolid.jsx","components/Main/BackendContent/BackendBrowserDevTool.jsx","components/Main/BackendContent/BackendSCTCache.jsx","components/Main/HtmlContent/HtmlBasic.jsx","components/Main/HtmlContent/HtmlDOM.jsx","components/Main/HtmlContent/HtmlError.jsx","components/Main/CssContent/CssBasic.jsx","components/Main/CssContent/CssBlurBusinessCard.jsx","components/Main/CssContent/CssTextAndVideo.jsx","components/Main/JavaScriptContent/JavaScriptBasic.jsx","components/Main/ReactContent/ReactBasic.jsx","components/Main/ReactContent/ReactJavaScript.jsx","components/Main/ReactContent/ReactVscode.jsx","components/Main/FrontendContent/FrontendBasic.jsx","components/Main/FrontendContent/FrontendBrowserDevTool.jsx","components/Main/FrontendContent/FrontendRegex.jsx","components/Main/DatabaseContent/DBOracleBasic.jsx","components/Main/DatabaseContent/DBMySQLBasic.jsx","components/Main/DatabaseContent/DBVariableName.jsx","components/Main/DatabaseContent/DBMariaBasic.jsx","components/Main/DesignPatternContent/DPMvc2.jsx","components/Main/DesignPatternContent/DPMvp.jsx","components/Main/DesignPatternContent/DPMvvm.jsx","components/Main/SecurityContent/SecurityBasic.jsx","components/Main/SecurityContent/SecurityJwt.jsx","components/Main/SecurityContent/SecurityHmac.jsx","components/Main/SecurityContent/SecurityHash.jsx","components/Main/SecurityContent/SecurityEncryption.jsx","components/Main/SecurityContent/SecurityHackingAttack.jsx","components/Main/SecurityContent/SecurityIpSpoofing.jsx","components/Main/NetworkContent/NetworkBasic.jsx","components/Main/NetworkContent/NetworkCommand.jsx","components/Main/NetworkContent/NetworkArpprotocol.jsx","components/Main/NetworkContent/NetworkOSI7Layer.jsx","components/Main/NetworkContent/NetworkThreeWayHandshake.jsx","components/Main/NetworkContent/NetworkDevice.jsx","components/Main/NetworkContent/NetworkWireshark.jsx","components/Main/NetworkContent/NetworkProtocol.jsx","components/Main/AlgorithmContent/Algorithm_Backtracking.jsx","components/Main/AlgorithmContent/Algorithm_Divide_Conquer.jsx","components/Main/AlgorithmContent/Algorithm_Dynamic.jsx","components/Main/AlgorithmContent/Algorithm_Graph.jsx","components/Main/AlgorithmContent/Algorithm_Greedy.jsx","components/Main/AlgorithmContent/Algorithm_Hash.jsx","components/Main/AlgorithmContent/Algorithm_Recursive.jsx","components/Main/AlgorithmContent/Algorithm_Search.jsx","components/Main/AlgorithmContent/Algorithm_Sort.jsx","components/Main/AlgorithmContent/Algorithm_Basic.jsx","components/Main/WindowContent/WindowCommand.jsx","components/Main/WindowContent/WindowSystem.jsx","components/Main/LinuxContent/LinuxBasic.jsx","components/Main/LinuxContent/LinuxCommand.jsx","components/Main/LinuxContent/LinuxMobaXterm.jsx","components/Main/LinuxContent/LinuxVimEditor.jsx","components/Main/LinuxContent/LinuxDirectory.jsx","components/Main/LinuxContent/LinuxUbuntu.jsx","components/Main/LinuxContent/LinuxCentOS7.jsx","components/Main/LinuxContent/LinuxShell.jsx","components/Main/LinuxContent/LinuxShellScript.jsx","components/Main/LinuxContent/LinuxServer.jsx","components/Main/LinuxContent/LinuxProgramInstall.jsx","components/Main/TermContent/Term.jsx","components/Main/KeyMapContent/KeyMapVscode.jsx","components/Main/KeyMapContent/KeyMapIntellij.jsx","components/Main/KeyMapContent/KeyMapEclipse.jsx","components/Main/KeyMapContent/KeyMapWindow.jsx","components/Main/KeyMapContent/KeyMapBrowser.jsx","components/Main/GithubContent/GithubBasic.jsx","components/Main/RefBlogContent/RefBlog.jsx","components/Main/PythonContent/PythonBasic.jsx","components/Main/PythonContent/PythonRegex.jsx","components/Main/AIContent/AiBasic.jsx","components/Main/BlockChainContent/BlockChainPow.jsx","components/Main/CodingTestContent/CTBaekJoon.jsx","components/Main/ProgramContent/ProgramRecDev.jsx","components/Main.jsx","components/NavMenu.jsx","components/NavMenuList/HtmlList.jsx","components/NavMenuList/CssList.jsx","components/NavMenuList/JavaSciptList.jsx","components/NavMenuList/ReactList.jsx","components/NavMenuList/JavaList.jsx","components/NavMenuList/PhpList.jsx","components/NavMenuList/NodeJsList.jsx","components/NavMenuList/JspServletList.jsx","components/NavMenuList/SpringList.jsx","components/NavMenuList/DatabaseList.jsx","components/NavMenuList/WindowList.jsx","components/NavMenuList/LinuxList.jsx","components/NavMenuList/NetworkList.jsx","components/NavMenuList/TermList.jsx","components/NavMenuList/KeyMapList.jsx","components/NavMenuList/GithubList.jsx","components/NavMenuList/RefBlogList.jsx","components/NavMenuList/PythonList.jsx","components/NavMenuList/AIList.jsx","components/NavMenuList/AlgorithmList.jsx","components/NavMenuList/FrontendList.jsx","components/NavMenuList/BackendList.jsx","components/NavMenuList/SecurityList.jsx","components/NavMenuList/BlockChainList.jsx","components/NavMenuList/DesignPatternList.jsx","components/NavMenuList/CodingTestList.jsx","components/NavMenuList/ProgramList.jsx","components/NavMenu2.jsx","components/FootterMenu.jsx","App.js","reportWebVitals.js","index.js"],"names":["JavaBasic","props","className","name","href","target","JavaSerializable","style","visibility","JavaModifier","JavaAnnotation","PhpBasic","NodejsBasic","SpringError","SpringCode","SpringBasic","SpringThymeleaf","SpringLombok","SpringAnnotation","SpringJpa","SettingFile","SpringAPI","SpringOAuth2","Term2","SpringSecurityExCode1","src","process","alt","SpringSecurityExCode2","SpringSecurityExCode3","SpringSecurityExCode4","JspServletBasic","JspServletBulletinBoard","JspServletJstl","Blank","JspServletJdbc","JspServletInformation","BackendBasic","BackendSolid","BackendBrowserDevTool","BackendSCTCache","HtmlBasic","backgroundColor","textDecoration","width","method","action","type","placeholder","required","value","htmlFor","id","cols","rows","resize","border","overflow","selected","disabled","label","marginLeft","background","colSpan","rowSpan","HtmlDOM","HtmlError","CssBasic","CssBlurBusinessCard","CssTextAndVideo","useEffect","script","document","createElement","async","body","appendChild","removeChild","onMouseMove","e","dot","querySelector","left","clientX","top","clientY","JavaScriptBasic","ReactBasic","listStyle","ReactJavaScript","ReactVscode","FrontendBasic","FrontBrowserDevTool","FrontendRegex","DBOracleBasic","DBMySQLBasic","DBVariableName","DBMariaBasic","DPMvc2","DPMvp","DPMvvm","SecurityBasic","SecurityJwt","SecurityHmac","SecurityHash","SecurityEncryption","SecurityHackingAttack","SecurityIpSpoofing","NetworkBasic","NetworkCommand","NetworkArpprotocol","NetworkOSI7Layer","NetworkThreeWayHandshake","NetworkDevice","NetworkWireshark","NetworkProtocol","Algorithm_Backtracking","Algorithm_Divide_Conquer","Algorithm_Dynamic","Algorithm_Graph","Algorithm_Greedy","Algorithm_Hash","Algorithm_Recursive","Algorithm_Search","Algorithm_Sort","Algorithm_Basic","WindowCommand","WindowSystem","LinuxBasic","rel","LinuxCommand","LinuxMobaXterm","LinuxVimEditor","LinuxDirectory","LinuxUbuntu","LinuxCentOS7","LinuxShell","LinuxShellScript","LinuxServer","LinuxProgramInstall","Term","KeyMapVscode","KeyMapIntellij","KeyMapEclipse","KeyMapWindow","KeyMapBrowser","GithubBasic","RefBlog","PythonBasic","classname","PythonRegex","AiBasic","BlockChainPow","CTBaekJoon","ProgramRecDev","Main","path","component","SpringSetting","SpringSecurity","JspServletEl","FrontendBrowserDevTool","NavMenu","send","page","onChangePage","onClick","HtmlList","to","CssList","JavaSciptList","ReactList","JavaList","PhpList","NodeJsList","JspServletList","SpringList","DatabaseList","WindowList","LinuxList","NetworkList","TermList","KeyMapList","GithubList","RefBlogList","PtyhonList","AIList","AlgorithmList","FrontendList","BackendList","BlankList","BlockChain","DesignPatternList","CodingTestList","ProgramList","NavMenu2","page2","PythonList","SecurityList","BlockChainList","FootterMenu","App","useState","whatPage","setWhatPage","whatPage2","setWhatPage2","changePage","changePage2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oZAsbeA,EApbG,SAACC,GAEf,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,4BAAR,yCAA1B,OACA,sBAAMD,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,iCAAR,qDAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,8EACA,iEAKZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,qBAAR,yCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,4DACA,8DACA,4DACA,8DACA,6DACA,8DACA,4DACA,+DACA,sEAKZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,iCAAR,qDAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,gEACA,6EACA,+EACA,kFACA,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,qBAAR,yCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,2GACA,2GACA,wIAEA,oCACA,4CAIZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,eAAR,mCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,+CAAkB,UAAlB,OACA,iDAAoB,kBAApB,OACA,0FACA,wFACA,6JACA,+IACA,gIACA,qNACA,8LAIZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,qBAAR,yCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,+DAAwB,+BAAxB,OACA,qEAA8B,+BAA9B,OACA,oCACA,4CAIZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,eAAR,mCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,0LACA,0EACA,qFAIZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,eAAR,mCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,iGAIZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,iCAAR,qDAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,4NACA,yFAA8B,IAA9B,OACA,sFACA,mCAAM,IAAN,OAJJ,IAIqB,uBACjB,iIAIZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,qBAAR,yCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,4CAIZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,qBAAR,yCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,4CAIZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,yBAASA,UAAU,SAAnB,+BACN,yIACA,mLACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,SACI,oCAAO,kBAAP,mFAEJ,sBAAMA,UAAU,SAAhB,SACI,oCAAO,oBAAP,qOAGJ,+HACA,uBAAMA,UAAU,SAAhB,UACI,oCAAO,gBAAP,yMAEA,qFAEJ,uBAAMA,UAAU,SAAhB,UACI,oCAAO,wBAAP,mEACA,6FACA,kJACA,8GAEJ,uBAAMA,UAAU,SAAhB,UACI,oCAAO,mBAAP,6IACA,+EAEJ,kPACA,uBAAMA,UAAU,SAAhB,UACI,oCAAO,oBAAP,UACA,iFAA0C,KAA1C,IAAiD,IAAjD,IAAuD,IAAvD,SACA,+EAAkD,KAAlD,IAAyD,IAAzD,IAA+D,IAA/D,YAEJ,2IACA,uBAAMA,UAAU,SAAhB,UACI,oCAAO,oBAAP,UACA,iFAA0C,KAA1C,IAAiD,IAAjD,IAAuD,IAAvD,SACA,+EAAkD,KAAlD,IAAyD,IAAzD,IAA+D,IAA/D,YAEJ,uBAAMA,UAAU,SAAhB,UACI,oCAAO,oBAAP,+GACA,oCAAO,mDAAP,iHAEJ,uBAAMA,UAAU,SAAhB,UACI,oCAAO,cAAP,oIACA,oCAAO,qCAAP,WAEJ,uBAAMA,UAAU,SAAhB,UACI,oCAAO,iBAAP,2LACA,oCAAO,mDAAP,UAEJ,sBAAMA,UAAU,SAAhB,SACI,oCAAO,oBAAP,oMAEJ,sBAAMA,UAAU,SAAhB,SACI,oCAAO,sBAAP,oMAMhB,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,SAAR,6BAA7B,OACN,0LACA,uBAAMD,UAAU,SAAhB,UACI,kEACA,mCAAM,6CAAN,OACA,mCAAM,4DAAN,UAEJ,uBAAMA,UAAU,SAAhB,UACI,wEACA,mCAAM,qDAAN,OACA,mCAAM,8BAAN,OACA,mCAAM,oDAAN,OACA,mCAAM,OACN,mCAAM,8CACN,mCAAM,sEAKlB,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,kCAAR,qDAA7B,OACN,uBAAMD,UAAU,SAAhB,UAEI,mCAAK,mBAAGE,KAAK,iEAAiEC,OAAO,SAAhF,+CAAL,OACA,0HAEA,0HAEA,iIAEA,+HAEA,oIAIZ,sBAAMH,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,YAAR,gCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,ubAGA,0SAGA,uUAOZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,2BAAR,+CAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,mCAAM,0FACN,mEACA,gHACA,qIACA,uIACA,mCAAM,+CACN,mCAAM,mDACN,mCAAM,kDACN,mCAAM,8CACN,2IACA,4CAAe,WAAf,yBAAiD,cAAjD,sGACA,0CAAa,WAAb,yBAA+C,QAA/C,OACA,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,OAAR,2BAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,2IACA,gOAKZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,UAAR,8BAA7B,OACN,2IACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,qEACA,oCACA,0DAAmB,KAAnB,sIACI,uBAAMA,UAAU,SAAhB,UACI,mCAAM,6CAAN,gCACA,mCAAM,sCAAN,sCAGR,0NACA,8QACA,oBAAIA,UAAU,SAAd,uGACA,oBAAIA,UAAU,SAAd,wMACA,uCAEJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,wEAAuB,MAAvB,QACA,wEAAuB,uCAAvB,iFACA,wEAAuB,mDAAvB,iFACA,wEAAuB,8EAAvB,UACA,2DAAU,MAAV,+CAA+B,KAA/B,YAEJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kDACD,mNACA,+JACA,uCAEJ,iDAAoB,MAApB,+CACA,iDAAoB,MAApB,8CACA,iDAAoB,gBAApB,uHACA,iDAAoB,cAApB,wKACA,qCACA,qCACA,wCAGJ,sBAAMA,UAAU,UAAhB,eACA,uCAEJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4HAEA,+FACA,+CACA,qDACA,qDACA,kDAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,0HAEA,yGACA,2EACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gCACA,mCAAM,MAAN,8FACA,mCAAM,6CAAN,2PAEA,mCAAM,2CAAN,uHAEJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+BACA,4CAAe,MAAf,yBAA4C,KAA5C,UACA,qDAAS,6CAAT,eAKZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,qBAAR,yCAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,mCAAK,kDACD,+IACA,qCACA,uCAGJ,mCAAK,qEACD,uBAAMA,UAAU,SAAhB,UACI,mCAAK,gFACD,mCAAM,6BACF,6DAEJ,mCAAM,IAAN,UAEJ,mCAAK,gFACD,wEAA2C,KAA3C,KACI,4DAEJ,+CAKZ,mCAAK,qEACD,uBAAMA,UAAU,SAAhB,UACI,mCAAK,gFACD,wDAA2B,IACvB,kDAEJ,mCAAM,IAAN,UAEJ,mCAAK,gFACD,mCAAM,0BAAN,gBAKZ,mCAAK,iFACD,sBAAMA,UAAU,SAAhB,SACI,mCAAK,gFACD,mCAAM,sCACF,8DAEJ,mCAAM,IAAN,eAKZ,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,GAAR,sBAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,2CAKZ,sBAAMA,UAAU,SAAhB,SACI,wCAAU,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,GAAR,uBAA7B,OACN,uBAAMD,UAAU,SAAhB,UACI,uCACA,qDCpUrBI,EArGU,SAACL,GAEtB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iGAAyD,mBAAGC,KAAK,8EAA4BI,MAAO,CAAEC,WAAY,UAAzD,2FAAzD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2LACA,uBAAMA,UAAU,SAAhB,UACI,gjBAEA,iRACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+CAAqC,mBAAGC,KAAK,4BAAQI,MAAO,CAAEC,WAAY,UAArC,yCAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,6QACA,uBAAMA,UAAU,SAAhB,UACI,kTACA,oFACA,spBAGA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sFAA8C,mBAAGC,KAAK,kEAAgBI,MAAO,CAAEC,WAAY,UAA7C,+EAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,kCAAK,sCAAL,OACA,sCAAW,4EAAX,OACA,sCAAW,2BAAX,OACA,sCAAW,oCAAX,OACA,sCAAW,mEAAX,OACA,0CAAiB,gEAAjB,OACA,8CAAuB,2BAAvB,OACA,8CAAuB,yCAAvB,OACA,8CAAuB,8EAAvB,OACA,0CAAiB,IAAjB,OACA,sCAAW,IAAX,OACA,sCAAW,8BAAX,OACA,kCAAK,IAAL,kBAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sFAA8C,mBAAGC,KAAK,kEAAgBI,MAAO,CAAEC,WAAY,UAA7C,+EAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,8DAAN,OACA,uCAAY,kFAAZ,OACA,2CAAkB,+DAAlB,OACA,+CAAwB,gCAAxB,OACA,+CAAwB,2BAAxB,OACA,+CAAwB,2BAAxB,OACA,2CAAkB,KAAlB,OACA,uCAAY,KAAZ,OACA,mCAAM,KAAN,kBAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC8FrBO,EAvLM,SAACR,GAElB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+CAAqC,mBAAGC,KAAK,4BAAQI,MAAO,CAAEC,WAAY,UAArC,yCAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2DAAuC,mBAAGC,KAAK,wCAAUI,MAAO,CAAEC,WAAY,UAAvC,qDAAvC,OACA,uBAAMN,UAAU,SAAhB,UAEI,oCACI,yBAASA,UAAU,UAAnB,6BACA,sBAAMA,UAAU,SAAhB,SACI,qKAIR,oCACI,yBAASA,UAAU,UAAnB,gCACA,sBAAMA,UAAU,SAAhB,SACI,0SAIR,oCACI,yBAASA,UAAU,UAAnB,8BACA,sBAAMA,UAAU,SAAhB,SACI,6JAIR,oCACI,yBAASA,UAAU,UAAnB,8BACA,sBAAMA,UAAU,SAAhB,SACI,6JAIR,oCACI,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACI,6dAEA,ylBAMR,oCACI,yBAASA,UAAU,UAAnB,4BACA,uBAAMA,UAAU,SAAhB,UACI,uQACA,wJACA,0XAKR,oCACI,yBAASA,UAAU,UAAnB,+BACA,uBAAMA,UAAU,SAAhB,UACI,qdAEA,0UAKR,oCACI,yBAASA,UAAU,UAAnB,6BACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,gCACA,uBAAMA,UAAU,SAAhB,UACI,sFACA,+cAKR,oCACI,yBAASA,UAAU,UAAnB,mCACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,+BACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,+BACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,gHACA,uBAAMA,UAAU,SAAhB,UACI,0FACA,sHACA,mHACA,kFAQpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kEAAyC,mBAAGC,KAAK,+CAAYI,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oFACA,sBAAMA,UAAU,SAAhB,SACI,wPAIJ,sBAAMA,UAAU,UAAhB,kFACA,sBAAMA,UAAU,SAAhB,SACI,mQAIJ,sBAAMA,UAAU,UAAhB,kFACA,sBAAMA,UAAU,SAAhB,SACI,iXAIJ,sBAAMA,UAAU,UAAhB,4EACA,sBAAMA,UAAU,SAAhB,SACI,qMAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCuKrBQ,EAlVQ,SAACT,GAGpB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6EACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yBACA,uBAAMA,UAAU,SAAhB,UACI,+NACA,iMACA,uCAGJ,sBAAMA,UAAU,UAAhB,2BACA,uBAAMA,UAAU,SAAhB,UACI,wIACA,4HACA,uCAGJ,sBAAMA,UAAU,UAAhB,iCACA,uBAAMA,UAAU,SAAhB,UACI,6JACA,uCAGJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,2EACA,2LACA,uCAGJ,sBAAMA,UAAU,UAAhB,oCACA,uBAAMA,UAAU,SAAhB,UACI,2EACA,wGACA,yRAEA,+IACA,mCAAK,wGACD,wDACA,oDAAuB,IAAvB,wFACI,uEAEJ,mCAAM,IAAN,OALJ,IAKqB,uBAEjB,uDAA0B,6BAA1B,qFACA,uDAA0B,kBAA1B,qFACA,kGAEJ,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gEACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,qFACA,oCACA,uCAGJ,sBAAMA,UAAU,UAAhB,wEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,mLACD,uBAAMA,UAAU,SAAhB,UACI,qEACI,+FAEJ,oEACI,iJAEJ,sEACI,gJAKZ,mCAAK,qIACD,uBAAMA,UAAU,SAAhB,UACI,+DACI,sEAEJ,4DACI,gEAEJ,uEACI,+FAEJ,mEACI,sEAEJ,6DACI,6EAEJ,sEACI,6EAEJ,8DACI,sEAEJ,iEACI,4EAEJ,sEACI,yFAEJ,gEACI,sEAKZ,mCAAK,+CACD,sBAAMA,UAAU,SAAhB,SACI,wGAIR,mCAAK,8CACD,sBAAMA,UAAU,SAAhB,SACI,sIAIR,mCAAK,+CACD,uBAAMA,UAAU,SAAhB,UACI,mEACA,0JAIR,+CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sEACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kGACD,8DACA,uEACA,yEAA4C,IACxC,oFACA,+FAEJ,mCAAM,IAAN,UAEJ,mCAAK,kIACD,0DAA6B,IACzB,0EACA,oDAFJ,IAEgC,uBAC5B,8GACA,oDACA,+EACA,0DAEJ,mCAAM,IAAN,aAIR,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kGACD,8DACA,uEACA,yEAA4C,IACxC,uCAEJ,mCAAM,IAAN,UAEJ,mCAAK,kIACD,0DAA6B,IACzB,oCACA,oCACA,oCACA,uCAEJ,mCAAM,IAAN,aAIR,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kGACD,8DACA,uEACA,yEAA4C,IACxC,uCAEJ,mCAAM,IAAN,UAEJ,mCAAK,kIACD,0DAA6B,IACzB,oCACA,oCACA,oCACA,uCAEJ,mCAAM,IAAN,aAIR,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kGACD,8DACA,uEACA,yEAA4C,IACxC,uCAEJ,mCAAM,IAAN,UAEJ,mCAAK,kIACD,0DAA6B,IACzB,oCACA,oCACA,oCACA,uCAEJ,mCAAM,IAAN,aAIR,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kGACD,8DACA,uEACA,yEAA4C,IACxC,uCAEJ,mCAAM,IAAN,UAEJ,mCAAK,kIACD,0DAA6B,IACzB,oCACA,oCACA,oCACA,uCAEJ,mCAAM,IAAN,aAIR,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kGACD,8DACA,uEACA,yEAA4C,IACxC,uCAEJ,mCAAM,IAAN,UAEJ,mCAAK,kIACD,0DAA6B,IACzB,oCACA,oCACA,oCACA,uCAEJ,mCAAM,IAAN,aAIR,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kGACD,8DACA,uEACA,yEAA4C,IACxC,uCAEJ,mCAAM,IAAN,UAEJ,mCAAK,kIACD,0DAA6B,IACzB,oCACA,oCACA,oCACA,uCAEJ,mCAAM,IAAN,qBAQpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDC5SzBS,EAzBE,SAACV,GAEd,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,qDCWrBU,EAxBK,SAACX,GACjB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,qDCqDrBW,EAjEK,SAACZ,GAEjB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,kEAA1B,OAEA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,6FACA,6DACA,wFAGR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,0DAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iIACA,sBAAMA,UAAU,UAAhB,8FACA,6UAEA,uBAAMA,UAAU,SAAhB,UACI,gGACA,gKAEA,yFACA,4FAEJ,sBAAMA,UAAU,UAAhB,eACA,qCACA,sBAAMA,UAAU,UAAhB,eACA,qCACA,sBAAMA,UAAU,UAAhB,eACA,qCACA,sBAAMA,UAAU,UAAhB,eACA,qCACA,sBAAMA,UAAU,UAAhB,eACA,2CAGR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,2DAAR,yEAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qEACA,kFACA,6IACA,sBAAMA,UAAU,UAAhB,4EACA,gEACA,kHACA,sBAAMA,UAAU,UAAhB,wECgNbY,EAnQI,SAACb,GAEhB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,4DACA,mCAAK,uCAAL,OACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kDAAR,gEAA1B,OACA,mCAAK,yGAAL,OACA,uBAAMD,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,2CAAzB,QACA,mGACA,mCAAK,yQAAL,OAEA,uKACA,2KACA,sKACA,2KACA,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,6DAAzB,QACA,6BAAI,wEACJ,6BAAI,+GAGZ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,6CAAzB,QACA,6BAAI,wEACJ,+KACA,4CAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,kFAAzB,QACA,wTAGA,4MACA,mCAAK,+CAAL,OACA,uGACA,mCAAK,+CAAL,OACA,8IAQR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,SACI,mBAAGC,KAAK,gFAAR,+FAEJ,uBAAMD,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,QACA,wLAGR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,SACI,mBAAGC,KAAK,iCAAR,gDAEJ,qFACA,mFACA,mFACA,uBAAMD,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,6CAAzB,QACA,iHAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,6CAAzB,QACA,qKAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,4CAAzB,QACA,sCAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,yCAAzB,QACA,sCAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,4CAAzB,QACA,sCAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,+CAAzB,QACA,sCAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,QACA,sCAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,QACA,sCAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,QACA,yCAGR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,SACI,mBAAGC,KAAK,gFAAR,+FAEJ,uBAAMD,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,oCAAzB,QACA,sPAEA,qBAAIA,UAAU,UAAd,UAAyB,+DAAzB,QACA,0KAIR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,SACI,mBAAGC,KAAK,kBAAR,iCAEJ,uBAAMD,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,kCAAI,mBAAGE,KAAK,uGAAuGC,OAAO,SAAtH,+CAAJ,OAAzB,QACA,yDACA,oDACA,qBAAIH,UAAU,SAAd,UACI,qBAAIA,UAAU,UAAd,UAAyB,mEAAzB,QACA,mCAAK,6DAAL,OACA,mCAAK,oFAAL,8IAEA,mCAAK,6DAAL,OACA,mCAAK,oDAAL,OACA,mCAAK,iDAAL,OACA,mCAAK,gEAAL,uQAGA,mCAAK,wFAAL,sTAGA,mCAAK,sEAAL,kTAEA,mCAAK,6DAAL,OACA,mCAAK,8EAAL,kHACA,mCAAK,6DAAL,gPAEA,mCAAK,8EAAL,OACA,mCAAK,+DAAL,OACA,mCAAK,qEAAL,OACA,mCAAK,oEAAL,+UAGA,mCAAK,8DAAL,wQAEA,mCAAK,+EAAL,oQAGA,mCAAK,8EAAL,6RAKJ,oBAAIA,UAAU,SAAd,2VAOA,qBAAIA,UAAU,SAAd,UACI,qBAAIA,UAAU,UAAd,UAAyB,uGAAzB,QACA,6CACA,sDACA,0DAA4B,yEAA5B,6EACA,qBAAIA,UAAU,SAAd,UACI,qLACA,mDAAwB,sDAAxB,UACA,8DACA,uDACA,yMACA,gHACA,sFACA,oFACA,kHACA,oIACA,0JACA,6LACA,4CAIZ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,SACI,mBAAGC,KAAK,0CAAR,yDAEJ,uBAAMD,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,iEAAzB,QACA,mBAAGE,KAAK,+CAA+CC,OAAO,SAA9D,eACA,0CACA,8FACA,2HACA,2CACA,kDACA,8FACA,uEACA,4DAIZ,uBAAMH,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,SACI,mBAAGC,KAAK,sCAAR,sDAEJ,uBAAMD,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,4GACA,gKACA,4JACA,sJACA,kIACA,kGACA,6GACA,0MAEJ,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,UAAyB,6DAAzB,QACA,4GACA,4GACA,8HACA,sJAEJ,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,qDACA,8EACA,4HACA,0HACA,kPACA,uEACA,oCACA,oCACA,uCAEJ,sBAAMA,UAAU,SAAhB,SACI,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,uBCsEjBa,EAtTK,SAACd,GAEpB,OACC,mCACC,qBAAKC,UAAU,eAAf,SACC,6BACC,uBAAMA,UAAU,SAAhB,UACC,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,OAAR,+CAA1B,OACA,uBAAMD,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,SACC,mBAAGC,KAAK,kCAAR,iDAED,uBAAMD,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,oDAAzB,QACA,kLACA,0RACA,oJACA,2tBAKA,oXAKF,uBAAMA,UAAU,SAAhB,UACC,oBAAIA,UAAU,UAAd,0FACA,yFACA,oCACA,uCAGD,uBAAMA,UAAU,SAAhB,UACC,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,wDAAR,qEAA1B,OACA,mCAAK,qKAAL,OACA,uBAAMD,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAwB,wEAAxB,OACA,sCACA,sCACA,yCAED,oBAAIA,UAAU,SAAd,sFACA,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,iIACA,oCACA,sLACA,kMACA,8IACA,sCAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAwB,mCAAxB,8CACA,6DACA,+HACA,2DACA,oLAGD,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAwB,mCAAxB,oFACA,8DACA,8EACA,0HACA,0CAGF,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,SACC,mBAAGC,KAAK,8BAAR,8CAED,uBAAMD,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,6EAAzB,QACA,0pCAKA,qXAGD,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,oFAAzB,OACA,uHACA,wIACA,+KACA,oGACA,yPAIF,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,SACC,mBAAGC,KAAK,mCAAR,mDAED,iQACA,+NACA,6PACA,qPACA,kKACA,uBAAMD,UAAU,SAAhB,UACC,oBAAIA,UAAU,UAAd,yCAEA,gHACA,2FACA,2FACA,+GACA,uMACA,mIAGD,uBAAMA,UAAU,SAAhB,UACC,oBAAIA,UAAU,UAAd,8DAEA,+GACA,0JACA,+IACA,kJACA,yJAGD,sBAAMA,UAAU,SAAhB,SACC,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,UAED,sBAAMA,UAAU,SAAhB,SACC,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,UAED,sBAAMA,UAAU,SAAhB,SACC,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,aAIF,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,SACC,mBAAGC,KAAK,2BAAR,2CAED,uBAAMD,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,qFAAzB,QACA,6rBAID,sBAAMA,UAAU,SAAhB,SACC,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,UAED,sBAAMA,UAAU,SAAhB,SACC,qBAAIA,UAAU,UAAd,UAAyB,mCAAzB,aAIF,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,SACC,mBAAGC,KAAK,MAAR,sBAED,uBAAMD,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,wDAAzB,QACA,wHACA,0JACA,uNAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,2DAAzB,QACA,uKACA,+WAID,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,iDAAzB,QACA,wLAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,uCAAzB,QACA,0CACA,4NACA,2HAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,6CAAzB,QACA,4MACA,uBAAMA,UAAU,SAAhB,UACC,gDACA,0EAAyB,IAAzB,OACA,oCAAO,oHACP,oCAAO,2FAAP,OACA,oCAAO,2GAAP,OACA,oCAAO,IAAP,UAED,uCAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,iDAAzB,QACA,wNACA,uCAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,0CAAzB,QACA,4FACA,uIAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,wCAAzB,QACA,qGACA,kGAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,6CAAzB,QACA,oJACA,6LACA,mCAAK,mBAAGE,KAAK,kHAAR,kDAEL,uBAAMF,UAAU,SAAhB,UACC,oBAAIA,UAAU,UAAd,mDACA,4FACA,8GACA,gJACA,4EACA,8EACA,oBAAIA,UAAU,UAAd,4DACA,2GACA,mJACA,oBAAIA,UAAU,UAAd,+EACA,6IACA,2IACA,oJACA,mHACA,mIACA,qFACA,qGACA,gIACA,6JAGF,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,yCAAzB,QACA,iHAED,uBAAMA,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,4CAAzB,QACA,wGAGF,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,SACC,mBAAGC,KAAK,iGAAR,gHAED,uBAAMD,UAAU,SAAhB,UACC,qBAAIA,UAAU,UAAd,UAAyB,oCAAzB,QACA,kFACA,sEACA,uGACA,mLACA,qIACA,sJAIF,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,SACC,mBAAGC,KAAK,wCAAR,wDAED,4LACA,sJACA,sBAAMD,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,UAAnB,UAA8B,oFAA9B,OACA,+BACC,uJACA,uMACA,4JACA,2JACA,sHACA,sHACA,uNACA,6LACA,sEACA,uBAAMA,UAAU,SAAhB,UAEC,4HACA,2IACA,4JACA,mJACA,+KAGD,8MACA,mOACA,gLACA,0KACA,mQACA,yNACA,wLACA,4GACA,0FACA,yDCpLKc,EAnHS,SAACf,GAErB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,4BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,yGACA,mCAAK,mBAAGE,KAAK,6FAA6FC,OAAO,SAA5G,kEAAL,OACA,gOAEA,6CAKZ,uBAAMH,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,yBAAR,sCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mDACA,uBAAMA,UAAU,SAAhB,UACI,kFACA,8CAAiB,KAAjB,mCACA,8CACA,6CAAgB,yBAAhB,SACA,2CAAc,6BAAd,qBAAgC,IAAhC,+BACA,+CAAkB,6BAAlB,qBAAoC,IAApC,iCACA,uJACA,8EAAwB,6BAAxB,QACA,gDAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qCAAR,kDAA1B,OACA,sCAAS,+CAAT,wCACA,uBAAMD,UAAU,SAAhB,UACI,sCAAS,6EAAT,OADJ,IACqF,uBACjF,sCAAS,qDAAT,OAFJ,IAEwD,uBACpD,sCAAS,qDAAT,OAHJ,IAGwD,uBACpD,sCAAS,yEAAT,OAJJ,IAIkE,uBAC9D,uBAAMA,UAAU,UAAhB,gFAA4C,KAA5C,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,+BAAN,yHACA,mCAAM,wDAAN,yHACA,mCAAM,wDAAN,4HAGJ,uBAAMA,UAAU,UAAhB,gFAA4C,KAA5C,OAAsD,KAAtD,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,iDAAN,OACA,uCAAY,4BAAZ,OACA,uCAAY,4BAAZ,OACA,mCAAM,UAAN,UAGJ,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,gFAAN,OACA,uCAAY,gFAAZ,OACA,uCAAY,iFAAZ,OACA,mCAAM,UAAN,UAGJ,uBAAMA,UAAU,UAAhB,qHAAwD,QACxD,sBAAMA,UAAU,SAAhB,SACI,mCAAM,0DAAN,SAGJ,sBAAMA,UAAU,UAAhB,+CACA,sBAAMA,UAAU,SAAhB,SACI,mCAAM,qDAAN,SAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAMZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,oDC8GjBe,EAtNM,SAAChB,GAClB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,sCAAQ,mBAAGE,KAAK,yCAAyCC,OAAO,SAAxD,yCAAR,OAEA,uBAAMH,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,iCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mEACA,yHACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,QAAd,uBACA,oBAAIA,UAAU,QAAd,uBACA,qDAAwB,OACxB,0DACA,mCAAM,IAAN,gBAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qBAAR,6GAA1B,OACA,uBAAMD,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,sBAAR,+GAA1B,QACA,uBAAMD,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,2BAAR,oHAA1B,OACA,wXAEA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wEACA,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,QAAd,iCAA0C,yLAA1C,OACA,oBAAIA,UAAU,QAAd,mCACA,qDAAwB,OACxB,0DACA,mCAAM,IAAN,OACA,qBAAIA,UAAU,QAAd,uCAAgD,+dAAhD,OAEA,qDAAwB,OACxB,mHACA,sHACA,sIACA,mCAAM,IAAN,gBAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,yBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,8DACA,wKACA,uBAAMA,UAAU,SAAhB,UACI,6CACA,qDAAwB,OACxB,0DACA,mCAAM,IAAN,gBAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,QAAR,qBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,6FAEA,2OAEA,uBAAMA,UAAU,SAAhB,UACI,yCACA,qDAAwB,OACxB,0DACA,mCAAM,IAAN,gBAIZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,WAAR,wBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,+XAEA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,4CACA,qDACA,6DAEJ,sBAAMA,UAAU,UAAhB,mHACA,uBAAMA,UAAU,SAAhB,UACI,qDACA,0DACA,gDACA,8DAAmC,IAAnC,OACA,sDACA,uCAAY,IAAZ,UAEJ,sBAAMA,UAAU,UAAhB,4DACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,qBAAN,OACA,uCAAY,qBAAZ,OACA,uCAAY,gCAAZ,OACA,2CAAkB,qBAAlB,OACA,2CAAkB,uBAAlB,OACA,2CAAkB,iCAAlB,OACA,+CAAwB,gBAAxB,OACA,+CAAwB,eAAxB,OACA,2CAAkB,SAAlB,OACA,2CAAkB,2BAAlB,OACA,+CAAwB,uCAAxB,OACA,+CAAwB,qBAAxB,OACA,2CAAkB,QAAlB,OACA,uCAAY,QAAZ,OACA,mCAAM,QAAN,gBAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qBAAR,kCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oEACA,sBAAMA,UAAU,SAAhB,SACI,uCAAmB,4BAAnB,uQAMZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,WAAR,wBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2GACA,sBAAMA,UAAU,SAAhB,SACI,oHAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,yBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yBACA,sBAAMA,UAAU,SAAhB,SACI,wJAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,4BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,UAAR,uBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,WAAR,wBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,6HACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,oDCYjBgB,EAvNU,SAACjB,GAEtB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,UAAR,uBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mHACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,gGACA,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,oCACA,6CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,MAAR,mBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kFACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,8BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wFACA,uIAFJ,IAEoE,uBAChE,mGAHJ,IAGoD,uBAChD,uLAJJ,IAIuE,uBACnE,6MACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,iCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4OAEA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,UAAR,uBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,6LAEA,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,yBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,gJAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,0BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,+MAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,cAAR,2BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,sBAAMA,UAAU,SAAhB,SACI,iKAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qBAAR,kCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,+OAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,uBAAR,oCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4KAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,8BAAR,2CAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yFACA,sBAAMA,UAAU,SAAhB,SACI,wHAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,WAAR,wBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sCACA,sBAAMA,UAAU,SAAhB,SACI,gKAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,gBAAR,6BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gFACA,sBAAMA,UAAU,SAAhB,SACI,+JAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,8BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qEACA,sBAAMA,UAAU,SAAhB,SACI,4CAMZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,2BAAR,wCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,8IACA,sBAAMA,UAAU,UAAhB,qKACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,oDC1IjBiB,EAlEG,SAAClB,GAEf,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+CAAyD,mBAAGC,KAAK,4BAA4BI,MAAO,CAAEC,WAAY,UAAzD,yCAAzD,OACA,uBAAMN,UAAU,SAAhB,UACI,mCAAK,iJAAL,OACA,mCAAK,kWAAL,OAEA,mCAAK,sGAAL,OAEA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+CADJ,IAC8C,+FAC1C,mCAAK,+EACD,uEAEJ,mCAAK,6EACD,uGAEJ,mCAAK,iHACD,kIAEJ,mCAAK,uEACD,gIAEJ,mCAAK,uCACD,uCAEJ,mCAAK,uCACD,uCAEJ,mCAAK,uCACD,uCAEJ,mCAAK,uCACD,kDAOpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC0KrBkB,EAhOK,SAACnB,GAEjB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,mBAAGE,KAAK,wFAAwFC,OAAO,SAAvG,iEACA,mBAAGD,KAAK,mCAAmCC,OAAO,SAAlD,+EAEA,uBAAMH,UAAU,SAAhB,cAA2B,mBAAGC,KAAK,yBAAR,qCAA3B,OACA,yKACA,4NACA,kPACA,uBAAMD,UAAU,SAAhB,UAEI,oCACI,yBAASA,UAAU,SAAnB,8BACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCACA,0EACA,sBAAMA,UAAU,UAAhB,gCACA,gFAIR,oCACI,yBAASA,UAAU,SAAnB,kCACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,6EACA,4EACA,sBAAMA,UAAU,UAAhB,4IACA,sJACA,sBAAMA,UAAU,UAAhB,sEACA,mFACA,sBAAMA,UAAU,UAAhB,sEACA,mFAIR,oCACI,yBAASA,UAAU,SAAnB,2BACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mGACA,wDACA,sBAAMA,UAAU,UAAhB,8DACA,yIACA,sBAAMA,UAAU,UAAhB,wFACA,iFACA,uKACA,sJACA,qGACA,gMACA,sBAAMA,UAAU,UAAhB,gEACA,6KACA,sBAAMA,UAAU,UAAhB,sEACA,gFACA,sBAAMA,UAAU,UAAhB,wCACA,8IACA,sBAAMA,UAAU,UAAhB,+HACA,qKACA,sBAAMA,UAAU,UAAhB,gBACA,0CAIR,oCACI,yBAASA,UAAU,SAAnB,+BACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sEACA,uIACA,sBAAMA,UAAU,UAAhB,+FACA,+KACA,sBAAMA,UAAU,UAAhB,mFACA,kLACA,sBAAMA,UAAU,UAAhB,oEACA,uFACA,sBAAMA,UAAU,UAAhB,2CACA,0EACA,sBAAMA,UAAU,UAAhB,6DACA,0EACA,sBAAMA,UAAU,UAAhB,2CACA,uFACA,uBAAMA,UAAU,UAAhB,iDAA+D,aAA/D,MAAgF,eAAhF,cACA,mHACA,sBAAMA,UAAU,UAAhB,wCACA,qNACA,sBAAMA,UAAU,UAAhB,sCACA,6FACA,sBAAMA,UAAU,UAAhB,mCACA,6FACA,sBAAMA,UAAU,UAAhB,oCACA,6FACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,0CAIR,oCACI,yBAASA,UAAU,SAAnB,iCACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,qJACA,sBAAMA,UAAU,UAAhB,6DACA,oFACA,sBAAMA,UAAU,UAAhB,6CACA,4FAIR,oCACI,yBAASA,UAAU,SAAnB,mCACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uDACA,qJAIR,oCACI,yBAASA,UAAU,SAAnB,uEACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gCACA,wGACA,uBAAMA,UAAU,UAAhB,0BAAwC,cAAxC,gBACA,oCACA,uBAAMA,UAAU,UAAhB,0CAAoC,eAApC,OACA,qFACA,sBAAMA,UAAU,UAAhB,gBACA,0CAIR,oCACI,yBAASA,UAAU,SAAnB,uBACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,eACA,6CAMZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kBAAR,gCAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,0BACA,uBAAMA,UAAU,SAAhB,UACI,2CACA,mDACA,uFACA,sJACA,gFACA,mFAEJ,sBAAMA,UAAU,UAAhB,mBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,+IAAL,OACA,oGACA,mCAAK,6UAAL,OACA,2DACA,mCAAK,6FAAL,OACA,sDACA,kDACA,4DACA,mCAAK,+aAAL,OACA,qEAUZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,oDC1JjBmB,EA3DG,SAACpB,GAEf,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2BAAqC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,+BACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2BAAqC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,+BACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACI,sDCoZrBoB,EAlcM,SAACrB,GAElB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,qBAEA,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6CAA6C,mBAAGC,KAAK,0BAAgBI,MAAO,CAAEC,WAAY,UAA7C,uCAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,uBAAMA,UAAU,SAAhB,UACI,gPACA,qLACA,uCAGJ,sBAAMA,UAAU,UAAhB,4CACA,uBAAMA,UAAU,SAAhB,UACI,gUACA,qSACA,sSAGJ,sBAAMA,UAAU,UAAhB,4CACA,uBAAMA,UAAU,SAAhB,UACI,gIACA,0EACA,mIACA,kLAGJ,sBAAMA,UAAU,UAAhB,iIACA,sBAAMA,UAAU,SAAhB,SACI,+BACI,mEACA,sFACA,4FACA,6FACA,yLACA,6DACA,6DACA,8FACA,mEACA,mLAIR,sBAAMA,UAAU,UAAhB,wEACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,2CACA,uBAAMA,UAAU,SAAhB,UACI,iNACA,8IACA,yIAEJ,oBAAIA,UAAU,UAAd,iCACA,uBAAMA,UAAU,SAAhB,UACI,mGACA,oKACA,8RACA,gGACA,0IAEJ,oBAAIA,UAAU,UAAd,4DACA,uBAAMA,UAAU,SAAhB,UACI,iOACA,2JACA,+HACA,uCAEJ,oBAAIA,UAAU,UAAd,2CACA,uBAAMA,UAAU,SAAhB,UACI,wLACA,+IAIR,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gCAA0C,mBAAGC,KAAK,aAAaI,MAAO,CAAEC,WAAY,UAA1C,0BAA1C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mDACA,uBAAMA,UAAU,SAAhB,UACI,uCAAS,mBAAGE,KAAK,oCAAoCC,OAAO,SAAnD,mDAAT,OACA,2GACA,6KACA,qKACA,sIACA,ohBAMR,uBAAMH,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+BACA,uBAAMA,UAAU,SAAhB,UACI,4CACA,8CACA,kDACA,4DACA,2DACA,oGACA,2IACA,8DACA,mEACA,2EAKR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,oCACI,0DACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,+EAAN,OACA,iOAMZ,oCACI,sFAAwD,uEAAxD,OACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,wBAAqC,uBAArC,sGACA,uBAAMA,UAAU,SAAhB,UACI,2EACA,2GACA,oGACA,uJACA,0GACA,iFAKZ,oCACI,+GAAiF,2EAAjF,OACA,uCACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sFACA,uBAAMA,UAAU,SAAhB,UACI,kDACA,6DACA,wDACA,wKAKZ,oCACI,yCACA,uCAFJ,IAEsB,uBAClB,uCACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,kDAQpB,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAQhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCAA4C,mBAAGC,KAAK,eAAeI,MAAO,CAAEC,WAAY,UAA5C,6BAA5C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,sCAAQ,mBAAGE,KAAK,gDAAgDC,OAAO,SAA/D,oFAAR,OACA,8HACA,4KACA,mHACA,sFACA,mIACA,4GACA,yGACA,wFAGJ,sBAAMH,UAAU,UAAhB,+BACA,uBAAMA,UAAU,SAAhB,UACI,4CACA,8CACA,kDACA,4DACA,6DACA,2EACA,6GACA,8DACA,mEACA,2EACA,uCAGJ,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,0CAAa,6FAAb,OACA,+CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+BAAyC,mBAAGC,KAAK,YAAYI,MAAO,CAAEC,WAAY,UAAzC,yBAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kDACA,mBAAGE,KAAK,qDAAqDC,OAAO,SAApE,mDACA,uBAAMH,UAAU,SAAhB,UACI,mCAAK,mBAAGE,KAAK,qCAAqCC,OAAO,SAApD,kDAAL,OACA,sFACA,qFACA,gHACA,iHACA,4MACA,0CAIR,uBAAMH,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+BACA,uBAAMA,UAAU,SAAhB,UACI,4CACA,8CACA,kDACA,4DACA,0DACA,+KACA,2LACA,8DACA,mEACA,kEACA,0EACA,kKACA,iOACA,oCACA,yDACA,0DACA,+LACA,kKACA,+KACA,8HACA,0CAIR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,oCACI,0DACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,gJAAN,OACA,6QAMZ,oCACI,sFAAwD,uEAAxD,OACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,wBAAqC,uBAArC,sGACA,uBAAMA,UAAU,SAAhB,UACI,2EACA,2GACA,oGACA,uJACA,0GACA,iFAKZ,oCACI,+GAAiF,2EAAjF,OACA,uCACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sFACA,uBAAMA,UAAU,SAAhB,UACI,kDACA,6DACA,wDACA,wKAKZ,oCACI,yCACA,uCAFJ,IAEsB,uBAClB,uCACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,uDAW5B,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2BAAqC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,+BACA,uBAAMA,UAAU,SAAhB,UACI,4CACA,8CACA,kDACA,4DACA,6DACA,2EACA,6GACA,8DACA,mEACA,2EACA,uCAGJ,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2BAAqC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,+BACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2BAAqC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,+BACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mCAAmC,mBAAGC,KAAK,eAAKI,MAAO,CAAEC,WAAY,UAAlC,4BAAnC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uFACA,uBAAMA,UAAU,SAAhB,UACI,iKACA,qGAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCg/CrBqB,EAr6DD,SAACtB,GAEX,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+DAAqD,mBAAGC,KAAK,4CAAwBI,MAAO,CAAEC,WAAY,UAArD,yDAArD,OACA,+JACA,mCAAK,iOAAL,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,qJACA,8JACA,yOACA,gPACA,uLAEA,sBAAMA,UAAU,UAAhB,2FACA,uBAAMA,UAAU,SAAhB,UACI,oCACI,wCAAW,IAAX,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,SACI,4CAKZ,oCACI,wCAAW,IAAX,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,SACI,4CAKZ,oCACI,yEACA,uFACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,uCAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,0DAAN,OACA,2DACA,6EAEJ,uBAAMA,UAAU,UAAhB,cAA4B,yFAA5B,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,gCAAN,OACA,mCAAM,2DAAN,OACA,mCAAM,iBAAN,OACA,mCAAM,OAAN,OACA,mCAAM,8CAAN,OACA,mCAAM,uFAAN,OACA,mCAAM,OAAN,OACA,mCAAM,oFAAN,UAEJ,uBAAMA,UAAU,UAAhB,cAA4B,uDAA5B,OACA,sBAAMA,UAAU,SAAhB,SACI,8DAEJ,sBAAMA,UAAU,UAAhB,uCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,sDAAN,OACA,mCAAM,oEAAN,OACA,mCAAM,UAAN,OACA,mCAAM,qEAAN,OACA,mCAAM,2EAAN,OACA,mCAAM,UAAN,OACA,mCAAM,wDAAN,OACA,mCAAM,8DAAN,OACA,mCAAM,UAAN,OACA,mCAAM,oFAAN,UAEJ,sBAAMA,UAAU,UAAhB,gDACA,sBAAMA,UAAU,SAAhB,SACI,gEAEJ,sBAAMA,UAAU,UAAhB,mEACA,sBAAMA,UAAU,SAAhB,SACI,yEAEJ,sBAAMA,UAAU,UAAhB,0CACA,sBAAMA,UAAU,SAAhB,SACI,0DAEJ,sBAAMA,UAAU,UAAhB,sDACA,sBAAMA,UAAU,SAAhB,SACI,8DAEJ,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACI,kEACA,kEACA,mEAEJ,sBAAMA,UAAU,UAAhB,uDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,iDAAN,OACA,mCAAM,2DAAN,OACA,mCAAM,KAAN,UAEJ,sBAAMA,UAAU,UAAhB,iDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,yEAAN,OACA,mCAAM,0EAAN,OACA,mCAAM,sEAAN,OACA,mCAAM,iFAAN,OACA,mCAAM,8EAAN,OACA,mCAAM,6FAAN,OACA,mCAAM,4FAAN,OACA,mCAAM,iHAAN,OACA,mCAAM,oFAAN,OACA,mCAAM,yGAAN,OACA,mCAAM,6DAAN,UAEJ,sBAAMA,UAAU,UAAhB,qCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,gCAAN,OACA,mCAAM,0KAAN,OACA,mCAAM,wJAAN,OACA,mCAAM,gKAAN,OACA,mCAAM,gJAAN,OACA,mCAAM,wFAAN,OACA,mCAAM,4BAAN,UAEJ,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,gDAAN,OACA,mCAAM,4DAAN,OACA,mCAAM,qEAAN,OACA,mCAAM,gDAAN,OACA,mCAAM,4EAAN,OACA,mCAAM,iEAAN,OACA,mCAAM,oEAAN,OACA,mCAAM,wBAAN,OACA,mCAAM,8BAAN,gBAKZ,oCACI,wCAAW,mKAAX,YACA,sCAAS,2CAAT,QACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,iHACA,0EAEJ,sBAAMA,UAAU,UAAhB,yEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,kDAAN,OACA,mCAAM,6DAAN,OACA,mCAAM,oEAAN,OACA,mCAAM,oGAAN,OACA,mCAAM,MAAN,UAEJ,uBAAMA,UAAU,UAAhB,cAA4B,+EAA5B,OACA,uBAAMA,UAAU,SAAhB,UACI,gFACA,uDAEJ,sBAAMA,UAAU,UAAhB,yEACA,uBAAMA,UAAU,SAAhB,UACI,sFACA,uDAEJ,sBAAMA,UAAU,UAAhB,8FACA,uBAAMA,UAAU,SAAhB,UACI,iGACA,uDAEJ,sBAAMA,UAAU,UAAhB,iEACA,uBAAMA,UAAU,SAAhB,UACI,+EACA,qFAEJ,sBAAMA,UAAU,UAAhB,gDACA,sBAAMA,UAAU,SAAhB,SACI,2EAKZ,oCACI,yEAA4C,oCAA5C,YACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,qEAAwC,MAAxC,OAAL,OACA,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UAEI,6FACA,0IACA,oIACA,wGACA,qFACA,uFACA,+FAEJ,sBAAMA,UAAU,UAAhB,4GACA,sBAAMA,UAAU,SAAhB,SACI,uEAEJ,sBAAMA,UAAU,UAAhB,gJAEA,uBAAMA,UAAU,SAAhB,UACI,8GACA,mFACA,oGAEJ,sBAAMA,UAAU,UAAhB,qCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,8CAAN,OACA,mCAAM,4BAAN,OACA,mCAAM,2BAAN,OACA,mCAAM,sEAAN,OACA,mCAAM,mBAAN,UAEJ,sBAAMA,UAAU,UAAhB,yGACA,uBAAMA,UAAU,SAAhB,UACI,gGACA,oEACA,oDACA,yDAEJ,sBAAMA,UAAU,UAAhB,kGACA,uBAAMA,UAAU,SAAhB,UACI,oDACA,yDAEJ,sBAAMA,UAAU,UAAhB,6EACA,sBAAMA,UAAU,SAAhB,SACI,iFAEJ,sBAAMA,UAAU,UAAhB,iEACA,sBAAMA,UAAU,SAAhB,SACI,oFAEJ,sBAAMA,UAAU,UAAhB,+DACA,sBAAMA,UAAU,SAAhB,SACI,6FAEJ,sBAAMA,UAAU,UAAhB,mFACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,4DAAN,OACA,mCAAM,gEAAN,OACA,mCAAM,oFAAN,OACA,mCAAM,qCAAN,OACA,mCAAM,4CAAN,OACA,mCAAM,yGAAN,OACA,mCAAM,gEAAN,OACA,mCAAM,qFAAN,OACA,mCAAM,uEAAN,OACA,mCAAM,8BAAN,OACA,mCAAM,2CAAN,OACA,mCAAM,oGAAN,OACA,mCAAM,KAAN,UAEJ,sBAAMA,UAAU,UAAhB,kGACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,yEAAN,OACA,mCAAM,6DAAN,OACA,mCAAM,2CAAN,UAEJ,sBAAMA,UAAU,UAAhB,qGACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,2EAAN,OACA,mCAAM,4DAAN,OACA,mCAAM,0CAAN,UAEJ,sBAAMA,UAAU,UAAhB,2FACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,qFAAN,OACA,mCAAM,yCAAN,OACA,mCAAM,qCAAN,OACA,mCAAM,4FAAN,OACA,mCAAM,8BAAN,UAEJ,sBAAMA,UAAU,UAAhB,8FACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,uFAAN,OACA,mCAAM,wCAAN,OACA,mCAAM,oCAAN,OACA,mCAAM,2FAAN,OACA,mCAAM,6BAAN,UAEJ,sBAAMA,UAAU,UAAhB,6FACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,6EAAN,OACA,mCAAM,kDAAN,OACA,mCAAM,mBAAN,UAEJ,sBAAMA,UAAU,UAAhB,qDACA,sBAAMA,UAAU,SAAhB,SACI,0FAEJ,sBAAMA,UAAU,UAAhB,4DACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,oCAAN,OACA,mCAAM,+CAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,YAAN,OACA,mCAAM,8CAAN,OACA,mCAAM,uBAAN,OACA,mCAAM,iBAAN,OACA,mCAAM,2CAAN,OACA,mCAAM,+BAAN,OACA,mCAAM,wCAAN,OACA,mCAAM,mBAAN,OACA,mCAAM,IAAN,UAEJ,uBAAMA,UAAU,UAAhB,kEACA,uBAAMA,UAAU,UAAhB,uEACA,sBAAMA,UAAU,UAAhB,qEACA,sBAAMA,UAAU,UAAhB,eAEA,sBAAMA,UAAU,UAAhB,oDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,mFAAN,OACA,mCAAM,kEAAN,OACA,mCAAM,iCAAN,OACA,mCAAM,0FAAN,OACA,mCAAM,iCAAN,UAEJ,sBAAMA,UAAU,UAAhB,yDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,mFAAN,OACA,mCAAM,kEAAN,OACA,mCAAM,sCAAN,UAEJ,sBAAMA,UAAU,UAAhB,6EACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,+EAAN,OACA,mCAAM,yFAAN,OACA,mCAAM,8BAAN,OACA,mCAAM,iBAAN,UAEJ,sBAAMA,UAAU,UAAhB,2CACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,oCAAN,OACA,mCAAM,oDAAN,UAEJ,sBAAMA,UAAU,UAAhB,uCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,cAAN,OACA,mCAAM,mBAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,eAAN,OACA,mCAAM,YAAN,OACA,mCAAM,2BAAN,OACA,mCAAM,gDAAN,OACA,mCAAM,+EAAN,OACA,mCAAM,+EAAN,gBAKZ,oCACI,+DAAkC,MAAlC,YACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,gEAAmC,MAAnC,OAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,yFACA,wDAEJ,sBAAMA,UAAU,UAAhB,uDACA,uBAAMA,UAAU,SAAhB,UACI,iFAAoD,IAApD,OACA,4DACA,uDAA0B,IAA1B,OACA,6GAEJ,sBAAMA,UAAU,UAAhB,0CACA,uBAAMA,UAAU,SAAhB,UACI,6DAAgC,IAAhC,OACA,sGAAyE,IAAzE,OACA,0DAEJ,sBAAMA,UAAU,UAAhB,sEAIR,oCACI,2DAA6B,uNAA7B,OACA,iMACA,6NACA,uBAAMA,UAAU,SAAhB,UACI,sEACA,mCAAK,sCAAL,OACA,uBAAMA,UAAU,UAAhB,cAA4B,2DAA5B,OACA,uBAAMA,UAAU,UAAhB,cAA4B,2BAA5B,OACA,uBAAMA,UAAU,UAAhB,cAA4B,uBAA5B,OACA,uBAAMA,UAAU,UAAhB,cAA4B,yBAA5B,OACA,uBAAMA,UAAU,UAAhB,cAA4B,6BAA5B,OACA,uBAAMA,UAAU,UAAhB,cAA4B,kFAA5B,aAIR,oCACI,kGAA2C,wIAA3C,OACA,uBAAMA,UAAU,SAAhB,UACI,4OACA,sBAAMA,UAAU,UAAhB,0GACA,yCAIR,oCACI,mEAAqC,sMAArC,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,uCAAL,OACA,sBAAMA,UAAU,UAAhB,0GACA,uBAAMA,UAAU,UAAhB,8BAA4C,6BAA5C,aAIR,oCACI,yEAA2C,sMAA3C,QACA,mCAAK,6LAAL,OACA,mCAAK,qIAAL,OACA,mCAAK,sGAAL,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kGAAL,OACA,mCAAK,sHAAL,OACA,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACI,6FACA,8FACA,oBAAIA,UAAU,QAAd,gGACA,yFACA,qEACA,2FAGJ,sBAAMA,UAAU,UAAhB,4HACA,uBAAMA,UAAU,SAAhB,UACI,yFAA4D,IAA5D,OACA,wIAA2G,IAA3G,OACA,6FACA,mDAGJ,sBAAMA,UAAU,UAAhB,6HACA,uBAAMA,UAAU,SAAhB,UACI,kHACA,yEACA,mDAGJ,sBAAMA,UAAU,UAAhB,8FACA,uBAAMA,UAAU,SAAhB,UACI,6EACA,mDAGJ,uBAAMA,UAAU,UAAhB,kIACqB,uBADrB,IAC4B,kGAD5B,OAEA,sBAAMA,UAAU,SAAhB,SACI,kGAGJ,uBAAMA,UAAU,UAAhB,yHACI,uBADJ,IACW,8FADX,OAEA,sBAAMA,UAAU,SAAhB,SACI,6FAGJ,sBAAMA,UAAU,UAAhB,6KAEA,uBAAMA,UAAU,SAAhB,UACI,wFACA,2GAGJ,uBAAMA,UAAU,UAAhB,8HACqB,uBADrB,IAC4B,8FAD5B,OAEA,sBAAMA,UAAU,SAAhB,SACI,iGAGJ,uBAAMA,UAAU,gBAAhB,uHACI,uBADJ,IACW,iLADX,OAEA,uBAAMA,UAAU,SAAhB,UACI,6FACA,mDAGJ,sBAAMA,UAAU,UAAhB,yEACA,uBAAMA,UAAU,SAAhB,UACI,wDAA2B,IAA3B,OACA,iJACA,iDAAoB,IAApB,OACA,uHACA,wEACA,sEAAyC,IAAzC,OACA,mHAAsF,IAAtF,OACA,oEAAuC,IAAvC,OACA,0GAA6E,IAA7E,OACA,mFACA,8DAGJ,sBAAMA,UAAU,UAAhB,8CACA,sBAAMA,UAAU,SAAhB,SACI,iIAGJ,sBAAMA,UAAU,UAAhB,wEACA,sBAAMA,UAAU,SAAhB,SACI,4EAGJ,sBAAMA,UAAU,UAAhB,kKAEA,uBAAMA,UAAU,SAAhB,UACI,wGACA,4EAKZ,oCACI,kEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,qEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,qEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,6DACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,+DACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,0DACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,iEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,8CAIR,oCACI,mEAAsC,sEAAtC,WACA,sCAAS,uFAAT,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,wEACA,sBAAMA,UAAU,SAAhB,8CAMR,oCACI,sEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,iHACA,4EACA,wFACA,kFACA,kGACA,uCAEJ,sBAAMA,UAAU,UAAhB,kDACA,sBAAMA,UAAU,SAAhB,SACI,qHAEJ,sBAAMA,UAAU,UAAhB,yKACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,kDAAN,OACA,mCAAM,oFAAN,OACA,mCAAM,yDAAN,OACA,mCAAM,0GAAN,OACA,mCAAM,KAAN,OACA,mCAAM,0EAAN,OACA,mCAAM,sFAAN,OACA,mCAAM,+FAAN,OACA,mCAAM,uDAAN,OACA,mCAAM,4GAAN,OACA,mCAAM,KAAN,UAEJ,sBAAMA,UAAU,UAAhB,qDACA,sBAAMA,UAAU,SAAhB,SACI,kHAEJ,sBAAMA,UAAU,UAAhB,4JAEA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,qCAAN,OACA,mCAAM,UAAN,OACA,mCAAM,4FAAN,OACA,mCAAM,kCAAN,OACA,mCAAM,8DAAN,OACA,mCAAM,mGAAN,OACA,mCAAM,UAAN,OACA,mCAAM,2BAAN,OACA,mCAAM,MAAN,OACA,mCAAM,2CAAN,OACA,mCAAM,qDAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,MAAN,OACA,mCAAM,wDAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,MAAN,OACA,mCAAM,2BAAN,OACA,mCAAM,+EAAN,OACA,mCAAM,MAAN,UAEJ,sBAAMA,UAAU,UAAhB,uIAEA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,qEAAN,OACA,mCAAM,wEAAN,OACA,mCAAM,0BAAN,OACA,mCAAM,8EAAN,OACA,mCAAM,4EAAN,OACA,mCAAM,iFAAN,OACA,mCAAM,KAAN,OACA,mCAAM,8EAAN,UAEJ,sBAAMA,UAAU,UAAhB,4DACA,uBAAMA,UAAU,SAAhB,UACI,iFACA,+HAEJ,sBAAMA,UAAU,UAAhB,4GACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,mDAAN,OACA,mCAAM,+EAAN,OACA,mCAAM,2FAAN,OACA,mCAAM,MAAN,UAEJ,sBAAMA,UAAU,UAAhB,+EACA,uBAAMA,UAAU,SAAhB,UACI,wGACA,6EACA,iFAEJ,sBAAMA,UAAU,UAAhB,8DACA,sBAAMA,UAAU,SAAhB,SACI,kEAEJ,sBAAMA,UAAU,UAAhB,wFACA,sBAAMA,UAAU,SAAhB,SACI,mFAEJ,sBAAMA,UAAU,UAAhB,oEACA,sBAAMA,UAAU,SAAhB,SACI,qEAEJ,sBAAMA,UAAU,UAAhB,gHACA,sBAAMA,UAAU,SAAhB,SACI,yGAKZ,oCACI,uDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,6DACA,uBAAMA,UAAU,SAAhB,UACI,2DACA,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,4CAIR,oCACI,6DACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,4DACA,wGACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,oIAAL,OACA,mCAAK,oKAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,4DACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,uCAAL,OACA,sBAAMA,UAAU,UAAhB,eACA,uBAAMA,UAAU,SAAhB,UACI,6EACA,uGACA,sBAAMA,UAAU,UAAhB,uEACA,sBAAMA,UAAU,SAAhB,SACI,4DAMhB,oCACI,8DAAiC,wCAAjC,WACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,6DAAgC,0BAAhC,QAAL,OACA,sBAAMA,UAAU,UAAhB,+FAIR,oCACI,uDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,sDACA,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,UAAhB,sCACA,sBAAMA,UAAU,UAAhB,wCACA,sBAAMA,UAAU,UAAhB,+DACA,uBAAMA,UAAU,SAAhB,UACI,sEACA,2FAKZ,oCACI,sDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,mDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,sDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,8GAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,wCAAW,sDAAX,WACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,uCAAL,OACA,sBAAMA,UAAU,UAAhB,sDACA,sBAAMA,UAAU,UAAhB,iEAIR,oCACI,iEAAoC,oCAApC,YACA,wDAA2B,SAA3B,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,8DACA,qIAGJ,sBAAMA,UAAU,UAAhB,4DACA,sBAAMA,UAAU,UAAhB,iEACA,sBAAMA,UAAU,UAAhB,8BACA,sBAAMA,UAAU,SAAhB,SACI,0DAGJ,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACI,iHACA,mEAGJ,uBAAMA,UAAU,UAAhB,wBAAsC,MAAtC,+BACA,sBAAMA,UAAU,SAAhB,SACI,+FAGJ,uBAAMA,UAAU,UAAhB,oEAAkF,MAAlF,4BACA,sBAAMA,UAAU,SAAhB,SACI,2GAGJ,sBAAMA,UAAU,UAAhB,iDACA,sBAAMA,UAAU,SAAhB,SACI,qEAGJ,sBAAMA,UAAU,UAAhB,uEACA,oEAAuC,WAAvC,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,2EAAN,OACA,mCAAM,eAAN,OACA,mCAAM,sDAAN,OACA,mCAAM,kDAAN,OACA,mCAAM,+DAAN,OACA,mCAAM,+CAAN,OACA,mCAAM,4GAAN,OACA,mCAAM,iFAAN,OACA,mCAAM,+CAAN,OACA,mCAAM,aAAN,OACA,mCAAM,WAAN,OACA,mCAAM,wBAAN,OACA,mCAAM,SAAN,OACA,mCAAM,4FAAN,OACA,mCAAM,wEAAN,OACA,mCAAM,4EAAN,OACA,mCAAM,wBAAN,OACA,mCAAM,SAAN,OACA,mCAAM,OAAN,gBAMZ,oCACI,kEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,kEAAoC,kHAApC,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,qGACA,2HACA,2FACA,4GACA,6GACA,0FACA,2EACA,mCAAM,4BAAN,UAEJ,sBAAMA,UAAU,UAAhB,gDACA,mCAAM,6CAAN,OACA,mCAAM,4CAAN,OACA,mCAAM,oDAAN,OACA,mCAAM,sEAAN,OACA,mCAAM,oEAAN,OACA,mCAAM,iFAAN,OACA,mCAAM,oDAAN,OACA,mCAAM,iEAAN,OACA,mCAAM,cAAN,OACA,mCAAM,eAAN,OACA,mCAAM,yDAAN,OACA,mCAAM,mEAAN,OACA,mCAAM,sFAAN,OACA,mCAAM,gCAAN,OACA,mCAAM,4DAAN,OACA,mCAAM,SAAN,OACA,mCAAM,0BAAN,OACA,sBAAMA,UAAU,UAAhB,iDACA,sBAAMA,UAAU,SAAhB,SACI,8DAEJ,sBAAMA,UAAU,UAAhB,0DACA,sBAAMA,UAAU,SAAhB,SACI,mEAEJ,sBAAMA,UAAU,UAAhB,sDACA,sBAAMA,UAAU,SAAhB,SACI,6DAEJ,sBAAMA,UAAU,UAAhB,sEACA,sBAAMA,UAAU,SAAhB,SACI,mEAEJ,sBAAMA,UAAU,UAAhB,uEACA,uBAAMA,UAAU,SAAhB,UACI,sFACA,oDAEJ,sBAAMA,UAAU,UAAhB,sFACA,sBAAMA,UAAU,SAAhB,SACI,sDAEJ,sBAAMA,UAAU,UAAhB,kEACA,sBAAMA,UAAU,SAAhB,SACI,2EAEJ,sBAAMA,UAAU,UAAhB,wCACA,sBAAMA,UAAU,SAAhB,SACI,uJAMZ,oCACI,4DAA8B,uIAA9B,OACA,2DACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,uCAAL,OACA,sBAAMA,UAAU,UAAhB,eACA,uBAAMA,UAAU,SAAhB,UACI,uEACA,mGAKZ,oCACI,2EACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,eACA,uBAAMA,UAAU,SAAhB,UACI,yDACA,kEACA,8EACA,mFAMZ,oCACI,gEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,uEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,yDACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,wDAA2B,MAA3B,WACA,mCAAK,kNAAL,OACA,sBAAMA,UAAU,SAAhB,SACI,sBAAMA,UAAU,UAAhB,gDAIR,oCACI,8DAAgC,oGAAhC,OAEA,mCAAK,2KAAL,OACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iGACA,0IAKR,oCACI,wDAA0B,mJAA1B,OACA,2DACA,mCAAK,sCAAL,OACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,cAA4B,4DAA5B,OACA,gGACA,uBAAMA,UAAU,UAAhB,cAA4B,yBAA5B,OACA,mFACA,uBAAMA,UAAU,UAAhB,cAA4B,yBAA5B,OACA,yQACA,uBAAMA,UAAU,UAAhB,cAA4B,kCAA5B,OACA,+FACA,uBAAMA,UAAU,UAAhB,cAA4B,iCAA5B,OACA,+FACA,uBAAMA,UAAU,UAAhB,cAA4B,sCAA5B,OACA,4GACA,uBAAMA,UAAU,UAAhB,cAA4B,wBAA5B,OACA,2GAIR,oCACI,kEAAqC,sEAArC,aACA,wEAA2C,6BAA3C,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,gEAIR,oCACI,gFAAkD,yLAAlD,OACA,0EAFJ,IAEyD,uBACrD,uCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,uCAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,8HACA,mEACA,kEAEJ,sBAAMA,UAAU,UAAhB,gGACA,6GACA,uBAAMA,UAAU,SAAhB,UACI,iDACA,gEACA,oEACA,gEAEJ,uBAAMA,UAAU,UAAhB,cAA4B,mFACvB,uDADL,OAEA,6GACA,uBAAMA,UAAU,SAAhB,UACI,uDACA,+DACA,mEACA,oEAEJ,sBAAMA,UAAU,UAAhB,8CACA,sBAAMA,UAAU,SAAhB,SACI,8DAEJ,sBAAMA,UAAU,UAAhB,4CACA,sBAAMA,UAAU,SAAhB,SACI,4DAEJ,sBAAMA,UAAU,UAAhB,qGACA,uBAAMA,UAAU,SAAhB,UACI,sKACA,qEAEJ,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACI,6DACA,qEAKZ,oCACI,0EACA,uCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sEAAyC,gBAAzC,OAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,qHACA,uEACA,2IACA,8DAAiC,WAAjC,iDAA2F,WAA3F,KACI,uBAAMA,UAAU,SAAhB,UACK,IADL,eACsB,uCADtB,6JAG2F,IAH3F,IAGiG,UAGrG,oGACA,+FACA,0GACA,4FACA,qFACA,wFACA,8HACA,8DACA,uEAGJ,sBAAMA,UAAU,UAAhB,wDACA,sBAAMA,UAAU,SAAhB,SACI,kDAGJ,sBAAMA,UAAU,UAAhB,+EACA,sBAAMA,UAAU,SAAhB,SACI,6EAGJ,sBAAMA,UAAU,UAAhB,4FACA,sBAAMA,UAAU,SAAhB,SACI,0FAGJ,sBAAMA,UAAU,UAAhB,uEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,iDAAN,OACA,mCAAM,qFAAN,OACA,mCAAM,wFAAN,OACA,mCAAM,2EAAN,OACA,mCAAM,mFAAN,OACA,mCAAM,+EAAN,OACA,mCAAM,uGAAN,OACA,mCAAM,iCAAN,OACA,mCAAM,8CAAN,OACA,mCAAM,iEAAN,OACA,mCAAM,2FAAN,OACA,mCAAM,2EAAN,OACA,mCAAM,0GAAN,OACA,mCAAM,MAAN,OACA,mCAAM,0BAAN,OACA,mCAAM,sBAAN,UAGJ,sBAAMA,UAAU,UAAhB,0FACA,uBAAMA,UAAU,SAAhB,UACI,gDACA,2FACA,6DACA,mDACA,6DACA,2DACA,wDACA,qDACA,sDACA,4EAA+C,KAA/C,WACA,qDAGJ,sBAAMA,UAAU,UAAhB,yFACA,sBAAMA,UAAU,SAAhB,SACI,0HAGJ,sBAAMA,UAAU,UAAhB,wFACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,kDAAN,OACA,mCAAM,wDAAN,OACA,mCAAM,2DAAN,OACA,mCAAM,uGAAN,OACA,mCAAM,2FAAN,OACA,mCAAM,oDAAN,OACA,mCAAM,MAAN,OACA,mCAAM,uCAAN,UAGJ,sBAAMA,UAAU,UAAhB,mFACA,uBAAMA,UAAU,SAAhB,UACI,8IACA,uJAGJ,sBAAMA,UAAU,UAAhB,iEACA,uBAAMA,UAAU,SAAhB,UACI,8IACA,uJAGJ,sBAAMA,UAAU,UAAhB,kEACA,uBAAMA,UAAU,SAAhB,UACI,kEACA,iGAAuE,IAAvE,OACA,2IACA,kFACA,mCAAM,IAAN,YAGJ,sBAAMA,UAAU,UAAhB,uEACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,4EACA,uBAAMA,UAAU,SAAhB,UACI,+FACA,0HACA,gHACA,qDACA,wDAGJ,sBAAMA,UAAU,UAAhB,0EACA,sBAAMA,UAAU,SAAhB,SACI,0DAGJ,sBAAMA,UAAU,UAAhB,6EACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,0BAAN,OACA,mCAAM,gGAAN,OACA,mCAAM,0EAAN,OACA,mCAAM,2GAAN,OACA,mCAAM,wBAAN,OACA,mCAAM,kGAAN,OACA,mCAAM,8CAAN,OACA,mCAAM,cAAN,OACA,mCAAM,qFAAN,OACA,mCAAM,kGAAN,OACA,mCAAM,uDAAN,OACA,mCAAM,MAAN,OACA,mCAAM,cAAN,OACA,mCAAM,sEAAN,OACA,mCAAM,uDAAN,OACA,mCAAM,4GAAN,OACA,mCAAM,iEAAN,OACA,mCAAM,MAAN,OACA,mCAAM,KAAN,UAIJ,sBAAMA,UAAU,UAAhB,uFACA,sBAAMA,UAAU,SAAhB,SACI,yEAGJ,sBAAMA,UAAU,UAAhB,+GACA,sBAAMA,UAAU,SAAhB,SACI,mGAGJ,uBAAMA,UAAU,UAAhB,oEAAkF,WAAlF,4BACA,sBAAMA,UAAU,SAAhB,SACI,qFAGJ,sBAAMA,UAAU,UAAhB,mHACA,sBAAMA,UAAU,SAAhB,SACI,qGAGJ,sBAAMA,UAAU,UAAhB,sFACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,yFAAN,OACA,mCAAM,qEAAN,OACA,mCAAM,IAAN,OACA,mCAAM,0FAAN,UAGJ,uBAAMA,UAAU,UAAhB,cAA4B,sDAA5B,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,2DAAN,OACA,mCAAM,oFAAN,OACA,mCAAM,uEAAN,OACA,mCAAM,+DAAN,OACA,mCAAM,0FAAN,OACA,mCAAM,8EAAN,OACA,mCAAM,0BAAN,UAGJ,sBAAMA,UAAU,UAAhB,4FACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,iEAAN,OACA,mCAAM,yCAAN,OACA,mCAAM,yDAAN,OACA,mCAAM,uFAAN,OACA,mCAAM,sDAAN,OACA,mCAAM,yFAAN,OACA,mCAAM,gDAAN,OACA,mCAAM,MAAN,OACA,mCAAM,cAAN,OACA,mCAAM,8FAAN,OACA,mCAAM,mCAAN,OACA,mCAAM,2DAAN,OACA,mCAAM,QAAN,OACA,mCAAM,4CAAN,OACA,mCAAM,qCAAN,OACA,mCAAM,uFAAN,OACA,mCAAM,4EAAN,OACA,mCAAM,yCAAN,OACA,mCAAM,qBAAN,OACA,mCAAM,cAAN,OACA,mCAAM,YAAN,OACA,mCAAM,uCAAN,OACA,mCAAM,gFAAN,OACA,mCAAM,YAAN,OACA,mCAAM,wCAAN,OACA,mCAAM,UAAN,OACA,mCAAM,QAAN,OACA,mCAAM,yDAAN,OACA,mCAAM,MAAN,UAGJ,sBAAMA,UAAU,UAAhB,kGACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,wDAAN,OACA,mCAAM,8CAAN,OACA,mCAAM,2DAAN,OACA,mCAAM,qCAAN,OACA,mCAAM,iHAAN,OACA,mCAAM,2EAAN,OACA,mCAAM,iGAAN,OACA,mCAAM,4CAAN,OACA,mCAAM,4DAAN,OACA,mCAAM,qEAAN,OACA,mCAAM,0GAAN,OACA,mCAAM,gDAAN,OACA,mCAAM,QAAN,OACA,mCAAM,gBAAN,OACA,mCAAM,yGAAN,OACA,mCAAM,0FAAN,OACA,mCAAM,8CAAN,OACA,mCAAM,uCAAN,OACA,mCAAM,8DAAN,OACA,mCAAM,6CAAN,OACA,mCAAM,2DAAN,OACA,mCAAM,QAAN,OACA,mCAAM,4GAAN,OACA,mCAAM,yFAAN,OACA,mCAAM,oEAAN,OACA,mCAAM,gEAAN,OACA,mCAAM,YAAN,OACA,mCAAM,kFAAN,OACA,mCAAM,2FAAN,OACA,mCAAM,wEAAN,OACA,mCAAM,yEAAN,OACA,mCAAM,yEAAN,OACA,mCAAM,4DAAN,OACA,mCAAM,6HAAN,OACA,mCAAM,4EAAN,OACA,mCAAM,QAAN,UAGJ,sBAAMA,UAAU,UAAhB,oHACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,4DAAN,OACA,mCAAM,4GAAN,OACA,mCAAM,sDAAN,OACA,mCAAM,sCAAN,OACA,mCAAM,gEAAN,OACA,mCAAM,UAAN,OACA,iDACA,iFAAoD,iCAApD,iCACA,0DAA6B,IAA7B,OACA,4HACA,sCAAS,IAAT,QACA,gDACA,6EAAgD,iCAAhD,2CAA0H,IAA1H,OACA,uHACA,sCAAS,IAAT,QACA,iDACA,6CAAgB,iCAAhB,+BAA8E,oCAA9E,4BACA,+EAAkD,IAAlD,QACA,0IACA,sCAAS,IAAT,WAGJ,sBAAMA,UAAU,UAAhB,2EACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,2DAAN,OACA,mCAAM,iDAAN,OACA,mCAAM,qEAAN,OACA,mCAAM,wDAAN,OACA,mCAAM,UAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,yDAAN,OACA,mCAAM,2DAAN,OACA,mCAAM,UAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,mFAAN,OACA,mCAAM,6EAAN,OACA,mCAAM,UAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,iEAAN,OACA,mCAAM,wEAAN,OACA,mCAAM,UAAN,OACA,mCAAM,uDAAN,OACA,mCAAM,8CAAN,OACA,mCAAM,yCAAN,OACA,mCAAM,YAAN,OACA,mCAAM,kFAAN,OACA,mCAAM,yCAAN,OACA,mCAAM,0FAAN,OACA,mCAAM,YAAN,OACA,mCAAM,kDAAN,OACA,mCAAM,kCAAN,OACA,mCAAM,UAAN,OACA,mCAAM,qDAAN,OACA,mCAAM,gBAAN,OACA,mCAAM,0DAAN,OACA,mCAAM,YAAN,OACA,mCAAM,qDAAN,OACA,mCAAM,yBAAN,OACA,mCAAM,YAAN,OACA,mCAAM,UAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,mCAAN,OACA,mCAAM,kDAAN,OACA,mCAAM,UAAN,gBAMZ,oCACI,2EACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,0EAAL,OACA,mCAAK,0EAAL,OACA,mCAAK,uCAAL,OACA,sBAAMA,UAAU,UAAhB,wEACA,uBAAMA,UAAU,SAAhB,UACI,wEACA,kIAEJ,sBAAMA,UAAU,UAAhB,sFACA,uCACA,uBAAMA,UAAU,SAAhB,UACI,0DAA4B,8HAA5B,OACA,oCACA,uCAEJ,sBAAMA,UAAU,UAAhB,gEACA,yIACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,gMAAL,OACA,mCAAK,0HAAL,OACA,wIAEJ,sBAAMA,UAAU,UAAhB,qEACA,yKACA,gOACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,wCACA,sQACA,2LACA,wJACA,oIACA,yLACA,0MACA,mMACA,oNACA,qKACA,0MACA,iHACA,6JACA,4LACA,4JACA,mQACA,yKACA,0CACA,kFACA,uMACA,gJACA,8KACA,qJACA,qJACA,0CACA,qFACA,yKACA,qNACA,+IACA,0CACA,wDACA,oNACA,mGACA,0CACA,2LACA,0CACA,kDAAoB,8EAApB,OACA,4DACA,uDACA,0EAA4C,iIAA5C,OACA,6CAKZ,oCACI,wEACA,2JACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kEAAL,OACA,sBAAMA,UAAU,UAAhB,iFACA,uBAAMA,UAAU,SAAhB,UACI,gKACA,8GACA,qGACA,iGASZ,oCACI,oEACA,mCAAK,gTAAL,OAEA,mCAAK,kKAAL,OACA,mCAAK,oKAAL,OACA,mCAAK,uGAAL,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,qIAAL,OACA,mCAAK,2FAAL,OACA,mEACA,mCAAK,yEAAL,OACA,4DACA,6DACA,yDACA,kEAMZ,oCACI,qEACA,+JACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,8DAAL,OAEA,sBAAMA,UAAU,UAAhB,wCACA,mCAAK,qEAAL,OAEA,sBAAMA,UAAU,UAAhB,+DACA,sBAAMA,UAAU,SAAhB,SACI,mEAGJ,sBAAMA,UAAU,UAAhB,wFACA,mCAAK,qIAAL,OACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,gEAAN,OACA,mCAAM,mDAAN,OACA,mCAAM,wBAAN,OACA,mCAAM,6CAAN,OACA,mCAAM,yCAAN,OACA,mCAAM,gBAAN,OACA,mCAAM,cAAN,OACA,mCAAM,8BAAN,UAGJ,sBAAMA,UAAU,UAAhB,qDACA,mCAAK,qFAAL,OACA,sBAAMA,UAAU,SAAhB,SACI,sEAGJ,sBAAMA,UAAU,UAAhB,qDACA,mCAAK,2GAAL,OACA,sBAAMA,UAAU,SAAhB,SACI,qEAGJ,sBAAMA,UAAU,UAAhB,8DACA,mCAAK,0FAAL,OACA,sBAAMA,UAAU,SAAhB,SACI,kDAGJ,sBAAMA,UAAU,UAAhB,6DACA,mCAAK,0FAAL,OACA,sBAAMA,UAAU,SAAhB,SACI,kDAGJ,sBAAMA,UAAU,UAAhB,kEACA,mCAAK,4GAAL,OACA,sBAAMA,UAAU,SAAhB,SACI,kDAGJ,sBAAMA,UAAU,UAAhB,qDACA,mCAAK,uGAAL,OACA,sBAAMA,UAAU,SAAhB,SACI,wDAMZ,oCACI,6EACA,iKAFJ,IAE2D,uBACvD,uBAAMA,UAAU,SAAhB,UACI,mCAAK,gDAAL,OACA,mCAAK,mEAAL,OACA,sBAAMA,UAAU,UAAhB,0CACA,oFACA,sBAAMA,UAAU,UAAhB,uGACA,uBAAMA,UAAU,SAAhB,UACI,oGACA,wDAA2B,+CAA3B,OACA,yDAKZ,oCACI,yEACA,iMACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAS,wCAAT,OAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,qFACA,mCAAK,wHAAL,gBAKZ,oCACI,mEACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,kDAAL,OACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,2FACA,gFAEJ,sBAAMA,UAAU,UAAhB,8CACA,sBAAMA,UAAU,SAAhB,SACI,4EAA2B,uCAA3B,SAEJ,sBAAMA,UAAU,UAAhB,+CACA,sBAAMA,UAAU,SAAhB,SACI,iGAAgD,wEAAhD,eAKZ,oCACI,0CACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,oCACI,0CACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,UAAhB,cAA2B,mBAAGC,KAAK,yBAAR,sCAA3B,OACA,uBAAMD,UAAU,SAAhB,UAEI,oCACI,6EACA,uBAAMA,UAAU,SAAhB,UACI,oMACA,uIACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,wDACA,uBAAMA,UAAU,SAAhB,UACI,kSACA,0EACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,iFACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,gSAAL,OACA,mCAAK,qJAAL,OACA,mCAAK,kFAAL,OACA,mCAAK,kFAAL,OACA,mCAAK,mGAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,6EACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,+kBAAL,OAGA,mCAAK,sDAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,sEACA,uBAAMA,UAAU,SAAhB,UACI,0LACA,mCAAK,qGAAL,OACA,mCAAK,gFAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,0EACA,uBAAMA,UAAU,SAAhB,UACI,wWAEA,mCAAK,kEAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,iEACA,uBAAMA,UAAU,SAAhB,UACI,mXAEA,mCAAK,sDAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,oFACA,uBAAMA,UAAU,SAAhB,UACI,2YAGA,mCAAK,sDAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,yEACA,uBAAMA,UAAU,SAAhB,UACI,2mBAIA,mCAAK,sDAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,kEACA,uBAAMA,UAAU,SAAhB,UACI,kxBAGA,mCAAK,sUAAL,OAEA,mCAAK,uIAAL,OACA,mCAAK,0EAAL,OACA,mCAAK,oGAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,uEACA,uBAAMA,UAAU,SAAhB,UACI,+RACA,mCAAK,8EAAL,OACA,mCAAK,yEAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,uEACA,uBAAMA,UAAU,SAAhB,UACI,uYAEA,mCAAK,mGAAL,OACA,mCAAK,2FAAL,OACA,mCAAK,6EAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,0EACA,uBAAMA,UAAU,SAAhB,UACI,qcAGA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,4DACA,uBAAMA,UAAU,SAAhB,UACI,2KACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,mDACA,uBAAMA,UAAU,SAAhB,UACI,oGACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,0CACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,0CACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,qBAIR,oCACI,0CACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sCAAL,OACA,sBAAMA,UAAU,UAAhB,wBAKZ,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,oDC52DjBsB,EA9Ce,SAACvB,GAC3B,OACI,mCACI,sBAAKC,UAAU,eAAf,UACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,0BAAR,wCAA1B,OACA,kCAAI,2JAAJ,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,gCAA1B,QACA,kCAAI,qBAAKsB,IAAKC,oFAAmGC,IAAI,KAArH,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,iCAA1B,OACA,kCAAI,qBAAKsB,IAAKC,kFAAiGC,IAAI,KAAnH,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,8BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,+EAA8FC,IAAI,KAAhH,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,UAAyB,mBAAGC,KAAK,QAAR,qBAAzB,QACA,kCAAI,qBAAKsB,IAAKC,sEAAqFC,IAAI,KAAvG,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,4BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,6EAA4FC,IAAI,KAA9G,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,yBAAR,sCAA1B,OACA,kCAAI,qBAAKsB,IAAKC,uFAAsGC,IAAI,KAAxH,aAGR,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,0BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,2EAA0FC,IAAI,KAA5G,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,iCAA1B,OACA,kCAAI,qBAAKsB,IAAKC,kFAAiGC,IAAI,KAAnH,mBC+CTC,EAtFe,SAAC3B,GAG3B,OACI,mCAEI,sBAAKC,UAAU,eAAf,UACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,0BAAR,wCAA1B,OACA,kCAAI,0WAAJ,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,gCAA1B,QACA,kCAAI,qBAAKsB,IAAKC,oFAAmGC,IAAI,KAArH,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,iCAA1B,OACA,kCAAI,qBAAKsB,IAAKC,kFAAiGC,IAAI,KAAnH,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,gBAAR,6BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,8EAA6FC,IAAI,KAA/G,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,8BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,+EAA8FC,IAAI,KAAhH,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,0BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,2EAA0FC,IAAI,KAA5G,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,UAAR,uBAA1B,OACA,kCAAI,qBAAKsB,IAAKC,wEAAuFC,IAAI,KAAzG,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,8BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,+EAA8FC,IAAI,KAAhH,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,UAAyB,mBAAGC,KAAK,QAAR,qBAAzB,QACA,kCAAI,qBAAKsB,IAAKC,sEAAqFC,IAAI,KAAvG,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,UAAyB,mBAAGC,KAAK,QAAR,qBAAzB,QACA,kCAAI,qBAAKsB,IAAKC,sEAAqFC,IAAI,KAAvG,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,UAAyB,mBAAGC,KAAK,OAAR,oBAAzB,QACA,kCAAI,qBAAKsB,IAAKC,qEAAoFC,IAAI,KAAtG,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,kCAAI,qBAAKsB,IAAKC,uEAAsFC,IAAI,KAAxG,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kBAAR,+BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,gFAA+FC,IAAI,KAAjH,aAGR,uBAAMzB,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,0BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,2EAA0FC,IAAI,KAA5G,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,cAAR,2BAA1B,OACA,kCAAI,qBAAKsB,IAAKC,4EAA2FC,IAAI,KAA7G,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,WAAR,wBAA1B,OACA,kCAAI,qBAAKsB,IAAKC,yEAAwFC,IAAI,KAA1G,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,QAAR,qBAA1B,OACA,kCAAI,qBAAKsB,IAAKC,sEAAqFC,IAAI,KAAvG,UAEJ,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,UAAR,uBAA1B,OACA,kCAAI,qBAAKsB,IAAKC,wEAAuFC,IAAI,KAAzG,mBC4BTE,EA3Ge,SAAC5B,GAE3B,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,uCACA,uYACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,iCAA1B,OACA,qBAAKsB,IAAKC,oFAAmGC,IAAI,QAGrH,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,yBAA1B,OACA,qBAAKsB,IAAKC,0EAAyFC,IAAI,QAG3G,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kBAAR,+BAA1B,OACA,qBAAKsB,IAAKC,gFAA+FC,IAAI,QAGjH,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,iCAA1B,OACA,qBAAKsB,IAAKC,kFAAiGC,IAAI,QAGnH,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,2BAAR,wCAA1B,OACA,qBAAKsB,IAAKC,yFAAwGC,IAAI,QAG1H,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qBAAR,kCAA1B,OACA,qBAAKsB,IAAKC,mFAAkGC,IAAI,QAGpH,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,0BAAR,uCAA1B,OACA,qBAAKsB,IAAKC,wFAAuGC,IAAI,QAGzH,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,+BAA1B,OACA,qBAAKsB,IAAKC,+EAA8FC,IAAI,QAGhH,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,OAAR,oBAA1B,OACA,qBAAKsB,IAAKC,qEAAoFC,IAAI,QAGtG,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,8BAA1B,OACA,qBAAKsB,IAAKC,+EAA8FC,IAAI,QAGhH,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,0BAA1B,OACA,qBAAKsB,IAAKC,2EAA0FC,IAAI,QAG5G,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,0BAA1B,OACA,qBAAKsB,IAAKC,2EAA0FC,IAAI,QAG5G,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,gBAAR,6BAA1B,OACA,qBAAKsB,IAAKC,8EAA6FC,IAAI,QAG/G,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,8BAA1B,OACA,qBAAKsB,IAAKC,+EAA8FC,IAAI,QAGhH,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,cAAR,2BAA1B,OACA,qBAAKsB,IAAKC,4EAA2FC,IAAI,QAG7G,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,yBAA1B,OACA,qBAAKsB,IAAKC,0EAAyFC,IAAI,QAE3G,uBAAMzB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,qBAAKsB,IAAKC,wEAAuFC,IAAI,KACrG,qBAAKF,IAAKC,wEAAuFC,IAAI,KACrG,qBAAKF,IAAKC,wEAAuFC,IAAI,KACrG,qBAAKF,IAAKC,wEAAuFC,IAAI,kBC4BlHG,EAzHe,SAAC7B,GAE3B,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCAAiD,mBAAGC,KAAK,oBAAoBI,MAAO,CAAEC,WAAY,UAAjD,iCAAjD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+BAAyC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,yBAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qCAA+C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,+BAA/C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,4BAAsC,mBAAGC,KAAK,SAASI,MAAO,CAAEC,WAAY,UAAtC,sBAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC9CrB6B,EA/DS,SAAC9B,GAErB,OACI,qCACI,uBAAMC,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oCAAR,kDAA1B,OACA,mBAAGC,KAAK,mGAAmGC,OAAO,SAAlH,6CACA,kHACA,kGACA,uBAAMH,UAAU,SAAhB,UACI,kCAAI,oGAAJ,kEACA,sBAAMA,UAAU,SAAhB,SACI,kCAAI,iDAAJ,wUAIJ,kCAAI,iGAAJ,wHAEA,kCAAI,0EAAJ,4DACA,kCAAI,iFAAJ,wEAAiE,8BAAjE,uCACA,6FAEJ,iGACA,uBAAMA,UAAU,SAAhB,UACI,4IACA,yKAGR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qDAAR,iEAA1B,OACA,iHACA,kGACA,uBAAMD,UAAU,SAAhB,UACI,kCAAK,WAAL,OACA,kCAAK,QAAL,OACA,0CAAiB,uBAAjB,OACA,0CAAiB,yEAAjB,OACA,0CAAiB,0CAAjB,OACA,0CAAiB,cAAjB,OACA,kDAA6B,sBAA7B,OACA,kDAA6B,4BAA7B,OACA,0CAAiB,eAAjB,OACA,kCAAK,SAAL,OACA,kCAAK,UAAL,UAEJ,iGACA,uBAAMA,UAAU,SAAhB,UACI,kCAAI,yFAAJ,wHAEA,kCAAI,sGAAJ,+DAEJ,wDACA,+HACA,uBAAMA,UAAU,SAAhB,UACI,kFACA,iGACA,2ICzCL8B,EAfiB,SAAC/B,GAE7B,OACI,8BACI,uBAAMC,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,8CAAR,iDAA1B,OACA,uKACA,sBAAMD,UAAU,iBCiHjB+B,EA1HQ,SAAChC,GAEpB,OACI,qCAEI,uBAAMC,UAAU,SAAhB,UACI,kCAAI,mBAAGE,KAAK,yDAAyDC,OAAO,SAAxE,4CAAJ,OACA,gPACA,6IACA,uBAAMH,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,gBAAR,iCAA1B,OACA,mGACA,6GACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,8BAA1B,OACA,uEACA,sBAAMD,UAAU,SAAhB,SACI,kDAAwB,IAAxB,kCAAmC,IAAnC,WAEJ,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,6BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,gDAAsB,IAAtB,qBAA8B,IAA9B,SACA,8CAEJ,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,+BAAR,gDAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,8CACA,0DAAoC,IAApC,qBAA4C,IAA5C,SACA,qDACA,0DAAoC,IAApC,qBAA4C,IAA5C,SACA,qDACA,wDACA,0DACA,kDAEJ,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iBAAR,kCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,kFACA,kDAEJ,uBAAMA,UAAU,SAAhB,UACI,8DAAoC,SAApC,SACA,kDAEJ,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,gCAA1B,OACA,kFACA,uBAAMD,UAAU,SAAhB,UACI,sIACA,4EACA,4EACA,gDAEJ,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,8BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,+EAAgD,IAAhD,SAAsD,IAAtD,UACA,kDAAwB,IAAxB,SAA8B,IAA9B,aAEJ,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,gBAAR,iCAA1B,OACA,uEACA,sBAAMD,UAAU,WAEhB,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,mBAAR,oCAA1B,OACA,sJACA,uBAAMD,UAAU,SAAhB,UACI,4HACA,qDAEJ,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,gCAA1B,OACA,8GACA,uBAAMD,UAAU,SAAhB,UACI,0DACA,+CACA,8CAAiB,IAAjB,+BAAmC,IAAnC,UAEJ,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kBAAR,oCAA1B,OACA,8EACA,uBAAMD,UAAU,SAAhB,UACI,mEACA,yEACA,0DAIZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,qCAA1B,OACA,kCACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,sBAAMD,UAAU,iBAIxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,uBAAR,sCAA1B,OACA,kCACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,sBAAMD,UAAU,iBAIxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,gBAAR,+BAA1B,OACA,kCACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,sBAAMD,UAAU,iBAIxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,+BAA1B,OACA,kCACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,sBAAMD,UAAU,qBC/FrBgC,EAjBD,SAACjC,GAEX,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,sBAAMD,UAAU,SAAhB,SACI,sBAAMA,UAAU,qBCwHzBiC,EAhIQ,SAAClC,GAGpB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,sBAAMA,UAAU,SAAhB,SACI,+BACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,OAAR,qBAA1B,OAEA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,wEAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,iIACA,0FACA,uEACA,+IACA,wJACA,gLACA,0KACA,6JACA,iJACA,yLACA,+QACA,wDAA2B,mDAC3B,mCAAM,6BACN,wHACA,8CACA,8CACA,qDAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kBAAR,+BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2BACA,2CACA,kGACA,4DACA,oFACA,+DACA,2DACA,wEACA,4CACA,sBAAMA,UAAU,UAAhB,uBACA,iDACA,iFACA,oFACA,yEACA,uDAOR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,2BCUjCkC,EAjHe,SAACnC,GAE3B,OACI,mCACI,sBAAKC,UAAU,eAAf,UACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,sBAAR,qCAA1B,OACA,gRACA,kQACA,kaAEA,uUAGA,sBAAMD,UAAU,SAAhB,SACI,kCAAI,qBAAKuB,IAAKC,gCAAd,YAGR,uBAAMxB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,mCAA1B,OACA,4OACA,yIACA,qIACA,iKACA,iaAEA,uBAAMD,UAAU,SAAhB,UACI,iFACA,+MACA,0GACA,iYAGA,sLACA,kCAAI,qBAAKuB,IAAKC,0CAAd,aAGR,uBAAMxB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,uBAAR,uCAA1B,OACA,qIACA,sQACA,seAEA,6PACA,sMACA,sMACA,sBAAMD,UAAU,SAAhB,SACI,wCAGR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,4BAA1B,OACA,uHACA,sIACA,oUAGA,uKACA,2JACA,sBAAMD,UAAU,SAAhB,SACI,wCAGR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,8BAAR,8CAA1B,OACA,mKACA,+FACA,qJACA,kFACA,uBAAMD,UAAU,SAAhB,UACI,0HACA,qLACA,kCAAI,qBAAKuB,IAAKC,sCAAd,aAGR,uBAAMxB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,+DAAR,+EAA1B,OACA,iGACA,6FACA,8FACA,oGACA,0EACA,uBAAMD,UAAU,SAAhB,UACI,2KACA,6MACA,iHACA,qEACA,sHACA,mMACA,gHACA,qNACA,0MACA,mJACA,kCAAI,qBAAKuB,IAAKC,yCAAd,aAGR,uBAAMxB,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,8BAAR,kDAA1B,OACA,mKACA,+FACA,qJACA,kFACA,uBAAMD,UAAU,SAAhB,UACI,0HACA,qLACA,kCAAI,qBAAKuB,IAAKC,sCAAd,mBCsFTW,EA/LM,SAACpC,GAGlB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,4BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wGACA,uBAAMA,UAAU,SAAhB,UACI,oKACA,oJACA,uIACA,qLACA,0HACA,6RACA,8RACA,gpBAGA,2OACA,gUACA,uTACA,uOACA,iLACA,mJACA,0SACA,wRACA,0QACA,gOACA,2CAGJ,sBAAMA,UAAU,UAAhB,yCACA,sMACA,uBAAMA,UAAU,SAAhB,UACI,2KACA,6HACA,wOACA,iiBAGA,2RACA,iRACA,iGAGJ,sBAAMA,UAAU,UAAhB,2DACA,uBAAMA,UAAU,SAAhB,UACI,6HACA,qGACA,mGACA,wCACA,qJAGJ,sBAAMA,UAAU,UAAhB,uFACA,uBAAMA,UAAU,SAAhB,UACI,0CACA,4KACA,6CAGJ,sBAAMA,UAAU,UAAhB,wEACA,uBAAMA,UAAU,SAAhB,UACI,gEACA,gEACA,+HACA,wEAMZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,UAAR,uBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,wLACA,sBAAMA,UAAU,UAAhB,6BACA,uBAAMA,UAAU,SAAhB,UACI,kEACA,sEACA,mEACA,uEACA,wEACA,0FAGJ,sBAAMA,UAAU,UAAhB,+EACA,uBAAMA,UAAU,SAAhB,UACI,wFACA,yFACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAMZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kCAAR,+CAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4DACA,qhBAEA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,8PAAsD,uBAAtD,kGACkC,uBADlC,qHAGA,8IAEJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,qWACA,oNACA,qNACA,2KAEJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,+GACA,sHACA,gHACA,sFACA,kGACA,6CAKZ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gEACA,0RACA,uBAAMA,UAAU,SAAhB,UACI,sPACA,sMACA,sQAIR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,0CACA,sWAEA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAEJ,sBAAMA,UAAU,UAAhB,6BACA,uBAAMA,UAAU,SAAhB,UACI,kEACA,sEACA,mEACA,uEACA,wEACA,mGAOhB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC1GrBoC,EAzEM,SAACrC,GAGlB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gDAA2C,mBAAGC,KAAK,6BAAcI,MAAO,CAAEC,WAAY,UAA3C,0CAA3C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,8IACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,6FACA,8NACA,yGACA,+QACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kFACA,gOACA,6QACA,uNAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uGACA,uQACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4FACA,kKACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+GACA,yVAEA,8HAQpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCuLzBqC,EAnPe,SAACtC,GAE7B,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,6BACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CAA2C,mBAAGC,KAAK,wBAAcI,MAAO,CAAEC,WAAY,UAA3C,qCAA3C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0CAA0C,mBAAGC,KAAK,uBAAaI,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0CAA0C,mBAAGC,KAAK,uBAAaI,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0CAA0C,mBAAGC,KAAK,uBAAaI,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,uBACA,uBAAMA,UAAU,SAAhB,UACE,oCACE,yBAASA,UAAU,UAAnB,8BACA,uBAAMA,UAAU,SAAhB,UACE,0GACA,mFACA,4DACA,uDACA,oCACE,6KACA,4UAEA,uBAAMA,UAAU,SAAhB,UACE,sCAAS,uCAAT,OACA,sBAAMA,UAAU,UAAhB,qCACA,gFACA,sBAAMA,UAAU,UAAhB,oCACA,sFACA,sBAAMA,UAAU,UAAhB,gCACA,yIACA,sBAAMA,UAAU,UAAhB,oDACA,kIACA,sBAAMA,UAAU,UAAhB,uCACA,qJACA,sBAAMA,UAAU,UAAhB,qCACA,4JACA,sBAAMA,UAAU,UAAhB,kDACA,yMACA,sBAAMA,UAAU,UAAhB,yDACA,sVAOR,oCACE,yBAASA,UAAU,UAAnB,uCACA,uBAAMA,UAAU,SAAhB,UACE,gGACA,0DACA,qDACA,qFACA,8CACA,2DACA,oEACA,oDACA,6GACA,mEACA,yDACA,yEAIJ,oCACE,yBAASA,UAAU,UAAnB,sCACA,uBAAMA,UAAU,SAAhB,UACE,mLACA,sEACA,4EACA,4DACA,0DACA,sDACA,mFACA,uFACA,wDACA,iEACA,4EACA,4DACA,4DACA,+DACA,sDACA,8CACA,gEACA,yKAIJ,oCACE,yBAASA,UAAU,UAAnB,gCACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,gDAOR,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,uBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,wBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,sBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,uBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAA8C,mBAAGC,KAAK,2BAAiBI,MAAO,CAAEC,WAAY,UAA9C,wCAA9C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,yCAAyC,mBAAGC,KAAK,sBAAYI,MAAO,CAAEC,WAAY,UAAzC,mCAAzC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAA8C,mBAAGC,KAAK,2BAAiBI,MAAO,CAAEC,WAAY,UAA9C,wCAA9C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CAA2C,mBAAGC,KAAK,wBAAcI,MAAO,CAAEC,WAAY,UAA3C,qCAA3C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAA6C,mBAAGC,KAAK,0BAAgBI,MAAO,CAAEC,WAAY,UAA7C,uCAA7C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,wDCvHLsC,EA/GS,SAACvC,GACrB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCAAkC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kGACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,qDACA,sBAAMA,UAAU,SAAhB,SACI,iHAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCAAkC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,8NACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,6IACA,uCAGJ,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,SAAd,wcAEA,oBAAIA,UAAU,QAAd,iDACA,oBAAIA,UAAU,GAAd,2BAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCAAkC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,qDACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCAAkC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,qDACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCylBzBuC,EA1rBG,SAACxC,GAEf,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,4BAA1B,OACA,sBAAMD,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kDACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,sBAAN,OACA,mCAAM,aACF,mCAAM,eACF,mCAAM,wCAAN,OACA,mCAAM,mCAAN,OACA,mCAAM,wDAAN,UAEJ,mCAAM,mBAAN,OACA,mCAAM,eAAN,OACA,mCAAM,gBAAN,UAEJ,mCAAM,cAAN,OACA,+CAQhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,oNACA,8EACA,kIACA,0MAQhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6CACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,+DACA,sRACA,oLACA,mCAAK,mBAAGE,KAAK,+CAA+CC,OAAO,SAA9D,2BAAL,OACA,uBAAMH,UAAU,SAAhB,UACI,6EACA,6EACA,+DACA,wEACA,8FACA,yFASpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,wJACA,+IACA,uBAAMA,UAAU,SAAhB,UACI,gFACA,qBAAKK,MAAO,CAAEmC,gBAAiB,OAA/B,kDACA,gNASpB,sBAAMxC,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,yJACA,sJACA,uBAAMA,UAAU,SAAhB,UACI,kFACA,sBAAMK,MAAO,CAAEmC,gBAAiB,OAAhC,mDACA,8LASpB,sBAAMxC,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,yDACA,+JACA,mPACA,iHACA,uBAAMA,UAAU,SAAhB,UACI,8EACA,oBAAIK,MAAO,CAAEmC,gBAAiB,OAA9B,iDACA,kFACA,oBAAInC,MAAO,CAAEmC,gBAAiB,WAA9B,iDACA,8EACA,oBAAInC,MAAO,CAAEmC,gBAAiB,OAA9B,iDACA,kFACA,oBAAInC,MAAO,CAAEmC,gBAAiB,WAA9B,iDACA,8EACA,oBAAInC,MAAO,CAAEmC,gBAAiB,OAA9B,iDACA,kFACA,oBAAInC,MAAO,CAAEmC,gBAAiB,WAA9B,+DASpB,sBAAMxC,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,yDACA,mHACA,wJACA,uBAAMA,UAAU,SAAhB,UACI,kFACA,oBAAIK,MAAO,CAAEmC,gBAAiB,OAA9B,gDACA,gNASpB,sBAAMxC,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8EACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,sEACA,iIACA,+KACA,6SACA,uBAAMA,UAAU,SAAhB,UACI,4EADJ,sDACmC,uBAC/B,sFAFJ,iFAEyD,uBACrD,8HAHJ,IAGmC,uBAC/B,yFAJJ,kFAI+C,uBAC3C,4FALJ,IAKiC,uBAC7B,+EANJ,IAM8B,uBAC1B,sBAAMK,MAAO,CAAEmC,gBAAiB,WAAhC,qDAPJ,IAOuE,uBACnE,+EARJ,IAQ8B,uBAC1B,yEATJ,IAS6B,uBACzB,yEAVJ,IAU6B,uBACzB,mFAXJ,IAWoC,uBAXpC,kGAYwC,qCAUxD,sBAAMxC,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mDACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,yDACA,qFACA,gSACA,sEACA,sFACA,uEACA,2EACA,2FACA,8IACA,mPAEA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,wBAAQA,UAAU,UAAlB,qDAAL,OACA,mCAAK,qBAAKA,UAAU,gBAAf,kDAAL,OACA,mCAAK,sBAAMA,UAAU,UAAhB,mDAAL,OACA,mCAAK,uBAAOA,UAAU,gBAAjB,oDAAL,OACA,mCAAK,yBAASA,UAAU,gBAAnB,2EAAL,OACA,mCAAK,yBAASA,UAAU,gBAAnB,2GAAL,OACA,mCAAK,wBAAQA,UAAU,UAAlB,qDAAL,OACA,sNASpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,0DACA,qGACA,gHACA,uBAAMA,UAAU,SAAhB,UACI,2FACA,mBAAGE,KAAK,IAAR,iJACA,uHACA,mBAAGA,KAAK,IAAIG,MAAO,CAAEoC,eAAgB,QAArC,8FACA,gHACA,mBAAGvC,KAAK,yBAAR,kEACA,gIACA,mBAAGA,KAAK,yBAAyBC,OAAO,SAAxC,8GACA,uBAAMH,UAAU,SAAhB,UACI,0xBAKA,4HACA,mBAAGC,KAAK,MAAR,0GACA,6HACA,mBAAGC,KAAK,OAAR,2HAUxB,sBAAMF,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,4EACA,2FACA,4GACA,sKACA,uBAAMA,UAAU,SAAhB,UACI,8HACA,yKACA,2FACA,qLACA,+GACA,iGASpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,sEACA,8JACA,+FACA,uBAAMA,UAAU,SAAhB,UACI,yIACA,qBAAKuB,IAAKC,uCAAsDC,IAAI,2BAAOiB,MAAM,wBASrG,sBAAM1C,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,uHACA,6MACA,2MACA,iHACA,mKACA,4LACA,uBAAMA,UAAU,SAAhB,UACI,wEACA,kEACA,sJACA,gKACA,2FACA,0CACA,uBAAM2C,OAAO,MAAMC,OAAO,IAA1B,UACI,mCAAK,uBAAOC,KAAK,OAAOC,YAAY,gEAAcC,UAAQ,IAA1D,OACA,mCAAK,uBAAOF,KAAK,WAAWC,YAAY,sEAAeC,UAAQ,IAA/D,OACA,mCAAK,wBAAQF,KAAK,SAAb,4BAAL,yBAUxB,sBAAM7C,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,+BACI,wOACA,iJACA,6IACA,iIACA,sHAEJ,uBAAMA,UAAU,SAAhB,UACI,oDACA,sOACA,sQACA,qNAEJ,uBAAMA,UAAU,SAAhB,UACI,wDACA,0HACA,qJACA,iFACA,mCAAK,sCAAQ,gDAAR,OAAL,UAEJ,sBAAMA,UAAU,UAAhB,+FACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,qFACA,yDACA,mCAAK,uBAAO6C,KAAK,WAAjB,UAEJ,uBAAM7C,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,0IACA,2DACA,mCAAK,uBAAO6C,KAAK,aAAjB,UAEJ,uBAAM7C,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,0KACA,mFACA,qFACA,mCAAK,uBAAO6C,KAAK,QAAQ5C,KAAK,SAAS+C,MAAM,QAA7C,cACA,mCAAK,uBAAOH,KAAK,QAAQ5C,KAAK,SAAS+C,MAAM,UAA7C,iBAEJ,uBAAMhD,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,yKACA,mGACA,qGACA,mGACA,wGACA,mCAAK,uBAAO6C,KAAK,WAAW5C,KAAK,QAAQ+C,MAAM,UAA/C,oBACA,mCAAK,uBAAOH,KAAK,WAAW5C,KAAK,QAAQ+C,MAAM,UAA/C,mBACA,mCAAK,uBAAOH,KAAK,WAAW5C,KAAK,QAAQ+C,MAAM,SAA/C,sBAEJ,uBAAMhD,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,cAAyB,mBAAGC,KAAK,oBAAR,iCAAzB,OACA,qLACA,kMACA,gPACA,yJACA,+FACA,mFACA,mCAAK,wBAAOgD,QAAQ,QAAf,cAAwB,+DAAxB,OAAL,OACA,mCAAK,uBAAOJ,KAAK,WAAWK,GAAG,UAA/B,WAEJ,uBAAMlD,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,uFACA,oNACA,0IACA,mCAAK,uBAAO6C,KAAK,OAAO5C,KAAK,OAAO6C,YAAY,4DAAhD,WAEJ,uBAAM9C,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,gNACA,0OACA,kHACA,mCAAK,0BAAUmD,KAAK,KAAKC,KAAK,IAAI/C,MAAO,CAAEgD,OAAQ,OAAQC,OAAQ,OAAQC,SAAU,UAArF,WAEJ,uBAAMvD,UAAU,SAAhB,UACI,qBAAIA,UAAU,UAAd,cAAyB,mBAAGC,KAAK,qBAAR,kCAAzB,yGACA,6MACA,wDACA,yFACA,gGACA,gGACA,gGACA,uEACA,gGACA,gGACA,mDACA,6CACA,yBAAQA,KAAK,OAAb,UACI,wBAAQ+C,MAAM,GAAGQ,UAAQ,EAACC,UAAQ,EAAlC,4BACA,wBAAQT,MAAM,eAAd,4BACA,wBAAQA,MAAM,eAAd,4BACA,wBAAQA,MAAM,eAAd,4BACA,2BAAUU,MAAM,eAAhB,UACI,wBAAQV,MAAM,eAAd,4BACA,wBAAQA,MAAM,eAAd,qCAIZ,uBAAMhD,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,+IACA,6LACA,2MACA,uRAGA,iFACA,mCAAK,wBAAQ6C,KAAK,SAAb,8BAAL,OACA,+EACA,mCAAK,uBAAOA,KAAK,SAASG,MAAM,iBAAhC,UAEJ,uBAAMhD,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,kIACA,gTAWpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,0HACA,mPACA,4MACA,6GACA,0MACA,qJACA,uBAAMA,UAAU,SAAhB,UACI,0CACA,6EACA,6EACA,2CACA,6BACI,+BACI,oBAAIK,MAAO,CAAEsD,WAAY,QAAzB,gCACA,oBAAItD,MAAO,CAAEsD,WAAY,QAAzB,wCAIZ,uBAAM3D,UAAU,SAAhB,UACI,0CACA,6EACA,6EACA,2CACA,6BACI,+BACI,oBAAIK,MAAO,CAAEsD,WAAY,QAAzB,gCACA,oBAAItD,MAAO,CAAEsD,WAAY,QAAzB,wCAIZ,uBAAM3D,UAAU,SAAhB,UACI,0CACA,oBAAIA,UAAU,QAAd,uDACA,oBAAIA,UAAU,QAAd,uDACA,2CACA,+BACI,gDACA,oBAAIK,MAAO,CAAEsD,WAAY,QAAzB,6CAUxB,sBAAM3D,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,0GACA,6NACA,mMACA,uBAAMA,UAAU,SAAhB,UACI,oYAIA,0MAIJ,sFACA,uBAAMA,UAAU,SAAhB,UACI,+BACI,sDACA,kDACA,sFACA,yFACA,oFACA,kDACA,8CACA,+CACA,mFACA,2GACA,4CACA,+CACA,+CACA,gDACA,kEACA,4DACA,4DACA,gDACA,gDACA,8CACA,gDACA,mEACA,4DACA,4DACA,iDACA,gDACA,8CAGJ,wBAAOsD,OAAO,IAAd,UACI,qCACI,qBAAKZ,MAAM,OAAOrC,MAAO,CAAEuD,WAAY,SACvC,qBAAKlB,MAAM,QAAQrC,MAAO,CAAEuD,WAAY,WACxC,qBAAKlB,MAAM,QAAQrC,MAAO,CAAEuD,WAAY,aAE5C,gCACI,+BACI,oBAAIC,QAAQ,IAAZ,4BACA,oBAAIC,QAAQ,IAAZ,yDAGR,gCACI,+BACI,2CACA,qCACA,0CAGR,gCACI,+BACI,2CACA,qCACA,2DAahC,sBAAM9D,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,wDACA,gIACA,gDACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,0JACA,+CACA,uDACA,wJACA,wDACA,8DASpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iDACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,oFACD,qCADL,OAEA,2EACA,4EACA,4EACA,mHACA,kHACA,sGACA,+CAQhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oBACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCnnBzB+D,EAzDC,SAAChE,GAEb,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,yBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gDAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,kCAAI,8CAAJ,mDACA,kCAAI,+CAAJ,mDACA,kCAAI,6CAAJ,qDACA,kCAAI,4CAAJ,qDACA,kCAAI,8CAAJ,mDACA,kCAAI,+CAAJ,mDACA,kCAAI,6CAAJ,oDACA,kCAAI,4CAAJ,oDACA,kCAAI,8CAAJ,OACA,kCAAI,+CAAJ,OACA,kCAAI,6CAAJ,OACA,kCAAI,4CAAJ,OACA,kCAAI,oDAAJ,OACA,kCAAI,oDAAJ,OACA,kCAAI,qEAAJ,OACA,kCAAI,wEAAJ,OACA,kCAAI,sEAAJ,OACA,kCAAI,uEAAJ,OACA,kCAAI,0CAAJ,OACA,kCAAI,wCAAJ,OACA,kCAAI,0CAAJ,OACA,kCAAI,0CAAJ,OACA,kCAAI,+CAAJ,OACA,kCAAI,oDAAJ,iCACA,kCAAI,qDAAJ,8EACA,kCAAI,8CAAJ,mDACA,kCAAI,kCAAJ,OACA,kCAAI,kCAAJ,aAGR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,qCAA1B,OACA,kCAAI,wFAAJ,OACA,kCAAI,wFAAJ,OACA,sBAAMD,UAAU,cAGpB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,oCAA1B,OACA,sBAAMD,UAAU,sBClBzBgE,EA/BG,SAACjE,GAEf,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,yDAA1B,OAEA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,sBAAMD,UAAU,SAAhB,SACI,sBAAMA,UAAU,UAAhB,4BCikCbiE,EA5kCE,SAAClE,GAEd,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yCAAyC,mBAAGC,KAAK,sBAAYI,MAAO,CAAEC,WAAY,UAAzC,mCAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,0HADJ,IAC6C,uBACzC,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,iHACA,iHACA,8JACA,8JACA,uDACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0CAA0C,mBAAGC,KAAK,uBAAaI,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACI,0HADJ,IAC6C,uBACzC,sBAAMA,UAAU,UAAhB,mCACA,uBAAMA,UAAU,SAAhB,UACI,iHACA,iHACA,8JACA,8JACA,uDACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,4DAA6C,mBAAGC,KAAK,yCAAgBI,MAAO,CAAEC,WAAY,UAA7C,sDAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mCACA,uBAAMA,UAAU,SAAhB,UACI,8LACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kCACA,wKACA,8KACA,+KACA,0IACA,iGACA,uEACA,gFACA,2FACA,+HACA,4GACA,+HAGR,uHACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yCACA,yKACA,gJAQxB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uDAA6C,mBAAGC,KAAK,oCAAgBI,MAAO,CAAEC,WAAY,UAA7C,iDAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mCACA,8FAFJ,KAEsC,uBAClC,2MACA,yKACA,yDACA,8DAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wDAA8C,mBAAGC,KAAK,qCAAiBI,MAAO,CAAEC,WAAY,UAA9C,kDAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oCACA,8FAFJ,IAEqC,uBACjC,4MACA,uBAAMA,UAAU,SAAhB,UACI,yKACA,2DACA,oEAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wEAAoD,mBAAGC,KAAK,qDAAuBI,MAAO,CAAEC,WAAY,UAApD,kEAApD,OACA,uBAAMN,UAAU,SAAhB,UACI,0OACA,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,+LACA,mKACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wDAA8C,mBAAGC,KAAK,qCAAiBI,MAAO,CAAEC,WAAY,UAA9C,kDAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qCACA,oNACA,uBAAMA,UAAU,SAAhB,UACI,gFACA,gFACA,oIACA,sJACA,kNACA,yKACA,0HAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8CAA8C,mBAAGC,KAAK,2BAAiBI,MAAO,CAAEC,WAAY,UAA9C,wCAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uCACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iCACA,wGACA,0HACA,0HACA,0HACA,mPACA,gPAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gCACA,4HACA,2GACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+BACA,sQACA,iLACA,sIACA,0DACA,iEACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mCACA,yHACA,6DACA,gEACA,8DACA,+DACA,gEACA,yIACA,kFAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iCACA,0MACA,kEACA,mEACA,sEAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gCACA,wFACA,wGACA,uEACA,iGACA,6IACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+BACA,yHACA,gEACA,iEACA,iEACA,0LAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qCACA,oSACA,uHACA,2HACA,qIAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wCAAmC,mBAAGC,KAAK,qBAAMI,MAAO,CAAEC,WAAY,UAAnC,kCAAnC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,yCAAY,MAAZ,gHACA,sCAAS,MAAT,mKACA,gGAAiB,MAAjB,iMACA,gGAAoB,MAApB,wMACA,yEAAc,MAAd,iIACA,iHAAqE,MAArE,6GACA,+CAAkB,MAAlB,mEACA,gJAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8DAAoD,mBAAGC,KAAK,2CAAuBI,MAAO,CAAEC,WAAY,UAApD,wDAApD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2CACA,uBAAMA,UAAU,SAAhB,UACI,6KADJ,IACkE,uBAC9D,wNAFJ,IAE2D,uBACvD,yNACA,6DACA,wDACA,0DACA,6DACA,gEACA,2DACA,0DACA,2DACA,mDACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2DAA4C,mBAAGC,KAAK,wCAAeI,MAAO,CAAEC,WAAY,UAA5C,qDAA5C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wDAA8C,mBAAGC,KAAK,qCAAiBI,MAAO,CAAEC,WAAY,UAA9C,kDAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,iHACA,+HACA,6MACA,mLACA,wHACA,2HACA,yHACA,0HACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wEAA0C,mBAAGC,KAAK,qDAAaI,MAAO,CAAEC,WAAY,UAA1C,kEAA1C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qEAAsD,mBAAGC,KAAK,kDAAyBI,MAAO,CAAEC,WAAY,UAAtD,+DAAtD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,uBAAMA,UAAU,SAAhB,UACI,gIACA,sHACA,4GACA,gHACA,6GACA,iMACA,8LAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qEACI,mBAAGC,KAAK,mDAAqBI,MAAO,CAAEC,WAAY,UAAlD,gEADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,6UAEA,6DACA,qDACA,oDACA,oJAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCACI,mBAAGC,KAAK,qBAAWI,MAAO,CAAEC,WAAY,UAAxC,kCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iCACA,uBAAMA,UAAU,SAAhB,UACI,0HACA,kHACA,mGACA,oCACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mDACI,mBAAGC,KAAK,iCAAkBI,MAAO,CAAEC,WAAY,UAA/C,8CADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6BACI,mBAAGC,KAAK,WAAWI,MAAO,CAAEC,WAAY,UAAxC,wBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,8IACA,uBAAMA,UAAU,SAAhB,UACI,2DAA8B,sBAA9B,OACA,gEAAmC,sBAAnC,OACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gCACI,mBAAGC,KAAK,cAAcI,MAAO,CAAEC,WAAY,UAA3C,2BADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCACA,wTAEA,uBAAMA,UAAU,SAAhB,UACI,wFACA,+FAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yEACI,mBAAGC,KAAK,uDAAyBI,MAAO,CAAEC,WAAY,UAAtD,oEADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,6HACA,uBAAMA,UAAU,SAAhB,UACI,uCAAU,0BAAV,OACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wFACI,mBAAGC,KAAK,sEAAyBI,MAAO,CAAEC,WAAY,UAAtD,mFADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACI,gGACA,iFAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qEACI,mBAAGC,KAAK,mDAAqBI,MAAO,CAAEC,WAAY,UAAlD,gEADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,yMACA,uBAAMA,UAAU,SAAhB,UACI,kFACA,gFACA,0EACA,6DACA,8DACA,2EACA,6DACA,0DACA,yDACA,4GACA,kIACA,yEACA,gEACA,0KACA,oCACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yDACI,mBAAGC,KAAK,uCAAmBI,MAAO,CAAEC,WAAY,UAAhD,oDADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,8FACA,qDACA,sDACA,uDACA,wDACA,4DACA,sDACA,oDACA,6DACA,oDACA,sEAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qFACI,mBAAGC,KAAK,mEAA2BI,MAAO,CAAEC,WAAY,UAAxD,gFADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2CACA,uBAAMA,UAAU,SAAhB,UACI,0FACA,qFACA,oCACA,oCACA,oCACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sEACI,mBAAGC,KAAK,oDAAsBI,MAAO,CAAEC,WAAY,UAAnD,iEADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,wJACA,yDACA,kKACA,4LACA,6QACA,6QACA,2MAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iFACI,mBAAGC,KAAK,+DAAuBI,MAAO,CAAEC,WAAY,UAApD,4EADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uCACA,uBAAMA,UAAU,SAAhB,UACI,kGACA,wDACA,iGACA,2IAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kGACI,mBAAGC,KAAK,gFAAyBI,MAAO,CAAEC,WAAY,UAAtD,6FADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,sDACA,sGACA,8CACA,yDAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oFACI,mBAAGC,KAAK,kEAAqBI,MAAO,CAAEC,WAAY,UAAlD,+EADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oCACA,uBAAMA,UAAU,SAAhB,UACI,uKACA,oDACA,mDACA,0DACA,kDACA,qDACA,kDACA,oDACA,wDAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yFACI,mBAAGC,KAAK,uEAA0BI,MAAO,CAAEC,WAAY,UAAvD,oFADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sCACA,uBAAMA,UAAU,SAAhB,UACI,kHACA,4EACA,kGACA,kGACA,kGACA,mGACA,qHACA,sFACA,sFACA,sFACA,wGACA,uHACA,8FACA,8FACA,8FACA,qEACA,uLACA,uLACA,4DAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6EACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mOACA,mCAAK,iJAEL,mCAAK,oDAAL,yEACA,mCAAK,wDAAL,oFACA,mCAAK,wDAAL,0DACA,mCAAK,+DAAL,iDACI,qGACA,0LACA,wGACA,yGACA,yJACA,uCAEJ,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gEACI,mBAAGC,KAAK,8CAAWI,MAAO,CAAEC,WAAY,UAAxC,2DADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,uDAAL,6FACI,4KACA,qJAEJ,mCAAK,qDAAL,iFACI,mHACA,0FACA,qJACA,kKAEJ,mCAAK,6DAAL,0EACI,2EACA,0EAEJ,mCAAK,sDAAL,gFACI,uCAEJ,mCAAK,8CAAL,uGACI,+JACA,yFAAyB,IACrB,wCAAW,IACP,sEAEJ,mCAAM,IAAN,OACA,uCAAU,IACN,sEAEJ,uCAAU,IACN,sEAEJ,mCAAM,IAAN,OACA,sCAAS,IACL,sEAEJ,mCAAM,IAAN,UAEJ,mCAAM,IAAN,qBAOpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6GACI,mBAAGC,KAAK,2FAA+BI,MAAO,CAAEC,WAAY,UAA5D,wGADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,2FACI,mEAEJ,qIACI,8DAEJ,oIACI,wIAEJ,8EACI,+FAEJ,6EACI,+FAEJ,+CAMhB,sBAAMA,UAAU,SAAhB,sDACA,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0DACI,mBAAGC,KAAK,wCAAeI,MAAO,CAAEC,WAAY,UAA5C,qDADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,kDACA,kOAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gIACI,mBAAGC,KAAK,YAAYI,MAAO,CAAEC,WAAY,UAAzC,yBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,kLACA,yIACA,+UAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+EACI,mBAAGC,KAAK,6DAA0BI,MAAO,CAAEC,WAAY,UAAvD,0EADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,8BACA,uBAAMA,UAAU,SAAhB,UACI,uIACA,wKACA,wJACA,gLAKhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0DACI,mBAAGC,KAAK,wCAAwCI,MAAO,CAAEC,WAAY,UAArE,qDADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sCACA,sBAAMA,UAAU,SAAhB,SACI,+JAEJ,sBAAMA,UAAU,UAAhB,sCACA,sBAAMA,UAAU,SAAhB,SACI,4IAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6EACI,mBAAGC,KAAK,2DAA6BI,MAAO,CAAEC,WAAY,UAA1D,wEADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,0CACA,uBAAMA,UAAU,SAAhB,UACI,mNACA,8DACA,8DACA,8DACA,8DACA,8DACA,4DACA,8DACA,oEACA,mEACA,mEACA,kEACA,kEACA,wEAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oFACI,mBAAGC,KAAK,kEAA+BI,MAAO,CAAEC,WAAY,UAA5D,+EADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,qHACA,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,8DACA,kEACA,sIACA,uIACA,sIACA,iEACA,iEACA,yIACA,mIACA,wGACA,8EAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iIACI,mBAAGC,KAAK,+GAAoCI,MAAO,CAAEC,WAAY,UAAjE,4HADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,4HACA,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,6DACA,8DACA,kIACA,mIACA,wIACA,kLACA,6DACA,6DACA,qIACA,+HACA,oGACA,2LAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kGACI,mBAAGC,KAAK,iGAAgCI,MAAO,CAAEC,WAAY,UAA7D,oHADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uCACA,uBAAMA,UAAU,SAAhB,UACI,2KADJ,IAC2D,uBACvD,yDACA,uDACA,qDACA,4DACA,yDACA,6DACA,0DACA,0DACA,gEACA,+DACA,yDACA,6DACA,+DACA,gDAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qEACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,sCADJ,IACqB,uBACjB,0JACA,mKACA,qHACA,wHACA,sHACA,gDAKhB,sBAAMA,UAAU,SAAhB,4DAEA,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDACI,mBAAGC,KAAK,mCAAeI,MAAO,CAAEC,WAAY,UAA5C,gDADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,yEACA,4GACA,yEACA,wEACA,6EACA,wEACA,8DACA,qEACA,yDACA,0DACA,kEAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2CACI,mBAAGC,KAAK,yBAAeI,MAAO,CAAEC,WAAY,UAA5C,sCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qCACA,uBAAMA,UAAU,SAAhB,UACI,kKACA,8GACA,6KACA,sCAAS,kDAAT,wJACA,8MACA,gKACA,oCACA,oCAAM,mBAAGA,UAAU,UAAb,oJACF,mCAAM,YAAN,OACA,mCAAM,iCAAN,iBAA4C,+BAA5C,OACA,mCAAM,MAAN,OACA,mCAAM,aAAN,OACA,mCAAM,4CAAN,iBAAuD,6CAAvD,OACA,mCAAM,MAAN,UAEJ,+CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oDACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,oLACA,mCAAM,kEAAN,2FAGJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,6DACD,+MACA,mOACA,2KACA,mMACA,sPACA,uCAEJ,mCAAK,6DACD,mEACA,uCAEJ,mCAAK,mEACD,iHAA4C,KAA5C,OACA,oLAEJ,mCAAK,6DACD,uEAA0C,KAA1C,6EACA,uEAA0C,KAA1C,uEACA,wFAA2D,KAA3D,8CAEJ,+CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yEACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,sEACA,mCAAM,8CAAN,OACA,qEACA,mCAAM,wDAAN,OACA,yDACA,mCAAM,wCAAN,OACA,qEACA,mCAAM,yCAAN,OACA,mDACA,mCAAM,sCAAN,UAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAQhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iDACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACI,8DACA,4EACA,sDACA,yDACA,+CACA,wIAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAQhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oBACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAQhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kCAAkC,mBAAGC,KAAK,eAAKI,MAAO,CAAEC,WAAY,UAAlC,4BAAlC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,uGACA,2EACA,4GACA,mHACA,wEACA,+EACA,0MACA,6HACA,uHACA,yDCriCzBkE,G,MAxBa,SAACnE,GAEzB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UAEI,qCAFJ,IAGI,qCAHJ,KAII,qCAJJ,KAKI,qCALJ,KAMI,qBAAKA,UAAU,QAAf,SACI,sDAAS,uBAAT,IAAgB,oDAAhB,YAGR,qBAAKA,UAAU,MAAf,4BCWLmE,G,MA7BS,SAACpE,GAYrB,OAVAqE,qBAAU,WACN,IAAMC,EAASC,SAASC,cAAc,UAItC,OAHAF,EAAO9C,IAAM,uBACb8C,EAAOG,OAAQ,EACfF,SAASG,KAAKC,YAAYL,GACnB,WACHC,SAASG,KAAKE,YAAYN,MAE/B,CAAC,yBAGA,mCACI,qBAAKrE,UAAU,eAAf,SACI,yBAASA,UAAU,gBAAgB4E,YAAa,SAACC,GAC7C,IAAMC,EAAMR,SAASS,cAAc,QACnCD,EAAIzE,MAAM2E,KAAQH,EAAEI,QAAW,KAC/BH,EAAIzE,MAAM6E,IAAML,EAAEM,QAAU,MAHhC,SAKI,qBAAKnF,UAAU,MAAf,yBC4JLoF,EAhLS,SAACrF,GAErB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6CAA6C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,4DACA,uOACA,0NACA,iNACA,iQACA,sEACA,2EACA,4DAAgB,kCAAhB,OACA,6TACA,yRACA,6JACA,uHACA,sIACA,uIACA,gIACA,4GACA,gHACA,kFACA,oEAAc,0BAAd,QACA,wEACA,kIACA,wEAAkB,KAAlB,QAA6B,KAA7B,gBACA,oEAAc,gBAAd,QACA,6LACA,yLACA,8KACA,uQACA,iMACA,oCAAO,uBAAP,2HACA,gFACA,qLACA,4EACA,wHACA,+MACA,mGACA,iGACA,sSACA,wRACA,2GACA,kFACA,8HACA,uHACA,gHACA,sHACA,gRACA,oHACA,6HACA,4RACA,qHAAqD,MAArD,+LACA,uHAA8B,OAA9B,qRACA,iGAAiC,MAAjC,IAAyC,OAAzC,iRAEA,oFACA,uNACA,yJAAuC,2CAAvC,2DACA,wNACA,gOACA,sHACA,oIACA,yCAAY,kGAAZ,+KACA,uPACA,uMACA,kHAAwC,sCAAxC,2FACA,qBAAIA,UAAU,SAAd,cAAwB,sBAAMA,UAAU,UAAhB,gCACpB,2EACA,0EACA,4GACA,sGACA,qGACA,kEAEJ,qBAAIA,UAAU,SAAd,cAAwB,sBAAMA,UAAU,UAAhB,mCACpB,4EACA,kLACA,kLACA,2NACA,4KACA,kMACA,oMACA,6KACA,kHACA,+HACA,kIAEJ,qBAAIA,UAAU,SAAd,cAAwB,sBAAMA,UAAU,UAAhB,iCACpB,mGACA,8EACA,gFACA,gIACA,0EACA,uEACA,sEACA,uEACA,yEACA,4EAEJ,qBAAIA,UAAU,SAAd,cAAwB,sBAAMA,UAAU,UAAhB,mCACpB,+JACA,6HACA,mKAEJ,qBAAIA,UAAU,SAAd,cAAwB,sBAAMA,UAAU,UAAhB,qCACpB,0CACA,+CACA,8CACA,iDAEJ,qBAAIA,UAAU,SAAd,cAAwB,sBAAMA,UAAU,UAAhB,qCACpB,qJACA,mHACA,2IACA,wHACA,iKACA,uCAEJ,qBAAIA,UAAU,SAAd,cAAwB,sBAAMA,UAAU,UAAhB,gBACpB,oCACA,uCAEJ,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2EAA6C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,6EACA,iHACA,mCAAM,6CAAN,OACA,iJACA,8MACA,6TACA,kQACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCo1BrBqF,EAx/BI,SAACtF,GAElB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iDAA1B,OAEA,sBAAMD,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,oDAA0C,mBAAGC,KAAK,iCAAaI,MAAO,CAAEC,WAAY,UAA1C,+CAA1C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,+BACE,+JACA,wDACA,2MACA,qQACA,wIACA,4EACA,gIAIJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,kEAAyC,mBAAGC,KAAK,+CAAYI,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,+BACE,qHACA,qLACA,+GACA,2JACA,iGACA,6GACA,mCAAM,IAAK,IAAX,4GACA,oLACA,oMAIJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0DACE,mBAAGC,KAAK,wCAAUI,MAAO,CAAEC,WAAY,UAAvC,qDADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,8EACA,sBAAMA,UAAU,SAAhB,SACE,+BACE,0KACA,gLACA,kIACA,mLACA,yKACA,oIACA,oBAAIA,UAAU,QAAd,4GACA,2JACA,qBAAIA,UAAU,QAAd,6BAAsC,sEAAtC,OACA,qBAAIA,UAAU,QAAd,yBAAkC,0HAAlC,OACA,qBAAIA,UAAU,QAAd,wDAA6C,iDAA7C,OACA,qBAAIA,UAAU,QAAd,yCAAkD,oGAAlD,OACA,qIAIJ,sBAAMA,UAAU,UAAhB,kEACA,uBAAMA,UAAU,SAAhB,UACE,oJAEE,uBAAMA,UAAU,SAAhB,UACE,2NACA,kJACA,mOACA,mIACA,yIAGJ,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8EAA2C,mBAAGC,KAAK,2DAAcI,MAAO,CAAEC,WAAY,UAA3C,wEAA3C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qCAA+C,mBAAGC,KAAK,kBAAkBI,MAAO,CAAEC,WAAY,UAA/C,gCAA/C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,6JACA,0JACA,2oBAEA,kMACA,yPACA,iSAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,wCAAwC,mBAAGC,KAAK,qBAAWI,MAAO,CAAEC,WAAY,UAAxC,kCAAxC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+CAA0C,mBAAGC,KAAK,2BAAYI,MAAO,CAAEC,WAAY,UAAzC,wCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAAyC,mBAAGC,KAAK,2BAAYI,MAAO,CAAEC,WAAY,UAAzC,wCAAzC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,iCAA2C,6JACzC,mBAAGC,KAAK,cAAcI,MAAO,CAAEC,WAAY,UAA3C,2BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0CACE,mBAAGC,KAAK,kBAAkBI,MAAO,CAAEC,WAAY,UAA/C,+BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,oFACA,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,SAAd,kJACA,oBAAIA,UAAU,SAAd,gBACA,oBAAIA,UAAU,QAAd,6DACA,oBAAIA,UAAU,QAAd,qFACA,oBAAIA,UAAU,QAAd,oBAGF,sBAAMA,UAAU,UAAhB,wEACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,4CAAN,OADF,IAC2D,uBACzD,qEAAwC,IACtC,4CAAe,IACb,0CACE,mCAAM,gBAAN,UAEF,yCAEF,mCAAM,IAAN,UAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,iDAA2D,mKACzD,mBAAGC,KAAK,8BAA8BI,MAAO,CAAEC,WAAY,UAA3D,2CADF,OAEA,uBAAMN,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sCAGF,sBAAMA,UAAU,UAAhB,wEAPF,IAOiD,uBAC/C,sBAAMA,UAAU,UAAhB,sBACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,4CAAN,OADF,IAC2D,uBACzD,qEAAwC,IACtC,4CAAe,IACb,0CACE,mCAAM,gBAAN,UAEF,yCAEF,mCAAM,IAAN,UAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,uDACE,mBAAGC,KAAK,cAAcI,MAAO,CAAEC,WAAY,UAA3C,2BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,wEACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,0CACE,mCAAM,gBAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CACE,mBAAGC,KAAK,iBAAiBI,MAAO,CAAEC,WAAY,UAA9C,8BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,4JACA,qFAA6C,0JAA7C,QACA,oLACA,oLACE,gFACA,gFACA,uHACA,0DAAc,uDAAd,QACA,0DAAc,uDAAd,WAEF,wCAGF,sBAAMA,UAAU,UAAhB,+FACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,yEACA,0CACE,mCAAM,MACJ,mCAAM,iFAAN,OACA,mCAAM,+BAAN,UAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,6GACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,mCAAM,0CACJ,+CACA,kDAEF,mCAAM,QAAN,OALF,IAKuB,uBACrB,mCAAM,qCAAN,IAA4C,sGAA5C,OANF,IAMwF,uBACtF,mCAAM,8BACJ,mCAAM,0CAEN,mCAAM,eACJ,8CACA,oDAEF,mCAAM,GAAN,OACA,mCAAM,MAAN,UAEF,mCAAM,OAAN,OAjBF,IAiBsB,uBACpB,mCAAM,4BACJ,mCAAM,eACJ,+CACA,kDAEF,mCAAM,KAAN,UAEF,mCAAM,OAAN,OAzBF,IAyBsB,uBACpB,0CACE,mCAAM,MACJ,mCAAM,gEAAN,OACA,mCAAM,gEAAN,OACA,mCAAM,6DAAN,OACA,mCAAM,sCAAN,UAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0CACE,mBAAGC,KAAK,eAAeI,MAAO,CAAEC,WAAY,UAA5C,4BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,iGACA,qHACA,0HACA,iHACA,oIAGF,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,0CAAN,OADF,IACyD,uBACvD,kDAAqB,OACnB,8DACA,0CACE,mCAAM,MACJ,mCAAM,6BAAN,OACA,mCAAM,gFAAN,OACA,mCAAM,qFAAN,UAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,oEAQV,sBAAMtF,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4CACE,mBAAGC,KAAK,kBAAkBI,MAAO,CAAEC,WAAY,UAA/C,+BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,0CACE,mCAAM,MACJ,sCAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAuD,sGACrD,mBAAGC,KAAK,kBAAkBI,MAAO,CAAEC,WAAY,UAA/C,+BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,uHACA,yYAEA,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,uDAAN,OADF,IACsE,uBACpE,mCAAM,qCAAN,OACA,mCAAM,oBACJ,mCAAM,kCAAN,OACA,mCAAM,kBAAN,OACA,mCAAM,wCAAN,OACA,mCAAM,OAAN,UAEF,mCAAM,YAAN,OACA,kDAAqB,OACnB,oCACA,0CACE,mCAAM,MACJ,mCAAM,kCAAN,OACA,mCAAM,wEAAN,UAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,iDACE,mBAAGC,KAAK,eAAeI,MAAO,CAAEC,WAAY,UAA5C,4BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,gEACA,gEAGF,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,iDAAoB,gBAApB,qBACA,0CAAa,yCAAb,gCACA,oEACA,sEAJF,IAIgD,uBAC9C,kDAAqB,OACnB,0CACE,mCAAM,yBACJ,mCAAM,oBACJ,mCAAM,oCAAN,OACA,mCAAM,0CAAN,OACA,mCAAM,aACJ,mCAAM,oDAAN,OACA,mCAAM,oDAAN,UAEF,mCAAM,cAAN,UAEF,mCAAM,qBAAN,UAEF,mCAAM,eAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,oEAQV,sBAAMtF,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,gCACE,mBAAGC,KAAK,cAAcI,MAAO,CAAEC,WAAY,UAA3C,2BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0CACE,mBAAGC,KAAK,cAAcI,MAAO,CAAEC,WAAY,UAA3C,2BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,2DACA,uGAGF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,2PACA,mKACA,oGACE,iLACE,qJACA,uCAEF,4FACA,4EACE,kGACA,mCAAM,gKAAN,OACA,iLACA,kMACA,iLACA,yKACA,mCAAM,kFAAN,UAEF,mDAEF,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,0CACE,mCAAM,MACJ,sCAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,gCACE,mBAAGC,KAAK,cAAcI,MAAO,CAAEC,WAAY,UAA3C,2BADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,qBACA,uBAAMA,UAAU,SAAhB,UACE,2CACA,iDACA,iDACA,0CACA,6CACA,+CACA,8CACA,+CACA,8CACA,+CACA,0CACA,+CACA,gDACA,gDACA,+CACA,8CACA,+CACA,6CACA,uCAGF,sBAAMA,UAAU,UAAhB,uBACA,sBAAMA,UAAU,SAAhB,SACE,sCAGF,sBAAMA,UAAU,UAAhB,sBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+BAAyC,mBAAGC,KAAK,YAAYI,MAAO,CAAEC,WAAY,UAAzC,0BAAzC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OACA,mCAAM,0BAAN,QAFF,IAE0C,uBACxC,kDAAqB,OACnB,0CACE,mCAAM,MACJ,mCAAM,oCAAN,UAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,6BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,mCAAM,uCACJ,iDACA,oDAEF,mCAAM,OAAN,OACA,0CACE,mCAAM,MACJ,mCAAM,qEAAN,UAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,sDACE,mBAAGC,KAAK,oBAAoBI,MAAO,CAAEC,WAAY,UAAjD,iCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,8CACA,sBAAMA,UAAU,SAAhB,SACE,6DAGF,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACE,iOACA,6CACA,+EAGF,sBAAMA,UAAU,UAAhB,8CACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OACA,mCAAM,4CAAN,OACA,mCAAM,2DAAN,OAHF,IAG4C,uBAC1C,uDAA0B,OACxB,0CACE,mCAAM,MACJ,oCAAO,2DAAP,UAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OAbF,IAamB,uBACjB,wFACE,gDACA,iDACA,0CAAa,wCAAb,OACA,mMAJF,IAI6D,uBAC3D,mCAAM,qCACJ,iDACA,yDAEF,mCAAM,SAAN,UAEF,sCACA,qGACE,gDACA,oDAEF,sCACA,6DACE,gDACA,oDAEF,sCACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,oBACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,0CACE,mCAAM,MACJ,sCAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,oBACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,0CACE,mCAAM,MACJ,sCAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,oBACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,mCAAM,+BAAN,OADF,IAC8C,uBAC5C,kDAAqB,OACnB,0CACE,mCAAM,MACJ,sCAEF,mCAAM,OAAN,UAEF,yCAEF,mCAAM,IAAN,OACA,4DAIJ,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sDCr7BHuF,EArDS,SAACxF,GAErB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+HAAoD,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAApD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,6CACA,uBAAMA,UAAU,SAAhB,UACI,6EACA,2DACA,mCAAM,kEAAN,OACA,wCAGJ,sBAAMA,UAAU,UAAhB,mCACA,uFACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,yCAAN,OACA,2DACA,mCAAM,kCAAN,OACA,wCAAa,WAAb,OACA,wCAAa,iEAAb,OACA,wCAAa,YAAb,OACA,wCAAa,SAAb,OACA,wCACA,yCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,qDCkBrBwF,EA3DK,SAACzF,GAEjB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0CACI,mBAAGC,KAAK,wBAAwBI,MAAO,CAAEC,WAAY,UAArD,qCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,wHAGJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,8KACA,uCAGJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,wGACA,kGACA,2FACA,mGACA,2GACA,4GACA,oFACA,uGACA,uFACA,sFAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCoIrByF,EAnLO,SAAC1F,GAEnB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uEAA8C,mBAAGC,KAAK,oDAAiBI,MAAO,CAAEC,WAAY,UAA9C,iEAA9C,OACA,uBAAMN,UAAU,SAAhB,UAII,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,qMACA,2UAEA,uCAGJ,sBAAMA,UAAU,UAAhB,qBACA,uBAAMA,UAAU,SAAhB,UACI,uJACA,iKACA,gHACA,uCAGJ,sBAAMA,UAAU,UAAhB,mBACA,uBAAMA,UAAU,SAAhB,UACI,4PACA,oCACA,uCAGJ,sBAAMA,UAAU,UAAhB,sCACA,uBAAMA,UAAU,SAAhB,UACI,uLACA,iLACA,iSACA,kSACA,2MACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+BAAyC,mBAAGC,KAAK,YAAYI,MAAO,CAAEC,WAAY,UAAzC,yBAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2LACA,uBAAMA,UAAU,SAAhB,UACI,8aAGA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oFAA4C,mBAAGC,KAAK,iEAAeI,MAAO,CAAEC,WAAY,UAA5C,8EAA5C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kIACA,sBAAMA,UAAU,SAAhB,SACI,+BACI,+JACA,uJACA,wJACA,kSACA,qIACA,4NACA,+JACA,+LACA,qbAEA,sBAAMA,UAAU,SAAhB,SACI,+BACI,sBAAMA,UAAU,UAAhB,wEACA,6FACA,yGACA,gHACA,uHACA,+IAGR,sBAAMA,UAAU,SAAhB,SACI,+BACI,sBAAMA,UAAU,UAAhB,oFACA,oHACA,uDACA,sBAAMA,UAAU,SAAhB,SACI,yQAIJ,wDACA,sBAAMA,UAAU,SAAhB,SACI,4QAKJ,4VAEA,ubAU5B,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yDAA+C,mBAAGC,KAAK,sCAAkBI,MAAO,CAAEC,WAAY,UAA/C,mDAA/C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sEACA,uBAAMA,UAAU,SAAhB,UACI,+BACI,2LACA,wJACA,6KACA,kGACA,wKALJ,IAKmD,uBAC/C,wFANJ,IAMoC,uBAChC,4HAPJ,IAO0C,uBACtC,oLACA,wQACA,wKACA,sQACA,gNACA,gRACA,0EACA,wEACA,kGACA,uHACA,oCACA,uCAEJ,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC9CrB0F,EAzHa,SAAC3F,GAEzB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2CAA2C,mBAAGC,KAAK,wBAAcI,MAAO,CAAEC,WAAY,UAA3C,qCAA3C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0CAA0C,mBAAGC,KAAK,uBAAaI,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0CAA0C,mBAAGC,KAAK,uBAAaI,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0CAA0C,mBAAGC,KAAK,uBAAaI,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8CAA8C,mBAAGC,KAAK,2BAAiBI,MAAO,CAAEC,WAAY,UAA9C,wCAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yCAAyC,mBAAGC,KAAK,sBAAYI,MAAO,CAAEC,WAAY,UAAzC,mCAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8CAA8C,mBAAGC,KAAK,2BAAiBI,MAAO,CAAEC,WAAY,UAA9C,wCAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2CAA2C,mBAAGC,KAAK,wBAAcI,MAAO,CAAEC,WAAY,UAA3C,qCAA3C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6CAA6C,mBAAGC,KAAK,0BAAgBI,MAAO,CAAEC,WAAY,UAA7C,uCAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC9CrB2F,GA/DO,SAAC5F,GAEnB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iEACI,mBAAGC,KAAK,+CAAYI,MAAO,CAAEC,WAAY,UAAzC,4DADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,0FACD,uDAEJ,mCAAK,2GACD,uCAEJ,mCAAK,oGACD,yCACA,8FACA,uCAEJ,mCAAK,oJACD,sCAEJ,mCAAK,iGACD,sCAEJ,mCAAK,oCACD,yCAIR,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC6tBrB4F,GAhxBO,SAAC7F,GAEnB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,cAAR,uCAA1B,OACA,+BACI,4HAEA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oDAAR,iEAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uCAEA,iPACA,8SACA,6JAAsC,IAAtC,sKACA,iKAAqC,IAArC,6IACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCAEA,6HACA,oCACA,oCACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oDAAR,iEAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,sDACA,4DACA,sBAAMA,UAAU,UAAhB,sDACA,6EACA,sBAAMA,UAAU,UAAhB,gEACA,6DACA,sBAAMA,UAAU,UAAhB,eACA,2CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kCAAR,+CAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,kEACA,iFACA,sBAAMA,UAAU,UAAhB,gBACA,qCACA,sBAAMA,UAAU,UAAhB,eACA,2CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,yCAAR,uDAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,yCACA,iGACA,sBAAMA,UAAU,UAAhB,sDACA,sHACA,sBAAMA,UAAU,UAAhB,2DACA,8CACA,sBAAMA,UAAU,UAAhB,sDACA,oHACA,sBAAMA,UAAU,UAAhB,qHACA,0DACA,sBAAMA,UAAU,UAAhB,yCACA,oEACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,QAAR,sBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,qBACA,qEACA,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,6DACA,2CACA,4CACA,oEACA,4FACA,qFACA,uCACA,0EACA,gHACA,gHACA,uGACA,kFACA,iJACA,4GACA,4EACA,kFACA,6CAOZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,6BAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,yCACA,2EACA,oGACA,6EACA,sBAAMA,UAAU,UAAhB,yCACA,oCACA,sBAAMA,UAAU,UAAhB,yCACA,8EACA,gIACA,qMACA,uLACA,sBAAMA,UAAU,UAAhB,yCACA,oJACA,6FACA,kLACA,sBAAMA,UAAU,UAAhB,yCACA,oJACA,kLACA,sBAAMA,UAAU,UAAhB,yCACA,0FACA,mHACA,sBAAMA,UAAU,UAAhB,yCACA,oLACA,gNACA,6KACA,+FAGR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,uBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,sDACA,8EACA,sBAAMA,UAAU,UAAhB,0EACA,mIACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,+CACA,uHACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,8CAEA,kKACA,0HACA,gFACA,gFACA,4FACA,uJACA,0GACA,oCACA,oCAEA,sBAAMA,UAAU,UAAhB,4BAEA,wEACA,qEACA,4CACA,mDACA,yDACA,wJACA,8GAGJ,sBAAMA,UAAU,UAAhB,qDACA,yIACA,sBAAMA,UAAU,UAAhB,6GACA,qGACA,sBAAMA,UAAU,UAAhB,mKACA,kGACA,sBAAMA,UAAU,UAAhB,gBACA,2CAIR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,QAAR,qBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,oHACA,8JACA,sBAAMA,UAAU,UAAhB,4DACA,8GACA,sBAAMA,UAAU,UAAhB,4DACA,uHACA,sBAAMA,UAAU,UAAhB,4DACA,6HACA,sBAAMA,UAAU,UAAhB,eACA,0CAMR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,OAAR,oBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,+CACA,uOACA,sBAAMA,UAAU,UAAhB,+GACA,wGAOR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,WAAR,wBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,qFACA,mFAOR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,+CACA,kOACA,+KACA,yLACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,iKACA,sGACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,uBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,wGACA,iGACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,uBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,qFACA,kHACA,sBAAMA,UAAU,UAAhB,+EACA,2EACA,sBAAMA,UAAU,UAAhB,+CACA,2EACA,sBAAMA,UAAU,UAAhB,8LACA,8GACA,2JACA,sBAAMA,UAAU,UAAhB,eACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oCAAR,iDAA1B,OAEA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yBACA,oCACA,oCACA,mCAAK,4RAAL,OACA,+TACA,wJACA,0JAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oBACA,kRACA,+JACA,8JACA,wJACA,+JACA,0JACA,0JACA,6LACA,4KACA,4JACA,0JACA,yMACA,kYAIJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uBACA,iGACA,2FACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kBACA,0JACA,iOACA,6FACA,6LACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wBACA,kGACA,qGAIR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,+BAAR,4CAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mCACA,iEACA,qEACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wBACA,mCAAK,gIAAL,QACA,oJACA,oKAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wBACA,mCAAK,oIAAL,OACA,qLACA,uCAGJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sBACA,gHACA,gLACA,oCACA,0CAIR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kCAAR,gDAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sDACA,mCAAK,kIAAL,OACA,kJACA,gHACA,sJACA,yJACA,yKACA,sBAAMA,UAAU,UAAhB,qDACA,iIAEA,sBAAMA,UAAU,UAAhB,eACA,0CAIR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,2BAAR,wCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,2CACA,mEACA,gKACA,sBAAMA,UAAU,UAAhB,4BACA,kGACA,yLACA,uKACA,8GACA,sBAAMA,UAAU,UAAhB,gBACA,0CAMR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,WAAR,yBAA1B,OAEA,+BAAI,2GAAJ,UACA,+BAAI,8HAAJ,SACA,+BAAI,mOAAJ,UAEA,uBAAMD,UAAU,SAAhB,UACI,0IAEA,sBAAMA,UAAU,UAAhB,+CACA,6EACA,sBAAMA,UAAU,UAAhB,kEACA,gFACA,sBAAMA,UAAU,UAAhB,mEACA,kFACA,sBAAMA,UAAU,UAAhB,kEACA,8EACA,sBAAMA,UAAU,UAAhB,kEACA,yFACA,sBAAMA,UAAU,UAAhB,8CACA,oFACA,sBAAMA,UAAU,UAAhB,2HACA,0VAEA,sBAAMA,UAAU,UAAhB,wGACA,oPAGJ,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,+CACA,2IACA,sBAAMA,UAAU,UAAhB,+CACA,0EACA,sBAAMA,UAAU,UAAhB,4DACA,sGACA,yHACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,uCAGJ,sBAAMA,UAAU,SAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uBACA,4MACA,sBAAMA,UAAU,UAAhB,uBACA,2SAEA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,4BAAR,yCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sDACA,sEACA,oEACA,0FACA,sBAAMA,UAAU,UAAhB,qFACA,kEACA,qEACA,oFACA,sBAAMA,UAAU,UAAhB,eACA,uCAEJ,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sDACA,0IACA,sBAAMA,UAAU,UAAhB,sDACA,oGACA,4EACA,qFACA,sBAAMA,UAAU,UAAhB,gDACA,yGACA,sBAAMA,UAAU,UAAhB,gDACA,6GACA,sBAAMA,UAAU,UAAhB,eACA,0CAMR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,OAAR,qBAA1B,OACA,yKACA,0HACA,wSACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,qCACA,sBAAMA,UAAU,UAAhB,4HACA,gLACA,0LACA,2NACA,0KACA,sBAAMA,UAAU,UAAhB,6CACA,iLACA,4NACA,8NACA,kJACA,6OACA,sBAAMA,UAAU,UAAhB,oHACA,uOACA,sBAAMA,UAAU,UAAhB,qDACA,mJACA,sBAAMA,UAAU,UAAhB,oDACA,6LACA,+LACA,sBAAMA,UAAU,SAAhB,0BACA,sBAAMA,UAAU,UAAhB,wGACA,mCAAK,yIAAL,OACA,mCAAK,wOAAL,OACA,mCAAK,sLAAL,OACA,mCAAK,yQAAL,OACA,+TACA,qNACA,kMACA,sBAAMA,UAAU,SAAhB,0BACA,sBAAMA,UAAU,UAAhB,mDACA,mCAAK,2NAAL,OACA,0IACA,sBAAMA,UAAU,SAAhB,yBACA,sBAAMA,UAAU,UAAhB,kDACA,mCAAK,sKAAL,QACA,mCAAK,0PAAL,QACA,8JACA,sBAAMA,UAAU,UAAhB,gBACA,oCAGA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qBAAR,kCAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,uEACA,sIACA,kLACA,oCACA,sBAAMA,UAAU,UAAhB,yEACA,sKACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,0BAA1B,OACA,iHACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2DACA,qDACA,sBAAMA,UAAU,UAAhB,2DACA,iEACA,sBAAMA,UAAU,UAAhB,iEACA,0GACA,yFACA,mGACA,mCAAK,qGAAL,OACA,mGACA,mCAAK,4HAAL,OACA,sBAAMA,UAAU,UAAhB,8EACA,8HACA,gLACA,sBAAMA,UAAU,UAAhB,6IACA,qGACA,sBAAMA,UAAU,UAAhB,6GACA,4HACA,yKACA,sBAAMA,UAAU,UAAhB,wGACA,sHAOR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,OAAR,qBAA1B,OACA,uSACA,iPACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+CACA,gLACA,uHACA,gHACA,uGACA,+EACA,sBAAMA,UAAU,UAAhB,mCACA,yFACA,sBAAMA,UAAU,UAAhB,yEACA,wFACA,qIACA,wGACA,iKACA,sBAAMA,UAAU,UAAhB,gBACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,OAAR,qBAA1B,OACA,uPACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mCACA,6DACA,sBAAMA,UAAU,UAAhB,mCACA,0DACA,sBAAMA,UAAU,UAAhB,gDACA,iFACA,sBAAMA,UAAU,UAAhB,gDACA,iFACA,sBAAMA,UAAU,UAAhB,gDACA,uFAMR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,YAAR,yBAA1B,OACA,mCAAK,oQACL,mCAAK,qJACL,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,sDACA,mCAAK,2XAAL,QAGA,mPAGA,sBAAMA,UAAU,UAAhB,qDACA,mCAAK,kHAAL,OACA,qFACA,sBAAMA,UAAU,UAAhB,eACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,SAAR,sBAA1B,OACA,mCAAK,mBAAGC,KAAK,qCAAqCC,OAAO,SAApD,4BAAL,OACA,mCAAK,yNAAL,OACA,oBAAIH,UAAU,QAAd,iGACA,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,mCACA,iKACA,8KACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,yEAAL,OACA,qEACA,wEACA,sDACA,2CACA,yJACA,mCAAK,2EAAL,OACA,0CACA,wEACA,iDACA,wCACA,uCAEJ,4JACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,kCACA,iJACA,8CACA,2CACA,6EACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAIR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAKR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,6BAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,+DACA,oEACA,oEACA,oJACA,sBAAMA,UAAU,UAAhB,kIACA,kGACA,sBAAMA,UAAU,UAAhB,2DACA,4FACA,sBAAMA,UAAU,UAAhB,eACA,qDC5rBjB6F,GA1EM,SAAC9F,GAClB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,cAAR,6BAA1B,OAEA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,cAA2B,mBAAGC,KAAK,GAAR,iBAA3B,OACA,sBAAMD,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,cAA2B,mBAAGC,KAAK,GAAR,iBAA3B,OACA,sBAAMD,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,cAA2B,mBAAGC,KAAK,GAAR,iBAA3B,OACA,sBAAMD,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,cAA2B,mBAAGC,KAAK,GAAR,iBAA3B,OACA,sBAAMD,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,cAA2B,mBAAGC,KAAK,GAAR,iBAA3B,OACA,sBAAMD,UAAU,yBCyE7B8F,GA7HQ,SAAC/F,GAEpB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iEAAR,gFAA1B,OAEA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,sDAAR,oEAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,uCACA,iLACA,sBAAMA,UAAU,UAAhB,uGACA,yTAEA,mCAAK,mBAAGE,KAAK,6CAA6CC,OAAO,SAA5D,4DAAL,OACA,sBAAMH,UAAU,UAAhB,oFACA,kEACA,sBAAMA,UAAU,UAAhB,uEACA,uEACA,sBAAMA,UAAU,UAAhB,2DACA,mCAAM,mBAAN,sCACA,mCAAM,kDAAN,sCACA,sBAAMA,UAAU,UAAhB,uDACA,uUAEA,4JACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,0CAIR,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,4BAAR,yCAA1B,OACA,sBAAMD,UAAU,SAAhB,SACI,+BACI,sBAAMA,UAAU,UAAhB,4BACA,iFACA,oFACA,oFACA,8EACA,2FACA,6FACA,iGACA,sDACA,6DACA,sDACA,iEACA,8DACA,+IACA,6HACA,qFACA,oCACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,2CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,iBAMxB,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,iBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,yBCzB7B+F,GAvFM,SAAChG,GAClB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yCAAyC,uCACrC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gHACA,4IACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8BAAwC,uCACpC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+BACA,oCACA,sBAAMA,UAAU,UAAhB,yCACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sBAAgC,uCAC5B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sBAAgC,uCAC5B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sBAAgC,uCAC5B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,sDCPrBgG,GApEA,SAACjG,GAEZ,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iCAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,0JACA,sBAAMA,UAAU,SAAhB,SACI,+PAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCAAuC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,qBACA,uBAAMA,UAAU,SAAhB,UACI,+PACA,uCAGJ,sBAAMA,UAAU,UAAhB,0BACA,sBAAMA,UAAU,SAAhB,SACI,+SAIJ,sBAAMA,UAAU,UAAhB,oBACA,sBAAMA,UAAU,SAAhB,SACI,6LAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mDAAyC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,oBAAIA,UAAU,SAAd,uMAEJ,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,oBAAIA,UAAU,QAAd,oTCUrBiG,GAjED,SAAClG,GAEX,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gCAAqC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oFACA,uBAAMA,UAAU,SAAhB,UACI,gLACA,yOACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sCAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qBACA,sBAAMA,UAAU,SAAhB,SACI,iMAEJ,sBAAMA,UAAU,UAAhB,oBACA,sBAAMA,UAAU,SAAhB,SACI,4HAEJ,sBAAMA,UAAU,UAAhB,yBACA,sBAAMA,UAAU,SAAhB,SACI,iOAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,4CAAuC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,oBAAIA,UAAU,SAAd,kLAEJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,QAAd,8HACA,oBAAIA,UAAU,QAAd,yKACA,oBAAIA,UAAU,QAAd,mCCUrBkG,GA/DA,SAACnG,GAEZ,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iCAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oFACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCAAuC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qBACA,sBAAMA,UAAU,SAAhB,SACI,kMAEJ,sBAAMA,UAAU,UAAhB,oBACA,sBAAMA,UAAU,SAAhB,SACI,4HAEJ,sBAAMA,UAAU,UAAhB,yBACA,uBAAMA,UAAU,SAAhB,UACI,uNACA,uZAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6CAAwC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAxC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,oBAAIA,UAAU,SAAd,kBAEJ,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,oBAAIA,UAAU,QAAd,6MCPrBmG,GA5CO,SAACpG,GACnB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kEAAyC,mBAAGC,KAAK,+CAAYI,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,mBAAGE,KAAK,iCAAiCC,OAAO,SAAhD,+DAAL,OACA,8MACA,mCAAK,mBAAGD,KAAK,iCAAiCC,OAAO,SAAhD,gBAAL,UAGJ,sBAAMH,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC+FrBoG,GA/HK,SAACrG,GAEjB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yBAAmC,mBAAGC,KAAK,MAAMI,MAAO,CAAEC,WAAY,UAAnC,mBAAnC,OACA,mIAFJ,IAEsD,uBAClD,mBAAGJ,KAAK,kBAAkBC,OAAO,SAAjC,+BAHJ,2DAII,uBAAMH,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+DACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mFAAyE,mBAAGC,KAAK,+DAA2CI,MAAO,CAAEC,WAAY,UAAxE,4EAAzE,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sBACA,uBAAMA,UAAU,SAAhB,UACI,oJACA,uCAGJ,sBAAMA,UAAU,UAAhB,uBACA,uBAAMA,UAAU,SAAhB,UACI,+IACA,4GACA,8RAEA,2KACA,qGACA,sCAAS,IAAT,OAPJ,IAO2B,uBACvB,iEARJ,IAQgD,uBAC5C,iEATJ,IASgD,uBAC5C,2DAVJ,IAU0C,uBACtC,uCAXJ,IAWsB,uBAClB,sCAAS,IAAT,OAZJ,IAY2B,0BAG3B,sBAAMA,UAAU,UAAhB,yBACA,uBAAMA,UAAU,SAAhB,UACI,yIACA,mCAAM,gBAAN,OACA,qBAAIA,UAAU,QAAd,cAAwB,oCAAxB,OACA,qBAAIA,UAAU,QAAd,cAAwB,8BAAxB,OACA,qBAAIA,UAAU,QAAd,cAAwB,YAAxB,OACA,+CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gEAA4C,mBAAGC,KAAK,6CAAeI,MAAO,CAAEC,WAAY,UAA5C,0DAA5C,OACA,sBAAMN,UAAU,SAAhB,SACI,+BACI,yGACA,yGACA,uZAEA,wNACA,gNACA,6MACA,8KAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kDAAwC,mBAAGC,KAAK,+BAAWI,MAAO,CAAEC,WAAY,UAAxC,4CAAxC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,2QACA,oJACA,kGACA,uLAGJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,oRACA,mKACA,+CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCrErBqG,GA9CM,SAACtG,GAElB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gEAA4C,mBAAGC,KAAK,6CAAeI,MAAO,CAAEC,WAAY,UAA5C,0DAA5C,OACA,yKAFJ,IAEuF,uBACnF,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gCACA,uBAAMA,UAAU,SAAhB,UACI,2QACA,2NAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCuFrBsG,GAzHM,SAACvG,GAElB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iCAAsC,mBAAGC,KAAK,cAASI,MAAO,CAAEC,WAAY,UAAtC,2BAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uCACA,sBAAMA,UAAU,SAAhB,SACI,0QAGJ,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACI,yRAGJ,sBAAMA,UAAU,UAAhB,oDACA,uBAAMA,UAAU,SAAhB,UACI,sQACA,gHACA,oBAAIA,UAAU,QAAd,oVAIJ,sBAAMA,UAAU,UAAhB,oDACA,sBAAMA,UAAU,SAAhB,SACI,8LAGJ,sBAAMA,UAAU,UAAhB,oFACA,uBAAMA,UAAU,SAAhB,UACI,8OACA,kQACA,qMACA,uIAGJ,sBAAMA,UAAU,UAAhB,kGACA,uBAAMA,UAAU,SAAhB,UACI,yFACA,8EAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kEAAyC,mBAAGC,KAAK,+CAAYI,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kGACA,uBAAMA,UAAU,SAAhB,UACI,qdAEA,4aAEA,oQACA,yMACA,uCAGJ,sBAAMA,UAAU,UAAhB,iDACA,sBAAMA,UAAU,SAAhB,SACI,8PAGJ,sBAAMA,UAAU,UAAhB,sBACA,6EACA,uBAAMA,UAAU,SAAhB,UACI,mMACA,oOACA,iLAGJ,sBAAMA,UAAU,UAAhB,sBACA,uBAAMA,UAAU,SAAhB,UACI,qHACA,2QACA,oHACA,uCAGJ,sBAAMA,UAAU,UAAhB,sBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC7DrBuG,GAhDY,SAACxG,GACxB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yCAAoC,mBAAGC,KAAK,eAAKI,MAAO,CAAEC,WAAY,UAAlC,4BAApC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qKACA,uBAAMA,UAAU,SAAhB,UACI,qIACA,iJACA,mIACA,mIACA,0PACA,4LACA,0JACA,0FACA,uEACA,iYAEA,4JACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCkIrBwG,GAtKe,SAACzG,GAE3B,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kEAAyC,mBAAGC,KAAK,+CAAYI,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4DACA,uBAAMA,UAAU,SAAhB,UACI,kQACA,uSACA,gLACA,+CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wEAA0C,mBAAGC,KAAK,qDAAaI,MAAO,CAAEC,WAAY,UAA1C,kEAA1C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sNACA,sBAAMA,UAAU,SAAhB,SACI,8FAGJ,sBAAMA,UAAU,UAAhB,wCACA,sBAAMA,UAAU,SAAhB,SACI,iGAGJ,sBAAMA,UAAU,UAAhB,oDACA,sBAAMA,UAAU,SAAhB,SACI,qSAIJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uEAA8C,mBAAGC,KAAK,oDAAiBI,MAAO,CAAEC,WAAY,UAA9C,iEAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4KACA,uBAAMA,UAAU,SAAhB,UACI,+IACA,2OAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iDAA2D,mBAAGC,KAAK,yBAAyBI,MAAO,CAAEC,WAAY,UAAtD,sCAA3D,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mNACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8EAAwF,mBAAGC,KAAK,oBAAoBI,MAAO,CAAEC,WAAY,UAAjD,iCAAxF,OACA,+EACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yNACA,uBAAMA,UAAU,SAAhB,UACI,oVACA,kSACA,mhBAEA,0oCAIA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,4BAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uMACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kEAAyC,mBAAGC,KAAK,+CAAYI,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+NACA,sBAAMA,UAAU,SAAhB,SACI,wJAEJ,sBAAMA,UAAU,UAAhB,wBACA,uBAAMA,UAAU,SAAhB,UACI,sHACA,uCAEJ,sBAAMA,UAAU,UAAhB,yBACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,uCAEJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,uCAEJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC9GrByG,GA5CY,SAAC1G,GACxB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wCAA6C,mBAAGC,KAAK,qBAAgBI,MAAO,CAAEC,WAAY,UAA7C,kCAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+RAEA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCoRrB0G,GApTM,SAAC3G,GAGlB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDAAsC,mBAAGC,KAAK,kCAASI,MAAO,CAAEC,WAAY,UAAtC,+CAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+QACA,sBAAMA,UAAU,SAAhB,SACI,kNAGJ,sBAAMA,UAAU,UAAhB,mEACA,uBAAMA,UAAU,SAAhB,UACI,uKACA,wQACA,qIACA,2KACA,yCACA,uCACA,uCACA,uCAGJ,sBAAMA,UAAU,UAAhB,4GACA,mJACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,UAAd,wGACA,oBAAIA,UAAU,UAAd,yKACA,oBAAIA,UAAU,UAAd,mPACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,eAAd,wHACA,oBAAIA,UAAU,cAAd,wPAEJ,oBAAIA,UAAU,UAAd,mEACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,eAAd,oEACA,oBAAIA,UAAU,cAAd,sKAEJ,oBAAIA,UAAU,UAAd,yIACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,eAAd,wRACA,oBAAIA,UAAU,cAAd,0OAOR,sBAAMA,UAAU,UAAhB,kEACA,uBAAMA,UAAU,SAAhB,UACI,6FACA,8SACA,yYAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mCAA6C,mBAAGC,KAAK,iBAAiBI,MAAO,CAAEC,WAAY,UAA9C,6BAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mBACA,sBAAMA,UAAU,SAAhB,SACI,mgBAE0B,uBAF1B,kIAKJ,sBAAMA,UAAU,UAAhB,kBACA,sBAAMA,UAAU,SAAhB,SACI,mUACI,uBADJ,gIAIJ,sBAAMA,UAAU,UAAhB,oBACA,sBAAMA,UAAU,SAAhB,SACI,2UACI,uBADJ,mTAIJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDAAsC,mBAAGC,KAAK,kCAASI,MAAO,CAAEC,WAAY,UAAtC,+CAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gCACA,sBAAMA,UAAU,SAAhB,SACI,sMAGJ,sBAAMA,UAAU,UAAhB,iCACA,sBAAMA,UAAU,SAAhB,SACI,8FAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDAAsC,mBAAGC,KAAK,kCAASI,MAAO,CAAEC,WAAY,UAAtC,+CAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uNACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gCAAqC,mBAAGC,KAAK,aAAQI,MAAO,CAAEC,WAAY,UAArC,0BAArC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oJACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qEAAiD,mBAAGC,KAAK,kDAAoBI,MAAO,CAAEC,WAAY,UAAjD,+DAAjD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iQACA,sBAAMA,UAAU,UAAhB,4DACA,uBAAMA,UAAU,SAAhB,UACI,8SACA,oMACA,+KAGJ,sBAAMA,UAAU,UAAhB,iBACA,uBAAMA,UAAU,SAAhB,UACI,0FACA,8GACA,uIAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDAA2C,mBAAGC,KAAK,kCAAcI,MAAO,CAAEC,WAAY,UAA3C,+CAA3C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+PACA,uBAAMA,UAAU,SAAhB,UACI,wEACA,iDAMhB,sBAAMA,UAAU,WAIhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oCAA8C,mBAAGC,KAAK,iBAAiBI,MAAO,CAAEC,WAAY,UAA9C,8BAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,8GACA,kIACA,uBAAMA,UAAU,SAAhB,UACI,yFAAmB,uBAAnB,0LACA,yFAAmB,uBAAnB,6JACA,8EAAkB,uBAAlB,mEACA,yFAAmB,uBAAnB,qJAJJ,IAI8E,uBAC1E,yFAAmB,uBAAnB,uFACA,2DAAc,uBAAd,4BANJ,IAM0C,uBACtC,sTAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDAA2C,mBAAGC,KAAK,kCAAcI,MAAO,CAAEC,WAAY,UAA3C,8CAA3C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kRACA,sBAAMA,UAAU,UAAhB,uHACA,sBAAMA,UAAU,SAAhB,SACI,sCAEJ,sBAAMA,UAAU,UAAhB,yDACA,uBAAMA,UAAU,SAAhB,UACI,gLACA,gPAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kDAAwC,mBAAGC,KAAK,+BAAWI,MAAO,CAAEC,WAAY,UAAxC,4CAAxC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,oHACA,sBAAMA,UAAU,SAAhB,SACI,sCAEJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDAAsC,mBAAGC,KAAK,kCAASI,MAAO,CAAEC,WAAY,UAAtC,+CAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sCACA,yFACA,uBAAMA,UAAU,SAAhB,UACI,8DACA,mEAGJ,sBAAMA,UAAU,UAAhB,6BACA,oJACA,sBAAMA,UAAU,SAAhB,SACI,iNAGJ,sBAAMA,UAAU,UAAhB,6BACA,iKACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,WAAd,kCACA,oBAAIA,UAAU,UAAd,8HAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCpNrB2G,GApFQ,SAAC5G,GAEpB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,wBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,uBACA,yDACA,uBAAMA,UAAU,SAAhB,UACI,4XACA,6GACA,iLACA,sNACA,qBAAIA,UAAU,SAAd,eAAyB,sBAAMA,UAAU,UAAhB,0DACrB,qFACA,sGACA,kIACA,uIACA,wIACA,2MACA,0JACA,yEAEJ,qBAAIA,UAAU,SAAd,eAAyB,sBAAMA,UAAU,UAAhB,uDACrB,wFACA,sJACA,6HACA,gKAAmC,iMAAnC,QACA,2FACA,4NACA,kKACA,uJACA,0PACA,oHACA,0HACA,8IACA,8JACA,+JACA,8LACA,0CAEJ,qBAAIA,UAAU,SAAd,eAAyB,sBAAMA,UAAU,UAAhB,sDACrB,6CAIR,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCwDrB4G,GAhIY,SAAC7G,GAC1B,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+DAA2C,mBAAGC,KAAK,4CAAcI,MAAO,CAAEC,WAAY,UAA3C,yDAA3C,OACA,kEACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,qIACA,uBAAMA,UAAU,SAAhB,UACE,wNACA,4JACA,sHACA,+MACA,kMAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,kDAAwC,mBAAGC,KAAK,+BAAWI,MAAO,CAAEC,WAAY,UAAxC,4CAAxC,OACA,uBAAMN,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,kEACA,sBAAMA,UAAU,SAAhB,SACE,+BACE,8PACA,yOACA,8LACA,+JACA,yCAIJ,sBAAMA,UAAU,UAAhB,kEACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,+CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,mDAAyC,mBAAGC,KAAK,gCAAYI,MAAO,CAAEC,WAAY,UAAzC,6CAAzC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,uBAAOsD,OAAO,IAAIZ,MAAM,MAAxB,SACE,kCACE,+BACE,oBAAImB,QAAQ,IAAZ,iCACA,oBAAIA,QAAQ,IAAZ,oCAEF,+BACE,oBAAIA,QAAQ,IAAZ,uCACA,oBAAIA,QAAQ,IAAZ,uCACA,oBAAIA,QAAQ,IAAZ,qCAEF,6BACE,oBAAIA,QAAQ,IAAZ,2CAEF,6BACE,oBAAIA,QAAQ,IAAZ,2CAEF,6BACE,oBAAIA,QAAQ,IAAZ,gDAEF,6BACE,oBAAIA,QAAQ,IAAZ,qDAKN,sBAAM7D,UAAU,UAAhB,gBACA,kKACA,kJACA,sIACA,sJACA,oGAAmC,uBAAnC,oEACA,sGACA,sGACA,uIACA,qHAQR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sDCXH6G,GAzGU,SAAC9G,GAGtB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iCAA2C,mBAAGC,KAAK,cAAcI,MAAO,CAAEC,WAAY,UAA3C,4BAA3C,OACA,sOACA,uBAAMN,UAAU,SAAhB,UAEI,oCACI,0BAASA,UAAU,UAAnB,2EAAwD,mBAAGC,KAAK,yDAA2BI,MAAO,CAAEC,WAAY,UAAxD,sEAAxD,OACA,4GACA,uBAAMN,UAAU,SAAhB,UACI,kKACA,iIAIR,oCACI,0BAASA,UAAU,UAAnB,6EAA0D,mBAAGC,KAAK,0DAA4BI,MAAO,CAAEC,WAAY,UAAzD,uEAA1D,OACA,+HACA,uBAAMN,UAAU,SAAhB,UACI,8RACA,2HACA,0CAIR,oCACI,0BAASA,UAAU,UAAnB,wEAAqD,mBAAGC,KAAK,qDAAuBI,MAAO,CAAEC,WAAY,UAApD,kEAArD,OACA,uHACA,sBAAMN,UAAU,SAAhB,SACI,uLAIR,oCACI,0BAASA,UAAU,UAAnB,0EAAuD,mBAAGC,KAAK,uDAAyBI,MAAO,CAAEC,WAAY,UAAtD,oEAAvD,OACA,qQACA,uBAAMN,UAAU,SAAhB,UACI,mHACA,8IACA,wEACA,0CAIR,oCACI,0BAASA,UAAU,UAAnB,oFAAuD,mBAAGC,KAAK,iEAAyBI,MAAO,CAAEC,WAAY,UAAtD,8EAAvD,OACA,kHACA,uBAAMN,UAAU,SAAhB,UACI,8QACA,4FACA,0CAIR,oCACI,0BAASA,UAAU,UAAnB,4FAA0D,mBAAGC,KAAK,yEAA4BI,MAAO,CAAEC,WAAY,UAAzD,sFAA1D,OACA,2GACA,uBAAMN,UAAU,SAAhB,UACI,2NACA,yIACA,oCACA,0CAIR,oCACI,0BAASA,UAAU,UAAnB,yEAAsD,mBAAGC,KAAK,sDAAwBI,MAAO,CAAEC,WAAY,UAArD,mEAAtD,OACA,6GACA,uBAAMN,UAAU,SAAhB,UACI,sOACA,6GACA,kDAQpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCtCrB8G,GAvDkB,SAAC/G,GAC9B,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2CAAgD,mBAAGC,KAAK,wBAAmBI,MAAO,CAAEC,WAAY,UAAhD,qCAAhD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+PACA,sBAAMA,UAAU,SAAhB,SACI,gQAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8DAAoD,mBAAGC,KAAK,2CAAuBI,MAAO,CAAEC,WAAY,UAApD,wDAApD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,yFAAmB,uBAAnB,sKACA,6DAAgB,uBAAhB,6LACA,yFAAmB,uBAAnB,gFACA,yFAAmB,uBAAnB,iHAJJ,IAIwE,uBACpE,4DAAe,uBAAf,kDALJ,IAKkD,uBAC9C,0CACA,8GACA,oEAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDClBrB+G,GAzBO,SAAChH,GAEnB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,qDC4HrBgH,GAzIU,SAACjH,GAEtB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,4CAA4C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA5C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sCAA2C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA3C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sEACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kDAA6C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA7C,OACA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,kBACA,yFACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,oBACA,yFACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,sBACA,mFACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,2BACA,6EACA,sBAAMA,UAAU,SAAhB,SACI,qCAGJ,sBAAMA,UAAU,UAAhB,wBACA,4EACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,uCAGJ,sBAAMA,UAAU,UAAhB,sBACA,sEACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,oBACA,gEACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qFAA6C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,mLACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,4CAA4C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA5C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kDAAwC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAxC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sBAAgC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCoDrBiH,GAjLS,SAAClH,GAEvB,OACE,mCAEE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,UAAnB,qBAAgC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,sBAAMN,UAAU,SAAhB,SACE,0CAKN,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,UAAnB,yBAAoC,mBAAGC,KAAK,MAAMI,MAAO,CAAEC,WAAY,UAAnC,mBAApC,OACA,uBAAMN,UAAU,SAAhB,UACE,oIACA,qFACA,8JACA,kEACE,uBAAMA,UAAU,SAAhB,UACE,mEACA,yEACA,kEAIJ,mDACE,uBAAMA,UAAU,SAAhB,UACE,oKACA,yRAIJ,mDACE,uBAAMA,UAAU,SAAhB,UACE,kKACA,uKACA,8MACA,sKACA,6NACA,kLACA,kMACA,0MACA,sMAIJ,qFACE,uBAAMA,UAAU,SAAhB,UACE,qKACA,4GACA,yHACA,wIACA,gJAIJ,6BACE,sBAAMA,UAAU,SAAhB,SACE,gDAQV,sBAAMA,UAAU,SAAhB,yCAEA,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,UAAnB,wEAAgD,mBAAGC,KAAK,MAAMI,MAAO,CAAEC,WAAY,UAAnC,mBAAhD,OACA,mDACA,uBAAMN,UAAU,SAAhB,UACE,6LACA,sRACA,kGACA,2DACA,oCAEA,mDACE,uBAAMA,UAAU,SAAhB,UACE,uKACA,kJACA,saAEA,mMACA,8UAEA,iHAIJ,iHACE,uBAAMA,UAAU,SAAhB,UACE,2DACA,4KACA,mFACA,wHACA,oMACA,qMACA,sCACA,4CAIJ,6BACE,sBAAMA,UAAU,SAAhB,SACE,gDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,UAAnB,2EAAmD,mBAAGC,KAAK,SAASI,MAAO,CAAEC,WAAY,UAAtC,sBAAnD,OACA,sBAAMN,UAAU,SAAhB,SACE,0CAKN,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,UAAnB,0EAAkD,mBAAGC,KAAK,SAASI,MAAO,CAAEC,WAAY,UAAtC,sBAAlD,OACA,sBAAMN,UAAU,SAAhB,SACE,0CAKN,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,UAAnB,6GAAuD,mBAAGC,KAAK,MAAMI,MAAO,CAAEC,WAAY,UAAnC,mBAAvD,OACA,uBAAMN,UAAU,SAAhB,UACE,iMACA,4DACA,iRACA,mPACA,4CAKN,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,UAAnB,qBAAgC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,sBAAMN,UAAU,SAAhB,SACE,0CAKN,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,UAAnB,qBAAgC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,sBAAMN,UAAU,SAAhB,SACE,kDC5HDkH,GA1CgB,SAACnH,GAI5B,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCFzBmH,GA3BkB,SAACpH,GAE9B,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,uDCazBoH,GA3BW,SAACrH,GAEvB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,uDCoOzBqH,GAlPS,SAACtH,GAMrB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,yBAASA,UAAU,SAAnB,0FACA,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,6OACA,+GACA,yEACA,wIAGJ,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,SAAd,0BACI,gLACA,sKACA,kGACA,iKAEJ,qBAAIA,UAAU,QAAd,0BACI,+MACA,0LACA,0CAIR,sBAAMA,UAAU,UAAhB,0EACA,uBAAMA,UAAU,SAAhB,UACI,6HAA8B,oCAA9B,QACA,0LAGJ,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,oCACI,yBAASA,UAAU,UAAnB,2BACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sBAAMA,UAAU,UAAhB,iFAAL,OACA,mCAAM,gBAAN,OACA,+DACA,sDAAyB,IACrB,+DACA,kDAAqB,KAArB,WAAmC,IAC/B,oDAAuB,KAAvB,uBAAiD,IAC7C,oDACA,iDAEJ,mCAAM,IAAN,UAEJ,mCAAM,IAAN,UAEJ,mCAAM,IAAN,aAIR,oCACI,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sBAAMA,UAAU,UAAhB,iFAAL,OACA,6DAAgC,IAC5B,6DACA,6DACA,iDAAoB,KAApB,gBACI,2DAA8B,KAA9B,8BACK,KADL,8BACsC,IAClC,oDAEJ,mCAAM,IAAN,UAEJ,mCAAM,IAAN,OACA,uDACI,4DAGR,mCAAM,IAAN,UAGJ,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sBAAMA,UAAU,UAAhB,qHAAL,OACA,6DAAgC,IAC5B,6DACA,6DACA,iDAAoB,IAApB,8BAAoD,IAChD,qEACA,oEAAuC,KAAvC,uCAAiF,IAC7E,0DAEJ,mCAAM,IAAN,UAEJ,mCAAM,IAAN,OACA,uDACI,4DAGR,mCAAM,IAAN,aAIR,oCACI,yBAASA,UAAU,UAAnB,0BACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,6BACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,uBACA,sBAAMA,UAAU,SAAhB,SACI,oDAUxB,sBAAMA,UAAU,SAAhB,SACI,oCACI,yBAASA,UAAU,SAAnB,mDACA,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,yBAASA,UAAU,SAAnB,wGACA,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,yBAASA,UAAU,SAAnB,kEACA,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,yBAASA,UAAU,SAAnB,yEACA,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,yBAASA,UAAU,SAAnB,+CACA,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCrLzBsH,GA/CU,SAACvH,GAGtB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gEACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,kKACA,uCAEJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCNzBuH,GA5BQ,SAACxH,GAEpB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,uDCezBwH,GA9Ba,SAACzH,GAIzB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,uDCYzByH,GA7BU,SAAC1H,GAItB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,uDC4NzB0H,GA5OQ,SAAC3H,GAMpB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,wCAAR,qDAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,oCACI,yBAASA,UAAU,UAAnB,6DACA,uBAAMA,UAAU,SAAhB,UACI,2JACA,uHACA,oIACA,uEAAgB,oCAAhB,OACA,6DACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,6DACA,uBAAMA,UAAU,SAAhB,UACI,oKACA,8GACA,+KACA,uEAAgB,wBAAhB,OACA,6DACA,uBAAMA,UAAU,SAAhB,UAEI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,iEACA,uBAAMA,UAAU,SAAhB,UACI,+MACA,iFACA,2EACA,uEAAgB,oCAAhB,OACA,6DACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,+GACA,uBAAMA,UAAU,SAAhB,UACI,2PACA,mIACA,oFAAmB,oCAAnB,mHACA,uEAAgB,wBAAhB,UAAkC,oCAAlC,OACA,6DACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,6DACA,uBAAMA,UAAU,SAAhB,UACI,kKACA,kFACA,uFACA,uEAAgB,oCAAhB,OACA,6DACA,uBAAMA,UAAU,SAAhB,UAEI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,sDACA,uBAAMA,UAAU,SAAhB,UACI,iLACA,iFACA,8JACA,kFAA2B,oCAA3B,OACA,6DACA,uBAAMA,UAAU,SAAhB,UAEI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,mEACA,uBAAMA,UAAU,SAAhB,UACI,uFACA,kFACA,kDACA,4EACA,6DACA,uBAAMA,UAAU,SAAhB,UAEI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,0EACA,uBAAMA,UAAU,SAAhB,UACI,oKACA,iFACA,uHACA,4EACA,6DACA,uBAAMA,UAAU,SAAhB,UAEI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,0CACA,uBAAMA,UAAU,SAAhB,UACI,kDACA,2IACA,qGACA,8EAAuB,0CAAvB,WAAiD,oCAAjD,OACA,6DACA,uBAAMA,UAAU,SAAhB,UAEI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,gDACA,uBAAMA,UAAU,SAAhB,UACI,kDACA,8FACA,gMACA,uEAAgB,wBAAhB,OACA,6DACA,uBAAMA,UAAU,SAAhB,UAEI,oCACA,6CAKZ,oCACI,yBAASA,UAAU,UAAnB,sDACA,uBAAMA,UAAU,SAAhB,UACI,uNACA,8FACA,kLACA,uEAAgB,wBAAhB,OACA,6DACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,mDAQpB,oCACI,yBAASA,UAAU,UAAnB,uBACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,+CAMhB,oCACI,yBAASA,UAAU,UAAnB,uBACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,+CAMhB,oCACI,yBAASA,UAAU,UAAnB,uBACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,yDCzKzB2H,GAtDS,SAAC5H,GAKrB,OACI,mCAEI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8DACI,mBAAGC,KAAK,4CAAcI,MAAO,CAAEC,WAAY,UAA3C,yDADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,iEACA,8FACA,0NAEJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAEJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDC4BzB4H,GArEO,SAAC7H,GAEnB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,4CAAuC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,qFACA,mGACA,qJACA,oKACA,iFACA,8JACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kEAA8C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mGACA,oCACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDC4FrB6H,GArJM,SAAC9H,GAElB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0BAAoC,mBAAGC,KAAK,OAAOI,MAAO,CAAEC,WAAY,UAApC,oBAApC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+EACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,mBAAGE,KAAK,6BAA6BC,OAAO,SAA5C,6BAAL,OACA,+IAGJ,sBAAMH,UAAU,UAAhB,sFACA,uBAAMA,UAAU,SAAhB,UACI,iRAEA,+OACA,gmBAIA,iFACA,mKACA,uHACA,4PAEA,yGACA,wKACA,uCAGJ,sBAAMA,UAAU,UAAhB,8KACA,+IACA,uBAAMA,UAAU,SAAhB,UACI,mdAEA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,4DAAwC,mBAAGC,KAAK,yCAAWI,MAAO,CAAEC,WAAY,UAAxC,sDAAxC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sDACA,uBAAMA,UAAU,SAAhB,UACI,yUACA,8UACA,wVAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8HAAwD,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAxD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2FACA,sBAAMA,UAAU,SAAhB,SACI,kWAGJ,sBAAMA,UAAU,UAAhB,yHACA,sBAAMA,UAAU,SAAhB,SACI,sJAGJ,sBAAMA,UAAU,UAAhB,sFACA,sBAAMA,UAAU,SAAhB,SACI,qLAGJ,sBAAMA,UAAU,UAAhB,sFACA,sBAAMA,UAAU,SAAhB,SACI,oNAEJ,sBAAMA,UAAU,UAAhB,sGACA,uBAAMA,UAAU,SAAhB,UACI,qNACA,yRACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2FAA8C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,6CACA,iDACA,kFAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCkOrB8H,GA3WI,SAAC/H,GAGlB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,iEAAwC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,2DAAxC,OACA,uBAAMN,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,mBAAGE,KAAK,sCAAsCC,OAAO,SAAS4H,IAAI,aAAlE,2DAAL,OACA,wFACA,wFAGF,sBAAM/H,UAAU,UAAhB,+DACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,mBAAGE,KAAK,qFAAqFC,OAAO,SAAS4H,IAAI,aAAjH,2DAAL,OACA,0GACA,uFACA,mGACA,yJACA,oCACA,+CAOR,sBAAM/H,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8EAA2C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eAA3C,OACA,uBAAMN,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACE,4fAEA,8RACA,4SACA,0pBAGA,qCACA,wCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qDAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eAAtC,OACA,uBAAMN,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,oCACA,sBAAMA,UAAU,SAAhB,SACE,sCAGF,sBAAMA,UAAU,UAAhB,+BACA,uBAAMA,UAAU,SAAhB,UACE,oLACA,mCAAK,sBAAMA,UAAU,UAAhB,+CACH,gNACA,qJACA,6JACA,wHACA,oCAEA,oBAAGA,UAAU,SAAb,eAAwB,sBAAMA,UAAU,UAAhB,qCACtB,+JACA,kMACA,gHACA,yJACA,2JAGF,oBAAGA,UAAU,SAAb,eAAwB,sBAAMA,UAAU,UAAhB,kDACtB,gKACA,yVAIF,oBAAGA,UAAU,SAAb,eAAwB,sBAAMA,UAAU,UAAhB,6DACtB,iIACA,wPAIF,oBAAGA,UAAU,SAAb,eAAwB,sBAAMA,UAAU,UAAhB,wDACtB,6MACA,4PAGF,oBAAGA,UAAU,SAAb,eAAwB,sBAAMA,UAAU,UAAhB,wDACtB,gKACA,yMAIJ,mCAAK,sBAAMA,UAAU,UAAhB,gDACH,yGACA,yEACA,+GACA,6DACA,mEAIJ,sBAAMA,UAAU,UAAhB,wCACA,4PACA,uBAAMA,UAAU,SAAhB,UACE,gRACA,iEACE,uBAAMA,UAAU,SAAhB,UACE,mGACA,uGACA,6DACA,4DACA,qGACA,sFACA,gFAGJ,uCAGF,sBAAMA,UAAU,UAAhB,uDACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2FAA8C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eAA9C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4CACA,uBAAMA,UAAU,SAAhB,UACE,uPACA,kSAGF,sBAAMA,UAAU,UAAhB,2CACA,sBAAMA,UAAU,SAAhB,SACE,sNAGF,sBAAMA,UAAU,UAAhB,kDACA,sBAAMA,UAAU,SAAhB,SACE,0GAGF,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACE,qKAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,iEAAwC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eAAxC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,+NACA,gSACA,iNACA,0CACA,uCACA,4CACA,oNACA,0CACA,kDACA,4CACA,4EACA,+DACA,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8EACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,gKACA,kIACA,mIACA,yDACA,sDACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,uGACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,iEACA,uEACA,oHACA,sCACA,8FACA,wHACA,qFAAwD,aAAxD,SACA,2DACA,wDACA,4EACA,kDACA,8CACE,mEACA,qDACA,oDACA,wDACA,uDACA,uDACA,kDACA,8GACA,2CACA,iDAEF,2EACA,sJACA,2JACA,iHACA,2JACA,uHACA,8DAAiC,IAAjC,yBACA,kDACA,sDACA,mDACA,2CACE,uBAAMA,UAAU,SAAhB,UACE,+CACA,oDAGJ,4EACA,gDACE,uBAAMA,UAAU,SAAhB,UACE,gDACA,kDACA,8CAAiB,IAAjB,QAA2B,IAA3B,OACA,4DACA,mDACA,gDACA,qEACA,+DACA,mCAAM,wEAAN,kIAEA,iHACA,uDACA,gDACA,oDACA,yCACA,6CACA,0CACA,4CACA,0DACA,0EACA,0EACA,0CACA,0DACA,0CACA,2DACA,6EACA,8CACA,mCAAM,kDAAN,sPAEA,uDAGJ,gLACE,2KAEF,mFACA,6FACA,uEACA,qEACA,4IACA,iGACA,uGACE,uBAAMA,UAAU,SAAhB,UACE,qEACA,6GACA,oCACA,0CAGJ,oCACA,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,oDACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,0FACA,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eAA/B,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sDCw7BHgI,GAvxCM,SAACjI,GACpB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,sDAAuC,mBAAGC,KAAK,kCAASI,MAAO,CAAEC,WAAY,UAAtC,+CAAvC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACE,4HACA,kIACA,6FACA,+LACA,8FACA,iJACA,uHACA,sKACA,+JACA,8QACE,mFACA,kDACA,iFACA,uBACA,gPACA,mDACA,mDACA,oFAEF,2EACA,mJACA,sIACA,iEACE,mQACA,iRACA,qRACA,oRACA,2PACA,6QAEF,oCACA,4QACA,uLACA,gNACA,yHACA,yLACA,gKACA,yLACA,8JACA,qDACA,sGACA,0IACA,8HACA,qHACA,gMACA,oIACE,yIACA,mJACA,wHAAmC,qHAAnC,UAEF,oCACA,wCACE,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,0EACA,kHACA,oJACA,gJACA,0CAGJ,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2DAAuC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,0GACA,iHACA,+GACA,wGACA,6IACA,2FACA,2HACA,iIACA,8CACA,+IACA,kJAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CAAsC,mHACpC,mBAAGC,KAAK,wBAASI,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,sBAAMN,UAAU,SAAhB,SACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,0DACA,2FACA,gGACA,kGACA,0HACA,sGACA,iIACA,iKACA,6HAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CAAsC,sGACpC,mBAAGC,KAAK,wBAASI,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,wDACA,2MACA,qLACA,6GACE,sBAAMA,UAAU,SAAhB,SACE,wCACE,yBAASA,UAAU,SAAnB,yFACA,qSACA,sLACA,+EACA,0EACA,qEACA,uDACA,mEACA,qEAIN,oIACA,2IACA,uGACA,0HACA,4FACA,iGACA,+GACA,8EACA,6GACA,uHACA,0RACA,yKACA,qKAGF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,sFACA,wEAA0C,kBAA1C,0IAOV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAAyC,4EACvC,mBAAGC,KAAK,2BAAYI,MAAO,CAAEC,WAAY,UAAzC,wCADF,QAEA,sBAAMN,UAAU,SAAhB,SACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,yFACA,uIACA,qLACA,sIACA,+FAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CAAsC,qGACpC,mBAAGC,KAAK,wBAASI,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,uLACA,qNACA,uIACA,iMACA,uOACA,6GACA,mNACA,0LACA,qFACA,uCAGF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,kDACA,mFAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4CAAuC,oHACrC,mBAAGC,KAAK,wBAASI,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,wDACA,wEACA,2KACA,0IACA,8IACA,0HACA,gIACA,uIACA,uCAIF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,8GACA,kDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CAAsC,2GACpC,mBAAGC,KAAK,wBAASI,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,wDACA,8MACA,gQACA,2FACA,gYAEA,gIACA,kGACA,oHACA,oJAIF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,gLACA,uLAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAwC,sGACtC,mBAAGC,KAAK,yBAAUI,MAAO,CAAEC,WAAY,UAAvC,sCADF,OAEA,sBAAMN,UAAU,SAAhB,SACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,mCACA,kHACA,qGAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAwC,yFACtC,mBAAGC,KAAK,0BAAWI,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,sBAAMN,UAAU,SAAhB,SACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,qCACA,wEACA,mHACA,+GACA,2LAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,iDAA4C,yFAC1C,mBAAGC,KAAK,8BAAeI,MAAO,CAAEC,WAAY,UAA5C,2CADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,wDACA,6IACA,sHACA,qJACA,iGACA,sHACA,0GAGF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACE,yFAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0CAAqC,sIACnC,mBAAGC,KAAK,uBAAQI,MAAO,CAAEC,WAAY,UAArC,oCADF,OAEA,sBAAMN,UAAU,SAAhB,SACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,uDAEA,uDACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,8EACA,qPACA,iFACA,iEACA,6EACA,+FACA,uHACA,wMACA,gLACA,kHAKN,iGACA,0GACA,0FACA,oIACA,wJACA,kDAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAwC,oIACtC,mBAAGC,KAAK,0BAAWI,MAAO,CAAEC,WAAY,UAAxC,wCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,UACE,uCACA,oBAAIA,UAAU,UAAd,qFACA,uGACA,sIACA,qLACA,qHACA,sHACA,iIACA,0LACA,kGACA,uCAGF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,gQACA,qMACA,qNACA,6IACA,uIACA,iJACA,8DAAuB,SAAvB,6FACA,oFAAsD,gBAAtD,2EACA,kDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAwC,yJACtC,mBAAGC,KAAK,0BAAWI,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,oFACA,iHACA,gHACA,yRACA,0JACA,uIACA,+JACA,2KACA,qKACA,oNACA,kIACA,oJACA,8GACA,mFACA,8GACA,4CAhBF,SAiBE,+CACA,8CACA,6CACA,0KACA,wKACA,6CACA,6CACA,iDAGF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,4JACA,kOACA,iEACA,yLACA,kGACA,kDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAAyC,gEACvC,mBAAGC,KAAK,2BAAYI,MAAO,CAAEC,WAAY,UAAzC,yCADF,OAEA,sBAAMN,UAAU,SAAhB,SACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,4CACA,uGACA,wGACA,gOACA,6HACA,qLACA,wKACA,+KACA,+JACA,kMACA,oIAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAwC,uCACtC,mBAAGC,KAAK,0BAAWI,MAAO,CAAEC,WAAY,UAAxC,wCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,iMACA,gGACA,yCACA,gNACA,+FACA,oFACA,uGACA,qHACA,qJACA,qJACA,yMACA,gKACA,uRACA,gIACA,qIACA,uCACA,mCAEA,qDACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,SAAnB,wBACA,6CAKN,2CAIF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2DAAuC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eAAvC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,6DACA,uBAAMA,UAAU,SAAhB,UACE,yFACA,wKAGF,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACE,iFAGF,sBAAMA,UAAU,UAAhB,wBACA,sBAAMA,UAAU,SAAhB,SACE,iIAGF,sBAAMA,UAAU,UAAhB,uBACA,sBAAMA,UAAU,SAAhB,SACE,sCAGF,sBAAMA,UAAU,UAAhB,wBACA,sBAAMA,UAAU,SAAhB,SACE,iGAGF,sBAAMA,UAAU,UAAhB,mCACA,sBAAMA,UAAU,SAAhB,SACE,sNAGF,sBAAMA,UAAU,UAAhB,gEACA,uBAAMA,UAAU,SAAhB,UACE,mFACA,iFACA,yFACA,gKACA,wGACA,wMAGF,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACE,oGACA,4DAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4CAAuC,kJACrC,mBAAGC,KAAK,yBAAUI,MAAO,CAAEC,WAAY,UAAvC,sCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,kBAAgC,WAAhC,OACA,uBAAMA,UAAU,SAAhB,UACE,qOACA,mCAAM,2BAAN,QACA,mCAAM,wCAAN,QACA,sMACA,mCAAM,oCAAN,wCACA,mCAAM,wCAAN,wCACA,mCAAM,8CAAN,4BACA,qFACE,uBAAMA,UAAU,SAAhB,UACE,0CAAa,cAAb,OACA,oCAAO,gBAAP,OACA,uCAAU,sBAAV,iCAGJ,wCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4CAAuC,6MACrC,mBAAGC,KAAK,yBAAUI,MAAO,CAAEC,WAAY,UAAvC,sCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,mEACA,uBAAMA,UAAU,SAAhB,UACE,sZAEA,2FACA,qJACA,kIALF,IAK6D,uBAC3D,2HACA,wGACA,2HACA,gIACA,gGACA,2EACA,2GACA,yJACA,iJACA,yKACA,mKACA,sNACA,sNACA,iNACA,+MACA,qIACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+CAA0C,mFACxC,mBAAGC,KAAK,4BAAaI,MAAO,CAAEC,WAAY,UAA1C,yCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,6EACA,uBAAMA,UAAU,SAAhB,UACE,uHACA,uJACA,0GACA,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+CAA0C,yFACxC,mBAAGC,KAAK,4BAAaI,MAAO,CAAEC,WAAY,UAA1C,yCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACE,uGACA,6FACA,uEACA,uEACA,0HACA,+FACA,0DACA,8EACA,oFACA,sGACA,yHAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAwC,2IACtC,mBAAGC,KAAK,0BAAWI,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,wDACA,uBAAMA,UAAU,SAAhB,UACE,2DACA,wKACA,+SACA,8IACA,oCAAM,sBAAMA,UAAU,UAAhB,gIACJ,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,yEACA,gFACA,8DACA,8FACA,gHACA,8FACA,gFACA,4EAIN,mCAAK,sBAAMtF,UAAU,UAAhB,gEACH,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,sDAAwB,mFAAxB,OACA,0CAAY,6EAAZ,OACA,6CAAe,qGAAf,OACA,2CAAa,wHAAb,OACA,4CAAc,qGAAd,OACA,2CAAa,4GAAb,OACA,+CAAiB,sEAAjB,OACA,2CAAa,kFAAb,OACA,8CAAgB,sEAAhB,OACA,2CAAa,yFAAb,OACA,8CAAgB,0FAAhB,OACA,2CAAa,qEAAb,OACA,0CAAY,iGAAZ,OACA,+CAAiB,+FAAjB,OACA,2CAAa,+FAAb,OACA,8CAAgB,oFAAhB,OACA,4CAAc,0FAAd,OACA,0CAAY,oFAAZ,OACA,mDAAqB,wDAArB,OACA,+CAAiB,wHAAjB,OACA,gDAAkB,iHAAlB,OACA,wCAAU,gFAAV,OACA,uEAA+B,gJAA/B,OACA,4CAIN,uCAGF,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAAyC,yFACvC,mBAAGC,KAAK,2BAAYI,MAAO,CAAEC,WAAY,UAAzC,wCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,wEACA,uBAAMA,UAAU,SAAhB,UACE,iOACA,gJACA,4NACA,2NACA,wOACA,yOACA,6KACA,4PACA,sLACS,+CADT,MAC8B,oDAD9B,MACmD,oFADnD,6KAEA,2NACA,0NACA,gKACA,6NAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAAyC,kHACvC,mBAAGC,KAAK,2BAAYI,MAAO,CAAEC,WAAY,UAAzC,wCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,yKACA,uOACA,mLACA,mLACA,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4CAAuC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,+HACA,wJACA,+HACA,6IACA,+NACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4CAAuC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,+KACA,4EACA,iIACA,qJACA,iJACA,yHACA,+GACA,4IACA,8GACA,qEACA,iMACA,oGACA,wIACA,4HACA,mFACA,0KACA,4GACA,+GACA,yHAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAwC,yFACtC,mBAAGC,KAAK,0BAAWI,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,wIACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CAAsC,wHACpC,mBAAGC,KAAK,wBAASI,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,iIACA,oHACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,6GACA,mFACA,mIACA,mEACA,qEACA,mFACA,8DACA,+EACA,mFACA,2CACA,4FACA,4CACA,sDACA,kFACA,mEACA,iFAKN,gIACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,uEACA,mEACA,qEACA,mFACA,8DACA,sDACA,kFACA,mEACA,iFAKN,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAAyC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAzC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,mKACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,iDAA4C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA5C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,mIACA,oNACA,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,yDAAoD,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAApD,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,0CACA,uBAAMA,UAAU,SAAhB,UACE,8IACA,sHAGF,sBAAMA,UAAU,UAAhB,2CACA,sBAAMA,UAAU,SAAhB,SACE,iLAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+CAA0C,4GACxC,mBAAGC,KAAK,4BAAaI,MAAO,CAAEC,WAAY,UAA1C,yCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACE,iDAAc,gKAAd,OACA,uCAGF,sBAAMA,UAAU,UAAhB,sIACA,uBAAMA,UAAU,SAAhB,UACE,yEACA,mFAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2CAAsC,qLACpC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,+BACA,sBAAMA,UAAU,SAAhB,SACE,oDAGF,sBAAMA,UAAU,UAAhB,uCACA,uBAAMA,UAAU,SAAhB,UACE,kHACA,qHACA,uDACA,2DAGF,sBAAMA,UAAU,UAAhB,0CACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,0HACE,oCAAM,kEAAN,UAEF,+HACE,mCAAK,0DAAL,UAEF,oFACE,mCAAK,uCAAL,UAEF,oFACE,mCAAK,0DAAL,UAEF,wJACE,mCAAK,4CAAL,UAEF,uGACE,mCAAK,uCAAL,UAEF,oHACE,mCAAK,2CAAL,UAEF,6EACE,mCAAK,uCAAL,UAEF,iEACE,mCAAK,uCAAL,UAEF,0FACE,mCAAK,0DAAL,UAEF,0FACE,mCAAK,0DAAL,UAEF,0HACE,mCAAK,0DAAL,UAEF,8GACE,mCAAK,uCAAL,UAEF,yGACE,mCAAK,uCAAL,UAEF,uJACE,mCAAK,uCAAL,UAEF,2HACE,mCAAK,uCAAL,eAKN,sBAAMtF,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,gDAA2C,6GACzC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,oCACA,uBAAMA,UAAU,SAAhB,UACE,0CACE,sDACA,8DACA,8DACA,uFAEF,0CACE,uDACA,6DACA,4DACA,6EAIJ,sBAAMA,UAAU,UAAhB,2DACA,uBAAMA,UAAU,SAAhB,UACE,yEACA,uGACA,kDACA,yFACA,wHACA,yIACA,gRACA,yQACA,sGACA,2KACA,uCAGF,sBAAMA,UAAU,UAAhB,mDACA,sBAAMA,UAAU,SAAhB,SACE,qBAAIK,MAAO,CAAEiF,UAAW,QAAxB,UACE,oEACE,mCAAK,uCAAL,UAEF,wFACE,mCAAK,uCAAL,UAEF,oEACE,mCAAK,uCAAL,UAEF,mKACE,mCAAK,6EAAL,UAEF,yCAIJ,sBAAMtF,UAAU,UAAhB,iDACA,uBAAMA,UAAU,SAAhB,UACE,+EACA,yDACA,uDACA,sDACA,wDACA,yFACA,yEACA,mFACA,sPAGF,sBAAMA,UAAU,UAAhB,kDACA,uBAAMA,UAAU,SAAhB,UACE,iEAAoB,qFAApB,OACA,mEAAsB,uFAAtB,OACA,iEAAoB,iGAApB,OACA,oEAAuB,qGAAvB,OACA,mEAAsB,8GAAtB,UAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6CAAwC,+HACtC,mBAAGC,KAAK,0BAAWI,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,iCACA,uBAAMA,UAAU,SAAhB,UACE,0JACA,yCACE,4DAEF,iDACE,4DAEF,uCAGF,sBAAMA,UAAU,UAAhB,kDACA,uBAAMA,UAAU,SAAhB,UACE,yHACA,gHACA,4IACA,qQACA,uHACA,+HACA,gIAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,kEAAyC,sEACvC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oHACA,iHACA,qJACA,kKACA,6EACA,wGACA,oMACA,mKACA,oCACA,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,gDAA2C,yFACzC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,2FACA,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,uCAC7B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uDCxsCHiI,GAnEQ,SAAClI,GAEpB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wDAA8C,mBAAGC,KAAK,qCAAiBI,MAAO,CAAEC,WAAY,UAA9C,kDAA9C,OACA,uBAAMN,UAAU,SAAhB,UACI,mCAAK,mBAAGE,KAAK,8CAA8CC,OAAO,SAAS4H,IAAI,aAA1E,2DAAL,OACA,4FACA,yLACA,yJACA,iIACA,8KACA,+OACA,2JACA,0MACA,2GACA,oKAMZ,sBAAM/H,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,2CACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,2FACA,0DACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCwErBkI,GA/HQ,SAACnI,GAGpB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+DAA2C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA3C,OACA,uBAAMN,UAAU,SAAhB,UAEI,oCACI,yBAASA,UAAU,UAAnB,mCACA,uBAAMA,UAAU,SAAhB,UACI,gHACA,4FAIR,oCACI,yBAASA,UAAU,UAAnB,+CACA,uBAAMA,UAAU,SAAhB,UACI,wFACA,8EACA,0HACA,0HACA,yJACA,yJACA,qLACA,oHACA,kKACA,sGACA,iGACA,kGACA,sHAIR,oCACI,yBAASA,UAAU,UAAnB,+CACA,uBAAMA,UAAU,SAAhB,UACI,mIACA,qIACA,2KACA,4IACA,8JACA,mHACA,uGAIR,oCACI,yBAASA,UAAU,UAAnB,+CACA,uBAAMA,UAAU,SAAhB,UACI,uHACA,iGACA,sGACA,uIACA,uIACA,qGACA,0HACA,wLACA,yLACA,6LACA,qBAAIA,UAAU,SAAd,cAAwB,sBAAMA,UAAU,UAAhB,sBACpB,2HACA,gHACA,uJACA,yEACA,yHAKZ,oCACI,yBAASA,UAAU,UAAnB,+CACA,uBAAMA,UAAU,SAAhB,UACI,wHACA,6GACA,uKACA,uKAIR,oCACI,yBAASA,UAAU,UAAnB,mCACA,sBAAMA,UAAU,SAAhB,SACI,iDAQpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCuNrBmI,GA1UQ,SAACpI,GACtB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2FAA8C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eAA9C,OACA,uBAAMN,UAAU,SAAhB,UAEE,oCACE,yBAASA,UAAU,UAAnB,oEACA,sBAAMA,UAAU,SAAhB,SACE,0MAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,sBAAMA,UAAU,SAAhB,SACE,8GAIJ,oCACE,yBAASA,UAAU,UAAnB,2BACA,sBAAMA,UAAU,SAAhB,SACE,0HAIJ,oCACE,yBAASA,UAAU,UAAnB,4BACA,sBAAMA,UAAU,SAAhB,SACE,4JAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,sBAAMA,UAAU,SAAhB,SACE,gIAIJ,oCACE,yBAASA,UAAU,UAAnB,sFACA,uBAAMA,UAAU,SAAhB,UACE,uHACA,uKACE,yNAEF,iPACA,yCAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,sBAAMA,UAAU,SAAhB,SACE,0JAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,4MACA,iDAIJ,oCACE,yBAASA,UAAU,UAAnB,2BACA,sBAAMA,UAAU,SAAhB,SACE,+IAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,uJAEA,gLACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,qKACA,sEACA,8HACA,0EACA,2EACA,mJACA,6HACA,0QAKN,+MACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,+GACA,sEACA,4HACE,uBAAMA,UAAU,SAAhB,UACE,mIACA,4HACA,uDACE,6IACA,6RACA,qKAEF,0CAGJ,gOACA,6PACA,6JACA,iJACA,iNACA,2IAKN,0LACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,uIACA,uCACA,wHACA,yLACA,uLAKN,mDACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,8EACA,wHAKN,yCACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,+GACA,uGACA,wGACA,gOACA,6HACA,qLACA,wKACA,+KACA,+JACA,kMACA,kIAKN,mDACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,oEACA,iGACA,wHACA,kJACA,6FACA,qGACA,gYAKN,8CACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,sJACA,sHACA,sHACA,kHACA,4GACA,kHACA,sHACA,6HACA,sHACA,6HACA,oHACA,6IACA,wJACA,wGAKN,sDACE,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,UAAnB,4DAKN,+CACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,wBACA,qCACA,6CAKN,oCACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,wBACA,qCACA,mDAQV,oCACE,yBAASA,UAAU,UAAnB,iCACA,sBAAMA,UAAU,SAAhB,SACE,0JAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,sBAAMA,UAAU,SAAhB,SACE,0JAIJ,oCACE,yBAASA,UAAU,UAAnB,2BACA,uBAAMA,UAAU,SAAhB,UACE,+KACA,gJACA,0KACA,qGACA,4IACA,4IACA,kJAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,sBAAMA,UAAU,SAAhB,SACE,8IAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,sBAAMA,UAAU,SAAhB,SACE,iMAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,sBAAMA,UAAU,SAAhB,SACE,sOAIJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,8MAEA,0DACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,wBACA,qCACA,6CAKN,oCACE,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,UAAnB,wBACA,qCACA,2DAYhB,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sDCxDHoI,GAtQK,SAACrI,GAEjB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+EAAsD,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,eAAtD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,mBAAGE,KAAK,qFAAyFC,OAAO,SAAS4H,IAAI,aAArH,2DAAL,OACA,yFACA,mEACA,gEACA,wDACA,0FACA,wEACA,qLACA,8FACA,sEACA,qGACA,8HACA,8GACA,+HACA,4DACA,oGACA,2KACA,+GACA,sKACA,kEACA,+DACA,sFACA,kFACA,yEACA,oCACA,6KACA,gKACA,+IAMhB,sBAAM/H,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kEAA8C,mBAAGC,KAAK,+CAAiBI,MAAO,CAAEC,WAAY,UAA9C,4DAA9C,OACA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,wGACA,8EACA,oCACA,uCAGJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,oMACA,6GACA,+CACA,+CACA,yEACA,kEACA,wDACA,iFACA,qDACA,6FACA,kHACA,gJACA,uJACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,+EAAiD,mBAAGC,KAAK,4DAAoBI,MAAO,CAAEC,WAAY,UAAjD,yEAAjD,OACA,uBAAMN,UAAU,SAAhB,UACI,yOACA,sBAAMA,UAAU,UAAhB,6BACA,uBAAMA,UAAU,SAAhB,UACI,uDACA,yHACA,6DACA,8DACA,yDACI,mCAAM,kBAAN,OACA,mCAAM,KAAN,OACA,mCAAM,wBAAN,6IACA,mCAAM,yBAAN,yDACA,mCAAM,gCAAN,mDACA,mCAAM,qBAAN,qDACA,mCAAM,uBAAN,0DACA,mCAAM,yCAAN,uEACA,mCAAM,oCAAN,oIACA,mCAAM,KAAN,UAEJ,8DACA,uGACA,mKACA,sFACA,qHACA,yHACA,+JACA,4DACA,oDACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qDAAsC,mBAAGC,KAAK,kCAASI,MAAO,CAAEC,WAAY,UAAtC,+CAAtC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,uBAAMA,UAAU,SAAhB,UACI,oGACA,uDACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6EAA+C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACI,uEACA,oXAEA,iPACA,uIACA,+RACA,uCAGJ,sBAAMA,UAAU,UAAhB,0DACA,uBAAMA,UAAU,SAAhB,UACI,yGACA,yHACA,+LACA,uHACA,yKACA,iMACA,mOAGJ,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACI,kKACA,iEAFJ,IAEgD,uBAC5C,sEAHJ,IAGqD,uBACjD,6DAJJ,IAI4C,uBACxC,+HACA,qEACA,kDACA,uCAIJ,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACI,2JACA,wNACA,mCAAM,IAAN,QACA,iDACA,mCAAM,IAAN,QACA,gEACA,0JACA,kEACA,mCAAM,IAAN,QACA,iKACA,oJACA,+IACA,+HACA,sLACA,qUACA,mCAAM,IAAN,QACA,oCACA,uCAGJ,sBAAMA,UAAU,UAAhB,gEACA,uBAAMA,UAAU,SAAhB,UACI,+EACA,iDACA,yIACA,+QAJJ,IAI+E,uBAC3E,yCALJ,IAKwB,uBACpB,8EACI,wFACA,8CACA,iFACA,yDAEJ,qEACA,mDACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCjBrBqI,GAzOM,SAACtI,GAEpB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,gFAAuD,mBAAGC,KAAK,6DAA0BI,MAAO,CAAEC,WAAY,UAAvD,0EAAvD,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,mBAAGE,KAAK,mCAAmCC,OAAO,SAAS4H,IAAI,aAA/D,2DAAL,OACA,0EACA,mCAAK,mBAAG7H,KAAK,sDAAsDC,OAAO,SAAS4H,IAAI,aAAlF,yGAAL,QACA,yFACA,mEACA,gEANF,IAM0C,uBAExC,wDACA,0FACA,wEACA,qLACA,8FACA,sEACA,qGACA,8HACA,8GACA,+HACA,4DAlBF,IAkB4B,uBAE1B,oFACA,+IACA,yJACA,yLAAwC,gHAAxC,OACA,iQACA,8KACA,iIACA,6DACA,iEACA,kIACA,4FACA,wLACA,4FAhCF,IAgCyB,uBAEvB,yMACA,uLACA,8KAMR,sBAAM/H,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6DAA8C,mBAAGC,KAAK,0CAAiBI,MAAO,CAAEC,WAAY,UAA9C,uDAA9C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAASK,MAAO,CAAEiF,UAAW,QAA7C,UACE,oCACA,sHACA,6IACA,2HACA,kFALF,IAK6C,uBAC3C,mCAAM,mBACJ,mCAAM,iBAAN,IAAwB,6KAAxB,OACA,mCAAM,kBAAN,MAA2B,4FAC3B,mCAAM,yBAAN,MAAkC,sFAClC,mCAAM,cAAN,MAAuB,wFACvB,mCAAM,gBAAN,MAAyB,6FACzB,mCAAM,kCAAN,MAA2C,sGAA3C,OACA,mCAAM,6BAAN,MAAsC,0KAExC,mCAAM,KAAN,OAfF,IAeoB,uBAClB,4DACA,2GACE,qDACA,qDACA,4CACA,iFACA,qHACA,yDACA,+GACA,0CACA,wDACA,oCACA,iHACA,8DACA,4CACA,uCAEF,+CAMR,sBAAMtF,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+EAAiD,mBAAGC,KAAK,4DAAoBI,MAAO,CAAEC,WAAY,UAAjD,yEAAjD,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCADF,IAC2C,uBACzC,yOACA,uBAAMA,UAAU,SAAhB,UACE,yHACA,yHACA,+HACA,sJACA,sGACA,oJACA,mQACA,6IACA,gJACA,wFACA,2GACA,wLACA,oCACA,wGACA,4DACA,6LACA,6EACA,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6EAA+C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACE,uEACA,oXAEA,iPACA,uIACA,+RACA,uCAGF,sBAAMA,UAAU,UAAhB,0DACA,uBAAMA,UAAU,SAAhB,UACE,yGACA,yHACA,+LACA,uHACA,yKACA,iMACA,mOAGF,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACE,qDACA,gIACA,2DACA,kDACA,2MACA,wFACA,iEAGF,sBAAMA,UAAU,UAAhB,8CACA,uBAAMK,MAAO,CAAEiF,UAAW,QAAUtF,UAAU,SAA9C,UACE,6EAA+C,6KAA/C,OACA,mCAAM,IACJ,iDACA,mCAAM,IACJ,gEACA,0JACA,qEAEF,mCAAM,IAAN,QACA,gEAAkC,qIAAlC,OACA,qEAAuC,iHAAvC,OACA,qFAAuD,6FAAvD,QACA,wEAA0C,2FAA1C,OACA,6DAA+B,4JAA/B,QACA,0DAA4B,8SAA5B,WAEF,mCAAM,IAAN,QACA,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gEACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sDCrDHsI,GAxKI,SAACvI,GAEhB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCAAiD,mBAAGC,KAAK,oBAAoBI,MAAO,CAAEC,WAAY,UAAjD,iCAAjD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gDACA,uBAAMA,UAAU,SAAhB,UACI,uSACA,yPAGJ,sBAAMA,UAAU,UAAhB,iFACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,QAAd,wNACA,oBAAIA,UAAU,SAAd,2BAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gDACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iFACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,QAAd,gBACA,oBAAIA,UAAU,SAAd,wBAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gDACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iFACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,QAAd,gBACA,oBAAIA,UAAU,SAAd,wBAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gDACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iFACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,QAAd,gBACA,oBAAIA,UAAU,SAAd,wBAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gDACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iFACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,QAAd,gBACA,oBAAIA,UAAU,SAAd,wBAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gDACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,iFACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,oBAAIA,UAAU,QAAd,gBACA,oBAAIA,UAAU,SAAd,gCC0OjBuI,GAtYU,SAACxI,GAExB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qFAA6C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA7C,OACA,uBAAMN,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACE,uCAGF,sBAAMA,UAAU,UAAhB,2BACA,uBAAMA,UAAU,SAAhB,UACE,oHACA,iGACE,4DACA,wDACA,2DACA,4DACA,yDACA,iEAEF,uCAGF,sBAAMA,UAAU,UAAhB,sDACA,sBAAMA,UAAU,SAAhB,SACE,iLAGF,sBAAMA,UAAU,UAAhB,2FACA,sBAAMA,UAAU,SAAhB,SACE,4YAIF,sBAAMA,UAAU,UAAhB,qFACA,uBAAMA,UAAU,SAAhB,UACE,kHACA,wPACA,sEACA,iPACA,+MAGF,sBAAMA,UAAU,UAAhB,oHACA,sBAAMA,UAAU,SAAhB,SACE,gOAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,kCAAkC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,yPACA,0PAGF,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,oCAAO,uBAAP,mCACA,oCAAO,wBAAP,4FACA,oCAAO,yBAAP,yEACA,oCAAO,wBAAP,4FACA,oCAAO,yBAAP,4EAGF,sBAAMA,UAAU,UAAhB,+GACA,uBAAMA,UAAU,SAAhB,UACE,kFACA,8FAGF,sBAAMA,UAAU,UAAhB,oLACA,sBAAMA,UAAU,SAAhB,SACE,kEAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,8CAAoC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAApC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACE,oCAAO,EAAP,OAAc,EAAd,OAAqB,EAArB,6JACA,oCAAO,MAAP,oDACA,oCAAO,MAAP,4DACA,oCAAO,MAAP,2DACA,oCAAO,+CAAP,2FACA,oCAAO,wBAAP,2FACA,oCAAO,OAAP,UACA,oCAAO,OAAP,mDACA,oCAAO,OAAP,4DACA,oCAAO,OAAP,4HACA,oCAAO,OAAP,kGACA,oCAAO,oCAAP,kEACA,oCAAO,qBAAP,sDACA,oCAAO,+CAAP,2FACA,oCAAO,4CAAP,gIACA,oCAAO,2CAAP,uIACA,oCAAO,2CAAP,yKACA,oCAAO,uDAAP,2HACA,oCAAO,wDAAP,2HACA,oCAAO,uDAAP,4HACA,oCAAO,wDAAP,0HACA,oCAAO,0EAAP,8GACA,oCAAO,2EAAP,kGACA,oCAAO,2EAAP,mIACA,oCAAO,2EAAP,sIAGF,sBAAMA,UAAU,UAAhB,2FACA,sBAAMA,UAAU,SAAhB,SACE,0HAGF,sBAAMA,UAAU,UAAhB,uGACA,sBAAMA,UAAU,SAAhB,SACE,oNAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qDAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4DACA,uBAAMA,UAAU,SAAhB,UACE,6FACA,uFACA,mGACA,sEACA,oGACA,0EACA,2HACA,2FAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,wCAAmC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAnC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,kDACA,uBAAMA,UAAU,SAAhB,UACE,0DAAc,KAAd,uBAAyB,KAAzB,iCACA,gDACA,oEACA,gDACA,wCACA,gDACA,yCAGF,sBAAMA,UAAU,UAAhB,oDACA,uBAAMA,UAAU,SAAhB,UACE,yCAAY,MAAZ,UACA,sEACA,wCAAW,IAAX,uBACA,oCAAO,IAAP,uBACA,2CAGF,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACE,4CACA,8CAGF,sBAAMA,UAAU,UAAhB,6EACA,uBAAMA,UAAU,SAAhB,UACE,yCAAY,kBAAZ,UAA4B,kBAA5B,sBACA,yCAAY,kBAAZ,UAA4B,kBAA5B,2BACA,yCAAY,kBAAZ,UAA4B,kBAA5B,yBACA,yCAAY,kBAAZ,UAA4B,kBAA5B,iCACA,yCAAY,kBAAZ,UAA4B,kBAA5B,uBACA,yCAAY,kBAAZ,UAA4B,kBAA5B,iCACA,mJACA,0IAGF,sBAAMA,UAAU,UAAhB,mHACA,uBAAMA,UAAU,SAAhB,UACE,kIACA,sJACA,sHACA,0IACA,yIACA,sHACA,2IACA,oIACA,8HACA,2IACA,mIACA,mIACA,wIACA,gJACA,gJACA,kKAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,wCAAmC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAnC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,mDACA,uBAAMA,UAAU,SAAhB,UACE,uEACA,sCACA,gDACA,2CAGF,sBAAMA,UAAU,UAAhB,sJACA,uBAAMA,UAAU,SAAhB,UACE,oHACA,qCACA,+CACA,sGACA,mHACA,2CAGF,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACE,sDACA,6CAAgB,SAAhB,4BACA,4CAAe,SAAf,eACA,4CAAe,YAAf,iBACA,uEACA,yEACA,6CAAgB,WAAhB,2BACA,0DACA,4HACA,yHAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,kCAAkC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,6DACA,uBAAMA,UAAU,SAAhB,UACE,+FACA,4EACA,uFAGF,sBAAMA,UAAU,UAAhB,4DACA,sBAAMA,UAAU,SAAhB,SACE,gFAGF,sBAAMA,UAAU,UAAhB,sDACA,sBAAMA,UAAU,SAAhB,SACE,6EAGF,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,oCAAO,oBAAP,wDACA,oCAAO,qCAAP,kBAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,kCAAkC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,gEAAoB,IAApB,OACA,gDACA,mCAAM,IAAN,UAGF,sBAAMA,UAAU,UAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACE,qLAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4BAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,mFACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAQR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,mCAAmC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAnC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,gEAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,sBAAgC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sDC86BHwI,GAvyCK,SAACzI,GACnB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,6BACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,2DAAuC,sCACrC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,2CACH,0GACA,4JACE,0KACA,yFACA,gKACA,0GACA,mHAEF,mCAAK,mEACH,iHACA,oJACA,qGAEF,6DACA,uCAEF,mCAAK,0CACH,uCAEF,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,wCAAwC,sCACtC,mBAAGC,KAAK,qBAAWI,MAAO,CAAEC,WAAY,UAAxC,kCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACE,oCAAM,2CACJ,yHACE,wGACF,sDAAwB,sEAAxB,OACA,0DAA4B,sFAC5B,yDAA2B,4FAC3B,wDAA0B,4FAC1B,2DAA6B,kGAC7B,2DAA6B,4FAC7B,8EAAgD,8FAChD,yDAA2B,+EAC3B,mLACiC,0CACjC,oCAAM,0CACN,oCAAM,6CAER,mCAAK,2CACH,2DACA,0DAA4B,sFAC5B,yDAA2B,4FAC3B,wDAA0B,4FAC1B,2DAA6B,qGAE/B,uCAGF,sBAAMA,UAAU,UAAhB,2DACA,uBAAMA,UAAU,SAAhB,UACE,iDAAmB,8IACnB,mDAAqB,sKACrB,2HACA,qDAAuB,2JACvB,6DAA+B,+GAC/B,sDAAwB,+GACxB,mDAAqB,6FACrB,uCAGF,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACE,+DACE,uBAAMA,UAAU,SAAhB,UACE,mCAAK,sBAAMA,UAAU,UAAhB,qDAAL,OACA,gHACA,0CAGJ,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,sCAAsC,sCACpC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,6CACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,0CACH,yDACA,2DAA6B,2GAA7B,OACA,4DAA8B,uCAA9B,OACA,+HAAqC,uCAArC,OACA,8EACA,8EACA,yDACA,sOACA,qLACA,+KACA,2MACA,2HACA,oCACA,uCAEF,mCAAK,0CACH,uCAEF,oCACA,oCACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,sCAAsC,0HACpC,mBAAGC,KAAK,mBAASI,MAAO,CAAEC,WAAY,UAAtC,gCADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,kFACA,sDACE,qLACA,mCAAK,wEAAL,IAA4B,4IAC1B,mCAAK,2DACH,2KACA,8IACA,mIACA,0KACA,0MACA,qMACA,6IAEF,mCAAK,mEACH,iGACA,uGACA,sNACA,kKACA,sLACA,gIACA,wHACA,oGACA,+GACA,2EACA,oJAGJ,uCAEF,oJACA,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,2FACH,mEACA,qDACE,sBAAMA,UAAU,SAAhB,SACE,0CACE,qDAAwB,WAAxB,oGACA,wDAA2B,YAA3B,4DACA,qFACA,yOACA,wKACA,8LACA,+CAAkB,YAAlB,0EACA,kLACA,4HAEA,sDAAyB,IAAzB,KAA+B,4DAC7B,qHACA,uEACA,gDAAmB,UAAnB,QACA,kDAAqB,mBAArB,iGAEF,mCAAM,KAAN,OACA,mEAAsC,IAAtC,IAA2C,4DACzC,qHACA,2EACA,gDAAmB,UAAnB,WAEF,mCAAM,KAAN,OACA,sDAAyB,IAAzB,IAA8B,uGAC5B,gDACA,4DACA,0CAAa,mBAAb,QACA,8DAEF,mCAAM,KAAN,OACA,uKAIN,iDACA,wMACE,uBAAMA,UAAU,SAAhB,UACE,+BACE,0CACA,sBAAMA,UAAU,QAAhB,qBAEF,+BACE,uCACA,sBAAMA,UAAU,QAAhB,mBACA,sBAAMA,UAAU,QAAhB,iBACA,sBAAMA,UAAU,QAAhB,qBACA,uBAAMA,UAAU,QAAhB,qCAAgD,kKAGlD,+BACE,kDACA,sBAAMA,UAAU,QAAhB,kBACA,sBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,QAAhB,gBAA2B,0JAE7B,+BACE,kDACA,sBAAMA,UAAU,QAAhB,kBACA,sBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,QAAhB,mBAA8B,sHAEhC,+BACE,kDACA,sBAAMA,UAAU,QAAhB,kBACA,sBAAMA,UAAU,QAAhB,iBACA,uBAAMA,UAAU,QAAhB,4BAAuC,+IAAvC,UAEF,+BACE,kDACA,sBAAMA,UAAU,QAAhB,kBACA,sBAAMA,UAAU,QAAhB,iBACA,uBAAMA,UAAU,QAAhB,4BAAuC,oIAAvC,UAEF,+BACE,kDACA,sBAAMA,UAAU,QAAhB,mBACA,sBAAMA,UAAU,QAAhB,iBACA,uBAAMA,UAAU,QAAhB,4BAAuC,oIAAvC,UAEF,+BACE,2FACA,sBAAMA,UAAU,QAAhB,8CACA,sBAAMA,UAAU,QAAhB,iBACA,uBAAMA,UAAU,QAAhB,oEAAsD,6HAAtD,UAEF,+BACE,yCACA,sBAAMA,UAAU,QAAhB,kBACA,sBAAMA,UAAU,QAAhB,iBACA,uBAAMA,UAAU,QAAhB,4BAAuC,8GAAvC,gBAIN,mEACA,4EACA,6KACA,mCAAK,yJACH,uBAAMA,UAAU,SAAhB,UACE,0GACA,mLAIJ,scAEA,2DACA,2DACA,+DAGF,mCAAK,yCACH,oCACA,uCAEF,mCAAK,0CACH,0CAIJ,sBAAMA,UAAU,UAAhB,yDACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,kFACH,8CACA,oDACA,gMACA,kIACA,sPACA,4KACA,iJAEF,uCAGF,sBAAMA,UAAU,UAAhB,gCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,mGACH,kFACA,2GACA,kHACA,oJACE,qLACA,uLAEF,uHACA,mHACE,4HACA,uCAEF,uCAEF,+CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,sCAAsC,sCACpC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,6CACA,uBAAMA,UAAU,SAAhB,UACE,yDACA,iJACA,+EACA,uCAGF,sBAAMA,UAAU,UAAhB,4CACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,0CACH,yGACA,mIACA,oGACA,uHACA,uJACA,4DACA,2DACA,4DACA,gEACA,0DACA,8DACE,qHAEF,gDAEF,mCAAK,+DACH,oHACA,gIACA,2EACA,uFACA,uDACA,sDACA,6DACA,uCAEF,mCAAK,oCACH,uCAEF,uCAGF,sBAAMA,UAAU,UAAhB,yDACA,uBAAMA,UAAU,SAAhB,UACE,4FACE,4HACA,mHACA,qLACA,oKACA,gJACA,oHACA,mHACA,2GACA,wHACA,sLACA,mIAEF,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,uCAAuC,sCACrC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACE,oMACA,sRACA,6PACA,sLACA,6KACA,6DACE,uDACA,8QACA,0CAIJ,sBAAMA,UAAU,UAAhB,uCACA,uBAAMA,UAAU,SAAhB,UACE,0FACA,4LACA,2JACE,qLACA,gRAEF,0KACE,yKACA,yQACA,+LAEF,+MACE,yQACA,uVAEA,wRACA,4DAAgB,IAAhB,UAA4B,IAA5B,oCAAmD,IAAnD,UAA+D,IAA/D,gBAEF,8MACE,qOAEF,uCAGF,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,0CACH,8IACA,+UAFF,IAGyF,uBACvF,kGACA,+IACA,kGACE,2GACA,kFACA,oTAEA,yKACA,sHAEF,8DACA,sDACA,sDAAyB,IAAzB,6DACA,0DAA6B,IAA7B,yDACA,0DAA6B,IAA7B,yDACA,0DAA6B,IAA7B,yDACA,0DAA6B,IAA7B,yDACA,0DAA6B,IAA7B,yDACA,0DAA6B,IAA7B,yDAtBF,IAsBmE,uBAEjE,mCAAK,oEAAL,OACA,gOAEA,sIACA,gJACA,sNACA,gDACA,yDACA,kHAhCF,IAgCqC,uBACnC,mCAAK,oEAAL,OACA,yGACE,8GAEF,sDACA,gDACA,yDAvCF,IAuCmC,uBAEjC,mCAAK,oEAAL,OACA,oHACA,yIACA,sDACA,gDACA,yDA9CF,IA8CmC,uBAEjC,mCAAK,oEAAL,OACA,8HACA,yIACA,sDACA,gDACA,yDArDF,IAqDmC,uBAEjC,mCAAK,wEAAL,OACA,0GACA,0GACA,yIACA,yIACA,qHACA,wGACA,uDACA,iDA/DF,IA+D2B,uBACzB,gGAhEF,IAgEuC,uBACrC,2DAjEF,IAiEqC,uBAEnC,0QACA,mLACA,gDACE,8MACA,sEACA,yEAEF,8IACA,4KAEA,gEACA,gEACA,gEACA,oDACA,mLACA,oRACA,mOACA,+HACA,sHACA,4CACA,iDACE,mQAEF,sMACA,oDACA,0DACA,0DACA,0DACA,4KACA,uDACA,uDACA,+IACA,0DAA6B,IAA7B,oBACA,0DAA6B,IAA7B,oBACA,0DAA6B,IAA7B,oBACA,mDACA,iEACA,yGACA,iEACA,yGACA,iDACE,mHAEF,iGACA,oCACA,oCACA,oCACA,oCAlHF,IAkHc,0BAEd,mCAAK,0CACH,uCAEF,mCAAK,oCACH,uCAEF,uCAGF,sBAAMA,UAAU,UAAhB,8CACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,0CACH,wCACA,2KACA,6CACA,0CACA,oFACA,mDACA,0CACA,iIACA,2FACA,yDACA,oEACA,uHACA,qEACA,qEACA,qEACA,qEACA,qEACA,qEACA,qEACA,uCAEF,mCAAK,0CACH,0CAIJ,sBAAMA,UAAU,UAAhB,0DACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,+CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,uCAAuC,sCACrC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,sDACA,uBAAMA,UAAU,SAAhB,UACE,mKACA,yJACA,uEACA,wFACA,6HACA,4KACA,wHACA,uCAGF,sBAAMA,UAAU,UAAhB,sDACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,+FACH,uBAAMA,UAAU,SAAhB,UACE,iDACA,yFACE,4CACA,sFACA,yDACA,oEACA,8FACA,8DAEF,sEACA,2DACA,gDACE,4CACA,sFACA,yDACA,oEACA,+FACA,qJAlBJ,IAmBQ,uBACN,mCAAK,0EAAL,OACA,uBAAMA,UAAU,SAAhB,UACE,+EADF,IACyD,uBACvD,2DACE,oFACA,+HAJJ,IAKQ,uBACN,8DANF,IAMwC,uBACtC,8FACE,iFACA,iFACA,mFAVJ,IAWQ,uBACN,mCAAM,oDAAN,0EACA,oDACA,oGACA,sJAfF,IAe+D,uBAC7D,+HACE,+GAjBJ,IAkBQ,uBACN,sEACE,gLACA,mIACA,4GAtBJ,IAuBQ,uBACN,sEACE,8OAzBJ,IA0BQ,uBACN,mDACE,gHA5BJ,IA6BQ,uBACN,gEACE,mHA/BJ,IAgCQ,uBACN,4DACE,6DAlCJ,IAmCQ,uBACN,sIACE,gHArCJ,IAsCQ,uBACN,mDACA,0EACA,2DACA,8DACA,6DACA,0DACA,6DACA,4DACA,8KACA,oFACA,6DACA,oHACA,qGAnDF,IAmD6B,gCAIjC,mCAAK,oDACH,uBAAMA,UAAU,SAAhB,UACE,mCAAK,0EAAL,OACA,8DACA,+EAHF,IAGyD,uBACvD,2DACE,qFACA,8HANJ,IAOQ,uBACN,sDACE,kDACA,mDACA,uDAXJ,IAYQ,uBACN,mCAAM,qDAAN,OACA,+DACA,+HACE,+GAhBJ,IAiBQ,uBACN,sEACE,gLACA,mIACA,4GArBJ,IAsBQ,uBACN,sEACE,oQAxBJ,IAyBQ,uBACN,mDACE,iHA3BJ,IA4BQ,uBACN,gEACE,oHA9BJ,IA+BQ,uBACN,4DACE,8DAjCJ,IAkCQ,uBACN,sIACE,mJApCJ,IAqCQ,uBACN,iDACA,wEACA,8DACA,6DACA,6DACA,4DACA,gEACA,2KACA,oFACA,6DACA,gIACA,0CAjDF,IAiDe,uBACb,gGACA,yGACE,uBAAMA,UAAU,SAAhB,UACE,0DACA,+EACA,mEACA,yFAEF,uBAAMA,UAAU,SAAhB,UACE,mEACA,gFACA,2DACA,2GACA,iIACA,gEANF,IAM2B,uBACzB,0IACE,mJACA,8LAIN,+NACE,uBAAMA,UAAU,SAAhB,UACE,wDACA,8EACA,mEACA,yFAEF,uBAAMA,UAAU,SAAhB,UACE,mEACA,kFACA,2DACA,2GACA,iIACA,8DANF,IAMyB,uBACvB,uIACE,mIACA,8LAIN,sIACA,gQACA,iFACA,0CAGJ,uCAGF,sBAAMA,UAAU,UAAhB,kEACA,sBAAMA,UAAU,SAAhB,SACE,sCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qFAA6C,sCAC3C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,qIACA,sMACA,uDACA,mLACA,wLACA,gEACE,sBAAKA,UAAU,SAAf,UACE,6FACA,mCAAK,mBAAGE,KAAK,+DACXC,OAAO,SAAS4H,IAAI,sBADjB,sEAAL,OAFF,IAG8E,uBAC5E,uLACA,mCAAM,4BACJ,mCAAM,6BAAN,OACA,mCAAM,gDAAN,OACA,mCAAM,uBAAN,gDACA,mCAAM,qBAAN,gDACA,mCAAM,0BAAN,mFAEF,mCAAM,iBAAN,aAGJ,4DACA,yDACA,gDACA,uLACA,yLAEA,oFACA,0CACA,kNACE,sBAAK/H,UAAU,SAAf,UACE,oGACA,mOACA,6HACE,2DACA,oGACA,qHAIN,8KACA,iDACA,yKACA,+PAEA,kEACA,4OACA,qMACA,8FACE,sBAAKA,UAAU,SAAf,UACE,iDACA,0DACA,mCAAM,6BAAN,OACA,6CACA,oDAGJ,iDACA,kVA3DF,IA4DkD,uBAChD,0LACE,wDACA,iEACA,sFACA,sDACE,uBAAMA,UAAU,SAAhB,UACE,iDACA,0DACA,mCAAM,sCAAN,OACA,6CACA,oDAGJ,iDACA,6GACE,uBAAMA,UAAU,SAAhB,UACE,sDACA,2DACA,uDAGJ,6GACA,qHACA,uKACE,kHAEF,oHACA,oCACA,uCAEF,mCAAK,qBAAKA,UAAU,UAAf,oHAAL,OACA,iNACA,kDACA,6CACE,sBAAKA,UAAU,SAAf,UACE,+CACA,+LACA,iMACA,+EAAiD,aAAjD,qBAA+E,aAA/E,oEAEA,+EAAiD,aAAjD,qBAA+E,aAA/E,sEAEA,oRAGA,uDAIJ,qDACA,gEACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+CAAqC,sCACnC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,+EACA,0NACA,uCAEF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,mBAAGE,KAAK,4CACXC,OAAO,SAAS4H,IAAI,sBADjB,yEAAL,OAEA,gHACA,yDACA,mDACA,+DACA,0JACA,uOAEA,8DACA,mDACA,gDACA,4DACA,gDACA,iDACA,8CACA,8HACA,qFACE,mCAAK,mBAAG7H,KAAK,oFACXC,OAAO,SAAS4H,IAAI,sBADjB,kEAAL,UAGF,kEACA,4DACA,iIACA,sQACE,qLAEF,gNACA,gEAEA,yIACA,iDACA,oDACA,qFACA,wDACA,wFApCF,IAoCkE,uBAChE,0DACA,wJACA,8LACA,0DACA,oDACE,uBAAM/H,UAAU,SAAhB,UACE,0CACA,uFACA,sEACA,6CACA,gDACA,8EACA,8FACA,+EACA,+EACA,2GACA,2HACA,+EACA,mEACA,6CACA,8CACA,6CACA,oEAGJ,4DACA,sIACA,8DACA,sDACE,uBAAMA,UAAU,SAAhB,UACE,mCAAM,iCAAN,OACA,mCAAM,mCAAN,OACA,mCAAM,sCAAN,OACA,mCAAM,sCAAN,OACA,mCAAM,mCAAN,OACA,mCAAM,wHAAN,qIAIJ,4FACE,uBAAMA,UAAU,SAAhB,UACE,mCAAM,uGAAN,OACA,mCAAM,kFAAN,OACA,mCAAM,eAAN,aAGJ,4DACA,4JACA,wDACA,2DACA,kJACA,iMACE,mCAAK,mBAAGE,KAAK,mDAAmDC,OAAO,SACrE4H,IAAI,sBADD,wEAAL,OAEA,mCAAK,mBAAG7H,KAAK,2FACXC,OAAO,SAAS4H,IAAI,sBADjB,+DAAL,UAGF,6DACA,qLACA,uIAEA,8DACA,mHACA,wCACA,gDACA,mOAEA,sDACA,+DACA,8EACA,8DACA,wEACE,uBAAM/H,UAAU,SAAhB,UACE,uLACA,uHACA,sHACA,qIACA,sEAGJ,6EACE,sBAAMA,UAAU,SAAhB,SACE,mLAGJ,gEACE,sBAAMA,UAAU,SAAhB,SACE,kJAGJ,0HACA,iNACA,uLACA,iEACE,uBAAMA,UAAU,SAAhB,UACE,mCAAM,kBAAN,yEACA,mCAAM,+CAAN,uEACA,8HACA,mCAAM,uBACJ,yEACA,6DACA,mDACA,0EACA,6DACA,4EACA,6DACA,+DAEF,mCAAM,aAAN,aAGJ,4DACA,wEACE,yIACA,6FACA,4FACA,4EAEF,6DACA,gIACA,qCACA,wCAEF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,sCAAsC,sCACpC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,6KACA,iHACA,uCAEF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,2EAA8C,aAA9C,sBAA+E,IAA/E,iBACA,2FAEA,0DACE,6EAAgD,IAC9C,iEACA,sEACA,qFACA,wEACA,mDACA,iDACA,+DACA,8DAEF,mCAAM,IAAN,WAEF,2DACA,yDACE,2FAEF,+GACA,yJACA,wIACA,oDACA,wJACE,yLACA,+JAEF,sCACA,sDACA,gEACA,qDACA,2GACA,uDACA,qDACA,0DACA,4DACA,6FACA,gGACA,wFACA,wEACA,sEACA,8CACE,uBAAMA,UAAU,SAAhB,UACE,4JACA,+HACE,kDACA,kGAIN,gLACA,wFACA,4DACA,4DACA,4DACA,4DACA,4DACA,4DACA,6DACA,gEACA,gDACA,gNAEA,qMACA,iJACA,kGACA,0DACE,uBAAMA,UAAU,SAAhB,UACE,gGACA,8FACA,uFACA,iKACA,oGACA,wGACA,+JACA,wSACA,oKACA,8NACA,oQACA,iMACA,iGACA,+CACA,4CACA,+CACE,uBAAMA,UAAU,SAAhB,UACE,yGACA,6CACA,yCACA,yCACA,qDACA,0CACA,kDACA,kDACA,qDACA,kDACA,+CACA,+DACA,wCACA,8CAGJ,6EACE,2GAEF,4DACA,4DACA,kEAGJ,uCAEF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,sCAC7B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,sCAEF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,wDC18BLyI,GAhVa,SAAC1I,GAE3B,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,6BACE,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qCACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,oFACE,2EAA8C,aAA9C,sBAA+E,IAA/E,mBAEF,iEACA,gEACA,wDACA,0DACA,8HACE,oCAAM,mBAAGE,KAAK,oCAAoCC,OAAO,SAAS4H,IAAI,wBAAtE,uCAEF,kEACA,yHACA,4DACA,8EACA,wCAAW,KAAX,8DACA,iEACA,0EACA,sFACA,sDACA,uFACA,gEACA,mHACA,uFACA,iDACA,wDACA,qCACA,wCAGF,sBAAM/H,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,gEACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,2DACA,uBAAMA,UAAU,SAAhB,UACE,qHACA,yWAEA,+EACA,wKACE,yGACA,0GACA,4LACA,8GAEF,4EACA,6DACA,6HACA,uIACA,gEACA,+EACE,uQACA,kKACA,2KACA,8DACA,uEACA,uCAEF,gEACE,uBAAMA,UAAU,SAAhB,UACE,yGACA,gFACA,wFACA,sFAGJ,2DACA,yDACA,mCAAK,mBAAGE,KAAK,qCAAqCC,OAAO,SAAS4H,IAAI,wBAAtE,+DACA,sHACA,oEACA,0HACA,+DACA,iDACA,2IACA,yHACA,2EACE,uBAAM/H,UAAU,SAAhB,UACE,2IACA,mHACA,2IAGJ,2DACA,gDACA,4DACA,6IACA,oIACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,wCAAwC,uCACtC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,sDACE,wDAEF,+CAMR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,0CAA0C,uCACxC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,sDACE,yEACA,8DAAgC,2EAAhC,OACA,6DACA,yCAAW,2DAAX,OACA,4GACA,wCACA,oCACA,uCAEF,uCAGF,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,8EACA,+CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,+CAA+C,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/C,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACE,sDACE,mCAAK,mBAAGE,KAAK,wCAAwCC,OAAO,SAAvD,oDAAL,uJAEA,kGACA,qDACA,8EACA,gDACA,gDACA,oJACA,gKACA,mCAAK,2HAAL,OACA,qKACA,+NACA,6HACA,8HACA,2LACA,wGACA,sIACA,8zBAKF,oCACA,uCAGF,sBAAMH,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,gDAAsC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACE,qFACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,oDACE,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,mBAAGE,KAAK,2CAA2CC,OAAO,SAAS4H,IAAI,sBAAvE,uDAAL,OAEA,2KACA,sDACA,gDACA,iGACA,uEACA,+DACA,4LACE,qFACA,0DAEF,mEACA,uJACA,qDACA,gLACA,qKACA,sEACA,iEACA,wCACA,6NACA,yDACE,mOAEF,iEACA,uDACA,uDACA,qKACA,4EACA,qJACA,uJACA,4JACA,8KACA,0JACE,wDACA,kDACA,mCAAK,sBAAM/H,UAAU,UAAhB,+BACH,uBAAMA,UAAU,SAAhB,UACE,+CACA,0FACA,uCACE,wDAEF,uCACE,gFACA,0DAEF,sCAVF,IAUgB,uBACd,mCAAM,oCAAN,OACA,uCACE,+EAEF,mCAAM,sCAAN,OACA,uCACE,+EAEF,uCACE,gFAEF,sCAtBF,IAsBgB,uBACd,6DAIN,0DACA,gDACA,uCAGF,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,8CAOR,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACE,wDC0gBL0I,GA70BF,SAAC3I,GAEZ,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,6BACE,uBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,2CAA1B,OACA,mCAAK,wCAAL,OAEA,sBAAMD,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,6EAA0C,sCACxC,mBAAGC,KAAK,0DAAaI,MAAO,CAAEC,WAAY,UAA1C,uEADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,oCACE,yBAASA,UAAU,UAAnB,kEACA,uBAAMA,UAAU,SAAhB,UACE,wPACA,qNACA,+IACA,mCAAK,sBAAMA,UAAU,UAAhB,uFACH,sKACA,uBAAMA,UAAU,SAAhB,UACE,8CACA,6CACA,4CACA,mDACA,4CACA,mDACA,mDACA,oDACA,0DACA,mDACA,4DACA,gDACA,oEACA,yKACA,8CACA,6CACA,6CACA,iDACA,8CACA,8CACA,8CACA,kDACA,6CACA,6CACA,8CACA,6CACA,sDACA,mDACA,mDACA,4DACA,gDACA,gDACA,0CAGJ,0CAIJ,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,kEAAyC,sCACvC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,wEAA0C,sCACxC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,oCACE,yBAASA,UAAU,UAAnB,6CACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,oDACH,mCAAK,sBAAMA,UAAU,UAAhB,yEAAL,OACA,gHACA,yEACA,uGACA,4GACA,kEACA,6EACA,mGACA,wGAEF,uCAGF,sBAAMA,UAAU,SAAhB,SACE,yCAKJ,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4DAAwC,sCACtC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UAEE,oCACE,yBAASA,UAAU,UAAnB,gFACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,mEAAL,0JACA,mCAAK,mEAAL,ofAGA,mCAAK,mEAAL,sPACA,mCAAK,iFAAL,kcAEA,mCAAK,4DAAL,0HACA,mCAAK,qDAAL,sIACA,mCAAK,sDAAL,QACA,mCAAK,qDAAL,0BACA,mCAAK,qDAAL,QACA,mCAAK,qDAAL,QACA,mCAAK,qDAAL,eAKJ,oCACE,yBAASA,UAAU,UAAnB,iEACA,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,yPACA,gaAEA,6LACE,+NACA,kQACA,mYAEA,goBAGA,mCAAK,mBAAGE,KAAK,+CAA+CC,OAAO,SAA9D,wFAAL,QAEA,uCAEF,oCACA,sBAAMH,UAAU,UAAhB,6CACA,mCAAK,iEACH,+KACA,yHACA,qUAGF,mCAAK,wEACH,4NACA,uCAEF,mCAAK,uEACH,uCAEF,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,0CAKJ,oCACE,yBAASA,UAAU,UAAnB,sBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,oCACE,yBAASA,UAAU,UAAnB,sBACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,uEAAyC,sCACvC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,kDAAwC,sCACtC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4DAAwC,sCACtC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,oCACE,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,sBAAMA,UAAU,SAAhB,SACE,oCACE,0BAASA,UAAU,SAAnB,4DAAwC,sCACtC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAMN,UAAU,SAAhB,UACE,oCACE,yBAASA,UAAU,UAAnB,gEACA,uBAAMA,UAAU,SAAhB,UACE,4EACA,gEACA,6EACA,6HACA,mPACA,sQACA,oKACA,8JACA,0CAIJ,oCACE,yBAASA,UAAU,UAAnB,uDACA,uBAAMA,UAAU,SAAhB,UACE,gGACA,gGACA,+HACA,wKACA,qHACA,oCACA,0CAIJ,oCACE,yBAASA,UAAU,UAAnB,gDACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAIJ,oCACE,yBAASA,UAAU,UAAnB,sBACA,sBAAMA,UAAU,SAAhB,SACE,yCAIJ,oCACE,yBAASA,UAAU,UAAnB,sBACA,sBAAMA,UAAU,SAAhB,SACE,iDAQV,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,sEAAR,oFAA1B,OACA,yiBAEA,yKACA,qCACA,wCAEF,uBAAMD,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,cAAR,4BAA1B,OACA,+MACA,6JACA,uBAAMD,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,qFACA,2IACA,sBAAMA,UAAU,UAAhB,8EACA,6HACA,sBAAMA,UAAU,UAAhB,oDACA,0FACA,sBAAMA,UAAU,UAAhB,0CACA,wPACA,sBAAMA,UAAU,UAAhB,4EACA,4IACA,sBAAMA,UAAU,UAAhB,kDACA,6kBAGA,sBAAMA,UAAU,UAAhB,iCAEA,6EACA,yGACA,4IACA,mFACA,8IAIJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,gBAAR,8BAA1B,OACA,yIACA,yNAEF,uBAAMD,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,oBAAR,kCAA1B,OACA,oCACA,8cAGA,uCAEF,uBAAMD,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qDAAR,mEAA1B,OACA,qFAAgB,KAAhB,uDAAkC,KAAlC,mCAA+C,KAA/C,OACA,uCAEF,uBAAMD,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,+BAAR,4CAA1B,OACA,sPACA,yVAEA,2RAGF,uBAAMD,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,4BAAR,0CAA1B,OAEA,uBAAMD,UAAU,SAAhB,UACE,6PACA,2OACA,qYAGA,sBAAMA,UAAU,UAAhB,qDACA,sKACA,gGACA,4KACA,oOACA,sBAAMA,UAAU,UAAhB,8BACA,qMACA,sBAAMA,UAAU,UAAhB,wBACA,4NAGJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,2BAA1B,OACA,uBAAMD,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,kCACA,oKACA,oBAAIA,UAAU,UAAd,8BACA,2JACA,oBAAIA,UAAU,UAAd,gCACA,wLACA,oBAAIA,UAAU,UAAd,4BACA,yFACA,oBAAIA,UAAU,UAAd,oBACA,iQACA,oBAAIA,UAAU,UAAd,gBACA,oCACA,oBAAIA,UAAU,UAAd,gBACA,0CAKJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,aAAR,2BAA1B,OACA,uQAEF,uBAAMD,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kCAAR,gDAA1B,OACA,mBAAGC,KAAK,iDAAR,4BACA,8IACA,yOAGF,uBAAMF,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,wCAAR,sDAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEE,qZAEA,sBAAMA,UAAU,UAAhB,+DACA,uuBAGA,sBAAMA,UAAU,UAAhB,8DACA,6ZAGA,sBAAMA,UAAU,UAAhB,wEACA,6MACE,uBAAMA,UAAU,SAAhB,UAEE,sRAEA,+UACA,sJACA,oQAMR,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,yCAAR,oEAA1B,OACA,uBAAMD,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,WAEhB,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,WAEhB,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,WAEhB,sBAAMA,UAAU,UAAhB,4BACA,uUAEA,uBAAMA,UAAU,SAAhB,UACE,kNACA,qMACA,kLACA,oVAKF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,2BACA,oKACA,0HACA,8KACA,sBAAMA,UAAU,UAAhB,4BACA,sSACA,0NACA,iNAIN,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iGAAR,+GAA1B,OACA,uBAAMD,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,0EACA,oJACA,qHACA,wDACA,sdAEA,sBAAMA,UAAU,UAAhB,0EACA,yVAEA,yDACA,6pBAGA,gSAGJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,sBAAR,oCAA1B,OACA,2LACA,6NACA,oPACA,uBAAMD,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,gCACA,iKAEA,0CACA,uBAAMA,UAAU,SAAhB,UACE,4FACA,iKAEF,2CACA,uPACA,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,uEAEA,yEACA,mEACA,yEACA,+IACA,2IACA,sIACA,qMAEA,sBAAMA,UAAU,UAAhB,6DACA,wOACA,sBAAMA,UAAU,UAAhB,oEACA,qOAGF,2DACA,uBAAMA,UAAU,SAAhB,UACE,2NACA,+TAIJ,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,sCACA,gLACA,gNACA,oRACA,+KACA,8NAGF,uBAAMA,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,kCACA,2JACA,kGACA,6OACA,kMAGF,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,yCACA,sHACA,6NAGJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,+DAAR,6EAA1B,OACA,uBAAMD,UAAU,SAAhB,UACE,oBAAIA,UAAU,UAAd,4BACA,yIACA,4KACA,oBAAIA,UAAU,UAAd,2BACA,2JACA,gMACA,oBAAIA,UAAU,UAAd,8BACA,6OACA,8MAGJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,iCAAR,8CAA1B,OACA,uBAAMD,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,oBACA,2LAEA,uGACA,mFACA,+KACA,mJACA,oHAEA,sBAAMA,UAAU,UAAhB,6BACA,gGACA,sBAAMA,UAAU,UAAhB,yBACA,2QAGJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,8CAAR,4DAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,uFACA,ynBAGA,sBAAMA,UAAU,UAAhB,6EACA,yWAEA,sBAAMA,UAAU,UAAhB,iGACA,sZAEA,sBAAMA,UAAU,UAAhB,yGACA,qqBAGA,sBAAMA,UAAU,UAAhB,kGACA,4qBAMJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kBAAR,+BAA1B,OACA,+LACA,qLACA,wRAEA,sFACA,oVAGA,kKACA,uBAAMD,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,2CACA,4FACA,sBAAMA,UAAU,UAAhB,4CACA,kMACA,sBAAMA,UAAU,UAAhB,mDACA,wFACA,sBAAMA,UAAU,UAAhB,oDACA,6HAGJ,uBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,SAAd,cAAyB,mBAAGC,KAAK,sCAAR,wGAAzB,SACA,yZAEA,qLACA,qHAGF,uBAAMD,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qBAAR,mCAA1B,OACA,mBAAGC,KAAK,iDAAR,4DAEA,iIACA,iFACA,4NAEA,uBAAMF,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,+CACA,iDACA,sBAAMA,UAAU,UAAhB,+CACA,+CACA,wDAKJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,qBAAR,mCAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,sCACA,2EACA,0IACA,kKACA,sBAAMA,UAAU,UAAhB,sCACA,2EACA,uKACA,sBAAMA,UAAU,UAAhB,eACA,0CAKJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,sBAAR,oCAA1B,OAEA,6MACA,uQACA,oCAEA,uBAAMD,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAKJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,eAAR,4BAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,+CACA,4QAEA,sBAAMA,UAAU,UAAhB,gCACA,gFACA,qFACA,sBAAMA,UAAU,UAAhB,gCACA,gFACA,sBAAMA,UAAU,UAAhB,kCACA,+GACA,yMACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,sDACA,mOACA,iMACA,0NACA,kJACA,6DACA,qJACA,oNAOJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,uBAAR,oCAA1B,OACA,uBAAMD,UAAU,SAAhB,UAEE,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,oCACA,sBAAMA,UAAU,UAAhB,eACA,0CAKJ,uBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,4BAAR,yCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACE,sBAAMA,UAAU,UAAhB,iEACA,iGACA,mGACA,wDACA,yEACA,wGACA,4JACA,mJACA,+EACA,8MACA,kFACA,8HACA,iMACA,4HACA,qJACA,sHACA,qKACA,sKACA,+GACA,4LACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,oDC1iBD2I,GAzRM,SAAC5I,GAErB,OACC,mCACC,qBAAKC,UAAU,eAAf,SACC,6BACC,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,sDAEA,sBAAMA,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,SAAnB,gDAA2C,mBAAGC,KAAK,6BAAcI,MAAO,CAAEC,WAAY,UAA3C,0CAA3C,OACA,uBAAMN,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,gBACA,8EACA,2FACA,oCACA,oCACA,oCACA,4CAKH,sBAAMA,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,SAAnB,0CAA0C,mBAAGC,KAAK,uBAAaI,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,uBAAMN,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,mCACA,sHACA,kNACA,mCACA,sBAAMA,UAAU,UAAhB,gBACA,2CAKH,sBAAMA,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,SAAnB,oDAAoD,mBAAGC,KAAK,gCAAsBI,MAAO,CAAEC,WAAY,UAAnD,6CAApD,OACA,uBAAMN,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,oFACA,yFACA,oQAEA,uBAAMA,UAAU,SAAhB,UACC,qEAAuC,gGAAvC,OACA,kEAAoC,0FAApC,QACA,yEAA2C,mKAA3C,QACA,mCAAK,2LAAL,QACA,2EAA6C,yGAC7C,gFAAkD,gIAAlD,OACA,wEAA0C,uHAA1C,QACA,iEAAmC,mHAAnC,QACA,qEAAuC,sIAAvC,QACA,4EAA8C,iHAA9C,QACA,2EAA6C,iLAA7C,QACA,6EAA+C,8JAA/C,QACA,uFAAyD,yGAAzD,QACA,wEAA0C,wCAA1C,QACA,8EAAgD,mHAAhD,QACA,2EAA6C,4FAA7C,QACA,qFAAwC,qIAAxC,QACA,gFAAkD,mIAAlD,WAED,mCACA,sBAAMA,UAAU,UAAhB,gBACA,2CAKH,sBAAMA,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,SAAnB,uEAAyC,mBAAGC,KAAK,oDAAYI,MAAO,CAAEC,WAAY,UAAzC,iEAAzC,OACA,uBAAMN,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,sGACA,sBAAMA,UAAU,SAAhB,SACC,wIAIF,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACC,8CAOJ,sBAAMA,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,SAAnB,qFAA6C,mBAAGC,KAAK,kEAAgBI,MAAO,CAAEC,WAAY,UAA7C,+EAA7C,OACA,uBAAMN,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,8DACA,sBAAMA,UAAU,SAAhB,SACC,wIAMJ,sBAAMA,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,SAAnB,mDACC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADD,OAEA,uBAAMN,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,+BACA,sBAAMA,UAAU,SAAhB,SACC,wIAGD,sBAAMA,UAAU,UAAhB,8BACA,sBAAMA,UAAU,SAAhB,SACC,uKAGD,sBAAMA,UAAU,UAAhB,wCACA,sBAAMA,UAAU,SAAhB,SACC,qGAGD,sBAAMA,UAAU,UAAhB,0CACA,sBAAMA,UAAU,SAAhB,SACC,uJAGD,sBAAMA,UAAU,UAAhB,wBACA,uBAAMA,UAAU,SAAhB,UACC,sNACA,2GAGD,sBAAMA,UAAU,UAAhB,wBACA,sBAAMA,UAAU,SAAhB,SACC,kOAGD,sBAAMA,UAAU,UAAhB,sCACA,sBAAMA,UAAU,SAAhB,SACC,2IAGD,sBAAMA,UAAU,UAAhB,kDACA,sBAAMA,UAAU,SAAhB,SACC,2IAGD,sBAAMA,UAAU,UAAhB,gCACA,sBAAMA,UAAU,SAAhB,SACC,kMAGD,sBAAMA,UAAU,UAAhB,yBACA,sBAAMA,UAAU,SAAhB,SACC,kMAGD,sBAAMA,UAAU,UAAhB,2DACA,sBAAMA,UAAU,SAAhB,SACC,+DAGD,sBAAMA,UAAU,UAAhB,6BACA,uBAAMA,UAAU,SAAhB,UACC,6KACA,0FAGD,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACC,uPACA,yJAGD,sBAAMA,UAAU,UAAhB,8BACA,sBAAMA,UAAU,SAAhB,SACC,uJAGD,sBAAMA,UAAU,UAAhB,gCACA,sBAAMA,UAAU,SAAhB,SACC,4GAGD,sBAAMA,UAAU,UAAhB,2BACA,sBAAMA,UAAU,SAAhB,SACC,kMAGD,sBAAMA,UAAU,UAAhB,yBACA,sBAAMA,UAAU,SAAhB,SACC,sNAGD,sBAAMA,UAAU,UAAhB,+BACA,sBAAMA,UAAU,SAAhB,SACC,8HAGD,sBAAMA,UAAU,UAAhB,2BACA,sBAAMA,UAAU,SAAhB,SACC,sCAGD,sBAAMA,UAAU,UAAhB,0BACA,sBAAMA,UAAU,SAAhB,SACC,qOAGD,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACC,8CAOJ,sBAAMA,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,SAAnB,oCACC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADD,OAEA,uBAAMN,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACC,sEACA,4DACA,+GACA,sBAAKA,UAAU,SAAf,UACC,mCAAM,IACL,qEAAe,IAAf,OACA,wEACA,kIACA,+BACC,6CACA,oDACA,uDAED,sCACA,mFACA,mCAAM,IAAN,UAED,mCAAM,IAAN,UAED,8GACA,qNAGD,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACC,8CAOJ,sBAAMA,UAAU,SAAhB,SACC,oCACC,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACC,wDCnMK4I,GAxEQ,SAAC7I,GAEvB,OACC,mCACC,qBAAKC,UAAU,eAAf,SACC,6BACC,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,sDACA,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,yBACA,uBAAMA,UAAU,SAAhB,UACC,uBAAMA,UAAU,UAAhB,cAA2B,mBAAGC,KAAK,8BAAR,2CAA3B,OACA,mCAAK,mBAAGC,KAAK,iEAAiEC,OAAO,SAAhF,+BACL,6HACA,gFACA,6FACA,6GACA,6FACA,gFACA,mIACA,8FACA,oGACA,mCACA,qFACA,qGACA,gIACA,6FACA,2FACA,yIACA,mIACA,uHACA,+HACA,mHACA,oNACA,yCAIF,uBAAMH,UAAU,SAAhB,UACC,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,wBAAR,qCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,kGACA,yIACA,sBAAMA,UAAU,UAAhB,wHACA,6GACA,oHACA,sBAAMA,UAAU,UAAhB,6DACA,uIACA,qCACA,sBAAMA,UAAU,UAAhB,gJACA,0MAEA,sBAAMA,UAAU,UAAhB,gBACA,yCAIF,uBAAMA,UAAU,SAAhB,UACC,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,gBACA,mDCgBO6I,GA7EO,SAAC9I,GAEtB,OACC,mCACC,qBAAKC,UAAU,eAAf,SACC,6BACC,uBAAMA,UAAU,SAAhB,UACC,sBAAMA,UAAU,SAAhB,sDAEA,uBAAMA,UAAU,SAAhB,UACC,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,6BAAR,0CAA1B,OACA,uBAAMD,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,gBACA,0CAIF,uBAAMA,UAAU,SAAhB,UACC,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,8BAAR,2CAA1B,OACA,uBAAMD,UAAU,SAAhB,UACC,mCAAK,4DAAL,OACA,mCAAK,mCAAL,yKAEA,mCAAK,mCAAL,oFACA,mCAAK,mCAAL,4FACA,mCAAK,mCAAL,kMAIA,mCAAK,mCAAL,qKACA,mCAAK,mCAAL,yTAIA,mCAAK,mCAAL,2VAEA,mCAAK,mCAAL,8FACA,mCAAK,mCAAL,+NAEA,mCAAK,oCAAL,qJACA,mCAAK,oCAAL,0FACA,mCAAK,oCAAL,sJACA,mCAAK,oCAAL,icAGA,mCACA,sBAAMA,UAAU,UAAhB,gBACA,yCAIF,sBAAMA,UAAU,SAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACC,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,gBACA,mCACA,sBAAMA,UAAU,UAAhB,gBACA,yCAIF,uBAAMA,UAAU,SAAhB,UACC,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,gBAA1B,OACA,uBAAMD,UAAU,SAAhB,UACC,sBAAMA,UAAU,UAAhB,gBACA,mDCkBO8I,GApFM,SAAC/I,GAElB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,sDACA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,4BAAR,yCAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4FACA,uBAAMA,UAAU,SAAhB,UACI,qFACA,wFACA,gGACA,uEACA,0FACA,oFACA,sMACA,6JACA,uCAGJ,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,gGACA,sGACA,wHACA,+GACA,sFACA,gIACA,0KACA,6JACA,+GACA,gGACA,6CAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wGAAiD,mBAAGC,KAAK,qFAAoBI,MAAO,CAAEC,WAAY,UAAjD,kGAAjD,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,0CACA,sBAAMA,UAAU,SAAhB,SACI,0KAGJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,0PACA,0MAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sBAAgC,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,SAAhB,SACI,sDC/CrB+I,GAzBO,SAAChJ,GAEnB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,sBAAMA,UAAU,SAAhB,SAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,qDCqHrBgJ,GAlIK,SAACjJ,GAEjB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,kCACA,2GAEA,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,2DAAR,kGAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gCACA,uBAAMA,UAAU,SAAhB,UACI,qFACI,yGACA,2JACA,oIACA,oFAEJ,gKACA,8JACA,uHACA,0JACA,oCACA,uCAEJ,sBAAMA,UAAU,UAAhB,sCACA,uBAAMA,UAAU,SAAhB,UACI,qFACA,mJACA,+JACA,kJACA,kIACA,mJACA,sKACA,iFACA,mHACA,iIACA,sPACA,iHACA,4JACA,6CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,wEAAR,qFAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uFACA,sCAAQ,mBAAGE,KAAK,mCAAmCC,OAAO,SAAlD,8DAAR,OACA,uBAAMH,UAAU,SAAhB,UACI,uHACA,2FACA,6GACA,gDACA,+EACA,0IACA,6DACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,4CAMZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,qFAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACI,sFACA,mGACI,4MAEJ,8CACA,kEACA,gEACA,kIACI,6IAEJ,6DAEJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,kEACA,gEACA,0DACA,6CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,uGAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,gLACA,mJAEJ,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,SAAhB,SACI,4CAKZ,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,GAAR,eAA1B,OACA,uBAAMD,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,SAAhB,SACI,sDCrGrBiJ,GAlBC,SAAClJ,GAEb,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,kCAAR,iDAA1B,OACA,kCAAI,2KAAJ,OACA,uBAAMD,UAAU,SAAhB,UACI,uBAAMA,UAAU,SAAhB,cAA0B,mBAAGC,KAAK,wCAAR,sDAA1B,OACA,mBAAGC,KAAK,iCAAR,8GC6zBTgJ,GAv0BK,SAACnJ,GAGjB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,+CACA,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iCACI,mBAAGC,KAAK,eAAKI,MAAO,CAAEC,WAAY,UAAlC,4BADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,mCAAK,6DAAL,OACA,sIACA,oCACA,oCACA,mCAAK,oCAAL,OACA,oCACA,mCAAK,oCAAL,OACA,4CAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wCACI,mBAAGC,KAAK,sBAAYI,MAAO,CAAEC,WAAY,UAAzC,mCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,mCAAK,kFAAL,OACA,mCAAK,qLAAL,OACA,mCAAK,wFAAL,OACA,mCAAK,yLAAL,OACA,mCAAK,yPAAL,eAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mDACI,mBAAGC,KAAK,iCAAQI,MAAO,CAAEC,WAAY,UAArC,8CADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,8GACA,sBAAMA,UAAU,UAAhB,+CACA,sIACA,sBAAMA,UAAU,UAAhB,2DACA,oFACA,sBAAMA,UAAU,UAAhB,mCACA,mDACA,wHACA,wFACA,oHACA,6KACA,gIACA,2DACA,uKACA,0EACA,uJACA,mFACA,wMACA,0HACA,gKACA,oMACA,iLACA,2CAAc,KAAd,IAAqB,KAArB,IAA4B,KAA5B,+FACA,2CAAc,MAAd,IAAsB,MAAtB,IAA8B,MAA9B,+HACA,2CAAc,MAAd,IAAsB,MAAtB,IAA8B,MAA9B,8DACA,2CAAc,SAAd,IAAyB,SAAzB,2HACA,2CAAc,MAAd,IAAsB,MAAtB,6HACA,gFACA,wGAEA,sBAAMA,UAAU,UAAhB,+GACA,gDAAmB,iBAAnB,SACA,gDAAmB,iBAAnB,8DACA,gDAAmB,iBAAnB,uDACA,gDAAmB,iBAAnB,uDACA,sBAAMA,UAAU,UAAhB,4HACA,oCACI,kGACA,6DACA,kMACA,kMACA,2KACA,6GACA,kGACA,6GAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iCACI,mBAAGC,KAAK,eAAKI,MAAO,CAAEC,WAAY,UAAlC,6BADJ,OAEA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,yCACA,qCACA,sBAAMA,UAAU,UAAhB,+CACA,+EAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,0DACI,mBAAGC,KAAK,wCAAUI,MAAO,CAAEC,WAAY,UAAvC,sDADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,kcAEA,sBAAMA,UAAU,UAAhB,mCACA,6HAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCACI,mBAAGC,KAAK,qBAAMI,MAAO,CAAEC,WAAY,UAAnC,mCADJ,OAEA,oMACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4CACA,0EACA,uHACA,sBAAMA,UAAU,UAAhB,iDACA,uEACA,iEACA,8DACA,4DACA,sBAAMA,UAAU,UAAhB,oDACA,4DACA,sBAAMA,UAAU,UAAhB,2DACA,8DACA,sBAAMA,UAAU,UAAhB,oHACA,2HACA,sBAAMA,UAAU,UAAhB,+CACA,mGACA,kFACA,sBAAMA,UAAU,UAAhB,qDACA,kGACA,qFACA,oJACA,sFACA,sIACA,yIACA,qCAAQ,MAAR,mBACA,qCAAQ,SAAR,6BACA,qCAAQ,UAAR,oEACA,qCAAQ,sBAAR,+HACA,sBAAMA,UAAU,UAAhB,+CACA,uIACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,oCACA,sBAAMA,UAAU,UAAhB,gBACA,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCACI,mBAAGC,KAAK,qBAAMI,MAAO,CAAEC,WAAY,UAAnC,mCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+CACA,uGACA,gKACA,sBAAMA,UAAU,UAAhB,4FACA,sEACA,sBAAMA,UAAU,UAAhB,+CACA,wDACA,sBAAMA,UAAU,UAAhB,+CACA,iDACA,sBAAMA,UAAU,UAAhB,+CACA,2DACA,sBAAMA,UAAU,UAAhB,+CACA,8OACA,kNACA,wIAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mDACI,mBAAGC,KAAK,kCAASI,MAAO,CAAEC,WAAY,UAAtC,+CADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uBACA,2MACA,kJACA,iNACA,kNACA,sFACA,oJACA,mIACA,wDACA,qDACA,sDACA,wDACA,oEACA,sBAAMA,UAAU,UAAhB,2BACA,mFACA,+IACA,4JACA,wKACA,0KACI,gIAEJ,4CAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,6CACI,mBAAGC,KAAK,2BAAYI,MAAO,CAAEC,WAAY,UAAzC,yCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,4JACA,mCAAM,KAAN,mEAEJ,sBAAMA,UAAU,UAAhB,2DACA,uBAAMA,UAAU,SAAhB,UACI,8EAAuB,uGAAvB,QACA,mHAA8B,mJAA9B,WAEJ,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,2DAAc,mFAAd,OACA,0EAAmB,mHAAnB,OACA,qMAA+C,8DAA/C,OACA,sEAAe,4JAAf,UAEJ,sBAAMA,UAAU,UAAhB,sEACA,uBAAMA,UAAU,SAAhB,UACI,0EAAmB,yLAAnB,OACA,2EAAe,qHAAf,OACA,iLAA0C,kFAA1C,UAEJ,sBAAMA,UAAU,UAAhB,2EACA,uBAAMA,UAAU,SAAhB,UACI,mGAAwB,2HAAxB,OACA,iFAAqB,oJAArB,OACA,sIAAkC,2FAAlC,OACA,2EAAoB,6HAApB,OACA,0FAAyB,+GAAzB,OACA,kEAAqB,4cAArB,OAEA,iFAAqB,qIAArB,UAEJ,sBAAMA,UAAU,UAAhB,gFACA,uBAAMA,UAAU,SAAhB,UACI,yDAAiB,sFAAjB,OACA,2EAAmC,mJAAnC,OACA,4FAA0C,kGAA1C,OACA,4EAAqB,oFAArB,OACA,4EAAqB,uCAArB,UAEJ,sBAAMA,UAAU,UAAhB,gFACA,uBAAMA,UAAU,SAAhB,UACI,wGAAkC,oFAAlC,OACA,qBAAIA,UAAU,QAAd,qCAA8C,uGAA9C,OACA,2FAA6D,oFAA7D,OACA,4EAA8C,oFAA9C,OACA,oCAAM,uCAAN,UAEJ,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,6DAAgB,oJAAhB,OACA,yEAA4B,0JAA5B,OACA,gEAAmB,2JAAnB,OACA,qFAAyB,8JAAzB,UAEJ,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,8EAAkB,+FAAlB,OACA,+EAAmB,iJAAnB,OACA,2EAAoB,mJAApB,OACA,4DAAe,qIAAf,OACA,8EAAkB,sIAAlB,OACA,8DAAiB,6GAAjB,UAEJ,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,oFAAwB,kFAAxB,OACA,6EAAiB,kFAAjB,UAEJ,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,8DAAsB,+FAAtB,OACA,8DAAsB,+FAAtB,UAEJ,sBAAMA,UAAU,UAAhB,4DACA,uBAAMA,UAAU,SAAhB,UACI,uFAA2B,6JAA3B,OACA,0HAA+C,gIAA/C,OACA,oCAAM,uCAAN,UAEJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,oCAAM,uCAAN,iBAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,wCACI,mBAAGC,KAAK,sBAAYI,MAAO,CAAEC,WAAY,UAAzC,mCADJ,OAEA,8IACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAM,KAAN,4DAAuB,uCAAvB,OACA,yGAAoB,uCAApB,UAEJ,sBAAMA,UAAU,UAAhB,+CACA,uBAAMA,UAAU,SAAhB,UACI,oCAAM,uCAAN,OACA,oCAAM,uCAAN,UAEJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,oCAAM,uCAAN,SAEJ,sBAAMA,UAAU,UAAhB,wEACA,mEACA,sBAAMA,UAAU,UAAhB,yCACA,+CACA,oDACA,gOACA,sBAAMA,UAAU,UAAhB,+CACA,oEACA,sBAAMA,UAAU,UAAhB,qDACA,uFACA,sBAAMA,UAAU,UAAhB,yCACA,+CACA,sBAAMA,UAAU,UAAhB,sDACA,4DACA,sBAAMA,UAAU,UAAhB,iCACA,yEAQZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,sCACI,mBAAGC,KAAK,oBAAUI,MAAO,CAAEC,WAAY,UAAvC,iCADJ,OAEA,gMACA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,wEACA,0CAAa,wBAAb,OACA,sBAAMA,UAAU,UAAhB,yCACA,kFACA,sFACA,sBAAMA,UAAU,UAAhB,kEACA,oDACA,wHACA,4GACA,sBAAMA,UAAU,UAAhB,gDACA,sGACA,kGACA,sBAAMA,UAAU,UAAhB,+CACA,4DACA,iDACA,sBAAMA,UAAU,UAAhB,+CACA,oDACA,8CACA,sBAAMA,UAAU,UAAhB,+CACA,yDACA,8CACA,sBAAMA,UAAU,UAAhB,oEACA,mEACA,sDAQZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,yDACI,mBAAGC,KAAK,uCAAmBI,MAAO,CAAEC,WAAY,UAAhD,oDADJ,OAEA,+PACA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,8EACA,2CAAc,mCAAd,OACA,sBAAMA,UAAU,UAAhB,iEACA,yCAAY,KAAZ,yCACA,4EACA,sBAAMA,UAAU,UAAhB,iEACA,0DACA,iEACA,qEACA,sBAAMA,UAAU,UAAhB,oFACA,0DACA,6IACA,0JACA,sBAAMA,UAAU,UAAhB,iEACA,qDACA,sBAAMA,UAAU,UAAhB,2DACA,iDACA,sBAAMA,UAAU,UAAhB,wEACA,uBAAMA,UAAU,SAAhB,UACI,+MACA,+MACA,oCACA,uCAEJ,qDACA,sBAAMA,UAAU,UAAhB,wEACA,qDACA,sBAAMA,UAAU,UAAhB,wGACA,gMACA,0HACA,sBAAMA,UAAU,UAAhB,qFACA,gDACA,oKACA,sBAAMA,UAAU,UAAhB,qFACA,kDACA,sKACA,sBAAMA,UAAU,UAAhB,gIACA,iDACA,sBAAMA,UAAU,UAAhB,oFACA,6IACA,sBAAMA,UAAU,UAAhB,eACA,4CAMZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCACI,mBAAGC,KAAK,qBAAMI,MAAO,CAAEC,WAAY,UAAnC,kCADJ,OAEA,sOACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kDACA,0DACA,4DACA,yCACA,sBAAMA,UAAU,UAAhB,yCACA,yQAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCACI,mBAAGC,KAAK,qBAAMI,MAAO,CAAEC,WAAY,UAAnC,kCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,2BACA,6DACA,mKACA,0NACA,sBAAMA,UAAU,UAAhB,uBACA,oEACA,sEACA,qGACA,iFACA,sBAAMA,UAAU,UAAhB,mDACA,2FAKZ,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCACI,mBAAGC,KAAK,qBAAMI,MAAO,CAAEC,WAAY,UAAnC,mCADJ,OAEA,uBAAMN,UAAU,SAAhB,UAEI,sBAAMA,UAAU,UAAhB,qDACA,uBAAMA,UAAU,SAAhB,UACI,iFACA,uBAAMmJ,UAAU,SAAhB,UACI,sCAAS,MAAT,OAAoB,MAApB,2DACA,sCAAS,MAAT,OAAoB,MAApB,wEACA,sCAAS,MAAT,OAAoB,MAApB,QAAgC,MAAhC,2DACA,sCAAS,MAAT,OAAoB,MAApB,kEACA,sCAAS,MAAT,8DACA,sCAAS,MAAT,6DACA,sCAAS,MAAT,qCAAyB,OAAzB,qEACA,mEAAa,QAAb,mEACA,+DAAc,UAAd,uBACA,+DAAc,UAAd,wBACA,+DAAc,UAAd,yBACA,+DAAc,WAAd,qJACA,+DAAc,UAAd,oHACA,+DAAc,WAAd,wJAEJ,qHACA,oLACA,qLACA,6KACA,mHACA,mHACA,oIACA,sPACA,kRACA,qOACA,+KACA,6NACA,oCACA,uCAGJ,sBAAMnJ,UAAU,UAAhB,kEACA,uBAAMA,UAAU,SAAhB,UACI,2FACA,gEACA,iEAAsB,yFAAtB,UAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,mFACI,mBAAGC,KAAK,iEAAeI,MAAO,CAAEC,WAAY,UAA5C,+EADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,8KADJ,IACoD,uBAChD,6IAFJ,IAE4C,uBACxC,yIAHJ,IAG6C,uBACzC,oRAJJ,IAKoD,uBAEhD,oCACI,yBAASA,UAAU,UAAnB,6DACA,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,2DACA,gEACA,gEACA,0EAIR,oCACI,yBAASA,UAAU,UAAnB,qEACA,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,wDACA,uBAAMA,UAAU,SAAhB,UACI,qJACA,oFAIR,oCACI,yBAASA,UAAU,UAAnB,8CACA,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,oDACA,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,4CACA,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,yCAIR,oCACI,yBAASA,UAAU,UAAnB,gBACA,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,iDASpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8CACI,mBAAGC,KAAK,4BAAQI,MAAO,CAAEC,WAAY,UAArC,yCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,qEACA,uBAAMA,UAAU,SAAhB,UAEI,uEACA,kDACA,kDAGJ,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,sJACA,8DACA,oCAHJ,KAGiB,uBACb,4JACA,iEAIJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gEACI,mBAAGC,KAAK,8CAAWI,MAAO,CAAEC,WAAY,UAAxC,2DADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,6NACA,sBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,UACI,iRACA,sEACA,4DACA,uGACA,4DALJ,IAK0C,uBACtC,wFACA,6DAGJ,sBAAMA,UAAU,UAAhB,oEACA,uBAAMA,UAAU,SAAhB,UACI,yMACA,sEACA,4DACA,uGACA,4DALJ,IAK0C,uBACtC,8CACA,+DACA,iEACA,6DAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,kEACI,mBAAGC,KAAK,gDAAkBI,MAAO,CAAEC,WAAY,UAA/C,6DADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACI,sJACA,gIACA,+FACA,+IAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCACI,mBAAGC,KAAK,qBAAMI,MAAO,CAAEC,WAAY,UAAnC,kCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,sFACA,qOACA,uBAAMA,UAAU,SAAhB,UACI,mEACA,iHACA,sGAHJ,IAG8C,uBAC1C,qGAJJ,IAI6C,uBACzC,6EACA,gHACA,4HAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uCACI,mBAAGC,KAAK,qBAAMI,MAAO,CAAEC,WAAY,UAAnC,kCADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,kCACA,uBAAMA,UAAU,SAAhB,UACI,4CACA,4CACA,0CACA,0CACA,0CACA,0CACA,+FACA,6FACA,uIACA,sIACA,6FACA,+FACA,uCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAOhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,uDACI,mBAAGC,KAAK,qCAAYI,MAAO,CAAEC,WAAY,UAAzC,kDADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,sFAAL,8EACI,sDACI,uDAGR,mCAAK,oEACD,qDACA,sFAEJ,mCAAK,gFACD,qDACA,qFAQpB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,cAA6B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,uBAA7B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCvpBzBoJ,GAnKK,SAACrJ,GAEjB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,kGACA,oCACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,iEACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,qLACA,+CAAQ,QAAR,mDACA,2EACA,6EACA,4DACA,+EACA,gFACA,+EACA,sHACA,8FACA,+EACA,+EACA,wIACA,yFACA,0FACI,qGAEJ,gFACA,mHACA,qLACA,0IACI,kJAEJ,gEACA,mEACA,0GACA,oFACA,wEACA,yEACA,yHAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oCACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,6DACA,uBAAMA,UAAU,SAAhB,UACI,4KACA,8GACA,iFACA,sBAAMA,UAAU,SAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,8DACA,qEAGR,sBAAMA,UAAU,UAAhB,8DACA,uBAAMA,UAAU,SAAhB,UACI,2JACA,sBAAMA,UAAU,SAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,+DACA,sEAGR,sBAAMA,UAAU,UAAhB,+DACA,uBAAMA,UAAU,SAAhB,UACI,iKACA,6MACA,uCAEJ,sBAAMA,UAAU,UAAhB,gEACA,uBAAMA,UAAU,SAAhB,UACI,uJACA,gNAEJ,sBAAMA,UAAU,UAAhB,2DACA,uBAAMA,UAAU,SAAhB,UACI,8NACA,uMACA,mGACA,qMACA,oLACA,yLACI,4KAEJ,sMACA,sMACA,oDACI,8HACA,gJACA,yIACA,0LACA,8HACA,kLAEJ,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,8CACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,uGACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,uCAEJ,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,oBACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,sDCnGrBqJ,GApDC,SAACtJ,GAEb,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UACI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,oCACA,oCACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,8CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCCzBsJ,GAxCO,SAACvJ,GACnB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,6BACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qFAA6C,mBAAGC,KAAK,kEAAgBI,MAAO,CAAEC,WAAY,UAA7C,+EAA7C,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,UACI,0GACA,oCACA,+CAMhB,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,SAAhB,SACI,wDCk1BzBuJ,GA72BI,SAACxJ,GAElB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,6BACE,uBAAMA,UAAU,SAAhB,UACE,sBAAMA,UAAU,SAAhB,yCACA,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,oCAIJ,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,SAAnB,kCACA,oCACE,yBAASA,UAAU,UAAnB,+DACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,4HACA,+IACA,uOACA,gPACA,+JAEF,mCAAK,2EACH,qGAAsB,iBAAtB,QACA,wJACA,wJACA,2FAEF,mCAAK,gDACH,6IAEF,mCAAK,4EACH,0LACA,kNACA,8NACA,uNAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,8CACA,iEACA,mJACA,oKACA,6MACA,+OACA,+LACA,8KARF,IAQoD,uBAClD,qDACE,oFACA,yDACE,iEAZN,IAcQ,uBACN,8FACA,mGAhBF,IAgB6E,uBAC3E,sDACA,mEACE,2DACA,+DACA,6DACA,sEAEF,0DACE,uGACA,gGACA,+CAEF,yDACE,6CACA,qDACE,sCAEF,4CAIN,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,mDAOV,oCACE,yBAASA,UAAU,UAAnB,iCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,uCAEF,mCAAK,2EACH,uCAEF,mCAAK,gDACH,uCAEF,mCAAK,4EACH,wCAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,mDAOV,oCACE,yBAASA,UAAU,UAAnB,iCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,uCAEF,mCAAK,2EACH,uCAEF,mCAAK,gDACH,uCAEF,mCAAK,4EACH,wCAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,wDAUd,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,SAAnB,kCAEA,oCACE,yBAASA,UAAU,UAAnB,uDACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,mEAAa,QAAb,iFACA,oNACA,2LACA,6LACA,2KACA,sIAEF,mCAAK,2EACH,+FAAqB,sBAArB,QACA,mJAEF,mCAAK,gDACH,uHACA,uHACA,6JAEF,mCAAK,4EACH,8RACA,6PACA,qGAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,+CACA,2EACA,oFACA,6EACA,kDALF,IAK4B,uBAC1B,0EACE,qDACE,iEAEF,wCACE,sDACE,8DACE,6DAAgC,IAAhC,KACE,gDAAmB,IAAnB,MACE,mDAGJ,+DAAkC,IAAlC,KACE,gDAAmB,IAAnB,MACE,kDAGJ,yDACA,uEACA,sEAzBV,IA6BQ,uBACN,sDACE,yDACA,qDACA,6DAjCJ,IAkCQ,uBACN,iEACA,sEAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,mDAOV,oCACE,yBAASA,UAAU,UAAnB,iCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,uCAEF,mCAAK,2EACH,uCAEF,mCAAK,gDACH,uCAEF,mCAAK,4EACH,wCAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,wDAUd,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,uCAIJ,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,SAAnB,mCAEA,oCACE,yBAASA,UAAU,UAAnB,8DACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,8DACH,wCAAW,cAAX,sDACA,oOAEA,uCAEF,mCAAK,0FACH,iNACA,wCAAW,gBAAX,WAEF,mCAAK,+DACH,wQAGF,mCAAK,4EACH,qIACA,kJACA,8FACA,6MACA,yMACA,qXAEA,6FACE,uBAAMA,UAAU,SAAhB,UACE,mCAAM,wDAAN,gEAAgD,uBAAhD,iLAEA,4CACA,4CACA,2CACA,2CACA,6CACA,8CACA,mCAAK,kDACH,iFAKR,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,8CACA,yDACE,iEACA,yEACA,2EACE,sDAEF,6CACE,wDACE,uDACE,kFAEF,+CACE,kFAEF,wCACE,wGAIN,+CACE,qDACE,yDAGJ,+FAIN,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,mDAOV,oCACE,yBAASA,UAAU,UAAnB,iCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,uCAEF,mCAAK,2EACH,uCAEF,mCAAK,gDACH,uCAEF,mCAAK,4EACH,wCAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,wDAUd,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,uCAIJ,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,uCAIJ,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,uCAIJ,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,uCAIJ,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,wCAIJ,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,yCAIJ,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,yCAIJ,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,SAAnB,qCAEA,oCACE,yBAASA,UAAU,UAAnB,8DACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,+DACH,kFAAkB,cAAlB,yEACA,uKACA,yNACA,iIACA,oOACA,kRAEF,mCAAK,2EACH,iIACA,iKACA,wGAEF,mCAAK,gDACH,kGACA,uCAEF,mCAAK,4EACH,+JACA,8FACA,4VAEA,sNACA,wNACA,wCAAU,uCAAV,MAA4B,sCAA5B,0BACA,uCAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,mDAOV,oCACE,yBAASA,UAAU,UAAnB,iCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,uCAEF,mCAAK,2EACH,uCAEF,mCAAK,gDACH,uCAEF,mCAAK,4EACH,wCAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,wDAUd,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,SAAnB,qCACA,oCACE,yBAASA,UAAU,UAAnB,2EACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,iGACA,0HACA,8JACA,8JACA,qNACA,qIACA,sHACA,mOACA,qRACA,8LAEF,mCAAK,2EACH,qLACA,iNAEF,mCAAK,gDACH,mPAEF,mCAAK,4EACH,2DACA,kLACA,0CAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,mDAOV,oCACE,yBAASA,UAAU,UAAnB,iCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,uCAEF,mCAAK,2EACH,uCAEF,mCAAK,gDACH,uCAEF,mCAAK,4EACH,wCAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,wDAUd,sBAAMA,UAAU,SAAhB,SACE,oCACE,yBAASA,UAAU,SAAnB,qCACA,oCACE,yBAASA,UAAU,UAAnB,iFACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,wHACA,iJACA,+FACA,uMACA,yIACA,sLACA,sJACA,uCAEF,mCAAK,2EACH,gEAAe,gBAAf,0DACA,oKACA,yKAEF,mCAAK,gDACH,oGACA,oGACA,+KAEF,mCAAK,4EACH,+JACA,6NACA,oKACE,mQAGJ,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,8CACA,0EACA,kGACA,yGACA,iDALF,IAK2B,uBACzB,4DAA8B,uBAC5B,mDACE,4DADF,IACsC,0BAEtC,qDACE,uDAA0B,IAA1B,MACE,6CACE,uEAEF,6CACE,uEAEF,6CACE,uEAEF,6CACE,8CAAiB,IAAjB,0BAA6C,IAA7C,MACE,0FAEF,gDAAmB,IAAnB,yBAA8C,IAA9C,MACE,6FAEF,wCACE,+EAGJ,yDACA,sDACA,kEAlCR,IAqCQ,uBACN,qDACA,wDACA,8DAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,mDAOV,oCACE,yBAASA,UAAU,UAAnB,iCACA,uBAAMA,UAAU,SAAhB,UACE,mCAAK,gDACH,uCAEF,mCAAK,2EACH,uCAEF,mCAAK,gDACH,uCAEF,mCAAK,4EACH,wCAEF,mCAAK,6DACH,oCACE,yBAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,wBACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,0CAGJ,oCACE,yBAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,UACE,oCACA,wDAUd,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,yCAIJ,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,yCAIJ,sBAAMA,UAAU,SAAhB,SACE,kCACE,yBAASA,UAAU,SAAnB,mDC3xBDwJ,GAvEO,SAACzJ,GAEnB,OACI,mCACI,qBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,UAEI,sBAAMA,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,gIACI,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,8WAIJ,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,mCAAK,mBAAGE,KAAK,6CAA6CC,OAAO,SAA5D,qDAAL,iBAOhB,sBAAMH,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,mBAAGE,KAAK,GAAGC,OAAO,SAAlB,qDAAL,OACA,+CAOhB,sBAAMH,UAAU,SAAhB,SACI,oCACI,0BAASA,UAAU,SAAnB,qBAA+B,mBAAGC,KAAK,GAAGI,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,uBAAMN,UAAU,SAAhB,UACI,sBAAMA,UAAU,UAAhB,4BACA,sBAAMA,UAAU,SAAhB,SACI,sCAGJ,sBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,UACI,mCAAK,mBAAGE,KAAK,GAAGC,OAAO,SAAlB,qDAAL,OACA,uDCiSrBsJ,GAjLF,SAAC1J,GACV,OACI,qBAAKC,UAAU,OAAf,SACI,eAAC,IAAD,WAGI,cAAC,IAAD,CAAO0J,KAAK,cAAcC,UAAW7J,IACrC,cAAC,IAAD,CAAO4J,KAAK,qBAAqBC,UAAWvJ,IAC5C,cAAC,IAAD,CAAOsJ,KAAK,iBAAiBC,UAAWpJ,IACxC,cAAC,IAAD,CAAOmJ,KAAK,mBAAmBC,UAAWnJ,IAG1C,cAAC,IAAD,CAAOkJ,KAAK,aAAaC,UAAWlJ,IAGpC,cAAC,IAAD,CAAOiJ,KAAK,gBAAgBC,UAAWjJ,IAGvC,cAAC,IAAD,CAAOgJ,KAAK,gBAAgBC,UAAWhJ,IACvC,cAAC,IAAD,CAAO+I,KAAK,eAAeC,UAAW/I,IACtC,cAAC,IAAD,CAAO8I,KAAK,gBAAgBC,UAAW9I,IACvC,cAAC,IAAD,CAAO6I,KAAK,oBAAoBC,UAAW7I,IAC3C,cAAC,IAAD,CAAO4I,KAAK,cAAcC,UAAW1I,IACrC,cAAC,IAAD,CAAOyI,KAAK,iBAAiBC,UAAW5I,IACxC,cAAC,IAAD,CAAO2I,KAAK,qBAAqBC,UAAW3I,IAC5C,cAAC,IAAD,CAAO0I,KAAK,kBAAkBC,UAAWC,IACzC,cAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWxI,IACrC,cAAC,IAAD,CAAOuI,KAAK,iBAAiBC,UAAWvI,IACxC,cAAC,IAAD,CAAOsI,KAAK,mBAAmBC,UAAWE,IAC1C,cAAC,IAAD,CAAOH,KAAK,0BAA0BC,UAAWrI,IACjD,cAAC,IAAD,CAAOoI,KAAK,0BAA0BC,UAAWjI,IACjD,cAAC,IAAD,CAAOgI,KAAK,0BAA0BC,UAAWhI,IACjD,cAAC,IAAD,CAAO+H,KAAK,0BAA0BC,UAAW/H,IAGjD,cAAC,IAAD,CAAO8H,KAAK,0BAA0BC,UAAWzH,IACjD,cAAC,IAAD,CAAOwH,KAAK,oBAAoBC,UAAW9H,IAC3C,cAAC,IAAD,CAAO6H,KAAK,4BAA4BC,UAAW7H,IACnD,cAAC,IAAD,CAAO4H,KAAK,mBAAmBC,UAAW5H,IAC1C,cAAC,IAAD,CAAO2H,KAAK,iBAAiBC,UAAWG,IACxC,cAAC,IAAD,CAAOJ,KAAK,mBAAmBC,UAAW1H,IAG1C,cAAC,IAAD,CAAOyH,KAAK,iBAAiBC,UAAWxH,IACxC,cAAC,IAAD,CAAOuH,KAAK,iBAAiBC,UAAWvH,IACxC,cAAC,IAAD,CAAOsH,KAAK,oBAAoBC,UAAWrH,IAC3C,cAAC,IAAD,CAAOoH,KAAK,0BAA0BC,UAAWtH,IAKjD,cAAC,IAAD,CAAOqH,KAAK,cAAcC,UAAWpH,IACrC,cAAC,IAAD,CAAOmH,KAAK,YAAYC,UAAW5F,IACnC,cAAC,IAAD,CAAO2F,KAAK,cAAcC,UAAW3F,IAGrC,cAAC,IAAD,CAAO0F,KAAK,aAAaC,UAAW1F,IACpC,cAAC,IAAD,CAAOyF,KAAK,0BAA0BC,UAAWzF,IACjD,cAAC,IAAD,CAAOwF,KAAK,sBAAsBC,UAAWxF,IAK7C,cAAC,IAAD,CAAOuF,KAAK,oBAAoBC,UAAWvE,IAG3C,cAAC,IAAD,CAAOsE,KAAK,eAAeC,UAAWtE,IACtC,cAAC,IAAD,CAAOqE,KAAK,oBAAoBC,UAAWpE,IAC3C,cAAC,IAAD,CAAOmE,KAAK,gBAAgBC,UAAWnE,IAGvC,cAAC,IAAD,CAAOkE,KAAK,kBAAkBC,UAAWlE,IACzC,cAAC,IAAD,CAAOiE,KAAK,2BAA2BC,UAAWI,IAClD,cAAC,IAAD,CAAOL,KAAK,kBAAkBC,UAAWhE,KAKzC,cAAC,IAAD,CAAO+D,KAAK,kBAAkBC,UAAW/D,KACzC,cAAC,IAAD,CAAO8D,KAAK,iBAAiBC,UAAW9D,KACxC,cAAC,IAAD,CAAO6D,KAAK,mBAAmBC,UAAW7D,KAC1C,cAAC,IAAD,CAAO4D,KAAK,iBAAiBC,UAAW5D,KAGxC,cAAC,IAAD,CAAO2D,KAAK,WAAWC,UAAW3D,KAClC,cAAC,IAAD,CAAO0D,KAAK,UAAUC,UAAW1D,KACjC,cAAC,IAAD,CAAOyD,KAAK,WAAWC,UAAWzD,KAGlC,cAAC,IAAD,CAAOwD,KAAK,kBAAkBC,UAAWxD,KACzC,cAAC,IAAD,CAAOuD,KAAK,gBAAgBC,UAAWvD,KACvC,cAAC,IAAD,CAAOsD,KAAK,iBAAiBC,UAAWtD,KACxC,cAAC,IAAD,CAAOqD,KAAK,iBAAiBC,UAAWrD,KACxC,cAAC,IAAD,CAAOoD,KAAK,uBAAuBC,UAAWpD,KAC9C,cAAC,IAAD,CAAOmD,KAAK,0BAA0BC,UAAWnD,KACjD,cAAC,IAAD,CAAOkD,KAAK,uBAAuBC,UAAWlD,KAG9C,cAAC,IAAD,CAAOiD,KAAK,iBAAiBC,UAAWjD,KACxC,cAAC,IAAD,CAAOgD,KAAK,mBAAmBC,UAAWhD,KAC1C,cAAC,IAAD,CAAO+C,KAAK,uBAAuBC,UAAW/C,KAC9C,cAAC,IAAD,CAAO8C,KAAK,qBAAqBC,UAAW9C,KAC5C,cAAC,IAAD,CAAO6C,KAAK,6BAA6BC,UAAW7C,KACpD,cAAC,IAAD,CAAO4C,KAAK,kBAAkBC,UAAW5C,KACzC,cAAC,IAAD,CAAO2C,KAAK,qBAAqBC,UAAW3C,KAC5C,cAAC,IAAD,CAAO0C,KAAK,oBAAoBC,UAAW1C,KAG3C,cAAC,IAAD,CAAOyC,KAAK,0BAA0BC,UAAWzC,KACjD,cAAC,IAAD,CAAOwC,KAAK,4BAA4BC,UAAWxC,KACnD,cAAC,IAAD,CAAOuC,KAAK,qBAAqBC,UAAWvC,KAC5C,cAAC,IAAD,CAAOsC,KAAK,mBAAmBC,UAAWtC,KAC1C,cAAC,IAAD,CAAOqC,KAAK,oBAAoBC,UAAWrC,KAC3C,cAAC,IAAD,CAAOoC,KAAK,kBAAkBC,UAAWpC,KACzC,cAAC,IAAD,CAAOmC,KAAK,uBAAuBC,UAAWnC,KAC9C,cAAC,IAAD,CAAOkC,KAAK,oBAAoBC,UAAWlC,KAC3C,cAAC,IAAD,CAAOiC,KAAK,kBAAkBC,UAAWjC,KACzC,cAAC,IAAD,CAAOgC,KAAK,mBAAmBC,UAAWhC,KAO1C,cAAC,IAAD,CAAO+B,KAAK,kBAAkBC,UAAW/B,KACzC,cAAC,IAAD,CAAO8B,KAAK,iBAAiBC,UAAW9B,KAGxC,cAAC,IAAD,CAAO6B,KAAK,eAAeC,UAAW7B,KACtC,cAAC,IAAD,CAAO4B,KAAK,iBAAiBC,UAAW3B,KACxC,cAAC,IAAD,CAAO0B,KAAK,mBAAmBC,UAAW1B,KAC1C,cAAC,IAAD,CAAOyB,KAAK,mBAAmBC,UAAWzB,KAC1C,cAAC,IAAD,CAAOwB,KAAK,mBAAmBC,UAAWxB,KAC1C,cAAC,IAAD,CAAOuB,KAAK,gBAAgBC,UAAWvB,KACvC,cAAC,IAAD,CAAOsB,KAAK,iBAAiBC,UAAWtB,KACxC,cAAC,IAAD,CAAOqB,KAAK,eAAeC,UAAWrB,KACtC,cAAC,IAAD,CAAOoB,KAAK,qBAAqBC,UAAWpB,KAC5C,cAAC,IAAD,CAAOmB,KAAK,gBAAgBC,UAAWnB,KACvC,cAAC,IAAD,CAAOkB,KAAK,wBAAwBC,UAAWlB,KAG/C,cAAC,IAAD,CAAOiB,KAAK,QAAQC,UAAWjB,KAG/B,cAAC,IAAD,CAAOgB,KAAK,mBAAmBC,UAAWf,KAC1C,cAAC,IAAD,CAAOc,KAAK,iBAAiBC,UAAWhB,KACxC,cAAC,IAAD,CAAOe,KAAK,kBAAkBC,UAAWd,KACzC,cAAC,IAAD,CAAOa,KAAK,iBAAiBC,UAAWb,KACxC,cAAC,IAAD,CAAOY,KAAK,kBAAkBC,UAAWZ,KAGzC,cAAC,IAAD,CAAOW,KAAK,gBAAgBC,UAAWX,KAGvC,cAAC,IAAD,CAAOU,KAAK,YAAYC,UAAWV,KAGnC,cAAC,IAAD,CAAOS,KAAK,gBAAgBC,UAAWT,KACvC,cAAC,IAAD,CAAOQ,KAAK,gBAAgBC,UAAWP,KAGvC,cAAC,IAAD,CAAOM,KAAK,YAAYC,UAAWN,KAGnC,cAAC,IAAD,CAAOK,KAAK,kBAAkBC,UAAWL,KAGzC,cAAC,IAAD,CAAOI,KAAK,uBAAuBC,UAAWJ,KAG9C,cAAC,IAAD,CAAOG,KAAK,kBAAkBC,UAAWH,WChS1CQ,I,MAnDC,SAACjK,GAEb,SAASkK,EAAKC,GACVnK,EAAMoK,aAAaD,GAGvB,OACI,sBAAKlK,UAAU,UAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qDACA,yBAAQoK,QAAS,WAAQH,EAAK,SAA9B,cAA0C,qBAAK1I,IAAKC,0CAApD,YACA,yBAAQ4I,QAAS,WAAQH,EAAK,QAA9B,cAAyC,qBAAK1I,IAAKC,yCAAnD,WACA,yBAAQ4I,QAAS,WAAQH,EAAK,WAA9B,cAA4C,qBAAK1I,IAAKC,4CAAtD,eACA,yBAAQ4I,QAAS,WAAQH,EAAK,WAA9B,cAA4C,qBAAK1I,IAAKC,4CAAtD,cACA,wBAAQ4I,QAAS,WAAQH,EAAK,eAA9B,2BACA,yBAAQG,QAAS,WAAQH,EAAK,YAA9B,cAA6C,qBAAK1I,IAAKC,gDAAvD,IAAuH,2EAAvH,UAEJ,sBAAKxB,UAAU,kBAAf,UACI,iEACA,yBAAQoK,QAAS,WAAQH,EAAK,SAA9B,cAA0C,qBAAK1I,IAAKC,0CAApD,YACA,yBAAQ4I,QAAS,WAAQH,EAAK,QAA9B,cAAyC,qBAAK1I,IAAKC,yCAAnD,WACA,wBAAQ4I,QAAS,WAAQH,EAAK,eAA9B,0BACA,yBAAQG,QAAS,WAAQH,EAAK,eAA9B,cAAgD,qBAAK1I,IAAKC,gDAA1D,IAA0H,+CAA1H,OACA,yBAAQ4I,QAAS,WAAQH,EAAK,UAA9B,cAA2C,qBAAK1I,IAAKC,2CAArD,aACA,yBAAQ4I,QAAS,WAAQH,EAAK,aAA9B,cAA8C,qBAAK1I,IAAKC,iDAAxD,IAAyH,2EAAzH,UAEJ,sBAAKxB,UAAU,iBAAf,UACI,+CACA,yBAAQoK,QAAS,WAAQH,EAAK,aAA9B,cAA8C,qBAAK1I,IAAKC,8CAAxD,gBACA,wBAAQ4I,QAAS,WAAQH,EAAK,kBAA9B,8CACA,yBAAQG,QAAS,WAAQH,EAAK,aAA9B,cAA8C,qBAAK1I,IAAKC,8CAAxD,mBACA,yBAAQ4I,QAAS,WAAQH,EAAK,YAA9B,cAA6C,qBAAK1I,IAAKC,6CAAvD,+BACA,yBAAQ4I,QAAS,WAAQH,EAAK,cAA9B,cAA+C,qBAAK1I,IAAKC,+CAAzD,gCACA,yBAAQ4I,QAAS,WAAQH,EAAK,iBAA9B,cAAkD,qBAAK1I,IAAKC,mDAA5D,gCACA,yBAAQ4I,QAAS,WAAQH,EAAK,UAA9B,cAA2C,qBAAK1I,IAAKC,2CAArD,gCACA,yBAAQ4I,QAAS,WAAQH,EAAK,WAA9B,eAA6C,qBAAK1I,IAAKC,4CAAvD,aACA,yBAAQ4I,QAAS,WAAQH,EAAK,UAA9B,gBAA6C,qBAAK1I,IAAKC,2CAAvD,aACA,wBAAQ4I,QAAS,WAAQH,EAAK,SAA9B,4BACA,wBAAQG,QAAS,WAAQH,EAAK,WAA9B,+CACA,yBAAQG,QAAS,WAAQH,EAAK,WAA9B,cAA4C,qBAAK1I,IAAKC,4CAAtD,0BACA,wBAAQ4I,QAAS,WAAQH,EAAK,YAA9B,+CACA,yBAAQG,QAAS,WAAQH,EAAK,WAA9B,cAA4C,qBAAK1I,IAAKC,4CAAtD,cACA,yBAAQ4I,QAAS,WAAQH,EAAK,OAA9B,cAAwC,qBAAK1I,IAAKC,wCAAlD,gCACA,wBAAQ4I,QAAS,WAAQH,EAAK,eAA9B,yCACA,wBAAQG,QAAS,WAAQH,EAAK,eAA9B,+CACA,yBAAQG,QAAS,WAAQH,EAAK,YAA9B,eAA8C,yEAA9C,eC9BDI,GAfE,WAEb,OACI,sBAAKrK,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,cAAT,8CACA,cAAC,IAAD,CAAMA,GAAG,YAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,cAAT,oCAEJ,qBAAKtK,UAAU,mBCMZuK,GAfC,WAEZ,OACI,sBAAKvK,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,aAAT,+CAEJ,sBAAKtK,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,0BAAT,2DACA,cAAC,IAAD,CAAMA,GAAG,sBAAT,4FCKDE,GAdO,WAGlB,OACI,sBAAKxK,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,oBAAT,yCAEJ,qBAAKtK,UAAU,mBCOZyK,GAfG,WAEd,OACI,sBAAKzK,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,eAAT,+CACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,0EAEJ,qBAAKtK,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,gBAAT,wECODI,GAhBE,WAEb,OACI,sBAAK1K,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,cAAT,iCACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,sDAEJ,sBAAKtK,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,qBAAT,kCACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,yCCIDK,GAdC,WAEZ,OACI,sBAAK3K,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,aAAT,+CAEJ,qBAAKtK,UAAU,mBCQZ4K,GAfI,WAEf,OAEI,sBAAK5K,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,gBAAT,kDAEJ,qBAAKtK,UAAU,mBCWZ6K,GAnBQ,WAGnB,OACI,sBAAK7K,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,0BAAT,wCACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,wCACA,cAAC,IAAD,CAAMA,GAAG,4BAAT,mEAEJ,sBAAKtK,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,mBAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,2BCgBDQ,GA7BI,WAGf,OACI,sBAAK9K,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,eAAC,IAAD,CAAMsK,GAAG,gBAAT,cAA0B,qBAAK/I,IAAKC,2CAApC,uCACA,cAAC,IAAD,CAAM8I,GAAG,eAAT,4DACA,cAAC,IAAD,CAAMA,GAAG,gBAAT,+CACA,eAAC,IAAD,CAAMA,GAAG,oBAAT,cAA8B,qBAAK/I,IAAKC,+CAAxC,iBACA,cAAC,IAAD,CAAM8I,GAAG,cAAT,sCACA,eAAC,IAAD,CAAMA,GAAG,iBAAT,cAA2B,qBAAK/I,IAAKC,4CAArC,cACA,eAAC,IAAD,CAAM8I,GAAG,qBAAT,cAA+B,qBAAK/I,IAAKC,gDAAzC,kBACA,eAAC,IAAD,CAAM8I,GAAG,kBAAT,cAA4B,qBAAK/I,IAAKC,8CAAtC,8CACA,cAAC,IAAD,CAAM8I,GAAG,cAAT,mDACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,2CACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,8CAGJ,sBAAKtK,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,0BAAT,8EACA,cAAC,IAAD,CAAMA,GAAG,0BAAT,6BACA,cAAC,IAAD,CAAMA,GAAG,0BAAT,wCACA,cAAC,IAAD,CAAMA,GAAG,0BAAT,0DCPDS,GAhBM,WAEjB,OACI,sBAAK/K,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,kBAAT,sCACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,kCACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,qDAEJ,qBAAKtK,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,iBAAT,0CCIDU,GAdI,WAEf,OACI,sBAAKhL,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,kBAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,wDAEJ,qBAAKtK,UAAU,mBCeZiL,GAvBG,WAEd,OACI,sBAAKjL,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,eAAT,+CACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,wEACA,cAAC,IAAD,CAAMA,GAAG,qBAAT,kEACA,cAAC,IAAD,CAAMA,GAAG,gBAAT,+CACA,cAAC,IAAD,CAAMA,GAAG,wBAAT,2EAEJ,sBAAKtK,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,gBAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,0CACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,4CACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,4CACA,cAAC,IAAD,CAAMA,GAAG,eAAT,gDCGDY,GApBK,WAEhB,OACI,sBAAKlL,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,iBAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,2DACA,cAAC,IAAD,CAAMA,GAAG,uBAAT,qEACA,cAAC,IAAD,CAAMA,GAAG,qBAAT,2DACA,cAAC,IAAD,CAAMA,GAAG,6BAAT,yDAEJ,sBAAKtK,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,kBAAT,kEACA,cAAC,IAAD,CAAMA,GAAG,qBAAT,uEACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,wECCDa,GAfE,WAEb,OAEI,sBAAKnL,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,QAAT,8BAEJ,qBAAKtK,UAAU,mBCSZoL,GAjBI,WAEf,OACI,sBAAKpL,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,mBAAT,qFACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,qFACA,cAAC,IAAD,CAAMA,GAAG,kBAAT,kFAEJ,sBAAKtK,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,iBAAT,yEACA,cAAC,IAAD,CAAMA,GAAG,kBAAT,sFCEDe,GAbI,WAEf,OACI,sBAAKrL,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,gBAAT,iDAEJ,qBAAKtK,UAAU,mBCOZsL,GAdK,WAEhB,OACI,sBAAKtL,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,YAAT,iDAEJ,qBAAKtK,UAAU,mBCSZuL,GAhBI,WAGf,OACI,sBAAKvL,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,gBAAT,mCACA,cAAC,IAAD,CAAMA,GAAG,gBAAT,wDAEJ,qBAAKtK,UAAU,mBCIZwL,GAbA,WAEX,OACI,sBAAKxL,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,YAAT,uDAEJ,qBAAKtK,UAAU,mBCgBZyL,GAvBO,WAGlB,OACI,sBAAKzL,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,mBAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,0BAAT,wCACA,cAAC,IAAD,CAAMA,GAAG,4BAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,qBAAT,+CACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,2DACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,wDAEJ,sBAAKtK,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,kBAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,uBAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,qDACA,cAAC,IAAD,CAAMA,GAAG,kBAAT,4DCFDoB,GAfM,WAEjB,OACI,sBAAK1L,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,kBAAT,+CACA,cAAC,IAAD,CAAMA,GAAG,kBAAT,oEAEJ,qBAAKtK,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,2BAAT,8ECQDqB,GAjBK,WAGhB,OACI,sBAAK3L,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,gBAAT,+CACA,cAAC,IAAD,CAAMA,GAAG,gBAAT,0CACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,mEACA,cAAC,IAAD,CAAMA,GAAG,yBAAT,2EAEJ,qBAAKtK,UAAU,mBCSZ4L,GApBG,WAGd,OACI,sBAAK5L,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,kBAAT,yCACA,cAAC,IAAD,CAAMA,GAAG,gBAAT,gCACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,6CACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,uBAAT,iCACA,cAAC,IAAD,CAAMA,GAAG,0BAAT,yCACA,cAAC,IAAD,CAAMA,GAAG,uBAAT,8BAEJ,qBAAKtK,UAAU,mBCAZ6L,GAdI,WAGf,OACI,sBAAK7L,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,kBAAT,gCAEJ,qBAAKtK,UAAU,mBCOZ8L,GAfW,WAEtB,OACI,sBAAK9L,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMsK,GAAG,WAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,wBAEJ,qBAAKtK,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,WAAT,0BCKDyB,GAdQ,WAEnB,OACI,sBAAK/L,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,uBAAT,uDAEJ,qBAAKtK,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,IAAT,sBCMD0B,GAdK,WAEhB,OACI,sBAAKhM,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,kBAAT,0EAEJ,qBAAKtK,UAAU,aAAf,SACI,cAAC,IAAD,CAAMsK,GAAG,IAAT,sBCyID2B,I,YApHE,SAAClM,GAEd,SAASkK,EAAKC,GACVnK,EAAMoK,aAAaD,GAEvB,SAASD,EAAKiC,GACVnM,EAAMoK,aAAa+B,GAkGvB,OACI,qBAAKlM,UAAU,WAAf,SACI,sBAAKA,UAAU,OAAf,UACI,kCAAKD,EAAMmK,KAAX,OACA,8BA5FW,SAAfnK,EAAMmK,KAEC,cAAC,GAAD,CAAUC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA1C,eAEa,QAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAASC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAAzC,eAEa,eAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAeC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA/C,eAEa,UAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAWC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA3C,eAEa,aAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAcC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA9C,eAGa,SAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAUC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA1C,eAEa,QAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAASC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAAzC,eAEa,WAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAYC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA5C,eAEa,WAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAYC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA5C,eAEa,eAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAgBC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAAhD,eAEa,YAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAaC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA7C,eAGa,aAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAcC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA9C,eAEa,YAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAaC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA7C,eAEa,WAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAYC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA5C,eAEa,UAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAWC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA3C,eAEa,SAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAUC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA1C,eAEa,WAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAYC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA5C,eAEa,WAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAYC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA5C,eAEa,YAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAaC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA7C,eAEa,WAAfnM,EAAMmK,KACJ,cAACiC,GAAD,CAAYhC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA5C,eAEa,OAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAQC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAAxC,eAEa,cAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAeC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA/C,eAEa,aAAfnM,EAAMmK,KACJ,cAACkC,GAAD,CAAcjC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA9C,eAEa,eAAfnM,EAAMmK,KACJ,cAACmC,GAAD,CAAgBlC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAAhD,eAEa,kBAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAmBC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAAnD,eAEa,eAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAgBC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAAhD,eAEa,YAAfnM,EAAMmK,KACJ,cAAC,GAAD,CAAaC,aAAc,SAAC+B,GAAYjC,EAAKiC,IAA7C,eAGA,6CClHJI,I,MAhBK,WAChB,OACI,sBAAKtM,UAAU,WAAf,UACI,wBAGA,sBAAKA,UAAU,UAAf,UACI,uCAAS,oBAAGE,KAAK,8BAA8BC,OAAO,SAAS4H,IAAI,sBAA1D,UACL,qBAAKxG,IAAKC,0CAAyDC,IAAI,KADlE,OAAT,OAEA,uCAAS,oBAAGvB,KAAK,wCAAwCC,OAAO,SAAS4H,IAAI,sBAApE,UACL,qBAAKxG,IAAKC,4CAA2DC,IAAI,KADpE,OAAT,eCsCD8K,GA1CH,WACV,MAA+BC,mBAAS,QAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAiCF,mBAAS,QAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KAWA,OAEI,sBAAK5M,UAAU,MAAf,UAEE,eAAC,IAAD,WAEE,sBAAKA,UAAU,kBAAf,UACE,cAAC,GAAD,CAASmK,aAAc,SAACD,IAhBf,SAACA,EAAKrF,GACvB6H,EAAYxC,GAe6B2C,CAAW3C,IAA5C,eACA,cAAC,GAAD,CAAUA,KAAMuC,EAAUtC,aAAc,SAAC+B,IAb/B,SAACA,EAAMrH,GACzB+H,EAAaV,GAY8CY,CAAYZ,IAA/D,kBAGF,qBAAKlM,UAAU,kBAAf,SACE,cAAC,GAAD,CAAMkM,MAAOS,EAAb,iBAGF,qBAAK3M,UAAU,kBAAf,SACE,cAAC,GAAD,CAAasM,aAAW,EAAxB,oBAKJ,yBAAQtM,UAAU,UAAlB,cAA6B,oBAAGE,KAAK,IAAR,UAC1B,qBAAKqB,IAAKC,6CADgB,eC9BtBuL,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFpJ,SAASqJ,eAAe,SAG1BZ,O","file":"static/js/main.603f16cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst JavaBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mtitle\"> <a name=\"자바 문법\"> 자바 문법 </a> </span>\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"출력메소드\"> ▶ 출력메소드 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> System.out.println(\"\"); #줄바꿈</li>\r\n                                    <li> System.out.print(\"\"); </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"자료형\"> ▶ 자료형 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> byte : 정수형</li>\r\n                                    <li> short : 정수형 </li>\r\n                                    <li> int : 정수형 </li>\r\n                                    <li> long : : 정수형</li>\r\n                                    <li> float : 실수형</li>\r\n                                    <li> double : 실수형</li>\r\n                                    <li> char : 문자형</li>\r\n                                    <li> boolean : 참거짓</li>\r\n                                    <li> string : 문자열</li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"입력메소드\"> ▶ 입력메소드 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> import java.util.Scanner; </small>\r\n                                    <li> Scanner scanner = new Scanner(System.in); </li>\r\n                                    <li> scanner.nextlnt(); #숫자입력</li>\r\n                                    <li> scanner.next(); #문자열입력</li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"문자열\"> ▶ 문자열 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> 문자열.toLowerCase() #모두 소문자로 </li>\r\n                                    <li> 문자열.toUpperCase() #모두 대문자로 </li>\r\n                                    <li> 문자열1.equals(문자열2) #2개의 문자열을 비교 </li>\r\n                                    {/* 기억이 잘안나서 다시 봐야 된다. */}\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details></span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"배열\"> ▶ 배열 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> int arr[] = {'{1,2,3}'} </li>\r\n                                    <li> int arr[][] = {'{1,2,3},{4,5,6}'} </li>\r\n                                    <li> int arr[][] = new int[2][2]; #배열 선언</li>\r\n                                    <li> 배열.length #배열의 길이 </li>\r\n                                    <li> 배열1 = 배열2 #얕은복사 , 원본이 바뀌면 같이 변함 </li>\r\n                                    <li> 배열.clone() #배열복사 , 깊은복사(원본과 공유x) </li>\r\n                                    <li> 배열1 = Arrays.copyOf(배열2, 배열2.length) #깊은복사 </li>\r\n                                    <li> 배열1 = Arrays.copyOfRange(배열2, 시작인덱스, 원하는인덱스) #일정 배열을 깊은복사 </li>\r\n                                    <li> 2차원 배열을 복사하는 방법은 반복문을 통해서 작업한다. </li>\r\n                                </span>\r\n                            </details></span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"반복문\"> ▶ 반복문 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> for ( int i : 배열) {'{ 코드작성 }'} </li>\r\n                                    <li> for ( String name : 배열) {'{ 코드작성 }'} </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details></span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"상속\"> ▶ 상속 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> @Override #굳이 선언을 해줄 필요는 없지만 개발자들이 보기 편함 </li>\r\n                                    <li> extends 부모클래스 </li>\r\n                                    <li> implements 인터페이스 </li>\r\n                                </span>\r\n                            </details></span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"랜덤\"> ▶ 랜덤 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> rand.nextInt() #랜덤함수 사용 </li>\r\n                                </span>\r\n                            </details></span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"인터페이스\"> ▶ 인터페이스 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 인터페이스를 상속받은 클래스는 무조건 메소드를 선언해주어야 한다. </small>\r\n                                    <li> public interface 인터페이스명 {'{'} </li>\r\n                                    <li> &nbsp;자료형 메소드명(); </li>\r\n                                    <li> {'}'} </li> <br />\r\n                                    <li> public class 클래스명 implements 인터페이스명 </li>\r\n                                </span>\r\n                            </details></span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"캐스팅\"> ▶ 캐스팅 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details></span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"형변환\"> ▶ 형변환 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details></span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> ▶ Optional </summary>\r\n                                <li> T타입의 객체를 포장해주는 래퍼 클래스 </li>\r\n                                <li> Null을 예외처리하지 않고 처리가 가능하다는 장점이 있다. </li>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.isEmpty() \"}  : 값이 존재하는지 boolean값 리턴 </li>\r\n                                    </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.orElseGet() \"}  : 저장된 값이 존재하면 값을 반환 값이 없으면 인수로 전달된\r\n                                            람다 표현식 결과값 반환 </li>\r\n                                    </span>\r\n                                    <li> 시작 처리 : 옵셔널 객체 생성 메소드 </li>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\"Optional.of()\"}  : 저장된 값이 존재하면 입력된 값을 반환 없으면\r\n                                            인수로 전달된 예외를 발생 </li>\r\n                                        <li>  Optional&lt;String&gt; opt = Optional.of(\"result\"); </li>\r\n                                    </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\"Optional.ofNullable()\"}  : value가 null인 경우 Optional 반환</li>\r\n                                        <li> Optional&lt;String&gt; opt = Optional.ofNullable(객체); </li>\r\n                                        <li> 객체가 존재하지 않으면 return Optional.empty + 에러발생</li>\r\n                                        <li> 객체가 존재하면 return Optional객체 </li>\r\n                                    </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\"Optional.empty()\"}  : 비어있는 Optional 객체 생성, Optional을 null로 초기화하기도 함 </li>\r\n                                        <li> Optional&lt;String&gt; opt = Optional.empty(); </li>\r\n                                    </span>\r\n                                    <li> 중간 처리 , 옵셔널 객체가 생성된 후 사용가능, 아래 메서드는 옵셔널 객체를 반환 </li>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.ifPresent() \"}  : </li>\r\n                                        <li> Optional.of(\"객체\").ifPresent((value) {\"->\"} {\"{\"} {\"}\"} );</li>\r\n                                        <li> Optional.ofNullable(null).ifPresent((value) {\"->\"} {\"{\"} {\"}\"} );</li>\r\n                                    </span>\r\n                                    <li> 종단 처리 , 옵셔널 객체의 체이닝을 끝냄 </li>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.ifPresent() \"}  : </li>\r\n                                        <li> Optional.of(\"객체\").ifPresent((value) {\"->\"} {\"{\"} {\"}\"} );</li>\r\n                                        <li> Optional.ofNullable(null).ifPresent((value) {\"->\"} {\"{\"} {\"}\"} );</li>\r\n                                    </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.isPresent() \"}  : 객체가 존재하는지 여부 판단, 있으면 true </li>\r\n                                        <li>  {\" Optional.ofNullable(객체).isPresent(); \"} : 객체가 존재하는지 여부 판단, 있으면 true </li>\r\n                                    </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.get() \"}  : 객체를 꺼냄, 비어있는 옵셔널 객체면 예외 발생 </li>\r\n                                        <li>  {\" Optional.ofNullable(null).get(); \"}  </li>\r\n                                    </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.orElse() \"}  : 옵셔널 객체가 비어있든,아니든 실행 기본값으로 제공할 객체를 지정 </li>\r\n                                        <li>  {\" Optional.ofNullable(null).orElse(객체);\"} </li>\r\n                                    </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.orElseGet() \"}  : 옵셔널 객체가 비어있을때만 실행 , 기본갑으로 제공할 공급자함수 지정 </li>\r\n                                    </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  {\" opt.orElseThrow() \"}  : (자바10)옵셔널 객체가 비어있으면 , 예외 공급자함수를 통해 예외 발생 </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"Stream\"> ▶ Stream </a> </summary>\r\n                                <li> 스트림은 배열 또는 컬렉션 인스턴스를 이용해서 사용 가능</li>\r\n                                <span className=\"sblock\">\r\n                                    <li> 배열 스트림</li>\r\n                                    <li> {\"Stream<String> stream = Arrays.stream(arr)\"} </li>\r\n                                    <li> {\"Stream<String> streamOfArrayPart = Arrays.stream(arr,1,3)\"} </li>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <li> 컬렉션 스트림</li>\r\n                                    <li> {\"public interface Collection<E> extends Iterable<E>\"} </li>\r\n                                    <li> {\"default Stream<E> stream() \"} </li>\r\n                                    <li> {\" return StreamSupport.strea(spliterator(),false);\"} </li>\r\n                                    <li> {\" \"}</li>\r\n                                    <li> {\" Stream<String> stream = list.stream(); \"}</li>\r\n                                    <li> {\" Stream<String> parallelStream = list.parallelStream(); \"}</li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"함수의 종류\"> ▶ 함수의 종류</a> </summary>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <li> <a href=\"https://moreget.github.io/dev-00000061-Java-Consumer_Supplier/\" target=\"_blank\"> 참고 사이트 </a> </li>\r\n                                    <li> Consumer : 매개값은 있고 리턴값은 없음 </li>\r\n\r\n                                    <li> Supplier : 매개값은 없고, 리턴값은 있음</li>\r\n\r\n                                    <li> Function : 매개값을 (주로)리턴값으로 반환 </li>\r\n\r\n                                    <li> Operator : 매개값으로 연산하고 리턴 반환</li>\r\n\r\n                                    <li> Predicate : 매개값은 있고 리턴은 boolean반환 </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"Assertion\"> ▶ Assertion </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <li> 코드가 잘 작성되었는지 확인하는데 돕는 기능이다. 예외 처리와 비슷하기는\r\n                                        하지만 예외처리는 개발자가 생각하지 못한 에러에 대한 처리를 담당하는 것이다.\r\n                                    </li>\r\n                                    <li> Assertion은 개발자가 정한 조건을 만족시키면 코드가 실행되고 그 외에는 실행되지\r\n                                        못하게 하는 차이가 있다.\r\n                                    </li>\r\n                                    <li> Assertion을 적당한 위치에 배치시켜 사용하면 좋은 동작을 수행할 수 있다. 반대로\r\n                                        모든 상황에 적용시키면 좋지 않다.\r\n                                    </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"자료구조\"> ▶ 자료구조 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <li> {\"Map<자료형,자료형> Map객체명 = new HashMap<>(); \"}</li>\r\n                                    <li> 메서드 종류 </li>\r\n                                    <li>  Map객체.put(키,값)  : 맵객체에 추가 </li>\r\n                                    <li>  Map객체.keys()  : 객체의 키만 담은 배열 반환 </li>\r\n                                    <li>  Map객체.values()  : 객체의 값만 담은 배열 반환 </li>\r\n                                    <li> {\"Collection<String> values = map.values();\"}</li>\r\n                                    <li> {\"String[] arr = values.toArray(new String[0]);\"}</li>\r\n                                    <li> {\"List<String> list = new ArrayList<>(values);\"}</li>\r\n                                    <li> {\"Set<String> set = new HashSet<>(values);\"}</li>\r\n                                    <li>  Map객체.entries()  : 객체의 [키,값] 담은 배열 반환 </li>\r\n                                    <li> ArrayList{'<String>'} array = new ArrayList{'<String>();'} #초기에 지정하지 않아도 사용이 가능</li>\r\n                                    <li> HashMap{'<string>'} hashmap = new HashMap{'<>();'} </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"Enum\"> ▶ Enum </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 상수들로 만들어진 집합, 열거형 클래스</small>\r\n                                    <li> enum 클래스를 만들고 사용할 때는 enum클래스.값 , enum클래스[인덱스] 처럼 사용</li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"Generic\"> ▶ Generic </a> </summary>\r\n                                <small> 자료형 타입을 정해서 사용하는 메소드 </small>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> JDK1.5 , Java5에 도입 </li>\r\n                                        <li>  </li>\r\n                                        <li> Java SE 7 부터 {'<>'}타입변수가 추측이 가능하면 아래와 같이 생략가능\r\n                                            <span className=\"sblock\">\r\n                                                <li> {'Test<Integer> test = new Test<>(Integer); '} # Java SE 7 이전 </li>\r\n                                                <li> {'Test<Integer> test = new Test<>(); '} # Java SE 7 이후 </li>\r\n                                            </span>\r\n                                        </li>\r\n                                        <li> 자바 컴파일시에 클래스나 메소드에서 사용할 내부 데이터 타입을 지정 </li>\r\n                                        <li> 자바 컴파일시 제너릭 타입은 타입 변환이 되고 선언되었던 모든 제너릭타입은 제거가 된다. </li>\r\n                                        <li className=\"col_be\"> 사용되는 객체의 타입 안정성 증가</li>\r\n                                        <li className=\"col_be\"> 반환값에 대한 Object객체 타입변환 및 변환검사에 드는 비용을 아낄 수 있음 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 제너릭 클래스 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> public class 클래스명{'<T>'}  </li>\r\n                                        <li> public class 클래스명{'<T extends 클래스명>'} # 특정 타입만 사용하게 제한   </li>\r\n                                        <li> public class 클래스명{'<T extends 인터페이스명>'} # 특정 타입만 사용하게 제한   </li>\r\n                                        <li> public class 클래스명{'<T extends 클래스명 & 인터페이스명>'}    </li>\r\n                                        <li> 클래스명{'<T>'} 객체명 = new 클래스{'<>'}() </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 제너릭 메소드 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3> 설명 : </h3>\r\n                                            <li> 제너릭 클래스의 타입변수와 메소드의 타입변수는 다른 타입변수임  </li>\r\n                                            <li> 타입변수의 ?(와일드카드) 는 모든 타입 사용 가능 </li>\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                        <li> public static {'<T>'} void 메소드명(T array)  </li>\r\n                                        <li> public static {'<?>'} void 메소드명(T array) </li>\r\n                                        <li> public static {'<? extends T>'} void 메소드명(T array) # T타입을 상속받는 것만 가능 </li>\r\n                                        <li> public static {'<? super T>'} void 메소드명(T array) # T타입이 상속받은 조상클래스 타입만 사용가능 </li>\r\n                                        <li>   </li>\r\n                                        <li>   </li>\r\n                                        <li>   </li>\r\n                                    </span>\r\n\r\n                                    <span className=\"sstitle\"> </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 제너릭 타입변수(임의의 참조형 타입) 종류 </span>\r\n\r\n                                    <li> E : 요소(Element, 자바 컬렉션)  </li>\r\n                                    <li> K : 키  </li>\r\n                                    <li> N : 숫자  </li>\r\n                                    <li> T : 타입  </li>\r\n                                    <li> V : 값  </li>\r\n\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 시큐리티에서 사용하는 제너릭 타입 종류 </span>\r\n\r\n                                    <li> O : 빌드 하려는 개체의 유형?  </li>\r\n                                    <li> B : SecurityBuilder의 타입  </li>\r\n                                    <li>  </li>\r\n\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> Generic WildCard </span>\r\n                                    <li> {'<?>'} : 모든 타입의 인자를 받을 수 있음  </li>\r\n                                    <li> {'<? extends 부모클래스>'} : 부모 클래스의 자식 클래스를 인자로 받음,\r\n                                        하지만 부모클래스의 정의된 기능만 사용가능하다?  </li>\r\n                                    <li> {'<? super 자식클래스>'} : 자식클래스의 부모클래스를 인자로 받음  </li>\r\n                                </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> Generic example </span>\r\n                                    <li> ArrayList{'<T>'} array = new ArrayList{'<>'}(); </li>\r\n                                    <li> 클래스{'<T extends 부모클래스>'} </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"람다식\"> ▶ 람다식 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <li> <h3> 설명 : </h3>\r\n                                        <li> 기존 메소드 표현을 간단하게 표현한 방식 </li>\r\n                                        <li>   </li>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    {/*  */}\r\n                                    <li> <h3>  메소드 예시 1</h3>\r\n                                        <span className=\"mblock\">\r\n                                            <li> <h4> 기존 메소드 방식 </h4>\r\n                                                <li> {'for(int i=0; i<10; i++) { '}\r\n                                                    <li> System.out.println(i); </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </li>\r\n                                            <li> <h4> 람다 메소드 방식 </h4>\r\n                                                <li> IntStream.range(0,10).foreach((int i){'->'} )\r\n                                                    <li> System.out.println(i) </li>\r\n                                                </li>\r\n                                                <li> ); </li>\r\n                                            </li>\r\n                                        </span>\r\n                                    </li>\r\n                                    {/*  */}\r\n                                    <li> <h3> 메소드  예시 2</h3>\r\n                                        <span className=\"mblock\">\r\n                                            <li> <h4> 기존 메소드 방식 </h4>\r\n                                                <li> int add(int x,int y) {'{'}\r\n                                                    <li> return x+y; </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </li>\r\n                                            <li> <h4> 람다 메소드 방식 </h4>\r\n                                                <li> {'(x,y)-> x < y ? x : y; '} </li>\r\n                                            </li>\r\n                                        </span>\r\n                                    </li>\r\n                                    {/*  */}\r\n                                    <li> <h3> 1회용 클래스 예시 </h3>\r\n                                        <span className=\"mblock\">\r\n                                            <li> <h4> 람다 클래스 방식 </h4>\r\n                                                <li> {'new 클래스명(()-> {'}\r\n                                                    <li> System.out.println(\"\"); </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </li>\r\n                                        </span>\r\n                                    </li>\r\n                                    {/*  */}\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"\"> ▶ </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details> <summary className=\"stitle\"> <a name=\"\"> ▶  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small>  </small>\r\n                                    <li> </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default JavaBasic;\r\n\r\n","import React from 'react';\r\n\r\nconst JavaSerializable = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 자바에서 Serializable 인터페이스란? <a name=\"자바에서 Serializable 인터페이스란?\" style={{ visibility: \"hidden\" }}> 자바에서 Serializable 인터페이스란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 유저가 만든 클래스 파일을 읽기,쓰기,다른서버송신,수신 하는 용도 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 자바코드로 Serializable 인터페이스를 찾아보면 아무런 코드가 없다. 그래서 이게 뭐지 라는 생각이 든다면 당연한\r\n                                        것이다. 인터페이스를 구현한 클래스가 특정능력을 가진다는 의미로 마커 인터페이스라고도 한다. </li>\r\n                                    <li> JVM에서 이 인터페이스를 구현한 객체를 인식해서 저장하거나 보내거나 하는 일을 하게 만든다. </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 직렬화란? <a name=\"직렬화란?\" style={{ visibility: \"hidden\" }}> 직렬화란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 외부 자바 시스템에서도 사용가능하게 2진수 형태(바이트스트림)로 데이터를 변환/역변환 하는 기술 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 양쪽의 자바시스템의 소스버전이 다르면 직렬화를 주고받는 데이터가 변할 수 있으므로 버전이 같아야함  </li>\r\n                                    <li> private static final long serialVersionUID = 1L; </li>\r\n                                    <small> 클래스1을 직렬화, 그리고 클래스1을 수정해서 클래스2라고 지칭 , 클래스 1을 직렬화\r\n                                        했던것을 클래스2로 역직렬화를 하게 되면 에러가 발생, 2개의 클래스를 다르다고 인식,\r\n                                        이때 serialVersionUID 로 식별자를 사용하게 되면 같다고 여겨서 에러가 발생 하지 않음 </small>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 자바 직렬화 인코딩 코드  <a name=\"자바 직렬화 인코딩 코드\" style={{ visibility: \"hidden\" }}> 자바 직렬화 인코딩 코드 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <p> {'private static String serialize() {'} </p>\r\n                                    <p> &nbsp;{'Member member = new Member(\"홍길동\",\"활빈당\",20);'} </p>\r\n                                    <p> &nbsp;{'byte[] serializedMember;'} </p>\r\n                                    <p> &nbsp;{'String serializedMemberStr = \"\"; '} </p>\r\n                                    <p> &nbsp;{'try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {'} </p>\r\n                                    <p> &nbsp;&nbsp;{'try (ObjectOutputStream oos = new ObjectOutputStream(baos)) {'} </p>\r\n                                    <p> &nbsp;&nbsp;&nbsp;{'oos.writeObject(member);'} </p>\r\n                                    <p> &nbsp;&nbsp;&nbsp;{'serializedMember = baos.toByteArray();'} </p>\r\n                                    <p> &nbsp;&nbsp;&nbsp;{'serializedMemberStr = Base64.getEncoder().encodeToString(serializedMember);'} </p>\r\n                                    <p> &nbsp;&nbsp;{'}'} </p>\r\n                                    <p> &nbsp;{'}'} </p>\r\n                                    <p> &nbsp;{'return serializedMemberStr;'} </p>\r\n                                    <p> {'}'} </p>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 자바 직렬화 디코딩 코드  <a name=\"자바 직렬화 디코딩 코드\" style={{ visibility: \"hidden\" }}> 자바 직렬화 디코딩 코드 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> {'private static void deserialize(byte[] serializedMember) { '} </li>\r\n                                    <li> &nbsp;{'try (ByteArrayInputStream bais = new ByteArrayInputStream(serializedMember)) { '} </li>\r\n                                    <li> &nbsp;&nbsp;{'try (ObjectInputStream ois = new ObjectInputStream(bais)) { '} </li>\r\n                                    <li> &nbsp;&nbsp;&nbsp;{'Object o = ois.readObject(); '} </li>\r\n                                    <li> &nbsp;&nbsp;&nbsp;{'Member o1 = (Member) o; '} </li>\r\n                                    <li> &nbsp;&nbsp;&nbsp;{'System.out.println(o1); '} </li>\r\n                                    <li> &nbsp;&nbsp;{'} '} </li>\r\n                                    <li> &nbsp;{'} '} </li>\r\n                                    <li> {'} '} </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaSerializable;","import React from 'react';\r\n\r\nconst JavaModifier = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 제어자란? <a name=\"제어자란?\" style={{ visibility: \"hidden\" }}> 제어자란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 제어자의 종류 <a name=\"제어자의 종류\" style={{ visibility: \"hidden\" }}> 제어자의 종류 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ public </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 접근 제어자 : 같은 패키지, 다른 패키지 전부 허용 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ protected </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 접근 제어자 :  같은 패키지 안에서는 모두 접근 허용, 다른 패키지에서는 자식클래스일 때만 접근 허용 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ default </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 접근 제어자 : 같은 패키지 안에서만 접근 허용 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ private </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 접근 제어자 : 같은 클래스 안에서만 접근 허용 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ static </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> static 멤버변수 : 모든 인스턴스가 공통적으로 사용하는 값, 클래스가 메모리에 생성될 때 같이 생성\r\n                                            , static 멤버변수(클래스변수)는 인스턴스를 생성하지 않고서도 사용이 가능하다. </li>\r\n                                        <li> static 메소드 : 인스턴스를 생성하지 않고도 사용이 가능한 메소드 , static 메서드 내에서는\r\n                                            인스턴스의 멤버변수를 직접 사용을 할 수 없다. , 인스턴스 멤버변수를 사용하지 않는\r\n                                            메서드에는 static 사용을 하는 것을 고려해 봐야 한다. </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ final </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> final 클래스 : 변경할수 없고 확장할 수 없는 클래스 , 다른 클래스의 조상클래스가 될 수 없다. </li>\r\n                                        <li> final 메서드 : 오버라이딩으로 재정의 될 수 없다. </li>\r\n                                        <li> final 멤버변수, final 변수 : 값을 변경할 수 없는 상수로 변경 , 생성자를 통해 값을 넣어주어야\r\n                                            인스턴스마다 다른 값을 가지게 해줄 수 있다. </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ abstract </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> abstract 클래스 : 추상클래스로 정의, 인스턴스를 생성할 수 없다. 추상클래스도 클래스이므로\r\n                                            상속을 받으면 일부 메서드만 오버라이딩을 해서 사용이 가능하다는 장점이 있음 </li>\r\n                                        <li> abstract 메서드 : 인터페이스에서 메서드를 선언하는 것처럼 구현이 되있지는 않지만\r\n                                            상속을 받아서 구현을 할 수 있음 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ native </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ transient </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> private transient String 멤버변수; </li>\r\n                                        <li> 위와 같이 사용을 하면 직렬화를 하였을 때 , 직렬화 과정에서 예외로 처리\r\n                                            , 직렬화를 하고 다시 역직렬화를 하였을 때 필드는 남아있지만 멤버변수 값은 null로 처리된다. </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ synchronized </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ volatile </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ strictfp </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ 클래스, 메서드, 멤버변수, 지역변수</summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 클래스 : public , default, final, abstract </li>\r\n                                        <li> 메서드 : public , default, private, protected, final, abstract, static </li>\r\n                                        <li> 멤버변수 : public , default, private, protected, final, static  </li>\r\n                                        <li> 지역변수 : final </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 제어자 사용 주의 <a name=\"제어자 사용 주의\" style={{ visibility: \"hidden\" }}> 제어자 사용 주의 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 메서드에 static + abstract 사용 불가 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> abstract클래스는 직접적으로 객체가 될 수 없으므로 static메서드 또한\r\n                                        사용이 불가능하다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 클래스에 abstract + final 사용불가 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> abstract 클래스는 구현이 되어야 사용이 가능한데 final로 정의함으로써\r\n                                        사용이 불가능해진다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> abstract 메서드에 private 사용불가 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> abstract 메서드는 구현된 인스턴스에서 사용이 가능한데 private를 사용하면\r\n                                        자식 클래스에서 접근이 불가능하게 만들어서 사용할 수 없다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> private + final 같이 사용 불필요 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> private로 하나 final로 하나 자식클래스에서는 사용이 불가능하다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaModifier;","import React from 'react';\r\n\r\nconst JavaAnnotation = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 자바 어노테이션 종류\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> @Override </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 메서드 위에 선언하여 부모클래스로부터 상속받은 메소드라는 것을 표시 </li>\r\n                                        <li> 상속받는 메소드가 존재하지 않으면 컴파일 에러를 발생한다. </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> @Deprecated </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 해당 메서드를 사용하지 않는다는 표시 </li>\r\n                                        <li> 사용을 하게되면 컴파일 경고 표시 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> @SuppressWarnings </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 선언된 위치에 컴파일 경고를 무시를 하게 한다. </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> @SafeVarargs </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 자바 7부터 지원 </li>\r\n                                        <li> 제너릭 같은 가변인자의 매개변수를 사용할 때 경고를 무시 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> @FunctionalInterface </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 자바 8부터 지원 </li>\r\n                                        <li> 함수형 인터페이스를 지정 </li>\r\n                                        <li> 메서드가 존재하지 않거나, 1개 이상의 메서드(default 메서드는 제외)가 존재할 경우 컴파일\r\n                                            오류 발생 </li>\r\n                                        <li> 자바 컴파일러가 컴파일할 때 오류를 검사 </li>\r\n                                        <li> <h4> 함수형 인터페이스 사용법 </h4>\r\n                                            <li> @FunctionalInterface </li>\r\n                                            <li> interface I_name {'{'} # 함수형 인터페이스 선언 및 정의\r\n                                                <li> public int M_name(int x, int y); </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li> <br />\r\n\r\n                                            <li> I_name I_instance = {' (x, y) -> x < y ? x : y; '} # 인터페이스 추상메소드 구현  </li>\r\n                                            <li> I_name I_instance = {' (x, y) -> x+y '}  # 인터페이스 추상메소드 구현 </li>\r\n                                            <li> System.out.println(I_instance.M_name(1, 1)); # 사용 </li>\r\n                                        </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 메타 어노테이션\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> JEE5 부터 추가된 요소 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 메타 어노테이션 종류 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3> @Retention : 자바 컴파일러가 어노테이션을 어떻게 다룰지 설정</h3>\r\n                                            <span className=\"sblock\">\r\n                                                <li> @Retention(RetentionPolicy.SOURCE)\r\n                                                    <li> 컴파일 전까지만 생존 </li>\r\n                                                </li>\r\n                                                <li> @Retention(RetentionPolicy.CLASS)\r\n                                                    <li> 컴파일러가 클래스를 참조할때 까지 생존 </li>\r\n                                                </li>\r\n                                                <li> @Retention(RetentionPolicy.RUNTIME)\r\n                                                    <li> 컴파일 이후에도 생존 , JVM에서 참조가능 </li>\r\n                                                </li>\r\n                                            </span>\r\n                                        </li>\r\n                                        {/*  */}\r\n                                        <li> <h3> @Target : 어노테이션을 적용할 위치를 선택 </h3>\r\n                                            <span className=\"sblock\">\r\n                                                <li> @Target(ElementType.PACKAGE)\r\n                                                    <li> 패키지 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.TYPE)\r\n                                                    <li> 타입 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.ANNOTATION_TYPE)\r\n                                                    <li> 어노테이션 타입 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.CONSTRUCTOR)\r\n                                                    <li> 생성자 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.FIELD)\r\n                                                    <li> 멤버 변수 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.LOCAL_VARIABLE)\r\n                                                    <li> 지역 변수 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.METHOD)\r\n                                                    <li> 메서드 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.PARAMETER)\r\n                                                    <li> 전달인자 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.TYPE_PARAMETER)\r\n                                                    <li> 전달인자 타입 선언 </li>\r\n                                                </li>\r\n                                                <li> @Target(ElementType.TYPE_USE)\r\n                                                    <li> 타입 선언 </li>\r\n                                                </li>\r\n                                            </span>\r\n                                        </li>\r\n                                        {/*  */}\r\n                                        <li> <h3> @Documented </h3>\r\n                                            <span className=\"sblock\">\r\n                                                <li> 어노테이션을 Javadoc에 포함 </li>\r\n                                            </span>\r\n                                        </li>\r\n                                        {/*  */}\r\n                                        <li> <h3> @Inherited </h3>\r\n                                            <span className=\"sblock\">\r\n                                                <li> 어노테이션을 상속이 가능하게 만듬 </li>\r\n                                            </span>\r\n                                        </li>\r\n                                        {/*  */}\r\n                                        <li> <h3> @Repeatable </h3>\r\n                                            <span className=\"sblock\">\r\n                                                <li> Java8 부터 지원 </li>\r\n                                                <li> 연속적으로 어노테이션을 선언 가능하게 함 </li>\r\n                                            </span>\r\n                                        </li>\r\n                                        {/*  */}\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 커스텀 어노테이션\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3>  어노테이션 인터페이스 </h3>\r\n                                            <li> @Target(ElementType.FIELD) </li>\r\n                                            <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                                            <li> public @interface CustomAnnotaionName {'{'}\r\n                                                <li> int ElementName() default 0; # 정수형</li>\r\n                                                <li> String ElementName1() default \"str\"; # 문자열</li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                        <li> <h3>  커스텀 어노테이션을 사용할 클래스 </h3>\r\n                                            <li> public class ClassName {'{'}\r\n                                                <li> @CustomAnnotaionName(ElementName = 10) </li>\r\n                                                <li> private int num1 </li> <br />\r\n                                                <li> @CustomAnnotaionName  #디폴트값 0이 들어감 </li>\r\n                                                <li> private int num2 </li>\r\n                                                <li> @CustomAnnotaionName1(ElementName = \"str1\") </li>\r\n                                                <li> private String str1 </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3>  어노테이션 인터페이스 </h3>\r\n                                            <li> @Target(ElementType.FIELD) </li>\r\n                                            <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                                            <li> public @interface CustomAnnotaionName {'{'}\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                        <li> <h3>  커스텀 어노테이션을 사용할 클래스 </h3>\r\n                                            <li> public class ClassName {'{'}\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3>  어노테이션 인터페이스 </h3>\r\n                                            <li> @Target(ElementType.FIELD) </li>\r\n                                            <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                                            <li> public @interface CustomAnnotaionName {'{'}\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                        <li> <h3>  커스텀 어노테이션을 사용할 클래스 </h3>\r\n                                            <li> public class ClassName {'{'}\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3>  어노테이션 인터페이스 </h3>\r\n                                            <li> @Target(ElementType.FIELD) </li>\r\n                                            <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                                            <li> public @interface CustomAnnotaionName {'{'}\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                        <li> <h3>  커스텀 어노테이션을 사용할 클래스 </h3>\r\n                                            <li> public class ClassName {'{'}\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3>  어노테이션 인터페이스 </h3>\r\n                                            <li> @Target(ElementType.FIELD) </li>\r\n                                            <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                                            <li> public @interface CustomAnnotaionName {'{'}\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                        <li> <h3>  커스텀 어노테이션을 사용할 클래스 </h3>\r\n                                            <li> public class ClassName {'{'}\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3>  어노테이션 인터페이스 </h3>\r\n                                            <li> @Target(ElementType.FIELD) </li>\r\n                                            <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                                            <li> public @interface CustomAnnotaionName {'{'}\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                        <li> <h3>  커스텀 어노테이션을 사용할 클래스 </h3>\r\n                                            <li> public class ClassName {'{'}\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3>  어노테이션 인터페이스 </h3>\r\n                                            <li> @Target(ElementType.FIELD) </li>\r\n                                            <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                                            <li> public @interface CustomAnnotaionName {'{'}\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                        <li> <h3>  커스텀 어노테이션을 사용할 클래스 </h3>\r\n                                            <li> public class ClassName {'{'}\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaAnnotation;","import React from 'react';\r\n\r\nconst PhpBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PhpBasic;","import React from 'react';\r\n\r\nconst NodejsBasic = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NodejsBasic;","import React from 'react';\r\n\r\nconst SpringError = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\"> 스프링 오류나 에러 </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> To display the conditions report re-run your application with 'debug' enabled </span>\r\n                            <p> 1. run &gt; edit configuration</p>\r\n                            <p> 2. enable debug output 체크해제 </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> hibernate나 DB연결문제 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured </span>\r\n                            <span className=\"sstitle\"> org.hibernate.service.spi.ServiceException: Unable to create requested service </span>\r\n                            <p> DB에 연결하는 설정 정보가 없어서 발생하는 에러이다. application.properties나 yml, xml 파일등에 datasource관련 코드를\r\n                                추가하며 해결이 된다. </p>\r\n                            <span className=\"mblock\">\r\n                                <p> spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver  </p>\r\n                                <p> spring.datasource.url=jdbc:mysql://localhost:3306/스키마이름?characterEncoding=UTF-8\r\n                                    &amp;serverTimezone=UTC  </p>\r\n                                <p> spring.datasource.username=DB유저이름  </p>\r\n                                <p> spring.datasource.password=DB유저비번  </p>\r\n                            </span>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                            <span className=\"sstitle\"> </span>\r\n                            <p> 1. </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"인텔리제이 한글 꺠짐\"> 인텔리제이 한글 꺠짐  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 파일 설정 encoding 바꾸기 </span>\r\n                            <p> ctrl+alt+s - settings - editor - file encodings </p>\r\n                            <p> Global Encoding , Project Encoding , Default encoding for properties files 3곳 UTF-8로 변경</p>\r\n                            <span className=\"sstitle\"> 인텔리제이 VM Options 바꾸기 </span>\r\n                            <p> Help - Edit Custom VM Options </p>\r\n                            <p> 제일 아래에 -Dfile.encoding=UTF-8 코드 추가 </p>\r\n                            <span className=\"sstitle\"> 톰캣 VM Options 바꾸기 </span>\r\n                        </span>\r\n                    </span>\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                        </span>\r\n                    </span> */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringError;\r\n\r\n","import React from 'react';\r\n\r\nconst SpringCode = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mtitle\"> 스프링 코드 정리 </span>\r\n                        <li> <small>  </small> </li>\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"이클립스 applicationContext.xml\">  이클립스 applicationContext.xml </a> </span>\r\n                            <li> <small> 이클립스 applicationContext.xml 사용법 </small> </li>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i> &lt; bean &gt; </i>  </li>\r\n                                <li> 기본 생성자가 필요하다. </li>\r\n                                <li> <small> &lt; bean class=\"패키지.클래스명\" id=\"사용할빈이름\" init-method=\"메소드\" destroy-method=\"메소드\"\r\n                                    lazy-init=\"false(default)\" scope=\"singleton(default)\" /&gt; </small> </li>\r\n                                <li> init-method=\"메소드() : 빈 객체가 생성될 떄 실행되는 메소드 </li>\r\n                                <li> destroy-methode=\"메소드() : 빈 객체가 사라질 떄 실행되는 메소드 </li>\r\n                                <li> lazy-init=\"false(default) : 빈 객체를 사용할 때 생성할지 말지 결정 </li>\r\n                                <li> scope=\"singleton(default) : 빈 객체를 하나만 사용하게 할지 말지 결정</li>\r\n                                <span className=\"lblock\">\r\n                                    <li className=\"sstitle\" ><i> &lt; constructor-arg ref=\"\" &gt; </i>  </li>\r\n                                    <li><small> &lt; constructor-arg ref=\"sw\" / &gt;  </small></li>\r\n                                    <li><small> &lt; bean class=\"coupling.AppleWatch\" id=\"sw\" lazy-init=\"true\" / &gt;  </small></li>\r\n                                </span>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i> &lt; import &gt; </i>  </li>\r\n                                <li><small> &lt; import resource=\"~~.xml\" / &gt;  </small></li>\r\n                                <li> resource : 다른 xml파일을들 불러모음(하나의 xml로 합치는 방법)  </li>\r\n                                <li> &lt;  &gt;  </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i> &lt; 어노테이션 설정 &gt; </i>  </li>\r\n                                <li> applicationContext.xml 파일 우클릭 - open with - Spring Config Editor 그리고 appliactionContext.xml 화면에\r\n                                    하단 위쪽으로 보면  Namespaces탭에서 context 체크박스 체크\r\n                                </li>\r\n                                <li> 그러면 파일 내부에 xmlns:context=\"http://www.springframework.org/schema/context\" 코드 추가된것을 확인</li>\r\n                                <li> <i> 정의 </i> </li>\r\n                                <li> &lt; context:component-scan base-package=\"패키지명\" &gt;  </li>\r\n                                <li> <i> 사용 </i> </li>\r\n                                <li> @Componet(\"\") 선언하고 생성자가 필요하다고 함</li>\r\n\r\n                            </span>\r\n                            {/* <span className=\"sblock\">\r\n                            <li className=\"sstitle\" ><i> &lt; &gt; </i>  </li>\r\n                        </span> */}\r\n                        </span>\r\n                        {/* 이클립스 applicationContext.xml 끝 */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\">\r\n                                <a name=\"cmd창으로 빌드하고 실행해보기\"> cmd창으로 빌드하고 실행해보기 </a>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>1.</i>  </li>\r\n                                <li> cmd창 - cd 파일경로 - gradlew.bat build 입력 - cd build - cd libs - java -jar 파일명-0.0.1-SNAPSHOT.jar</li>\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\">\r\n                                <a name=\"어노테이션\"> 어노테이션 </a>\r\n                            </span>\r\n                            <li> 스프링 컨테이너가 </li>\r\n                            <li> 1. 이름을 보고 맵핑 </li>\r\n                            <li> 2. 타입을 보고 맵핑 </li>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i> @Autowired </i>  </li>\r\n                                <li> 일반적으로 멤버변수에 사용 </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i> @Qualifier </i>  </li>\r\n                                <li> 주입할 대상(객체)의 이름을 알려주는 어노테이션 </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>@Controller</i>  </li>\r\n                                <li> </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>@Service</i>  </li>\r\n                                <li> </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>@Repository</i>  </li>\r\n                                <li> </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>@Configuration</i>  </li>\r\n                                <li> </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>1.</i>  </li>\r\n                                <li> </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>1.</i>  </li>\r\n                                <li> </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>1.</i>  </li>\r\n                                <li> </li>\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\">\r\n                                <a name=\"xml과 어노테이션에서 관리할것\"> xml과 어노테이션에서 관리할것 </a>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>xml</i>  </li>\r\n                                <li> 교체될 가능성이 있는 객체, 라이브러리, 자바소스변경x , 유지보수가능, 가독성저하\r\n                                </li>\r\n                                <li className=\"sstitle\" ><i>어노테이션</i>  </li>\r\n                                <li> 설정할필요 없음, 가독성o , 교체되지 않는 객체관리\r\n                                </li>\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\">\r\n                                <a name=\"Spring Security\"> Spring Security </a>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i> <a href=\"https://docs.spring.io/spring-security/site/docs/3.2.4.RELEASE/reference/htmlsingle/#ns-web-advanced\" target=\"_blank\"> 필터의 종류 </a> </i>  </li>\r\n                                <li> DelegatingFilterProxy </li>\r\n                                <li> FilterChainProxy </li>\r\n                                <li className=\"mblock\">\r\n                                    <li className=\"sstitle\" ><i> SecurityFiletrChain 종류 </i>  </li>\r\n                                    <li> <i> 1. ChannelProcessingFilter </i> </li>\r\n                                    <li> <i> 2. SecurityContextPersistenceFilter(필수) </i>\r\n                                        SecurityContextRepository에서 SecurityContext를 로드하고 저장하는 일을 담당 </li>\r\n                                    <li> <i> 3. ConcurrentSessionFilter </i> </li>\r\n                                    <li> <i> 4. HEADERS_FILTER </i> </li>\r\n                                    <li> <i> 5. CSRF_FILTER </i> </li>\r\n                                    <li> <i> 6. LogoutFilter(필수) </i>\r\n                                        로그아웃 URL로 지정된 가상URL에 대한 요청을 감시하고 매칭되는 요청이 있으면 사용자를\r\n                                        로그아웃시킴</li>\r\n                                    <li> <i> 7. UsernamePasswordAuthenticationFilter(필수) </i>\r\n                                        사용자명과 비밀번호로 이뤄진 폼기반 인증에 사용하는 가상 URL요청을 감시하고 요청이\r\n                                        있으면 사용자의 인증을 진행함</li>\r\n                                    <li> <i> 8. DefaultLoginPageGeneratingFilter </i> 폼기반 또는 OpenID 기반 인증에\r\n                                        사용하는 가상URL에 대한 요청을 감시하고 로그인 폼 기능을 수행하는데 필요한 HTML을 생성함</li>\r\n                                    <li> <i> 9. CasAuthenticationFilter </i> </li>\r\n                                    <li> <i> 10. BasicAuthenticationFilter(필수) </i> HTTP 기본 인증 헤더를 감시하고 이를 처리함 </li>\r\n                                    <li> <i> 11.RequestCacheAwareFilter </i> 로그인 성공 이후 인증 요청에 의해 가로채어진 사용자의\r\n                                        원래 요청을 재구성하는데 사용됨</li>\r\n                                    <li> <i> 12. SecurityContextHolderAwareRequestFilter </i> </li>\r\n                                    <li> <i> 13. JaasApiIntegrationFilter </i> </li>\r\n                                    <li> <i> 14. RememberMeAuthenticationFilter </i> </li>\r\n                                    <li> <i> 15. AnonymousAuthenticationFilter </i>\r\n                                        이 필터가 호출되는 시점까지 사용자가 아직 인증을 받지 못했다면 요청 관련 인증\r\n                                        토큰에서 사용자가 익명 사용자로 나타나게 됨</li>\r\n                                    <li> <i> 16. SessionManagementFilter </i>\r\n                                        인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련한 모든 세션들이 트래킹되도록 도움</li>\r\n                                    <li> <i> 17. ExceptionTranslationFilter(필수) </i>\r\n                                        이 필터는 보호된 요청을 처리하는 동안 발생할 수 있는 기대한 예외의 기본\r\n                                        라우팅과 위임을 처리함</li>\r\n                                    <li> <i> 18. FilterSecurityInterceptor(필수) </i>\r\n                                        이 필터는 권한부여와 관련한 결정을 AccessDecisionManager에게 위임해 권한부여\r\n                                        결정 및 접근 제어 결정을 쉽게 만들어 줌</li>\r\n                                    {/* <li> <i>  </i> </li> */}\r\n                                </li>\r\n                                <li className=\"mblock\">\r\n                                    요청에담긴권한 -\r\n                                    AuthenticationManager구현체인 ProviderManager가 처리 -\r\n                                    AuthenticationManager가 AuthenticationProvider를 통해\r\n                                    UserDetailsService를 거쳐 인증을 받아 -\r\n                                    UserDetails에 SercurityUser를 등록한다.\r\n                                </li>\r\n                                <li className=\"mblock\">\r\n                                    <li className=\"sstitle\" ><i> 스프링 시큐리티 권한설정 </i>  </li>\r\n                                    <li> &lt; http &gt;  </li>\r\n                                    <li> auto-config=\"true\" </li>\r\n                                    <li> use-expressions=\"true\" <small>(4부터는 default=\"true\")</small> : SpEL문법을 사용하게 해준다. </li>\r\n                                    <li className=\"sblock\">\r\n                                        <li> intercept-url 태그를 사용할 떄는 위에서 아래로 순서로 설정된다</li>\r\n                                        <li> &lt; intercept-url <i>pattern=\"\" access=\"\" </i> &gt;  </li>\r\n                                        <li> pattern=\"/경로/**\" </li>\r\n                                        <li> access=\"@1('@2')\" </li>\r\n                                        <li> @1 : hasAnyRole(권한아무거나1개가지고 있을때), hasRole(권한1개가지고 있을 때) </li>\r\n                                        <li> @2 : ROLE_(GUEST,USER,MEMBER,ADMIN) : 유저 권한 주기 </li>\r\n                                        <li> premitAll : 모두 접근 가능 </li>\r\n                                        <li> denyAll : 모두 접근 불가 </li>\r\n                                        <li> isAnonymous() : Anonymous 사용자(인증x 사용자) </li>\r\n                                        <li> isRememberMe() : Remember-me기능으로 로그인한 사용자 </li>\r\n                                        <li> isAuthenticated() : Anonymous 사용자가 아닌경우(인증된 사용자) </li>\r\n                                        <li> isFullyAuthenticated() : Anonymous사용자x 이고 Remember-me으로 로그인하지 않은 사용자 </li>\r\n                                        <li> </li>\r\n                                    </li>\r\n                                </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"stitle\">\r\n                                    <a name=\"Spring Security Filter xml 설정\"> Spring Security Filter xml 설정 </a>\r\n                                </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"sstitle\" ><i>web.xml 기본설정</i>  </li>\r\n                                    <a href=\"https://to-dy.tistory.com/70?category=720806\" target=\"_blank\"> </a>\r\n                                    <li>&lt;filter&gt;</li>\r\n                                    <li>&lt;&nbsp;&nbsp;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;</li>\r\n                                    <li>&lt;&nbsp;&nbsp;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;</li>\r\n                                    <li>&lt;/filter&gt;</li>\r\n                                    <li>&lt;filter-mapping&gt;</li>\r\n                                    <li>&lt;&nbsp;&nbsp;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;</li>\r\n                                    <li>&lt;&nbsp;&nbsp;url-pattern&gt;/*&lt;/url-pattern&gt;</li>\r\n                                    <li>&lt;/filter-mapping&gt;</li>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\">\r\n                                <a name=\"Spring Security Gradle 설정\"> Spring Security Gradle 설정  </a>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" > Spring Security 의존성 추가하면 발생하는 일  </li>\r\n                                <li> 서버가 시작되면 Spring Security 초기화 및 보안 설정 발생 </li>\r\n                                <li> 모든 요청이 인증이 되어야 자원에 접근이 가능 </li>\r\n                                <li> form로그인 방식과 httpbasic로그인 방식을 제공한다. </li>\r\n                                <li> 기본적인 로그인 페이지를 제공한다. </li>\r\n                                <li> 기본 계정 user와 비번 제공 </li>\r\n                                <li> application.properties에 설정이 가능하다. </li>\r\n                                <li> 계정추가, 권한추가, DB연동등 하지 않으면 사용을 할 수 없게 만듬 </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>spring security build.gradle</i>  </li>\r\n                                <li>    implementation 'org.springframework.boot:spring-boot-starter-security'</li>\r\n                                <li>    testImplementation 'org.springframework.security:spring-security-test'</li>\r\n                                <li>//  https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5</li>\r\n                                <li>    compileOnly group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'</li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" > java - configuration - SecurityConfig </li>\r\n                                <li> WebSecurityConfigurerAdapter(상속) </li>\r\n                                <li> configure(WebSecurity web) , configure(HttpSecurity http) 오버라이딩 </li>\r\n                                <li> 기초 sercurity 설정 및 구현하는 클래스 </li>\r\n                                <li> HttpSecurity 라는 세부적인 보안기능을 설정할 수 있는 API를 제공하는 클래스를 생성한다. </li>\r\n                                <li> =================================== </li>\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <li className=\"sstitle\" ><i>1.</i>  </li>\r\n                            </span>\r\n                        </span>\r\n\r\n                        {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\">\r\n                            <a name=\"\"> 소제목 </a>\r\n                        </span>\r\n                        <span className=\"sblock\">\r\n                            <li className=\"sstitle\" ><i>1.</i>  </li>\r\n                        </span>\r\n                    </span> */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringCode;","import React from 'react';\r\n\r\nconst SpringBasic = (props) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"common_style\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<span className=\"lblock\">\r\n\t\t\t\t\t\t<span className=\"mtitle\"> <a name=\"main\"> 스프링 공부 </a> </span>\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\">\r\n\t\t\t\t\t\t\t\t<a name=\"스프링이란?\"> 스프링이란? </a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> 스프링</i>  </li>\r\n\t\t\t\t\t\t\t\t<li> 스프링은 Ioc기반의 프레임워크 , 자바 플랫폼 프레임워크 </li>\r\n\t\t\t\t\t\t\t\t<li> 의존성 주입(Denpendency Injection) 의존성 주입 : 개발자가 아닌 컨테이너가 관리하는 빈 객체를 주입하는 방법 </li>\r\n\t\t\t\t\t\t\t\t<li> POJO(Plain Old Java Object) : 기본적인 기능만 가진 자바 객체 </li>\r\n\t\t\t\t\t\t\t\t<li> AOP(Aspect Oriented Programming) : 관점 지향 프로그래밍 ,기존에 사용하던\r\n\t\t\t\t\t\t\t\t\t프로그래밍 방법은 객체지향 프로그래밍을 사용하지만 중복된 코드들이 많고\r\n\t\t\t\t\t\t\t\t\t확장,유지 보수를 떨어뜨린다. AOP에서는 핵심기능(서비스)와 공통기능(인증,필터 등)을\r\n\t\t\t\t\t\t\t\t\t분리하여 유지보수가 더 좋아지며 재활용성이 높아진다.\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> 컨테이너 : BeanFactory와 ApplicationContext 2개의 대표적인 컨테이너가 있다. 컨테이너는\r\n\t\t\t\t\t\t\t\t\t인스턴스의 주기와 추가적인 기능을 관리하는 역할을 한다. </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t<li className=\"sstitle\"> 스프링의 일반적인 작동과정 </li>\r\n\t\t\t\t\t\t\t<li> 1. 유저가 서버에 요청 </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"의존성 주입(Dependency Injection)\">  의존성 주입(Dependency Injection)</a> </span>\r\n\t\t\t\t\t\t\t<li> <small> 객체를 직접 만들지 않고 주입받아 사용하는 방법 </small> </li>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\"><i> 사용하는 이유 </i> </li>\r\n\t\t\t\t\t\t\t\t<li> 1. </li>\r\n\t\t\t\t\t\t\t\t<li> 1. </li>\r\n\t\t\t\t\t\t\t\t<li> 1. </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<li className=\"stitle\"> 의존성 주입하는 방법 3가지 </li>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>1.</i> 생성자(Constructor) 주입(스프링 팀에서 추천하는 방식) </li>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t<li> 1. 생성자로 객체를 생성하는 시점에 인자에 있는 Bean을 호출 </li>\r\n\t\t\t\t\t\t\t\t<li> 2. Bean을 호출할 때(초기에 생성x) BeanFacotry에 Bean을 만들고 만든 Bean을 찾음 </li>\r\n\t\t\t\t\t\t\t\t<li> 3. Bean을 찾았으므로 생성자 인자에 Bean을 주입 </li>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\"><i>2.</i> 수정자(Setter) 주입</li>\r\n\t\t\t\t\t\t\t\t<li> 주입 과정 </li>\r\n\t\t\t\t\t\t\t\t<li> 1. &lt;bean&gt;을 보고 찾음, 찾으면 bean객체 생성 </li>\r\n\t\t\t\t\t\t\t\t<li> 2. setter호출,  </li>\r\n\t\t\t\t\t\t\t\t<li> 3. 이후에 주입하려는 빈 객체의 수정자를 호출하여 주입 </li>\r\n\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\"><i>3.</i> 필드(Field) 주입(어노테이션 사용)</li>\r\n\t\t\t\t\t\t\t\t<li> 주입 과정  </li>\r\n\t\t\t\t\t\t\t\t<li> 1. 빈 객체를 생성  </li>\r\n\t\t\t\t\t\t\t\t<li> 2. 빈 객체를 찾아서 주입하는 방법  </li>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\">\r\n\t\t\t\t\t\t\t\t<a name=\"POJO(Plain Old Java Object)\">  POJO(Plain Old Java Object) </a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> POJO가 탄생한 이유 </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> 자바를 개발할 떄 과거에 개발자가 비즈니스로직 + 트랜잭션,보안,필터 등등을 구현해야\r\n\t\t\t\t\t\t\t\t\t했다. 그러므로 너무 많은 부담을 지게 되었고 그 부담을 덜기 위하여 기업에서 개발하기 위한\r\n\t\t\t\t\t\t\t\t\t서비스 EJB(Enterprise Java Beans)가 탄생하여 부담이 줄어들었다. 하지만 작은 서비스를 개발할떄도\r\n\t\t\t\t\t\t\t\t\t거대한 EJB를 상속받아 사용해야되는 불편함이 있었고 기능을 바꾸기 위해서는 전체적으로 코드를\r\n\t\t\t\t\t\t\t\t\t수정해야되는 문제점이 발생하였다. EJB는 객체지향의 특징과 장점을 사용할 수 없었다. </li>\r\n\t\t\t\t\t\t\t\t<li> POJO는 이러한 문제점에서 벗어나 객체지향에 집중하고, 클래스나 라이브러리에 종속되지 않아\r\n\t\t\t\t\t\t\t\t\t원하는 대로 사용을 할 수 있게 되었다. </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> POJO 사용 이유와 장점 </i> </li>\r\n\t\t\t\t\t\t\t\t<li> 특정 환경에 종속이 되지 않는다. </li>\r\n\t\t\t\t\t\t\t\t<li> 객체지향(OOP)를 자유롭게 사용할 수 있다. </li>\r\n\t\t\t\t\t\t\t\t<li> 로우레벨은 분리하면서 필요한 로직을 작성할 수 있다. </li>\r\n\t\t\t\t\t\t\t\t<li> 테스트 작업 환경에 좋다. </li>\r\n\t\t\t\t\t\t\t\t<li> EJB의 서비스와 기술은 그대로 사용하면서 자바 객체지향도 사용을 할 수 있어 좋다. </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\">\r\n\t\t\t\t\t\t\t\t<a name=\"AOP(Aspect Oriented Programming)\">  AOP(Aspect Oriented Programming) </a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<small> Aspect를 모아서 모듈화 하는 방법 , 각 클래스마다 비슷한 메소드 등을 따로 처리하는 방법 </small>\r\n\t\t\t\t\t\t\t<li> 자바에서는 다중상속이 불가능하여 공통기능을 부여하기에 한계가 있다. </li>\r\n\t\t\t\t\t\t\t<li> 로그처리, 보안처리, DB 트랜잭션 처리 등 , 코드의 중복을 줄이고 로직을 분리 할 수 있음 </li>\r\n\t\t\t\t\t\t\t<li> 관정을 횡단으로 보는 횡단 관심 사항, Cross Cutting Concern(부가적인로직) , Core Concern(비즈니스로직) </li>\r\n\t\t\t\t\t\t\t<li> proxy 방법을 이용한다. client - proxy(공통기능) - target(핵심기능) </li>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\"> 관련 용어 </li>\r\n\r\n\t\t\t\t\t\t\t\t<li> Aspect : Advice와 Pointcut로 이루어져 있다.  </li>\r\n\t\t\t\t\t\t\t\t<li> Advice : Aspect 해야할 일, 기능 </li>\r\n\t\t\t\t\t\t\t\t<li> Pointcut : 어디에 적용할 지 </li>\r\n\t\t\t\t\t\t\t\t<li> Target : Pointcut에서 적용이 되는 대상  </li>\r\n\t\t\t\t\t\t\t\t<li> Join point : Advice를 사용할 지점(메서드 실행, 필드에서 값을 가져갈 떄 등)  </li>\r\n\t\t\t\t\t\t\t\t<li> Weaving : Advice를 핵심기능에 적용하는 행위  </li>\r\n\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\"> 관련 태그? 메소드? </li>\r\n\r\n\t\t\t\t\t\t\t\t<li> aop:before : 메소드 실행전에 advice실행 </li>\r\n\t\t\t\t\t\t\t\t<li> aop:after-returning : 정상적으로 메소드 실행 후에 advice 실행  </li>\r\n\t\t\t\t\t\t\t\t<li> aop:after-throwing : 메소드 실행중 exception 발생시 advice 실행 </li>\r\n\t\t\t\t\t\t\t\t<li> aop:after : 메소드 실행중 exception이 발생해도 advice 실행 </li>\r\n\t\t\t\t\t\t\t\t<li> aop:around : 메소드 실행 전/후 및 exception 발생시 advice 실행 </li>\r\n\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>1.</i>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>1.</i>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>1.</i>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\">\r\n\t\t\t\t\t\t\t\t<a name=\"컨테이너\">  컨테이너 </a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> 컨테이너의 빈 객체 </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> CGLIB라는 바이트코드 조작 라이브러리를 이용하여 Bean객체를 싱글턴패턴으로 유지하게 한다.\r\n\t\t\t\t\t\t\t\t\t클래스를 복제?한 클래스객체를 따로 만들어서 컨테이너에서 만들어서 사용한다. 컨테이너에\r\n\t\t\t\t\t\t\t\t\tBean객체가 없으면 Bean객체를 생성하고 존재한다면 기존에 Bean객체를 반환해준다. </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>1.</i>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>1.</i>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\">\r\n\t\t\t\t\t\t\t\t<a name=\"MVC\">  MVC </a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>DAO(Data Access Object)</i>  </li>\r\n\t\t\t\t\t\t\t\t<li> DB에 제일 가까이서 접근하는 객체 </li>\r\n\t\t\t\t\t\t\t\t<li> DB와 Service 구간사이에서 DB데이터를 보내고 받는다.</li>\r\n\t\t\t\t\t\t\t\t<li> 스프링에서는 직접 구현하지않고 CrudRepositoy나 JpaReposioty를 상속해서 처리한다. </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>DTO(Data Transfer Object) </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> controller와 service사이에서 사용할 데이터를 주고 받는 객체 </li>\r\n\t\t\t\t\t\t\t\t<li> Entity와 비슷하지만 Entity는 DB와 데이터를 주고 받는 용도로 사용하고\r\n\t\t\t\t\t\t\t\t\t다른 곳에서 데이터를 주고 받는 용도로는 dto를 사용하는 것을 추천\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>VO(Value Object)</i>  </li>\r\n\t\t\t\t\t\t\t\t<li> VO는 DTO와 비슷하지만 오직 읽는 용도로만 사용하는 것이다. </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>Entity</i>  </li>\r\n\t\t\t\t\t\t\t\t<li> Entity </li>\r\n\t\t\t\t\t\t\t\t<li> toEntity() 메소드를 통해서 DTO에 필요한 부분만을 사용해서 Entity로 만들어서 사용 </li>\r\n\t\t\t\t\t\t\t\t<li> 실제 DB 테이블과 일치되는 클래스 </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> Controller </i>  </li>\r\n\t\t\t\t\t\t\t\t<small> URL을 맵핑하고 service 로직을 처리 , 반환 값으로 템플릿(view)을 응답한다. </small>\r\n\t\t\t\t\t\t\t\t<span className='mblock'>\r\n\t\t\t\t\t\t\t\t\t<li>  @Controller </li>\r\n\t\t\t\t\t\t\t\t\t<li>  public class 클래스명 {'{'} </li>\r\n\t\t\t\t\t\t\t\t\t<li>  {'@GetMapping(\"/URL경로\") public String 메소드명() { return \"html파일명\"; } '}</li>\r\n\t\t\t\t\t\t\t\t\t<li>  {'@PostMapping(\"/URL경로\") public String 메소드명(Model model) {  '} </li>\r\n\t\t\t\t\t\t\t\t\t<li>  {' model.addAttribute(\"key\",\"value\"); 서비스로직 + return \"html파일명\"; } '} </li>\r\n\t\t\t\t\t\t\t\t\t<li>  {'}'} </li>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> Restcontroller </i>  </li>\r\n\t\t\t\t\t\t\t\t<small> URL을 맵핑하고 service 로직을 처리 , 반환 값으로 JSON과 같은 객체를 응답한다. </small>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> service </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> 비즈니스 로직을 구현 </li>\r\n\t\t\t\t\t\t\t\t<li> DB에 저장하거나 비즈니스 로직을 처리 </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> enity </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> DB테이블과 연결되는 객체  </li>\r\n\t\t\t\t\t\t\t\t<li> JPA에서는 Entity객체를 사용 </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> repository </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> 데이터를 가져오거나 조작하는 함수를 정의 </li>\r\n\t\t\t\t\t\t\t\t<li> JpaRepository&lt;Entity클래스,@Id타입&gt;나 CrudRepository 상속하여 그 안에 함수를 사용 </li>\r\n\t\t\t\t\t\t\t\t<li> <a href=\"https://docs.spring.io/spring-data/jpa/docs/1.10.1.\r\n                            RELEASE/reference/html/#jpa.sample-app.finders.strategies\"> 참고 사이트 </a></li>\r\n\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"sstitle\"> JPA 메소드 종류 </li>\r\n\t\t\t\t\t\t\t\t\t<li> save() : 레코드 저장(insert, update) </li>\r\n\t\t\t\t\t\t\t\t\t<li> findOne() : primary key로 레코드 한건 찾기 </li>\r\n\t\t\t\t\t\t\t\t\t<li> findAll() : 전체 레코드 불러오기, sort기능, pageable기능 </li>\r\n\t\t\t\t\t\t\t\t\t<li> count() : 레코드 갯수</li>\r\n\t\t\t\t\t\t\t\t\t<li> delete() : 레코드 삭제 </li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"sstitle\"> 쿼리 메소드 종류 </li>\r\n\t\t\t\t\t\t\t\t\t<li> findBy : 쿼리를 요청하는 메서드 </li>\r\n\t\t\t\t\t\t\t\t\t<li> countBy : 쿼리 결과 레코드 수를 요청하는 메서드 </li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"sstitle\"> 쿼리 메소드 키워드 종류 </li>\r\n\t\t\t\t\t\t\t\t\t<li> And : 여러필드를 검색 ( findByUserIdAndUserPwd(String userid,String userpwd)) </li>\r\n\t\t\t\t\t\t\t\t\t<li> Or : 여러필드를 검색 ( findByUserIdOrUserPwd(String userid,String userpwd)) </li>\r\n\t\t\t\t\t\t\t\t\t<li> Between : 필드의 두 값 사이의 항목 검색 findByCreatedAtBetween() </li>\r\n\t\t\t\t\t\t\t\t\t<li> LessThan : 작은 항목 검색 (findByAgeLessThanEqual(int)) </li>\r\n\t\t\t\t\t\t\t\t\t<li> GreaterThanEqual : 크거나 같은 항목 (findByAgeGraterThanEqual(int)) </li>\r\n\t\t\t\t\t\t\t\t\t<li> Like : like 사용 (findByNameLike(String)) </li>\r\n\t\t\t\t\t\t\t\t\t<li> IsNull : null인 항목 검색 (findByJoblsNull()) </li>\r\n\t\t\t\t\t\t\t\t\t<li> In : 여러 값 중에 하나의 항목 (findByJob(String...)) </li>\r\n\t\t\t\t\t\t\t\t\t<li> OrderBy : 검색 결과를 정렬하여 전달 (findByEmailOrderByNameAsc(String)) </li>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> static </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> css,js,img 등 자원을 모아놓는 공간 </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i> templates </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> 템플릿을 모아놓는 공간 </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\">\r\n\t\t\t\t\t\t\t\t<a name=\"스프링 프레임워크의 기본 동작 원리\"> 스프링 프레임워크의 기본 동작 원리 </a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li className=\"sstitle\" ><i>1. </i>  </li>\r\n\t\t\t\t\t\t\t\t<li> 1. 클라이언트 요청 </li>\r\n\t\t\t\t\t\t\t\t<li> 2. Dispatcher Servlet 접근 </li>\r\n\t\t\t\t\t\t\t\t<li> 3. Handler Mapping 참조하여 Controller 연결 </li>\r\n\t\t\t\t\t\t\t\t<li> 4. Mapping된 Controller에 서비스 로직에 따라 DAO,Entity등을 통해 DB에 접근  </li>\r\n\t\t\t\t\t\t\t\t<li> 5. 모델과 뷰 객체를 담아 DispatcherServlet에 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 6. ViewResolver를 통해 View와 연결되어 화면으로 출력 </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\">\r\n\t\t\t\t\t\t\t\t<a name=\"lombok 어노테이션\"> lombok 어노테이션  </a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<small>  어노테이션으로 코드를 자동으로 만들어주는 라이브러리 </small>\r\n\t\t\t\t\t\t\t<li> 가독성, 유지보수, 자동생성으로 생산성 향상 </li>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t\t<summary className=\"sstitle\" ><i> 어노테이션의 종류 </i> </summary>\r\n\t\t\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t\t\t<li> @Value : 프로퍼티에서 정의한 값을 가져오는 방법 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @Controller : Model 객체를 이용하여 데이터를 담고 view를 찾아 이동하는 역할 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @PostMapping : Post방식으로 요청을 받을 때 맵핑을 처리함 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @GetMapping :  Get방식으로 요청을 받을 때 맵핑을 처리함 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @RequestBody : http요청 데이터를 담은 공간 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @ReponseBody : http응답 데이터를 담은 공간 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @RestController(@Controller + @ResponseBody) : 객체로 반환하고 JSON이나 XML형식으로 http에 담아서 응답  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @RequestMapping(\"\") : 어떤 Controller에 어떤 메소드를 처리할지 맵핑하는 용도  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @SuppressWarnings(\"unchecked\") :   </li>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<li> value(String) : URL값으로 맵핑 조건으로 사용 </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> method : HTTP Request 메소드값을 맵핑 조건으로 사용 </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> params : HTTP Request 파라미터(GET,POST 등)를 맵핑 조건으로 사용 </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> consumes : Content-Type request 헤더가 일치할 경우 URL이 호출됨 </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> produces : 설정과 Accept request 헤더가 일치할 경우에만 URL이 호출됨 </li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<li> @RequestParam : Controller메소드의 파라미터와 웹 요청 파라미터와 맵핑하는 용도 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @ModelAttribute : Controller 메소드의 파라미터나 리턴값을 Model 객체와 바인딩하기 위한 용도 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @SessionAttributes : Model 객체를 세션에 젖아하고 사용하기 위한 용도 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @RequestPart : Multipart 요청의 경우, 웹 요청 파라미터와 맵핑 용도 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @CommandMap : Controller메소드의 파라미터를 Map형태로 받을 떄 웹 요청 파라미터와 맵핑하기 위한 용도 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @ControllerAdvice : Controller에 쓰이는 공통기능을 모듈화하여 전역으로 쓰기 위한 용도 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @Transactional : 트랜잭션 속성을 클래스 내의 모든 메서드에게 부여</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @NonNUll : null을 허용하지 않을 경우 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> @Nullable : null을 허용할 경우 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\r\n\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default SpringBasic;","import React from 'react';\r\n\r\nconst SpringThymeleaf = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"참고\"> 참고 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 참고 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> thymeleaf 공식 사이트: https://www.thymeleaf.org/ </li>\r\n                                <li> <a href=\"https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#standard-expression-syntax\" target=\"_blank\">    thymeleaf 예제 튜토리얼 </a> </li>\r\n                                <li> 스프링부트 메뉴얼: https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/\r\n                                    html/spring-boot-features.html#boot-features-spring-mvc-template-engines </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"thymeleaf 속성\"> thymeleaf 속성 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> thymeleaf 속성 종류 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> th:text #텍스트를 삽입 </li>\r\n                                <li> th:value=\"${'{}'}\" #값을 삽입 </li>\r\n                                <li> th:with=\"\" </li>\r\n                                <li> th:href=\"@{'{http://www.naver.com}'}\"\" </li>\r\n                                <li> th:if=\"${'{파라미터}'} == '조건'{'}'}\" #if 조건문 </li>\r\n                                <li> th:unless=\"${'{파라미터}'} == '조건'{'}'}\" #else 조건문 </li>\r\n                                <li> th:attr=\"css속성추가\" #html태그에 css속성 추가하는 방법 </li>\r\n                                <li> th:each=\"리스트객체 : ${'{파라미터}'}\" </li>\r\n                                <li> th: </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"thymeleaf 사용방법\"> thymeleaf 사용방법 </a> </span>\r\n                        <small> {' <html xmlns:th=\"http://www.thymeleaf.org\"> '} #상단에 선언 </small>\r\n                        <span className=\"sblock\">\r\n                            <small> {'Map<String,String> map객체명 = new HashMap<String, String>(); '} </small> <br />\r\n                            <small> {' map객체명.put(\"data1\",\"data1값\");'} </small> <br />\r\n                            <small> {' map객체명.put(\"data2\",\"data2값\");'} </small> <br />\r\n                            <small> {'model.addAttribute(\"map객체key값,map객체명\"); '} </small> <br />\r\n                            <span className=\"sstitle\"> 변수 파라미터 받아오기 , ${'{}'} </span>\r\n                            <span className=\"mblock\">\r\n                                <li> {'<p th:text=\"${data1}\">  </p>'} #data1라는 파라미터를 받아와서 출력을 해준다. </li>\r\n                                <li> {'<p th:text=\"${map객체key값.data1}\">  </p>'} #data1라는 파라미터를 받아와서 출력을 해준다. </li>\r\n                                <li> {'<p th:text=\"${map객체key값.data2}\">  </p>'} #data2라는 파라미터를 받아와서 출력을 해준다. </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 변수 파라미터 받아오기 , ${'{}'} , *{'{}'} </span>\r\n                            <span className=\"mblock\">\r\n                                <li> {' <tr th:object=\"${map객체key값}\"> '} </li>\r\n                                <li> &nbsp;{' <td th:text=\"*{data1}\"> '} </li>\r\n                                <li> &nbsp;{' <td th:text=\"*{data2}\"> '} </li>\r\n                                <li> {' </tr> '} </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 반복문 사용 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> {' <tr th:each=\"반복변수명 : ${파라미터}\"> '} </li>\r\n                                <li> &nbsp;{'   <td th:text=\"${반복변수명.파라미터}\"> '} </li>\r\n                                <li> &nbsp;{'   <td th:value=\"${반복변수명.파라미터}\"> '} </li>\r\n                                <li> {' </tr> '} </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 메시지가 있으면 출력, 없으면 key값 출력 , #{'{}'}</span>\r\n                            <span className=\"mblock\">\r\n                                <li> {' <p th:text=\"#{map객체key값.DATA1}\">  </p> '} </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 링크 표현식 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> {' <a th:href=\"@{http://www.naver.com}\"> naver </a> '} </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringThymeleaf;","import React from 'react';\r\n\r\nconst SpringLombok = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <small> <a href=\"https://projectlombok.org/features/all\" target=\"_blank\"> lombok 사이트 </a> </small>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Getter / @Setter\"> @Getter / @Setter </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Getter,Setter 메소드를 구현 </span>\r\n                            <small> 기본적으로 public, @Setter(AccessLevel.[PRIVATE | PROTECTED ]) </small>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\"> @Getter </li>\r\n                                <li className=\"col_r\"> @Setter </li>\r\n                                <li> public class User {'{'}</li>\r\n                                <li> &nbsp;private String id; </li>\r\n                                <li> {'}'} </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@NoArgsConstructor\"> @NoArgsConstructor #파라미터가 없는 기본생성자</a> </span>\r\n                        <span className=\"stitle\"> <a name=\"@AllArgsConstructor\"> @AllArgsConstructor #모든 파라미터가 있는 생성자</a>  </span>\r\n                        <span className=\"stitle\"> <a name=\"@RequiredArgsConstructor\"> @RequiredArgsConstructor #특정 파라미터만 있는 생성자</a> </span>\r\n                        <small> @NoArgsConstructor(access = AccessLevel.[ PRIVATE | PROTECTED ]) #3개다 한정자 사용가능, @AllArgsConstructor\r\n                            , @RequiredArgsConstructor 2개의 어노테이션은 사용 지양(주의) , @NoArgsConstructor은 @NonNull을 무시함(주의) </small>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 생성자 메소드를 구현 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\"> @NoArgsConstructor <small> 필드에 final 변수가 있으면 에러발생, 해결법은 @(force=true)를 사용 </small> </li>\r\n                                <li className=\"col_r\"> @AllArgsConstructor </li>\r\n                                <li> public class User {'{'}</li>\r\n                                <li> &nbsp;private String id; </li>\r\n                                <li> {'}'} </li>\r\n                                <li className=\"col_r\"> @RequiredArgsConstructor <small> 입력한 파라미터가 순서대로 들어오지 않으면 멤버변수의 값이 바뀌어서 들어가고, 에러가 발생하지 않음 , @Builder\r\n                                    패턴을 사용하기 권장 , [final, @Nonnull] 필드들에 대해서 생성자를 생성 </small> </li>\r\n                                <li> public class User {'{'}</li>\r\n                                <li> &nbsp;private final String id; #생성자 필드에 포함</li>\r\n                                <li> &nbsp;@Nonnull private String id; #생성자 필드에 포함</li>\r\n                                <li> &nbsp;private String id; #생성자 필드에 포함되지 않음</li>\r\n                                <li> {'}'} </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@ToString\"> @ToString </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> ToString 메소드를 구현 </span>\r\n                            <small> @ToString(exclude=\"password\") #password 필드를 toString메소드에서 제외시킨다. </small>\r\n                            <span className=\"mblock\">\r\n                                <li> @ToString </li>\r\n                                <li> public class User {'{'}</li>\r\n                                <li> &nbsp;private String id; </li>\r\n                                <li> {'}'} </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Data\"> @Data </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> @ToString + @EqualsAndHashCode + @Getter + @Setter\r\n                                + @RequiredArgsConstructor </span>\r\n                            <small> 무거워서 사용을 권장하지 않음, @AllArgsConstructor동시에 사용하면\r\n                                @RequiredArgsConstructor사용불가   </small>\r\n                            <span className=\"mblock\">\r\n                                <li> @Data </li>\r\n                                <li> public class User {'{'}</li>\r\n                                <li> &nbsp;private String id; </li>\r\n                                <li> {'}'} </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Builder\"> @Builder </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <small> 클래스에 사용하는 것보다 생성자메소드에 직접 사용하는 것이 더 좋다.\r\n                                , 접근레벨 default여서 다른 패키지에서 생성자 호출가능(주의사항) </small>\r\n                            <span className=\"sstitle\"> 빌더 예시 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> @Builder </li>\r\n                                <li> public class User </li>\r\n                                <li> &nbsp;private String id; </li>\r\n                            </span>\r\n                            <span className=\"sstitle\"> 생성자를 만들어서 사용하는것을 권장 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> public class User </li>\r\n                                <li> &nbsp;private String id; </li>\r\n                                <li> &nbsp;@Builder </li>\r\n                                <li> &nbsp;public User(String id) {'{'} </li>\r\n                                <li> &nbsp; this.id = id; </li>\r\n                                <li> &nbsp;{'}'} </li>\r\n                            </span>\r\n                            <span className=\"sstitle\"> build 패턴 구현 예시 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> {'public class User{'} </li>\r\n                                <li> &nbsp;{'private String id;'} </li>\r\n                                <li> &nbsp;{'public static class builder {'} </li>\r\n                                <li> &nbsp;&nbsp;{'private String id;'} </li>\r\n                                <li> &nbsp;&nbsp;{'public builder() { }'} </li>\r\n                                <li> &nbsp;&nbsp;{'public builder id(String id) {'} </li>\r\n                                <li> &nbsp;&nbsp;&nbsp;{'this.id = id;'} </li>\r\n                                <li> &nbsp;&nbsp;&nbsp;{'return this;'} </li>\r\n                                <li> &nbsp;&nbsp;{'    } '} </li>\r\n                                <li> &nbsp;&nbsp;{'    public User build(){'} </li>\r\n                                <li> &nbsp;&nbsp;&nbsp;{'      User user = new User(this.id);'} </li>\r\n                                <li> &nbsp;&nbsp;&nbsp;{'      return user;'} </li>\r\n                                <li> &nbsp;&nbsp;{'    }'} </li>\r\n                                <li> &nbsp;{'    }'} </li>\r\n                                <li> {'    }'} </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@EqualsAndHashCode\"> @EqualsAndHashCode </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  equals(),hashCode() 메소드 생성 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> (of={\"멤버변수1\", \"멤버변수2\"},callSuper=false)를 추가하면\r\n                                    멤버변수1과 멤버변수2가 같다면 같은 객체로 판단을 하여 처리하게 할 수 있다. </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Cleanup\"> @Cleanup </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 리소르를 종료되기전에 .close() 해준다.  </span>\r\n                            <span className=\"mblock\">\r\n                                <li> @Cleanup ABC abc = new FileInput() #대략적인 형식</li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Delegate\"> @Delegate </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> lombok??? </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 한 객체의 메소드를 다른 객체로 위임한다. </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Syncronized\"> @Syncronized </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Value\"> @Value </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Slf4j\"> @Slf4j </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Log4j2\"> @Log4j2 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@NonNull\"> @NonNull </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> NonNull #필드에 값이 필수적으로 들어와야한다. </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringLombok;","import React from 'react';\r\n\r\nconst SpringAnnotation = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Entity\"> @Entity </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Entity , DB의  테이블과 매칭을 하게 해준다. ORM </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Table\"> @Table </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <small> @Table(name=\"테이블이름지정\") </small>\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Id\"> @Id </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> JPA가 식별할 기본키를 정의 </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@GenerateValue\"> @GenerateValue </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> @GenerateValue(strategy = GenerationType.[IDENTITY,ATUO,SEQUENCE,TABLE]) </span>\r\n                            <small> AUTO : (persistence provider)가 특정 DB에 맞게 자동 선택 </small> <br />\r\n                            <small> IDENTITY : DB의 identity 컬럼을 이용 </small> <br />\r\n                            <small> TABLE : 유일성이 보장된 데이터베이스 테이블을 이용 , @TableGenerator </small> <br />\r\n                            <small> SEQUENCE, generator=\"시퀸스생성자이름\" : DB의 시퀸스 컬럼을 이용 , @SequenceGenerator 필요 </small>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@SequenceGenrator\"> @SequenceGenrator </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> @SequenceGenrator(name=\"시퀸스생성자이름\", sequenceName=\"\"(매핑할 DB시퀸스 이름),\r\n                                initialValue=1(시작값), allocationSize=1(증가값) ) </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Column\"> @Column </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <small> 속성 : name=\"DB에 매핑되는 컬럼명\", unique=true, nullable=true ,\r\n                                length=num , columnDefinition=\"설명?\" </small>\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Temporal\"> @Temporal </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 시간 날짜 타입을 지정하는 어노테이션 </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Transient\"> @Transient </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 테이블의 어떤 컬럼과 매핑하지 않을 것을 나타내는 어노테이션 </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Enumerated\"> @Enumerated </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> @Enumerated(EnumType.STRING) </span>\r\n                            <span className=\"mblock\">\r\n                                <li> enum값을 인덱스가 아닌 문자열로 저장하는 방법 </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@SequenceGenerator\"> @SequenceGenerator </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 데이터베이스 시퀸스를 사용하는 방법(시퀸스에 대한 추가적으로 공부 필요) </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Order(숫자)\"> @Order(숫자) </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 순서가 낮을 수록 우선순위, 빈의 등록 순서를 결정 </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@EnableGlobalMethodSecurity\"> @EnableGlobalMethodSecurity </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> @EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true) </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  @Secured활성화, @perAuthorize,@PostAuthorize 활성화 </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@Secured\"> @Secured </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> @Secured(\"ROLE_ADMIN\") </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 특정 메소드 실행전 에 권한을 지정할 수 있다. </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@PreAuthorize\"> @PreAuthorize </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> @PreAuthorize(\"hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')\") </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 특정 메소드에 권한을 1개이상 지정 가능하다. </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@PostAuthorize\"> @PostAuthorize </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 메소드가 끝난 뒤에 ?? </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"@AuthenticationPrincipal\"> @AuthenticationPrincipal </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 1. 로그인한 사용자의 정보를 Principal 객체로 받아온다. </span>\r\n                            <span className=\"sstitle\"> 2. UserDetailsService에서 Return한 객체를 파라미터로 받아 사용할 수 있다. </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringAnnotation;","import React from 'react';\r\n\r\nconst SpringJpa = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JPA(Java Persistence API) <a name=\"JPA(Java Persistence API)\" style={{ visibility: \"hidden\" }}> JPA(Java Persistence API) </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <li> <small> 자바의 영속성 관리와 ORM을 위한 표준 기술  </small> </li>\r\n                                <li> <small> DBMS가 바뀌어도 타입 등을 변경할 필요가 없다는 장점이 있지만 쿼리문에 대한\r\n                                    사용법을 자세히 알지 못하면 사용하기 어렵다. </small> </li>\r\n                                <li> <small> JPA의 구현체 Hibernate,EclipseLink,DataNucleus  </small> </li>\r\n                                {/* <li> <small>   </small> </li> */}\r\n                                <span className=\"mblock\">\r\n                                    <span className=\"sstitle\"> 쿼리 메소드 </span> <small> 컬럼은 대문자로 시작 </small>\r\n                                    <li> <h4>  레포지토리.findByAll() </h4>\r\n                                        <li> select * from 테이블 </li>\r\n                                    </li>\r\n                                    <li> <h4>  findBy컬럼1(String 컬럼) </h4>\r\n                                        <li> select *  from 테이블 where 컬럼1 = 'userid' </li>\r\n                                    </li>\r\n                                    <li> <h4>  findBy컬럼1And컬럼2(String 컬럼,String 컬럼) </h4>\r\n                                        <li> select * from 테이블 where 컬럼1='userid' and 컬럼2='userpwd';  </li>\r\n                                    </li>\r\n                                    <li> <h4>  findBy컬럼1Or컬럼2 </h4>\r\n                                        <li> select * from 테이블 where 컬럼1='userid' or 컬럼2='userpwd'; </li>\r\n                                    </li>\r\n                                    <li> <h4>     </h4>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> <h4>     </h4>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> <h4>     </h4>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> <h4>     </h4>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringJpa;","import React from 'react';\r\n\r\nconst SettingFile = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    <a href=\"https://velog.io/@max9106/Spring-Boot-%EC%99%B8%EB%B6%80%EC%84%A4%EC%A0%95-uik69crax3\" target=\"_blank\"> 설정파일 우선순위 </a>\r\n                    <a href=\"https://blog.voidmainvoid.net/40\" target=\"_blank\"> application.properties 설명, 너무많음.. </a>\r\n                    {/*  */}\r\n                    <span className=\"mtitle\" > <a name=\"application.properties\"> application.properties</a> </span>\r\n                    <li> application.properties : 개발과 서버 두 환경에서 필요한 코드 작성 </li>\r\n                    <li> application-dev.properties : 개발에 필요한 코드 작성 , spring.profiles.active=dev로 개발용 설정파일 사용 </li>\r\n                    <li> application-prod.properties : 서버 운영에 필요한 코드 작성 , spring.profiles.active=prod로 서버 운영 설정파일 사용 </li>\r\n                    <span className=\"mblock\">\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Server  </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> server.address=localhost </span>\r\n                                <li> 서버 경로 설정 </li>\r\n                                <span className=\"sstitle\"> server.port=8080 </span>\r\n                                <li> 서버 포트 설정 </li>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ DataSource  </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver  </span>\r\n                                <li> DB 드라이버 설정 </li>\r\n                                <span className=\"sstitle\"> spring.datasource.url=jdbc:mysql://localhost:3306/스키마이름?characterEncoding=UTF-8&amp;serverTimezone=UTC  </span>\r\n                                <li> DB 저장소 경로와 스키마, 인코딩 , 시간 등 설정 </li>\r\n                                <span className=\"sstitle\"> spring.datasource.username=DB유저이름  </span>\r\n                                <li> DB 유저 아이디 설정 </li>\r\n                                <span className=\"sstitle\"> spring.datasource.password=DB유저비번  </span>\r\n                                <li> DB 유저 비번 설정 </li>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JPA  </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect  </span>\r\n                                <li> dialect 설정 </li>\r\n                                <span className=\"sstitle\"> spring.jpa.properties.hibernate.show-sql=true  </span>\r\n                                <li> hibernate가 실행하는 SQL문을 로그로 확인 가능 </li>\r\n                                <span className=\"sstitle\"> spring.jpa.hibernate.ddl-auto=[none,create-drop,create,update,validate]  </span>\r\n                                <li> none : 아무것도 실행x </li>\r\n                                <li> create-drop : SessionFactory가 시작될 떄 drop실행하고 종료될떄 drop실행 </li>\r\n                                <li> create : SeesionFactory 시작될 떄 drop실행하고 생성된 DDL 실행 </li>\r\n                                <li> update : 변경된 스키마를 적용 </li>\r\n                                <li> validate : 변경된 스키마가 있으면 변경점 출력, 어플리케이션 종료 </li>\r\n                                <span className=\"sstitle\"> spring.jpa.properties.hibernate.format_sql=true  </span>\r\n                                <li> 콘솔에 출력되는 JPA 실행 쿼리를 가독성 있게 보여준다. </li>\r\n                                <span className=\"sstitle\"> spring.jpa.properties.hibernate.use_sql_comments=true  </span>\r\n                                <li> 디버깅 정보 출력 </li>\r\n                                <span className=\"sstitle\"> spring.jpa.generate-ddl  </span>\r\n                                <li> @Entity붙은 클래스를 찾아 ddl을 생성하고 실행  </li>\r\n                                <span className=\"sstitle\"> spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl</span>\r\n                                <li> db의 속성 이름이 camel-case일 경우 설정이 필요, default는 snake-case  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Logging  </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> logging.level.org.hibernate=[error, warn, info, debug] </span>\r\n                                <li> sql쿼리문 레벨에 맞는 메시지 출력(default=info) </li>\r\n                                <span className=\"sstitle\"> logging.level.패키지~.클래스=[error, warn, info, debug] </span>\r\n                                <li> 아래의 경로로 설정된 파일에 대해서 로그 레벨을 설정 </li>\r\n                                <span className=\"sstitle\"> logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE </span>\r\n                                <li> sql 파라미터로 전달되는 값을 출력, trace등급의 메시지 출력 </li>\r\n                                <span className=\"sstitle\"> logging.config=[설정파일.xml 등] </span>\r\n                                <li> 로그 설정 파일 위치 </li>\r\n                                <span className=\"sstitle\"> logging.path=[경로] </span>\r\n                                <li> 로그 파일 위치 </li>\r\n                                <span className=\"sstitle\"> logging.file.name=[../파일명].log </span>\r\n                                <li> 로그 파일 이름 </li>\r\n                                <span className=\"sstitle\"> logging.file.max-size=100MB </span>\r\n                                <li> 로그 파일 용량 설정 </li>\r\n                                <span className=\"sstitle\"> logging.pattern.rolling-file-name=${'{LOG_FILE}'}.%d{'{yyyy-MM-dd}'}-%i.log </span>\r\n                                <li> 설정하지 않으면 .gz 포맷을 가짐 </li>\r\n                                <span className=\"sstitle\"> logging.pattern.console= </span>\r\n                                <li> 어떤 로그메시도 출력하지 않음, 개발이 끝난뒤에 서버 운영할때 설정 </li>\r\n                                <span className=\"sstitle\"> loggin.pattern.console </span>\r\n                                <li> 콘솔 로깅에 붙일 패턴 </li>\r\n                                <span className=\"sstitle\"> loggin.pattern.file </span>\r\n                                <li> 파일 로깅에 붙일 패턴 </li>\r\n                                <span className=\"sstitle\"> loggin.pattern.level </span>\r\n                                <li> 로그 레벨에 붙일 패턴 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Thymeleaf  </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> spring.thymeleaf.cache=false </span>\r\n                                <li> 바꾼 데이터를 실시간 반영하기 위해서 설정 </li>\r\n                                <span className=\"sstitle\"> spring.thymeleaf.prefix=classpath:/templates/ </span>\r\n                                <li> thymeleaf 참조 경로 설정 </li>\r\n                                <span className=\"sstitle\"> spring.thymeleaf.suffix=.html </span>\r\n                                <li> return할 때 .html 생략가능 </li>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ livereload?  </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> spring.devtools.livereload.enabled=true </span>\r\n                                <li> 정적리소스에 변화가 있을 때 화면 렌더링 </li>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ properties에서 변수 사용 </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> firstname = hong </span>\r\n                                <li> 설정파일로 변수 이용하기 </li>\r\n                                <span className=\"sstitle\"> fullname = ${'{firstname}'} gildong  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> 변수이름 = ${'{random.int}'} </span>\r\n                                <li> 랜덤값을 이용하기 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶  </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.yml\"> application.yml  </a> </span>\r\n                        <span className=\"sblock\">\r\n\r\n                            <span className=\"sstitle\"> DataSource </span>\r\n                            <span className=\"mblock\">\r\n                                <li> spring: </li>\r\n                                <li> &nbsp;datasource: </li>\r\n                                <li> &nbsp;&nbsp;driver-class-name: com.mysql.cj.jdbc.Driver </li>\r\n                                <li> &nbsp;&nbsp;url: jdbc:mysql://localhost:3306/스키마이름?serverTimezone=UTC&amp;characterEncoding=UTF-8 </li>\r\n                                <li> &nbsp;&nbsp;username: DB유저이름 </li>\r\n                                <li> &nbsp;&nbsp;password: DB유저비번 </li>\r\n                            </span>\r\n                            <span className=\"sstitle\"> JPA </span>\r\n                            <span className=\"mblock\">\r\n                                <li> <small> JPA 데이터베이스 플랫폼을 지정, MysQL InnoDB사용 </small> </li>\r\n                                <li> &nbsp;database-platform: org.hibernate.dialect.MySQL5InnoDBDialect </li>\r\n                                <li> <small> 웹 요청이 완료될 때까지 동일한 EntityManager를 갖도록 해줍니다., 성능과 확장에 좋지 않다고 하는데 정확하게는 아직 모름 </small> </li>\r\n                                <li> &nbsp;open-in-view: false </li>\r\n                                <li> <small> 콘솔에 JPA 쿼리를 출력 </small> </li>\r\n                                <li> &nbsp;show-sql: true </li>\r\n                                <li> &nbsp;hibernate: </li>\r\n                                <li> &nbsp;&nbsp;format_sql: true </li>\r\n                                <li> <small> none, create(기존테이블을삭제후다시생성), create-drop, update(변경된 스키마만 반영), validate(엔티티와 테이블이 정상적으로 매칭이 되었는지 확인, 운영을 할 떄 사용한다고 함) </small> </li>\r\n                                <li> &nbsp;&nbsp;ddl-auto: update </li>\r\n                                {/* <li> <li> <small> </small> </li> </li>\r\n                                    <li>  </li> */}\r\n                            </span>\r\n                            {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SettingFile;","import React from 'react';\r\n\r\nconst SpringAPI = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶   API <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶   API <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringAPI;","import React from 'react';\r\n\r\nconst SpringOAuth2 = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> OAuth </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ OAuth 2.0 이란? <a name=\"OAuth 2.0 이란?\" style={{ visibility: \"hidden\" }}> OAuth 2.0 이란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> OAuth 2.0의 정의 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 외부 서비스에서도 인증과 권한을 얻고, 서비스의 API를 사용할 수 있게 해주는 것 </li>\r\n                                    <li> 2. 산업 표준 프로토콜 , 인증 및 허가를 얻기 위한 프로토콜 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> OAuth 2.0의 배경 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 아이디와 비밀번호는 제공하지 않으면서 인증과 권한을 부여하는 방식을 만들기 시작, twitter에서 OAuth 1.0버전을 탄생 </li>\r\n                                    <li> 2. OAuth 1.0의 문제점 : 구현 복잡, 웹 이외의 어플리케이션 미지원, 암호화 번거로움, 인증토큰 만료되지 않음 </li>\r\n                                    <li> 3. https 필수, 표준 프로세스로 만들어짐, 다양한 인증방식, 확장성과 단순화, 인증서버분리 등 2.0으로 발전 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> OAuth 2.0의 요소 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. client , 자원을 사용하는 어플리케이션 </li>\r\n                                    <li> 2. resource owner : 사용자 </li>\r\n                                    <li> 3. resource server(API Server) : 자원을 호스팅하는 서버 </li>\r\n                                    <li> 4. authorization server : 사용자의 동의를 받아 권한을 부여하는 서버 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> OAuth 2.0의 사용 과정(약간의 차이는 있을 수 있음) </span>\r\n                                <span className=\"mblock\">\r\n                                    <ol>\r\n                                        <li> 로그인 요청 </li>\r\n                                        <li> 로그인 페이지 제공 </li>\r\n                                        <li> 로그인 정보를 보내기 </li>\r\n                                        <li> 인증 코드(Authoriation Code) 발급 </li>\r\n                                        <li> Callback URL로 다시 바로 정보를 보냄(바로 보낼 수 있게 처리가 됨) </li>\r\n                                        <li> Access Token 요청 </li>\r\n                                        <li> Access Token 발급 </li>\r\n                                        <li> 인증 완료, 로그인 성공 </li>\r\n                                        <li> 서비스 요청 </li>\r\n                                        <li> Access Token을 이용하여 검증하고 서비스를 제공하게 해준다. </li>\r\n                                    </ol>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> OAuth 2.0의 인증 종류(4가지) </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"sstitle\"> 1. Authorization Code Grant </li>\r\n                                    <span className=\"sblock\">\r\n                                        <li> 권한 서버에서 인증하는 방식 , 클라이언트 - 리소스서버 사이의 존재 </li>\r\n                                        <li> Access Token을 바로 클라이언트에 넘기지 않음 #???? </li>\r\n                                        <li> 로그인시에 페이지 URL에 response_type=code 로 넘김 </li>\r\n                                    </span>\r\n                                    <li className=\"sstitle\"> 2. Implicit Grant </li>\r\n                                    <span className=\"sblock\">\r\n                                        <li> 가장 많이 사용되는 방식 </li>\r\n                                        <li> 권한 코드 없이 바로 Access Token 발급이 되어 보안에 취약 </li>\r\n                                        <li> Public Client인 브라우저 기반의 어플리케이션이나 모바일 어플리케이션에서 이 방식을 사용하면 된다. #??? </li>\r\n                                        <li> 주로 Read only 서비스에 사용 </li>\r\n                                        <li> 로그인시에 페이지 URL에 response_type=token 로 넘김 </li>\r\n                                    </span>\r\n                                    <li className=\"sstitle\"> 3. Resource Owner Password Credentials Grant </li>\r\n                                    <span className=\"sblock\">\r\n                                        <li> Clinet에 아이디,비번을 저장하고 아이디,비번으로 직접 access token을 받아오는 방식 </li>\r\n                                        <li> 위험한 방식, 믿을 수 있는 API 서비스에서만 사용 </li>\r\n                                        <li> 로그인시에 API에 POST로 grant_type=password 로 넘김 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <li className=\"sstitle\"> 4. Client Credentials Grant </li>\r\n                                    <span className=\"sblock\">\r\n                                        <li> 어플리케이션이 Confidential Client일 떄 id,secret을 가지고 인증하는 방식 </li>\r\n                                        <li> 로그인시에 API에 POST로 grant_type=client_credentials 로 넘김 </li>\r\n                                    </span>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Google API <a name=\"Google API\" style={{ visibility: \"hidden\" }}> Google API </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Google API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1.  <a href=\"https://console.cloud.google.com/\" target=\"_blank\"> Google API 설정하기 </a> </li>\r\n                                    <li> 2. 좌측 메뉴 API 및 서비스 클릭 </li>\r\n                                    <li> 3. 상단에 육각형 모양 3개를 클릭해서 새프로젝트 생성  </li>\r\n                                    <li> 4. 좌측 메뉴에 \"OAuth 동의 화면\" 클릭하고 User Type 체크하기  </li>\r\n                                    <li> 5. 그다음 화면에서 앱 이름만 적기(test-oauth)  </li>\r\n                                    <li> 6. 좌측 메뉴 \"사용자 인증 정보\" - \"사용자 인증 정보 만들기\" 클릭 - OAuth 클라이언트 ID 클릭\r\n                                        - 애플리케이션 유형에서 웹 어플리케이션 선택 - 이름* 바꾸기(test-oauth) -\r\n                                        승인된 리디렉션 URI 추가(http://localhost:8080/login/oauth2/code/google) </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>security: </li>\r\n                                    <li>&nbsp;oauth2: </li>\r\n                                    <li>&nbsp;&nbsp;client: </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;registration: </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;google:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-id: 클라이언트 ID  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-secret: 클라이언트 보안 비밀번호  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- email  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- profile  </li>\r\n                                </span>\r\n                            </span>\r\n\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <details>\r\n                                        <summary> html 코드 </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\">  </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'<a href=\"/oauth2/authorization/google\"> 구글 로그인 </a>'} </li>\r\n                                                <small> oauth2를 사용할 경우 경로가 정해져 있으므로 변경하지 않고 그대로 사용 </small>\r\n                                            </span>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> @Service public class CustomOAuth2UserService <small> extends DefaultOAuth2UserService </small> </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> @Override <br /> public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> System.out.println(\"1: \"+ userRequest); </li>\r\n                                                <li> System.out.println(\"2: \"+userRequest.getAccessToken().getTokenValue()); </li>\r\n                                                <li> System.out.println(\"3: \"+userRequest.getAdditionalParameters()); </li>\r\n                                                <li> System.out.println(\"4: \"+userRequest.getClientRegistration()); //유저의 아이디 등등 </li>\r\n                                                <li> System.out.println(\"5: \"+super.loadUser(userRequest).getAttributes()); </li>\r\n                                                <li> return super.loadUser(userRequest);  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> @EnableWebSecurity @Configuration public class CustomWebSecurityConfig <small> extends WebSecurityConfigurerAdapter </small> </summary>\r\n                                        <small>  </small>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> @Override protected void configure(HttpSecurity http) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> .oauth2Login() </li>\r\n                                                <li> .loginPage(\"/loginForm\")  </li>\r\n                                                <li> .userInfoEndpoint()  </li>\r\n                                                <li> .userService(customOAuth2UserService); //로그인 후에 처리할 서비스 작성 </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  </summary>\r\n                                        <small>  </small> <br />\r\n                                        <small>  </small>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\">  </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Facebook API <a name=\"Facebook API\" style={{ visibility: \"hidden\" }}>  Facebook API </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Facebook API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 0. <a href=\"https://developers.facebook.com/?locale=ko_KR\" target=\"_blank\"> 페이스북 개발자 홈페이지 </a> </li>\r\n                                    <li> 1. 페이스북 개발자 홈페이지 로그인 </li>\r\n                                    <li> 2. 처음이면 우측 상단에 시작하기 아니면 내 앱 누르기 </li>\r\n                                    <li> 3. 처음이면 앱 만들기 버튼 클릭 </li>\r\n                                    <li> 4. 앱 유형 \"없음\" 선택 </li>\r\n                                    <li> 5. 좌측메뉴 fackbook 로그인 설정 \"빠른시작\" </li>\r\n                                    <li> 6. 웹 - 사이트 URL - http://localhost:8080  입력 </li>\r\n                                    <li> 7. 좌측 메뉴 설정 - 기본 설정 </li>\r\n                                    <li> 8. application.yml에 설정하기 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>security: </li>\r\n                                    <li>&nbsp;oauth2: </li>\r\n                                    <li>&nbsp;&nbsp;client: </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;registration: </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;facebook:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-id: 앱ID  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-secret: 앱 시크릿 코드  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- email  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- pulic_profile  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> html : {'<a href=\"/oauth2/authorization/facebook\"> 페이스북 로그인 </a>'} </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Naver API <a name=\"Naver API\" style={{ visibility: \"hidden\" }}> Naver API </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Naver API 설정하기 </span>\r\n                                <a href=\"https://developers.naver.com/docs/login/api/api.md\" target=\"_blank\"> 네이버 API 문서 </a>\r\n                                <span className=\"mblock\">\r\n                                    <li> <a href=\"https://developers.naver.com/main/\" target=\"_blank\"> https://developers.naver.com/main/ </a> </li>\r\n                                    <li> 상단 메뉴 Application 클릭 </li>\r\n                                    <li> 애플리케이션 등록 </li>\r\n                                    <li> 애플리케이션 이름 : 아무거나 </li>\r\n                                    <li> 사용 API : 네아로 , 필요한거 체크 </li>\r\n                                    <li> 환경 추가 : PC 웹 , 서비스 URL을 사용할것입력 , 콜백 URL을 아무거나입력  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>security: </li>\r\n                                    <li>&nbsp;oauth2: </li>\r\n                                    <li>&nbsp;&nbsp;client: </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;registration: </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;naver:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-id: Client ID  #애플리케이션 등록시 발급받은 Client ID 값 </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-secret: Client Secret #애플리케이션 등록 시 발급받은 Client secret 값 </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- email  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- name  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-name: Naver  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authorization-grant-type: [authorization_code,refresh_token,delete] #발급,갱신,삭제 </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redirect-uri: 네이버아이디로 로그인 Callback URL  #html 로그인폼에서 사용하는 경로 </li>\r\n                                    <li>  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;provider:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;naver:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authorization-uri: https://nid.naver.com/ouath2.0/authorize  #네이버 로그인창이 뜨게 만듬</li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token-uri: https://nid.naver.com/oauth2.0/token #토큰을 받기 위해 사용  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user-info-uri: https://openapi.naver.com/v1/nid/me #프로필 API를 호출할 떄 사용  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user-name-attribute: response #응답을 받을 때   </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <details>\r\n                                        <summary> html 코드 </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\">  </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'<a href=\"네이버아이디로 로그인 Callback URL 경로\"> 네이버 로그인 </a>'} </li>\r\n                                                <small> 네이버는 경로를 본인이 적기 때문에 경로 설정을 잘 해주어야 한다. #localhost:8080 은 빼고 사용 </small>\r\n                                            </span>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> @Service public class CustomOAuth2UserService <small> extends DefaultOAuth2UserService </small> </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> @Override <br /> public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> System.out.println(\"1: \"+ userRequest); </li>\r\n                                                <li> System.out.println(\"2: \"+userRequest.getAccessToken().getTokenValue()); </li>\r\n                                                <li> System.out.println(\"3: \"+userRequest.getAdditionalParameters()); </li>\r\n                                                <li> System.out.println(\"4: \"+userRequest.getClientRegistration()); //유저의 아이디 등등 </li>\r\n                                                <li> System.out.println(\"5: \"+super.loadUser(userRequest).getAttributes()); </li>\r\n                                                <li> return super.loadUser(userRequest);  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> @EnableWebSecurity @Configuration public class CustomWebSecurityConfig <small> extends WebSecurityConfigurerAdapter </small> </summary>\r\n                                        <small>  </small>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> @Override protected void configure(HttpSecurity http) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> .oauth2Login() </li>\r\n                                                <li> .loginPage(\"/loginForm\")  </li>\r\n                                                <li> .userInfoEndpoint()  </li>\r\n                                                <li> .userService(customOAuth2UserService); //로그인 후에 처리할 서비스 작성 </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  </summary>\r\n                                        <small>  </small> <br />\r\n                                        <small>  </small>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\">  </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶   API <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>security: </li>\r\n                                    <li>&nbsp;oauth2: </li>\r\n                                    <li>&nbsp;&nbsp;client: </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;registration: </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;facebook:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-id: 앱ID  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client-secret: 앱 시크릿 코드  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope:  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- email  </li>\r\n                                    <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- pulic_profile  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶   API <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶   API <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 에러  <a name=\"에러\" style={{ visibility: \"hidden\" }}> 에러 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> You don't have permission to access /ouath2.0/authorize on this server. </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> authorization-uri: https://nid.naver.com/ouath2.0/authorize 부분에서 ouath2.0를 잘못 입력 </li>\r\n                                    <li> ouath2.0를 oauth2.0으로 수정함...^_^;; </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringOAuth2;","import React from 'react';\r\n\r\nconst Term2 = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Spring Security 관련 객체 <a name=\"Spring Security 관련 객체\" style={{ visibility: \"hidden\" }}> Spring Security 관련 객체 </a> </summary>\r\n                            <small> 사용자의 인증,권한,보안 처리를 간단하게 구현 </small>\r\n                            <li> <small> 인증방식 : credential방식(사용자명,비번) , 이중인증(개인정보인증+추가인증(OTP) , ) </small> </li>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 용어 </span>\r\n                                <li> Principal(접근주체) : 보호된 대상에 접근하는 대상 </li>\r\n                                <li> Credential(비밀번호) : Resource에 접근하는 대상의 비밀번호 </li>\r\n                                <li> Authentication(인증) : 현재 유저가 누구인지 확인, 작업을 수행할 수 있는지 여부를 판단 </li>\r\n                                <li> Authorize(인가) : 현재 유저가 어떤 서비스,페이지에 접근할 수 있는 권한이 있는지 검사 </li>\r\n                                <li> Authority(권한) : 특정 작어에 수행 권한이 있는지 판단 (GUEST,USER,MEMBER,ADMIN) </li>\r\n\r\n                                <span className=\"sstitle\"> 스프링 시큐리티 메소드,객체 </span>\r\n                                <span className=\"mblock\">\r\n                                    <details>\r\n                                        <summary> {' '} </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> {' '} </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AbstractAuthenticationToken [AC] </summary>\r\n                                        <small> implements Authentication, CredentialsContainer  </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small>  </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'private final Collection<GrantedAuthority> authorities;'} </li>\r\n                                                <li> private Object details; </li>\r\n                                                <li> private boolean authenticated = false; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> {'public AbstractAuthenticationToken(Collection<? extends GrantedAuthority> authorities)'} </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' if (authorities == null) {  '} </li>\r\n                                                <li> {'     this.authorities = AuthorityUtils.NO_AUTHORITIES;  '} </li>\r\n                                                <li> {'     return;  '} </li>\r\n                                                <li> {' }  '} </li>\r\n                                                <li> {' for (GrantedAuthority a : authorities) {  '} </li>\r\n                                                <li> {'     Assert.notNull(a, \"Authorities collection cannot contain any null elements\");  '} </li>\r\n                                                <li> {' }  '} </li>\r\n                                                <li> {' this.authorities = Collections.unmodifiableList(new ArrayList<>(authorities));  '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> {'public Collection<GrantedAuthority> getAuthorities()'} </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.authorities; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public String getName() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' if (this.getPrincipal() instanceof UserDetails) { '} </li>\r\n                                                <li> {' \t\t\treturn ((UserDetails) this.getPrincipal()).getUsername(); '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\tif (this.getPrincipal() instanceof AuthenticatedPrincipal) { '} </li>\r\n                                                <li> {' \t\t\treturn ((AuthenticatedPrincipal) this.getPrincipal()).getName(); '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\tif (this.getPrincipal() instanceof Principal) { '} </li>\r\n                                                <li> {' \t\t\treturn ((Principal) this.getPrincipal()).getName(); '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\treturn (this.getPrincipal() == null) ? \"\" : this.getPrincipal().toString(); '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public boolean isAuthenticated() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.authenticated; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void setAuthenticated(boolean authenticated) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.authenticated = authenticated; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public Object getDetails() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.details; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void setDetails(Object details) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.details = details;  </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void eraseCredentials() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> eraseSecret(getCredentials()); </li>\r\n                                                <li> \t\teraseSecret(getPrincipal()); </li>\r\n                                                <li> \t\teraseSecret(this.details); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private void eraseSecret(Object secret) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'if (secret instanceof CredentialsContainer) { '} </li>\r\n                                                <li> {'    ((CredentialsContainer) secret).eraseCredentials(); '} </li>\r\n                                                <li> {'} '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public boolean equals(Object obj) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' if (!(obj instanceof AbstractAuthenticationToken)) { return false; } '} </li>\r\n                                                <li> {' AbstractAuthenticationToken test = (AbstractAuthenticationToken) obj; '} </li>\r\n                                                <li> {' if (!this.authorities.equals(test.authorities)) { return false; } '} </li>\r\n                                                <li> {' if ((this.details == null) && (test.getDetails() != null)) { return false; } '} </li>\r\n                                                <li> {' if ((this.details != null) && (test.getDetails() == null)) return false;} '} </li>\r\n                                                <li> {' if ((this.details != null) && (!this.details.equals(test.getDetails()))) {return false;} '} </li>\r\n                                                <li> {' if ((this.getCredentials() == null) && (test.getCredentials() != null)) {return false;} '} </li>\r\n                                                <li> {' if ((this.getCredentials() != null) && !this.getCredentials().equals(test.getCredentials())) {return false;} '} </li>\r\n                                                <li> {' if (this.getPrincipal() == null && test.getPrincipal() != null) {return false;} '} </li>\r\n                                                <li> {' if (this.getPrincipal() != null && !this.getPrincipal().equals(test.getPrincipal())) {return false;} '} </li>\r\n                                                <li> {' return this.isAuthenticated() == test.isAuthenticated(); '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public int hashCode() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'int code = 31;int code = 31; '} </li>\r\n                                                <li> {'for (GrantedAuthority authority : this.authorities) {code ^= authority.hashCode();}for (GrantedAuthority authority : this.authorities) {code ^= authority.hashCode();} '} </li>\r\n                                                <li> {'if (this.getPrincipal() != null) {code ^= this.getPrincipal().hashCode();}if (this.getPrincipal() != null) {code ^= this.getPrincipal().hashCode();} '} </li>\r\n                                                <li> {'if (this.getCredentials() != null) {code ^= this.getCredentials().hashCode();}if (this.getCredentials() != null) {code ^= this.getCredentials().hashCode();} '} </li>\r\n                                                <li> {'if (this.getDetails() != null) {code ^= this.getDetails().hashCode();}if (this.getDetails() != null) {code ^= this.getDetails().hashCode();} '} </li>\r\n                                                <li> {'if (this.isAuthenticated()) {code ^= -37;}if (this.isAuthenticated()) {code ^= -37;} '} </li>\r\n                                                <li> {'return code;return code; '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public String toString() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' \t\tStringBuilder sb = new StringBuilder(); '} </li>\r\n                                                <li> {' \t\tsb.append(getClass().getSimpleName()).append(\" [\"); '} </li>\r\n                                                <li> {' \t\tsb.append(\"Principal=\").append(getPrincipal()).append(\", \"); '} </li>\r\n                                                <li> {' \t\tsb.append(\"Credentials=[PROTECTED], \"); '} </li>\r\n                                                <li> {' \t\tsb.append(\"Authenticated=\").append(isAuthenticated()).append(\", \"); '} </li>\r\n                                                <li> {' \t\tsb.append(\"Details=\").append(getDetails()).append(\", \"); '} </li>\r\n                                                <li> {' \t\tsb.append(\"Granted Authorities=\").append(this.authorities); '} </li>\r\n                                                <li> {' \t\tsb.append(\"]\"); '} </li>\r\n                                                <li> {' \t\treturn sb.toString(); '} </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> {' AbstractDaoAuthenticationConfigurer<B extends ProviderManagerBuilder<B>, C extends AbstractDaoAuthenticationConfigurer<B, C, U>, U extends UserDetailsService> '}  [AC]</summary>\r\n                                        <small> {'extends UserDetailsAwareConfigurer<B, U>'}  </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> private DaoAuthenticationProvider provider = new DaoAuthenticationProvider(); </li>\r\n                                                <li> private final U userDetailsService; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> AbstractDaoAuthenticationConfigurer(U userDetailsService) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' this.userDetailsService = userDetailsService; '} </li>\r\n                                                <li> {' this.provider.setUserDetailsService(userDetailsService); '} </li>\r\n                                                <li> {' if (userDetailsService instanceof UserDetailsPasswordService) { '} </li>\r\n                                                <li> {' \tthis.provider.setUserDetailsPasswordService((UserDetailsPasswordService) userDetailsService); '} </li>\r\n                                                <li> {' } '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> {'public C withObjectPostProcessor(ObjectPostProcessor<?> objectPostProcessor)'} </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> addObjectPostProcessor(objectPostProcessor); </li>\r\n                                                <li> return (C) this; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public C passwordEncoder(PasswordEncoder passwordEncoder) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.provider.setPasswordEncoder(passwordEncoder); </li>\r\n                                                <li> return (C) this; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public C userDetailsPasswordManager(UserDetailsPasswordService passwordManager </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.provider.setUserDetailsPasswordService(passwordManager); </li>\r\n                                                <li> return (C) this; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void configure(B builder) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.provider = postProcess(this.provider); </li>\r\n                                                <li> builder.authenticationProvider(this.provider); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public U getUserDetailsService() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.userDetailsService; </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AbstractConfiguredSecurityBuilder{\"<O, B extends SecurityBuilder<O>>\"} [AC] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> extends AbstractSecurityBuilder{\"<O>\"} </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버변수 </span>\r\n                                            <span className=\"mblock\">\r\n\r\n                                                <li> private final Log logger = LogFactory.getLog(getClass()); </li>\r\n                                                <li> private final LinkedHashMap&lt;Class&lt;? extends SecurityConfigurer&lt;O, B&gt;&gt;, List&lt;SecurityConfigurer&lt;O, B&gt;&gt;&gt; </li>\r\n                                                <li> private final List&lt;SecurityConfigurer&lt;O, B&gt;&gt; configurersAddedInInitializing = new ArrayList&lt;&gt;(); </li>\r\n                                                <li> private final Map&lt;Class&lt;?&gt;, Object&gt; sharedObjects = new HashMap&lt;&gt;(); </li>\r\n                                                <li> private final boolean allowConfigurersOfSameType; </li>\r\n                                                <li> private BuildState buildState = BuildState.UNBUILT; </li>\r\n                                                <li> private ObjectPostProcessor&lt;Object&gt; objectPostProcessor; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected AbstractConfiguredSecurityBuilder(ObjectPostProcessor&lt;Object&gt; objectPostProcessor) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this(objectPostProcessor, false); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected AbstractConfiguredSecurityBuilder(ObjectPostProcessor&lt;Object&gt; objectPostProcessor,\r\n                                                boolean allowConfigurersOfSameType) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> Assert.notNull(objectPostProcessor, \"objectPostProcessor cannot be null\"); </li>\r\n                                                <li> this.objectPostProcessor = objectPostProcessor; </li>\r\n                                                <li> this.allowConfigurersOfSameType = allowConfigurersOfSameType; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public O getOrBuild() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' if (!isUnbuilt()) { return getObject(); } '} </li>\r\n                                                <li> {' try { return build(); } '} </li>\r\n                                                <li> {' catch (Exception ex) { '} </li>\r\n                                                <li> {' this.logger.debug(\"Failed to perform build. Returning null\", ex); '} </li>\r\n                                                <li> {' return null; } '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public &lt;C extends SecurityConfigurerAdapter&lt;O, B&gt;&gt; C apply(C configurer) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> configurer.addObjectPostProcessor(this.objectPostProcessor); </li>\r\n                                                <li> configurer.setBuilder((B) this); </li>\r\n                                                <li> add(configurer); </li>\r\n                                                <li> return configurer; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public &lt;C extends SecurityConfigurer&lt;O, B&gt;&gt; C apply(C configurer) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> add(configurer); </li>\r\n                                                <li> return configurer; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> ublic &lt;C&gt; void setSharedObject(Class&lt;C&gt; sharedType, C object) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.sharedObjects.put(sharedType, object); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public &lt;C&gt; C getSharedObject(Class&lt;C&gt; sharedType) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return (C) this.sharedObjects.get(sharedType); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public Map&lt;Class&lt;?&gt;, Object&gt; getSharedObjects() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return Collections.unmodifiableMap(this.sharedObjects); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private &lt;C extends SecurityConfigurer&lt;O, B&gt;&gt; void add(C configurer) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'Assert.notNull(configurer, \"configurer cannot be null\"); '} </li>\r\n                                                <li> {'Class&lt;? extends SecurityConfigurer&lt;O, B&gt;&gt; clazz  '} </li>\r\n                                                <li> {'= (Class&lt;? extends SecurityConfigurer&lt;O, B&gt;&gt;) configurer.getClass(); '} </li>\r\n                                                <li> {'synchronized (this.configurers) { '} </li>\r\n                                                <li> {'\tif (this.buildState.isConfigured()) {  '} </li>\r\n                                                <li> {'        throw new IllegalStateException(\"Cannot apply \" + configurer + \" to already built object\"); } '} </li>\r\n                                                <li> {'\tList&lt;SecurityConfigurer&lt;O, B&gt;&gt; configs = null; '} </li>\r\n                                                <li> {'\tif (this.allowConfigurersOfSameType) { configs = this.configurers.get(clazz); } '} </li>\r\n                                                <li> {'\tconfigs = (configs != null) ? configs : new ArrayList&lt;&gt;(1); '} </li>\r\n                                                <li> {'\tconfigs.add(configurer); '} </li>\r\n                                                <li> {'\tthis.configurers.put(clazz, configs); '} </li>\r\n                                                <li> {'\tif (this.buildState.isInitializing()) { this.configurersAddedInInitializing.add(configurer); } '} </li>\r\n                                                <li> {'} '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public &lt;C extends SecurityConfigurer&lt;O, B&gt;&gt; List&lt;C&gt; getConfigurers(Class&lt;C&gt; clazz) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' List&lt;C&gt; configs = (List&lt;C&gt;) this.configurers.get(clazz); '} </li>\r\n                                                <li> {' if (configs == null) { return new ArrayList&lt;&gt;(); } '} </li>\r\n                                                <li> {' return new ArrayList&lt;&gt;(configs); '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public &lt;C extends SecurityConfigurer&lt;O, B&gt;&gt; List&lt;C&gt; removeConfigurers(Class&lt;C&gt; clazz) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'List&lt;C&gt; configs = (List&lt;C&gt;) this.configurers.remove(clazz); '} </li>\r\n                                                <li> {'if (configs == null) { return new ArrayList&lt;&gt;(); } '} </li>\r\n                                                <li> {'return new ArrayList&lt;&gt;(configs); '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public &lt;C extends SecurityConfigurer&lt;O, B&gt;&gt; C getConfigurer(Class&lt;C&gt; clazz) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'List&lt;SecurityConfigurer&lt;O, B&gt;&gt; configs = this.configurers.get(clazz); '} </li>\r\n                                                <li> {'if (configs == null) { return null; } '} </li>\r\n                                                <li> {'Assert.state(configs.size() == 1, '} </li>\r\n                                                <li> {'\t\t() -&gt; \"Only one configurer expected for type \" + clazz + \", but got \" + configs); '} </li>\r\n                                                <li> {'return (C) configs.get(0); '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public &lt;C extends SecurityConfigurer&lt;O, B&gt;&gt; C removeConfigurer(Class&lt;C&gt; clazz) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'List&lt;SecurityConfigurer&lt;O, B&gt;&gt; configs = this.configurers.remove(clazz);'} </li>\r\n                                                <li> {'if (configs == null) { return null; }'} </li>\r\n                                                <li> {'Assert.state(configs.size() == 1,'} </li>\r\n                                                <li> {'\t\t() -&gt; \"Only one configurer expected for type \" + clazz + \", but got \" + configs);'} </li>\r\n                                                <li> {'return (C) configs.get(0);'} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public B objectPostProcessor(ObjectPostProcessor&lt;Object&gt; objectPostProcessor) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'Assert.notNull(objectPostProcessor, \"objectPostProcessor cannot be null\");'} </li>\r\n                                                <li> {'this.objectPostProcessor = objectPostProcessor;'} </li>\r\n                                                <li> {'return (B) this;'} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected &lt;P&gt; P postProcess(P object) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.objectPostProcessor.postProcess(object); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected final O doBuild() throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'synchronized (this.configurers) {'} </li>\r\n                                                <li> {'\tthis.buildState = BuildState.INITIALIZING;'} </li>\r\n                                                <li> {'\tbeforeInit();'} </li>\r\n                                                <li> {'\tinit();'} </li>\r\n                                                <li> {'\tthis.buildState = BuildState.CONFIGURING;'} </li>\r\n                                                <li> {'\tbeforeConfigure();'} </li>\r\n                                                <li> {'\tconfigure();'} </li>\r\n                                                <li> {'\tthis.buildState = BuildState.BUILDING;'} </li>\r\n                                                <li> {'\tO result = performBuild();'} </li>\r\n                                                <li> {'\tthis.buildState = BuildState.BUILT;'} </li>\r\n                                                <li> {'\treturn result;'} </li>\r\n                                                <li> {'}'} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected void beforeInit() throws Exception { } </span>\r\n                                            <span className=\"sstitle\"> protected void beforeConfigure() throws Exception { } </span>\r\n                                            <span className=\"sstitle\"> protected abstract O performBuild() throws Exception; </span>\r\n                                            <span className=\"sstitle\"> </span>\r\n\r\n                                            <span className=\"sstitle\"> private void init() throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'Collection&lt;SecurityConfigurer&lt;O, B&gt;&gt; configurers = getConfigurers();'} </li>\r\n                                                <li> {'for (SecurityConfigurer&lt;O, B&gt; configurer : configurers) {'} </li>\r\n                                                <li> {'\tconfigurer.init((B) this); }'} </li>\r\n                                                <li> {'for (SecurityConfigurer&lt;O, B&gt; configurer : this.configurersAddedInInitializing) {'} </li>\r\n                                                <li> {'\tconfigurer.init((B) this); }'} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private void configure() throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'Collection&lt;SecurityConfigurer&lt;O, B&gt;&gt; configurers = getConfigurers();'} </li>\r\n                                                <li> {'for (SecurityConfigurer&lt;O, B&gt; configurer : configurers) {'} </li>\r\n                                                <li> {'\tconfigurer.configure((B) this); }'} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private Collection&lt;SecurityConfigurer&lt;O, B&gt;&gt; getConfigurers() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'List&lt;SecurityConfigurer&lt;O, B&gt;&gt; result = new ArrayList&lt;&gt;();'} </li>\r\n                                                <li> {'for (List&lt;SecurityConfigurer&lt;O, B&gt;&gt; configs : this.configurers.values()) {'} </li>\r\n                                                <li> {'\tresult.addAll(configs); }'} </li>\r\n                                                <li> {'return result;'} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private boolean isUnbuilt() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'synchronized (this.configurers) {'} </li>\r\n                                                <li> {'\treturn this.buildState == BuildState.UNBUILT; }'} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private enum BuildState </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'UNBUILT(0),'} </li>\r\n                                                <li> {'INITIALIZING(1),'} </li>\r\n                                                <li> {'CONFIGURING(2),'} </li>\r\n                                                <li> {'BUILDING(3),'} </li>\r\n                                                <li> {'BUILT(4);'} </li>\r\n                                                <li> {'private final int order;'} </li>\r\n                                                <li> {'BuildState(int order) { this.order = order; }'} </li>\r\n                                                <li> {'public boolean isInitializing() { return INITIALIZING.order == this.order; }'} </li>\r\n                                                <li> {'public boolean isConfigured() { return this.order &gt;= CONFIGURING.order; }'} </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AbstractSecurityBuilder{\"<O>\"} [AC] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> implements SecurityBuilder{\"<O>\"} </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> private AtomicBoolean building = new AtomicBoolean(); </li>\r\n                                                <li> private O object; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public final O build() throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> if (this.building.compareAndSet(false, true)) {\"{\"} </li>\r\n                                                <li> this.object = doBuild(); </li>\r\n                                                <li> return this.object; {\"}\"} </li>\r\n                                                <li> throw new AlreadyBuiltException(\"This object has already been built\"); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public final O getObject() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> if (!this.building.get()) {\"{\"} </li>\r\n                                                <li> throw new IllegalStateException(\"This object has not been built\"); {\"}\"} </li>\r\n                                                <li> return this.object; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected abstract O doBuild() throws Exception; </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> Authentication [I] <small> 유저(접근하는 주체)의 정보와 권한을 담은 인터페이스, Security Context에 저장 </small> </summary>\r\n                                        <small> 인증 요청 관련 정보를 저장, 인증 과정에 사용되는 핵심 객체 </small>\r\n                                        <small> 사용자 아이디,패스워드,인증요청 컨텍스트에 대한 정보를 가지고 있음 </small>\r\n                                        <span className=\"sblock\">\r\n                                            <small> extends Principal, Serializable </small>\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> {'Collection<? extends GrantedAuthority> getAuthorities();'} </span>\r\n                                            <span className=\"sstitle\"> {'Object getCredentials();'} </span>\r\n                                            <span className=\"sstitle\"> {'Object getDetails();'} </span>\r\n                                            <span className=\"sstitle\"> {'Object getPrincipal();'} </span>\r\n                                            <span className=\"sstitle\"> {'boolean isAuthenticated();'} </span>\r\n                                            <span className=\"sstitle\"> {'void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException;'} </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AuthenticationManager(인증관리자) [I] <small> 인증 요청을 받고서 Authentication을 채워준다. </small> </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> Authentication 객체를 받아 인증하고 인증되었다면 Authentication 객체를 돌려주는 인터페이스</small>\r\n                                            <span className=\"sstitle\"> Authentication authenticate(Authentication authentication) throws AuthenticationException; </span>\r\n                                            <li> </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AuthenticationProvider [I] <small> 실제 인증이 되고, 인증 성공시 Authentication객체 인증을 true로 바꾸어줌 </small> </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small>  </small> </li>\r\n                                            <span className=\"sstitle\"> Authentication authenticate(Authentication authentication) throws AuthenticationException; </span>\r\n                                            <span className=\"sstitle\"> boolean supports{\"(Class<?> authentication);\"} </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AuthenticationManagerBuilder [C] <small>  &nbsp;&nbsp;스프링 시큐리티가 사용자를 인증하는 방법을 담은 클래스 </small>  </summary>\r\n                                        <li> <small> 스프링 시큐리티가 사용자를 인증하는 방법을 담은 클래스 </small> </li>\r\n                                        <li> <small> extends AbstractConfiguredSecurityBuilder&lt;AuthenticationManager, AuthenticationManagerBuilder&gt; </small> </li>\r\n                                        <li> <small> implements ProviderManagerBuilder&lt;AuthenticationManagerBuilder&gt; </small> </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> DB, In-memory 등 인증 방식 설정 </small> </li>\r\n                                            <li> <small> AuthenticationProvider 객체를 리스트로 보관 </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버변수 </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> private final Log logger = LogFactory.getLog(getClass()); </li>\r\n                                                <li> private AuthenticationManager parentAuthenticationManager; </li>\r\n                                                <li className=\"col_r\"> private List&lt;AuthenticationProvider&gt; authenticationProviders = new ArrayList&lt;&gt;() </li>\r\n                                                <li> private UserDetailsService defaultUserDetailsService; </li>\r\n                                                <li> private Boolean eraseCredentials; </li>\r\n                                                <li> private AuthenticationEventPublisher eventPublisher; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public AuthenticationManagerBuilder parentAuthenticationManager(AuthenticationManager authenticationManager) </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> if (authenticationManager instanceof ProviderManager) {\"{\"} </li>\r\n                                                <li> eraseCredentials(((ProviderManager) authenticationManager).isEraseCredentialsAfterAuthentication()); {\"}\"} </li>\r\n                                                <li> this.parentAuthenticationManager = authenticationManager; </li>\r\n                                                <li> return this; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public AuthenticationManagerBuilder authenticationEventPublisher(AuthenticationEventPublisher eventPublisher) </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> Assert.notNull(eventPublisher, \"AuthenticationEventPublisher cannot be null\"); </li>\r\n                                                <li> this.eventPublisher = eventPublisher; </li>\r\n                                                <li> return this; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public AuthenticationManagerBuilder eraseCredentials(boolean eraseCredentials) </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> this.eraseCredentials = eraseCredentials; </li>\r\n                                                <li> return this; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public InMemoryUserDetailsManagerConfigurer&lt;AuthenticationManagerBuilder&gt; inMemoryAuthentication()\r\n                                                throws Exception <br /> <small> InMemory 방식으로 인증 설정 </small> </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> return apply(new InMemoryUserDetailsManagerConfigurer&lt;&gt;());  </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public JdbcUserDetailsManagerConfigurer&lt;AuthenticationManagerBuilder&gt; jdbcAuthentication() throws Exception\r\n                                                <br /> <small> Jdbc 방식으로 인증 설정 </small> </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> return apply(new JdbcUserDetailsManagerConfigurer&lt;&gt;()); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public &lt;T extends UserDetailsService&gt; DaoAuthenticationConfigurer&lt;AuthenticationManagerBuilder, T&gt; userDetailsService(\r\n                                                T userDetailsService) throws Exception </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> this.defaultUserDetailsService = userDetailsService; </li>\r\n                                                <li> return apply(new DaoAuthenticationConfigurer&lt;&gt;(userDetailsService)); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public LdapAuthenticationProviderConfigurer&lt;AuthenticationManagerBuilder&gt; ldapAuthentication()\r\n                                                throws Exception <br /> <small> Ldap 방식으로 인증 설정 </small> </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> return apply(new LdapAuthenticationProviderConfigurer&lt;&gt;()); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle col_r\"> public AuthenticationManagerBuilder authenticationProvider(AuthenticationProvider authenticationProvider)\r\n                                                <br /> <small> AuthenticationManagerBuilder멤버변수 리스트에 AuthenticationProvider 추가하고 반환 </small> </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> this.authenticationProviders.add(authenticationProvider); </li>\r\n                                                <li> return this; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected ProviderManager performBuild() throws Exception </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> if (!isConfigured()) {\"{\"} </li>\r\n                                                <li> \tthis.logger.debug(\"No authenticationProviders and no parentAuthenticationManager defined. Returning null.\"); </li>\r\n                                                <li> \treturn null; {\"}\"} </li>\r\n                                                <li> ProviderManager providerManager = new ProviderManager(this.authenticationProviders, </li>\r\n                                                <li> \t\tthis.parentAuthenticationManager); </li>\r\n                                                <li> if (this.eraseCredentials != null) {\"{\"} </li>\r\n                                                <li> \tproviderManager.setEraseCredentialsAfterAuthentication(this.eraseCredentials); {\"}\"} </li>\r\n                                                <li> if (this.eventPublisher != null) {\"{\"} </li>\r\n                                                <li> \tproviderManager.setAuthenticationEventPublisher(this.eventPublisher); {\"}\"} </li>\r\n                                                <li> providerManager = postProcess(providerManager); </li>\r\n                                                <li> return providerManager; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public boolean isConfigured()  </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> return !this.authenticationProviders.isEmpty() || this.parentAuthenticationManager != null; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public UserDetailsService getDefaultUserDetailsService() </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> return this.defaultUserDetailsService; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> private &lt;C extends UserDetailsAwareConfigurer&lt;AuthenticationManagerBuilder, ? extends UserDetailsService&gt;&gt; C apply(\r\n                                                C configurer) throws Exception </span>\r\n                                            <span className=\"mlbock\">\r\n                                                <li> this.defaultUserDetailsService = configurer.getUserDetailsService(); </li>\r\n                                                <li> return super.apply(configurer); </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AuthenticationEntryPoint  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AuthenticationSuccessHandler </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AuthenticationFailureHandler </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AccessDeniedHandler  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AccessDecisionManager  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> AffirmativeBased  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> CredentialsContainer [I] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> void eraseCredentials(); </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> DaoAuthenticationConfigurer{'<B extends ProviderManagerBuilder<B>, U extends UserDetailsService>'} [C] </summary>\r\n                                        <small> {'extends AbstractDaoAuthenticationConfigurer<B, DaoAuthenticationConfigurer<B, U>, U>'} </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> public DaoAuthenticationConfigurer(U userDetailsService) </span>\r\n                                            <span className=\"mblock\">\r\n                                                super(userDetailsService);\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> DaoAuthenticationProvider [C] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> private static final String USER_NOT_FOUND_PASSWORD = \"userNotFoundPassword\"; </li>\r\n                                                <li> private PasswordEncoder passwordEncoder; </li>\r\n                                                <li> private volatile String userNotFoundEncodedPassword; </li>\r\n                                                <li> private UserDetailsService userDetailsService; </li>\r\n                                                <li> private UserDetailsPasswordService userDetailsPasswordService; </li>\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public DaoAuthenticationProvider() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> setPasswordEncoder(PasswordEncoderFactories.createDelegatingPasswordEncoder()); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected void additionalAuthenticationChecks(UserDetails userDetails, UsernamePasswordAuthenticationToken authentication) throws AuthenticationException </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'if (authentication.getCredentials() == null) { '} </li>\r\n                                                <li> {'\t\t\tthis.logger.debug(\"Failed to authenticate since no credentials provided\"); '} </li>\r\n                                                <li> {'\t\t\tthrow new BadCredentialsException(this.messages '} </li>\r\n                                                <li> {'\t\t\t\t\t.getMessage(\"AbstractUserDetailsAuthenticationProvider.badCredentials\", \"Bad credentials\")); '} </li>\r\n                                                <li> {'} '} </li>\r\n                                                <li> {'String presentedPassword = authentication.getCredentials().toString(); '} </li>\r\n                                                <li> {'if (!this.passwordEncoder.matches(presentedPassword, userDetails.getPassword())) { '} </li>\r\n                                                <li> {'    this.logger.debug(\"Failed to authenticate since password does not match stored value\"); '} </li>\r\n                                                <li> {'    throw new BadCredentialsException(this.messages '} </li>\r\n                                                <li> {'            .getMessage(\"AbstractUserDetailsAuthenticationProvider.badCredentials\", \"Bad credentials\")); '} </li>\r\n                                                <li> {'} '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected void doAfterPropertiesSet() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> Assert.notNull(this.userDetailsService, \"A UserDetailsService must be set\"); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected final UserDetails retrieveUser(String username,\r\n                                                UsernamePasswordAuthenticationToken authentication) throws AuthenticationException </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' prepareTimingAttackProtection(); '} </li>\r\n                                                <li> {' try { '} </li>\r\n                                                <li> {'     UserDetails loadedUser = this.getUserDetailsService().loadUserByUsername(username); '} </li>\r\n                                                <li> {'     if (loadedUser == null) { '} </li>\r\n                                                <li> {'         throw new InternalAuthenticationServiceException( '} </li>\r\n                                                <li> {'                 \"UserDetailsService returned null, which is an interface contract violation\"); '} </li>\r\n                                                <li> {'     } '} </li>\r\n                                                <li> {'     return loadedUser; '} </li>\r\n                                                <li> {' } '} </li>\r\n                                                <li> {' catch (UsernameNotFoundException ex) { '} </li>\r\n                                                <li> {'     mitigateAgainstTimingAttack(authentication); '} </li>\r\n                                                <li> {'     throw ex; '} </li>\r\n                                                <li> {' } '} </li>\r\n                                                <li> {' catch (InternalAuthenticationServiceException ex) { '} </li>\r\n                                                <li> {'     throw ex; '} </li>\r\n                                                <li> {' } '} </li>\r\n                                                <li> {' catch (Exception ex) { '} </li>\r\n                                                <li> {'     throw new InternalAuthenticationServiceException(ex.getMessage(), ex); '} </li>\r\n                                                <li> {' } '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected Authentication createSuccessAuthentication\r\n                                                (Object principal, Authentication authentication,UserDetails user) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'boolean upgradeEncoding = this.userDetailsPasswordService != null '} </li>\r\n                                                <li> {'        && this.passwordEncoder.upgradeEncoding(user.getPassword()); '} </li>\r\n                                                <li> {'if (upgradeEncoding) { '} </li>\r\n                                                <li> {'    String presentedPassword = authentication.getCredentials().toString(); '} </li>\r\n                                                <li> {'    String newPassword = this.passwordEncoder.encode(presentedPassword); '} </li>\r\n                                                <li> {'    user = this.userDetailsPasswordService.updatePassword(user, newPassword); '} </li>\r\n                                                <li> {'} '} </li>\r\n                                                <li> {'return super.createSuccessAuthentication(principal, authentication, user); '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private void prepareTimingAttackProtection() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> if (this.userNotFoundEncodedPassword == null) </li>\r\n                                                <li> this.userNotFoundEncodedPassword = this.passwordEncoder.encode(USER_NOT_FOUND_PASSWORD); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private void mitigateAgainstTimingAttack(UsernamePasswordAuthenticationToken authentication) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' if (authentication.getCredentials() != null) { '} </li>\r\n                                                <li> {'     String presentedPassword = authentication.getCredentials().toString(); '} </li>\r\n                                                <li> {'     this.passwordEncoder.matches(presentedPassword, this.userNotFoundEncodedPassword); '} </li>\r\n                                                <li> {' } '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void setPasswordEncoder(PasswordEncoder passwordEncoder) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> \t\tAssert.notNull(passwordEncoder, \"passwordEncoder cannot be null\"); </li>\r\n                                                <li> \t\tthis.passwordEncoder = passwordEncoder; </li>\r\n                                                <li> \t\tthis.userNotFoundEncodedPassword = null; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected PasswordEncoder getPasswordEncoder() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.passwordEncoder; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void setUserDetailsService(UserDetailsService userDetailsService) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.userDetailsService = userDetailsService; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> protected UserDetailsService getUserDetailsService() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.userDetailsService; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void setUserDetailsPasswordService(UserDetailsPasswordService userDetailsPasswordService) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.userDetailsPasswordService = userDetailsPasswordService; </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> DecisionVoters </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> GrantedAuthority [I] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> extends Serializable </small>\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> String getAuthority(); </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> LogoutSuccessHandler </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> ProviderManager [C] </summary>\r\n                                        <small> AuthenticationManager의 구현체로 사용 </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> 스프링에서 인증을 담당하는 클래스 </small> </li>\r\n                                            <li> <small> 직접 구현할 필요없이 시큐리티가 등록하고 관리 </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> PasswordEncoder [I] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small>  </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> String encode(CharSequence rawPassword);  </li>\r\n                                                <li> boolean matches(CharSequence rawPassword, String encodedPassword);  </li>\r\n                                                <span className=\"sstitle\"> default boolean upgradeEncoding(String encodedPassword) </span>\r\n                                                <span className=\"sblock\">\r\n                                                    <li> return false; </li>\r\n                                                </span>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> ProviderManagerBuilder{\"<B extends ProviderManagerBuilder<B>>\"} [I] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> extends SecurityBuilder{\"<AuthenticationManager>\"}  </small> </li>\r\n                                            <span className=\"sstitle\">  B authenticationProvider(AuthenticationProvider authenticationProvider); </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> Principal [I]  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> public boolean equals(Object another); </span>\r\n                                            <span className=\"sstitle\"> public String toString(); </span>\r\n                                            <span className=\"sstitle\"> public int hashCode(); </span>\r\n                                            <span className=\"sstitle\"> public String getName(); </span>\r\n                                            <span className=\"sstitle\"> public default boolean implies(Subject subject) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> if (subject == null) return false; </li>\r\n                                                <li> return subject.getPrincipals().contains(this); </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> RequestCache  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  RoleVoter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  Serializable </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> 아무것도 정의 되있지 않음.. </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> {'SecurityConfigurer<O, B extends SecurityBuilder<O>>'} [I] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small>  </small> </li>\r\n                                            <span className=\"sstitle\"> void init(B builder) throws Exception; </span>\r\n                                            <span className=\"sstitle\"> void configure(B builder) throws Exception; </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> SecurityConfigurerAdapter{'<O, B extends SecurityBuilder<O>>'} [AC] </summary>\r\n                                        <small> SecurityConfigurer{'<O, B>'} </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> private B securityBuilder; </li>\r\n                                                <li> private CompositeObjectPostProcessor objectPostProcessor = new CompositeObjectPostProcessor(); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void init(B builder) throws Exception </span>\r\n                                            <span className=\"sstitle\"> public void configure(B builder) throws Exception </span>\r\n                                            <span className=\"sstitle\"> public B and() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return getBuilder(); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected final B getBuilder() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> Assert.state(this.securityBuilder != null, \"securityBuilder cannot be null\"); </li>\r\n                                                <li> return this.securityBuilder; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected {'<T>'} T postProcess(T object) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return (T) this.objectPostProcessor.postProcess(object);  </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void addObjectPostProcessor(ObjectPostProcessor{'<?>'} objectPostProcessor) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.objectPostProcessor.addObjectPostProcessor(objectPostProcessor); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void setBuilder(B builder) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.securityBuilder = builder; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> private static final class CompositeObjectPostProcessor </span>\r\n                                            <small> implements ObjectPostProcessor{'<Object>'} </small>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'private List<ObjectPostProcessor<?>> postProcessors = new ArrayList<>();'} </li>\r\n                                                <li> {'\t@Override '} </li>\r\n                                                <li> {'\t\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) '} </li>\r\n                                                <li> {'\t\tpublic Object postProcess(Object object) { '} </li>\r\n                                                <li> {'\t\t\tfor (ObjectPostProcessor opp : this.postProcessors) { '} </li>\r\n                                                <li> {'\t\t\t\tClass<?> oppClass = opp.getClass(); '} </li>\r\n                                                <li> {'\t\t\t\tClass<?> oppType = GenericTypeResolver.resolveTypeArgument(oppClass, ObjectPostProcessor.class); '} </li>\r\n                                                <li> {'\t\t\t\tif (oppType == null || oppType.isAssignableFrom(object.getClass())) { '} </li>\r\n                                                <li> {'\t\t\t\t\tobject = opp.postProcess(object); '} </li>\r\n                                                <li> {'\t\t\t\t} '} </li>\r\n                                                <li> {'\t\t\t} '} </li>\r\n                                                <li> {'\t\t\treturn object; '} </li>\r\n                                                <li> {'\t\t} '} </li>\r\n                                                <li> {'\t\tprivate boolean addObjectPostProcessor(ObjectPostProcessor<?> objectPostProcessor) { '} </li>\r\n                                                <li> {'\t\t\tboolean result = this.postProcessors.add(objectPostProcessor); '} </li>\r\n                                                <li> {'\t\t\tthis.postProcessors.sort(AnnotationAwareOrderComparator.INSTANCE); '} </li>\r\n                                                <li> {'\t\t\treturn result; '} </li>\r\n                                                <li> {'\t\t} '} </li>\r\n                                                <li> {'\t} '} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> SecurityContextRepository </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> SecurityContextHolder [C] <small> Security Context를 clear,set,get,createEmpty + 기타기능 </small> </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> public static final String MODE_THREADLOCAL = \"MODE_THREADLOCAL\"; </li>\r\n                                                <li> public static final String MODE_INHERITABLETHREADLOCAL = \"MODE_INHERITABLETHREADLOCAL\"; </li>\r\n                                                <li> public static final String MODE_GLOBAL = \"MODE_GLOBAL\"; </li>\r\n                                                <li> public static final String SYSTEM_PROPERTY = \"spring.security.strategy\"; </li>\r\n                                                <li> private static String strategyName = System.getProperty(SYSTEM_PROPERTY); </li>\r\n                                                <li> private static SecurityContextHolderStrategy strategy; </li>\r\n                                                <li> private static int initializeCount = 0; </li>\r\n                                                <li> {' static {initialize();}  '} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> private static void initialize() </span>\r\n                                            <li> {'if (!StringUtils.hasText(strategyName)) { '} </li>\r\n                                            <li> {'\t\t\tstrategyName = MODE_THREADLOCAL; } '} </li>\r\n                                            <li> {'\t\tif (strategyName.equals(MODE_THREADLOCAL)) { '} </li>\r\n                                            <li> {'\t\t\tstrategy = new ThreadLocalSecurityContextHolderStrategy(); } '} </li>\r\n                                            <li> {'\t\telse if (strategyName.equals(MODE_INHERITABLETHREADLOCAL)) { '} </li>\r\n                                            <li> {'\t\t\tstrategy = new InheritableThreadLocalSecurityContextHolderStrategy(); } '} </li>\r\n                                            <li> {'\t\telse if (strategyName.equals(MODE_GLOBAL)) { '} </li>\r\n                                            <li> {'\t\t\tstrategy = new GlobalSecurityContextHolderStrategy(); } '} </li>\r\n                                            <li> {'\t\telse { '} </li>\r\n                                            <li> {'\t\t\ttry { '} </li>\r\n                                            <li> {'\t\t\t\tClass<?> clazz = Class.forName(strategyName); '} </li>\r\n                                            <li> {'\t\t\t\tConstructor<?> customStrategy = clazz.getConstructor(); '} </li>\r\n                                            <li> {'\t\t\t\tstrategy = (SecurityContextHolderStrategy) customStrategy.newInstance(); } '} </li>\r\n                                            <li> {'\t\t\tcatch (Exception ex) { '} </li>\r\n                                            <li> {'\t\t\t\tReflectionUtils.handleReflectionException(ex); } '} </li>\r\n                                            <li> {'\t\t} '} </li>\r\n                                            <li> {'\t\tinitializeCount++; '} </li>\r\n                                            <span className=\"sstitle\"> public static void clearContext() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> strategy.clearContext(); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public static SecurityContext getContext() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return strategy.getContext(); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public static int getInitializeCount() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return initializeCount; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public static void setContext(SecurityContext context) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> strategy.setContext(context); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public static void setStrategyName(String strategyName) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> SecurityContextHolder.strategyName = strategyName; </li>\r\n                                                <li> initialize(); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public static SecurityContextHolderStrategy getContextHolderStrategy() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return strategy; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public static SecurityContext createEmptyContext() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return strategy.createEmptyContext(); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public String toString() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return \"SecurityContextHolder[strategy='\" + strategyName + \"'; initializeCount=\" + initializeCount + \"]\"; </li>\r\n                                            </span>\r\n\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> SecurityContext [I] <small> Authentication 객체를 보관하거나 꺼내는 역할 </small> </summary>\r\n                                        <small> extends Serializable </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small>  </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                            <span className=\"mblcok\">\r\n                                                <li> Authentication getAuthentication(); </li>\r\n                                                <li> void setAuthentication(Authentication authentication); </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> SecurityContextHolderStrategy [I]  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> void clearContext();  </li>\r\n                                                <li> SecurityContext getContext();  </li>\r\n                                                <li> void setContext(SecurityContext context);  </li>\r\n                                                <li> SecurityContext createEmptyContext();  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  SecurityMetadataSource </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> SessionAuthenticationStrategy  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  SessionRegistry </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  SecurityBuilder{\"<O>\"} [I] </summary>\r\n                                        <li> <small> 개체는 빌드 하려는 목적을 가지고 있고?? , 반환값은 개체 or null을 반환  </small> </li>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> O build() throws Exception; </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> UserDetailService [I] <small> CustomUserService를 만들어서 사용 </small> </summary>\r\n                                        {/* <li> <small> 인증 방식(In-memory,jdbc 등)을 커스텀으로 코드를 작성해서 사용  </small> </li> */}\r\n                                        <li> <small> 유저의 정보를 불러오기 위해 구현하는 인터페이스  </small> </li>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> UserDetails loadUserByUsername(String username) throws UsernameNotFoundException; </span>\r\n                                            <small> 유저의 정보를 불러와서 UserDetails로 리턴 </small>\r\n                                        </span>\r\n\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> UserDetails [I] <small> 이름,비번 등 사용자 정보를 저장하는 기능 </small> </summary>\r\n                                        <small> extends Serializable </small>\r\n                                        <li> <small> </small> </li>\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> {'Collection<? extends GrantedAuthority> getAuthorities(); '} </span>\r\n                                            <small> 계정의 권한 목록 리턴 </small>\r\n                                            <span className=\"sstitle\"> {'String getPassword(); '} </span>\r\n                                            <small> 계정의 비번 리턴 </small>\r\n                                            <span className=\"sstitle\"> {'String getUsername(); '} </span>\r\n                                            <small> 계정의 PK값 리턴 , name파라미터를 넘겨줄 필요 없음, 이메일은 SSO서버에서 중복되어 사용자제 </small>\r\n                                            <span className=\"sstitle\"> {'boolean isAccountNonExpired(); '} </span>\r\n                                            <small> 계정의 만료 여부 리턴</small>\r\n                                            <span className=\"sstitle\"> {'boolean isAccountNonLocked(); '} </span>\r\n                                            <small> 계정의 잠김 여부 리턴</small>\r\n                                            <span className=\"sstitle\"> {'boolean isCredentialsNonExpired(); '} </span>\r\n                                            <small> 계정의 비번 만료 여부 리턴</small>\r\n                                            <span className=\"sstitle\"> {'boolean isEnabled(); '} </span>\r\n                                            <small> 계정의 활성화 여부 리턴</small>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> UserDetailsAwareConfigurer{'<B extends ProviderManagerBuilder<B>, U extends UserDetailsService>'} [AC]  </summary>\r\n                                        <small>  extends SecurityConfigurerAdapter{'<AuthenticationManager, B>'} </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> public abstract U getUserDetailsService(); </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> UsernamePasswordAuthenticationToken [C] <small> 인증용 객체, 로그인시 유저가 입력한 내용을 가지고 있음 </small> </summary>\r\n                                        <small> extends AbstractAuthenticationToken </small> <br />\r\n                                        <small>  </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small>  </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> private static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID; </li>\r\n                                                <li> private final Object principal; </li>\r\n                                                <li> private Object credentials; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public UsernamePasswordAuthenticationToken(Object principal, Object credentials) </span>\r\n                                            <small> 인증 완료 전의 객체를 생성 </small>\r\n                                            <span className=\"mblock\">\r\n                                                <li>  super(null); </li>\r\n                                                <li>  this.principal = principal; </li>\r\n                                                <li>  this.credentials = credentials; </li>\r\n                                                <li>  setAuthenticated(false); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> {'public UsernamePasswordAuthenticationToken(Object principal, Object credentials,'}\r\n                                                {'Collection<? extends GrantedAuthority> authorities) '} </span>\r\n                                            <small> 인증 완료 후의 객체를 생성 </small>\r\n                                            <span className=\"mblock\">\r\n                                                <li> super(authorities); </li>\r\n                                                <li> this.principal = principal; </li>\r\n                                                <li> this.credentials = credentials; </li>\r\n                                                <li> super.setAuthenticated(true); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public Object getCredentials() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.credentials; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public Object getPrincipal() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.principal; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> Assert.isTrue(!isAuthenticated,\"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead\");  </li>\r\n                                                <li> super.setAuthenticated(false); </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> public void eraseCredentials() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> super.eraseCredentials(); </li>\r\n                                                <li> this.credentials = null; </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> WebSecurityConfigurerAdapter [AC] </summary>\r\n                                        <small>  </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> implements WebSecurityConfigurer{\"<WebSecurity>\"} </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> private final Log logger = LogFactory.getLog(WebSecurityConfigurerAdapter.class); </li>\r\n                                                <li> private ApplicationContext context; </li>\r\n                                                <li> private ContentNegotiationStrategy contentNegotiationStrategy = new HeaderContentNegotiationStrategy(); </li>\r\n                                                <li> private ObjectPostProcessor{'<Object>'} objectPostProcessor = new ObjectPostProcessor{'<Object>'}()\r\n                                                    <span className=\"sblock\">\r\n                                                        {'{'}  @Override {'public <T> T postProcess(T object) {'}\r\n                                                        throw new IllegalStateException(ObjectPostProcessor.class.getName()\r\n                                                        + \" is a required bean. Ensure you have used @EnableWebSecurity and @Configuration\"); {'}'} {'}'}\r\n                                                    </span>\r\n                                                </li>\r\n                                                <li> private AuthenticationConfiguration authenticationConfiguration; </li>\r\n                                                <li> private AuthenticationManagerBuilder authenticationBuilder; </li>\r\n                                                <li> private AuthenticationManagerBuilder localConfigureAuthenticationBldr; </li>\r\n                                                <li> private boolean disableLocalConfigureAuthenticationBldr; </li>\r\n                                                <li> private boolean authenticationManagerInitialized; </li>\r\n                                                <li> private AuthenticationManager authenticationManager; </li>\r\n                                                <li> private AuthenticationTrustResolver trustResolver = new AuthenticationTrustResolverImpl(); </li>\r\n                                                <li> private HttpSecurity http; </li>\r\n                                                <li> private boolean disableDefaults; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected WebSecurityConfigurerAdapter() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this(false); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected WebSecurityConfigurerAdapter(boolean disableDefaults) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.disableDefaults = disableDefaults; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected void configure(AuthenticationManagerBuilder auth) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.disableLocalConfigureAuthenticationBldr = true; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected final HttpSecurity getHttp() throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' if (this.http != null) { return this.http; } '} </li>\r\n                                                <li> {' AuthenticationEventPublisher eventPublisher = getAuthenticationEventPublisher(); '} </li>\r\n                                                <li> {' this.localConfigureAuthenticationBldr.authenticationEventPublisher(eventPublisher); '} </li>\r\n                                                <li> {' AuthenticationManager authenticationManager = authenticationManager(); '} </li>\r\n                                                <li> {' this.authenticationBuilder.parentAuthenticationManager(authenticationManager); '} </li>\r\n                                                <li> {' Map&lt;;Class&lt;;?&gt;, Object&gt; sharedObjects = createSharedObjects(); '} </li>\r\n                                                <li> {' this.http = new HttpSecurity(this.objectPostProcessor, this.authenticationBuilder, sharedObjects); '} </li>\r\n                                                <li> {' if (!this.disableDefaults) { '} </li>\r\n                                                <li> {'     applyDefaultConfiguration(this.http); '} </li>\r\n                                                <li> {'     ClassLoader classLoader = this.context.getClassLoader(); '} </li>\r\n                                                <li> {'     List&lt;;AbstractHttpConfigurer&gt; defaultHttpConfigurers = SpringFactoriesLoader '} </li>\r\n                                                <li> {'             .loadFactories(AbstractHttpConfigurer.class, classLoader); '} </li>\r\n                                                <li> {'     for (AbstractHttpConfigurer configurer : defaultHttpConfigurers) { this.http.apply(configurer); } '} </li>\r\n                                                <li> {' } '} </li>\r\n                                                <li> {' configure(this.http); '} </li>\r\n                                                <li> {' return this.http; '} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> private void applyDefaultConfiguration(HttpSecurity http) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> http.csrf(); </li>\r\n                                                <li> http.addFilter(new WebAsyncManagerIntegrationFilter()); </li>\r\n                                                <li> http.exceptionHandling(); </li>\r\n                                                <li> http.headers(); </li>\r\n                                                <li> http.sessionManagement(); </li>\r\n                                                <li> http.securityContext(); </li>\r\n                                                <li> http.requestCache(); </li>\r\n                                                <li> http.anonymous(); </li>\r\n                                                <li> http.servletApi(); </li>\r\n                                                <li> http.apply(new DefaultLoginPageConfigurer{'<>'}()); </li>\r\n                                                <li> http.logout(); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public AuthenticationManager authenticationManagerBean() throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return new AuthenticationManagerDelegator(this.authenticationBuilder, this.context); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected AuthenticationManager authenticationManager() throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' if (!this.authenticationManagerInitialized) { '} </li>\r\n                                                <li> {' \tconfigure(this.localConfigureAuthenticationBldr); '} </li>\r\n                                                <li> {' \tif (this.disableLocalConfigureAuthenticationBldr) {  '} </li>\r\n                                                <li> {'         this.authenticationManager = this.authenticationConfiguration.getAuthenticationManager();} '} </li>\r\n                                                <li> {' \telse { this.authenticationManager = this.localConfigureAuthenticationBldr.build(); } '} </li>\r\n                                                <li> {' \tthis.authenticationManagerInitialized = true; '} </li>\r\n                                                <li> {' } '} </li>\r\n                                                <li> {' return this.authenticationManager; '} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public UserDetailsService userDetailsServiceBean() throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> AuthenticationManagerBuilder globalAuthBuilder = this.context.getBean(AuthenticationManagerBuilder.class); </li>\r\n                                                <li> return new UserDetailsServiceDelegator(Arrays.asList(this.localConfigureAuthenticationBldr, globalAuthBuilder)); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected UserDetailsService userDetailsService() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> AuthenticationManagerBuilder globalAuthBuilder = this.context.getBean(AuthenticationManagerBuilder.class); </li>\r\n                                                <li> return new UserDetailsServiceDelegator(Arrays.asList(this.localConfigureAuthenticationBldr, globalAuthBuilder)); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void init(WebSecurity web) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> HttpSecurity http = getHttp(); </li>\r\n                                                <li> web.addSecurityFilterChainBuilder(http).postBuildAction(() -&gt; {'{'} </li>\r\n                                                <li> \tFilterSecurityInterceptor securityInterceptor = http.getSharedObject(FilterSecurityInterceptor.class); </li>\r\n                                                <li> \tweb.securityInterceptor(securityInterceptor); </li>\r\n                                                <li> {'}'}); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void configure(WebSecurity web) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected void configure(HttpSecurity http) throws Exception </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.logger.debug(\"Using default configure(HttpSecurity). \" </li>\r\n                                                <li> \t\t+ \"If subclassed this will potentially override subclass configure(HttpSecurity).\"); </li>\r\n                                                <li> http.authorizeRequests((requests) -&gt; requests.anyRequest().authenticated()); </li>\r\n                                                <li> http.formLogin(); </li>\r\n                                                <li> http.httpBasic(); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> protected final ApplicationContext getApplicationContext() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return this.context; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void setApplicationContext(ApplicationContext context) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'this.context = context;'} </li>\r\n                                                <li> {'ObjectPostProcessor<Object> objectPostProcessor = context.getBean(ObjectPostProcessor.class);'} </li>\r\n                                                <li> {'LazyPasswordEncoder passwordEncoder = new LazyPasswordEncoder(context);'} </li>\r\n                                                <li> {'this.authenticationBuilder = new DefaultPasswordEncoderAuthenticationManagerBuilder(objectPostProcessor,'} </li>\r\n                                                <li> {'\t\tpasswordEncoder);'} </li>\r\n                                                <li> {'this.localConfigureAuthenticationBldr = new DefaultPasswordEncoderAuthenticationManagerBuilder('} </li>\r\n                                                <li> {'\t\tobjectPostProcessor, passwordEncoder) {'} </li>\r\n                                                <li> {'\t@Override'} </li>\r\n                                                <li> {'\tpublic AuthenticationManagerBuilder eraseCredentials(boolean eraseCredentials) {'} </li>\r\n                                                <li> {'\t\tWebSecurityConfigurerAdapter.this.authenticationBuilder.eraseCredentials(eraseCredentials);'} </li>\r\n                                                <li> {'\t\treturn super.eraseCredentials(eraseCredentials);'} </li>\r\n                                                <li> {'\t}'} </li>\r\n                                                <li> {'\t@Override'} </li>\r\n                                                <li> {'\tpublic AuthenticationManagerBuilder authenticationEventPublisher('} </li>\r\n                                                <li> {'\t\t\tAuthenticationEventPublisher eventPublisher) {'} </li>\r\n                                                <li> {'\t\tWebSecurityConfigurerAdapter.this.authenticationBuilder.authenticationEventPublisher(eventPublisher);'} </li>\r\n                                                <li> {'\t\treturn super.authenticationEventPublisher(eventPublisher);'} </li>\r\n                                                <li> {'\t}'} </li>\r\n                                                <li> {'};'} </li>\r\n\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void setTrustResolver(AuthenticationTrustResolver trustResolver) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.trustResolver = trustResolver; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void setContentNegotationStrategy(ContentNegotiationStrategy contentNegotiationStrategy) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.contentNegotiationStrategy = contentNegotiationStrategy; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void setObjectPostProcessor(ObjectPostProcessor{'<Object>'} objectPostProcessor) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.objectPostProcessor = objectPostProcessor; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public void setAuthenticationConfiguration(AuthenticationConfiguration authenticationConfiguration) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.authenticationConfiguration = authenticationConfiguration; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> private AuthenticationEventPublisher getAuthenticationEventPublisher() </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'if (this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length > 0) {'} </li>\r\n                                                <li> {'\treturn this.context.getBean(AuthenticationEventPublisher.class);'} </li>\r\n                                                <li> {'}'} </li>\r\n                                                <li> {'return this.objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher());'} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> {'private Map<Class<?>, Object> createSharedObjects()'} </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' Map<Class<?>, Object> sharedObjects = new HashMap<>(); '} </li>\r\n                                                <li> {' sharedObjects.putAll(this.localConfigureAuthenticationBldr.getSharedObjects()); '} </li>\r\n                                                <li> {' sharedObjects.put(UserDetailsService.class, userDetailsService()); '} </li>\r\n                                                <li> {' sharedObjects.put(ApplicationContext.class, this.context); '} </li>\r\n                                                <li> {' sharedObjects.put(ContentNegotiationStrategy.class, this.contentNegotiationStrategy); '} </li>\r\n                                                <li> {' sharedObjects.put(AuthenticationTrustResolver.class, this.trustResolver); '} </li>\r\n                                                <li> {' return sharedObjects; '} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> static final class UserDetailsServiceDelegator implements UserDetailsService </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {' private List<AuthenticationManagerBuilder> delegateBuilders; '} </li>\r\n                                                <li> {' private UserDetailsService delegate; '} </li>\r\n                                                <li> {' private final Object delegateMonitor = new Object(); '} </li>\r\n                                                <li> {' UserDetailsServiceDelegator(List<AuthenticationManagerBuilder> delegateBuilders) { '} </li>\r\n                                                <li> {' \tAssert.isTrue(!delegateBuilders.contains(null), '} </li>\r\n                                                <li> {' \t\t\t() -> \"delegateBuilders cannot contain null values. Got \" + delegateBuilders); '} </li>\r\n                                                <li> {' \tthis.delegateBuilders = delegateBuilders; '} </li>\r\n                                                <li> {' } '} </li>\r\n                                                <li> {' @Override '} </li>\r\n                                                <li> {' public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException { '} </li>\r\n                                                <li> {' \tif (this.delegate != null) { '} </li>\r\n                                                <li> {' \t\treturn this.delegate.loadUserByUsername(username); '} </li>\r\n                                                <li> {' \t} '} </li>\r\n                                                <li> {' \tsynchronized (this.delegateMonitor) { '} </li>\r\n                                                <li> {' \t\tif (this.delegate == null) { '} </li>\r\n                                                <li> {' \t\t\tfor (AuthenticationManagerBuilder delegateBuilder : this.delegateBuilders) { '} </li>\r\n                                                <li> {' \t\t\t\tthis.delegate = delegateBuilder.getDefaultUserDetailsService(); '} </li>\r\n                                                <li> {' \t\t\t\tif (this.delegate != null) { '} </li>\r\n                                                <li> {' \t\t\t\t\tbreak; '} </li>\r\n                                                <li> {' \t\t\t\t} '} </li>\r\n                                                <li> {' \t\t\t} '} </li>\r\n                                                <li> {' \t\t\tif (this.delegate == null) { '} </li>\r\n                                                <li> {' \t\t\t\tthrow new IllegalStateException(\"UserDetailsService is required.\"); '} </li>\r\n                                                <li> {' \t\t\t} '} </li>\r\n                                                <li> {' \t\t\tthis.delegateBuilders = null; '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t} '} </li>\r\n                                                <li> {' \treturn this.delegate.loadUserByUsername(username); '} </li>\r\n                                                <li> {' } '} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> static final class AuthenticationManagerDelegator implements AuthenticationManager </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'private AuthenticationManagerBuilder delegateBuilder;'} </li>\r\n                                                <li> {'\t\tprivate AuthenticationManager delegate;'} </li>\r\n                                                <li> {'\t\tprivate final Object delegateMonitor = new Object();'} </li>\r\n                                                <li> {'\t\tprivate Set<String> beanNames;'} </li>\r\n                                                <li> {'\t\tAuthenticationManagerDelegator(AuthenticationManagerBuilder delegateBuilder, ApplicationContext context) {'} </li>\r\n                                                <li> {'\t\t\tAssert.notNull(delegateBuilder, \"delegateBuilder cannot be null\");'} </li>\r\n                                                <li> {'\t\t\tField parentAuthMgrField = ReflectionUtils.findField(AuthenticationManagerBuilder.class,'} </li>\r\n                                                <li> {'\t\t\t\t\t\"parentAuthenticationManager\");'} </li>\r\n                                                <li> {'\t\t\tReflectionUtils.makeAccessible(parentAuthMgrField);'} </li>\r\n                                                <li> {'\t\t\tthis.beanNames = getAuthenticationManagerBeanNames(context);'} </li>\r\n                                                <li> {'\t\t\tvalidateBeanCycle(ReflectionUtils.getField(parentAuthMgrField, delegateBuilder), this.beanNames);'} </li>\r\n                                                <li> {'\t\t\tthis.delegateBuilder = delegateBuilder;'} </li>\r\n                                                <li> {'\t\t}'} </li>\r\n                                                <li> {'\t\t@Override'} </li>\r\n                                                <li> {'\t\tpublic Authentication authenticate(Authentication authentication) throws AuthenticationException {'} </li>\r\n                                                <li> {'\t\t\tif (this.delegate != null) { return this.delegate.authenticate(authentication); }'} </li>\r\n                                                <li> {'\t\t\tsynchronized (this.delegateMonitor) {'} </li>\r\n                                                <li> {'\t\t\t\tif (this.delegate == null) {'} </li>\r\n                                                <li> {'\t\t\t\t\tthis.delegate = this.delegateBuilder.getObject();'} </li>\r\n                                                <li> {'\t\t\t\t\tthis.delegateBuilder = null; } }'} </li>\r\n                                                <li> {'\t\t\treturn this.delegate.authenticate(authentication);'} </li>\r\n                                                <li> {'\t\t}'} </li>\r\n                                                <li> {'\t\tprivate static Set<String> getAuthenticationManagerBeanNames(ApplicationContext applicationContext) {'} </li>\r\n                                                <li> {'\t\t\tString[] beanNamesForType = BeanFactoryUtils.beanNamesForTypeIncludingAncestors('} </li>\r\n                                                <li> {'                applicationContext, AuthenticationManager.class);'} </li>\r\n                                                <li> {'\t\t\treturn new HashSet<>(Arrays.asList(beanNamesForType)); '} </li>\r\n                                                <li> {'        }'} </li>\r\n                                                <li> {'\t\tprivate static void validateBeanCycle(Object auth, Set<String> beanNames) {'} </li>\r\n                                                <li> {'\t\t\tif (auth == null || beanNames.isEmpty() || !(auth instanceof Advised)) { return; }'} </li>\r\n                                                <li> {'\t\t\tTargetSource targetSource = ((Advised) auth).getTargetSource();'} </li>\r\n                                                <li> {'\t\t\tif (!(targetSource instanceof LazyInitTargetSource)) { return; }'} </li>\r\n                                                <li> {'\t\t\tLazyInitTargetSource lits = (LazyInitTargetSource) targetSource;'} </li>\r\n                                                <li> {'\t\t\tif (beanNames.contains(lits.getTargetBeanName())) {'} </li>\r\n                                                <li> {'\t\t\t\tthrow new FatalBeanException( \"A dependency cycle was detected when trying to resolve the AuthenticationManager. \"'} </li>\r\n                                                <li> {'                + \"Please ensure you have configured authentication.\"); }'} </li>\r\n                                                <li> {'\t\t}'} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> static class DefaultPasswordEncoderAuthenticationManagerBuilder extends AuthenticationManagerBuilder </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'         private PasswordEncoder defaultPasswordEncoder; '} </li>\r\n                                                <li> {' \t\tDefaultPasswordEncoderAuthenticationManagerBuilder(ObjectPostProcessor<Object> objectPostProcessor, '} </li>\r\n                                                <li> {' \t\t\t\tPasswordEncoder defaultPasswordEncoder) { '} </li>\r\n                                                <li> {' \t\t\tsuper(objectPostProcessor); '} </li>\r\n                                                <li> {' \t\t\tthis.defaultPasswordEncoder = defaultPasswordEncoder; '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li>  \t\t@Override  </li>\r\n                                                <li>  \t\tpublic InMemoryUserDetailsManagerConfigurer{'<AuthenticationManagerBuilder>'} inMemoryAuthentication()  </li>\r\n                                                <li>  \t\t\t\tthrows Exception  {'{'} </li>\r\n                                                <li>  \t\t\treturn super.inMemoryAuthentication().passwordEncoder(this.defaultPasswordEncoder);  </li>\r\n                                                <li>  \t\t{'}'}  </li>\r\n                                                <li>  \t\t@Override </li>\r\n                                                <li>  \t\tpublic JdbcUserDetailsManagerConfigurer{'<AuthenticationManagerBuilder>'} jdbcAuthentication() throws Exception  {'{'} </li>\r\n                                                <li>  \t\t\treturn super.jdbcAuthentication().passwordEncoder(this.defaultPasswordEncoder); </li>\r\n                                                <li>  \t\t{'}'}  </li>\r\n                                                <li>  \t\t@Override  </li>\r\n                                                <li>  \t\tpublic {'<T extends UserDetailsService>'} DaoAuthenticationConfigurer{'<AuthenticationManagerBuilder, T>'} userDetailsService(  </li>\r\n                                                <li>  \t\t\t\tT userDetailsService) throws Exception {'{'}  </li>\r\n                                                <li>  \t\t\treturn super.userDetailsService(userDetailsService).passwordEncoder(this.defaultPasswordEncoder);  </li>\r\n                                                <li>  \t\t{'}'}  </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> static class LazyPasswordEncoder implements PasswordEncoder </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'         private ApplicationContext applicationContext; '} </li>\r\n                                                <li> {' \t\tprivate PasswordEncoder passwordEncoder; '} </li>\r\n                                                <li> {' \t\tLazyPasswordEncoder(ApplicationContext applicationContext) { '} </li>\r\n                                                <li> {' \t\t\tthis.applicationContext = applicationContext; '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\t@Override '} </li>\r\n                                                <li> {' \t\tpublic String encode(CharSequence rawPassword) { '} </li>\r\n                                                <li> {' \t\t\treturn getPasswordEncoder().encode(rawPassword); '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\t@Override '} </li>\r\n                                                <li> {' \t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) { '} </li>\r\n                                                <li> {' \t\t\treturn getPasswordEncoder().matches(rawPassword, encodedPassword); '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\t@Override '} </li>\r\n                                                <li> {' \t\tpublic boolean upgradeEncoding(String encodedPassword) { '} </li>\r\n                                                <li> {' \t\t\treturn getPasswordEncoder().upgradeEncoding(encodedPassword); '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\tprivate PasswordEncoder getPasswordEncoder() { '} </li>\r\n                                                <li> {' \t\t\tif (this.passwordEncoder != null) { '} </li>\r\n                                                <li> {' \t\t\t\treturn this.passwordEncoder; '} </li>\r\n                                                <li> {' \t\t\t} '} </li>\r\n                                                <li> {' \t\t\tPasswordEncoder passwordEncoder = getBeanOrNull(PasswordEncoder.class); '} </li>\r\n                                                <li> {' \t\t\tif (passwordEncoder == null) { '} </li>\r\n                                                <li> {' \t\t\t\tpasswordEncoder = PasswordEncoderFactories.createDelegatingPasswordEncoder(); '} </li>\r\n                                                <li> {' \t\t\t} '} </li>\r\n                                                <li> {' \t\t\tthis.passwordEncoder = passwordEncoder; '} </li>\r\n                                                <li> {' \t\t\treturn passwordEncoder; '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\tprivate <T> T getBeanOrNull(Class<T> type) { '} </li>\r\n                                                <li> {' \t\t\ttry { '} </li>\r\n                                                <li> {' \t\t\t\treturn this.applicationContext.getBean(type); '} </li>\r\n                                                <li> {' \t\t\t} '} </li>\r\n                                                <li> {' \t\t\tcatch (NoSuchBeanDefinitionException ex) { '} </li>\r\n                                                <li> {' \t\t\t\treturn null; '} </li>\r\n                                                <li> {' \t\t\t} '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                                <li> {' \t\t@Override '} </li>\r\n                                                <li> {' \t\tpublic String toString() { '} </li>\r\n                                                <li> {' \t\t\treturn getPasswordEncoder().toString(); '} </li>\r\n                                                <li> {' \t\t} '} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> CustomWebSecurityConfig [Custom,C] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> @EnableWebSecurity , @Configuration </small> </li>\r\n                                            <li> <small> extedns WebSecurityConfigureAdapter </small> </li>\r\n                                            <li> <small>  </small> </li>\r\n                                            <span className=\"sstitle\"> @Bean public BCryptPasswordEncoder bCryptPasswordEncoder </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li>  return new BCryptPasswordEncoder(); </li>\r\n                                                <small> 비번 인코딩을 사용하기 위해 정의 </small>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> @Overrride protected void configure(AuthenticationManagerBuilder auth) </span>\r\n                                            <small>  </small>\r\n                                            <span className=\"mblock\">\r\n                                                <li> super.configure(auth); <small> 기본으로 제공되는 인증 처리방식 </small> </li>\r\n                                                <li>  </li>\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> @Override public void configure(WebSecurity web) </span>\r\n                                            <small> spring security에서 인증을 제외 할 대상을 설정 </small>\r\n                                            <span className=\"mblock\">\r\n                                                <li> <small> css,js와 같은 자원들을 인증을 거치지 않고 사용할 수 있게 설정 </small> </li>\r\n                                                <li> <small> static 하위 폴더 접근 가능하게 설정 </small> </li>\r\n                                                <li>  web.ignoring().antMatchers(\"/css/**\",\"/js/**\",\"/img/**\",\"/lib/**\",\"/favicon/**\",\"/resources/**\") </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> @Override protected void configure(HttpSecurity http) </span>\r\n                                            <small> 시큐리티가 http로 처리할 csrf,인증,권한,경로 등등 설정 </small>\r\n                                            <small> super.configure(http); 를 사용하는 순간 시큐리티가 제공하는 로그인페이지가 사라짐 </small>\r\n                                            <span className=\"mblock\">\r\n                                                <li>  </li>\r\n                                                <li> http </li>\r\n                                                <li> .csrf().disable() , csrf(보안방법) 비활성화 , 사용하기 위해서는 front에서 csrf토큰을 같이 보내주어야 한다. </li>\r\n                                                <li> .authorizeRequests() , 아래에 작성하는 URL경로에는 권한이나 인증이 필요 </li>\r\n                                                <li> .antMatchers(\"/경로\").authenticated() , 인증된 사용자만 접근가능 </li>\r\n                                                <li> .antMatchers(\"/**\").permitAll() ,모든 경로 인증없이 허용 </li>\r\n                                                <li> .antMatchers(\"/경로\").hasRole(\"[GUEST,USER,MEMER,ADMIN]\") , 권한이 있어야 경로로 접속가능 </li>\r\n                                                <li> .antMatchers(\"/경로\").hasAnyRole(\"[GUEST,USER,MEMER,ADMIN]\") , 권한 중 1개를 가지고있어야 접속가능 </li>\r\n                                                <li> .antMatchers(\"/경로\").hasAuthority(\"ROLE_[GUEST,USER,MEMER,ADMIN]\") , 권한이 있어야 경로로 접속가능 </li>\r\n                                                <li> .antMatchers(\"/경로\").hasAnyAuthority(\"ROLE_[GUEST,USER,MEMER,ADMIN]\") , 권한 중 1개를 가지고있어야 접속가능 </li>\r\n                                                <li> .antMatchers(\"/경로\").access(\"hasRole('ADMIN')\") , SpEL 표현식 결과에 따라 접근 </li>\r\n                                                <li> .antMatchers(\"/경로\").hasIpAddress() , 특정 IP 주소를 가지는 사용자만 접근 할 수 있다. </li>\r\n                                                <li> .antMatcher(\"/경로\").denyAll , 모두 접근 불가 </li>\r\n                                                <li> .antMatcher(\"/경로\").isAnonymous() , 권한이 없는 사용자 접근 가능 </li>\r\n                                                <li> .antMatcher(\"/경로\").isRememberMe() , Remember-me기능으로 로그인한 사용자 접근 가능  </li>\r\n                                                <li> .antMatcher(\"/경로\").isAuthenticated() , 인증된 사용자만 접근 가능   </li>\r\n                                                <li> .antMatcher(\"/경로\").isFullyAuthenticated() , 익명의 사용자가 아니고 Remember-me로 로그인하지 않은 사용자 접근 가능 </li>\r\n                                                <li> .anyRequest().authenticated() , 이외에 다른 요청들은 모두 권한이 필요 </li>\r\n                                                <li> .and() </li>\r\n                                                <li> .formLogin() , 로그인 설정 </li>\r\n                                                <li> .loginPage(\"/경로\")  , 커스텀 로그인 페이지 경로와 로그인 인증 경로 등록</li>\r\n                                                <li> .loginProcessingUrl(\"/do경로\") , 로그인 처리할 경로, default /login  </li>\r\n                                                <li> .defaultSuccessUrl(\"/경로\") , 로그인이 성공할 경우 리다이렉트 주소 </li>\r\n                                                <li> .usernameParameter(\"파라미터명\") , 유저의 이름 파라미터   </li>\r\n                                                <li> .passwordParameter(\"파라미터명\") , 유저의 비번 파라미터   </li>\r\n                                                <li> .and() </li>\r\n                                                <li> .logout() , 로그아웃 설정 </li>\r\n                                                <li> .logoutUrl(\"/do경로\") , 로그아웃을 요청할 경로, 기본값은 (\"/logout\")? </li>\r\n                                                <li> .logoutSuccessUrl(\"/경로\") , 로그아웃이 성공할 경우 이동할 경로 , 기본값은 (\"/login?logout\")? </li>\r\n                                                <li> .invalidateHttpSession(true) , 로그아웃 성공 시 세션을 제거 </li>\r\n                                                <li> .and() </li>\r\n                                                <li> .exceptionHandling() </li>\r\n                                                <li> .accessDeniedPage(\"/경로\" 혹은 커스텀메소드) , 예외처리가 발생하면 이동할 경로?? </li>\r\n                                                <li> .authenticationEntryPoint(커스텀메소드) </li>\r\n                                                <li> .and() </li>\r\n                                                <li> .addFilter(커스텀필터메소드) , 필터 구현체를 등록하여 필터 처리 </li>\r\n                                                <li> .and() </li>\r\n                                                <li> .oauth2Login() <small> # Oauth 로그인 설정 </small> </li>\r\n                                                <li> .loginPage(\"/loginForm\") </li>\r\n                                                <li> .userInfoEndpoint() </li>\r\n                                                <li> .userService(customOAuth2UserService); <small> # Oauth 로그인 커스텀 서비스 처리 설정 </small> </li>\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  CustomWebMvcConfig [Custom, C] </summary>\r\n                                        <small> 받아온 URL 경로를 Controller에 맞게 맵핑 해주는 역할 </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> implements WebMvcConfigurer </small> </li>\r\n                                            <span className=\"sstitle\"> public void configureViewResolvers(ViewResolverRegistry registry) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <small> 아래 내용이 굳이 필요한지는 의문(없어도 잘됨) </small>\r\n                                                <li> ThymeleafViewResolver thymeleafViewResolver = new ThymeleafViewResolver(); </li>\r\n                                                <li> thymeleafViewResolver.setContentType(\"text/html; charset=UTF-8\"); </li>\r\n                                                <li> thymeleafViewResolver.setCharacterEncoding(\"UTF-8\"); </li>\r\n                                            </span>\r\n                                            {/* <span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> CustomUserEntity [Custom,C] </summary>\r\n                                        <li> <small> 스프링 시큐리티에서는 User 가 인증 정보와 권한을 가진 객체 , username,passsword는 시큐리티에서\r\n                                            사용하는 파라미터  </small> </li>\r\n                                        <li> <small> @Entity(name=\"엔티티명\") , Entity 클래스 지정, default값 = 클래스명 </small> </li>\r\n                                        <li> <small> @Table(name=\"테이블이름\") , entity가 맵핑될 테이블 이름 지정  </small> </li>\r\n                                        <li> <small> @Getter @Setter @AllargsConstructor @NoArgsConstructor @ToString </small> </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> <small> @Id , 식별자 역할을 하는 컬럼명과 맵핑 </small> </li>\r\n                                                <li> <small> @GeneratedValue(strategy = GenerationType.IDENTITY)  </small> </li>\r\n                                                <li> private Long혹은int id; </li>\r\n                                                <li> <small> @Column(length=20, nullable=false) </small> </li>\r\n                                                <li> private String username; </li>\r\n                                                <li> private String password;  </li>\r\n                                                <li> private String email; </li>\r\n                                                <li> private String role;  </li>\r\n                                                {/* <li>  </li> */}\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> CustomUserDetails [Custom,C] </summary>\r\n                                        <small> 시큐리티 인증을 위한 유저의 권한,인증을 설정 </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> implements UserDetails  </small> </li>\r\n                                            {/* <li> <small>   </small> </li> */}\r\n                                            <span className=\"sstitle\"> 멤버변수 </span>\r\n                                            <li> <small> private UserEntity userEntity; </small> </li>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> public CustomUserDetails(UserEntity userEntity) </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> this.userEntity = userEntity; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> @Override public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() </span>\r\n                                            <li> <small> 사용자의 권한을 콜렉션 형태로 반환 </small> </li>\r\n                                            <span className=\"mblock\">\r\n                                                <li> {'Collection<GrantedAuthority> authorities = new ArrayList<>();'} </li>\r\n                                                <li> {'        authorities.add(new GrantedAuthority() {'} </li>\r\n                                                <li> {'            @Override'} </li>\r\n                                                <li> {'            public String getAuthority() {'} </li>\r\n                                                <li> {'                return user.getRole();'} </li>\r\n                                                <li> {'            }'} </li>\r\n                                                <li> {'        });'} </li>\r\n                                                <li> {'        return authorities;'} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> @Override public String getUsername() </span>\r\n                                            <li> <small> 사용자의 id를 반환 </small> </li>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return userEntity.getUsername(); </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> @Override public String getPassword() </span>\r\n                                            <li> <small> 사용자의 패스워드를 반환 </small> </li>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return userEntity.getPassword() </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> @Override public boolean isAccountNonExpired() </span>\r\n                                            <li> <small> 계정 만료 여부 반환 </small> </li>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return true; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> @Override public boolean isAccountNonLocked() </span>\r\n                                            <li> <small> 계정 잠금 여부 반환 </small> </li>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return true; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> @Override public boolean isCredentialsNonExpired() </span>\r\n                                            <li> <small> 패스워드의 만료 여부 반환 </small> </li>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return true; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sstitle\"> @Override  public boolean isEnabled() </span>\r\n                                            <li> <small> 계정 사용 가능 여부 반환 </small> </li>\r\n                                            <span className=\"mblock\">\r\n                                                <li> return true; </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  CustomUserDetailsService [Custom,C] </summary>\r\n                                        <small>  UserDetails구현체를 리턴 , 인증을 처리하기 위해 작성  </small> <br />\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> @Service  </small> </li>\r\n                                            <li> <small> implements UserDetailService </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수  </span>\r\n                                            <li> @Autowired private UserRepository userRepository </li>\r\n                                            <span className=\"sstitle\"> public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> UserEntity userEntity = userRepository.findByUsername(username); </li>\r\n                                                <li> if(userEntity!=null) {'{ return new CustomUserDetails(userEntity) }'} </li>\r\n                                                <li> return null; </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  CustomUserRepository [Custom,I] </summary>\r\n                                        <small>  DB와 Entity를 이어주는 인터페이스 , 인터페이스를 @Autowired 해서 사용 </small>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> {' extends JpaRepository<User,Integer> '} </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> public UserEntity findByUsername(String username) </li>\r\n                                                <li> <small> 쿼리 메소드 : SELECT * FROM user_entity where username = 1?;  </small> </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  UserController [Custom,C] </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> @Controller </small> </li>\r\n                                            <span className=\"sstitle\"> 멤버 변수 </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> @Autowired BCryptPasswordEncoder bCryptPasswordEncoder; </li>\r\n                                                <li> @Autowired UserRepository userRepository; </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> @GetMapping(\"/URL경로\")</span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> public String 메소드명() {'{ return \"html파일명\"; }'} </li>\r\n                                            </span>\r\n                                            <span className=\"sstitle\"> @PostMapping(\"/URL경로\")</span>\r\n                                            <span className=\"mblock\">\r\n                                                <li> public String 메소드명(UserEntity userEntity) {'{ 서비스로직 + return \"html파일명\"; }'} </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>   </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>   </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                            <span className=\"mblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                </span>\r\n\r\n                                <span className=\"sstitle\"> <a name=\"Spring Security Filter\"> Spring Security Filter </a> </span>\r\n                                <span className=\"mblock\">\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 1. SecurityContextPersistence Filter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> SecurityContextRepository에서 SecurityContext를 로드하고 받아온 정보를 SecurityContext에 저장 </small>\r\n                                            <small> 관련 : SecurityContextRepository, SecurityContextHolder, SecurityContext, Authentication </small>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 2. LogoutFilter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> 로그아웃 URL로 지정된 URL 요청을 감시하고 매칭되는 요청이 있으면 주체(Principal)의 로그아웃처리를 한다. </small>\r\n                                            <small> 관련 : LogoutSuccessHandler </small>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 3. UsernamePasswordAuthenticationFilter  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> 사용자명,비밀번호로 이루어진 폼 기반 인증에 사용되는 URL 요청을 감시하고 사용자의 인증을 처리 </small> </li>\r\n                                            <li> <small> 관련 : AuthenticationManager, AuthenticationProvider, UserDetailService, UserDetails, GrantedAuthority </small> </li>\r\n                                            <li> <small> 관련 : AuthenticationSuccessHandler </small> </li>\r\n                                            <li> <small> 관련 : AuthenticationFailureHandler </small> </li>\r\n                                            <li> <small> 관련 : SessionAuthenticationStrategy,SeesionRegistry </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  4. DefaultLoginPageGeneratingFilter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> 폼기반 또는 OpenID 기반 인증에 사용하는 URL에 대한 요청을 감시하고 로그인 폼 기능을 수행하는데\r\n                                                필요한 HTML을 생성, 사용자가 별도 로그인 페이지를 구현하지 않았으면 스프링에서 기본적으로 설정한\r\n                                                로그인 페이지를 처리 </small> </li>\r\n                                            <li> <small> 관련 :  </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  5. BasicAuthenticationFilter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> HTTP 기본 (BASIC)인증 헤더를 감시하고 처리하여 SecurityContextHolder에 저장 </small>\r\n                                            <li> <small> 관련 : AuthenticationManager, AuthenticationProvider   </small> </li>\r\n                                            <li> <small> 관련 : AuthenticationEntryPoint   </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 6.RememberMeAuthenticationFilter  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> SecurityContext에 인증(Authentication) 객체가 있는지 확인하고 RememberMeServices를 구현한\r\n                                                객체의 요청이 있을 경우, RememberMe를 인증토큰으로 컨텍스트에 주입  </small>\r\n                                            <li> <small> 관련 : RequestCache </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>  RequestCacheAwareFilter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> 로그인 성공 이후 인증 요청에 의해 가로채어진 사용자의 원래 요청을 재구성하는데 사용,\r\n                                                인증 후 원래 Request 정보로 재구성하는 필터 </small>\r\n                                            <li> <small> 관련 :  </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 7. SecurityContextHolderAwareRequestFilter  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> HttpServletRequest를 HttpServletRequestWrapper를 상속하는\r\n                                                하위클래스(SecurityContextHolderAwareRequestWrapper)로 감싸서 필터 체인상 하단에 위치한 요청\r\n                                                프로세서에 추가 컨텍스트를 제공함 </small>\r\n                                            <li> <small> 관련 :  </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 8. AnonymousAuthenticationFilter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> 이 필터가 호출되는 시점까지 사용자가 인증을 받지 못했다면 요청 관련\r\n                                                인증 토큰에서 사용자가 익명 사용자로 판단, SecurityContextHolder에 인증 객체가\r\n                                                있는지 확인하고, 필요한 경우 Authentication 객체를 주입, Authentication 객체를 새로 생성함\r\n                                                (AnonymousAuthenticationToken) </small>\r\n                                            <li> <small> 관련 :  </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 9. SeeionManagementFilter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> 인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련한 모든 세션들이 트래킹되도록 도움,\r\n                                                요청 이후 인증된 사용자인지 확인하고, 인증된 사용자일 경우 SeesionAuthenticationStrategy를 호출하여\r\n                                                세션 고정 보호 메커니즘을 활성화 하거나 여러 동시 로그인을 확인하는 것과 같은 세션 관련 활동을 수행 </small>\r\n                                            <li> <small> 세션 변조 공격 방지(SessionId를 계속 변경), 최대 세션 수(동시 접속) 설정, 유효하지 않은 세션으로\r\n                                                접근 했을떄 URL 핸들링 </small> </li>\r\n                                            <li> <small> 관련 : SecurityContextRepository, SecurityContextHolder, SecurityContext, Authentication </small> </li>\r\n                                            <li> <small> 관련 : AuthenticationFilter </small> </li>\r\n                                            <li> <small> 관련 : SessionAuthenticationStrategy, SessionRegistry </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 10. ExceptionTranslationFilter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> 이 필터는 보호된 요청을 처리하는 동안 발생할 수 있는 기대한 예외의 기본 라우팅과 위임을 처리 </small>\r\n                                            <li> <small> 관련 : AuthenticationEntryPoint </small> </li>\r\n                                            <li> <small> 관련 : AccessDeniedHandler </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> 11. FilterSerucityInterceptor  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> 이 필터는 권한부여와 관련한 결정을 AccessDecisionManager에게 위임해 권한부여 결정\r\n                                                및 접근 제어 결정을 쉽게 만들어 줌, HTTP 리소스의 보안 처리를 수행 </small>\r\n                                            <li> <small> 관련 : AuthenticationManager, AuthenticationProvider </small> </li>\r\n                                            <li> <small> 관련 : AccessDecisionManager, DecisionVoters </small> </li>\r\n                                            <li> <small> 관련 : SecurityMetadataSource  </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> WebAsyncManagerIntegrationFilter  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> SpringSecurityContextHolder는 ThreadLocal기반(하나의 쓰레드에서 SecurityContext 공유하는 방식)\r\n                                                으로 동작하는데, 비동기(Async)와 관련된 기능을 쓸 때에도 SecurityContext를 사용할 수 있도록\r\n                                                만들어주는 필터 </small>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> HeaderWriterFilter  </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> 응답(Response)에 Security와 관련된 헤더 값을 설정해주는 필터 </small>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary> CsrfFilter </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <small> CSRF 공격을 방어하는 필터 </small>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>   </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>   </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary>   </summary>\r\n                                        <span className=\"sblock\">\r\n                                            <li> <small> </small> </li>\r\n                                            <span className=\"sstitle\"> </span>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                </span>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Term2;","import React from 'react';\r\n\r\nconst SpringSecurityExCode1 = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Spring Security ExCode1\">  Spring Security ExCode1 </a> </span>\r\n                    <p> <small> 스프링 시큐리티 loginform 기능만 테스트하는 예제 </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"spring initializr\"> spring initializr</a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/SpringSecurityStart.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"WebSecurityConfig\"> WebSecurityConfig </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/WebSecurityConfig.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserController\"> UserController </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/UserController.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"><a name=\"login\"> login </a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/login.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"loginsuccess\"> loginsuccess </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/loginsuccess.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.properties\"> application.properties </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/application.properties.png'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"view.login\"> view.login </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/view.login.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"view.loginsuccess\"> view.loginsuccess </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/view.loginsuccess.png'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode1;\r\n\r\n","import React from 'react';\r\n\r\nconst SpringSecurityExCode2 = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Spring Security ExCode1\">  Spring Security ExCode2 </a> </span>\r\n                    <p> <small> 스프링 시큐리티 기능보다는 mysql에 데이터를 저장하고 로그인을 해보는 테스트 그리고 thymeleaf로 화면에 간단한 유저 정보 보여주기 </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"spring initializr\"> spring initializr</a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/SpringSecurityStart.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"WebSecurityConfig\"> WebSecurityConfig </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/WebSecurityConfig.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserMvcConfig\"> UserMvcConfig </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserMvcConfig.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserController\"> UserController </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserController.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserEntity\"> UserEntity </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserEntity.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserDto\"> UserDto </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserDto.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"UserRepository\"> UserRepository </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserRepository.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"><a name=\"index\"> index </a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/index.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"><a name=\"login\"> login </a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/login.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"><a name=\"main\"> main </a>  </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/main.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"signup\"> signup </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/signup.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"application.yml\"> application.yml </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/application.yml.png'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> 결과 </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"view.login\"> view.login </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/view.login.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"view.signup\"> view.signup </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/view.signup.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"dosignup\"> dosignup </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/dosignup.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"mysql\"> mysql </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/mysql.png'} alt='' /> </p>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"dologin\"> dologin </a> </span>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/dologin.png'} alt='' /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode2;\r\n\r\n","import React from 'react';\r\n\r\nconst SpringSecurityExCode3 = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mtitle\"> Spring Security Excode3 </span>\r\n                        <small> JPA를 이용한 회원가입 , DB의 정보를 가지고 로그인을 해보고 인증과 권한 유무에 따라 특정 URL에 접속이 가능한지 불가능한지 테스트 하는 예제</small>\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"spring initializr\"> spring initializr </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/SpringSecurityStart.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"directory\"> directory </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/directory.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"application.yml\"> application.yml </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/application.yml.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"CustomUserDetails\"> CustomUserDetails </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/CustomUserDetails.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"CustomUserDetailsService\"> CustomUserDetailsService </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/CustomUserDetailsService.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"CustomWebMvcConfig\"> CustomWebMvcConfig </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/CustomWebMvcConfig.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"CustomWebSecurityConfig\"> CustomWebSecurityConfig </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/CustomWebSecurityConfig.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"UserController\"> UserController  </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/UserController.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"User\"> User </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/User.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"UserRepository\"> UserRepository </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/UserRepository.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"admin.html\"> admin.html </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/admin.html.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"index.html\"> index.html </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/index.html.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"joinForm.html\"> joinForm.html </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/joinForm.html.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"loginForm.html\"> loginForm.html </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/loginForm.html.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"member.html\"> member.html </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/member.html.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"user.html\"> user.html </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/user.html.png'} alt='' />\r\n                        </span>\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"result\"> result </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/result1.png'} alt='' />\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/result2.png'} alt='' />\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/result3.png'} alt='' />\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/result4.png'} alt='' />\r\n                        </span>\r\n                        {/*  */}\r\n                        {/* <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                            <img src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/.png'} alt='' />\r\n                        </span> */}\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SpringSecurityExCode3;","import React from 'react';\r\n\r\nconst SpringSecurityExCode4 = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ spring initializr <a name=\"spring initializr\" style={{ visibility: \"hidden\" }}> spring initializr </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ directory <a name=\"\" style={{ visibility: \"hidden\" }}> directory </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ application.yml <a name=\"\" style={{ visibility: \"hidden\" }}> application.yml </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ result <a name=\"result\" style={{ visibility: \"hidden\" }}> result </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringSecurityExCode4;","import React from 'react';\r\n\r\nconst JspServletBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSP커스텀태그\"> JSP 커스텀태그 </a> </span>\r\n                <a href=\"https://gangzzang.tistory.com/entry/JSP-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%83%9C%EA%B7%B8Custom-Tag\" target=\"_blank\"> 참고사이트</a>\r\n                <p> 1. WEB-INF - tags 폴더 - 태그파일명.tag파일 </p>\r\n                <p> 2. .tag에서 커스텀태그 정의 </p>\r\n                <span className=\"mblock\">\r\n                    <p> <i> &lt;%@tag language=\"java\" pageEncoding=\"UTF-8\" body-content=\"empty\"%&gt;</i> : 태그 파일의 정보 명시</p>\r\n                    <span className=\"sblock\">\r\n                        <p> <i> body-content = </i>  empty: 몸체가 없음 , scriptless: (스트립틀릿,스크립팅,선언문)은 올수없음, tagdependent: 태그를 몸체로 사용\r\n                            ,JSP: JSP에 들어가는 내용이면 모두 가능\r\n                        </p>\r\n                    </span>\r\n                    <p> <i> &lt;%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%&gt; </i>\r\n                        :  태그파일에서 사용할 태그라이브러리 명시</p>\r\n                    <p> <i> &lt;%@ tag import =\"java.util.Arraylist\" %&gt;</i> : 자바 클래스 임포트 </p>\r\n                    <p> <i> &lt;%@ attribute name=\"매개변수\"%&gt;</i> : JSP에서 매개변수로 받아와 {\"${매개변수}\"}와 같이 사용 </p>\r\n                    <p> 나머지는 HTML 코드 작성 </p>\r\n                </span>\r\n                <p> 3. JSP에서 커스텀태그 사용 </p>\r\n                <span className=\"mblock\">\r\n                    <p> &lt;%@ prefix=\"사용할커스텀태그이름 taglib tagdir=\"/WEB-INF/tags\"\"%&gt; </p>\r\n                    <p> &lt;사용할커스텀태그이름:태그파일명 매개변수=\"값\"/&gt; </p>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSP커스텀태그2 tld방식\">JSP커스텀태그2 tld방식 </a> </span>\r\n                <p> 1. WEB-INF - tld 폴더 - 태그파일명.tld파일 </p>\r\n                <p> 2. .tld에서 커스텀태그 참고 </p>\r\n                <span className=\"mblock\">\r\n                    <p> {\"<taglib>\"} </p>\r\n                    <p> {\"<tag>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<name>student</name>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<tag-class>패키지.TagHandler클래스</tag-class>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<body-content>scriptless</body-content>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<attribute>\"} </p>\r\n                    <p> &nbsp;&nbsp;&nbsp;&nbsp;{\"<name>border</name>\"} </p>\r\n                    <p> &nbsp;&nbsp;&nbsp;&nbsp;{\"<required>true</required>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"</attribute>\"} </p>\r\n                    <p> {\"</tag>\"} </p>\r\n                    <p> {\"/taglib\"} </p>\r\n                </span>\r\n                <p> 3. jsp에서 커스텀태그 사용 </p>\r\n                <span className=\"mblock\">\r\n                    <p> <i> &lt;taglib uri=\"/WEB-INF/tld/stutag.tld\" prefix=\"mytag\"%&gt; </i>\r\n                        :  태그파일에서 사용할 태그라이브러리 명시</p>\r\n                    <p> <i> &lt;mytag:student border=\"10\"&gt;학생 목록&lt;/mytag:student&gt;</i> : 자바 클래스 임포트 </p>\r\n                </span>\r\n                <p> 4. .java 정의 </p>\r\n                <p> 파일명은 TagHandler 처럼 사용하는 것 같다</p>\r\n                <span className=\"mblock\">\r\n                    <p> SimpleTagSupport 클래스 상속</p>\r\n                    <p> public void doTag()에 정의하고 사용</p>\r\n                    <p> 추가 사용방법은 나중에 인터넷 참고 </p>\r\n                </span>\r\n            </span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JspServletBasic;","import React from 'react';\r\n\r\nconst JspServletBulletinBoard = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"서블릿 실행하기\"> 1. MVC2 모델 설계 </a> </span>\r\n                <p> 게시판을 만들기 위하여 설계를 먼저 대략하고 진행 </p>\r\n                <span className=\"mblock\">\r\n                    {/* <p> <img src={process.env.PUBLIC_URL + '/img/Servlet.png'} /> </p> */}\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JspServletBulletinBoard;","const JspServletJstl = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {/* <a href=\"https://gangzzang.tistory.com/entry/JSP-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%83%9C%EA%B7%B8Custom-Tag\" target=\"_blank\"> 참고사이트</a> */}\r\n            <span className=\"lblock\">\r\n                <p> <a href=\"https://velog.io/@ye050425/JSP-JSTL-%EC%A0%95%EB%A6%AC\" target=\"_blank\">참고사이트</a> </p>\r\n                <p> JSTL: 커스텀태그 기술을 이용해서 일반적으로 많이 사용되는 기능들을 표준화한것 </p>\r\n                <p> 접근 가능한 내장 객체 4종류 : application,session,request,page </p>\r\n                <span className=\"mtitle\"> <a name=\"JSTL core tag\">  1. JSTL core tag </a> </span>\r\n                <p> &lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt; </p>\r\n                <p> 변수지원, URL관리, 흐름 제어 등</p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:out\">  1. JSTL c:out </a> </span>\r\n                    <p> HTML 화면에 출력 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:out value=\"${\"{\"}출력할 내용{\"}\"}\" &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:if\">  2. JSTL c:if </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:if test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &lt; /c:if &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:choose,when,otherwise\">  3. JSTL c:choose,when,otherwise </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:choose &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:when test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:when &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:when test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:when &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:otherwise&gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:otherwise &gt;</p>\r\n                        <p> &lt; /c:choose &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:foreach\">  4. JSTL c:foreach </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forEach var=\"i\" begin=\"1\" end=\"2\" step=\"1\" &gt;</p>\r\n                        <p> &lt; /c:forEach&gt;</p>\r\n                    </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forEach var=\"i\" items=\"${\"키\"}\" &gt;</p>\r\n                        <p> &lt; /c:forEach&gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:param\">  5. JSTL c:param </a> </span>\r\n                    <p> URL 매개변수를 추가 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:url value=\"/경로\" var=\"URL경로값(get방식으로출력)\" &gt;</p>\r\n                        <p> &lt; c:param name=\"키\" value=\"값\" / &gt;</p>\r\n                        <p> &lt; c:param name=\"키\" value=\"값\" / &gt;</p>\r\n                        <p> &lt; /c:url  &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:set\">  6. JSTL c:set </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:set var=\"키\" scope=\"session\" value=\"${\"{\"}값{\"}\"}\" /&gt;</p>\r\n                        <p> &lt; c:out value=\"${\"{\"}키{\"}\"}\" /&gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:import\">  7. JSTL c:import </a> </span>\r\n                    <p> jsp에 inlcude와 비슷 </p>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:forTokens\">  8. JSTL c:forTokens </a> </span>\r\n                    <p> 문자열을 토큰으로 분리하여 사용, foreach와 비슷 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forTokens items=\"문자열\" delims=\"구분문자\" var=\"키\"  &gt;</p>\r\n                        <p> &lt; /c:forTokens &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:catch\">  9. JSTL c:catch </a> </span>\r\n                    <p> 에러가 발생할 경우 예외처리 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:catch var=\"키\" &gt;</p>\r\n                        <p> &lt; /c:catch  &gt;</p>\r\n                        <p> c:if test=\"${\"{\"} 예외키 != null {\"}\"}\"</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:redirect\">  10. JSTL c:redirect </a> </span>\r\n                    <p> 리다이렉트 처리 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:redirect url=\"주소\" &gt;</p>\r\n                        <p> &lt; c:param name=\"\" &gt; 값 &lt; /c:param&gt; </p>\r\n                        <p> &lt; /c:redirect &gt;</p>\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL function tag\">  2. JSTL function tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL formatting tag \"> 3. JSTL formatting tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL XML tag \"> 4. JSTL XML tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL SQL tag\"> 5. JSTL SQL tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JspServletJstl;","import React from 'react';\r\n\r\nconst Blank = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"sblock\">\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </ >\r\n    );\r\n}\r\n\r\nexport default Blank;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst JspServletJdbc = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    <ul>\r\n                        <span className=\"mtitle\"> <a name=\"JDBC\">  JDBC </a> </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\"> JDBC 이클립스 초기 설정  </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <p>   1. jdbc 빌드 패스 추가 2.빨간줄 예외처리 </p>\r\n                                <li> String url = \"jdbc:oracle:thin:@localhost:1521/xepdb1\";</li>\r\n                                <li> String sql = \"SELECT * FROM MEMBER\";</li>\r\n                                <li> Class.forName(\"oracle.jdbc.driver.OracleDriver\"); //드라이버 클래스 호출</li>\r\n                                <li> Connection con = DriverManager.getConnection(url,\"TEST\",\"1234\"); //데이터 원본과 연결</li>\r\n                                <li> Statement st = con.createStatement(); /쿼리완성?, 질의문장을 담아 인자로 전달</li>\r\n                                <li> PreparedStatement st = con.prepareStatement(sql); //쿼리미완성? 위치값이 있을때? insert</li>\r\n                                <li> ResultSet cursor = st.executeQuery(sql); , st.Set자료형(콜럼,넣을값) , st.executeUpdate();</li>\r\n                                <li> //resultset은 그릇 , executeQuery : 래코드를 가리키는 커서</li>\r\n                                <li> //executeQuery는 selec에서 데이터타입 전달 , executeUpdate는 DML에서 int타입 전달 </li>\r\n                                <li> //오류가 날경우 SQL문법이 틀리거나, 패러미터 값이 틀리거나, 이클과SQL 인코딩 방식이 틀렸을떄</li>\r\n                                <li> while(cursor.next()) {'String id = cursor.getString(“ID”);'}</li>\r\n                                <li> {'System.out.println(id);'}</li>\r\n                                <li> try-resouce문으로 처리하면 안적어도됨</li>\r\n                                <li> rs.close();</li>\r\n                                <li> st.close();</li>\r\n                                <li> con.close();</li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Connection Pool\"> Connection Pool </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> context.xml </span>\r\n                                <li>&lt;Context&gt;</li>\r\n                                <li>  &nbsp;&nbsp;&lt;Resource auth=\"Container\" type=\"javax.sql.DataSource\"</li>\r\n                                <li>  &nbsp;&nbsp;name=\"jdbc/orcl\"</li>\r\n                                <li>  &nbsp;&nbsp;url=\"jdbc:oracle:thin@localhost:1521:xe\"</li>\r\n                                <li>  &nbsp;&nbsp;usernamte=\"coin666\"</li>\r\n                                <li>  &nbsp;&nbsp;password=\"1234\"</li>\r\n                                <li>  &nbsp;&nbsp;maxActive=\"10\" maxIdle=\"5\"/&gt;</li>\r\n                                <li>&lt;/Context&gt;</li>\r\n                                <span className=\"sstitle\"> web.xml </span>\r\n                                <li>&lt;resource-ref&gt; </li>\r\n                                <li>&nbsp;&nbsp;&lt;ref-ref-name&gt;jdbc/orcl&lt;/res-ref-name&gt; </li>\r\n                                <li>&nbsp;&nbsp;&lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt; </li>\r\n                                <li>&nbsp;&nbsp;&lt;ref-auth&gt;Container&lt;/res-auth&gt; </li>\r\n                                <li>&lt;/resource-ref&gt;</li>\r\n                                {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n                            </span>\r\n                        </span>\r\n\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span> */}\r\n\r\n\r\n\r\n\r\n                    </ul>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default JspServletJdbc;\r\n","import React from 'react';\r\n\r\nconst JspServletInformation = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Servlet이란\"> 1. Servlet이란</a> </span>\r\n                    <p> 서블릿은 자바언어를 사용하여 클라이언트의 요청을 동적으로 처리하는 자바 클래스입니다. </p>\r\n                    <p> 현재는 클라이언트의 요청을 받아 어떤 작업을 해야할지 관리해주는 Controller의 역할을 한다</p>\r\n                    <p> CGI(Common GateWay Interface) 웹서버와 프로그램사이에서 주고 받는 방법, 구현된 언어와 체계가 다르기\r\n                        때문에 맞추어주는 하나의 규약 , Servlet은 자바에서 사용되는 CGI이다 </p>\r\n                    <p> 기존에 CGI는 멀티프로세스 방식으로 다수의 요청처리에 부하가 심하지만 Servlet은 멀티쓰레드\r\n                        방식으로 부하가 덜하다.\r\n                    </p>\r\n                    <span className=\"mblock\">\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/Servlet.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Servlet Lifecycle\"> 2. Servlet Lifecycle</a> </span>\r\n                    <p> 클라이언트가 요청을 하게 되면 서블릿의 생성에서 소멸되기 까지의 과정이다. </p>\r\n                    <p> Init() , Service() , Destroy()  3가지의 메서드로 구성된다. </p>\r\n                    <p> Init() : Servlet객체가 처음 생성될 때 실행된다 </p>\r\n                    <p> Service() : 클라이언트가 Servlet을 요청할 때 마다 실행된다 </p>\r\n                    <p> Destroy() : 서블릿객체가 소멸될 떄는 더이상 사용하지 않을 떄라고 되어있는데\r\n                        서버가 종료되거나 기존에 있던 서블릿객체의 내용이 새로 갱신되었을 경우 </p>\r\n                    <span className=\"mblock\">\r\n                        <p> 1. 클라이언트 요청 </p>\r\n                        <p> 2. 웹 컨테이너에서 클라이언트가 요청한 서블릿 객체가 있는지 확인 </p>\r\n                        <p> 3. 없으면 서블릿 객체를 생성</p>\r\n                        <p> 4. 서블릿 객체에 service()메소드를 실행 , 일반적으로 사용할 때는 HttpServlet클래스를\r\n                            상속받기 떄문에 요청된 방식에 따라 doGet(), doPost() 메소드로 사용한다\r\n                        </p>\r\n                        <p> 5. 그 다음 DAO,DB,JSP 등 다른 과정을 거치고 사용자에게 응답한다.</p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/Servlet_Lifecycle.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"Servlet 장점\"> 3. Servlet 장점 </a> </span>\r\n                    <p> 1. 자바기반으로 Java API를 사용이 가능하다 </p>\r\n                    <p> 2. 쓰레드를 이용하기 떄문에 클라이언트의 요청에 대해 자원을 효율적으로 사용가능한다 </p>\r\n                    <p> 다수의 클라이언트가 요청하면 서블릿 객체를 여러개를 만드는 것이 아니라 한개의 서블릿 객체만을 만들고\r\n                        쓰레드를 이용하여 객체가 접근하므로 효율적으로 작동이 가능하다 </p>\r\n                    <p> 3. 비즈니스 로직(서비스) 과 프레젠테이션(클라이언트가 보는 화면)의 분리가 가능하다 </p>\r\n                    <p> 4. 업무분담이 좋아지고 , 유지보수가 수월하며 , 기능확장도 좋다  </p>\r\n                    <p> 단점 : 서블릿에는 HTML 코드가 섞여있어 불편함 -&gt; JSP로 어느정도 해결</p>\r\n                    <span className=\"mblock\">\r\n                        <p>  </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"JSP란\"> 4. JSP란 </a> </span>\r\n                    <p> Java Servet Page로 자바환경에서 HTML을 처리  </p>\r\n                    <p> JSP파일은 Servlet파일로 변환이 되어서 사용  </p>\r\n                    <p> 과거의 서블릿은 HTML + Java 혼합, 보기도 불편하고,\r\n                        로직도 작성하기 힘들고,\r\n                        HTML코드 때문에 매번 컴파일 과정을 거쳐야함</p>\r\n                    <p> HTML(프레젠테이션 로직,사용자가보는화면)은 JSP가 처리</p>\r\n                    <p> Java(비즈니스 로직, 서비스처리 과정)은 Servlet가 처리</p>\r\n                    <span className=\"mblock\">\r\n                        <p>  </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"JSP변환과정\"> 5. JSP변환과정 </a> </span>\r\n                    <p> 1. 웹 컨이너가 Servlet객체가 있는지 판단(변환된 JSP객체) </p>\r\n                    <p> 2. Jsp를 Java소스파일로 변환 </p>\r\n                    <p> 3. Java소스파일을 컴파일 하여 Servlet클래스로 변환 </p>\r\n                    <p> 4. Servlet클래스를 사용 </p>\r\n                    <span className=\"mblock\">\r\n                        <p> JSP 또한 서블릿이므로 LifeCycle을 가진다</p>\r\n                        <p> JSP의 장점으로 JSP의 파일 내부의 값이 자동으로 변환이 된다 </p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/JSP_Lifecycle.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"서블릿컨테이너의역할\"> 6. 서블릿컨테이너의역할 </a> </span>\r\n                    <p> 서블릿 컨테이너의 역할 </p>\r\n                    <p> 1. 서블릿 생명주기 관리</p>\r\n                    <p> 2. 웹 서버와의 통신 지원</p>\r\n                    <p> 3. 멀티쓰레드 지원 및 관리</p>\r\n                    <p> 4. xml 파일 등 관리 </p>\r\n                    <span className=\"mblock\">\r\n                        <p> 클라이언트가 요청할 때 서블릿컨테이너가 하는 역할</p>\r\n                        <p> 아래의 순서는 약간 차이가 있을 수 있지만 과정은 아래와 같습니다</p>\r\n                        <p> 1. HttpServletRequest객체, HttpServletResponse객체 생성</p>\r\n                        <p> 2. 쓰레드 생성 </p>\r\n                        <p> 3. 생성된 객체를 쓰레드에게 전달</p>\r\n                        <p> 4. xml 파일을 참조하여 URL을 분석하고 어느 서블릿을 요청할지 찾음</p>\r\n                        <p> 5. 사용자가 요청한 서블릿 호출</p>\r\n                        <p> 6. 쓰레드가 서블릿에서 doGet(),doPost() 실행시켜 동적페이지를 Response()객체에 보관</p>\r\n                        <p> 7. Responser() 객체를 HttpResponse()형태로 전환하고 쓰레드와 응답,요청 객체 소멸</p>\r\n                        <p> 8. 클라이언트 응답을 보냄( WAS -&gt; 웹서버로 이동 )</p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/ServletContainer.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"JSP변환과정\"> 7. Servlet사용하기 </a> </span>\r\n                    <p> 1. 웹 컨이너가 Servlet객체가 있는지 판단(변환된 JSP객체) </p>\r\n                    <p> 2. Jsp를 Java소스파일로 변환 </p>\r\n                    <p> 3. Java소스파일을 컴파일 하여 Servlet클래스로 변환 </p>\r\n                    <p> 4. Servlet클래스를 사용 </p>\r\n                    <span className=\"mblock\">\r\n                        <p> JSP 또한 서블릿이므로 LifeCycle을 가진다</p>\r\n                        <p> JSP의 장점으로 JSP의 파일 내부의 값이 자동으로 변환이 된다 </p>\r\n                        <p> <img src={process.env.PUBLIC_URL + '/img/JSP_Lifecycle.png'} /> </p>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JspServletInformation;","import React from 'react';\r\n\r\nconst BackendBasic = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"로그\"> 로그 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 로그를 사용하는 이유와 고려할 점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 시스템 서비스 장애 , 동작 상태, 알람(시스템 로그) </li>\r\n                                    <li> 2. 이벤트에 대한 유저 기록 수집(서비스 로그) </li>\r\n                                    <li> 3. 필요한 정보를 편리하게 얻을 수 있다. </li>\r\n                                    <li> 4. 로그를 남기지 않아서 필요한 정보를 얻지 못할 수 있다.  </li>\r\n                                    <li> 5. 로그의 의미를 파악하기 어렵다.  </li>\r\n                                    <li> 6. 로그 한줄에 여러 데이터가 있으므로 필요한 데이터를 수집하기 위해서는 가공처리가 필요하다.  </li>\r\n                                    <li> 7. 로그를 수정하려고 한다면 그 전에 있었던 모든 로그데이터를 수정해야 하므로 비용이 많이 든다. </li>\r\n                                    <li> 8. 로그로 데이터를 얻어야 한다면 추후에 사용을 할 수 있게 설계를 제대로 해야한다.\r\n                                        예를 들어 사용자가 페이지를 접속하고 다시 접속을 하면 왜 이사람이 접속을 했는지에 대해 생각을 해보고\r\n                                        어떤 데이터를 얻어야 할지에 대해 생각이 필요하다. </li>\r\n                                    <li> 9. 로그데이터를 얻을 때 같은 객체에 대해서 일관성있는 항목 구성을 해야한다. </li>\r\n                                    <li> 10. 로그의 데이터가 의도하지 않은 곳에서 들어오거나 다른 데이터가 들어오지 않는 믿을 수 있는 로그여야 한다.  </li>\r\n                                    <li> 11. 로그 데이터를 수집하기 위해서 헷갈리지 않는 이름과 구체적으로 받아들일수 있는 이름을 사용해야 한다. </li>\r\n                                    <li> 12. 항목이름, 이벤트 이름, 구성요소 등을 네이밍 컨벤션을 구분하여 작성한다. </li>\r\n                                    <li> 13. 로그 데이터의 이름은 축약하지말고 구체적으로 작성 </li>\r\n                                    <li> 14. 로그 데이터의 값이 비어있다면 명확하게  </li>\r\n                                    <li> 15. 로그의 정적데이터가 많으면 메타데이터에 매핑하여 이용, 하지만 매번 참조해야 하므로 고민이 필요 </li>\r\n                                    <li> 16. 메타데이터가 많아지면 보기 어려움, 자주 참조하는 로그 데이터들은 로그로 남기는 것을 추천 </li>\r\n                                    <li> 17. 무분별한 로그데이터를 수집하는 것은 낭비가 심하므로 필요한 데이터만 수집해야 한다. </li>\r\n                                    <li> 18. 점점 발전이 되가면서 로그의 품질에 대해서 생각을 해볼 필요성이 있다. </li>\r\n                                    <li> 14.  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 로그 레벨 </span>\r\n                                <small> 로그 라이브러리나 시스템 마다 약간의 차이는 존재 할 수 있음 </small>\r\n                                <span className=\"mblock\">\r\n                                    <small> 실제 운영할 때에는 error, warn, info 3개만 사용해서 모니터링 </small>\r\n                                    <li> FATAL : 시스템에 치명적인 문제가 발생 </li>\r\n                                    <li> ERROR : 프로그램 동작에 큰 문제가 발생한 경우 ,[DB사용금지, NPE] , 예상하지못한 오류 </li>\r\n                                    <li> WARN : 프로그램이 진행은 가능하지만 주의를 주는 경우 , 명확한 문제와 잠재적인 문제로\r\n                                        나뉘어 진다. [데이터 사용불가, 캐쉬값 사용 | 개발모드로 프로그램 시작, 관리자 콘솔\r\n                                        비밀번호 보호되지 않고 접속 ] </li>\r\n                                    <li> INFO : [시작, 종료, 서버연결 등] 중요한 메시지를 출력, 로그를 통해 내용을 파악할 때 일반적으로 사용 </li>\r\n                                    <li> DEBUG : 개발자가 기록할만한 가지가 있는 종류의 정보를 남기기 위해 사용, 버그를 찾기 위해 출력 </li>\r\n                                    <li> TRACE : 사소한 정보를 출력 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 로깅 라이브러리 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> slf4j #logback을 사용하기 위한 인터페이스 </li>\r\n                                    <li> logback #log4j보다 더 성능이 우수 </li>\r\n                                    <li> log4j #일반적으로 많이 사용 </li>\r\n                                    <li> nlog </li>\r\n                                    <li> JCL #facade역할 다른 로깅 lib를 사용하게 하는 역할 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 로그 시스템(로그 분석 도구) </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Sentry </li>\r\n                                    <li> ElasticSearch + Kibana + X-Pack #로그 수집, 저장, 분석, 알림까지 지원가능</li>\r\n                                    <li> Splunk </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 로그 사용시 주의사항 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 저장 용량 </li>\r\n                                    <li> 2. 개인 정보 </li>\r\n                                    <li> 3. 시스템 보안이나 시스템 계정 정보 </li>\r\n                                    <li> 4. 생명주기 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Dev Ops\"> Dev Ops </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <small> IT프로세스를 미세하게 조정하는 것을 지향하는 사고방식 </small>\r\n                                <span className=\"sstitle\"> Dev Ops Tools </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Jenkins(젠킨스) :  </li>\r\n                                    <li> Splunk(스플렁크) : </li>\r\n                                    <li> Terraform(테라폼) : </li>\r\n                                    <li> Nagios(나기오스) :  </li>\r\n                                    <li> Grafana(그라파나) :  </li>\r\n                                    <li> Prometheus(프로메테우스) :  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 중앙 집중식 인프라 구축 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 작업방식을 집중화 </li>\r\n                                    <li> 2. 권한설정 이나 보안 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"개발 방법론\"> 개발 방법론 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 애자일(Agile) 방법론 </span>\r\n                                <small> 계획을 여러번에 나누어서 하는 방법으로 클라이언트의 요구사항에 대처하기 쉽고 결과물을 바로 보여줄 수\r\n                                    있다. 하지만 정해진 기간안에 해야하고 짧은 시간에 처리를 해야한다는 부담이 있다.  </small>\r\n                                <span className=\"mblock\">\r\n                                    <span className=\"sstitle\"> 백로그 </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li> 제품 백로그 : 사용자를 조사하여 구현해야 할 사항을 정의한 문서 , 제품책임자가 작성 <br />\r\n                                            Idea Time : 한 사람이 사용가능한 시간의 양 <br />\r\n                                            Calender Time : 작업 시간을 예상하여 측정하는 방식 </li>\r\n                                        <li> 스프린트 백로그 : 작업과 작업량을 기록? </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 스크럼 구성원 </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li> 제품책임자 : 클라이언트와 스크럼 팀 사이의 의견을 취합 ,  제품의 특성과 기능을 정의하여 백로그 작성, 출시일자와 내용 결정 </li>\r\n                                        <li> 스크럼 마스터 : 스크럼 팀장 , 스크럼 프로세스가 잘 진행되도록 한다.  </li>\r\n                                        <li> 이해관계자 : 제품에 관련되어 있으나 직접적으로 관여하지 않는 사람 </li>\r\n                                        <li> 스크럼 팀 : 개발자, 디자이너 등 , 제품의 생산을 맡음 </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 스프린트 원칙 </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li> 요구사항을 변경하지 않는다. </li>\r\n                                        <li> 팀원들이 정보를 공유해야 한다. </li>\r\n                                        <li> 정해진 시간안에 끝내야 한다. </li>\r\n                                        <li> 규칙적이여야 한다. </li>\r\n                                        <li> 보통 2~4주 정도를 잡는다.  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 폭포수(waterfall) 방법론 </span>\r\n                                <small> 요구 - 설계 - 구현 - 테스트 - 출시 - (재요구 그러면 다시 처음으로) , 한번의 단계가 너무 길다는 단점 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> 계획 - 디자인 - 설계 - 코딩 - 배포 순으로 이루어져 결과물까지 확인하기 오래걸린다. </li>\r\n                                    <li> 구현시 설계가 달라지고 클라이언트의 대응에 반응하기 어려움 </li>\r\n                                    <li> 예산 초과나 앞쪽에서 딜레이가 되면 뒤에 파트를 담당하는 사람들을 감당하기 어려움 </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Dev Ops 방법론 </span>\r\n                                <small> 개발,운영,검증을 하나로 통합하는 방법론 , 여러 부서가 하나의 부서처럼 움직이게 함, 자동화\r\n                                    시스템이 해결을 해주는 방법론 </small>\r\n                                <span className=\"mblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> Dev Ops Tools </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li> Jenkins(젠킨스) :  </li>\r\n                                        <li> Splunk(스플렁크) : </li>\r\n                                        <li> Terraform(테라폼) : </li>\r\n                                        <li> Nagios(나기오스) :  </li>\r\n                                        <li> Grafana(그라파나) :  </li>\r\n                                        <li> Prometheus(프로메테우스) :  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BackendBasic;","import React from 'react';\r\n\r\nconst BackendSolid = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ Solid 5대 원칙 <a name=\"Solid 5대 원칙\" style={{ visibility: \"hidden\" }}> Solid 5대 원칙 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 유지보수, 확장이 쉬운 소프트웨어를 만드는 방식 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> SRP(Single Responsibility Principle) , 단일 책임 원칙 </span>\r\n                                            <li> 모든 클래스는 하나의 책임만 가진다. , 여러기능을 가지는 것은 좋지 않음 </li>\r\n                                            <li> 한개의 관심사만을 갖는다. </li>\r\n                                            <li> 여러개의 기능이 모여 있을 경우 한개의 기능을 수정하였을 때 다른 기능까지 망가질 수 있음 </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> OCP(Open-Close Principle) , 개방 폐쇄 원칙 </span>\r\n                                            <li> 소프트웨어 개체는 확장에 개방적이고, 수정에 대해서는 폐쇄적이어야 함 </li>\r\n                                            <li> 개체 하나를 수정하였는데 그 개체와 관계된 개체들을 모두 수정하게 되는것을 잘못된 방식 </li>\r\n                                            <li> 추상화(인터페이스)를 이용하여 확장에는 개방적으로 접근할 수 있음 </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> LSP(Liskov Substitution Principle) , 리스코프 치환 원칙 </span>\r\n                                            <li> 참조되는 기반클래스는 파생클래스의 객체를 상세히 알지 못해도 사용할 수 있어야 한다. </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> DIP(Dependency Inversion Principle) , 의존 역전 원칙 </span>\r\n                                            <li> 상위 모듈이 하위 모듈에 의존해서는 안되는 방식 </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> ISP(Interface Segregation Principle) , 인터페이스 분리 원칙 </span>\r\n                                            <li> 역할을 하나의 인터페이스가 모두 담당하는 것이 아니라 역할을 여러 작은 단위의 인터페이스\r\n                                                로 분리하여 사용하는 방식 </li>\r\n                                            <li> 모두 추상화에 의존해야 한다. </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BackendSolid;","import React from 'react';\r\n\r\nconst BackendBrowserDevTool = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\" >\r\n        <ul>\r\n          <span className=\"lblock\">\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Elements 항목 <a name=\"Elements 항목\" style={{ visibility: \"hidden\" }}> Elements 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Console 항목 <a name=\"Console 항목\" style={{ visibility: \"hidden\" }}> Console 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Sources 항목 <a name=\"Sources 항목\" style={{ visibility: \"hidden\" }}> Sources 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Network 항목 <a name=\"Network 항목\" style={{ visibility: \"hidden\" }}> Network 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Headers </span>\r\n                  <span className=\"mblock\">\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ General </summary>\r\n                      <span className=\"sblock\">\r\n                        <li> Request URL : 사용자가 요청한 주소 </li>\r\n                        <li> Request Method: [GET, POST] #메소드 </li>\r\n                        <li> Status Code : [200,302]  </li>\r\n                        <li> Remote Address : ?? </li>\r\n                        <details>\r\n                          <summary> Referrer Policy :  전달되는 주소의 노출정도를 정책으로 정함  </summary>\r\n                          <small> HTTP referer : 하이퍼링크를 통해 다른 사이트로 이동시에 남는 흔적,\r\n                            다른 사이트로 이동하면 이전의 사이트의 주소를 전달 </small>\r\n                          <span className=\"mblock\">\r\n                            <small> {'<meta name=\"referrer\" content=\"\" /> '} </small>\r\n                            <span className=\"sstitle\"> content=\"no-referrer\" </span>\r\n                            <li> refere을 남기지 않음 </li>\r\n                            <span className=\"sstitle\"> content=\"unsafe-url\" </span>\r\n                            <li> 주소를 전체를 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"origin\" </span>\r\n                            <li> 주소 전체가 아닌 도메인 주소만을 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"no-referrer-when-downgrade\" </span>\r\n                            <li> 이동하는 주소가 https일 때 주소를 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"strict-origin\" </span>\r\n                            <li> 이동하는 주소가 https일 때 도메인 주소를 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"same-origin\" </span>\r\n                            <li> 같은 웹사이트 주소로 이동할 때만 주소를 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"origin-when-cross-origin\" </span>\r\n                            <li> 웹사이트가 같을 떄는 전체주소, 다를 떄는 도메인 주소만을 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"strict-origin-when-cross-origin\" </span>\r\n                            <li> https를 사용하고 웹사이트가 같으면 전체주소, 다르면 도메인주소 그리고 http\r\n                              를 사용하면 웹사이트 주소를 남기지 않음 </li>\r\n                          </span>\r\n                        </details>\r\n                      </span>\r\n                    </details>\r\n                    {/*  */}\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ Response Headers </summary>\r\n                      <span className=\"sblock\">\r\n                        <li> ache-Control: no-cache, no-store, max-age=0, must-revalidate </li>\r\n                        <li> Connection: keep-alive </li>\r\n                        <li> Content-Length: 0 </li>\r\n                        <li> Date: Thu, 12 Aug 2021 15:46:38 GMT #날짜 </li>\r\n                        <li> Expires: 0 </li>\r\n                        <li> Keep-Alive: timeout=60  </li>\r\n                        <li> Location: http://localhost:8080/ </li>\r\n                        <li> Pragma: no-cache </li>\r\n                        <li> Set-Cookie: JSESSIONID=4D435E9D3AF6BCCAA188BE74B8D1167D; Path=/; HttpOnly </li>\r\n                        <li> X-Content-Type-Options: nosniff </li>\r\n                        <li> X-Frame-Options: DENY </li>\r\n                        <li> X-XSS-Protection: 1; mode=block </li>\r\n                      </span>\r\n                    </details>\r\n                    {/*  */}\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ Request Headers </summary>\r\n                      <span className=\"sblock\">\r\n                        <li> Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 </li>\r\n                        <li> Accept-Encoding: gzip, deflate, br </li>\r\n                        <li> Accept-Language: ko,en-US;q=0.9,en;q=0.8 </li>\r\n                        <li> Cache-Control: max-age=0 </li>\r\n                        <li> Connection: keep-alive </li>\r\n                        <li> Content-Length: 28 </li>\r\n                        <li> Content-Type: application/x-www-form-urlencoded </li>\r\n                        <li> Cookie: JSESSIONID=8853C84951CDCDE9026D41B7770FB10B </li>\r\n                        <li> Host: localhost:8080 </li>\r\n                        <li> Origin: http://localhost:8080 </li>\r\n                        <li> Referer: http://localhost:8080/loginForm </li>\r\n                        <li> Sec-Fetch-Dest: document </li>\r\n                        <li> Sec-Fetch-Mode: navigate </li>\r\n                        <li> Sec-Fetch-Site: same-origin </li>\r\n                        <li> Sec-Fetch-User: ?1 </li>\r\n                        <li> Sec-GPC: 1 </li>\r\n                        <li> Upgrade-Insecure-Requests: 1 </li>\r\n                        <li> User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36 </li>\r\n                      </span>\r\n                    </details>\r\n                    {/*  */}\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ Form Data </summary>\r\n                      <span className=\"sblock\">\r\n                        <li>  </li>\r\n                        <li>  </li>\r\n                      </span>\r\n                    </details>\r\n                    {/*  */}\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Preview </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Response </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Initiator </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Timing </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Cookies </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Performance 항목 <a name=\"Performance 항목\" style={{ visibility: \"hidden\" }}> Performance 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Memory 항목 <a name=\"Memory 항목\" style={{ visibility: \"hidden\" }}> Memory 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Application 항목 <a name=\"Application 항목\" style={{ visibility: \"hidden\" }}> Application 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Security 항목 <a name=\"Security 항목\" style={{ visibility: \"hidden\" }}> Security 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Lighthouse 항목 <a name=\"Lighthouse 항목\" style={{ visibility: \"hidden\" }}> Lighthouse 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n          </span>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BackendBrowserDevTool;","import React from 'react';\r\n\r\nconst BackendSCTCache = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 세션 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 서버가 가지고 있는 사용자 정보 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 보관이 되는곳 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 서버에서 지정한 세션 저장소 </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 쿠키 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 클라이언트가 서버에서 발급된 세션을 이용하기 위한 키값을 가지고 있음 (세션 ID) </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 보관이 되는곳 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 브라우저에서 설정한 클라이언트 저장소 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 장단점 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li className=\"col_be\"> 서버의 자원을 사용하지 않음, 회원정보를 일일히 확인하지 않고 쿠기만 보고\r\n                                            사용자가 누구인지 파악할 수 있으므로 보안에 상관없는 설정에는 유용하게 사용( ex:자동로그인) </li>\r\n                                        <li className=\"col_r\"> 보안에 취약,  </li>\r\n                                        <li className=\"\">  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 토큰 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 보관이 되는곳 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 캐시 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 보관이 되는곳 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BackendSCTCache;","import React from 'react';\r\n\r\nconst HtmlBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mtitle\"> <a name=\"\">  Html Study  </a> </span>\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ HTML 기본구조\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 예시 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> {'  <!DOCTYPE html>  '} </li>\r\n                                        <li> {'  <html>  '}\r\n                                            <li> {'    <head>  '}\r\n                                                <li> {'      <title> 제목 </title>  '} </li>\r\n                                                <li> {'      <meta charset = \"utf-8\">  '} </li>\r\n                                                <li> {'      <link rel=\"stylesheet\" href=\"css/styles.css\">  '} </li>\r\n                                            </li>\r\n                                            <li> {'    </head>     '} </li>\r\n                                            <li> {'    <body>  '} </li>\r\n                                            <li> {'    </body>  '} </li>\r\n                                        </li>\r\n                                        <li> {'  </html>  '} </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ HTML 주석\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 주석은 컴퓨터는 인식하지 못하고 사람만 인식이 가능한 설명문이다. </li>\r\n                                        <li> &lt; !-- 설명문 작성 -- &gt; </li>\r\n                                        <span> &lt; !-- 여기는 주석을 적는 공간입니다 -- &gt; </span>\r\n                                        <li> 현재는 리액트를 사용하여 보이지만 HTML에서는 보이지 않는다. </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 특수문자\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> &lt; , &gt; , &amp; , &quot; , &copy; , &nbsp; </li>\r\n                                        <li> 위에 있는 문자들은 HTML문법과 동일한 문자들이 있어서 사용하려면 겹쳐서 에러가 발생하게 된다</li>\r\n                                        <li> 그래서 사용하려면 다른 문자의 결합으로 작성해야 한다.</li>\r\n                                        <li> <a href=\"https://dev.w3.org/html5/html-author/charref\" target=\"_blank\"> Entity Code </a> </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; : &amp;lt; , 좌측 화살표</li>\r\n                                            <li> &gt; : &amp;gt; , 우측 화살표</li>\r\n                                            <li> &amp; : &amp;amp; , and문자 </li>\r\n                                            <li> &quot; : &amp;quot; , 쌍따옴표</li>\r\n                                            <li> &copy; : &amp;copy; , 카피라이터 문자</li>\r\n                                            <li> &nbsp; : &amp;nbsp; , 띄어쓰기</li>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ div태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. block이라는 속성만 가지며 아무런 특징이 없다. </li>\r\n                                        <li> block이란 가로 공간을 전부 차지하는 것이다. </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; div style=\"background-color:red\"&gt; &lt; /div &gt; </li>\r\n                                            <div style={{ backgroundColor: 'red' }}> div태그의 예시 </div>\r\n                                            <li> 블록속성을 가지고 있어 빨갛게 길게 칠해지는것을 볼 수 있다.</li>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ span태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. inline이라는 속성만 가지며 아무런 특징이 없다. </li>\r\n                                        <li> inline이란 글자가 있는 공간만 차지하는 것이다. </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; span style=\"background-color:red\"&gt; &lt; /span &gt; </li>\r\n                                            <span style={{ backgroundColor: 'red' }}> span태그의 예시 </span>\r\n                                            <li> 인라인속성을 가지고 있어 글자만 빨간 것을 볼 수 있다.</li>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ h태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. block 속성 </li>\r\n                                        <li> 2. 글자 크기에 맞추어 폰트의 크기가 정해져 있음 </li>\r\n                                        <li> 3. 글자 크기가 정해져 있으므로 css스타일로 폰트크기를 바꾸는 것을 권장하지 않음 </li>\r\n                                        <li> 4. h1태그 부터 h6태그 까지 존재함 </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; h1 style=\"background-color:red\"&gt; &lt; /h1 &gt; </li>\r\n                                            <h1 style={{ backgroundColor: 'red' }}> h1태그의 예시 </h1>\r\n                                            <li> &lt; h2 style=\"background-color:skyblue\"&gt; &lt; /h2 &gt; </li>\r\n                                            <h2 style={{ backgroundColor: 'skyblue' }}> h2태그의 예시 </h2>\r\n                                            <li> &lt; h3 style=\"background-color:red\"&gt; &lt; /h3 &gt; </li>\r\n                                            <h3 style={{ backgroundColor: 'red' }}> h3태그의 예시 </h3>\r\n                                            <li> &lt; h4 style=\"background-color:skyblue\"&gt; &lt; /h4 &gt; </li>\r\n                                            <h4 style={{ backgroundColor: 'skyblue' }}> h4태그의 예시 </h4>\r\n                                            <li> &lt; h5 style=\"background-color:red\"&gt; &lt; /h5 &gt; </li>\r\n                                            <h5 style={{ backgroundColor: 'red' }}> h5태그의 예시 </h5>\r\n                                            <li> &lt; h6 style=\"background-color:skyblue\"&gt; &lt; /h6 &gt; </li>\r\n                                            <h6 style={{ backgroundColor: 'skyblue' }}> h6태그의 예시 </h6>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ p태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. block 속성 </li>\r\n                                        <li> 2. 한 줄 띄어쓰기의 특성을 가짐 </li>\r\n                                        <li> 3. 문단 태그라고도 불리며 자주 사용되는 태그 </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; span style=\"background-color:red\"&gt; &lt; /span &gt; </li>\r\n                                            <li style={{ backgroundColor: 'red' }}> p태그의 예시 </li>\r\n                                            <li> 블록속성을 가지고 있어 빨갛게 길게 칠해지는것을 볼 수 있다.</li>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 글자 스타일 관련 태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. 인라인 속성 </li>\r\n                                        <li> 2. css스타일을 사용하지 않고도 사용됨 </li>\r\n                                        <li> 3. 솔직히 b, br태그 외에는 다른것은 가끔 사용하는것 같다</li>\r\n                                        <li> 4. css에서만 스타일을 적용해야 된다는 논쟁이 있는것으로 알고 있어서 저는 css에서만 스타일을 적용합니다</li>\r\n                                        <span className=\"sblock\">\r\n                                            <b> b태그 : 굵은 글씨 </b> #시각적으로만 사용<br />\r\n                                            <strong> strong태그 : 굵은 글씨 </strong> #스크린 리더로 읽게 되면 강조<br />\r\n                                            <i> i태그 : 이탤릭체 #시각적으로만 사용 </i> <br />\r\n                                            <em> em태그 : 이탤릭체 글씨</em> #스크린 리더로 읽게 되면 강조 <br />\r\n                                            <ins> ins태그 : 글씨아래 밑줄 </ins> <br />\r\n                                            <del> del태그 : 중간에 줄</del> <br />\r\n                                            <mark style={{ backgroundColor: 'skyblue' }}> mark태그 : 형광펜 </mark> <br />\r\n                                            <sub> sub태그 : 아래 첨자</sub> <br />\r\n                                            <sup> sup태그 : 위 첨자</sup> <br />\r\n                                            <big> big태그 : 큰 글씨</big> <br />\r\n                                            <small> small태그 : 작은 글씨</small> <br />\r\n                                            br태그 : 띄어쓰기 태그(&lt;br/&gt;) 태그가 1개임 <br />\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 시멘틱태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. block 속성 </li>\r\n                                        <li> 2. div태그와 동일하다 </li>\r\n                                        <li> 3. 사용하는 이유는 태그의 이름을 이용하여 시멘틱태그안에는 정해진 내용을 넣겠다라는 의미이다 </li>\r\n                                        <li> header : 상단 구역 </li>\r\n                                        <li> nav : 상단 구역에 메뉴 </li>\r\n                                        <li> section : 메인 영역 </li>\r\n                                        <li> aside : 사이드 영역 </li>\r\n                                        <li> article : 신문,기사,글 영역 </li>\r\n                                        <li> footer : 하단 구역, 저작권, 회사명, 주소, SNS 등등 </li>\r\n                                        <li> 시멘틱 태그가 몇개 더 있는것으로 기억하지만 일단 기억나는대로만 작성하였다. </li>\r\n\r\n                                        <span className=\"sblock\">\r\n                                            <li> <header className=\"sstitle\"> header태그의 예시 </header> </li>\r\n                                            <li> <nav className=\"sstitle tab_4\"> nav태그의 예시 </nav> </li>\r\n                                            <li> <main className=\"sstitle\"> main태그의 예시 </main> </li>\r\n                                            <li> <aside className=\"sstitle tab_4\"> aside태그의 예시 </aside> </li>\r\n                                            <li> <article className=\"sstitle tab_4\"> article태그의 예시 , 독립적 </article> </li>\r\n                                            <li> <section className=\"sstitle tab_4\"> section태그의 예시 , 연관된 내용을 묶음 </section> </li>\r\n                                            <li> <footer className=\"sstitle\"> footer태그의 예시 </footer> </li>\r\n                                            <div> 시멘틱 태그는 div태그이지만 이름만 다른 태그인 것을 알 수 있다. </div>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ a태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. inline 속성 </li>\r\n                                        <li> 2. 주소로 이동시켜는 태그 </li>\r\n                                        <li> 3. href속성이 있으면 클릭이 된다 </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; a href=\"#\" &gt; a태그의 예시1 &lt; /a &gt; </li>\r\n                                            <a href=\"#\"> href=\"#\" 은 글씨가 클릭되고 제일 최상단으로 이동한다. </a>\r\n                                            <li> &lt; a href=\"#\" style=\"text-decoration=none\"&gt; a태그의 예시2 &lt; /a &gt; </li>\r\n                                            <a href=\"#\" style={{ textDecoration: 'none' }}> text-decoration 속성은 밑줄을 없애준다 </a>\r\n                                            <li> &lt; a href=\"https://www.naver.com/\" &gt; a태그의 예시3 &lt; /a &gt; </li>\r\n                                            <a href=\"https://www.naver.com/\" > 네이버 주소로 이동 </a>\r\n                                            <li> &lt; a href=\"https://www.naver.com/\" target=\"_blank\" &gt; a태그의 예시4 &lt; /a &gt; </li>\r\n                                            <a href=\"https://www.naver.com/\" target=\"_blank\" > 새탭을 이용하여 네이버 주소로 이동 </a>\r\n                                            <span className=\"mblock\">\r\n                                                <li> 홈페이지에 보면 맨 위로 이동할 때 아래와 같이 사용한다. 만약에 아래와 같이 작성을하고 버튼을 눌렀는데\r\n                                                    이동하지 않았다면 2개의 태그가 너무 가까워서 움직이지 않은 것처럼 보였을 것이다.\r\n                                                    그러므로 저 위로 이동하여 놓고 해보면 작동할 것이다.\r\n                                                    그리고 반드시 a태그를 이용하여야만 작동이 된다.\r\n                                                </li>\r\n                                                <li> &lt; a name=\"top\" &gt; a태그의 예시5 목적지 주소&lt; /a &gt; </li>\r\n                                                <a name=\"top\"> 내부 a태그 주소(하이퍼링크)로 이동 </a>\r\n                                                <li> &lt; a href=\"#top\" &gt; a태그의 예시5 이동할 주소&lt; /a &gt; </li>\r\n                                                <a href=\"#top\"> 내부 a태그 주소(하이퍼링크)로 이동 </a>\r\n                                            </span>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ link태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. 비어있는 태그 </li>\r\n                                        <li> 2. 속성만 넣을 수 있음  </li>\r\n                                        <li> 3. 외부 소스를 불러주는 태그 </li>\r\n                                        <li> 4. HTML에서 css파일을 불러서 사용할 떄 일반적으로 사용 </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> link태그는 &lt;head&gt; HTML head태그 안에 넣는다 &lt;/head&gt;</li>\r\n                                            <li> 아래 코드는 style.css 이름을 가진 css 파일을 불러오는 방법</li>\r\n                                            <li> &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt;</li>\r\n                                            <li> rel: 필수 속성으로, 현재 문서에 어떤 리소스 인지 알려준다 </li>\r\n                                            <li> type: 외부 리소스의 미디어 타입 </li>\r\n                                            <li> href: 외부 리소스의 URL </li>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ img태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. 이미지 태그 </li>\r\n                                        <li> 2. src 속성 : 이미지의 주소입력 , null값이면 에러발생  </li>\r\n                                        <li> 3. alt 속성 : 이미지의 설명 </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> img태그는 &lt;img src=\"URL주소\" alt=\"이미지설명\" width=\"100px\" &gt; </li>\r\n                                            <img src={process.env.PUBLIC_URL + '/img/mountain_and_sea.jpg'} alt=\"산과바다\" width=\"100px\" />\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ input태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 사용자가 입력을 할 수 있는 태그 </li>\r\n                                        <li> 아이디,회원가입 등에서 사용하는 태그로 form태그와 같이 사용된다.  </li>\r\n                                        <li> input태그는 type속성을 이용하여 여러가지의 데이터를 입력할 수 있다. </li>\r\n                                        <li> input태그의 대표적 속성 required, placeholder </li>\r\n                                        <li> required 속성을 사용한 input태그는 제출시 제출이 불가능 </li>\r\n                                        <li> placeholder 속성을 사용하면 무엇을 입력할지 설명을 넣을 수 있다. </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> input태그의 예시 </li>\r\n                                            <li> &lt;form&gt; method=\"GET\" action=\"#\"&gt;</li>\r\n                                            <li> &lt;p&gt; &lt;input type=\"text\" placeholder=\"아이디를 입력해주세요\" required /&gt; &lt;/p&gt;</li>\r\n                                            <li> &lt;p&gt; &lt;input type=\"password\" placeholder=\"비밀번호를 입력해주세요\" required /&gt; &lt;/p&gt;</li>\r\n                                            <li> &lt;p&gt; &lt;button&gt; type=\"submit\"&gt; 제출 &lt;/button&gt;  &lt;/p&gt;</li>\r\n                                            <li> &lt;/form&gt;</li>\r\n                                            <form method=\"GET\" action=\"#\">\r\n                                                <li> <input type=\"text\" placeholder=\"아이디를 입력해주세요\" required /> </li>\r\n                                                <li> <input type=\"password\" placeholder=\"비밀번호를 입력해주세요\" required /> </li>\r\n                                                <li> <button type=\"submit\"> 제출 </button>  </li>\r\n                                            </form>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ form태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <ol>\r\n                                            <li> 프론트엔드에서 사용자가 입력을 하고 백엔드 서버에 데이터를 보낼 때 사용  </li>\r\n                                            <li> form으로 보내는 방식에는 get,post 방식 등이 있다. </li>\r\n                                            <li> form태그 안에 여러가지 input 태그가 존재한다. </li>\r\n                                            <li> form태그 자체로는 아무런 특성이 없다. </li>\r\n                                            <li> input태그에서 자주 사용되는 속성</li>\r\n                                        </ol>\r\n                                        <span className=\"sblock\">\r\n                                            <li> form태그 </li>\r\n                                            <li> GET방식은 빠르지만 보안이 좋지 않아 사생활 정보가 필요없을 때 사용, 검색 등</li>\r\n                                            <li> POST방식은 상대적으로 느리지만 보안이 좋아 사생활 정보가 필요할 때, 로그인,회원가입 등 </li>\r\n                                            <li> &lt; form method=\"POST\"혹은\"GET\" action=\"양식을보낼주소\" &gt; 이곳에 input태그들을 작성한다 &lt; /form &gt;</li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li> fieldset태그 </li>\r\n                                            <li> form태그와 같이 사용할 수 있는 태그</li>\r\n                                            <li> form태그의 범위를 볼 수 있고 테두리를 감싸 줌 </li>\r\n                                            <li> &lt;form&gt;  &lt;fieldset&gt; 123123 &lt;/fieldset&gt; &lt;/form&gt; </li>\r\n                                            <li> <form>  <fieldset> 123123 </fieldset> </form> </li>\r\n                                        </span>\r\n                                        <span className=\"sstitle\"> form에서 사용하는 input 태그의 종류 </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 텍스트 입력시 숫자로 입력 </li>\r\n                                            <li> &lt;input type=\"number\"/&gt;</li>\r\n                                            <li> <input type=\"number\" /> </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 텍스트 입력시 * 처리, 비밀번호를 입력할 때 사용</li>\r\n                                            <li> &lt;input type=\"password\"/&gt;</li>\r\n                                            <li> <input type=\"password\" /> </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 라디오 버튼 , 여러개의 선택지 중에서 한 개를 선택할 때 사용</li>\r\n                                            <li> &lt;input type=\"radio\" name=\"gender\" value=\"man\"/&gt; </li>\r\n                                            <li> &lt;input type=\"radio\" name=\"gender\" value=\"woman\"/&gt; </li>\r\n                                            <li> <input type=\"radio\" name=\"gender\" value=\"man\" /> 남 </li>\r\n                                            <li> <input type=\"radio\" name=\"gender\" value=\"woman\" /> 녀 </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 체크박스, 여러개의 선택지 중에서 여러개 를 선택할 때 사용 </li>\r\n                                            <li> &lt;input type=\"checkbox\" name=\"hooby\" value=\"music\"/&gt; 음악</li>\r\n                                            <li> &lt;input type=\"checkbox\" name=\"hooby\" value=\"sport\" /&gt; 운동 </li>\r\n                                            <li> &lt;input type=\"checkbox\" name=\"hooby\" value=\"game\"/&gt; 게임 </li>\r\n                                            <li> 좋아하는 취미를 고르세요 </li>\r\n                                            <li> <input type=\"checkbox\" name=\"hooby\" value=\"music\" /> 음악 </li>\r\n                                            <li> <input type=\"checkbox\" name=\"hooby\" value=\"sport\" /> 운동</li>\r\n                                            <li> <input type=\"checkbox\" name=\"hooby\" value=\"game\" /> 게임</li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> <a name=\"label태그\"> label태그 </a> </li>\r\n                                            <li> 체크박스나 라디오 버튼을 사용할 떄 자주 사용되는 태그 </li>\r\n                                            <li> 체크박스를 클릭하지 않아도 글자를 클릭하면 클릭할 수 있다. </li>\r\n                                            <li> 체크박스를 안보이게 하고 라벨 글자만 클릭하여 css 애니메이션을 만들기도 한다 </li>\r\n                                            <li> label태그의 for=\"\" 하고 input태그의 id=\"\" 값하고 연결된다 </li>\r\n                                            <li> &lt; label for=\"music\" &gt; 음악 클릭 &lt; /label &gt;  </li>\r\n                                            <li> &lt; input type=\"checkbox\" id=\"music\" &gt; &lt;/input &gt;  </li>\r\n                                            <li> <label htmlFor=\"music\"> <mark> 음악 클릭 </mark> </label> </li>\r\n                                            <li> <input type=\"checkbox\" id=\"music\" ></input>  </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 텍스트 , 텍스트를 입력할 때 </li>\r\n                                            <li> placeholder는 흐릿하게 무엇을 적을지 보여주는 값이다. 입력되면 사라진다. </li>\r\n                                            <li> &lt;input type=\"text\" name=\"text\" placeholder=\"텍스트를 입력하세요\"/&gt; </li>\r\n                                            <li> <input type=\"text\" name=\"text\" placeholder=\"텍스트를 입력하세요\" />  </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 텍스트 영역 , 블로그나 문의사항 메일 등 긴 장문의 텍스트를 입력할 때 사용</li>\r\n                                            <li> 속성 설명 : cols(가로길이) , rows(세로줄) , resize(크기조절) , border(테두리) , overflow(글자가넘칠때) </li>\r\n                                            <li> &lt;textarea cols=\"20\" rows=\"5\" style=\"resize:none; border:none; overflow:auto\"/&gt; </li>\r\n                                            <li> <textarea cols=\"20\" rows=\"5\" style={{ resize: 'none', border: 'none', overflow: 'auto' }} />  </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> <a name=\"select태그\"> select태그 </a> , 여러개의 조건 중에 선택을 할 수 있음</li>\r\n                                            <li> 속성 설명 : selected(처음 선택되어 있는 옵션) , disabled(옵션으로 선택 불가능)</li>\r\n                                            <li> &lt;select name=\"area\"&gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt;option value=\"\" selected disabled&gt; &lt;/option&gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt;option value=\"서울\"&gt; 서울 &lt;/option&gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt;option value=\"부산\"&gt; 부산 &lt;/option&gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt;option value=\"경기\"&gt; 경기 &lt;/option&gt; </li>\r\n                                            <li> &nbsp;&lt;optgroup label=\"한국\"&gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt;option value=\"대구\"&gt; 대구 &lt;/option&gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt;option value=\"대전\"&gt; 대전 &lt;/option&gt; </li>\r\n                                            <li> &nbsp;&lt;/optgroup&gt; </li>\r\n                                            <li> &lt;/select&gt; </li>\r\n                                            <select name=\"area\">\r\n                                                <option value=\"\" selected disabled> 선택 </option>\r\n                                                <option value=\"서울\"> 서울 </option>\r\n                                                <option value=\"부산\"> 부산 </option>\r\n                                                <option value=\"경기\"> 경기 </option>\r\n                                                <optgroup label=\"한국\">\r\n                                                    <option value=\"대구\"> 대구 </option>\r\n                                                    <option value=\"대전\"> 대전 </option>\r\n                                                </optgroup>\r\n                                            </select>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 제출 , form 태그에 작성된 양식을 action으로 보낼 때 사용</li>\r\n                                            <li> 각 input태그에 name속성과 value속성을 이용하여 백엔드 서버로 보냄 </li>\r\n                                            <li> 백엔드 서버에서는 name이라는 값을 참조하여 value값을 사용할 수 있음 </li>\r\n                                            <li> 예를들어 어떤 input태그에 name=\"gender\" value=\"man\" 이라고 한다면\r\n                                                백엔드에서 String sex = request.getParameter(\"gender\"); //sex = man으로 사용됨\r\n                                            </li>\r\n                                            <li> &lt;button type=\"submit\"&gt; 제출 &lt;/button&gt; </li>\r\n                                            <li> <button type=\"submit\">  제출  </button> </li>\r\n                                            <li> &lt;input type=\"submit\" value=\"제출\"/&gt; </li>\r\n                                            <li> <input type=\"submit\" value=\"제출\" /> </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 기타 등등 나중에 시간나면 추가로 적을 계획 </li>\r\n                                            <li> range(좌우스크롤바), reset(초기화), search(검색창),\r\n                                                tel(전화번호), time(시간), week(날짜), datetime(날짜?),\r\n                                                email(이메일양식), month(달력) </li>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ list태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. 리스트 형식으로 나열될 때 사용  </li>\r\n                                        <li> 2. 실제로는 세로로 나열보다는 css를 이용하여 가로로 배열하는데 사용하는것 같다. </li>\r\n                                        <li> 3. 리스트 태그에는 순서가 있는(ul)태그와 순서가 없는(ol)태그가 있다. </li>\r\n                                        <li> 그냥 ul만 써도 충분한것 같다. </li>\r\n                                        <li> 4. 리스트태그는 왼쪽에 원판(disc) 원(circle) 등 list-style-type 속성을 가지고있다. </li>\r\n                                        <li> 왠만하면 그냥 list-style-type=\"none\" 으로 사용할 것 같다. </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; ul &gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt; li &gt; 첫번째 &lt; /li &gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt; li &gt; 두번째 &lt; /li &gt; </li>\r\n                                            <li> &lt; /ul &gt; </li>\r\n                                            <li>\r\n                                                <ul>\r\n                                                    <li style={{ marginLeft: \"20px\" }}>첫번째</li>\r\n                                                    <li style={{ marginLeft: \"20px\" }}>두번째</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; ol &gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt; li &gt; 첫번째 &lt; /li &gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt; li &gt; 두번째 &lt; /li &gt; </li>\r\n                                            <li> &lt; /ol &gt; </li>\r\n                                            <li>\r\n                                                <ol>\r\n                                                    <li style={{ marginLeft: \"20px\" }}>첫번째</li>\r\n                                                    <li style={{ marginLeft: \"20px\" }}>두번째</li>\r\n                                                </ol>\r\n                                            </li>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <li> &lt; dl &gt; </li>\r\n                                            <li className=\"tab_4\"> &lt; dt &gt; 단어제목 &lt; /dt &gt; </li>\r\n                                            <li className=\"tab_4\"> &lt; dd &gt; 단어설명 &lt; /dd &gt; </li>\r\n                                            <li> &lt; /dl &gt; </li>\r\n                                            <dl>\r\n                                                <dt> 단어 </dt>\r\n                                                <dd style={{ marginLeft: \"20px\" }}> 설명 </dd>\r\n                                            </dl>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ table태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 표를 만들 때 사용하는 태그 </li>\r\n                                        <li> 알고 있어야 되는 개념이지만 자주 사용되지 않아 그냥 기억만 하고 있다. </li>\r\n                                        <li> 테이블과 관련된 태그의 종류 및 속성 , 많지만 필요한것만 정리</li>\r\n                                        <span className=\"sblock\">\r\n                                            <li> table(표) (th(표의제목) tr(가로줄) td(셸,한칸))\r\n                                                (colgroup col)(표의 길이나 색상등을 지정할 수 있음)\r\n                                                thead(테이블상단구역) tbody(테이블중간구역) tfoot(테이블하단구역)\r\n                                            </li>\r\n                                            <li>\r\n                                                colspan=\"2\"(셸의 가로줄을 합치는 갯수), rowspan=\"2\"(셸의 세로줄을 합치는갯수)\r\n                                            </li>\r\n                                        </span>\r\n                                        <li> 테이블 태그의 예시 </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>\r\n                                                <li> &lt;table border=\"1\"&gt; </li>\r\n                                                <li> &nbsp;&lt;colgroup&gt; </li>\r\n                                                <li> &nbsp;&nbsp;&lt;col width=\"50px\" style=\"background:red\"/&gt; </li>\r\n                                                <li> &nbsp;&nbsp;&lt;col width=\"150px\" style=\"background:green\" /&gt;</li>\r\n                                                <li> &nbsp;&lt;col width=\"250px\" style=\"background:blue\" /&gt;</li>\r\n                                                <li> &nbsp;&lt;/colgroup&gt;</li>\r\n                                                <li> &nbsp;&lt;thead&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&lt;tr&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&nbsp;&lt;th colSpan=\"2\"&gt; 제목 &lt;/th&gt; </li>\r\n                                                <li> &nbsp;&nbsp;&nbsp;&lt;th rowSpan=\"3\"&gt; 번호번호번호 &lt;/th&gt; </li>\r\n                                                <li> &nbsp;&lt;/tr&gt;</li>\r\n                                                <li> &nbsp;&lt;/thead&gt;</li>\r\n                                                <li> &nbsp; &lt;tbody&gt;</li>\r\n                                                <li> &nbsp;&nbsp; &lt;tr&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&nbsp; &lt;td&gt; 1번 &lt;/td&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&nbsp; &lt;td&gt; 1 &lt;/td&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&nbsp; &lt;td&gt; 1 &lt;/td&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&lt;/tr&gt;</li>\r\n                                                <li> &nbsp; &lt;/tbody&gt;</li>\r\n                                                <li> &nbsp;&lt;tfoot&gt;</li>\r\n                                                <li> &nbsp;&nbsp; &lt;tr&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&nbsp;  &lt;td&gt; 2번 &lt;/td&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&nbsp; &lt;td&gt; 2 &lt;/td&gt;</li>\r\n                                                <li> &nbsp;&nbsp;&nbsp; &lt;td&gt; 2 &lt;/td&gt;</li>\r\n                                                <li> &nbsp;&nbsp; &lt;/tr&gt;</li>\r\n                                                <li> &nbsp; &lt;/tfoot&gt;</li>\r\n                                                <li> &lt;/table&gt;</li>\r\n                                            </li>\r\n\r\n                                            <table border=\"1\">\r\n                                                <colgroup>\r\n                                                    <col width=\"50px\" style={{ background: \"red\" }} />\r\n                                                    <col width=\"150px\" style={{ background: \"green\" }} />\r\n                                                    <col width=\"250px\" style={{ background: \"blue\" }} />\r\n                                                </colgroup>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th colSpan=\"2\"> 제목 </th>\r\n                                                        <th rowSpan=\"3\"> 번호번호번호 </th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td> 1번 </td>\r\n                                                        <td> 1 </td>\r\n                                                        <td> 1 </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                    <tr>\r\n                                                        <td> 2번 </td>\r\n                                                        <td> 2 </td>\r\n                                                        <td> 2 </td>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ details태그\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. block속성 </li>\r\n                                        <li> 2. 메뉴를 펼치고 접는 것을 하는 태그 </li>\r\n                                        <li> 속성 </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li className=\"sstitle\"> 1. open : html에서는 펼쳐진 상태로 , css에서는 펼쳐졌을때 details[open]</li>\r\n                                            <li> &lt; details &gt; </li>\r\n                                            <li> &nbsp;&nbsp;&lt; summary &gt; </li>\r\n                                            <li> &nbsp;&nbsp;안에 내용적고 details를 써서 여러번 사용 가능</li>\r\n                                            <li> &nbsp;&nbsp;&lt; /summary &gt; </li>\r\n                                            <li> &lt; /details &gt; </li>\r\n                                        </span>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 뷰포트(Viewport)\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> {'<meta name=\"viewport\" content=\"widht=device-width,initial-scale=1,minimum-scale=1'}\r\n                                            {',maximum-scale=1, user-scalable=no'} </li>\r\n                                        <li> width : 뷰포트 너비 </li>\r\n                                        <li> height : 뷰포트 높이 </li>\r\n                                        <li> initial-scale : 초기배율 </li>\r\n                                        <li> minimum-scale: 최소 축소배율 설정(default=0.25) </li>\r\n                                        <li> maximum-scale: 최대 확대배율 설정(default=5.0) </li>\r\n                                        <li> user-scalable: 확대/축소 여부 설정 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HtmlBasic;","import React from 'react';\r\n\r\nconst HtmlDOM = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\"> HTML DOM  </a> </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> element 위치관련 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <p> <i> offsetWidth </i> 엘리먼트의 너비 </p>\r\n                            <p> <i> offsetHeight </i> 엘리먼트의 높이 </p>\r\n                            <p> <i> offsetLeft </i> 엘리먼트의 x위치  </p>\r\n                            <p> <i> offsetTop </i> 엘리먼트의  y위치 </p>\r\n                            <p> <i> scrollWidth </i> 엘리먼트의 너비 </p>\r\n                            <p> <i> scrollHeight </i> 엘리먼트의 높이 </p>\r\n                            <p> <i> scrollLeft </i> 엘리먼트의 x위치 </p>\r\n                            <p> <i> scrollTop </i> 엘리먼트의 y위치 </p>\r\n                            <p> <i> clientWidth </i> </p>\r\n                            <p> <i> clientHeight </i> </p>\r\n                            <p> <i> clientLeft </i> </p>\r\n                            <p> <i> clientTop </i> </p>\r\n                            <p> <i> window.pageXOffset</i> </p>\r\n                            <p> <i> window.pageYOffset</i> </p>\r\n                            <p> <i> element.getBoundingClientRect().top</i> </p>\r\n                            <p> <i> element.getBoundingClientRect().bottom</i> </p>\r\n                            <p> <i> element.getBoundingClientRect().left</i> </p>\r\n                            <p> <i> element.getBoundingClientRect().right</i> </p>\r\n                            <p> <i> clientX </i> </p>\r\n                            <p> <i> pageX </i> </p>\r\n                            <p> <i> offsetX </i> </p>\r\n                            <p> <i> screenX </i> </p>\r\n                            <p> <i> offsetParent </i> </p>\r\n                            <p> <i> window.innerWidth </i> 뷰포트 값 </p>\r\n                            <p> <i> window.outerHeight </i> 전체화면(툴바,스크롤 포함) </p>\r\n                            <p> <i> screen.width</i> 사용자의 해상도 </p>\r\n                            <p> <i> </i> </p>\r\n                            <p> <i> </i> </p>\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> element 요소  </a> </span>\r\n                        <p> <i> document.getElemenById('id태그 이름') </i> </p>\r\n                        <p> <i> document.getElemenById('id태그 이름') </i> </p>\r\n                        <span className=\"sblock\">\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\"> element 위치 </a> </span>\r\n                        <span className=\"sblock\">\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default HtmlDOM;\r\n\r\n","import React from 'react';\r\n\r\nconst HtmlError = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\"> HtmlError 오류나 에러 </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                        </span>\r\n                    </span>\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                        </span>\r\n                    </span> */}\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                        </span>\r\n                    </span> */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default HtmlError;\r\n\r\n","import React from 'react';\r\n\r\nconst CssBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ width(너비) <a name=\"width(너비)\" style={{ visibility: \"hidden\" }}> width(너비) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> inline속성에는 적용이 되지 않는다.  </small> <br />\r\n                                    <span className=\"sstitle\"> width 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> min-width: 500px;  #박스의 최소 길이 설정 </li>\r\n                                        <li> max-width: 500px;  #박스의 최대 길이 설정 </li>\r\n                                        <li> min-width: 100%;  #박스의 최소 길이 설정 , 부모요소를 기준 </li>\r\n                                        <li> max-width: 100%;  #박스의 최대 길이 설정 , 부모요소를 기준 </li>\r\n                                        <li> width: 100px, 100%  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ height(높이) <a name=\"height(높이)\" style={{ visibility: \"hidden\" }}> height(높이) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> inline속성에는 적용이 되지 않는다.  </small> <br />\r\n                                    <span className=\"sstitle\"> height 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> min-height: 500px; #박스의 최소 길이 설정 </li>\r\n                                        <li> max-height: 500px; #박스의 최대 길이 설정 </li>\r\n                                        <li> min-height: 100%; #박스의 최소 길이 설정 , 부모요소를 기준 </li>\r\n                                        <li> max-height: 100%; #박스의 최대 길이 설정 , 부모요소를 기준 </li>\r\n                                        <li> height: 100px, 100% </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ border(테두리라인) <a name=\"border(테두리라인)\" style={{ visibility: \"hidden\" }}> border(테두리라인) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> border 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> border: [선두께 선모양 색깔]; #block요소의 테두리(변)를 두께 5px로 지정\r\n                                            <span className=\"sblock\">\r\n                                                <span className=\"sstitle\"> 선모양 </span>\r\n                                                <li> [ 세로 | 가로 ] , [ 위 | 가로 | 아래 ] , [ 위 | 우측 | 아래 | 좌측 ] </li>\r\n                                                <li> border-style: none;  #선 제거 , 주변에 테두리가 존재하면 선을 그림 </li>\r\n                                                <li> border-style: hidden;  #선 숨김 , 주변에 테두리가 존재해도 선을 숨김</li>\r\n                                                <li> border-style: dotted;  #점선 , 점의 간격을 너비의 절반 </li>\r\n                                                <li> border-style: dashed;  #직사각형 모양 </li>\r\n                                                <li> border-style: solid;  #직선 </li>\r\n                                                <li> border-style: double;  #2줄 직선 </li>\r\n                                                <li> border-style: groove;  #테두리 파임 </li>\r\n                                                <li> border-style: ridge;  #테두리가 튀어나온 것처럼 </li>\r\n                                                <li> border-style: inset;  #요소가 파인것처럼 </li>\r\n                                                <li> border-style: outset;  #요소가 튀어나온것처럼 </li>\r\n                                            </span>\r\n                                        </li>\r\n                                        <li> border-radius: [모서리둥글게만드는크기];\r\n                                            <span className=\"sblock\">\r\n                                                <span className=\"sstitle\"> 선 모서리 </span>\r\n                                                <li> [ 세로 | 가로 ] , [ 위 | 가로 | 아래 ] , [ 위 | 우측 | 아래 | 좌측 ]  </li>\r\n                                                <li> border-radius: 5px; #4개의 모서리를 둥글게 만듬 </li>\r\n                                            </span>\r\n                                        </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ margin(외부 간격) <a name=\"margin(외부 간격)\" style={{ visibility: \"hidden\" }}> margin(외부 간격) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> margin 속성 </span>\r\n                                    <small> block요소에만 사용가능? </small>  <br />\r\n                                    <small> margin은 잘못 배치하면 밀리기도해서 계산을 하여 배치하여야 한다. </small>\r\n                                    <li> [ 세로 | 가로 ] , [ 위 | 가로 | 아래 ] , [ 위 | 우측 | 아래 | 좌측 ]  </li>\r\n                                    <li> margin: 5px 10px 5px; </li>\r\n                                    <li> margin-left: 10px; </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ padding(내부 간격) <a name=\"padding(내부 간격)\" style={{ visibility: \"hidden\" }}> padding(내부 간격) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> padding 속성 </span>\r\n                                    <small> block요소에만 사용가능? </small> <br />\r\n                                    <small> padding은 잘못 배치하면 밀리기도해서 계산을 하여 배치하여야 한다. </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> [ 세로 | 가로 ] , [ 위 | 가로 | 아래 ] , [ 위 | 우측 | 아래 | 좌측 ]  </li>\r\n                                        <li> padding: 5px 10px 5px;  </li>\r\n                                        <li> padding-right: 10px;  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ box-sizing(요소 크기 범위) <a name=\"box-sizing(요소 크기 범위)\" style={{ visibility: \"hidden\" }}> box-sizing(요소 크기 범위) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 요소 박스의 크기를 지정할때의 크기를 각각 따로 구분을 할지 안할지의 차이</small>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> box-sizing: border-box; #(요소+안쪽 여백+테두리) 크기, 일반적으로 많이 사용 </li>\r\n                                        <li> box-sizing: content-box; #요소 크기 + 안쪽 여백 크기 + 테두리 크기  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ overflow(흘러내림) <a name=\"overflow(흘러내림)\" style={{ visibility: \"hidden\" }}> overflow(흘러내림) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> overflow 속성 </span>\r\n                                    <small> 블록 요소안의 컨텐츠가 블록보다 클 때 어떻게 볼 지 처리하는 방법  </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> overflow-x: #가로만 처리 </li>\r\n                                        <li> overflow-y: #세로만 처리 </li>\r\n                                        <li> overflow: visible; #블록 요소를 넘어서 보여준다. </li>\r\n                                        <li> overflow: hidden; #블록 요소보다 넘치는 부분은 숨긴다. </li>\r\n                                        <li> overflow: clip; #hidden과 비슷하지만 코드를 추가하여 어떠한 스크롤도 사용 불가 </li>\r\n                                        <li> overflow: scroll; #블록요소 보다 크면 내부 스크롤을 생성한다. </li>\r\n                                        <li> overflow: auto; #알아서 처리(스크롤 바) </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ background(배경) <a name=\"background(배경)\" style={{ visibility: \"hidden\" }}> background(배경) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> background 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sstitle\"> background repeat </span>\r\n                                        <li> background-repeat: no-repeat; #반복하지 않음 </li>\r\n                                        <li> background-repeat: repeat-x; #가로 방향으로만 반복 </li>\r\n                                        <li> background-repeat: repeat-y; #세로 방향으로만 반복 </li>\r\n                                        <li> background-repeat: repeat;  #가로와 세로 모두 반복 </li>\r\n                                        <li> background-repeat: space; #반복할 수 있는 만큼 반복한 뒤, 남는 공간은 이미지 간의 여백으로 배분 </li>\r\n                                        <li> background-repeat: round; #반복할 수 있는 만큼 반복한 뒤, 남는 공간은 이미지 확대를 통해 배분 </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sstitle\"> background-image </span>\r\n                                        <li> background-image: url(\"http:// ~~~~~.png\"); , 이미지 불러오기</li>\r\n                                        <li> background-image: url(\"\"); , 이미지 불러오기</li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sstitle\"> background-size </span>\r\n                                        <li> background-size: cover; #이미지가 잘리지 않게 가로세로크기를 조정, 최대한 큰 크기의 이미지를 유지      </li>\r\n                                        <li> background-size: contain; #요소 사이즈에 맞게 이미지의 크기를 조정        </li>\r\n                                        <li> background-size: auto; #이미지의 원본크기를 유지       </li>\r\n                                        <li> background-size: 100%; </li>\r\n                                        <li> background-size: 200px 200px; </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sstitle\"> background-position </span>\r\n                                        <small> 배경의 배치를 어떻게 할지 결정 </small>\r\n                                        <li> background-position: top; </li>\r\n                                        <li> background-position: bottom; </li>\r\n                                        <li> background-position: left; </li>\r\n                                        <li> background-position: right; </li>\r\n                                        <li> background-position: center; </li>\r\n                                        <li> background-position: 50% 50%; #부모 요소의 가로 세로 비율 </li>\r\n                                        <li> background-position: right 50% bottom 50%;  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sstitle\"> background-origin </span>\r\n                                        <small> 배경의 원점을 부모의 테두리,내부간격,컨텐츠에 맞출지를 정함 </small>\r\n                                        <li> background-origin: border-box; </li>\r\n                                        <li> background-origin: padding-box; </li>\r\n                                        <li> background-origin: content-box; </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sstitle\"> background-color </span>\r\n                                        <li> background-color: #ffffff; #16진수로 RGB </li>\r\n                                        <li> background-color: red; #이름이 있는 색깔 </li>\r\n                                        <li> background-color: rgb(255,255,255); </li>\r\n                                        <li> background-color: rgba(255,255,255,0.5); # RGB + 명도 </li>\r\n                                        <li> background-color: hsl(50, 33%, 25%); # HSL(색조[0-360] ,채도(회색),명도)  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sstitle\"> background-clip </span>\r\n                                        <small> 요소의 배경을 채우는 공간 설정 </small>\r\n                                        <li> background-clip: border-box; </li>\r\n                                        <li> background-clip: padding-box; </li>\r\n                                        <li> background-clip: content-box; </li>\r\n                                        <li> background-clip: text; #글자 뒤로 이미지를 보여줌 , color: transparent; -webkit-background-clip: text;  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sstitle\"> background-attachment </span>\r\n                                        <small> 배경을 뷰포트와 요소 어디에 고정할지 선택, 뷰포트는 브라우저의 스크롤, 요소는 요소내부 스크롤 </small>\r\n                                        <li> background-attachment: scroll; #배경을 요소에 고정  </li>\r\n                                        <li> background-attachment: fixed; #배경을 뷰포트에 고정 </li>\r\n                                        <li> background-attachment: local; #배경을 콘텐츠에 고정</li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 선택자 <a name=\"선택자\" style={{ visibility: \"hidden\" }}> 선택자 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 선택자 종류 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> .class{'{ }'} #클래스 , 아이디 선택자 보다 사용을 권장 </li>\r\n                                        <li> #id{'{ }'} #아이디 , 우선순위가 높음, 하지만 사용을 하는것이 좋지 않음 </li>\r\n                                        <li> 부모선택자 자식선택자{'{ }'} #자식 선택자, 공백으로 구분하며 부모아래의 모든 자식선택자에게 적용   </li>\r\n                                        <li> 부모선택자&gt;자식선택자{'{ }'} #직속 자식 선택자, 부모 아래 다른 선택자를 거치지 않은 선택자들에게 적용 </li>\r\n                                        <li> 선택자, 선택자{'{ }'} #복수 선택자, 한번에 여러개의 선택자에게 적용 </li>\r\n                                        <li> 선택자:[first-child,last-child,not(:lastchild), not(:first-child)]{'{ }'}, 여러개의 요소들중에 선택(가상클래스) </li>\r\n                                        <li> button:hover{'{ }'} #button 요소 위에 올라갈때  </li>\r\n                                        <li> :is(header,nav) button #header와nav태그 자식 버튼에 적용  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ vertical-align(수직정렬) <a name=\"vertical-align(수직정렬)\" style={{ visibility: \"hidden\" }}> vertical-align(수직정렬) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> vertical-align 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> inline 속성이나 table 셀에서 수직 정렬 , block요소는 되지 않음 </small> <br />\r\n                                        <small> 대체적으로 이미지와 텍스트를 같은 위치에 배치하기 위해 사용된다.  </small> <br />\r\n                                        <small> 텍스트에는 line-height를 주고 이미지에는 vertical-align 주고서 처리하면 거의 일치  </small>\r\n                                        <li> vertical-align: baseline; </li>\r\n                                        <li> vertical-align: sub; </li>\r\n                                        <li> vertical-align: super; </li>\r\n                                        <li> vertical-align: text-top; </li>\r\n                                        <li> vertical-align: text-bottom; </li>\r\n                                        <li> vertical-align: middle; </li>\r\n                                        <li> vertical-align: top; # </li>\r\n                                        <li> vertical-align: bottom; </li>\r\n                                        <li> vertical-align: </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ float(띄워서배치) <a name=\"float(띄워서배치)\" style={{ visibility: \"hidden\" }}> float(띄워서배치) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ position(요소위치) <a name=\"position(요소위치)\" style={{ visibility: \"hidden\" }}> position(요소위치) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> position : static; #문서를 기준으로 배치? </li>\r\n                                        <li> position : relative; #본인 요소를 기준으로 배치 </li>\r\n                                        <li> position : absolute; #부모요소에 relative를 하고 사용하면 요소의 기준점에서 배치  </li>\r\n                                        <li> position : sticky; #스크롤 할 때 부모 요소의 끝까지 따라 움직인다.. </li>\r\n                                        <li> top: 10px; #요소를 上로 10px이동해서 배치</li>\r\n                                        <li> bottom: 10px; #요소를 下로 10px이동해서 배치</li>\r\n                                        <li> left: 10px; #요소를 左로 10px이동해서 배치</li>\r\n                                        <li> right: 10px; #요소를 右로 10px이동해서 배치</li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 폰트 추가하는 방법 <a name=\"폰트 추가하는 방법\" style={{ visibility: \"hidden\" }}> 폰트 추가하는 방법 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ text-decoration(텍스트장식) <a name=\"text-decoration(텍스트장식)\" style={{ visibility: \"hidden\" }}> text-decoration(텍스트장식) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> text-decoration 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> text-decoration : underline dotted red 4px; #4px의 빨간 점선 밑줄</li>\r\n                                        <li> text-decoration : red wavy underline; #꾸불꾸불한 밑줄 </li>\r\n                                        <li> text-decoration : overline; #글자 위줄에 밑줄</li>\r\n                                        <li> text-decoration : line-through; #글자 중앙에 밑줄</li>\r\n                                        <li> text-decoration : underline; #글자 아래에 밑줄</li>\r\n                                        <li> text-decoration : none; #밑줄을 사용하지 않음, a태그에 밑줄제거하는데 사용</li>\r\n                                        <li> text-decoration : blink; #브라우저에 따라 깜빡거림, 사용권장하지않음</li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ text-align(글자위치조정)\r\n                                    <a name=\"text-align(글자위치조정)\" style={{ visibility: \"hidden\" }}> text-align(글자위치조정) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 부모 요소를 기준으로 위치를 잡음,\r\n                                            block요소에 적용이 가능하고 정렬되는 것은 block요소안에 inline요소에적용이 가능하다. </small>\r\n                                        <li> text-align: left(default) </li>\r\n                                        <li> text-align: center</li>\r\n                                        <li> text-align: right</li>\r\n                                        <li> text-align: justify #가운데를 기준으로 좌우로 정렬</li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ font(폰트)\r\n                                    <a name=\"font(폰트)\" style={{ visibility: \"hidden\" }}> font(폰트) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> font 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> color: red, #ffffff , rgba(255,255,255); #폰트의 색깔 설정 </li>\r\n                                        <li> font-size: 10px, 1em, 1rem, 10%; #폰트의 크기 지정 </li>\r\n                                        <li> font-weight: 900; #폰트의 굵기 설정 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ box-shadow(그림자)\r\n                                    <a name=\"box-shadow(그림자)\" style={{ visibility: \"hidden\" }}> box-shadow(그림자) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ @support\r\n                                    <a name=\"@support\" style={{ visibility: \"hidden\" }}> @support </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <small> 브라우저가 지원이 되면 css적용하는 방법 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> @supports(display:grid) {'{ css코드 }'} </li>\r\n                                        <li> @supports not (display:grid) {'{ css코드 }'} </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ snap-scroll\r\n                                    <a name=\"snap-scroll\" style={{ visibility: \"hidden\" }}> snap-scroll </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> snap-scroll 속성 </span>\r\n                                    <small> 스크롤을 내리면 부드럽게 내려가는 것이 아니라 어떤 요소들에 걸리면서 내려감,\r\n                                        모바일? 느낌이 나게 해줌 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 부모css에 scroll-snap-type: y mandatory; </li>\r\n                                        <li> 자식css에 scroll-snap-align: center; </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ aspect-ratio(화면 비율 조정)\r\n                                    <a name=\"aspect-ratio(화면 비율 조정)\" style={{ visibility: \"hidden\" }}> aspect-ratio(화면 비율 조정) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> aspect-ratio </span>\r\n                                    <small> 이미지태그나 동영상태그에 적용 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> img {'{ aspect-ratio: 16/9; }'} </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ line-height(텍스트행사이의거리)\r\n                                    <a name=\"line-height(텍스트행사이의거리)\" style={{ visibility: \"hidden\" }}> line-height(텍스트행사이의거리) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> line-height 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 선 상자의 높이를 설정 </small>\r\n                                        <li> line-height: normal , 3, 3em, 30%; </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ list-style(목록태그설정)\r\n                                    <a name=\"list-style(목록태그설정)\" style={{ visibility: \"hidden\" }}> list-style(목록태그설정) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <small> 목록 태그에 적용되는 속성 , li태그에서 앞에 있는 아이콘을 설정 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> list-style: ; #이렇게 사용 </li>\r\n                                        <li> list-style-type: square; #사각형 </li>\r\n                                        <li> list-style-type: circle; #원형 </li>\r\n                                        <li> list-style-type: decimal; </li>\r\n                                        <li> list-style-type: georgian; </li>\r\n                                        <li> list-style-type: trad-chinese-informal; </li>\r\n                                        <li> list-style-type: kannada; </li>\r\n                                        <li> list-style-type: disc; </li>\r\n                                        <li> list-style-type: '-'; </li>\r\n                                        <li> list-style-type: \"\\1F44D\"; #이모티콘 엄지척 </li>\r\n                                        <li> list-style-type: none; #거의 없애는 것을 많이 사용 </li>\r\n                                        <li> list-style-image: url('../img/.png'); </li>\r\n                                        <li> list-style-position: inside; </li>\r\n                                        <li> list-style-position: outside; #우측에 배치 되는데 어떻게 사용할지는... </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ text-align(가로정렬)\r\n                                    <a name=\"text-align(가로정렬)\" style={{ visibility: \"hidden\" }}> text-align(가로정렬) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> block요소나 표에서 사용 </small>\r\n                                        <li> text-align: left; </li>\r\n                                        <li> text-align: right; </li>\r\n                                        <li> text-align: center; </li>\r\n                                        <li> text-align: justify; </li>\r\n                                        <li> text-align: justify-all; </li>\r\n                                        <li> text-align: start; </li>\r\n                                        <li> text-align: end; </li>\r\n                                        <li> text-align: match-parent; </li>\r\n                                        <li> text-align: \".\"; </li>\r\n                                        <li> text-align: \".\" center; </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ letter-spacing(글자사이간격조정)\r\n                                    <a name=\"letter-spacing(글자사이간격조정)\" style={{ visibility: \"hidden\" }}> letter-spacing(글자사이간격조정) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> letter-spacing 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 글자 가로 사이 간격 </small>\r\n                                        <li> letter-spacing: normal , 1em , 1px, .1px , -1px ; </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ white-space(공백문자처리)\r\n                                    <a name=\"white-space(공백문자처리)\" style={{ visibility: \"hidden\" }}> white-space(공백문자처리) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 글자를 줄바꿈을 어떻게 할지 설정하는 속성 </small>\r\n                                        <li> white-space: normal;  </li>\r\n                                        <li> white-space: nowrap; #공백유지x , 줄바꿈은 br태그에서만 일어남 </li>\r\n                                        <li> white-space: pre; #공백유지, 줄바꿈은 개행문자와 br태그에서만 일어남 </li>\r\n                                        <li> white-space: pre-wrap; #공백유지, 줄바꿈은 개행문자와 br태그에서만 일어나지만 너무 길면 줄을 바꾸어줌 </li>\r\n                                        <li> white-space: pre-line; #공백유지x, 줄바꿈은 개행문자와 br태그에서만 일어나지만 너무 길면 줄을 바꾸어줌</li>\r\n                                        <li> white-space: break-spaces; #pre-wrap과 유사, 공백유지, 공백을유지하면서도 줄바꿈 </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ word-break(단어분리처리여부)\r\n                                    <a name=\"word-break(단어분리처리여부)\" style={{ visibility: \"hidden\" }}> word-break(단어분리처리여부) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> word-break 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> CJK아시아권 글자에 허용 </small>\r\n                                        <li> word-break: normal;  </li>\r\n                                        <li> word-break: break-all; #강제로 줄바꿈 </li>\r\n                                        <li> word-break: keep-all; #줄바꿀때 단어를 끊지 않음 </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ word-wrap(요소를넘은글자처리여부)\r\n                                    <a name=\"word-wrap(요소를넘은글자처리여부)\" style={{ visibility: \"hidden\" }}> word-wrap(요소를넘은글자처리여부) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> word-wrap: normal; </li>\r\n                                        <li> word-wrap: brea-word; #넘어가면 줄바꿈 </li>\r\n                                        <li> word-wrap: </li>\r\n                                        <li> word-wrap: </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ display(요소디스플레이속성)\r\n                                    <a name=\"display(요소디스플레이속성)\" style={{ visibility: \"hidden\" }}> display(요소디스플레이속성) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> display 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> display속성에 따라 레이아웃(배치)를 하는 방법이 바뀜 </small>\r\n                                        <li> display: inline; </li>\r\n                                        <li> display: block; </li>\r\n                                        <li> display: inline-block; </li>\r\n                                        <li> display: none; </li>\r\n                                        <li> display: visible; </li>\r\n                                        <li> display: flex; </li>\r\n                                        <li> display: hidden; </li>\r\n                                        <li> display:  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ transform(회전,크기,기울기,이동)\r\n                                    <a name=\"transform(회전,크기,기울기,이동)\" style={{ visibility: \"hidden\" }}> transform(회전,크기,기울기,이동) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> transform 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> transform : rotate(0.5turn); #시계방향으로 회전</li>\r\n                                        <li> transform : rotate(1, 2.0, 3.0, 10deg);  </li>\r\n                                        <li> transform : rotateX(10deg); #x축으로 회전  </li>\r\n                                        <li> transform : rotateY(10deg); #y축으로 회전  </li>\r\n                                        <li> transform : rotateZ(10deg); #z축으로 회전  </li>\r\n                                        <li> transform : translate(10px, 10px); #x축,y축이동 </li>\r\n                                        <li> transform : translate3d(10px, 10px, 10px); #x축,y축,z축 이동  </li>\r\n                                        <li> transform : translateX(10px) #x축 이동 </li>\r\n                                        <li> transform : translateY(10px) #y축 이동 </li>\r\n                                        <li> transform : translateZ(10px) #z축 이동 </li>\r\n                                        <li> transform : scale(10, 0.1); #가로, 세로 확대 </li>\r\n                                        <li> transform : scale3d(2, 2, 2); #너비,깊이,높이 확대  </li>\r\n                                        <li> transform : scaleX(2); #너비 2배 확대  </li>\r\n                                        <li> transform : scaleY(2); #깊이 2배 확대  </li>\r\n                                        <li> transform : scaleZ(2); #높이 2배 확대  </li>\r\n                                        <li> transform : skew(30deg, 30deg);   </li>\r\n                                        <li> transform : skewX(30deg); #左上은 왼쪽으로, 右下을 오른쪽으로 기울어짐  </li>\r\n                                        <li> transform : skewY(30deg); #左上은 위쪽으로, 右下은 아래쪽으로 기울어짐  </li>\r\n                                        <li> transform :   </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ transition (애니메이션 효과)\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 가만히 놔둔다고 작동이 되지는 않는다. hover 등 특수한 경우가 발생해야 된다. </li>\r\n                                        <li> <h3> transition [요소속성(background,border,all등등) property duration timing-function] </h3>\r\n                                        </li>\r\n                                        <li> <h4> transition-delay </h4>  : 효과가 나타나기 전 시간</li>\r\n                                        <li> <h4>  transition-duration </h4> : 효과가 지속되는 시간(s,ms단위) </li>\r\n                                        <li> <h4>  transition-property </h4>: 추가할 효과를 설정</li>\r\n                                        <li> <h4>  transition-timine-function </h4> : 전환효과를 설정\r\n                                            <li> transition-timine-function: linear 일정한 속도</li>\r\n                                            <li> transition-timine-function: ease : 기본값 , 느리게 빠르게 마지막은 느리게 끝남 </li>\r\n                                            <li> transition-timine-function: ease-in : 느리게시작 </li>\r\n                                            <li> transition-timine-function: ease-out : 느리게 끝남</li>\r\n                                            <li> transition-timine-function: ease-in-out : 느리게 시작해서 느리게 끝남 </li>\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 애니메이션 효과\r\n                                    <a name=\"애니메이션 효과\" style={{ visibility: \"hidden\" }}> 애니메이션 효과 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h4> animation-fill-mode </h4> : 애니메이션이 끝난뒤에 처리 설정\r\n                                            <li> backwards : 기본설정, 애니메이션이 작동하기전으로 돌아감 </li>\r\n                                            <li> forwards : 키프레임이 100%가 되었을 때 마지막 유지 </li>\r\n                                        </li>\r\n                                        <li> <h4>animation-direction</h4> : 애니메이션의 진행 방향 설정\r\n                                            <li> normal : 기본값, 정해진 순서로 진행 </li>\r\n                                            <li> reverse : 반대 순서로 진행 </li>\r\n                                            <li> alternate : 정해진 순서로 진행 후 반대순서로 진행 </li>\r\n                                            <li> alternate-reverse : 반대 순서로 진행 후, 정해진 순서로 진행 </li>\r\n                                        </li>\r\n                                        <li> <h4> animation-iteration-count </h4> : 애니메이션의 횟수를 정함\r\n                                            <li> 숫자 : 반복횟수 </li>\r\n                                            <li> infinite : 무한반복 </li>\r\n                                        </li>\r\n                                        <li> <h4> animation-duration </h4> : 애니메이션이 일어나는 시간\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                        <li> <h4> @Keyframes </h4> 애니메이션을 나누어서 처리하는 과정\r\n                                            <li> animation-name : 애니메이션 이름 , #css스타일 안에다가 선언 </li>\r\n                                            <li> @Keyframes 애니메이션이름 {'{'}\r\n                                                <li> from {'{'}\r\n                                                    <li> 스타일 지정 </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                                <li> 30% {'{'}\r\n                                                    <li> 스타일 지정 </li>\r\n                                                </li>\r\n                                                <li> 60% {'{'}\r\n                                                    <li> 스타일 지정 </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                                <li> to {'{'}\r\n                                                    <li> 스타일 지정 </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ gradient (2개 이상의 색을 배치하는 방법)\r\n                                    <a name=\"gradient (2개 이상의 색을 배치하는 방법)\" style={{ visibility: \"hidden\" }}> gradient (2개 이상의 색을 배치하는 방법) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> linear-gradient(각도, color 10%, color 90% ...);\r\n                                            <li> 각도 = 45deg , 90deg </li>\r\n                                        </li>\r\n                                        <li> linear-gradient(회전, color 차지비율 ,color 차지비율 ...);\r\n                                            <li> 회전 = 0.25turn </li>\r\n                                        </li>\r\n                                        <li> linear-gradient(방향, color 차지비율 ,color 차지비율...);\r\n                                            <li> 방향 = [right | left | top | bottom | to 방향1 방향2 | to 방향1 ] </li>\r\n                                        </li>\r\n                                        <li> radial-gradient(모양 color, color);\r\n                                            <li> 필요할 때 검색해보기 </li>\r\n                                        </li>\r\n                                        <li> conic-gradient(모양 color, color);\r\n                                            <li> 필요할 때 검색해보기 </li>\r\n                                        </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mtitle\"> 플렉스 스타일  </span>\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ flex(이어서?배치)\r\n                                    <a name=\"flex(이어서?배치)\" style={{ visibility: \"hidden\" }}> flex(이어서?배치) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> display: flex; </li>\r\n                                        <li> gap: 10px 5px; #flex요소들 사이에 간격을 조정할 수 있음 margin사용을 하지 않아도 됨 </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ flex-wrap (플렉스요소를 1줄에 배치를 할지 결정)\r\n                                    <a name=\"flex-wrap\" style={{ visibility: \"hidden\" }}> flex-wrap </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> flex-wrap : nowrap; # 기본값, 요소 영역을 벗어나더라도 한줄에 배치 </li>\r\n                                        <li> flex-wrap : wrap; # 여러행에 거쳐서 요소들을 배치 </li>\r\n                                        <li> flex-wrap : wrap-reverse; # 요소의 시작점과 끝점의 기준이 반대로 배치 , 좌측아래를 기준으로 배치되고\r\n                                            행이 넘어가면 위로 배치 </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ flex-direction(플렉스요소배치)\r\n                                    <a name=\"flex-direction(플렉스요소배치)\" style={{ visibility: \"hidden\" }}> flex-direction(플렉스요소배치) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> flex-direction </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> flex-direction: column; #플렉스요소들을 세로로 배치 </li>\r\n                                        <li> flex-direction: column-reverse; #플렉스요소들을 세로로 역순으로 배치 </li>\r\n                                        <li> flex-direction: row; #기본값, 플렉스요소들을 가로로 배치 </li>\r\n                                        <li> flex-direction: row-reverse; #플렉스요소들을 가로로 역순으로 배치 </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ flex-flow(flex-wrap + flex-direction)\r\n                                    <a name=\"flex-flow(flex-wrap + flex-direction)\" style={{ visibility: \"hidden\" }}> flex-flow(flex-wrap + flex-direction) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> flex-flow 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> flex-wrap , flex-direction 두개의 속성을 합쳐놓은 스타일 속성 </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> flex-flow 사용 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> flex-flox : [ wrap | nowrap | wrap-reverse ] [ columne | row | column-reverse | row-reverse ]; </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ align-content(F,G의 라인을 정렬)\r\n                                    <a name=\"align-content(F,G의 라인을 정렬)\" style={{ visibility: \"hidden\" }}> align-content(F,G의 라인을 정렬) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> align-content 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> flex박스나 grid에서 사용하는 배치 방법 , flex-line을 정렬 , 부모 요소에서 사용  </li>\r\n                                        <li> align-content: center;     </li>\r\n                                        <li> align-content: start;      </li>\r\n                                        <li> align-content: end;        </li>\r\n                                        <li> align-content: flex-start; </li>\r\n                                        <li> align-content: flex-end;   </li>\r\n                                        <li> align-content: normal;   </li>\r\n                                        <li> align-content: baseline;   </li>\r\n                                        <li> align-content: first baseline;   </li>\r\n                                        <li> align-content: last baseline;   </li>\r\n                                        <li> align-content: space-between;   </li>\r\n                                        <li> align-content: space-around;   </li>\r\n                                        <li> align-content: space-evenly;   </li>\r\n                                        <li> align-content: stretch;   </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ justify-content(F,G 요소가로축배치)\r\n                                    <a name=\"justify-content(F,G 요소가로축배치)\" style={{ visibility: \"hidden\" }}> justify-content(F,G 요소가로축배치) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> flex-line을 기준으로 아이템을 정렬 </small>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> justify-content: start; #  </li>\r\n                                        <li> justify-content: end;   #      </li>\r\n                                        <li> justify-content: center; #요소를 중간에서부터 배치     </li>\r\n                                        <li> justify-content: flex-start; #요소를 앞쪽에서부터 배치  </li>\r\n                                        <li> justify-content: flex-end; #요소를 뒤쪽에서부터 배치   </li>\r\n                                        <li> justify-content: left;        </li>\r\n                                        <li> justify-content: right;       </li>\r\n                                        <li> justify-content: space-between; #요소들 사이에 동일한 간격</li>\r\n                                        <li> justify-content: space-around; #요소 주위에 동일한 간격 </li>\r\n                                        <li> justify-content: space-evenly; #전부 균등하게</li>\r\n                                        <li> justify-content: stretch;       </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ align-items(F,G 라인을기준으로 아이템세로축정렬)\r\n                                    <a name=\"align-items(F,G 라인을기준으로 아이템세로축정렬)\" style={{ visibility: \"hidden\" }}> align-items(F,G 라인을기준으로 아이템세로축정렬) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> flex요소들을 세로축에 대하여 정렬 </small>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> align-items: start;       </li>\r\n                                        <li> align-items: end;          </li>\r\n                                        <li> align-items: center;  #요소를 중간에서부터 배치    </li>\r\n                                        <li> align-items: flex-start; #요소를 위쪽에서부터 배치  </li>\r\n                                        <li> align-items: flex-end;  #요소를 아래쪽에서부터 배치  </li>\r\n                                        <li> align-items: baseline; #요소를 컨테이너의 기준선(글자기준)에 배치      </li>\r\n                                        <li> align-items: left;        </li>\r\n                                        <li> align-items: right;       </li>\r\n                                        <li> align-items: space-between; #요소들 사이에 동일한 간격</li>\r\n                                        <li> align-items: space-around; #요소 주위에 동일한 간격 </li>\r\n                                        <li> align-items: space-evenly; #전부 균등하게</li>\r\n                                        <li> align-items: stretch;  #기본값, 컨테이너와 높이가 같게 변경뒤 배치   </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ align-self (F 요소마다 속성값을 설정)\r\n                                    <a name=\"align-self (플렉스 요소마다 속성값을 설정)\" style={{ visibility: \"hidden\" }}> align-self (플렉스 요소마다 속성값을 설정능) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> align-self 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 플렉스 요소마다 속성값을 설정 , align-items보다 우선 순위</small> <br />\r\n                                        <li> align-self: center;   </li>\r\n                                        <li> align-self: start;  </li>\r\n                                        <li> align-self: end;  </li>\r\n                                        <li> align-self: self-start;  </li>\r\n                                        <li> align-self: self-end; </li>\r\n                                        <li> align-self: flex-start;   </li>\r\n                                        <li> align-self: flex-end;  </li>\r\n                                        <li> align-self: baseline;  </li>\r\n                                        <li> align-self: first baseline;  </li>\r\n                                        <li> align-self: last baseline;  </li>\r\n                                        <li> align-self: stretch;  </li>\r\n                                        <li> align-self: safe center;  </li>\r\n                                        <li> align-self: unsafe center;  </li>\r\n                                        <li>   </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ flex요소 순서와 크기\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> </small> <br />\r\n                                        <li> flex : flex-grow flex-shrink flex-basis 이와 같이 입력해서 사용 가능   </li>\r\n                                        <li> order : 값   # 플렉스요소들의 배열 순서를 바꿀 수 있음  </li>\r\n                                        <li> flex-grow : 플렉스요소 너비 증가 비율 </li>\r\n                                        <li> flex-shrink :  플렉스요소 너비 감소 비율 </li>\r\n                                        <li> flex-basis : 플렉스 요소를 길이를 지정 </li>\r\n                                        <li>   </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        <span className=\"mtitle\"> 플렉스 스타일 끝 </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ filter(필터효과)\r\n                                    <a name=\"filter(필터효과)\" style={{ visibility: \"hidden\" }}> filter(필터효과) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> filter: url(\"filters.svg#filter-id\"); </li>\r\n                                        <li> filter: blur(10px); #픽셀로 흐리게 한다..</li>\r\n                                        <li> filter: brightness(0.5); #밝기</li>\r\n                                        <li> filter: contrast(100%); #대비</li>\r\n                                        <li> filter: drop-shadow(10px 10px 10px blue); </li>\r\n                                        <li> filter: grayscale(50%); #흑백</li>\r\n                                        <li> filter: hue-rotate(90deg); </li>\r\n                                        <li> filter: invert(10%); #반전</li>\r\n                                        <li> filter: opacity(10%); </li>\r\n                                        <li> filter: saturate(10%); </li>\r\n                                        <li> filter: sepia(10%); </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ variable(변수)\r\n                                    <a name=\"variable(변수)\" style={{ visibility: \"hidden\" }}> variable(변수) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> variable 속성 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> --변수명:  ; #최소한 공백이라도 들어가여 변수 선언 </li>\r\n                                        <li> transform: rotate(--변수명,default값); #변수값 </li>\r\n                                        <li> transform: rotate(--변수명); #변수명 만 선언하고 변수값 삽입 가능 </li>\r\n                                        <small> {'style=\"--변수명:넣을값;'} #html에서 요소속성에 이렇게 정의하면 0이라는 값이 들어감 </small>\r\n                                        <li> calc(90deg * var(--i))과 같이 calc를 사용하여 값을 css 속성값에 넣어야 제대로 작동 </li>\r\n                                        <li> css변수에 값이 잘못들어갈경우 default 값이 들어간다. </li>\r\n                                        <li>  </li>\r\n                                        <li>  <p className=\"sstitle\"> 아래와 같이 변수를 정의하고 변수를 사용하는 방법 </p>\r\n                                            <li> {' :root { '} </li>\r\n                                            <li> {' --clr-color: 204, 100%, 30%; '} 또는 {' --clr-color: 204 100% 30%; '} </li>\r\n                                            <li> {' } '} </li>\r\n                                            <li> {' .class { '} </li>\r\n                                            <li> {' background: hsl(var(--clr-color), .95); '} 또는 {' background: hsl(var(--clr-color) / .95); '} </li>\r\n                                            <li> {' } '} </li>\r\n                                        </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 미디어 쿼리\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 매체유형과 크기마다 반응하는 웹페이지를 만들 때 사용 </li>\r\n                                        <li> {'<link rel=\"\" media=\"screen and (max-width: 768px)\" href=\".css\" '} #조건에 맞으면 css 파일을 불러옴 </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 사용 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h3> 매체 유형 </h3>\r\n                                            <li> all, screen, tv, projection, handler(휴대용장치), speech(스크린리더), aural(화면을소리출력장치) </li>\r\n                                            <li> embossed(점자인쇄장치) , tty(디스플레이제한장치) , braille(점자표시장치) , width(웹페이지)  </li>\r\n                                            <li> height(웹페이지) , device-width , device-height, orientaion(기기화면방향, landscape, portrait)  </li>\r\n                                            <li> aspect-ratio(화면비율), device-aspect-ratio, color(기기의비트수?) , color-index(기기의색상수?)  </li>\r\n                                            <li> monochrome(흑백일때픽셀당비트수) , resolution(기기해상도) , scan(tv스캔방식), grid(기기 비트맵,그리드) </li>\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                        <li> <h3> 화면 크기 </h3>\r\n                                            <li> 320 ~ 768 , 769 ~ 1024 , 1024 ~ </li>\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                        <li> <h3> 논리 연산자 </h3>\r\n                                            <li> @media only | not 미디어유형 and | , (조건문) {'{}'} </li>\r\n                                            <li> 논리연산자 : and, not, ,(or) , only(미디어쿼리지원하는브라우저만) </li>\r\n                                        </li>\r\n                                        <li> <h3> 코드 예시 </h3>\r\n                                            <li> @media screen and (max-width: 768px){'{}'} #768px보다 화면이 작을때 적용 </li>\r\n                                            <li> @media screen and (min-width: 768px){'{}'} #768px보다 화면이 클때 적용 </li>\r\n                                            <li> @media screen (min-width:320px) and (max-width:768px){'{}'} #320~768px일때 적용 </li>\r\n                                        </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 밴더 프리픽스(vender prefix)\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 크롬,사파리 </small>\r\n                                        <li> {' 속성: -webkit-스타일; '} </li>\r\n                                        <small> 파이어폭스 </small>\r\n                                        <li> {' 속성: -moz-transform: translate(90px,90px); '} </li>\r\n                                        <small> 오페라 </small>\r\n                                        <li> {' 속성: -o-linear-gradient(); '} </li>\r\n                                        <small> 익스플로러 </small>\r\n                                        <li> {' 속성: -ms-linear-gradient(); '} </li>\r\n                                        <small> 표준 </small>\r\n                                        <li> {' 속성: 스타일; '} </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ CSS 우선순위\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 우선순위 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 1. !important 속성 </li>\r\n                                        <li> 2. 인라인 스타일 </li>\r\n                                        <li> 3. id 속성 </li>\r\n                                        <li> 4. class 속성 </li>\r\n                                        <li> 5. element  </li>\r\n                                        <li> 6. 순서상 나중에 작성한 것이 우선순위 </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 기타 <a name=\"기타\" style={{ visibility: \"hidden\" }}> 기타 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> opactiry : 0.5; #요소의 명암을 조절 </li>\r\n                                        <li> content #html 코드 추가 </li>\r\n                                        <li> z-index #화면에 보일 때 우선순위 </li>\r\n                                        <li> font-variant #폰트의 특성 부여(첨자 등) </li>\r\n                                        <li> !important #우선순위 </li>\r\n                                        <li> text-indent:10px; #들여쓰기 </li>\r\n                                        <li> visibility: [visible, hidden, collapse] #레이아웃을 변경하지 않고 요소를 보이거나 숨김 </li>\r\n                                        <li> pointer-events: [none, auto, inherit] #이벤트 요소를 제어 </li>\r\n                                        <li> order : 플렉스 요소들의 순서를 설정 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CssBasic;","import React from 'react';\r\nimport './CssBlurBusinessCard.css';\r\n\r\nconst CssBlurBusinessCard = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <div className=\"ex_container\">\r\n                    <div className=\"card\">\r\n                        {/* transform: rotate(calc(90deg * var(--i)));  */}\r\n                        <span> </span> {/* html 코드 : style=\"--i:0;\"*/}\r\n                        <span> </span>  {/* html 코드 : style=\"--i:0;\"*/}\r\n                        <span> </span>  {/* html 코드 : style=\"--i:0;\"*/}\r\n                        <span> </span>  {/* html 코드 : style=\"--i:0;\"*/}\r\n                        <div className=\"glass\">\r\n                            <h2> 이수경 <br /> <i> +82 010-7430-9809 </i> </h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"red\"> red </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CssBlurBusinessCard;","import React, { useEffect } from 'react';\r\nimport './CssTextAndVideo.css';\r\nconst CssTextAndVideo = (props) => {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = \"./CssTextAndVideo js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        }\r\n    }, [\"./CssTextAndVideo js\"]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <section className=\"MainContainer\" onMouseMove={(e) => {\r\n                    const dot = document.querySelector('.dot');\r\n                    dot.style.left = (e.clientX) + 'px';\r\n                    dot.style.top = e.clientY + 'px';\r\n                }}>\r\n                    <div className=\"dot\">\r\n                        123\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CssTextAndVideo;\r\n","import React from 'react';\r\n\r\nconst JavaScriptBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JavaScript 문법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 주석 : // , /**/ </li>\r\n                                    <li> let 변수명;  변수명 = 값; #var도 사용이 가능하지만 전역변수이므로 권장하지 않음 </li>\r\n                                    <li> 자바스크립트에서 undefined는 타입이 정해지지 않은 것, 값을 넣지 않을 경우  </li>\r\n                                    <li> 자바스크립트에서 null은 값이 정해지지 않은 경우, null을 넣어주어야함  </li>\r\n                                    <li> 자바스크립트에서 NaN은 값이 표현될 수 없는 경우 #0을 나누거나 문자열과숫자의 연산 등  </li>\r\n                                    <li> const 상수명 = 값; </li>\r\n                                    <li> const 상수명 = true, false; </li>\r\n                                    <li> let 변수명 = {'{\"key\":\"value\", \"key\":\"value\"};'} </li>\r\n                                    <li> const 심볼명 = Symbol(\"문자열\"); #유일하고 변경 불가능한 기본값, 상수와는 또다름 , 독립적인값, 왜 필요한지느 모르겠음 </li>\r\n                                    <li> let a = 10; , a = \"문자열\";  #자바스크립트는 타입이 고정이 되있지 않아서 원하는 값을 바로 넣어줄 수 있다. </li>\r\n                                    <li> 단 타입이 다른 값들끼리 연산이 되지는 않는다. </li>\r\n                                    <li> Number() : 문자를 숫자로 변환 , Number(\"10\"+\"5\")(x) </li>\r\n                                    <li> String() : 숫자나 불린등을 문자형으로 변환 </li>\r\n                                    <li> Boolean() : 문자나 숫자등을 불린형으로 변환 </li>\r\n                                    <li> Object() : 모든 자료형을 객체형으로 변환 </li>\r\n                                    <li> parseInt() : 문자형을 int형으로 변환 </li>\r\n                                    <li> parseFloat() : 문자형을 float형으로 변환 </li>\r\n                                    <li> 산술연산자 : + - * / % **  </li>\r\n                                    <li> 비교연산자 : {'> < >= <= == === != !=='}  </li>\r\n                                    <li> 대입연산자 : =   </li>\r\n                                    <li> 증감연산자 : ++변수 변수++ --변수 변수--   </li>\r\n                                    <li> 논리연산자 : and({'&&'}) or({'||'}) not(!)  </li>\r\n                                    <li> 비트연산자 : {' & | ^ << >> '}  </li>\r\n                                    <li> 삼항연산자 : 변수 = 조건식 ? 참일때 리턴값 : 거짓일때 리턴값  </li>\r\n                                    <li> null병합연산자 : const 변수1 = 변수2 ?? 값(변수2의 값이 null,undefined일경우) </li>\r\n                                    <li> null병합연산자 : 변수나메소드 ?? 변수2 ?? 변수3 ?? \"비어있음\"  </li>\r\n                                    <small> null,undefined일 경우 ?? 사용 , 매개변수로 받는 default연산자는 null에서는 null값을 출력하는 차이가 있음 </small>\r\n                                    <li> 문자열과 문자열을 더하게 되면 하나의 문자열로 만들어진다. </li>\r\n                                    <li> ${'{변수명}'} #이와 같이 사용을 해서 변수를 출력하게 만듬 </li>\r\n                                    <li> 조건문 : if() , else if() , else </li>\r\n                                    <li> 조건문 : swithc(변수)( case 변수값1: 실행문장; break; .... default: 실행문장;   ) </li>\r\n                                    <li> 반복문 : while(조건) </li>\r\n                                    <li> 반복문 : for(초기값; 조건식; 증감식) </li>\r\n                                    <li> 반복문 : continue; #반복문 횟수는 완료되고 반복문의 조건으로 다시 실행  </li>\r\n                                    <li> 배열 : 배열명 = [값1,값2, 값3]; </li>\r\n                                    <li> let 배열명 = new Array(값1, 값2, 값3) </li>\r\n                                    <li> let 배열명 = [\"문자열\",숫자,true] #배열에 여러가지 데이터 타입이 혼합되어 있어도 문제가 발생하지 않는다.`` </li>\r\n                                    <li> let 배열명; 배열[0] = 1; 배열[3] =2; #이와 같이 하여도 배열이 생성이 되고 나머지는 값이 빈 배열 만들어짐 </li>\r\n                                    <li> 배열[인덱스값] #배열 인덱싱 </li>\r\n                                    <li> 배열.length #배열 길이 </li>\r\n                                    <li> 배열.push(값) #배열 마지막에 요소 추가 </li>\r\n                                    <li> 배열.shift() #배열에 첫번째값을 제거</li>\r\n                                    <li> 배열.pop() #배열 뒤쪽에 값을 제거</li>\r\n                                    <li> 배열1.concat(배열2) #2개의 배열을 합침 </li>\r\n                                    <li> 배열.join(\"요소사이에삽입할 문자열\") #배열 요소 사이에 원하는 문자를 삽입해서 문자열?로 리턴 </li>\r\n                                    <li> 배열.reverse() #배열을 역순으로 배치 </li>\r\n                                    <li> 배열.sort() #배열을 오름차순으로 정렬 </li>\r\n                                    <li> 배열반복문 : for(let i in 배열) #배열의 수만큼 반복을 한다. , i는 배열의 인덱스를 가리키는 값이라고 생각 </li>\r\n                                    <li> 배열반복문 : 배열.foreach(function(item, index, arr)) {'{ }'} #배열 요소의 갯수 만큼 반복 , item은 배열값 , arr은 자기자신의배열을 가져옴 </li>\r\n                                    <li> function 사용자정의함수명(매개변수) {'{  }'} #함수 정의(함수 선언식) , 함수 선언식으로 만들면 호이스팅(위치에 상관없이 함수가 에러발생하지 않음)됨 </li>\r\n                                    <li> const 함수명 = function(매개변수) {'{ }'} {'{  }'} #함수 정의 및 선언(함수 표현식) ,\r\n                                        함수표현식으로 작성하면 호이스팅이 되지 않음, 상단에 미리 선언 필요 </li>\r\n                                    <li> 함수명(); #함수 사용 </li>\r\n                                    <li> 프로토타입(클래스라고 생각) : 만들어지면 Object 타입도 같이 상속을 받음 </li>\r\n                                    <li> function 프로토타입(멤버변수, 멤버변수, 멤버변수) {'{ this.변수 = 변수 ... }'} #프로토타입을 정의? </li>\r\n                                    <li> const 객체1 = Object.assign(객체2,객체3); , #객체2,3의 필드를 객체1에 넣어서 하나로 만듬 </li>\r\n                                    <li> const 객체1 = (...객체2,...객체3); , #객체2,3의 필드를 객체1에 넣어서 하나로 만듬(Spread Syntax) </li>\r\n                                    <li> const 프로토타입객체 = new 클래스?(1,2,3); </li>\r\n                                    <li> const 값 = 객체.필드?.(필드의필드); (Optional Chanining) </li>\r\n                                    <li> const {'{멤버변수1,멤버변수2} = 매개변수(객체) '} , #객체에 있는 멤버변수의 이름에 맞춰 멤버변수에 값이 들어간다. </li>\r\n                                    <li> 프로토타입객체.필드명 = 값; #자동으로 프로토타입객체에 필드와 값이 추가가 된다. </li>\r\n                                    <li> 프로토타입.prototype.필드명 = 값 #프로토타입에 필드를 추가하는 방법 </li>\r\n                                    <li> 프로토타입.prototype.메소드명 = function() {'{ 메소드내용 } '} #프로토 타입에 메소드 추가 생성 </li>\r\n                                    <li className=\"sblock\"> <span className=\"sstitle\"> Math객체 </span>\r\n                                        <li> min() : 최솟값 리턴 </li>\r\n                                        <li> max() : 최대값 리턴</li>\r\n                                        <li> round() : 소수점 첫째자리 반올림 </li>\r\n                                        <li> floor() : 소수점 첫째자리 내림 </li>\r\n                                        <li> ceil() : 소수점 첫째자리 올림 </li>\r\n                                        <li> random() : 0~1 리턴 </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\"> <span className=\"sstitle\"> String 객체 </span>\r\n                                        <li> length : 문자열 길이 </li>\r\n                                        <li> indexOf(문자열) : 매개변수가 처음으로 등장하는 위치를 리턴 </li>\r\n                                        <li> charAt(index) : 매개변수로 전달된 인덱스에 위치한 문자를 리턴  </li>\r\n                                        <li> includes(문자열) : 매개변수로 전달된 문자열이 포함되어 있는지 여부 Boolean 리턴 </li>\r\n                                        <li> substring(start_index,end_index) : 시작~종료 인덱스까지 문자열 추출 리턴 </li>\r\n                                        <li> substr(start_index,cout) : 시작인데스부터 원하는 갯수까지 문자열 추출 리턴 </li>\r\n                                        <li> split(구분자) : 문자열을 구분자 를 기준으로 추출해서 배열로 리턴 </li>\r\n                                        <li> replace() : 원본 문자열을 매개변수로 전달된 문자열로 변경 </li>\r\n                                        <li> trim() : 문자열의 앞뒤 공백을 제거 </li>\r\n                                        <li> toUpperCase() : 문자열을 모두 대문자로 변환 </li>\r\n                                        <li> toLowerCase() : 문자열을 모두 소문자로 변환 </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\"> <span className=\"sstitle\"> Data 객체 </span>\r\n                                        <small> 객체이므로 new Data()로 사용 </small>\r\n                                        <li> Date(21,7,16) #1921년 8월 16일 </li>\r\n                                        <li> Date(2021,7,16) #2021년 8월 16일 </li>\r\n                                        <li> Date([1900년도 기준],[0~11],일,시,분,초,밀리초)  </li>\r\n                                        <li> Data객체.getFullYear() : 년</li>\r\n                                        <li> Data객체.getMonth() : 월</li>\r\n                                        <li> Data객체.getDate() : 일</li>\r\n                                        <li> Data객체.getHours() : 시</li>\r\n                                        <li> Data객체.getMinutes() : 분</li>\r\n                                        <li> Data객체.getSeconds() : 초</li>\r\n                                    </li>\r\n                                    <li className=\"sblock\"> <span className=\"sstitle\"> window 객체 </span>\r\n                                        <li> 객체 = window.setTimeout(메소드명,ms); #ms시간 뒤에 메소드 실행 </li>\r\n                                        <li> clearTimeout(객체); #setTimeout 메소드를 취소시킴 </li>\r\n                                        <li> 객체 = window.setInterval(메소드명,ms); #ms시간 마다 메소드 실행 </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\"> <span className=\"sstitle\"> location 객체 </span>\r\n                                        <li> href : </li>\r\n                                        <li> protocol :  </li>\r\n                                        <li> hostname : </li>\r\n                                        <li> pathname : </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\"> <span className=\"sstitle\"> document 객체 </span>\r\n                                        <li> getElementsByTagName() : 해당 태그이름의 요소를 모두 선택 </li>\r\n                                        <li> getElementById : 해당 아이디 요소를 선택</li>\r\n                                        <li> getElementsByClassName() : 해당 클래스 요소를 모두 선택 </li>\r\n                                        <li> getElementsByName() : 해당 name 요소를 모두 선택 </li>\r\n                                        <li> querySelectorAll(css요소 입력) : 해당 선택자 요소를 모두 선택 </li>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\"> <span className=\"sstitle\">  </span>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 자바스크립트 html출력 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li> document.write() #body에 출력 </li>\r\n                                    <li> console.log() #브라우저 콘솔창에 출력 </li>\r\n                                    <li> {'<script src=\"경로.js\"> </script> '} </li>\r\n                                    <li> 'use strict'; #strict mode를 사용, 문법적으로 맞게끔 설정 </li>\r\n                                    <li> alert() 또는 window.alert() : 사용자에게 메세지를 보여주고, 확인을 기다립니다. </li>\r\n                                    <li> confirm() 또는 window.confirm() : 사용자에게 메세지를 보여주고, 확인이나 취소를 누르면 그 결과를 불리언값으로 리턴합니다. </li>\r\n                                    <li> prompt() 또는 window.prompt() : 사용자에게 메세지를 보여주고, 사용자가 입력한 문자열을 리턴합니다. </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaScriptBasic;","import React from 'react';\r\n\r\nconst ReactBasic = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"\">  리액트 공부  </a> </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React 설치방법 <a name=\"React 설치방법\" style={{ visibility: \"hidden\" }}>  React 설치방법 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <ol>\r\n                    <li>  Node.js 설치를하고 cmd에서 설치되었는지 확인, node -v , npm -v </li>\r\n                    <li>  Vscode 설치 </li>\r\n                    <li>  Vscode 터미널에서 cd React시작할폴더명(\\Users\\sk\\Desktop\\git_ssssksss\\CODE) , # 이와같이 입력 </li>\r\n                    <li>  yarn create react-app 리액트폴더 혹은 npm create react-app 리액트폴더명 (폴더생성됨,폴더의이름은 모두 소문자)</li>\r\n                    <li>  만약에 yarn이 설치되지 않는다면 npm install -g yarn </li>\r\n                    <li>  cd 리액트폴더명 </li>\r\n                    <li>  npm start  입력하여서 잘 작동되나 확인 </li>\r\n                  </ol>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리액트 기초 설명 <a name=\"리액트 기초 설명\" style={{ visibility: \"hidden\" }}> 리액트 기초 설명 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <ol>\r\n                    <li> JSX파일로 JS파일과는 차이가 있다. </li>\r\n                    <li> 페이스북에서 만든 오픈 소스 자바스크립트 UI라이브러리 </li>\r\n                    <li> 컴포넌트 형태로 사용이된다. </li>\r\n                    <li> HTML class를 className , for을  htmlFor 와 같이 약간의 차이가 있다. </li>\r\n                    <li> lower Camel Case 방식을 사용한다. </li>\r\n                    <li> .jsx파일은 대문자로 시작한다. </li>\r\n                    <li> {\"{\"}{\"}\"} 중괄호를 이용하면 변수들을 처리한다. </li>\r\n                    <li> 컴포넌트에서 사용한 리소스를 회수하는 것이 중요하다. </li>\r\n                    <li> 싱글 페이지이므로 렌더링을 부분적으로 일어나게 해야한다.</li>\r\n                  </ol>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리액트 깃허브\r\n                <a name=\"리액트 깃허브\" style={{ visibility: \"hidden\" }}> 리액트 깃허브 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 리액트 깃허브에 올리기 </span>\r\n                <span className=\"mblock\">\r\n                  <ol>\r\n                    <li> github에 가서 저장소를 하나 만들기 (read.me 파일없이만들기)</li>\r\n                    <li> 만든 상태로 창을 가만히 놔두기( 복붙할 내용이 존재함)</li>\r\n                    <li> 리액트로 돌아와서 npm install gh-pages --save-dev 입력 </li>\r\n                    <li> 리액트 폴더에 pakage.json 파일을 열어서 아래와 같이 넣어주기</li>\r\n                    <li> 위쪽에 name위에 \"homepage\": \"http://깃허브유저명.github.io/저장소이름\"</li>\r\n                    <li> \"scripts: 부분 안에 \"predeploy\": \"npm run build\",  \"deploy\": \"gh-pages -d build\",</li>\r\n                    <li className=\"col_r\"> 터미널 창에 git init 입력 (깃폴더 생성됨)</li>\r\n                    <li> 깃허브 창에서 git remote ~ 부분을 복붙해서 붙여넣기 </li>\r\n                    <li className=\"col_r\"> npm run deploy <small> build 하는 과정 </small> </li>\r\n                    <li className=\"col_r\">  git add . <small> 깃허브에 올릴 깃을 만드는 과정? </small> </li>\r\n                    <li className=\"col_r\">  git commit -m \"커밋내용\" <small>커밋</small> </li>\r\n                    <li className=\"col_r\">  git push -u origin master <small> 깃허브에 master 브랜치에 push </small> </li>\r\n                    <p> 다음부터는 7,9~12 번만 반복하여서 사용</p>\r\n                  </ol>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 리액트 깃허브 에러 </span>\r\n                <span className=\"mblock\">\r\n                  <li> LF will be replaced by CRLF in .gitignore.\r\n                    The file will have its original line endings in your working directory\r\n                    <span className=\"sblock\">\r\n                      <li> 해석 : LF가 CRLF도 대체 될거다. 파일은 당신의 작업 디렉토리 끝에 줄에 있다. </li>\r\n                      <li>LF(Line-Feed) Mac,Linux \\n , CR(Carriage-Return) Mac \\r , CRLF(Carriage-Return+Line-Feed) Windows,DOS \\r\\n  </li>\r\n                      <li> 경고가 발생한 이유 : Git이 OS마다 줄바꿈 문자열이 달라서 뭘 사용할지 몰라서 </li>\r\n                      <li> 해결방안 : Window, DOS에서는 git config --global core.autocrlf true </li>\r\n                      <li> 해결방안 : Linux, MAC에서는 git config --global core.autocrlf input </li>\r\n                    </span>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리액트 코드 돌려보기 <a name=\"리액트 코드 돌려보기\" style={{ visibility: \"hidden\" }}> 리액트 코드 돌려보기 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Directory <a name=\"React Directory\" style={{ visibility: \"hidden\" }}>  React Directory </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> src/components: 컴포넌트들이 위치하는 디렉토리입니다. </li>\r\n                  <li> src/pages: 각 라우트들이 위치하는 디렉토리 입니다. </li>\r\n                  <li> src/client: 브라우저 측에서 사용할 최상위 컴포넌트 입니다. 우리가 추후 서버사이드 렌더링을 구현 할 것이기\r\n                    때문에 디렉토리를 따로 구분하였습니다. (서버사이드 렌더링을 할 때에는 서버 전용 라우터를 써야합니다.) 여기서 라우터를 설정합니다. </li>\r\n                  <li> src/server: 서버측에서 사용 할 리액트 관련 코드를 여기에 넣습니다. </li>\r\n                  <li> src/shared: 서버와 클라이언트에서 공용으로 사용되는 컴포넌트 App.js 가 여기에 위치합니다. </li>\r\n                  <li> src/lib: 나중에 웹 연동을 구현 할 때 사용 할 API와 코드스플리팅 할 때 필요한 코드가 여기에 위치합니다. </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React 함수 <a name=\"React 함수\" style={{ visibility: \"hidden\" }}> React 함수 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶  React 조건문 <a name=\"React 조건문\" style={{ visibility: \"hidden\" }}> React 조건문 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React 반복문 <a name=\"React 반복문\" style={{ visibility: \"hidden\" }}> React 반복문 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Props <small> 컴포넌트간에 state값이나 변수를 주고 받는 방법 </small>\r\n                <a name=\"React Props\" style={{ visibility: \"hidden\" }}> React Props </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Class Component\r\n                <a name=\"React Component\" style={{ visibility: \"hidden\" }}> React Component </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 클래스 컴포넌트의 장단점 </span>\r\n                <span className=\"mblock\">\r\n                  <li className=\"col_be\"> state관리와 라이프 사이클의 사용때문에 기존에 사용 </li>\r\n                  <li className=\"col_be\">  </li>\r\n                  <li className=\"col_r\"> 코드가 길고 복잡  </li>\r\n                  <li className=\"col_r\"> 부분적인 재사용이 어려움  </li>\r\n                  <li className=\"col_r\">   </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 클래스 컴포넌트 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React, {Component} from \"react\"; '} </li> <br />\r\n                    <li> class App extends React,Component {'{'}\r\n                      <li> render() {'{'}\r\n                        <li> return(\r\n                          <li> {' <div> </div>'} </li>\r\n                        </li>\r\n                        <li> ); </li>\r\n                      </li>\r\n                      <li> {'}'} </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Class - React Context <small> 하위 컴포넌트에 state값을 props를 이용하지 않고 주기 </small>\r\n                <a name=\"React Class - React Context\" style={{ visibility: \"hidden\" }}> React Class - React Context </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 클래스 컨텍스트 예시 </span> <br />\r\n                <span className=\"sstitle\"> App.js </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React, {Component} from \"react\"; '} </li> <br />\r\n                    <li> class App extends React,Component {'{'}\r\n                      <li> render() {'{'}\r\n                        <li> return(\r\n                          <li> {' <div> </div>'} </li>\r\n                        </li>\r\n                        <li> ); </li>\r\n                      </li>\r\n                      <li> {'}'} </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Hooks - functional Component\r\n                <a name=\"React Hooks\" style={{ visibility: \"hidden\" }}> React Hooks </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 함수형 컴포넌트 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> return(\r\n                        <li> {' <div> </div>'} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Hooks - useState\r\n                <a name=\"React useState\" style={{ visibility: \"hidden\" }}> React useState </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 컴포넌트에서 동적인 상태값을 이용할 때 사용  </li>\r\n                  <li> const [state값,setState값] = useState(0); <small> 첫번쨰 값은 저장 변수, 두번쨰 값은 갱신함수 </small>  </li>\r\n                  <li> set상태값 이 변하게 되면 하위 컴포넌트까지 re-rendering이 된다.  </li>\r\n                  <li> set상태 함수는 비동기로 동작 , 아래와 같은경우 1번만 증가\r\n                    <li>  set상태값(상태값+1) </li>\r\n                    <li>  set상태값(상태값+1) </li>\r\n                    <li>  아래와 같이 사용하면 문제 해결 </li>\r\n                    <li>  set상태값({'prev상태값 => prev상태값 + 1'}) </li>\r\n                    <li>  set상태값({'prev상태값 => prev상태값 + 1'}) </li>\r\n                  </li>\r\n                  <li>   </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 - 버튼을 클릭하면 1씩 증가 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> const [count,setCount] = useState(0); </li>\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> {'<button onClick={()=>setCount(count+1)}> +1증가 버튼 </button>'} </li>\r\n                          <li> {'카운트 : {count}'} </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시2 - 2개의 입력값을 받았을 떄 변경 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> {' const [inputs,setInputs] = useState({ '}\r\n                        <li> input1: '', </li>\r\n                        <li> input2: ''  </li>\r\n                      </li>\r\n                      <li> {' }); '} </li> <br />\r\n                      <li> {' const {input1, input2} = inputs; '} <small> inputs 상태값을 변수로 만듬 </small> </li> <br />\r\n                      <li> {' const onChange = (e) => { '}\r\n                        <li> {' const { name , value } = e.target; '}\r\n                        </li>\r\n                        <li> {'setInputs({ '}\r\n                          <li> ...inputs, </li>\r\n                          <li> [name]: value </li>\r\n                        </li>\r\n                        <li> {''} </li>\r\n                        <li> {'});'} </li>\r\n                      </li>\r\n                      <li> {' }; '} </li> <br />\r\n                      <li> {' const onReset = () => { '}\r\n                        <li> {'setInputs({ '}\r\n                          <li> input1: '', </li>\r\n                          <li> input2: '', </li>\r\n                        </li>\r\n                        <li> {'})'} </li>\r\n                      </li>\r\n                      <li> {' }; '} </li> <br />\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> {' <input name=\"input1\" onChange={onChange} value={input1} />  '} </li>\r\n                          <li> {' <input name=\"input2\" onChange={onChange} value={input2} />  '} </li>\r\n                          <li> {' <button onClick={onReset} > 초기화 </button> '} </li>\r\n                          <li> {' <div>  {input1} : {input2} </div> '} </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Hooks -  useRef\r\n                <a name=\"React useRef\" style={{ visibility: \"hidden\" }}> React useRef </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> React useRef 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 특정 DOM을 선택할 떄 사용 </li>\r\n                  <li> input이나 textarea 등에 focus() 를 할 떄 사용 </li>\r\n                  <li> 득정 DOM의 스크롤 위치를 가져올 때 </li>\r\n                  <li> 외부 라이브러리를 사용할 때   </li>\r\n                  <li> Ref의 사용은 최대한 안하는 것이 좋다. </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React, {useRef } from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> const inputRef = useRef(); </li>\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> {' <input ref={inputRef} /> '} </li>\r\n                          <li> {' <button onClick={()=> {inputRef.current.focus() }}> 버튼1 </button> '} </li>\r\n                          <li> {' <button onClick={()=> {inputRef.current.value=\"123\"; }}> 버튼2 </button> '} </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Class - useEffect\r\n                <a name=\"React useEffect\" style={{ visibility: \"hidden\" }}> React useEffect </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Hooks - useEffect <small> 상태값이 변할 때 렌더링 </small>\r\n                <a name=\"React useEffect\" style={{ visibility: \"hidden\" }}> React useEffect </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 랜더링이 될 때마다 실행이 된다. </li>\r\n                  <li> useEffect [상태값 등]배열에 값이 변할 때 마다 렌더링을 하게 해준다. 만약에 비워두면\r\n                    처음에 렌더링 될 때만 실행되고 이후에는 실행되지 않는다.  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {'import React, { useState, useEffect } from \"react\"; '} </li> <br />\r\n                    <li> {'const [num,setNum] = useState(0); '} </li>\r\n                    <li> {' useEffect(()=>{ '}\r\n                      <li> {' console.log(\"test useeffct\"); '} </li>\r\n                      <li> {' return() => { '} </li>\r\n                      <li> {'   console.log(\"test end useeffct\"); '} </li>\r\n                      <li> {' }; '} </li>\r\n                    </li>\r\n                    <li> {'},[num]);'} </li>\r\n                    <li> const App = () {'=> {'}\r\n                      <li>  </li>\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> {' <p> 숫자 : {num} </p> '} </li>\r\n                          <li> {' <button onClick={()=>{setNum(prevNum => prevNum + 1)}}> 1 </button> '} </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Router - React library\r\n                <a name=\"React Router\" style={{ visibility: \"hidden\" }}> React Router </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> React Router 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> npm install react-router-dom </li>\r\n                  <li> yarn add react-router-dom </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> React Router 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> import React, {'{ Component }'} from 'react'; </li>\r\n                    <li> import {'{ BrowserRouter, Route, Switch, Link }'} from 'react-router-dom'; </li>\r\n                    <li> import Home from './inc/home.js' </li>\r\n                    <li> import Home1 from './inc/Home1.js' </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> return(\r\n                        <li> {' <div className=\"App\">'}\r\n                          <li> {' <BrowserRouter> '}\r\n                            <li> {'<p> <Link to=\"/\">Home</Link> </p>'} </li>\r\n                            <li> {'<p> <Link to=\"/home1\">Home1</Link> </p>'} </li>\r\n                            <li> {' <Switch> '}\r\n                              <li> {' <Route path=\"/\" exact component={Home}></Route> '} </li>\r\n                              <li> {' <Route path=\"/home1\" component={Home1}></Route> '} </li>\r\n                            </li>\r\n                            <li> {' </Switch> '} </li>\r\n                          </li>\r\n                          <li> {' </BrowserRouter> '} </li>\r\n                        </li>\r\n                        <li> {'     </div> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Emmet\r\n                <a name=\"React Emmet\" style={{ visibility: \"hidden\" }}> React Emmet </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Redux - library\r\n                <a name=\"React Redux\" style={{ visibility: \"hidden\" }}> React Redux </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> npm i react-redux redux </li>\r\n                  <li> yarn add redux react-redux redux-devtools-extension redux-logger </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 상위 디렉토리에서 1단계 하위디렉토리가 아닌 몇 단계 디렉토리에 state값을 줄 수 있음 </li>\r\n                  <li> 바뀌는 값들을 버전을 관리하는 것처럼 볼 수 있음 </li>\r\n                  <li> action, component, reducer, store 폴더로 구성\r\n                    <li> action : store에 직접 접근 , 컴포넌트에서 바로 store로 접근 불가능\r\n                      <li> 모든 액션 객체는 type이라는 값을 가져야 한다. </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> store : state를 모아놓은 공간</li>\r\n                    <li> reducer : 문지기 역할\r\n                      <li> old state + action = new state를 하는 과정 </li>\r\n                      <li> {' const [<상태 객체>, <dispatch 함수>] = useReducer(<reducer 함수>, <초기 상태>, <초기 함수>) '} </li>\r\n                      <li> state와 action객체를 인자로 받아서 new state 객체를 반환하는 함수 </li>\r\n                      <li> reducer함수는 old state와 action객체를 인자로 받아서 new state를 반환하는 함수 </li>\r\n                      <li> dispatch 함수는 컴포넌트에서 action객체를 받아 reducer함수에 넘김 </li>\r\n                      <li> action객체는 type(어떤 행동인지) + data(행동과 관련되 데이터) </li>\r\n                      <li> {' component(old state) -> action -> dispatch -> reducer -> component(new state) '} </li>\r\n                    </li>\r\n                    <li> component :  </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Event\r\n                <a name=\"React Event\" style={{ visibility: \"hidden\" }}> React Event </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> Mouse </span>\r\n                <span className=\"mblock\">\r\n                  <li> onClick </li>\r\n                  <li> onContentMenu </li>\r\n                  <li> onDoubleClick </li>\r\n                  <li> onDrag </li>\r\n                  <li> onDragEnd </li>\r\n                  <li> onDragEnter </li>\r\n                  <li> onDragExit </li>\r\n                  <li> onDragLeave </li>\r\n                  <li> onDragOver </li>\r\n                  <li> onDragStart </li>\r\n                  <li> onDrop </li>\r\n                  <li> onMouseDown </li>\r\n                  <li> onMouseEnter </li>\r\n                  <li> onMouseLeave </li>\r\n                  <li> onMouseMove </li>\r\n                  <li> onMouseOut </li>\r\n                  <li> onMouseOver </li>\r\n                  <li> onMouseUp </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> Keyboard</span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  Event </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ React Css <a name=\"React Css\" style={{ visibility: \"hidden\" }}>  React Css </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li>\r\n                    <li> {' import \"./style.css\"; '}  </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> {' <button> 버튼 </button> '} </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시2 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> {' const 스타일명 = { '}\r\n                        <li> width: 100px, </li>\r\n                        <li> height: 100px </li>\r\n                      </li>\r\n                      <li> {' }; '} </li>\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> {' <button style={스타일명}> 버튼 </button> '} </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ styled-components - React library\r\n                <a name=\"styled-components\" style={{ visibility: \"hidden\" }}> styled-components </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> styled-components 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> npm i styled-components </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> styled-components 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li> css 파일을 이용하지 않고 jsx파일에서 태그나 컴포넌트에 스타일을 주는 방법 </li>\r\n                  <li> Css in Js </li>\r\n                  <li> ` (Back quoto) 기호 사용 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> styled-components 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li>\r\n                    <li> {' import styled from \"styled-components\"; '} </li>\r\n                    <li> {' import 컴포넌트 from \"./경로\"; '} </li> <br />\r\n                    <li> const App = (props) {'=> {'}\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li>  {' <컴포넌트> </컴포넌트> '} </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li> <br />\r\n                    <li> const 컴포넌트 = styled.태그`\r\n                      <li> width: 100%; </li>\r\n                      <li> height: 100%; </li>\r\n                      <li> color: {'${(props) => props.color || \"red\" }; '} </li>\r\n                      <small> props로 color값을 받아오면 받아온 색을 아니면 정해놓은 색을 사용 </small> <br />\r\n                      <li> {' ${(props) => props.color && css` '}\r\n                        <li> color: white; </li>\r\n                        <li> background: white; </li>\r\n                      </li>\r\n                      <li> {' `}`; '} </li>\r\n                    </li>\r\n                    <li> `; </li>\r\n                    <li> const 컴포넌트 = styled(컴포넌트)`\r\n                      <li> width: 100%; </li>\r\n                      <li> height: 100%; </li>\r\n                    </li>\r\n                    <li> `; </li>\r\n                    <li> styled.태그명`\r\n                      <li> width: 100%; </li>\r\n                      <li> height: 100%; </li>\r\n                    </li>\r\n                    <li> `; </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 예시 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> {' import React from \"react\"; '} </li> <br />\r\n                    <li> const App = () {'=> {'}\r\n                      <li> return(\r\n                        <li> {'<> '}\r\n                          <li> </li>\r\n                        </li>\r\n                        <li> {'</> '} </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> export default App; </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReactBasic;","import React from 'react';\r\n\r\n\r\nconst ReactJavaScript = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 리액트에서 자바스크립트 사용하는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> react-script-tag 사용 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> import ScriptTag from 'react-script-tag'; </li>\r\n                                    <li> const Demo = props =&gt; ( </li>\r\n                                    <li> {'<ScriptTag type=text/javascript\" src=\"/path/to/resource.js\" /> '} </li>\r\n                                    <li> ) </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Helmet 사용 </span>\r\n                                <small>  react-script-tag보다 무거움 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> {' import {Helmet} from \"react-helmet\"; '} </li>\r\n                                    <li> const Demo = props =&gt; ( </li>\r\n                                    <li> {' <div className=\"application\"> '} </li>\r\n                                    <li> &nbsp; {'<Helmet>'} </li>\r\n                                    <li> &nbsp; {'<ScriptTag type=text/javascript\" src=\"/path/to/resource.js\" />'} </li>\r\n                                    <li> &nbsp; {'</Helmet>'} </li>\r\n                                    <li> &nbsp; {'</div>'} </li>\r\n                                    <li> &nbsp; </li>\r\n                                    <li> ); </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReactJavaScript;","import React from 'react';\r\n\r\nconst ReactVscode = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Reactjs code snippets\r\n                                <a name=\"Reactjs code snippets\" style={{ visibility: \"hidden\" }}> Reactjs code snippets </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 설치 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Extensions에서 Reactjs code snippets 검색해서 설치 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 짧은 명령어로 리액트의 구조(skeleton)을 만들어 낼 수 있다. </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 사용 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> rcc : 클래스형 컴포넌트 구조 </li>\r\n                                    <li> rsc : 함수형 컴토넌트 구조 </li>\r\n                                    <li> rrc : class component skeleton with react-redux connect </li>\r\n                                    <li> rccp : class component skeleton with prop types after the class </li>\r\n                                    <li> rcjc : class component skeleton without import and defalut export lines </li>\r\n                                    <li> rcfc : class component skeleton that contains all the lifecycle methods  </li>\r\n                                    <li> rwwd : class component withou import statements  </li>\r\n                                    <li> rpc : class pure component skeleton with prop types after the class </li>\r\n                                    <li> rscp : stateless component with prop types skeleton </li>\r\n                                    <li> rsf : stateless named function skeleton </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReactVscode;","import React from 'react';\r\n\r\nconst FrontendBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 검색 엔진 최적화(SEO) <a name=\"검색 엔진 최적화(SEO)\" style={{ visibility: \"hidden\" }}> 검색 엔진 최적화(SEO) </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/* \r\n                                테크니컬 SEO , 콘텐츠 SEO , 자체 평가 알고리즘, 크롤링 , 인덱싱\r\n                            */}\r\n                                <span className=\"sstitle\"> 키워드 관리 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 특정 키워드의 위치나 갯수가 SEO 평가 알고리즘에서 중요한 부분 </li>\r\n                                    <li> 검색이 잘 되지만 경쟁사와 겹치지 않는 키워드 그리고 롱테일(3개의 이상 단어 조합)을 사용하여\r\n                                        노출 효과를 올린다. </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> title </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 검색엔진의 제목 부분에 표시 될 수 있는 정보 </li>\r\n                                    <li> 다른 경쟁사와 독창적이며 명확한 키워드가 필요 </li>\r\n                                    <li> 사이트 내부 페이지 마다 구별 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> URL </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 컨텐츠와 연관된 단어가 들어가는 것이 좋고, 매개변수가 들어가 있는 것은 좋지 않음 </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> canonical 태그 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> rel=\"canonical\" 를 html 링크태그에 추가해서 사용 , head태그 내부에 위치 </li>\r\n                                    <li> 검색엔진 크롤러에게 대표 URL이 무엇인지 명시하는 역할 </li>\r\n                                    <li> 중복되는 콘텐츠 페이지가 있어서 패널티를 받아야 하지만 캐노니컬을 사용하여 방지를 할 수 있다. </li>\r\n                                    <li> 웹, 모바일을 구분하여 도메인을 나눠놓을경우 점수가 분산이 되고 패널티도 받을 수 있는 것을 방지 </li>\r\n                                    <li> + ref=\"nofollow\" 페이지의 인지도를 링크된 페이지로 전달하지 말라는 속성 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ robot.txt <a name=\"robot.txt\" style={{ visibility: \"hidden\" }}> robot.txt </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사이트 위치 안내, 크롤러가 웹페이지의 정보를 수집하는 것을 차단 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 정보 수집을 차단하는 이유는 검색 엔진의 평가에 부정적인 영향을 끼칠 수 가 있음\r\n                                        중복된 컨텐츠를 크롤러가 부정적으로 판단하여 SEO에서의 평가가 낮아짐\r\n                                    </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 브라우저의 랜더링 과정 <a name=\"브라우저의 랜더링 과정\" style={{ visibility: \"hidden\" }}> 브라우저의 랜더링 과정 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 렌더링 : 브라우저의 화면에 표시해주는 역할 </span>\r\n                                <span className=\"mblock\">\r\n                                    <ol>\r\n                                        <li> 브라우저가 렌더링할 문서(html,css)를 나누어서 읽음  </li>\r\n                                        <li> 브라우저가 문서를 파싱(분석하고 변환)을 함  </li>\r\n                                        <li> html은 DOM tree 구조로 변환하고 css는 CSSOM tree 구조로 변환 </li>\r\n                                        <li> 렌더 트리 구축 : 생성된 DOM tree와 CSSOM tree를 Attachment 과정을 통해 Render tree(텍스트와 스타일로 구성된트리)로 만든다. </li>\r\n                                        <small> display:none 속성은 Render tree에 포함되지 않는다. </small>\r\n                                        <li> 렌더 트리 배치(Layout,Reflow) : 각 노드들의 위치와 크기를 계산하고 px단위로 변환 </li>\r\n                                        <li> 렌더 트리 그리기(Paint) : 브라우저 실제 화면에 그림 </li>\r\n                                        <small> 복잡한 스타일(그라데이션, 그림자효과)은 시간이 오래 걸림 </small>\r\n                                        <li> 렌더링 최적화 : 특정 액션이나 이벤트에 따라 요소 값이 변하면 영향을 받는 모든 노드들은\r\n                                            렌더 트리 배치 과정(Reflow)을 다시 수행하고 다시 화면에 그려준다.(Repaint) </li>\r\n                                        <span className=\"sblock\">\r\n                                            <ul>\r\n                                                <span className=\"sstitle\"> 렌더링 일어나는 경우 </span>\r\n                                                <li> 페이지 초기 렌더링 시 </li>\r\n                                                <li> 브라우저 뷰포트 변경될 때 </li>\r\n                                                <li> 노드가 추가되거나 제거 될 때 </li>\r\n                                                <li> 요소의 위치나 크기가 변경 될 때 </li>\r\n                                                <li> 폰트 변경이나 이미지 크기가 변경 될 때 </li>\r\n                                            </ul>\r\n                                        </span>\r\n                                        <span className=\"sblock\">\r\n                                            <ul>\r\n                                                <span className=\"sstitle\"> 렌더링을 최소화 하는 방법</span>\r\n                                                <small> Reflow가 발생하면 Repaint 무조건 발생 </small>\r\n                                                <li> Reflow 속성 </li>\r\n                                                <span className=\"mblock\">\r\n                                                    <li> position, width, height, left, top, right, bottom, margin, padding, border,\r\n                                                        border-width, clear, display, float, font-family, font-size, font-weight,\r\n                                                        line-height, min-height, overflow, text-align, vertical-align, white-space... </li>\r\n                                                </span>\r\n                                                <li> Repaint 속성 </li>\r\n                                                <span className=\"mblock\">\r\n                                                    <li> background, background-image, background-position, background-repeat,\r\n                                                        background-size, border-radius, border-style, box-shadow, color, line-style,\r\n                                                        outline, outline-color, outline-style, outline-width, text-decoration,\r\n                                                        visibilty... </li>\r\n                                                </span>\r\n                                                <li> 레이아웃의 변화가 많은 요소는 absolute, fixed를 사용하여 주변 노드들의 영향을 최소화하여\r\n                                                    렌더링을 비교적 덜 발생하게 만든다. </li>\r\n                                                <li> 애니메이션에서 이동 거리를 작게 여러번 움직이면 부드럽지만 성능이 안좋아지고\r\n                                                    이동 거리를 크게 몇번에 움직이면 덜 부드럽지만 성능이 개선된다.  </li>\r\n                                            </ul>\r\n                                        </span>\r\n                                    </ol>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ HTML, CSS 좋은 습관 <a name=\"HTML, CSS 좋은 습관\" style={{ visibility: \"hidden\" }}> HTML, CSS 좋은 습관 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> CSS를 잘 사용하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <ol>\r\n                                        <li> * 와일드 카드안에 margin, box-sizing 정도만 사용한다. (왠만하면 사용x)  </li>\r\n                                        <li> 각 스타일 마다 기본 속성을 파괴하지 않는다.  </li>\r\n                                        <small> h1태그의 글자크기 변경x, span태그의 속성을 block으로 변경x </small>\r\n                                        <li> 시멘틱 태그를 사용하기 </li>\r\n                                        <small> - 개발자가 유지보수하기 좋고, 가독성이 올라간다.  </small> <br />\r\n                                        <small> - SEO가 판단하기 좋다 </small> <br />\r\n                                        <small> - 스크린 리더 활용에 좋다고 한다. </small> <br />\r\n                                        <li> h1,h2 태그를 잘 작성하는 것은 SEO의 판단에 좋은 영향을 준다. </li>\r\n                                        <li> 사람들이 많이 사용하는 css라이브러리, 애니메이션 라이브러리를 사용해서 통일성을 줄것 </li>\r\n                                        <small> 슬라이더, 아코디언, 체크박스, 인풋, 네비게이션 바 </small>\r\n                                        <li> img 태그에 width를 변경하는 것이 아니라 figure 태그 등으로 감싸고 그 사이즈에 맞게 디자인 하기 </li>\r\n                                        <small> img태그를 사용하는 것 보다 div태그에 background-image를 사용해주는 것을 추천  </small>\r\n                                        <li> !important 사용 자제하기, 나중되면 !important 끼리 충돌하게 되면... 전체적으로 수정을 해야 할 수도 있다. </li>\r\n                                        <li> before, after 사용하기 </li>\r\n                                        <li> flex , grid 사용하기 </li>\r\n                                        <li> 인터렉션 효과 사용하기 </li>\r\n                                        <li> 전처리도구(SASS, SCSS, Less , Stylus) 사용하기  </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </ol>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FrontendBasic;","import React from 'react';\r\n\r\nconst FrontBrowserDevTool = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Elements 항목 <a name=\"Elements 항목\" style={{ visibility: \"hidden\" }}> Elements 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Console 항목 <a name=\"Console 항목\" style={{ visibility: \"hidden\" }}> Console 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Sources 항목 <a name=\"Sources 항목\" style={{ visibility: \"hidden\" }}> Sources 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Network 항목 <a name=\"Network 항목\" style={{ visibility: \"hidden\" }}> Network 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Performance 항목 <a name=\"Performance 항목\" style={{ visibility: \"hidden\" }}> Performance 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Memory 항목 <a name=\"Memory 항목\" style={{ visibility: \"hidden\" }}> Memory 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Application 항목 <a name=\"Application 항목\" style={{ visibility: \"hidden\" }}> Application 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Security 항목 <a name=\"Security 항목\" style={{ visibility: \"hidden\" }}> Security 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Lighthouse 항목 <a name=\"Lighthouse 항목\" style={{ visibility: \"hidden\" }}> Lighthouse 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FrontBrowserDevTool;","import React from 'react';\r\n\r\nconst FrontendRegex = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 정규 표현식 문법\r\n                                <a name=\"정규 표현식 문법\" style={{ visibility: \"hidden\" }}> 정규 표현식 문법 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> <h4> r : 문자열 그대로 출력 </h4>\r\n                                        <li> str = r\"123\\n\"  </li>\r\n                                    </li>\r\n                                    <li> <h4> [abc] : 각각의 문자(\"a\" \"b\" \"c\")를 뜻함 </h4>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> <h4> [a-z] [A-Z] [0-9] : 문자 범위를 뜻함 </h4>\r\n                                        <li> [a-f] </li>\r\n                                        <li> [a-zA-Z0-9] : 모든 문자와 숫자 </li>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> <h4> ^[] : 범위에 포함되는 문자들을 제외한 나머지 </h4>\r\n                                        <li> </li>\r\n                                    </li>\r\n                                    <li> <h4> . : 모든문자(한개)를 의미 </h4>\r\n                                        <li> </li>\r\n                                    </li>\r\n                                    <li> <h4>  </h4>\r\n                                        <li> </li>\r\n                                    </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FrontendRegex;","import React from 'react';\r\n\r\nconst DBOracleBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n\r\n                    <span className=\"mtitle\"> <a name=\"MySQL Study\">  OracleDB 공부  </a> </span>\r\n                    <ul>\r\n                        <p> cmd창으로 접속 방법 : sqlplus 유저명/비번 </p>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"기본용어,추가내용\"> 기본용어,추가내용 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 기본용어</span>\r\n\r\n                                <li> 스키마 : 사용자가 생성한 객체(테이블,인덱스,프로시저,뷰 등), DBMS마다 차이가 있음 </li>\r\n                                <li> 테이블 : DB데이터(레코드)를 정렬하여 보관하고 있는 단위 , 테이블을 컬럼(필드)과 레코드로 구성되어있다. </li>\r\n                                <li> 레코드 : 한 객체에 대한 정보, 테이블에 가로줄 , ex{\")\"} 한명의 유저의 아이디,비밀번호,이메일 등을 가지고 있는 단위 </li>\r\n                                <li> 컬럼,필드 : 객체에 있는 속성들을 정의하는 단위, ex{\")\"} 컬럼 종류 : 아이디, 비밀번호, 이메일, 부서, 나이 등등 </li>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 추가내용 </span>\r\n\r\n                                <li> 실행순서 : FROM - ON - JOIN - WHERE - GROUP BY , HAVING, SELECT, ORDER BY </li>\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"데이터베이스 관련\"> 데이터베이스 관련 </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 모든 유저 조회 </span>\r\n                                <li> SELECT * FROM ALL_users; </li>\r\n                                <span className=\"sstitle\"> 특정 유저 조회 </span>\r\n                                <li> SELECT 유저명 FROM ALL_users; </li>\r\n                                <span className=\"sstitle\"> 모든 DB(스키마) 확인 </span>\r\n                                <li>  SELECT * FROM DBA_users; </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>   </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"테이블 관련\"> 테이블 관련 </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 테이블의 컬럼 조회 </span>\r\n                                <li> DESC 테이블명; , 역순 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>   </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>   </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"유저 관련 설정\">  유저 관련 설정 </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 유저 생성 </span>\r\n                                <li> create user c##유저명 identified by 비번; </li>\r\n                                <span className=\"sstitle\"> 접속 유저 변경 </span>\r\n                                <li> conn c##유저명/비번; (connect 권한이 필요) </li>\r\n                                <span className=\"sstitle\"> 접속사용자 확인 </span>\r\n                                <li> show user; </li>\r\n                                <span className=\"sstitle\"> 유저 비번 변경 </span>\r\n                                <li>  ALTER USER c##유저명 IDENTIFIED BY 변경할 비번; </li>\r\n                                <span className=\"sstitle\"> 사용자가 가진 테이블 목록을 보여준다. </span>\r\n                                <li> SELECT tname FROM tab; </li>\r\n                                <span className=\"sstitle\"> 유저 삭제 </span>\r\n                                <li> DROP USER c##유저명; </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Grant\">  Grant </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> GRANT </span>\r\n                                <li> GRANT @ TO C##유저명; </li>\r\n                                <span className=\"mblock\">\r\n\r\n                                    <span className=\"sstitle\"> @에 들어가는 코드 </span>\r\n                                    <li> CONNECT </li>\r\n                                    <li> RESOURCE </li>\r\n                                    <li> CREATE VIEW : 뷰 생성</li>\r\n                                    <li> CREATE PROCEDURE : 프로시저 생성 </li>\r\n                                    <li> CREATE SEQUENCE : 시퀸스 생성 </li>\r\n                                    <li> DBA </li>\r\n                                    <li> CREATE USER : 유저생성 </li>\r\n                                    <li> SELECT ANY TABLE : 모든 유저 테이블 조회 </li>\r\n                                    <li> CREATE ANY TABLE : 모든 유저 테이블 생성 </li>\r\n                                    <li> CREATE session : 데이터 베이스 접속 </li>\r\n                                    <li> CREATE table : 테이블 생성 </li>\r\n                                    <li> SYSDBA : 데이터베이스관리 최고권한(사용 비추) </li>\r\n                                    <li> SYSOPER : 데이터베이스 관리 권한 </li>\r\n                                    <li> GRANT 권한명 TO 롤명 </li>\r\n                                    <li> GRANT 롤명 TO 사용자명 </li>\r\n                                    <li>  </li>\r\n\r\n                                </span>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"함수\">  함수 </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 그룹 함수 </span>\r\n                                <li> SUM() , AVG() , COUNT() , MAX() , MIN() </li>\r\n                                <li> STDDEV()(=표준편차) , VARIANCE()(=분산)  </li>\r\n                                <li> GROUP BY 컬럼 HAVING 조건 </li>\r\n                                <span className=\"sstitle\"> 단일 함수 </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> 일반 함수 </span>\r\n                                <li> NVL(NOT NULL일떄,NULL일때) </li>\r\n                                <li> NVL2(@,@ = NOT NULL일떄, @ = NULL일때) , 삼항연산느낌</li>\r\n                                <li> DECODE(컬럼,데이터값,'@',데이터값,'@',.기본결과) , 스위치문이라고 생각</li>\r\n                                <li> CASE WHEN 조건1 then 데이터값1 WHEN 조건2 then 데이터값2 end 별명? from 테이블; </li>\r\n                                <span className=\"sstitle\"> 변환 함수 </span>\r\n                                <li> TO_CHAR(숫자-&gt;문자), TO_DATE(문자-&gt;숫자) , TO_NUMBER(문자-&gt;숫자) </li>\r\n                                <li> YYYY,YY,MM,MON,DD,DAY,DY,AM,PM,HH,HH12,HH24,MI,SS,A.M,P.M </li>\r\n                                <li> TO_CHAR(컬럼,'$999,999,999') , 제일 앞에 $붙이고 3자리마다 쉼표를 붙임 </li>\r\n                                <span className=\"sstitle\"> 날짜 함수 </span>\r\n                                <li> SYSDATE(현재날짜), MONTHS_BETWEEN(@1,@2) , ADD_MONTHS(컬럼,개월수), NEXT_DAY </li>\r\n                                <li> ROUND, TRUNC, LAST_DAY(달의마지막날짜반환), EXTRACT([YEAR,MONTH,DAY,HOUR,MINUTE,SECOND] FROM 날짜) </li>\r\n                                <span className=\"sstitle\"> 숫자 함수 </span>\r\n                                <li> ABS, COS, EXP, FLOOR, LOG, POWER(m,n), SIN, TAN, ROUND </li>\r\n                                <li> TRUNC(자릿수 버림), MOD(나머지), SIGN(n) -1,0,1 </li>\r\n                                <span className=\"sstitle\"> 문자 함수 </span>\r\n                                <li> LOWER, UPPER, INITCAP(첫대문자) ,CONCAT(열연결), SUBSTR,SUBSTRB(@,시작위치,추출갯수) </li>\r\n                                <li> LENGTH, LENGTHB, INSTR, INSTRB(@,찾는글자,시작위치,몇번쨰), LPAD,RPAD(@,자릿수,채워넣을기호) </li>\r\n                                <li> CONVERT, CHR(@-&gt;아스키코드) , ASCII(아스키코드-&gt;문자) , REPLACE ,TRIM(@,FROM 컬럼)</li>\r\n                                <li> TRIM([LEADING|TRAILING|BOTH],['@',from 컬럼]) </li>\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Revoke\">  Revoke </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 유저 연결 끊기 </span>\r\n                                <li> REVOKE CONNECT FROM c##유저명; </li>\r\n                                <span className=\"sstitle\"> 유저 권한,sys명령,SQL 끊기 </span>\r\n                                <li> REVOKE 권한,sys명령,SQL on 테이블명 FROM c##유저명; </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Create\"> Create </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 테이블 생성 </span>\r\n                                <li> CREATE TABLE 테이블명(컬럼명 타입 속성) </li>\r\n                                <span className=\"mblock\">\r\n                                    <span className=\"sstitle\"> 데이터타입 </span>\r\n\r\n                                    <li> NUMBER : 숫자 ,소수점저장가능, mysql이나 mariadb에서는 INT 사용</li>\r\n                                    <li> VARCHAR2(데이터크기) : 가변길이 텍스트 </li>\r\n                                    <li> CLOB : 대용량 텍스트 </li>\r\n                                    <li> DATE : 고정길이 날짜 </li>\r\n                                    <li> BLOB : 대용량 이진데이터 </li>\r\n                                    <li> CHAR(데이터크기) : 고정길이 데이터, 문자열 갯수 </li>\r\n                                    <li> NCHAR(데이터크기) : 전세계문자 </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n\r\n                                    <span className=\"sstitle\"> 조건 </span>\r\n\r\n                                    <li> PRIMARY KEY , 중복x + NULL x </li>\r\n                                    <li> FOREGIN KEY , 왜래키  </li>\r\n                                    <li> NOT NULL </li>\r\n                                    <li> DEFAULT 값  </li>\r\n                                    <li> UNIQUE, 중복x </li>\r\n                                    <li> CHECK , 특정 조건에 맞는 데이터만 받음, 선택조건 </li>\r\n                                    <li> INDEX , 인덱스를 지정할 때 사용 </li>\r\n\r\n                                </span>\r\n                                <span className=\"sstitle\"> 테이블 만들기 </span>\r\n                                <li> CREATE TABLE 테이블명 (컬럼 데이터타입 조건...);  </li>\r\n                                <span className=\"sstitle\"> 서브쿼리를 이용하여 테이블 만들기 </span>\r\n                                <li> CREATE TABLE 테이블명 AS 서브쿼리 </li>\r\n                                <span className=\"sstitle\"> DB유저들과 권한은 유지하면서 테이블을 다시 만드는 방법  </span>\r\n                                <li>  CREATE OR REPLACE TABLE  테이블명(컬럼</li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>   </li>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Alter\"> Alter </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 테이블 컬럼의 타입과 속성을 변경한다 </span>\r\n                                <li> ALTER TABLE 테이블명 MODIFY(컬럼명 타입, 바꿀컬럼명 타입); </li>\r\n                                <span className=\"sstitle\"> 테이블 컬럼 추가 </span>\r\n                                <li> ALTER TABLE 테이블명 ADD(컬럼명 타입); </li>\r\n                                <span className=\"sstitle\"> 테이블 컬럼 삭제 </span>\r\n                                <li> ALTER TABLE 테이블명 DROP(컬럼명1, 컬럼명2) </li>\r\n                                <span className=\"sstitle\"> 테이블 이름 변경 </span>\r\n                                <li> ALTER TABLE 테이블명 RENAME TO 변경할테이블명 </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Drop\"> Drop </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 테이블 삭제 </span>\r\n                                <li> DROP TABLE 테이블명; , 테이블에 레코드가 존재하면 지워지지 않는것으로 알고 있음 </li>\r\n                                <span className=\"sstitle\"> 테이블에 레코드가 있을 떄 강제 삭제 </span>\r\n                                <li> DROP TABLE 테이블명 CASCADE CONSTRAINTS PURGE; </li>\r\n                                {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Truncate\"> Truncate </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 테이블의 모든 레코드 삭제 </span>\r\n                                <li>  TRUNCATE TABLE 테이블명; </li>\r\n                                {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Insert\"> Insert </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 레코드 생성 </span>\r\n                                <li> INSERT INTO 테이블명 VALUES(컬럼값1, 컬럼값2, ...); , 단 컬럼은 순서에 맞게 입력해야 한다. </li>\r\n                                <li> INSERT INTO 테이블명(컬럼명1, 컬럼명2, ...) VALUES(컬럼값1, 컬럼값2, ...);  </li>\r\n                                <li> INSERT INTO 테이블명 (SELECT * FROM 다른테이블) , 스키마가 동일해야 가능  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Update\"> Update </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 조건에 맞는 테이블 레코드의 컬럼값들을 한꺼번에 변경  </span>\r\n                                <li> UPDATE 테이블명 SET salary=4000 WHERE job='clerk'; </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Delete\">  Delete </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 조건에 맞는 테이블 레코드를 삭제 </span>\r\n                                <li> DELETE FROM 테이블명 WHERE 조건문 </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Select\">  Select </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 테이블 특정 컬럼값만 조회 </span>\r\n                                <li> SELECT 컬럼명1,컬럼명2 FROM 테이블명;  </li>\r\n                                <span className=\"sstitle\"> 테이블 모든 컬럼값 조회 </span>\r\n                                <li> SELECT * FROM 테이블명; </li>\r\n                                <span className=\"sstitle\"> 시퀸스 조회 </span>\r\n                                <li> SELECT * FROM 시퀸스명; </li>\r\n                                <span className=\"sstitle\"> 다른 테이블의 (컬럼 혹은 일부 컬럼)만 가져와 (비어있는)테이블 생성 </span>\r\n                                <li> SELECT * INTO 테이블명 FROM 다른테이블 </li>\r\n                                <li> SELECT * INTO 테이블명 FROM (SELECT 컬럼1,컬럼2... FROM 다른테이블) </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Where,On,Like,Between,As,Distinct\"> Where,On,Like,Between,As,Distinct </a> </span>\r\n\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> WHERE, ON </span>\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n                                <li> <small> 둘다 조건을 처리하는 것이 같다. 하지만 ON이 먼저 실행된다. 그래서 OUTER JOIN을 할 때 차이가 발생한다. </small> </li>\r\n                                <li> 아래 2개의 쿼리는 같아보이지만 실행하였을 떄 1번은 OUTER JOIN의 특성을 살리지 못하고 1000보다 작으면 다 지워버린다. </li>\r\n                                <li> ON 테이블1.컬럼 = 테이블2.컬럼 WHERE 테이블1.컬럼 &gt; 1000;</li>\r\n                                <li> ON 테이블1.컬럼 = 테이블2.컬럼 AND 테이블1.컬럼 &gt; 1000; </li>\r\n                            </span>\r\n\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> LIKE </span>\r\n                                <small> LIKE는 대소문자를 구분하여 컬럼값 검색 그러므로 문자열을 대문자나,소문자로 바꾸어서 검색</small>\r\n                                <li> 와일드카드 : %(어떠한 문자든 검색) , _(자릿수 검색) </li>\r\n                                <li> WHERE 컬럼명 LIKE 'MI%' , 대문자 MI로 시작하는 컬럼값 비교 </li>\r\n                                <li> WHERE 컬럼명 LIKE '%KE' , 대문자 KE로 끝나는 컬럼값 검색 </li>\r\n                                <li> WHERE 컬럼명 LIKE '%IK%', 대문자 IK를 포함하는 컬럼값 검색  </li>\r\n                                <li> WHERE 컬럼명 (UPPER)LIKE (UPPER)'%IK%', IK를 포함하는 컬럼값 검색  </li>\r\n                                <li> WHERE 컬럼명 (LOWER)LIKE (LOWER)'%IK%', IK를 포함하는 컬럼값 검색  </li>\r\n                                <li> WHERE 컬럼명 LIKE '%IK%' OR 컬럼명 LIKE '%OH%', IK혹은 OH를 포함하는 컬럼값 검색  </li>\r\n                                <li> WHERE REGEXP _LIKE(컬럼명, 'MIKE|JOHN')  , IK혹은 OH를 포함하는 컬럼값 검색  </li>\r\n                                <li> WHERE 컬럼명 NOT LIKE '%IK%', IK를 포함하지않는 컬럼값 검색  </li>\r\n                                <li> WHERE 컬럼명 LIKE 'MIK_' , MIK + 1글자 를 가진 컬럼값을 검색   </li>\r\n                                <li> WHERE 컬럼명 LIKE '%K_' , %K + 1글자 K라는글자뒤에 1글자가 포함된 컬럼값 검색 </li>\r\n                                <li> WHERE 컬럼명 LIKE '%\\_%' ESCAPE '\\' , 언더바문자(_)를 포함하는 컬럼값 검색 ,\r\n                                    \\문자말고도 아무런 문자 사용이 가능하다. 동일하게만 설정해주면 가능하다 </li>\r\n                            </span>\r\n\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> BETWEEN </span>\r\n                                <li> BETWEEN 시작범위 AND 종료범위 </li>\r\n                                <li> SELECT * FROM emp where employage BETWEEN '10' AND '20' </li>\r\n                                <li>  </li>\r\n                            </span>\r\n\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> AS </span>\r\n                                <small> 테이블의 이름이 길 경우 짧게 이름 지어 사용 </small>\r\n                                <small> AS 별칭(공백x,특수문자x,대소문자x) , 띄어쓰기 별칭(공백,특수문자,대소문자) </small>\r\n                                <li> SELECT * FROM 테이블 A WHERE A.salary &lt; 1000  </li>\r\n                                <li> SELECT salary AS sal FROM 테이블 , 출력이 될 떄 컬럼자리에 sal로 표현이 된다. </li>\r\n                                <li>  </li>\r\n                            </span>\r\n\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> DISTINCT </span>\r\n                                <li> 중복값을 제거해서 조회 </li>\r\n                                <li> SELECT DISTINCT 컬럼명 FROM 테이블; </li>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"In,Order By,Group By, Having\"> In,Order By,Group By, Having </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> IN(다중 OR) </span>\r\n                                <li> WHERE job IN (clerk,manager); </li>\r\n                                <li> WHERE job NOT IN (clerk,manager); </li>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </span>\r\n\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> ORDER BY </span>\r\n                                <li> <small> 출력할 때 순서대로 정렬을 해준다. </small>  </li>\r\n                                <li> 쿼리문 제일 뒤에 Order By 컬럼명,럼럼명 DESC; , 역순 </li>\r\n                                <li> 쿼리문 제일 뒤에 Order By 컬럼명,럼럼명 ASC;  , 오름차순? </li>\r\n                            </span>\r\n\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> GROUP BY </span>\r\n                                <li> <small> 그룹으로 묶어서 결과를 보고싶을때 </small> </li>\r\n                                <li> SELECT class, SUM(score) FROM student GROUP BY class; , 학급별로 시험의 합계를 볼 수 있음 </li>\r\n                                <li>  </li>\r\n                            </span>\r\n\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> HAVING </span>\r\n                                <li> SELECT class, SUM(score) FROM student GROUP BY class HAVING SUM(class) &gt; 100 </li>\r\n                                <li> SELECT count(*), sum(salary) FROM employees GROUP BY dept_no HAVING count(*) &gt; 2 , 부서에 2명이상일 경우 </li>\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"계층형 쿼리\"> 계층형 쿼리  </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> hierarchical(하이커리) </span>\r\n                                <li> <small> 계층형 구조, 오라클 8버전 이상 지원 </small> </li>\r\n                                <li> NODE : 항목 한개 , ROOT : 최상단 노드 , PARENT : 상위 노드 </li>\r\n                                <li> CHILD : 하위 노드 , LEAF : 최하단 노드   </li>\r\n                                <li> LEVEL :  어떤 단계에 있는지 보여주는 컬럼 , SELECT LEVEL ~ </li>\r\n                                <li> START WITH 최상위노드조건: 최상위 루트노드를 지정 </li>\r\n                                <li> CONNECT BY PRIOR 자식노드 = 부모노드 : 부모와 자식노드를 연결 </li>\r\n                                <span className=\"sstitle\"> 일반적인 예시 </span>\r\n                                <li> SELECT LEVEL, ename, empno, mgr FROM emp START WITH mgr IS null CONNECT BY\r\n                                    PRIOR empno = mge  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"트랜잭션\"> 트랜잭션 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 커밋 </span>\r\n                                <li> COMMIT; </li>\r\n                                <li> SET AUTOCOMMIT=1(auto),0(!auto) </li>\r\n                                <li> 자동 COMMIT : 정상 졸료되거나, DDL,DCL명령이 수행된 경우 </li>\r\n                                <span className=\"sstitle\"> 롤백 </span>\r\n                                <li> ROLLBACK; : 이전 커밋까지 복구 </li>\r\n                                <li> ROLLBACK TO SAVAPOINT 롤백세이브명 : 세이브 포인트 지점으로 롤백한다. </li>\r\n                                <li> SAVAPOINT 롤백세이브명 : 세이브 포인트 지점을 저장한다. </li>\r\n                                <li> 자동 ROLLBACK : 비정상종료 된 경우 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Sequence\">  Sequence </a> </span>\r\n\r\n                            <li><small> Unique값을 생성해주는 Oracle객체 </small>    </li>\r\n                            <li><small> 자동으로 증가하는 컬럼 생성가능 </small>   </li>\r\n                            <li><small> 시퀸스는 테이블과 독립적으로 작용하며 여러 테이블에 사용이 가능한다. </small>    </li>\r\n\r\n                            <span className=\"sblock\">\r\n                                <small> 한번에 속성값을 포함하여 한줄로 코딩</small>\r\n\r\n                                <span className=\"sstitle\"> 시퀸스 생성 </span>\r\n                                <li>  CREATE SEAUENCE 시퀸스명 </li>\r\n                                <span className=\"sstitle\"> 시퀸스 시작값 지정 </span>\r\n                                <li>  START WITH 시작값(숫자) </li>\r\n                                <span className=\"sstitle\"> 시퀸스 증가값 지정  </span>\r\n                                <li>  INCREMENT BY 증가값(숫자) </li>\r\n                                <span className=\"sstitle\"> 시퀸스 최댓값 지정 </span>\r\n                                <li>  MAXVALUE 최대값(숫자) </li>\r\n                                <span className=\"sstitle\"> 시퀸스 최솟값 지정 </span>\r\n                                <li>  MINVALUE 최솟값(default=20,숫자) </li>\r\n                                <span className=\"sstitle\"> CACHE 사용여부 </span>\r\n                                <li> NOCACHE / CACHE 캐시수(숫자) </li>\r\n                                <span className=\"sstitle\"> 최댓값 도달시 시작값부터 다시 반복 설정 </span>\r\n                                <li> NOCYCLE / CYCLE , 캐시를 사용하여 미리 값을 할당해 놓으면 속도가 빠르며, 동시 사용자가 많으면 유리하다고 한다.\r\n                                    그렇다면 반대는?</li>\r\n                                <span className=\"sstitle\"> 요청 순서대로 값을 생성할지 여부 </span>\r\n                                <li> NOORDER / ORDER , 요청순서로 값을 생성하여 순서를 보장하지만 시스템의 부하가 약간 있음</li>\r\n\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 시퀸스 수정 </span>\r\n                                <li> ALTER SEQUENCE 시퀸스명 수정할내용과값( ex) INCREMENT BY 1) </li>\r\n                                <span className=\"sstitle\"> 시퀸스 삭제 </span>\r\n                                <li> DROP SEQUENCE 시퀸스명 </li>\r\n                                <span className=\"sstitle\"> 시퀸스 관련 변수 </span>\r\n                                <li> 시퀸스명.CURRVAL , 현재값 반환 </li>\r\n                                <li> 시퀸스명.NEXTVAL , 시퀸스 다음값 반환 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                            <span className=\"stitle\"> 시퀸스 사용 </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> NEXTVAL </span>\r\n                                <li> 시퀸스명.NEXTVAL , 시퀸스에 컬럼값을 넣을 떄 자동으로 값이 증가한다. </li>\r\n                                <span className=\"sstitle\"> CURRVAL </span>\r\n                                <li> SELECT 시퀸스명.CURRVAL FROM dual , 현재 시퀸스 순번을 가져온다. NEXTVAL을 한번 실행한\r\n                                    쿼리에서 사용이 가능하다고 한다. </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"날짜,시간\"> 날짜,시간 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 날짜 사용 방법 </span>\r\n                                <li> TO_DATE('2021-07-18','YYYY-MM-DD') </li>\r\n                                <li> TO_DATE('11:11:11','HH24:MI:SS') </li>\r\n                                <li> TO_DATE('2021-07-18 11:11:11','YYYY-MM-DD HH24:MI:SS') </li>\r\n                                <span className=\"sstitle\"> 조건절에서 날짜 사용 방법 </span>\r\n                                <li> WHERE hiredate &gt; '2021/01/01'; </li>\r\n                                <li> WHERE hiredate &gt; TO_DATE(210101); </li>\r\n                                <li> WHERE hiredate &gt; TO_DATE('20210101','YYYYMMDD'); </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 날짜 차이 계산 </span>\r\n                                <small> ROUND나 TRUNC 함수를 이용하여 초단위를 처리 </small>\r\n                                <span className=\"sstitle\"> 시간 차이 계산 </span>\r\n                                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 </li>\r\n                                <li> TO_DATE(HH24:MI) - TO_DATE(HH24:MI) * 24 </li>\r\n                                <li> ROUND(TO_DATE(HH24:MI) - TO_DATE(HH24:MI) * 24,2) </li>\r\n                                <span className=\"sstitle\"> 분 차이 계산 </span>\r\n                                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 * 60 </li>\r\n                                <span className=\"sstitle\"> 초 차이 계산 </span>\r\n                                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 * 60 * 60</li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n\r\n\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Join\">  Join </a> </span>\r\n                            <small> JOIN을 하기위해서는 레코드의 수를 고려하여야 한다. </small>\r\n                            <small> JOIN의 종류 : Inner, Outer, Cross, Self, Anti, Semi, ANSI(표준) </small>\r\n                            <small> JOIN을 사용할 떄는 컬럼을 적을 때 테이블1.컬럼 , 테이블2.컬럼 이런식으로 테이블을 명시해 주어야 한다. </small>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"stitle\"> inner join,equal join </span>\r\n                                <span className=\"sstitle\"> 2개의 테이블에서 공통 컬럼이 있을 때(Inner JOIN) </span>\r\n                                <li> SELECT 컬럼... FROM 테이블1,테이블2 WHERE 테이블1.컬럼=테이블2.컬럼; </li>\r\n                                <li> SELECT 컬럼... FROM 테이블1 INNER JOIN 테이블2 ON 테이블1.컬럼 = 테이블2.컬럼; </li>\r\n                                <li> SELECT 컬럼... FROM 테이블1,테이블2 WHERE 테이블1.컬럼=테이블2.컬럼 AND 테이블1.컬럼='ABC'; </li>\r\n                                <li> SELECT 컬럼... FROM 테이블1 A,테이블2 B WHERE A.컬럼=B.컬럼; , 별칭사용</li>\r\n                                <span className=\"sstitle\"> ANSI 표준 (Inner)JOIN </span>\r\n                                <li> SELECT 컬럼... FROM 테이블1 JOIN 테이블2 ON 테이블1.컬럼=테이블2.컬럼 </li>\r\n                                <li> SELECT 컬럼... FROM 테이블1 JOIN 테이블2 ON 테이블1.컬럼=테이블2.컬럼 AND 테이블1.컬럼='ABC' </li>\r\n                                <li> SELECT 컬럼... FROM 테이블1 JOIN 테이블2 ON 테이블1.컬럼=테이블2.컬럼 WHERE 테이블1.컬럼='ABC' </li>\r\n                                <li> SELECT 컬럼... FROM 테이블1 JOIN 테이블2 USING 공통컬럼 , ANSI </li>\r\n                                <li> SELECT 컬럼... FROM 테이블1 NATURAL 테이블2 WHERE = 'ABC'; , 2개의 테이블의 공통컬럼을 알아서 뽑음 , ANSI </li>\r\n                                <span className=\"sstitle\"> 2개의 테이블에서 범위 관련 컴럼으로 JOIN </span>\r\n                                <li> SELECT 컬럼.. FROM 테이블1,테이블2 WHERE 테이블1.컬럼 BETWEEN 테이블2.컬럼명 AND 테이블2.컬럼명 </li>\r\n                                <span className=\"sstitle\"> 1개의 테이블 JOIN </span>\r\n                                <li> SELECT 컬럼 FROM 테이블1 별칭1,테이블1 별칭2 WHERE 조건 </li>\r\n                                <span className=\"sstitle\"> 3개의 테이블 JOIN</span>\r\n                                <li> SELECT * FROM 테이블1 A , 테이블2 B , 테이블3 C WHERE A.컬럼=B.컬럼 AND A.컬럼=C.컬럼 </li>\r\n                                <li> SELECT * FROM 테이블1 A JOIN 테이블2 B ON A.컬럼=B.컬럼 JOIN 테이블3 C ON A.컬럼=C.컬럼 </li>\r\n                                <span className=\"stitle\"> outer join </span>\r\n                                <span className=\"sstitle\"> 2개의 테이블 컬럼 균형맞춰서 (OUTER)JOIN </span>\r\n                                <li> <small> INNER과 OUTER JOIN을 동시에 사용하면 에러 발생 </small> </li>\r\n                                <li> <small> 조건에서 모든 컬럼(테이블x) 조건에 +를 붙여주어야 결과값이 제대로 나온다. </small> </li>\r\n                                <li> <small> OR 연산자와는 같이 사용 불가 , 서브쿼리와 같이 사용불가 </small> </li>\r\n                                <li> <small> 1개의 테이블을 기준으로 잡고 다른 여러개의 테이블에(+) JOIN을 사용해야한다. , 포괄적인 JOIN(x) </small> </li>\r\n                                <li> SELECT 컬럼 FROM 테이블1,테이블2 WHERE 테이블1.컬럼(+) = 테이블2.컬럼 AND 테이블1.컬럼(+)&gt;100, 데이터가 없을 것 같은 쪽에 +기호 사용</li>\r\n                                <li> SELECT * FROM 테이블1 [LEFT|RIGHT,FULL] OUTER JOIN 테이블2 , ANSI 방식 , 우측테이블이 없다면 LEFT사용 </li>\r\n                                <li> SELECT * FROM 테이블 A, 테이블 B, 테이블 C WHERE A.컬럼 = B.컬럼(+) AND A.컬럼 = C.컬럼(+) </li>\r\n                                <span className=\"stitle\"> cross join </span>\r\n                                <span className=\"sstitle\"> Cross JOIN 사용방법 </span>\r\n                                <li> <small> 메모리를 많이 잡아 먹어 거의 사용하지 않음, 행*행 만큼의 갯수가 나옴 </small> </li>\r\n                                <li> SELECT A.컬럼1 A.컬럼2 B.컬럼1 FROM 테이블 A, 테이블 B </li>\r\n                                <span className=\"stitle\"> self join </span>\r\n                                <span className=\"sstitle\"> SELF JOIN 사용방법 </span>\r\n                                <li> <small> 같은 테이블을 별칭을 2개를 두어서 사용하는 방법 </small>  </li>\r\n                                <li> <small> 상사와의 관게, 매니저와 직원의 관계, 조직도와 부서 등을 볼때 사용하면 될것 같다 </small>  </li>\r\n                                <li> SELECT A.컬럼 B.컬럼 FROM 테이블1 A, 테이블1 B WHERE A.컬럼=B.컬럼 </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                {/* <li> 테이블에서 왼쪽 조인 관리자(매니저) 출력 매니저 아이디 없으면 배제 하향식, 급여는 역순 </li> */}\r\n                                {/* SELECT * FROM employee A join employee B WHERE manager_id IS NOT NULL ORDER BY salary DESC  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Regular Expression\"> Regular Expression </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> REGEXP_LIKE (컬럼,'패턴[조건]') </span>\r\n                                <li> WHERE REGEXP_LIKE (DEPT, '경영[^2]팀') , 경영 2팀을 제외한 </li>\r\n                                <li> WHERE REGEXP_LIKE (DEPT, '경영[1팀2팀]') , 경영1팀 혹은 경영2팀을 포함하는 </li>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> REGEXP_SUBSTR (컬럼,'패턴[조건]') </span>\r\n                                <li> SELECT REGEXP_SUBSTR(EMAIL,'[^@]+') FROM 테이블 , 이메일에서 아이디만 추출 </li>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Subquerry\">  Subquerry </a> </span>\r\n                            <small> 메인쿼리의 일부분을 추출함 </small>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 단일행 서브쿼리 </span>\r\n                                <li> =, &lt;= , &gt;=, &lt; , &gt; </li>\r\n                                <span className=\"sstitle\"> 다중행 서브쿼리 </span>\r\n                                <li> IN , ANY , SOME , ALL , EXIST </li>\r\n                                <span className=\"sstitle\"> 서브쿼리 사용방법 </span>\r\n                                <li> SELECT * FROM emp WHERE salary &lt; (SELECT ROUND(AVG(salary)) FROM emp); </li>\r\n                                <li> SELECT * FROM emp WHERE IN(서브쿼리); </li>\r\n                                <li> SELECT * FROM emp WHERE salary &lt; ALL(서브쿼리); </li>\r\n                                <li> <small> 모든 조건을 만족해야함 </small> </li>\r\n                                <li> SELECT * FROM emp WHERE salary &lt; ANY(서브쿼리); </li>\r\n                                <li> <small> 단 1개의 조건만 만족을 해도 된다. </small> </li>\r\n                                <span className=\"sstitle\"> 서브쿼리로 테이블 생성 </span>\r\n                                <li> CREATE TABLE 테이블 AS (SELECT * from 테이블 WHERE salary &lt; 1000)  </li>\r\n                                <li> CREATE TABLE 테이블 AS (SELECT * FROM 테이블 WHERE 1=0;) , 테이블의 컬럼만 복사  </li>\r\n                                <span className=\"sstitle\"> 서브쿼리를 이용하여 다른 테이블에 레코드 넣기 </span>\r\n                                <li> INSERT INTO 테이블 (SELECT * FROM 테이블) </li>\r\n                                <span className=\"sstitle\"> 서브쿼리로 테이블 레코드 수정하기 </span>\r\n                                <li> UPDATE 테이블 SET 컬럼=(서브쿼리) WHERE 조건 </li>\r\n                                <li> UPDATE 테이블 SET (컬럼1,컬럼2) = (컬럼2개인 서브쿼리) WHERE 조건 </li>\r\n                                <span className=\"sstitle\"> 서브쿼리 조건에 맞는 데이터 삭제 </span>\r\n                                <li> DELETE FROM 테이블 WHERE 컬럼-(서브쿼리) </li>\r\n                                {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"View\"> View  </a> </span>\r\n                            <small> 테이블의 일부를 뽑아서 사용 , 테이블계의 함수라고 생각하면 편함 , 삽입,삭제,갱신에는 제약이 있음 </small>\r\n                            <small> 뷰 처리과정 : 뷰조회 - 뷰권한확인 - 테이블조회쿼리반환 - 테이블조회 - 결과출력 </small>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 뷰 생성하기 </span>\r\n                                <li> CREATE [OR REPLACE] [FORCE|NOFORCE] VIEW [스키마.]뷰명 AS 서브쿼리 [WITH CHECK OPTION] [WITH READ ONLY]; </li>\r\n                                <li> [FORCE] : 테이블존재하지않아도 생성 </li>\r\n                                <li>[NOFORCE] : 뷰가 이미 존재하면  생성X </li>\r\n                                <li> [WITH CHECK OPTION] : 뷰 내에서만 UPDATE,INSERT </li>\r\n                                <li>[WITH READ ONLY] : SELECT만 가능 </li>\r\n                                <span className=\"sstitle\"> 뷰 삭제 </span>\r\n                                <li> DROP VIEW 뷰명 [ CASCADE CONSTRAINTS PURGE ]; </li>\r\n                                <span className=\"sstitle\"> 뷰 사용 불가능한 경우 </span>\r\n                                <li> NOTNULL 컬럼이 있는 경우 </li>\r\n                                <li> 가상컬럼이 존재하면 INSERT , UPDATE 사용 불가 </li>\r\n                                <li> DISTINCT인 경우 DML명령 사용불가 </li>\r\n                                <li> 그룹함수나 GROUP BY 포함한 경우에도 DML명령 사용불가  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Role\"> Role  </a> </span>\r\n                            <small> 권한들을 보관할 수 있는 리스트 , DB사용자에게 줄 권한들을 미리 정해놓을 수 있음  </small>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 롤 생성 </span>\r\n                                <li> CREATE ROLE 롤명  </li>\r\n                                <span className=\"sstitle\"> 롤 제거 </span>\r\n                                <li> DROP ROLE 롤명 </li>\r\n                                <span className=\"sstitle\"> 롤 권한 추가 </span>\r\n                                <li> GRANT UPDATE ON 권한 TO 롤명; </li>\r\n                                <span className=\"sstitle\"> 롤 권한 삭제 </span>\r\n                                <li> GRANT DELETE ON 권한 TO 롤명; </li>\r\n                                <span className=\"sstitle\"> 롤 권한 조회 </span>\r\n                                <li> GRANT SELECT ON 권한 TO 롤명; </li>\r\n                                {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Procedure\"> Procedure </a> </span>\r\n                            <li> <small> 동작을 일괄적으로 처리하는 데 사용, SQL을 프로시저로 만들어서 일괄적으로 처리 가능 </small></li>\r\n                            <li> <small> 특정한 로직만 처리하고 반환은 하지 않음 </small></li>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> 프로시저 생성  </span>\r\n                                <li> <small> CREATE OR REPLACE [PROCEDURE,VIEW,FUNCTION 등] 프로시저명( 변수명 IN 데이터타입, ... )\r\n                                    [RETURN 데이터타입 , FUNCTION일떄 사용] IS [추가적인변수선언]\r\n                                    BEGIN 동작쿼리 END [파라미터명];</small>  </li>\r\n                                <li> CREATE OR REPLACE PROCEDURE procedure_company( c_name IN VARCHAR2, c_age IN NUMBER)\r\n                                    IS c_dept := '회계'; BEGIN INSERT INTO (name,age,dept) VALUES (c_name,c_age,c_dept);\r\n                                    COMMIT; END procedure_company; </li>\r\n                                <span className=\"sstitle\"> 프로시저 실행 </span>\r\n                                <li> <small> EXEC 프로시저명(변수값,변수값); </small> </li>\r\n                                <li> EXEC procedure_company('홍길동',100); </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"PL/SQL\"> PL/SQL </a> </span>\r\n                            <li> <a href=\"https://m.blog.daum.net/wetet/1746\" target='_blank'> 참고 </a> </li>\r\n                            <li> <small> SQL을 확장한 형태 , 오라클에 내장된 프로시저 언어 , 제어문,반목문 지원 </small> </li>\r\n                            <li className=\"col_r\"> 내용이 너무 많아서 나중에 공부</li>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> PL/SQL 구조 </span>\r\n                                <li> DECLARE(선언) : BEGIN에서 참조할 변수,상수,커서 등을 포함 </li>\r\n                                <li> BEGIN(실행) : SQL문과 block내에서 데이터 처리르 위한 PL/SQL을 포함 </li>\r\n                                <span className=\"mblock\">\r\n                                    <li> <small> IF 조건문 사용 </small> </li>\r\n                                    <li> IF 조건 THEN 코드;</li>\r\n                                    <li> ELSIF 조건 THEN 코드;</li>\r\n                                    <li> ELSE 코드; </li>\r\n                                    <li> END IF; </li>\r\n                                    <li> RETURN 변수; , 조건문에서 변경된 값을 변수에 반환 </li>\r\n                                    <li> <small> CASE 조건문 사용 </small> </li>\r\n                                    <li> SELECT </li>\r\n                                    <li> CASE WHEN 조건 THEN '값' </li>\r\n                                    <li> ELSE '값' </li>\r\n                                    <li> END  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <li> EXCEPTION(예외처리) : 에러가 발샐할 경우 수행하는 곳 </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> 명령어 </span>\r\n                                <li> ACCEPT : 유저에게 입력받아 지정한 변수에 저장 </li>\r\n                                <li> VARIABLE : </li>\r\n                                <li> PRINT : </li>\r\n                                <li> EXECUTE : PL/SQL문을 실행 </li>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"기타\">  기타 </a> </span>\r\n                            <span className=\"sblock\">\r\n\r\n                                <span className=\"sstitle\"> cmd창에서 간격 조절 </span>\r\n                                <li> SET LINESIZE 문자수; </li>\r\n                                <li> SET PAGESIZE 라인수; </li>\r\n                                <li> COL 컬럼명 FOR a출력자리공간(숫자로 a뒤에 입력); </li>\r\n                                <span className=\"sstitle\"> SELECT로 출력할 때 문자열 적어서 출력하는 방법 </span>\r\n                                <li> SELECT 컬럼 ||'문자열'|| 컬럼 ~~~; </li>\r\n                                <span className=\"sstitle\"> 비어있는 테이블 </span>\r\n                                <li> SELECT 컬럼,계산값 등 FROM dual; </li>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <li>  </li>\r\n\r\n                            </span>\r\n                        </span>\r\n                    </ul>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default DBOracleBasic;\r\n","import React from 'react';\r\n\r\nconst DBMySQLBasic = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n\r\n                    <span className=\"mtitle\"> <a name=\"MySQL Study\">  MySQL Study  </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span> */}\r\n\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default DBMySQLBasic;\r\n","import React from 'react';\r\n\r\nconst DBVariableName = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n\r\n                    <span className=\"mtitle\"> <a name=\"데이터베이스 변수 이름\">  데이터베이스 변수 이름  </a> </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"이름 짓기 추천 방법\"> 이름 짓기 추천 방법  </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <li>  </li>\r\n                            <span className=\"sstitle\"> snake_case 사용 </span>\r\n                            <li> _를 사용하여 단어를 구분 , DB에서는 camelcase를 사용하지 않음 </li>\r\n                            <span className=\"sstitle\"> 축약어보다는 풀네임 사용을 권장 </span>\r\n                            <li> dept_no 보다는 department_no 가 더 좋음 , 많이 알려진것은 축약해도 서로 알겠지만 개인적으로는\r\n                                풀네임이 더 좋다고 생각 </li>\r\n                            <li> <a href=\"https://www.curioustore.com/#!/util/naming\" target=\"_blank\" > 약어 참고 사이트 </a> </li>\r\n                            <span className=\"sstitle\"> 대문자보다는 소문자 사용 </span>\r\n                            <li> SELECT salary FROM department; </li>\r\n                            <span className=\"sstitle\"> 동사보다는 단수명사 </span>\r\n                            <li> students 보다는 student </li>\r\n                            <span className=\"sstitle\"> Key와 FK의 필드이름 </span>\r\n                            <li> {\"{table명}_id\"} , PK 추천이름  </li>\r\n                            <li> {\"{reference_table명_컬럼이름\"} , FK 추천이름  </li>\r\n                            <span className=\"sstitle\"> prefix 와 suffix 비추천 </span>\r\n                            <li> employee_TB , employee_VM 등등 이렇게 해놓으면 알아보기는 쉽지만 뷰가 테이블로 전환\r\n                                하게되면 코드를 수정해야 되는 일이 발생 </li>\r\n                            <li> employee_name_txt , 컬럼의 타입을 변경하면 필요가 없어짐 </li>\r\n                            <span className=\"sstitle\">  </span>\r\n                            <li>  </li>\r\n                            <span className=\"sstitle\">  </span>\r\n                            <li>  </li>\r\n                            <span className=\"sstitle\">  </span>\r\n                            <li>  </li>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"회사 관련\"> 회사 관련 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <ul>\r\n                                <span className=\"sstitle\"> 직원 </span>\r\n                                <li> employee_no,empno : 직원 번호 </li>\r\n                                <li> employee_name, ename : 직원 이름 </li>\r\n                                <li> employee_email : 직원 이메일 </li>\r\n                                <li> employee_addr1 : 직원 주소 </li>\r\n                                <li> employee_addr2 : 직원 예비 주소 </li>\r\n                                <li> employee_location : 직원 근무지역 </li>\r\n                                <li> employee_phone : 직원 휴대폰 번호 </li>\r\n                                <li> last_name : 성 </li>\r\n                                <li> first_name : 이름 </li>\r\n                                <li> job : 직위 </li>\r\n                                <li> hiredate : 입사일 </li>\r\n                                <li> salary, sal : 월급 </li>\r\n                                <li> commision , comm : 커미션(수수료) , nvl함수와 같이 사용 </li>\r\n                                <li> commision_percent , comm_pct : 커미션(수수료) 퍼센트  </li>\r\n                                <li> department_no ,deptno : 부서 번호 </li>\r\n                                <li>  </li>\r\n                                <li>  </li>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <li> </li>\r\n                            </ul>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n\r\n\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default DBVariableName;\r\n","import React from 'react';\r\n\r\nconst DBMariaBasic = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ GRANT(권한) <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> GRANT ALL PRIVILEGES ON DB명.* TO 유저명@localhost IDENTIFIED BY '비번'; </span>\r\n                                    <li> 유저에게 DB명의 모든 테이블 권한을 준다. </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ Database <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> show databases; </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\"> create database DB명; </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶  <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶  <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶  <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DBMariaBasic;","import React from 'react';\r\n\r\nconst DPMvc2 = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVC2란? <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model + View + Controller으로 역할을 나누어서 코드를 설계하는 방식 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 역할을 분리하여 코드를 작성하면 유지보수, 개발효율, 개발자가 보기에 쉬워진다. </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVC2 구조 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Model </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 데이터를 담당하는 역할, DB와의 상호작용, 비즈니스 로직의 처리되는 데이터 등을 담당  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Controller </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Model 과 View를 이어주는 역할, View에서 어떤 명령을 하면 Controller에서 실행할 비즈니스 로직을 Model쪽에서 담당하게 함\r\n                                    </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> View </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자에게 보여주는 화면, UI를 담당 , 사용자 인터페이스 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVC2의 장단점 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 장점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_be\"> MVC2로 역할을 분담하여 처리를 하기 때문에 유지보수나 개발효율이 좋다. </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_r\"> 대규모 MVC2를 처리하기에는 복잡하고 Controller에 비중이 커지고 , 복잡해지기 때문에\r\n                                        큰 규모에서는 어울리지 않음 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DPMvc2;","import React from 'react';\r\n\r\nconst DPMvp = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVP란? <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model + View + Presenter로 이루어진 패턴 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 안드로이드 프로젝트에서 사용을 하는 패턴인 것 같음.. </li>\r\n                                    <li> MVC와의 차이는 View에게 표시할 방법을 주는 것이 아니라 데이터 만을 View에게 준다? </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVP 구조 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 어플리케이션에서 사용되는 데이터와 데이터를 처리하는 곳 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> View </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자의 화면 , UI를 처리하는 부분 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> Presenter </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> View에서 요청한 정보를 받아서 Model을 가공하여 다시 VIew에 전달해 주는 부분 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVP 장단점 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 장점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_be\"> 유닛 테스트로 활용 시 테스트 화면만 그려서 할 수 있다는 장점 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_r\"> 화면을 생성시 View , Model, Presenter, Interface 를 생성해야함 </li>\r\n                                    <li className=\"col_r\"> 프로젝트의 크기가 커지면 Presenter가 감당해야할 부분이 많아짐 </li>\r\n                                    <li className=\"col_r\">  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DPMvp;","import React from 'react';\r\n\r\nconst DPMvvm = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVVM란? <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model + View + ViewModel로 이루어진 패턴 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVVM 구조 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  어플리케이션에서 사용되는 데이터와 데이터를 처리하는 곳 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> View </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자의 화면 , UI를 처리하는 부분 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> ViewModel </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> View가 사용할 메서드와 필드를 구현하고 View에게 상태 변화를 알리는 부분 </li>\r\n                                    <li> View에서 2개의 모델에서의 데이터가 필요하다고 하면 2개의 데이터를 받아서 View에서\r\n                                        처리하는 것이 아니라 ViewModel에서 처리를 하고 View에게 보내준다.  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVVM 장단점 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 장점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_be\">  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_r\"> 앱이 커지면 데이터 바인딩을 하는데 많은 메모리를 사용해야 한다. </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DPMvvm;","import React from 'react';\r\n\r\nconst SecurityBasic = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 보안 참고 사이트 <a name=\"보안 참고 사이트\" style={{ visibility: \"hidden\" }}> 보안 참고 사이트 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> <a href=\"https://www.boho.or.kr/main.do\" target=\"_blank\"> KISA인터넷 보호나라 </a> </li>\r\n                                    <small> 가이드 및 메뉴얼 - 기술점 취약점 분석 평가 방법 상세가이드 참고 </small>\r\n                                    <li> <a href=\"https://www.boho.or.kr/main.do\" target=\"_blank\">  </a> </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityBasic;","import React from 'react';\r\n\r\nconst SecurityJwt = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JWT <a name=\"JWT\" style={{ visibility: \"hidden\" }}> JWT </a> </summary>\r\n                            <small> JSON 객체로 만들어진 토큰 , 웹표준(RFC 7519) </small> <br />\r\n                            <a href=\"https://jwt.io/\" target=\"_blank\"> https://jwt.io/ </a> #jwt 토큰 만들어주는 곳\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> JWT가 만들어진 이유 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JWT 토큰 구성 = Header + Payload + Signature  <a name=\"JWT 토큰 구성 = Header + Payload + Signature\" style={{ visibility: \"hidden\" }}> JWT 토큰 구성 = Header + Payload + Signature </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Header </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> \"alg\" , \"typ\"  #해시알고리즘(SHA256,HMAC,RSA)과 타입(JWT)을 명시 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Payload </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자의 정보나 추가 데이터에 대한 설명 </li>\r\n                                    <li> registered , private, public 클레임들이 존재 </li>\r\n                                    <li> registered claim : iss(토큰발행자) , exp(토큰만료시간) , sub(토큰제목) , aud(토큰대상자) ,\r\n                                        nbf(토큰활성날짜) , jti(고유식별자) </li>\r\n                                    <li> private claim : 서버와 클라이언트 협의 간의 사용되는 클레임 </li>\r\n                                    <li> public claim : 사용자 정의 클레임 </li>\r\n                                    <small> {'{'} </small> <br />\r\n                                    <small> \"iss\": \"http://naver.com\", </small> <br />\r\n                                    <small> \"aud\": \"https://user.com\", </small> <br />\r\n                                    <small> \"exp\": \"1234567890\", </small> <br />\r\n                                    <small>  </small> <br />\r\n                                    <small> {'}'} </small> <br />\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Signature </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 시크릿 키를 포함하여 암호화 되어 있음 </li>\r\n                                    <li> {' HMACSHA256( '} </li>\r\n                                    <li className=\"tab_4\"> {' base64UrlEncode(header) + \".\" + '} </li>\r\n                                    <li className=\"tab_4\"> {' base64UrlEncode(payload). '} </li>\r\n                                    <li className=\"tab_4\"> {' secret) '} </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JWT 토큰 작동 방식 <a name=\"JWT 토큰 작동 방식\" style={{ visibility: \"hidden\" }}> JWT 토큰 작동 방식 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <ol>\r\n                                    <li> 사용자가 로그인 정보 입력 </li>\r\n                                    <li> 서버에 로그인 정보를 보냄 </li>\r\n                                    <li> 서버는 로그인 정보를 받아서 사용자의 고유 ID 값을 설정하고 Payload에 기타 정보를 넣고\r\n                                        JWT토큰의 유효기간을 설정하고 Secret Key로 암호화하고 토큰을 발급 </li>\r\n                                    <small> JWT토큰은 static변수(바로사용)와 local stroage에 저장, 로그아웃시 local stroage에서 삭제  </small>\r\n                                    <li> 클라이언트는 서버에 요청할 떄 Authorization header나 URL에 JWT토큰을 담아서 전달 </li>\r\n                                    <li> 서버는 JWT Signature을 Secret Key로 복호화해서 사용자 정보와 유효기간을 확인  </li>\r\n                                    <li> Payload에서 사용자의 정보에 맞는 데이터를 가져온다.  </li>\r\n                                </ol>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JWT의 장단점 <a name=\"JWT의 장단점\" style={{ visibility: \"hidden\" }}> JWT의 장단점 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 장점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 서버에 인증 저장소를 만들어 둘 필요가 없어 서버 자원과 비용을 절감 , 트래픽 부담이 적음 </li>\r\n                                    <li> 수평 스케일이 용이? , 디버깅 및 관리가 용이? </li>\r\n                                    <li> REST 서비스로 제공이 가능? </li>\r\n                                    <li> 정보가 조작이 되었는지 검증을 함으로써 안정성이 보장 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 토큰이 클라이언트에게 있으므로 DB에서 클라이언트 정보를 바꾸어도 토큰까지 바꿀 수는 없음 </li>\r\n                                    <li> 필드가 많이 추가되면 토큰의 크기가 커질 수 있음 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityJwt;","import React from 'react';\r\n\r\nconst SecurityHmac = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ HMAC 알고리즘이란? <a name=\"HMAC 알고리즘이란?\" style={{ visibility: \"hidden\" }}> HMAC 알고리즘이란? </a> </summary>\r\n                            <small> Keyed-Hash Message Authentication Code , Key를 조합하여 Hash함수를 구하는 방식 </small> <br />\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> MAC 정의 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 데이터를 보내는 사람과 받는 사람만이 공유하고 있는 Key와 Message를 혼합하여 Hash 값을 만드는 것 </li>\r\n                                    <small> 메시지가 훼손 되었는지 여부를 확인 , MAC특성상 역산이 불가능 하므로,  </small>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityHmac;","import React from 'react';\r\n\r\nconst SecurityHash = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Hash란? <a name=\"Hash란?\" style={{ visibility: \"hidden\" }}> Hash란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Hash의 정의 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 단방향 암호화 기법, 임의의 크기를 가진 데이터(Key)를 고정된 크기의 데이터(value)로 바꾸는 것 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Hasing의 정의 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 키에 대한 해시값을 구하는 과정 , 이때 사용하는 알고리즘을 해시 알고리즘(해시함수)라고 한다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Hash 함수의 특징 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 해시함수는 원래 패스워드 저장용도가 아닌 짧은 시간에 데이터를 검색하기 위해 설계됨 </li>\r\n                                    <li> 빠른 처리 속도를 가지고 있음 </li>\r\n                                    <li className=\"col_r\"> 빠른 처리속도를 가지고 있지만 특정 장비를 이용하여 더 빠르게 처리하여\r\n                                        다이제스트를 만들어 대입하여 해킹을 시도가 가능 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 좋은 Hash함수란? </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 해시값들이 많이 충돌하지 않고, 계산이 복잡하지 않는 함수 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Hash 값 충돌을 방지하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Chaining : 키값을 링크드 리스트 형태로 연결하여 사용 , 키값이 많이 중복되면 비효율 </li>\r\n                                    <li> Open Addressing : 모든 데이터를 테이블에 저장하는 방법 , 테이블의 크기가 커지면 장점이 사라짐? </li>\r\n                                    <li> Linear Probing : 충돌이 발생하면 다음 인덱스에 데이터를 저장하는 방식 </li>\r\n                                    <li> Quadratic Probing : 충돌시 제곱만큼 이동(효율적) </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 사용하면 안되는 해쉬 함수 종류 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> MD5 , SHA-1 HAS-180  #보안이 뚤림 </li>\r\n                                    <li> SHA-256 , SHA-512 권고  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 단뱡향 해시 함수 <a name=\"단뱡향 해시 함수\" style={{ visibility: \"hidden\" }}> 단뱡향 해시 함수 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 단방향 해시 함수 강화하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 스트레칭 : 복잡한 연산을 수만번이상 반복하는 방법, 다이제스트를 만드는 시간을 길게 하는방법, 사용자는\r\n                                        로그인 하는데 1초이상이 걸려도 크게 불편함을 느끼지 않는다. </li>\r\n                                    <li> 솔트 : 32비트 이상의 문자열로 사용자마다 값이 다르며, 비밀번호 앞뒤에 Salt(아무 문자열,아이디 등)\r\n                                        를 붙여서 다이제스트(해쉬함수를 사용한 값)를 생성한다. </li>\r\n                                    <li> - 패스워드 처럼 문자의 수와 종류가 제한된 경우 추측이 가능해져 솔트를 사용하면 좋다. </li>\r\n                                    <li> 직접 만들는 것은 위험함으로 검증된 암호화 시스템을 사용할 것  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Adaptive Key Derivation Functions </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 솔트 + 스트레칭을 반복하고 이외에도 입력 갑을 추가하여 보안의 강도를 높이는 방법 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> PBKDF2 </span>\r\n                                <small> Password-Based Key Derivation Function </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> 솔트를 적용한 후에 해시 함수의 반복 회수를 임의로 선택 가능 </li>\r\n                                    <li> DIGEST = PBKDF2(PRF, Password, Salt , c, DLen) #난수 , 패스퉈드, 솔트, iteration반복수, 원하는다이제스트길이 </li>\r\n                                    <li> 미국 정부 시스템에서도 다이제스트를 생성할 때 사용 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> bcrypt </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 패스워드 저장을 목적으로 설계 </li>\r\n                                    <li> workfactor 파라미터는 한개의 다이제스트를 생성하는데 처리 과정을 몇 번이나 수행을 할지 선택 </li>\r\n                                    <li> BCrypt.hashpw(password, BCrypt.gensalt(11)); #default salt 값은 10번 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> scrypt </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityHash;","import React from 'react';\r\n\r\nconst SecurityEncryption = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 암호란? <a name=\"암호\" style={{ visibility: \"hidden\" }}> 암호 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 평문을 암호문으로 만들거나 암호문을 평문으로 만드는것 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 평문 : 사람이 해독 가능한 텍스트 형태 </li>\r\n                                    <li> 암호문 : 사람이 해독 불가능한 텍스트 형태 </li>\r\n                                    <li> 암호화(Encryption) : 평문을 암호문으로 변환 </li>\r\n                                    <li> 복호화(Decryption) : 암호문을 평문으로 변환 </li>\r\n                                    <li> 단방향 암호화 : 암호화 후에 복호화가 불가능하다. , 암호문으로 평문을 구할 수 없음  </li>\r\n                                    <small> DB에 사용자 비밀번호를 저장하는 방식, 개발자도 볼 수 없음 </small>\r\n                                    <li> 양방향 암호화 : 암호화, 복호화 둘 다 가능하다. </li>\r\n                                    <li> - 대칭키 : 데이터 통신 </li>\r\n                                    <li> - 공개키 : 인증 </li>\r\n                                    <li> 레인보우 테이블 : 여러 평문을 암호화시켜 놓은 다이제스트 목록 , 해커들이 미리\r\n                                        만들어놓고 대입해서 과거에는 레인보우 공격을 하였음 </li>\r\n                                    <li> 다이제스트 : 평문을 암호화 시켜놓은 비밀번호 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityEncryption;","import React from 'react';\r\n\r\nconst SecurityHackingAttack = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 브루트 포스 공격 <a name=\"브루트 포스 공격\" style={{ visibility: \"hidden\" }}> 브루트 포스 공격 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 무차별 대입 공격 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 일일히 무작위로 대입을 해서 비밀번호를 알아내는 방법 , 요즘 시대에는 성공하기 힘듬 </li>\r\n                                    <li> 사용자가 자주 사용하는 비밀번호들을 리스트로 만들어서 대입을 해보는 방법 , 공격이 성공하기 좋음 </li>\r\n                                    <small> password dictionary file 구글에 검색하면 비밀번호 리스트가 나온다 </small>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 세션 하이재킹 공격 <a name=\"세션 하이재킹 공격\" style={{ visibility: \"hidden\" }}> 세션 하이재킹 공격 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 다른 사람의 세션을 가로채서 인증 별도의 인증 작업 없이 통신을 게속 하는 것 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> OTP , Challenge/Response 기법 무력화 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> TCP Connection Hijacking </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> TCP연결을 가로채는 방법 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Sequence Number Prediction Hijacking </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> TCP를 연결하는 과정에서 서버가 일정한 규칙을 가지고서 설정을 하게되면\r\n                                        추론을 하여 알아내는 방법 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 서비스 거부 공격(Dos) <a name=\"서비스 거부 공격(Dos)\" style={{ visibility: \"hidden\" }}> 서비스 거부 공격(Dos) </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 합법적인 사용자가 서비스를 이용하지 못하게 방해하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 막대한 트래픽을 발생시켜 과부하를 준다. </li>\r\n                                    <li> 악의적인 요청을 보내 리소스가 오작동을 일으키게 하여 정지시키는 방법 </li>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Buffer Overflow Attack(Dos) <a name=\"Buffer Overflow Attack\" style={{ visibility: \"hidden\" }}> Buffer Overflow Attack </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 개발자들이 설계한 시스템 처리 능력보다 더 많은 트래픽을 보내서 마비시킴 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ ICMP Flood Attack , Smurf Attack, the ping of death(Dos) <a name=\"ICMP Flood Attack\" style={{ visibility: \"hidden\" }}> ICMP Flood Attack </a> </summary>\r\n                            <small> ICMP(Internet Control Messsage Protocol) </small>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 네트워크의 브로드캐스트 주소를 통해 모든 컴퓨터로 패킷을 보내는 공격 방식 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Ping Flooding : 막대한 양의 ICMP 에코 요청 패킷을 보내는 방법 , 상대 네트워크 대역폭보다 더 많은 양을 보내면 과부하 시킬 수 있음 </li>\r\n                                    <li> Ping of Death : 사아대 시스템의 취약점이 있으면 변형된 패킷을 보내서 시스템을 비정상적으로 만드는 방법 </li>\r\n                                    <li> 일반적인 정상 패킷은 56바이트,84바이트(+IP) 이다. 시스템에 인식할 수 있는 패킷의 데이터 크기를 넘어서 버퍼 오버플로우를 발생시켜 시스템을\r\n                                        비정상적으로 작동시키게 하고 악성코드를 주입한다. </li>\r\n                                    <li> SYN Flooding : 막대한 양의 TCP SYN 패킷을 보내 시스템을 마비시키는 공격, 3Way Handshake에서 SYN을 요청하는것을 이용하는 방식인데\r\n                                        해커는 사용자의 SYN패킷을 탈취해서 IP주소를 알아내고 사용자의 IP주소를 이용해서 서버에 계속 요청을 보내면\r\n                                        서버에서는 SYN을 받았으니 SYN+ACK요청을 사용자IP주소로 보내게 되지만 응답이 되돌아오지 않고 프로세스를 생성하고 기다린다.\r\n                                        그러므로 막대한양의 요청을 보내 프로세스를 늘려 다른 사용자는 이용할 수 없게 만드는 방법이다. </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ (DDos) <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 많은 장치들이 여러곳에서 한 리소스를 타깃으로 잡고 공격을 하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 무작위 스캔 공격 <a name=\"무작위 스캔 공격\" style={{ visibility: \"hidden\" }}> 무작위 스캔 공격 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 여러 컴퓨터를 탐색하여 열려있는 포트, 서비스, OS버전 등 취약한 정보를 가져온다. </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 해킹 공격을 하기전에 사전 답사를 하는 행동 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> ARP Scan </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> ARP 프로토콜을 이용한 탐샌 방법 ,  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> ICMP Scan </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> TCP/UDP Scan </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> Stealth Scan </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityHackingAttack;","import React from 'react';\r\n\r\nconst SecurityIpSpoofing = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ IP Spoofing란? <a name=\"IP Spoofing란?\" style={{ visibility: \"hidden\" }}> IP Spoofing란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 송신자의 ID를 숨기거나, 다른 컴퓨터 시스템으로 가장하는 방법,\r\n                                    소스 주소가 수정된 IP패킷을 생성하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityIpSpoofing;","import React from 'react';\r\n\r\nconst NetworkBasic = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 네크워크란? <a name=\"네크워크란?\" style={{ visibility: \"hidden\" }}> 네크워크란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 설명 : 노드(네트워크에 속한 컴퓨터,통신장비)와 노드간에 통신망을 통하여 DATA를 주고 받는 방식, 환경 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 파일공유, 스트리밍, 여러 PC에서 1대의 프린터 사용, 온라인 게임 등등  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 네트워크 분류(크기) </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> PAN(Personal Area Network) : 가장 작은 규모 네트워크 #블루투스 , IEE 802.15 </li>\r\n                                    <li> LAN(Local Area Network) : 단거리 전송 방식, 지역 네트워크, IEE 802.11 #집(공유기), 강의실, 사무실 등 한 공간정도 </li>\r\n                                    <li> MAN(Metropolitan Area Network) : 도시 영역 네트워크 , IEE 802.16  </li>\r\n                                    <li> WAN(Widw Area Network) : 광대역 네트워크 , 802.20 # 지역, 지방, 나라, 대륙  </li>\r\n                                    <li> VLAN  </li>\r\n                                    <li> CAN </li>\r\n                                    <li> PAN </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> LAN 네트워크 분류(모양) , 토폴로지(Topology) </span>\r\n                                <small> 노드와 노드 사이의 연결 상태에 대한 배치 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"sstitle\"> Mesh : 여러 노드들끼리 그물처럼 연결 </li>\r\n                                    <li className=\"sstitle\"> 혼합형 : 실제 인터넷은 여러 모양의 방식으로 연결되어 있음 </li>\r\n                                    <li className=\"sstitle\"> Bus : 단일 케이블에 네트워크의 모든 컴퓨터를 연결, 버스 끝에는 Terminator를 달아 신호 반사 방지 </li>\r\n                                    <span className=\"sblock\">\r\n                                        <li className=\"tab_4 col_be\"> 트래픽 제어 간단, 비용 적음, 확장이 쉬움 </li>\r\n                                        <li className=\"tab_4 col_r\"> 노드수가 증가하면 충돌하여 통신효율 절감, 문제 발생하면 찾기 힘듬, 고장나면 전체 다운 </li>\r\n                                    </span>\r\n                                    <li className=\"sstitle\"> Ring : 고리 구조의 형태 </li>\r\n                                    <span className=\"sblock\">\r\n                                        <li className=\"tab_4 col_be\"> 데이터 안정적 전송,  </li>\r\n                                        <li className=\"tab_4 col_r\"> 한 노드가 고장나면 전체 고장, 네트워크 확장,변경 어려움 </li>\r\n                                    </span>\r\n                                    <li className=\"sstitle\"> Star : 허브나 스위치를 통해 중앙 집중 형태로 연결 </li>\r\n                                    <span className=\"sblock\">\r\n                                        <li className=\"tab_4 col_be\"> 중앙 집중식 관리 가능, 확장과 관리가 편함 , 일부 오류가 발생하여도 나머지는 정상작동 # 가정집 공유기 </li>\r\n                                        <li className=\"tab_4 col_r\"> 노드 수가 증가하면 패킷 충돌이 증가 하여 효율 하락, 허브나 스위치 고장 전체 다운 </li>\r\n                                    </span>\r\n                                    {/* <li>  :  </li>\r\n                                    <li className=\"tab_4 col_be\">  </li>\r\n                                    <li className=\"tab_4 col_r\">  </li> */}\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 네트워크 통신 방식 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1:1(유니 캐스트) : # 1:1 통신 </li>\r\n                                    <li> 1:N(멀티 캐스트) : 한번에 데이터를 여러대에 송신하지만 수신하는 곳에서 원하는 것만 수신 가능 ( ex) IPTV 채널 ) </li>\r\n                                    <li> 1:모두(브로드 캐스트) : 한번에 데이터를 같은 대역에 있는 여러기기에 송신하지만 수신하는 곳에서는 거부하는 권한이 없음, 차단은 가능 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MAC, IP, PORT <a name=\"MAC, IP, PORT?\" style={{ visibility: \"hidden\" }}> MAC, IP, PORT </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> MAC </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 공유기에 여러대의 컴퓨터와 휴대폰 등이 연결되어 있다고 하면\r\n                                        컴퓨터는(0001) , 휴대폰(0002) 을 구분하여 더 빠르게 통신한다. 만약에 같은 종류의 컴퓨터라면\r\n                                        같은 MAC주소를 가지고 있을수도있다. <br /> ※ MAC주소가 fff.fff.fff.fff로 수신되면 무조건 열어본다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> IP </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> MAC주소가 같을경우 IP주소를 이용하여서 구분한다. IP주소는 컴퓨터의 종류가 같아도 각기 다른 IP주소를 가지고 있다.\r\n                                        <br /> ※IP주소가 255.255.255.255로 수신되면 무조건 열어본다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> PORT </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> PORT번호는 프린터,마우스 등과 브라우저에서 여러개의 창(블로그,뉴스,유튜브 등)을 열었을때 구분을 해주는 번호이다.\r\n                                        <br /> ※0~65536까지 가능하지만 0~1023의 포트번호는 이미 정해져 있으므로 건들지 않는다. ex) 80은 웹페이지를 뜻하는 포트번호이다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 서버의 종류 <a name=\"서버의 종류\" style={{ visibility: \"hidden\" }}> 서버의 종류 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> DNS 서버 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 도메인 주소(www.naver.com)를 IP주소(111.111.111.111)로 변경해 줌 , UDP 프로토콜 사용 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> TFTP 서버 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 파일을 공유하는 서버 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 인터넷이란? <a name=\"인터넷이란?\" style={{ visibility: \"hidden\" }}> 인터넷이란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 여러가지 데이터를 공유할 수 있는 통신망 , 여러가지 통신망 중 가장 큰 통신망 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ WWW란? <a name=\"WWW란?\" style={{ visibility: \"hidden\" }}> WWW란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 인터넷을 통해서 웹과 관련된 데이터를 공유하는 것 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 프로토콜(protocol)이란? <a name=\"프로토콜(protocol)이란?\" style={{ visibility: \"hidden\" }}> 프로토콜(protocol)이란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 통신하는 기기들 간의 통신 규약(규칙) #프로토콜이 서로 다르면 통신이 불가능하므로 만들어짐 </span>\r\n                                <span className=\"sstitle\"> 프로토콜의 기능  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 세분화와 재합성 , 캡슐화, 연결제어, 오류제어, 흐름제어, 동기화, 순서결정, 주소설정, 다중화, 전송서비스 </li>\r\n                                    <li> 오류제어 : 통신이 문제가 발생하면 프로토콜을 보고 알 수 있음 </li>\r\n                                    <li> 흐름제어 : 데이터 전달 과정에 대한 흐름을 알 수 있음 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">   </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 가까운 곳 : Ethernet #MAC 주소 </li>\r\n                                    <li> 멀리있는 곳 : ICMP , IPv4 , IPv6 , ARP #IP주소 </li>\r\n                                    <li> 특정 프로그램 통신 : TCP , UDP #포트번호 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ TCP/IP 프로토콜 <a name=\"TCP/IP 프로토콜\" style={{ visibility: \"hidden\" }}> TCP/IP 프로토콜 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> TCP/IP : 기기과 기기간의 신뢰성있는 데이터를 주고 받기 위한 방식, IP는 기기의 주소 , TCP는 프로토콜 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 3Way Handshake를 실행 </li>\r\n                                    <li> 2. </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 4Way Handshake <a name=\"4Way Handshake\" style={{ visibility: \"hidden\" }}> 4Way Handshake </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 세션을 종료하기 위해 수행하는 과정 </span>\r\n                                <small> 3Way Handshake가 먼저 일어난 뒤에 일어난다? </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 클라이언트 → 서버 <br /> 초기에 클라이언트는 ESTABLISHE 상태 , FIN플래그 발송 , 클라이언트는 FIN-WAIT1 상태 </li>\r\n                                    <li> 2. 서버 → 클라이언트 <br /> ACK 발송 , 서버는 서버 통신이 끝날때 까지 기다리는 TIME_WAIT 상태 </li>\r\n                                    <li> 2-1. → 클라이언트 <br /> 클라이언트는 FIN-WAIT2 상태 </li>\r\n                                    <li> 3. 서버 → 클라이언트 <br /> 서버가 통신이 끝나면 FIN 플래그를 발송 , 서버는 LAST-ACK 상태 </li> <br />\r\n                                    <li> 4. 클라이언트 → 서버 <br /> 클라이언트는 TIME-WAIT 상태 , ACK 발송  </li>\r\n                                    <li> 5.  → 서버 <br /> CLOSED 상태  </li> <br />\r\n                                    <li> ※ TIME-WAIT 상태 : 서버에서 뒤늦게 온 패킷 놓치지 않고 받기 위해 (default 240second) 동안 세션을 남기고 기다리는 행위  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ UDP/IP 프로토콜 <a name=\"UDP/IP 프로토콜\" style={{ visibility: \"hidden\" }}> UDP/IP 프로토콜</a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> UDP/IP : 기기과 기기간의 신뢰성을 보장하지 않는 데이터를 주고 받는 방식, IP는 기기의 주소 , UDP는 프로토콜 </span>\r\n                                <span className=\"sstitle\"> 사용자 데이터그램 프로토콜(User Datagram Protocol, UDP) </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> UDP 프로토콜 구조 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> | Source Port = 2Byte | Destination Port = 2Byte | #출발지 포트번호, 도착지 포트번호 </li>\r\n                                    <li> | Length = 2Byte | Checksum = 2Byte | #(헤더+페이로드)길이 , 프로토콜이 문제가 있는지 확인하는 값 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ RIP 프로토콜 <a name=\"RIP 프로토콜\" style={{ visibility: \"hidden\" }}> RIP 프로토콜 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 라우터 끼리 정보를 공유하는 프로토콜 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 케이블 종류 <a name=\"케이블 종류\" style={{ visibility: \"hidden\" }}> 케이블 종류 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> TP(Twisted Pair Cable) </span>\r\n                                <small> 한 쌍으로 꼬아놓음 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> STP(Shielded twisted pair) </li>\r\n                                    <li> UTP(Unshielded twisted pair) </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Coaxial Cable </span>\r\n                                <small> 동축케이블, BNC 케이블, TP Cable 보다 더 멀고 좋음</small>\r\n                                <span className=\"mblock\">\r\n                                    <li> 외부 도체에서 방해 전파를 차단 잡음에 강함 # 케이블 TV선, 안테나 선 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Optical Fiber </span>\r\n                                <small> 광섬유 재질, 빛으로 통신, 인터넷 케이블에 사용 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"color_be\"> 빠르다 </li>\r\n                                    <li className=\"color_r\"> 충격에 약함, 수리 어려움 , 설치 어려움  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkBasic;","import React from 'react';\r\n\r\nconst NetworkCommand = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 관련 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> ipconfig </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> netstat </span>\r\n                                <small> network statistics </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> 전송 제어 프로토콜, 라우팅 테이블, 수많은 네트워크 인터페이스, 네트워크 프로토콜 통계를 위한 네트워크 연결을 보여주는 명령 도구  </li>\r\n                                    <li> 1. 프로토콜 : 사용한 프로토콜 </li>\r\n                                    <li> 2. 로컬주소 : 사용자 컴퓨터의 IP / 호스트 이름과 포트번호 </li>\r\n                                    <li> 3. 외부주소 : 사용자 컴퓨터에 접속되어 있는 IP / 호스트이름과 포트번호 </li>\r\n                                    <li className=\"sblock\">  <span className=\"sstitle\"> 4. 상태 : 연결상태 </span>\r\n                                        <li> LISTENING : 서비스 대기중 </li>\r\n                                        <li> ESTABLISHED : 다른PC와 연결된 상태 </li>\r\n                                        <li> SVN_SENT : 클라이언트가 SYN요청후 대기상태 </li>\r\n                                        <li> SYN_RECV : 서버가 SYN+ACK발신 후 ACK 수신 대기 상태 </li>\r\n                                        <li> TIME_WAIT : 연결 종료하고 일정시간 열린 상태 </li>\r\n                                        <li> CLOSE_WAIT : 원격 연결 요청을 받은 상태이며 , 연결 종료를 기다리는 상태 </li>\r\n                                        <li> LAST_ACK : 연결이 종료되었고, 승인을 기다리는 상태 </li>\r\n                                        <li> CLOSED : 연결 종료 </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\">  <span className=\"sstitle\"> 명령어 옵션(Window) </span>\r\n                                        <li> netstat -? 로 사용(?에 대입) </li>\r\n                                        <li> -a : 모든 연결 및 수신 대기 포트를 표시합니다. </li>\r\n                                        <li> -a | find \"찾을내용\" : 찾는 내용을 보여줌 </li>\r\n                                        <li> -b : 현재 연결이 어떤 프로그램을 사용하는지 표시 <small> 권한이 없다고 하면 관리자 권한으로 실행 , 시간이 약간 걸림 </small>  </li>\r\n                                        <li> -e : 이더넷 통계를 표시 </li>\r\n                                        <li> -f : 외부 주소의 FQDN(정규화된 도메인 이름)을 표시합니다. , 시간이 약간 걸림 </li>\r\n                                        <li> -n : 주소 및 포트 번호를 숫자 형식으로 표시합니다. </li>\r\n                                        <li> -o : 각 연결의 소유자 프로세스 ID를 표시합니다. </li>\r\n                                        <li> -p 프로토콜 : 모든 연결, 수신 대기 포트 및 바인딩된 비수신 대기 TCP 포트를 표시합니다. </li>\r\n                                        <li> -r : 라우팅 테이블을 표시합니다. </li>\r\n                                        <li> -s : 프로토콜별 통계를 표시합니다. </li>\r\n                                        <li> -t : 현재 연결 오프로드 상태를 표시합니다. </li>\r\n                                        <li> -x : NetworkDirect 연결, 수신기 및 공유 끝점을 표시합니다. </li>\r\n                                        <li> -y : 모든 연결에 대한 TCP 연결 템플릿을 표시합니다. </li>\r\n                                        <li> -an : 네트워크의 연결상태를 알아보는 옵션 , -a + -n 을 합친 명령어 </li>\r\n                                        <li>  :  </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\">  <span className=\"sstitle\"> 명령어 옵션(Rinux) </span>\r\n                                        <li>  :  </li>\r\n                                    </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkCommand;","import React from 'react';\r\n\r\nconst NetworkArpprotocol = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ ARP 프로토콜이란? <a name=\"ARP 프로토콜이란?\" style={{ visibility: \"hidden\" }}> ARP 프로토콜이란? </a> </summary>\r\n              <small> Address Resolution Protocol </small>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> IP주소를 이용하여 MAC주소를 알아내는 프로토콜 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 실제 IP, MAC주소를 이용하여 전송할 위치를 사용하기 때문에 MAC주소가 필요 </li>\r\n                  <li> 3계층 IP주소를 2계층 MAC주소와 이어주는 프로토콜 </li>\r\n                  <li> IPv4에서만 사용, IPv6에서는 NDP를 사용 </li>\r\n                  <li> 24bit(제조업체 식별 정보) + 24bit(NIC제조업체에서 정한 시리얼 넘버) , aa:bb:cc:dd:ee:ff </li>\r\n                  <li> 반대로 MAC주소로 IP주소를 알아오는 RARP라는 프로토콜도 있음 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ ARP 작동원리 <a name=\"ARP 작동원리\" style={{ visibility: \"hidden\" }}> ARP 작동원리 </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 같은 네트워크 일때 </span>\r\n                <span className=\"mblock\">\r\n                  <ol>\r\n                    <li> A에서 모든 단말기로 ARP요청을 같은 도메인 영역에 있는 브로드캐스트방식으로 보낸다. </li>\r\n                    <li> ARP Request패킷을 받은 다른 단말기 들은 본인의 IP주소가 맞는지 패킷에서 확인한다. </li>\r\n                    <li> 아니라면 무시하고 맞는다면 ARP Reply패킷을 만들어 응답을 한다. </li>\r\n                    <li> A단말기는 일치하는 단말기의 MAC주소를 기억한다. </li>\r\n                    <li>  </li>\r\n                  </ol>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 다른 네트워크 일때 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ ARP 패킷 구조 <a name=\"ARP 패킷 구조\" style={{ visibility: \"hidden\" }}> ARP 패킷 구조 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <table border=\"1\" width=\"380\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th colSpan=\"2\"> Hardware Type(16) </th>\r\n                        <th colSpan=\"1\"> Protocol Type(16) </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"1\"> Hardware Address Len(8) </th>\r\n                        <th colSpan=\"1\"> Protocol Address Len(8) </th>\r\n                        <th colSpan=\"1\"> Operation Code(16) </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"3\"> Source Hardware Address() </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"3\"> Source Protocol Address() </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"3\"> Destination Hardware Address() </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"3\"> Destination Protocol Address() </th>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <li> Hardware Type : 네트워크의 유형, 이더넷 통신시 값은 항상 1 </li>\r\n                  <li> Protocol Type : 매핑 대상의 프로토콜 주소 유형, IPv4=0x0800</li>\r\n                  <li> Hardware Address Len : MAC주소의 길이 , 이더넷 통신시 6</li>\r\n                  <li> Protocol Address Len : 프로토콜 주소의 길이 , 이더넷일때 4 </li>\r\n                  <li> Operation Code : ARP의 동작을 나타냄 <br /> [ARP Request , ARP Reply , RARP Request , RARP Reply]=1,2,3,4</li>\r\n                  <li> Source Hardware Address : 송신자의 MAC주소 </li>\r\n                  <li> Source Protocol Address : 송신자의 IP 주소 </li>\r\n                  <li> Destination Hardware Address : 수신자의 MAC주소 , ARP Request일때 0 </li>\r\n                  <li> Destination Protocol Address : 수신자의 IP주소 </li>\r\n                  {/*  */}\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NetworkArpprotocol;","import React from 'react';\r\n\r\nconst NetworkOSI7Layer = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ OSI 7 Layer <a name=\"OSI 7 Layer\" style={{ visibility: \"hidden\" }}> OSI 7 Layer  </a> </summary>\r\n                            <small> Open Systems Interconnection Reference Model , 프로토콜 디자인과 통신을 계층별로 나누어 설명하는 것 </small>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 7 계층 , Application 응용 계층<a name=\"7 계층 , Application 응용 계층\" style={{ visibility: \"hidden\" }}> 7 계층 , Application 응용 계층 </a> </summary>\r\n                                    <small> 편지지 위에다가 글을 작성 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 인터페이스와 네트워크 서비스를 제공 #브라우저  </li>\r\n                                        <li> 사용자가 데이터를 생성하는 계층 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 6 계층 , Presentation 표현 계층 <a name=\"6 계층 , Presentation 표현 계층\" style={{ visibility: \"hidden\" }}> 6 계층 , Presentation 표현 계층 </a> </summary>\r\n                                    <small> 작성한 편지지를 편지봉투에 넣음  </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 사용자가 입력한 데이터를 컴퓨터가 알 수 있게 해주는 확장자나 (html,css등)표현 방식을 알려주는 계층 </li>\r\n                                        <li> 암호화와 압축화를 지원하는 계층 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 5 계층 Session , 세션 계층 <a name=\"5 계층 Session , 세션 계층\" style={{ visibility: \"hidden\" }}> 5 계층 Session , 세션 계층 </a> </summary>\r\n                                    <span> 우체국이 하는지 안하는지 판단 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 네트워크 간에 연결을 하거나 끊거나, 유지 , 상태를 담당 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 4 계층 Transport , 전송 계층 <a name=\"4 계층 Transport , 전송 계층\" style={{ visibility: \"hidden\" }}> 4 계층 Transport , 전송 계층 </a> </summary>\r\n                                    <small> 빠른편지인지 일반편지인지 설정, 어느 나라로 보낼것인지 설정(이해하는 언어가 다름)  </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 데이터의 전송방식을 설정(TCP, UDP)  </li>\r\n                                        <li> 서비스의 포트번호를 구별 : HTTP(80) , Telnet(23) , FTP(20,21)  </li>\r\n                                        <li> 장비 : L4 스위치 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 3 계층 Network , 네트워크 계층 <a name=\"3 계층 Network , 네트워크 계층\" style={{ visibility: \"hidden\" }}> 3 계층 Network , 네트워크 계층 </a> </summary>\r\n                                    <small> 편지가 도착할 목적지를 적음 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 논리적인 주소를 기반으로 출발지에서 목적지까지 경로를 설정하는 계층, 대표적으로 IP주소 </li>\r\n                                        <li> 장비 : 라우터, L3 스위치 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 2 계층 DataLink , 데이터 링크 계층 <a name=\"2 계층 DataLink , 데이터 링크 계층\" style={{ visibility: \"hidden\" }}> 2 계층 DataLink , 데이터 링크 계층 </a> </summary>\r\n                                    <small> 편지가 이동되는 운송수단 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> MAC주소를 이용, 즉 노드와 노드의 전송 형태(기기마다 고유한 주소가 존재) </li>\r\n                                        <li> 1계층에서 보내는 방식에 따라서 달라짐 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 1 계층 Physical , 물리 계층 <a name=\"1 계층 Physical , 물리 계층\" style={{ visibility: \"hidden\" }}> 1 계층 Physical , 물리 계층 </a> </summary>\r\n                                    <small> 편지가 실제 이동 되는 구간 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 2계층까지 만들어진 데이터를 이진수로 변환하여 실질적으로 이동되는 계층 </li>\r\n                                        <li> 장비 : 케이블, 커넥터, 리피터 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkOSI7Layer;","import React from 'react';\r\n\r\nconst NetworkThreeWayHandshake = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 3Way Handshake란? <a name=\"3Way Handshake란?\" style={{ visibility: \"hidden\" }}> 3Way Handshake란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 서버와 클라이언트가 서로 데이터를 전송할 수 있는 준비환경이 되었다는 것을 확인하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> TCP 통신을 할 때 프로세스와 프로세스를 연결하기 위해 수행하는 과정, TCP연결 초기화 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 3Way Handshake 실행 과정 <a name=\"3Way Handshake 실행 과정\" style={{ visibility: \"hidden\" }}> 3Way Handshake 실행 과정 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 클라이언트 → 서버 <br /> 클라이언트는 SYN 패킷 발송하고 SYN/ACK를 기다리는 SYN_SENT 상태로 변경 </li>\r\n                                    <li> 1-1.  → 서버 <br /> 서버는 초기에 LISTEN 상태, 클라이언트에게 SYN 요청을 받음 , SYN flag 설정을 바꿈  </li>\r\n                                    <li> 2. 서버 → 클라이언트 <br /> ACK와 SYN 발송, 서버는 SYN_RECEIVED 상태 </li>\r\n                                    <li> 3. 클라이언트 → 서버 <br /> 클라이언트 ACK 발송 , 클라이언트 ESTABLISHED 상태 </li> <br />\r\n                                    <li> 3-1. → 서버 <br /> 서버는 ESTABLISHE 상태 </li> <br />\r\n                                    <li> TCP :  </li>\r\n                                    <li> SYN(Synchronize Sequence Numbers) : 접속 요청 패킷 </li>\r\n                                    <li> ACK(Acknowledgment) : </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkThreeWayHandshake;","import React from 'react';\r\n\r\nconst NetworkDevice = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkDevice;","import React from 'react';\r\n\r\nconst NetworkWireshark = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wireshark 설치 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wireshark란? <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 패킷을 수집해주는 tool </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wireshark 보는법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> No </span>\r\n                                <small> 패킷을 수집한 순서 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Time </span>\r\n                                <small> 패킷이 수집된 시간 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Source </span>\r\n                                <small> 패킷을 보낸 주소 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Destination </span>\r\n                                <small> 패킷 도착 주소 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Protocol </span>\r\n                                <small> 프로토콜 정보 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Length </span>\r\n                                <small> 패킷의 길이 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Info </span>\r\n                                <small> 패킷 정보 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 원하는 패킷만 보는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> wireshark상단에 검색을 하면 원하는 내용만 필터로 걸러서 볼 수 있다. </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wireshark 설정 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ TCP 프로토콜 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkWireshark;","import React from 'react';\r\n\r\nconst NetworkProtocol = (props) => {\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ DNS <a name=\"DNS\" style={{ visibility: \"hidden\" }}> DNS </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> 도메인 주소를 IP주소로 변경해주는 곳 </li>\r\n                <li> 어플리케이션 계층 </li>\r\n                <li> 포트 : UDP/53(일반) , TCP/53(512B 이상, 존영역? 전달하는 경우) </li>\r\n                <li> 도메인 구조\r\n                  <span className=\"mblock\">\r\n                    <li> [ .kr .jp .cn | .net .com ... ] </li>\r\n                    <li> [ .co .go .or |  도메인 ] </li>\r\n                    <li> [ 도메인 | ] </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> DNS 역할\r\n                  <span className=\"mblock\">\r\n                    <li> 호스트 도메인은 여러 도메인 별칭을 가질 수 있다. </li>\r\n                    <li> 하나의 같은 도메인에 대해 여러 IP가 사용이 가능해 번갈아가면서 부하를 분산 시켜 줄 수 있다. </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> DNS 과정\r\n                  <span className=\"mblock\">\r\n                    <li> 1. 클라이언트가 로컬 DNS에 도메인 주소를 요청한다. </li>\r\n                    <li> 2. 로컬 DNS가 루트 DNS에 요청한 도메인 주소를 물어본다. </li>\r\n                    <li> 3. 루트 DNS가 com을 인식하면 최상위 도메인 DNS서버IP를 로컬DNS에 알려준다. </li>\r\n                    <li> 4. 로컬 DNS가 최상위 도메인 DNS서버에 주소를 요청한다. </li>\r\n                    <li> 5. 최상위 도메인 DNS서버가 naver를 보고 책임 DNS서버IP를 로컬 DNS서버에 알려준다. </li>\r\n                    <li> 6. 로컬 DNS서버가 책임 DNS서버에게 도메인 주소를 물어본다. </li>\r\n                    <li> 7. 책임 DNS서버가 처음 요청한 도메인 IP를 로컬 DNS서버에 알려준다. </li>\r\n                    <li> 8. 로컬 DNS서버가 클라이언트에게 처음 요청한 도메인 IP를 알려준다. </li>\r\n                    <li> 9. 로컬 DNS서버가 요청한 도메인 주소를 기억하고 있는다.(DNS캐싱) </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> 도메인 자원 레코드\r\n                  <span className=\"mblock\">\r\n                    <li> DNS 요청은 하나이상의 레코드를 가진 메세지로 응답 </li>\r\n                    <li> 1. 호스트이름 , 호스트이름IP , A </li>\r\n                    <li> 2. 도메인 주소 , 책임 DNS 서버 주소 , NS  </li>\r\n                    <li> 3. 별칭 호스트 이름, 정식 호스트이름 , CNAME </li>\r\n                    <li> 4. 별칭 호스트 이름, 정식 메일서버이름, MX </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"stitle\"> 원격 접속 </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ SSH - 원격 접속 터미널 <a name=\"SSH\" style={{ visibility: \"hidden\" }}> SSH </a> </summary>\r\n              <small> Secure Shell </small>\r\n              <span className=\"sblock\">\r\n                <li> 보안을 중요시한 프로토콜 , 정보가 암호화 되어 전송이 된다.</li>\r\n                <li> 원격 접속을 하는 이유는 호스팅업체나 클라우드 서버를 사용할 때 그 장소에 갈 수는 없기 때문 </li>\r\n                <li> public key 와 private key를 이용한다.  </li>\r\n                <li> 포트 : 22번 </li>\r\n                <li>  </li>\r\n                {/*  */}\r\n                <li> SSH 과정\r\n                  <span className=\"mblock\">\r\n                    <li> 1. 클라이언트에서 ssh-keygen으로 공개키와 비밀키를 생성 </li>\r\n                    <li> 2. 클라이언트의 공개 키를 원격 서버에 전송 </li>\r\n                    <li> 3. 클라이언트가 서버에 접속을 요청하면 서버에서는 임의의 문자열을 생성하고, 이 문자열을\r\n                      클라이언트의 공개 키로 암호화 해서 클라이언트에게 전송 </li>\r\n                    <li> 4. 클라이언트는 서버에서 받은 문자열을 개인키로 복호화한다. </li>\r\n                    <li> 5. 이제부터는 원격서버와 클라이언트가 동일한 문자열을 이용하여 해시값을 구하고 해시값을 비교\r\n                      해서 인증을 한다. </li>\r\n                    <li> 6. 인증이 성공하면 접속가능 </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> 클라이언트에서 ssh로 접속 방법\r\n                  <span className=\"mblock\">\r\n                    <li> $ ssh UserName@HostName </li>\r\n                    <li> $ ssh -p 포트번호 UserName@HostName , #포트번호를 따로 지정하는 방법 </li>\r\n                    <li> $ ssh-keygen , #공개키 생성 </li>\r\n                    <li> $ cat ~/.ssh/id_rsa.pub , #공개키 확인 하는 방법 </li>\r\n                    <li> $ ssh -L port1:host_name:port2 server_name , #서버에 설치된 서버의 포트와 연결 , (Local Port Forwarding) </li>\r\n                    <li> $ ssh -R port1:host_name:port2 server_name , #서버에 설치된 서버의 포트와 연결 , (Remote Port Forwarding) </li>\r\n                    <li> $  </li>\r\n                    <li> $  </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ Rlogin - 원격 접속 터미널 <a name=\"Rlogin\" style={{ visibility: \"hidden\" }}> Rlogin </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ Telnet - 원격 접속 터미널<a name=\"Telnet\" style={{ visibility: \"hidden\" }}> Telnet </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ FTP - 파일을 교환하기 위한 프로토콜 <a name=\"FTP\" style={{ visibility: \"hidden\" }}> FTP </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> 인터넷상의 컴퓨터 간에 파일을 교환하기 위한 표준 프로토콜 </li>\r\n                <li> 포트 : TCP 20,21 </li>\r\n                <li> 21번 포트는 제어연결로 사용 , 클라이언트와 서버의 응답과 명령에 사용 , FTP세션 동안 연결 유지 </li>\r\n                <li> 20번 포트는 데이터연결로 사용, 파일이 전송에 사용, 파일 전송이 끝나면 연결 종료 </li>\r\n                <li>  </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NetworkProtocol;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Backtracking = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Backtracking;","import React from 'react';\r\n\r\nconst Algorithm_Divide_Conquer = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Divide_Conquer;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Dynamic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Dynamic;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Graph = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ BFS 알고리즘(너비 우선탐색) </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 루트 노드에서 시작해서 인접한 노드를 탐색하여 전체 그래프를 탐색하는 방법 </li>\r\n                                        <li> 최단 거리를 구하는 알고리즘 </li>\r\n                                        <li> Queue 구조를 이용 </li>\r\n                                        <li> 간선의 가중치가 모두 1일때 사용 가능  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 장단점 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li className=\"col_be\"> 장점\r\n                                            <li> 노드의 수가 적고 깊이가 얕으면 빠르게 동작할 수 있음 </li>\r\n                                            <li> DFS보다 빠름 , 단 너무 깊다면 DFS를 사용하는 것이 좋음 </li>\r\n                                            <li> 최단경로를 반드시 찾음 </li>\r\n                                            <li> 모든 정점을 방문할 때, 최단거리 문제를 구할 때 </li>\r\n                                        </li>\r\n                                        <li className=\"col_r\"> 단점\r\n                                            <li> DFS는 재귀를 사용하여 저장공간이 적지만 BFS는 저장 공간이 많이 필요 </li>\r\n                                            <li> 노드의 수가 늘어나면 탐색해야하는 노드가 많아져 않좋음 </li>\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 그래프 구현 방법 2가지 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 2차원 배열(인접행렬) , 시간복잡도: O(N<sup>2</sup>) </li>\r\n                                        <li> 링크드리스트, 어레이리스트(인접리스트) , 시간복잡도: O(N+E) </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 예시 코드 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶ JAVA </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li> <span className=\"sstitle\"> 인접 행렬(2차원배열) 예시 </span> </li>\r\n                                                <li> {'queue<int> q;'} </li>\r\n                                                <li> check[1] = true; q.push(1); </li>\r\n                                                <li> while (!q.empty()) {'{'}\r\n                                                    <li> int x = q.front(); q.pop(); </li>\r\n                                                    <li> for (int i=1; i{'<='}n; i++) {'{'}\r\n                                                        <li> if (a[x][i] == 1 {'&&'} check[i] == false) {'{'}\r\n                                                            <li> check[i] = true; </li>\r\n                                                            <li> q.push(i); </li>\r\n                                                        </li>\r\n                                                        <li> {'}'} </li>\r\n                                                    </li>\r\n                                                    <li> {'}'} </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶ C </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li> <span className=\"sstitle\"> 인접 행렬(2차원배열) 예시 </span> </li>\r\n                                                <li> static void bfs(int node) {'{'}\r\n                                                    <li> BFS_isVisit[node] = true; </li>\r\n                                                    <li> BFS_visitArray.add(node); </li>\r\n                                                    <li> for(int i=0; i{'<='}nodeNum; i++)\r\n                                                        <li> if( graph[node][i] == 1 {'&&'} BFS_visitArray[i] == false\r\n                                                            {'&&'} queue.contains(i)==false) {'{'}\r\n                                                            <li> queue.add(i); </li>\r\n                                                        </li>\r\n                                                        <li> {'}'} </li>\r\n                                                    </li>\r\n                                                    <li> {'}'} </li>\r\n                                                    <li> if(!queue.isEmpty())\r\n                                                        <li> bfs(queue.poll()); </li>\r\n                                                    </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sblock\">\r\n                                                <li> <span className=\"sstitle\"> 인접 리스트(링크드,어레이리스트) 예시 </span> </li>\r\n                                                <li> static void bfs(int node) {'{'}\r\n                                                    <li> BFS_isVisit[node] = true; </li>\r\n                                                    <li> BFS_visitArray.add(node); </li>\r\n                                                    <li> for(int i=0; i{'<'} graph[node].size() ; i++) {'{'}\r\n                                                        <li> int adjNode = graph[node].get(i); </li>\r\n                                                        <li> if(BFS_isVisit[adjNode] == false {'&&'} queue.contains(adjNode) == false ) {'{'}\r\n                                                            <li> queue.add(adjNode); </li>\r\n                                                        </li>\r\n                                                        <li> {'}'} </li>\r\n                                                    </li>\r\n                                                    <li> {'}'} </li>\r\n                                                    <li> if(!queue.isEmpty())\r\n                                                        <li> bfs(queue.poll()); </li>\r\n                                                    </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶ Python </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶  </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ DFS 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 다익스트라(최단경로) 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 프라임 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 크루수 칼 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Graph;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Greedy = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 그리디 알고리즘\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 순간 최적의 선택을 하여 문제를 풀어나가는 방식 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Greedy;","import React from 'react';\r\n\r\nconst Algorithm_Hash = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Hash;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Recursive = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Recursive;","import React from 'react';\r\n\r\nconst Algorithm_Search = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Search;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Algorithm_Sort = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"정렬 알고리즘\"> 정렬 알고리즘 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 선형 정렬(linear sort) </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 처음부터 끝까지 순서대로 확인해서 정렬</li>\r\n                                        <li> 장점: 어디서든 사용이 가능하다. </li>\r\n                                        <li> 단점: 상대적으로 시간이 오래 걸린다. </li>\r\n                                        <li> 시간 복잡도: O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 이진 정렬(binary sort) </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 남은 값들 중에 중간값을 찾아 제외하는 방법 </li>\r\n                                        <li> 장점: ^2 만큼 순서가 줄어든다. </li>\r\n                                        <li> 단점: 배열이 크기순으로 정렬이 되어있어야 가능하다. </li>\r\n                                        <li> 시간 복잡도: O(n<sup></sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 선택 정렬(selection sort)  </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 자신보다 뒤에 요소를 탐색하고 자신보다 작으면 바꾸는 방법 </li>\r\n                                        <li> 장점: 구현이 쉬움 </li>\r\n                                        <li> 단점: 비효율적  </li>\r\n                                        <li> 시간 복잡도: O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 삽입 정렬(insertion sort)  (상활에 따라 추천)</summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 자신 이전의 모든요소를 탐색하고 비교하여 자신의 위치를 찾아 삽입하는 방법 </li>\r\n                                        <li> 장점: 상황에 따라 O(N)의 속도를 가진다. </li>\r\n                                        <li> 단점: 상황에 따라 O(N<sup>2</sup>)을 가지므로 일반적으로 사용되면 안된다. </li>\r\n                                        <li> 시간 복잡도: O(n<sup></sup>) ~ O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 버블 정렬(bubble sort) </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 인접한 인덱스를 비교하면서 정렬하는 방법 </li>\r\n                                        <li> 장점: 구현이 쉽다. </li>\r\n                                        <li> 단점: 비효율적이다. </li>\r\n                                        <li> 시간 복잡도: O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 퀵 정렬(quick sort) </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 피벗을 이용해서 두 부분을 나누고 정렬 하는 방법 </li>\r\n                                        <li> 장점: 효율적인 편 </li>\r\n                                        <li> 단점: 피벗의 위치에 따라 비효율적일 수도 있다. </li>\r\n                                        <li> 시간 복잡도: O(NlogN) ~ O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 힙 정렬(heap sort) (추천)</summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 이진트리구조? </li>\r\n                                        <li> 장점: 효율적인 편  </li>\r\n                                        <li> 단점:  </li>\r\n                                        <li> 시간 복잡도: O(NlogN)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 합병 정렬(merge sort) (추천)</summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 리스트를 모두 분할한 후에 병합을 하는 방법 </li>\r\n                                        <li> 장점: 효율적인 편 </li>\r\n                                        <li> 단점: 추가적인 메모리 공간 필요 </li>\r\n                                        <li> 시간 복잡도: O(NlogN)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 쉘 정렬 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법:  </li>\r\n                                        <li> 장점: 삽입정렬 보다 상황에 따라 빠르다. </li>\r\n                                        <li> 단점: 성능 차이가 심하다. </li>\r\n                                        <li> 시간 복잡도: O(n) ~ O(n<sup>1.3,1.5</sup>) ~  O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 기수 정렬 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법:  </li>\r\n                                        <li> 장점: 속도가 매우 빠름 </li>\r\n                                        <li> 단점: 메모리가 많이 필요, 데이터 타입 일정, 구현 조건이 많음 </li>\r\n                                        <li> 시간 복잡도: O(n<sup></sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 카운팅 정렬 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 원소가 카운팅된 빈 배열을 만들고 그곳에 배열을 정렬하는 방법  </li>\r\n                                        <li> 장점: 속도가 매우 빠름 </li>\r\n                                        <li> 단점: 메모리 공간이 필요, 메모리 낭비가 심할 수도 있음 </li>\r\n                                        <li> 시간 복잡도: O(n<sup></sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"sstitle\"> ▶  </summary>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"sstitle\"> ▶  </summary>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"sstitle\"> ▶  </summary>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Sort;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Basic = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ LRU 캐시 알고리즘\r\n                                    <a name=\"LRU 캐시 알고리즘\" style={{ visibility: \"hidden\" }}> LRU 캐시 알고리즘 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> Least Recently User Algorithm </li>\r\n                                        <li> 캐시 알고리즘 중 1종류 </li>\r\n                                        <li> 캐시상에서 최근에 사용된 적이 없거나 , 데이터를 갱신 시켜줄 때 사용 </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Basic;","import React from 'react';\r\n\r\nconst WindowCommand = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ cmd 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> cd 폴더 : 폴더로 이동 </li>\r\n                                    <li> cd.. : 이전 폴더로 돌아가기 </li>\r\n                                    <li> dir : 폴더가 포함하고 있는 파일 목록 보여주기 </li>\r\n                                    <li> 파일명 tasks : 파일로 실행할 수 있는 명령어 보여주기 </li>\r\n                                    <li> clear : 터미널 초기화 </li>\r\n                                    <li> tree : 디렉토리의 구조를 보여준다? (너무많이 나옴) </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ window 실행창 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> appwiz.cpl : 윈도우 제어판 실행 </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WindowCommand;","import React from 'react';\r\n\r\nconst WindowSystem = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wifi <a name=\"Wifi\" style={{ visibility: \"hidden\" }}> Wifi </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 인터넷 속도 측정 사이트 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> <a href=\"https://www.speedtest.net/\" target=\"_blank\"> Speedtest.net </a> </li>\r\n                                    <li> 100정도가 안나오면 문제가 있을 수도 있음 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 인터넷 속도 증가 하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 실행창 - gpedit.msc - 컴퓨터 구성 - 관리 템플릿 - 네트워크 - qos 패킷 스케줄러\r\n                                        - 예약대역폭제한 - 사용 - 100% </li>\r\n                                    <small> 기본이 80%이지만 개인 사용자는 상관 없음 ( 20%는 서비스 등으로 사용되는것 같음 ) </small>\r\n                                    <li> 와이파이 아이콘 우측클릭 - 네트워크 및 인터넷 설정 열기 - 어댑터 옵션 변경 -\r\n                                        사용하는 네트워크 우측클릭 속성 - 인터넷 프로토콜 버전 4 속성 - 다음 DNS 서버 주소 사용\r\n                                        - 기본 설정 DNS 서버 8.8.8.8 , 보조 DNS 서버 8.8.8.4 (Google)혹은\r\n                                        1.1.1.1, 1.0.0.1 (Cloudflare)사용 </li>\r\n                                    <li> cmd - ipconfig/displaydns - ipconfig/flushdns </li>\r\n                                    <li> 브라우저 옵션 초기화(캐시나 쿠키)등등 지워주기  </li>\r\n                                    <li> 고클린 설치 - 인터넷이 느려질때 </li>\r\n                                    <li> 실행창 - regedit - 컴퓨터\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Multimedia\\SystemProfile\r\n                                        - NetworkThrottlingIndex - 10진수, 70으로 변경 </li>\r\n                                    <li> cmd - netsh interface tcp set global autotuninglevel=highlyrestricted </li>\r\n                                    <small> 더 안좋아지면 원상태로 복구 netsh interface tcp set global autotuninglevel=normal </small>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 컴퓨터가 전원절약하기 위해서 장치를 끄지 못하게 하는 방법  </span>\r\n                                <small> 오류 : 무선 어댑터 또는 액세스 지점 문제 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> \"제어판\" - \"하드웨어 및 소리\" - \"장치 관리자\" - \"네트워크 어댑터\" - 랜 관련 네크워크 우측클릭 - 속성 - 전원관리 -\r\n                                        \"전원을 절약하기 위해 컴퓨터가 이 장치를 끌 수 있음\" 체크해제 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 알약 광고 제거 <a name=\"알약 광고 제거\" style={{ visibility: \"hidden\" }}> 알약 광고 제거 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 알약 광고 제거 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 환경설정 - 작업설정 - 업데이트 설정 - 업데이트 완료 메시지 보기, 업데이트 실패 알림 메시지 보기 2개 항목 체크해제 </li>\r\n                                    <li> 환경설정 - 기타설정 - 게임모드 - 업데이트 연기, 예약작업 연기, 알림메시지 보지않음 3개 항목 모두 체크되었는지 확인 </li>\r\n                                    <li> 환경설정 - 기타설정 - 기타 - 보안 안내 메시지 보기, 인터넷 연결 알림 메시지 보기, 알약 알리미 보기 3개 항목 체크 해제 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 윈도우 10 관리자 권한 실행창 없애는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 관리자 권한을 사용하는 이유 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자 컴퓨터 레지스트리에 접근이 필요한 경우 , 레지스트리는 윈도우 시스템의 모든 설정 데이터를 모아두는 중앙 저장소 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 윈도우 10 관리자 권한 실행창 없애는 방법  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 돋보기 검색 \"사용자 계정 컨트롤 설정 변경\" - </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 관리자 권한으로 실행하기 1 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 실행 프로그램 우측클릭해서 관리자 권한으로 실행하기 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 관리자 권한으로 실행하기 2 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 실행 프로그램 우측클릭해서 속성 - 고급 - 관리자 권한으로 실행 체크 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 관리자 권한으로 실행하기 3 (권장x) </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 실행(Win+R) - regedit - EnableLUA 항목 찾아서 0으로 만들면 되는데 그냥 모르느게 편함  </li>\r\n                                    <small>  경로 : 컴퓨터 - 키로컬머신 - 소프트웨어  - 마이크로소프트 - 윈도우즈 - 현재버전 - 정책들 - 시스템 </small>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 컴퓨터에 문제가 생겼을 때 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> chkdsk /f </li>\r\n                                    <li> sfc /scannow  </li>\r\n                                    <li> DISM.exe/Online/Cleanup-image/Restorehealth </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WindowSystem;","import React from 'react';\r\n\r\nconst LinuxBasic = (props) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스 다운로드 <a name=\"\" style={{ visibility: \"hidden\" }}> 리눅스 다운로드 </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 7-zip 다운로드 </span>\r\n                <span className=\"mblock\">\r\n                  <li> <a href=\"https://www.7-zip.org/download.html\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                  <li> .exe 64-bit x64 다운로드하기 </li>\r\n                  <li> 실행해서 설치하기 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> VMware Workstation Pro 다운로드 </span>\r\n                <span className=\"mblock\">\r\n                  <li> <a href=\"https://www.vmware.com/kr/products/workstation-pro/workstation-pro-evaluation.html\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                  <li> Windows용 Workstation 16 Pro 지금 다운로드 </li>\r\n                  <li> Custom Setup 2개다 체크해제 </li>\r\n                  <li> User Experience Settings 2개다 체크해제 </li>\r\n                  <li> 인증 키 넣어주기 #개인이 알아서 찾아보기를... </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스의 탄생과 역사 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 리눅스의 탄생 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  1970년도 이전의 컴퓨터는 공장에 맞는 고유의 운영체제를 가지고 있어서\r\n                    하나의 운영체제로 운영이 불가능 그래서 벨 연구소에서 유닉스라는 운영체제를 개발하기 시작 후에 C언어도 개발 </li>\r\n                  <li> 리눅스는 1991년 핀란드 헬싱키 대학의 리누스 토발즈(Linus Benedict Torvalds)라는 학생에 의해 만들어진 운영체제  </li>\r\n                  <li> 리눅스의 첫 시작은 유닉스 호환 운영체제를 목표로 하는 GNU 프로젝트(모두가 공유할 수 있는 소프트웨어) </li>\r\n                  <li> 유닉스 운영체제로 학교에서 하나의 컴퓨터를 놓고 여러사람이 입력장치와 출력장치를 연결해서 사용하고\r\n                    복제,변경,소스코드사용제한에 불만을 가져 리눅스를 만들어버림(레드햇이나 우분투같은 배포판 OS가 아닌\r\n                    커널만 존재하는 초기의 리눅스)  </li>\r\n                  <li>   </li>\r\n                  <li>   </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스 구조 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 1. Hardware(CPU,RAM) </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 2. 커널 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 하드웨어와 소프트웨어 사이에서 제어 역할을 해주는 곳 </li>\r\n                  <li> <span className=\"sstitle\"> 커널의 기능 </span>\r\n                    <li> 1. 메모리가 어디에서 무엇을 저장하는 데 얼마나 사용되는지를 확인 </li>\r\n                    <li> 2. 프로세스가 CPU를 언제 얼마나 사용할지 결정 </li>\r\n                    <li> 3. 하드웨어와 프로세스 사이에서 중재자의 역할 </li>\r\n                    <li> 4. 프로세스의 서비스 요청을 수신 </li>\r\n                    <li>  </li>\r\n                    {/*  */}\r\n                    <p className=\"sblock\">  <span className=\"sstitle\"> 1. Task 관리  </span>\r\n                      <li> 물리적인 자원을 task라는 추상적인 자원으로 제공 </li>\r\n                      <li> task의 생성, 실행, 스케줄링, 프로세스간 통신등의 서비스를 제공 </li>\r\n                      <li> Task : 컴퓨터 상에서 하나의 작업 </li>\r\n                      <li> Process : 컴퓨터 상에서 하나의 작업을 이루는 과정 </li>\r\n                      <li> Thread : 프로세스를 이루는 하나 하나의 개별 작업 </li>\r\n                    </p>\r\n                    {/*  */}\r\n                    <p className=\"sblock\">  <span className=\"sstitle\"> 2. 메모리 관리 </span>\r\n                      <li> 메모리를 세그먼트나 페이지라는 개념으로 제공 </li>\r\n                      <li> 물리 메모리 관리, 가상메모리 관리 그리고 이들을 위한 세그멘테이션, 페이징,\r\n                        페이지 부재 결함 처리등의 서비스를 제공 </li>\r\n                    </p>\r\n                    {/*  */}\r\n                    <p className=\"sblock\">  <span className=\"sstitle\"> 3. 파일시스템관리 </span>\r\n                      <li> 디스크를 파일이라는 개념으로 제공 </li>\r\n                      <li> 파일의 생성, 접근 제어, inode관리? , 디렉토리 관리, 수퍼 블록 관리 등의\r\n                        서비스를 제공 </li>\r\n                    </p>\r\n                    {/*  */}\r\n                    <p className=\"sblock\">  <span className=\"sstitle\"> 4. 디바이스 관리 </span>\r\n                      <li> 각종 장치를 디바이스 드라이버를 통해 일관되게 접속하도록 해줌 </li>\r\n                      <li> 디스크 터미널, CD, 네트워크 카드 등과 같은 주변 장치를 구동하는 드라이버들로 구성 </li>\r\n                    </p>\r\n                    {/*  */}\r\n                    <p className=\"sblock\">  <span className=\"sstitle\"> 5. 네트워크 관리 </span>\r\n                      <li> 네트워크 장치를 소켓이라는 개념으로 제공해줌 </li>\r\n                      <li> 소켓 인터페이스, TCP/IP 같은 통신 프로토콜 등의 서비스를 제공함 </li>\r\n                    </p>\r\n                    {/*  */}\r\n                  </li>\r\n                  <li> <span className=\"sstitle\"> 커널의 종류? </span>\r\n                    <li> 모놀리식 커널(단일형커널) </li>\r\n                    <li> 마이크로 커널 </li>\r\n                    <li> 하이브리드 커널(혼합형커널) </li>\r\n                    <li> 나노 커널 </li>\r\n                    <li> 엑소 커널 </li>\r\n                  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 3. 쉘(sh, csh, bash) </span>\r\n                <small> sh : 최초의 쉘 , bash : 현재 리눅스에서 표준으로 채택된 쉘 , csh : C언어 기반으로 만들어진 쉘 </small>\r\n                <span className=\"mblock\">\r\n                  <li> 사용자가 컴퓨터에게 명령하는 것을 해석하는 곳 , 명령어 해석기, 명령어와 커널의 대화 통로 </li>\r\n                  <li> bash 셀의 특징\r\n                    <span className=\"sblock\">\r\n                      <li> Alias기능(명령어 단축 기능) </li>\r\n                      <li> History 기능(위/아래 화살표 키) </li>\r\n                      <li> 연산 기능 </li>\r\n                      <li> Job Control 기능 </li>\r\n                      <li> 자동 이름 완성 기능(탭키) </li>\r\n                      <li> 프롬프트 제어 기능 </li>\r\n                      <li> 명령 편집 기능 </li>\r\n                    </span>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 4. 응용프로그램 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스 파일의 종류와 특징 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 1. 일반 파일 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 데이터를 저장하는 데 주로 사용, 텍스트파일, 실행파일, 이미지파일 등 대다수 파일 </li>\r\n                  <li> 실행파일이나 이미지 파일은 바이너리 형태로 저장이 된다. 그리고 보려면은 응용프로그램이 필요 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 2. 디렉터리 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 해당 디렉터리에 저장된 파일이나 하위 디렉터리에 대한 정보를 저장 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 3. 심볼릭 링크 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 윈도우의 바로가기와 비슷 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 장치 파일 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 하드디스크나 키보드 같은 장치도 파일로 취급 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶리눅스 용어 공부 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> 하이퍼바이저 : 호스트 컴퓨터에서 다수의 OS를 사용하기 위한 플랫폼(가상) </li>\r\n                  <li> native방식의 하이퍼바이저 : 이미 설치가 되어있는 윈도우나 리눅스가 바로 운영체제가 클릭이 되는것 </li>\r\n                  <li> hosted방식의 하이퍼바이저 : 일반 프로그램처럼 VM으로 운영을 하는 방식 </li>\r\n                  <li> KVM :  </li>\r\n                  <li> XEN </li>\r\n                  <li> Vmware : </li>\r\n                  <li> HyperV : ms에서 제공하는 상용 하이퍼바이저 , window를 실행하는데 가장 우수함 </li>\r\n                  <li> Docker </li>\r\n                  <li> 커널 : </li>\r\n                  <li> 쉘 : </li>\r\n                  <li> 레드햇 리눅스 :  </li>\r\n                  <li> CentOs 리눅스 : </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스 압축 파일 종류\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 종류 </span>\r\n                <span className=\"mblock\">\r\n                  <li> tar 압축 : 압축률 x , 파일을 모아줌, 압축시간이 빠름 </li>\r\n                  <li> bz 압축 : 압축률 중간, 압축시간도 중간 </li>\r\n                  <li> gz 압축 : 압축률 높음 , 압축시간이 느림 </li>\r\n                  <li> unzip 압축 :  </li>\r\n                  <li> xz 압축 :  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스 사용자 정의 패키지 배포\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> rpm file build toold install  </li>\r\n                  <li> yum -y install rpm - build rpm-sign </li>\r\n                  <li> # rgnd  # 랜덤한 값을 생성해주는 툴? </li>\r\n                  <li> mk </li>\r\n                  <li> mktemp XXXXX # 랜덤한 파일 생성</li>\r\n                  <li> /dev/random # 랜덤한 값을 가지고 있는곳? </li>\r\n                  <li> kill -9 'ps -ef | grep rnge | grep -v grep | awk '{'{print $2}'}'' </li>\r\n                  <li> ps -ef | grep gpg-agent </li>\r\n                  <li> rngd -r /dev/urandom </li>\r\n                  <li> gpg-agent --use-standard-socket --daemon </li>\r\n                  <li> cd /app/script </li>\r\n                  <li> vim keymemo\r\n                    <li> %echo Generating a Standard key </li>\r\n                    <li> Key-Type: default </li>\r\n                    <li> Key-Length: 2048 </li>\r\n                    <li> Subkey-Type: default </li>\r\n                    <li> Subkey-Length: 2048 </li>\r\n                    <li> Name-Real: ssssksss </li>\r\n                    <li> Expire-Date: 0 </li>\r\n                    <li> Passphrase: P@ssw0rd! # 서명에 사용할 비번 </li>\r\n                    <li> %commit </li>\r\n                    <li> %echo done </li>\r\n                  </li>\r\n                  <li> gpg2 --batch --no-tty --gen-key keymemo </li>\r\n                  <li> gpg --fingerprint #지금까지 서명한 것을 보여줌(비밀키) </li>\r\n                  <li> gpg --list-secret-keys #지금까지 서명한 것을 보여줌(공개키) </li>\r\n                  <li> GPG_KEY=0856D448 # pub 2048R/이곳에위치한번호 </li>\r\n                  <li> gpg -a --yes -o /root/RPM-GPG-KEY --export 0856D448 #gpg에 저장된 공개키를 추출 </li>\r\n                  <li> ls -la /root/RPM-GPG-KEY # 추출된 공개키를 확인 </li>\r\n                  <li> echo '%_gpg_name 0856D448' {'>'} /root/.rpmmacros  </li>\r\n                  <li> cd /app/script </li>\r\n                  <li> mkdir hello-1.0.0  </li>\r\n                  <li> cd /hello-1.0.0 </li>\r\n                  <li> vi hello\r\n                    <span className='sblock'>\r\n                      <li> #!/bin/bash </li>\r\n                      <li> echo hello </li>\r\n                    </span>\r\n                  </li>\r\n                  <li> tar czvf hello-1.0.0.tar.gz hello-1.0.0/ </li>\r\n                  <li> vi hello.spec\r\n                    <span className='sblock'>\r\n                      <li> Name:\t\thello </li>\r\n                      <li> Version:\t1.0.0 </li>\r\n                      <li> Release:\t1%{'{'}?dist{'}'} </li>\r\n                      <li> Summary:\tA hello package </li>\r\n                      <li> Group:\t\tTesting </li>\r\n                      <li> License:\tGPL </li>\r\n                      <li> URL:\t\thttp://www.test.com/testing </li>\r\n                      <li> Source0:\thello-1.0.0.tar.gz </li>\r\n                      <li> {' BuildRoot:\t%{mktemp -ud %{_tmppath}/hello-1.0.0-%{release}-XXXXXX} '} # 압축을 해제하면 잠시\r\n                        압축푸는 임시 파일 공간 </li>\r\n                      <li> BuildRequires: /bin/rm, /bin/mkdir, /bin/cp # 의존성 파일 </li>\r\n                      <li> Requires: /bin/bash </li>\r\n                      <li> %description </li>\r\n                      <li>  A hello Package </li>\r\n                      <li> %prep </li>\r\n                      <li> %setup -q </li>\r\n                      <li> %build </li>\r\n                      <li> %install </li>\r\n                      <li> rm -rf $RPM_BUILD_ROOT </li>\r\n                      <li> mkdir -p $RPM_BUILD_ROOT/usr/local/bin </li>\r\n                      <li> cp hello $RPM_BUILD_ROOT/usr/local/bin </li>\r\n                      <li> %clean </li>\r\n                      <li> rm -rf $RPM_BUILD_ROOT </li>\r\n                      <li> %files </li>\r\n                      <li> %defattr(-,root,root,-) </li>\r\n                      <li> %attr(0755,root,root)/usr/local/bin/hello </li>\r\n                      <li> %changelog </li>\r\n                      <li> {'* Sat May 11 2021 test <test@test.com) - 1.0.0 '}  # 잘은 모르겠지만 월단위를 작성할 때 풀네임을\r\n                        사용하는 건 아닌것 같다.(날짜에러발생 ㅠㅠ )</li>\r\n                      <li> - Initial RPM </li>\r\n                    </span>\r\n                  </li>\r\n                  <li> rpmbuild -ba /app/script/hello.spec # 그런 파일이나 디렉토리~~~ 없습니다 출력\r\n                    <li> 만약에 rpmbuild 명령어가 없다고 나오면 yum install rpm-build 로 설치 </li>\r\n                  </li>\r\n                  <li> cp /app/script/hello.spec /root/rpmbuild/SPECS/ </li>\r\n                  <li> cp /app/script/hello-1.0.0.tar.gz /root/rpmbuild/SOURCES/ </li>\r\n                  <li> rpmbuild -ba /app/script/hello.spec </li>\r\n                  <li> ls -la /root/rpmbuild/RPMS/x86_64 </li>\r\n                  <li> rpm -ivh /root/rpmbuild/RPMS/x86_64/hello-1.0.0-1.el7.x86_64.rpm # 프로그램 설치 </li>\r\n                  <li> ls -la /usr/local/bin/hello # 설치된 위치 </li>\r\n                  <li>  서명을 rpm 파일에 넣는 작업\r\n                    <span className='sblock'>\r\n                      <li> ls -la /root/rpmbuild/RPMS/x86_64 </li>\r\n                      <li> rpmsign --addsign /root/rpmbuild/RPMS/x86_64/hello-1.0.0-1.el7.x86_64.rpm </li>\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                    </span>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 관련 사이트\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> pkgs.org # 패키지들의 모임 </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxBasic;","import React from 'react';\r\n\r\nconst LinuxCommand = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 기타 명령어  <a name=\"기타 명령어\" style={{ visibility: \"hidden\" }}> 기타 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 기타 명령어 </span>\r\n                <span className=\"mblock\">\r\n                  <li> command [-단일문자옵션] [--다중문자옵션] </li>\r\n                  <li> dir : 현재 디렉토리에 파일 목록을 조회 </li>\r\n                  <li> clear : 터미널창을 초기화 </li>\r\n                  <li> history : 입력했던 값들을 볼수 있음 (grep으로 이용해서 찾으면 편함) </li>\r\n                  <li> touch 파일명 : 파일을 생성 </li>\r\n                  <li> file [파일명,디렉토리] : 파일의 종류를 알려줌 </li>\r\n                  <li> cat [파일명] : 파일의 내용을 보여줌 </li>\r\n                  <li> cat -n [파일명] : 파일의 내용을 행번호를 붙여서 보여줌 </li>\r\n                  <li> df -k : 분할된 영역이나 사용량을 볼 수 있는 명령어? </li>\r\n                  <li> HEREDOC (sh,csh,Tcsh,ksh,bash,zsh에서 지원 , 별도의 파일인 것처럼 동작 , 표준입력으로 동작, 주석의 용도로 사용)\r\n                    <li> &lt;&lt;[구문문자 식별자] </li>\r\n                    <li> [내용] </li>\r\n                    <li> [구문문자 식별자] </li>\r\n                    <li></li>\r\n                    <li> &lt;&lt;[\"구문문자 식별자\"] , # 쌍따옴표로 감쌀경우 특수문자가 일반문자로 인식이 된다. </li>\r\n                    <li> [$내용] </li>\r\n                    <li> $(printf '\\t') </li>\r\n                    <li> [구문문자 식별자] </li>\r\n                  </li>\r\n                  <li> 탭키 : 자동완성 </li>\r\n                  <li> 탭 2번 연속 : 입력가능한 파일 목록을 보여줌 </li>\r\n                  <li> ./test.sh 매개변수(start, stop, restart) , #이와 같이 사용 </li>\r\n                  <li> 리다이렉션\r\n                    <li> [내용] &gt; [파일명] : 파일이 생성되면서 내용이 추가됨 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n                    <li> [내용] &gt;&gt; [파일명] : 파일이 생성되면서 내용이 추가됨 , 기존의 파일이 존재한다면 하단에 추가됨 </li>\r\n                    <li> cat [파일] 1&gt; [파일명]  : 파일이 생성되면서 표준출력이 추가됨 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n                    <li> cat [파일] 2&gt; [파일명] : 파일이 생성되면서 표준에러가 추가됨 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n                    <li> cat [파일] 1&gt; [파일명] 2&gt;&amp;1  : 표준출력과 에러가 추가됨 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n                    <li> cat [파일] 1&gt; [파일명] 2&gt;/dev/null  : 표준출력 추가, 표준에러 버림 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <li> more [디렉토리] : 화면의 크기를 계산해서 일정 %로 보여주고 엔터를 눌러서 한줄씩 더 볼수 있음 </li>\r\n                  <li> less [디렉토리] : 화면의 크기를 계산해서 일정부분 보여준다. </li>\r\n                  <small> j: 한줄씩 다음행, k: 한줄씩 이전행, spacebar : 다음화면 , b : 이전화면 , q : 종료 </small>\r\n                  <small> cat -n [디렉토리] | more이나less 사용 가능 </small>\r\n                  <li> tail [디렉토리] : 디렉토리 파일에서 뒷부분의 10줄을 읽어준다. </li>\r\n                  <li> tail -n : 디렉토리 파일에서 뒷부분의 n줄을 읽어준다. </li>\r\n                  <li> tail -f : 파일 출력이 종료되지 않고 주기적으로 계속 출력된다. </li>\r\n                  <li> head : 디렉토리 파일에서 앞부분의 10줄을 읽어준다. </li>\r\n                  <li> ps -ef | head -10 </li>\r\n                  <li> --color=[none,auto,always] #ansi escape 색을 따름? </li>\r\n                  <small> echo $GREP COLOR (grep색깔확인) , export GREP_COLOR=22 (grep색깔변경</small>\r\n                  <li> passwd 계정명 : 계정의 패스워드를 설정 </li>\r\n                  <li> umask -S, umask : 기본 퍼미션을 보는방법  </li>\r\n                  <li> umask 022 : 기본 퍼미션값을 변경 (보안 권고사항 022 이상의 숫자사용) </li>\r\n                  <li> stat [파일명] : 파일에 대한 정보를 알려줌\r\n                    <li> atime이 변할 때 : cat와 같이 접근을 하면 변경 </li>\r\n                    <li> mtime이 변할 때 : vi편집기로 수정을 했다면 변경 </li>\r\n                    <li> ctime이 변할 때 : Inode가 변경될 떄 변경 <small> Inode가 변할 때 : chmod, chown이 변경될 때 </small> </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <li> alias\r\n                    <span className=\"sblock\">\r\n                      <span className=\"sstitle\"> alias 명령어='명령어 옵션' </span>\r\n                      <small> 재시작하면 유지가 되지 않음 </small>\r\n                      <small> ls -ld /root/.bashrc #이곳에서 설정을 추가해야 영구적 </small>\r\n                      <li> alias cat='cat -n' #정보를 출력할 때 줄번호를 붙여줌 </li>\r\n                      <li>  </li>\r\n                    </span>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스 단축키 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> Ctrl + A,E : 커서를 줄 앞뒤로 이동 </li>\r\n                  <li> Ctrl + F,B : 커서를 글자 앞뒤로 이동  </li>\r\n                  <li> ALT + F,B : 커서를 단어 앞뒤로 이동 </li>\r\n                  <li> Ctrl+ P,N : 커서를 위아래로 이동 </li>\r\n                  <li> Ctrl + L : 화면을 지우고 커서를 제일 왼쪽으로 </li>\r\n                  <li> Ctrl + D : 현재 글자 지우기 </li>\r\n                  <li> Ctrl + K : 현재부터 그 줄 끝까지 지우기 </li>\r\n                  <li> Ctrl + U : 현재부터 그 줄 처음까지 지우기 </li>\r\n                  <li> ALT + D :  </li>\r\n                  <li> ALT + BackSpace : 현재 위치부터 그 단어 앞까지 삭제 </li>\r\n                  <li> Ctrl + Y : 잘라낸 텍스트를 현재 위치에 삽입 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ cd 명령어 <small> 지정한 디렉토리 위치로 이동  </small>\r\n                <a name=\"cd 명령어\" style={{ visibility: \"hidden\" }}> cd 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> cd [디렉토리경로]  </li>\r\n                  <li> - : 이전의 경로로 이동  </li>\r\n                  <li> . : 현재 디렉토리로 이동 </li>\r\n                  <li> .. : 상위 디렉토리로 이동  </li>\r\n                  <li> ~ : 현재 계정의 홈 디렉토리로 이동 </li>\r\n                  <li> / : 최상위 디렉토리로 이동 </li>\r\n                  <li> /경로1/경로2 : 절대경로로 찾아서 이동 </li>\r\n                  <li> /경로1/경로* : 조건을 만족하는 첫번째 경로로 이동 </li>\r\n                  <li> 경로1* : 상대경로로 찾아서 이동 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ ls 명령어 <small> 디렉토리,파일 정보출력  </small>\r\n                <a name=\"ls 명령어\" style={{ visibility: \"hidden\" }}> ls 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> ls [옵션s] [파일명]  </li>\r\n                  <li> -a : 숨겨진 파일까지 출력 , .을 포함하여 경로 안의 모든 내용을 출력 </li>\r\n                  <li> -A : 숨겨진 파일까지 출력 ,  .과 ..을 제외한 모든 내용을 출력 </li>\r\n                  <li> -l : 파일의 상세정보 까지 출력\r\n                    <span className=\"sblock\">\r\n                      <details> {/* [file,user,group,guest] | link | user | group | size | date | name  */}\r\n                        <summary className=\"stitle\"> ▶ [file,user,group,guest] | link | user | group | size | date | name </summary>\r\n                        <li> [file] : -(일반파일), d(다랙토리) , c(character 장치파일), b(block 장치파일), p(명명된파이프), l(심볼릭링크파일), s(소켓파일) </li>\r\n                        <li> [user,group,guest] : 사용자권한, 그룹권한, 그외권한, rwx(읽기쓰기실행) </li>\r\n                        <li> link : 연결된 링크수</li>\r\n                        <li> user : 사용자 이름 </li>\r\n                        <li> group : 그룹 이름 </li>\r\n                        <li> size : 크기 </li>\r\n                        <li> date : 생성날짜 </li>\r\n                        <li> name : 파일명 </li>\r\n                      </details>\r\n                    </span>\r\n                  </li>\r\n                  <li> -d(+l) : 현재 디렉토리의 상세정보를 표시 </li>\r\n                  <li> -h(+l) : 사람이 보기쉽게 파일의 크기를 출력 </li>\r\n                  <li> -r : 하위 디렉토리까지 출력 </li>\r\n                  <li> -R : 하위 디렉토리의 내용까지 출력 </li>\r\n                  <li> -k , -s : kb단위로 크기 출력 </li>\r\n                  <li> -m : 쉼표로 구분하여 출력 </li>\r\n                  <li> -i : 첫 번째 행에 inode 번호를 출력 </li>\r\n                  <li> -r : 역순으로 출력 </li>\r\n                  <li> -t : 최종수정시간 순서로 출력 </li>\r\n                  <li> -u(+l) : 최종엑세스시간 순서로 출력 </li>\r\n                  <li> -F : 디렉토리에 있는 파일의 종류와 내용을 출력한다. ( * : 실행파일 , / : 디렉토리 파일 , @ : 심벌릭 링크)  </li>\r\n                  <li> -L : 심볼릭 링크 파일의 경우 원본 파일의 정보를 출력  </li>\r\n                  <li> -ld 파일명 : 파일명을 조회해서 자세한 정보를 출력  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> 사용 예시 </span>\r\n                  <span className=\"sblock\">\r\n                    <li> ls -al 파일명,디렉토리 </li>\r\n                    <li> ls -l --time-style=\"+%Y%m%d\" | awk '{'{print $6\" \"$7}'}' , 파일,디렉토리 생성일을 년월일로 보여준다. </li>\r\n                  </span>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ mkdir 명령어 <small> 디렉토리 생성 </small>\r\n                <a name=\"mkdir 명령어\" style={{ visibility: \"hidden\" }}> mkdir 명령어 </a>  </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> mkdir [옵션s] [생성할디렉토리명]  </li>\r\n                  <li> -m [777] : 디렉토리생성할 때 권한생성 , default=755 </li>\r\n                  <li> -p /경로/경로 : 상위 경로가 존재하지 않으면 한꺼번에 생성 </li>\r\n                  <li> -v : 디렉토리를 생성후에 메시지를 출력 </li>\r\n                  <li> --version : mkdir의 버전 출력 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ cp 명령어 <small> 파일이나 디렉토리 복사 </small>\r\n                <a name=\"cp 명령어\" style={{ visibility: \"hidden\" }}> cp 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> cp [옵션s] [파일명] [파일명] , [파일명s] [디렉토리] , [디렉토리] [디렉토리] </li>\r\n                  <li> [파일명1] [파일명2] [디렉토리2] : 파일명1,파일명2를 디렉토리2로 복사한다. </li>\r\n                  <li> -i [파일명1] [파일명2] : 복사를 하면 물어봄 </li>\r\n                  <li> -f [파일명1] [파일명2] : 강제적으로 복사 , 이미 존재하면 덮어쓰기 </li>\r\n                  <li> -r [디렉토리1] [디렉토리2] : 디렉토리1에 있는 파일을 모두 디렉토리2로 복사한다. </li>\r\n                  <li> -l : 심볼릭링크 형식으로 복사 </li>\r\n                  <li> -P : 원본 파일명에 디렉토리 경로도 같이 입력했다면 경로 그대로 복사 </li>\r\n                  <li> -p : 원본파일의 사용자,그룹,권한,시간 정보들을 그대로 복사 </li>\r\n                  <li> -v : 복사 상태를 출력 </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> 사용 예시 </span>\r\n                  <span className=\"sblock\">\r\n                    <li> cp file1 file2 </li>\r\n                    <li> cp /test/test1/file1 /test/test2  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ mv 명령어  <small> (파일,디렉토리) 이동,이름변경 </small>\r\n                <a name=\"mv 명령어\" style={{ visibility: \"hidden\" }}> mv 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> mv [옵션s] [파일명]  </li>\r\n                  <li> -f : 강제로 이동 </li>\r\n                  <li> [파일명1] [파일명1] : 파일명1을 파일명2로 이름을 바꾸기 </li>\r\n                  <li> [디렉토리1] [디렉토리2] : 로 이름을 바꾸기 </li>\r\n                  <li> -t : 전체 원본 파일을 대상 디렉토리로 이동 </li>\r\n                  <li> -n : 존재하는 파일을 덮어쓰지 않음 </li>\r\n                  <li> -v : 이동이나 이름바꾸는 정보를 출력 </li>\r\n                  <li> -i : 존재하는 파일을 덮어쓸 경우 물어봄 </li>\r\n                  <li>  </li>\r\n                  {/*  */}\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> 사용 예시 </span>\r\n                  <span className=\"sblock\">\r\n                    <li> mv test1.txt test2.txt #파일의 이름을 바꿈 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ rm 명령어 <small> 파일이나 디렉토리를 삭제 </small>\r\n                <a name=\"rm 명령어\" style={{ visibility: \"hidden\" }}> rm 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> rm [옵션s] [파일명]  </li>\r\n                  <small> testdisk라는 프로그램으로 복구가 가능하다고 한다. (포렌식에서 사용) </small>\r\n                  <li> -r , -R : 디렉토리를 삭제하는 방법 , 이 옵션을 추가하지 않으면 디렉토리를 삭제할 수 없음 </li>\r\n                  <li> -d : 빈 디렉토리만 제거 </li>\r\n                  <small> rmdir이라는 명령어는 빈 디렉토리를 삭제하는 명령어이지만 안전하게 빈 디렉토리들만을 삭제하는 데 유용하지만\r\n                    잘 사용하지는 않는다.  </small>\r\n                  <li> -f : 강제로 파일이나 디렉토리를 삭제 </li>\r\n                  <li> -i : 삭제할 때 마다 물어봄 </li>\r\n                  <li> -v : 지워지는 파일의 정보를 출력 </li>\r\n                  <li> [파일명1] [파일명2] .. : 파일명1, 파일명2를 삭제  </li>\r\n                  {/*  */}\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> 사용 예시 </span>\r\n                  <span className=\"sblock\">\r\n                    <li> rm -rf ab* : ab이름으로 시작하는 모든 파일과 디렉토리를 삭제 </li>\r\n                    <li> rm -rf ./* : 현재 경로에 있는 모든 파일과 디렉토리를 삭제 </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ pwd 명령어  <small> 현재 위치 절대경로 출력 </small>\r\n                <a name=\"pwd 명령어\" style={{ visibility: \"hidden\" }}> pwd 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> pwd [옵션]  </li>\r\n                  <li> -L : 심볼릭 포함, pwd 환경변수 사용</li>\r\n                  <li> -P : 심볼릭 정보를 포함 </li>\r\n                  {/*  */}\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ halt 명령어 <small> 리눅스 시스템 종료 </small>\r\n                <a name=\"halt 명령어\" style={{ visibility: \"hidden\" }}> halt 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> halt [옵션s]  </li>\r\n                  <li> -f : 강제로 종료 </li>\r\n                  <li> -d : wtmp 파일에 로그를 남기지 않음 </li>\r\n                  <li> -n : 종료할 때 싱크를 하지 않음 </li>\r\n                  <li> -w : /var/log/wtmp에 파일에 로그를 남기고 , 실제 종료를 하지 않음 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ shutdown 명령어 <small> 리눅스 시스템 종료 </small>\r\n                <a name=\"shutdown 명령어\" style={{ visibility: \"hidden\" }}> shutdown 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> shutdown [옵션s] [시간]  </li>\r\n                  <li> -r [+시간] : 시스템 종료후 재부팅 , 단위는 분 </li>\r\n                  <li> -h : shutdown이 완료된후 시스템을 종료 </li>\r\n                  <li> -k : 경고메세지만 출력 , 실제로 종료되지 않음 </li>\r\n                  <li> -f : 재부팅을 빠르게 진행 </li>\r\n                  <li> -c : 시스템 종료/재시작 예약 취소  </li>\r\n                  <li> 시간 : +m(분) , hh:mm(시분) , now(지금) </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> 사용 예시 </span>\r\n                  <span className=\"sblock\">\r\n                    <li> shutdown -h 1 #1분뒤 종료</li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ w 명령어 <small> 서버에 접속한 사용자 접속,작업 정보 </small>\r\n                <a name=\"w 명령어\" style={{ visibility: \"hidden\" }}> w 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> w [옵션s] [파일명]  </li>\r\n                  {/*  */}\r\n                  <li> w 명령어\r\n                    <span className=\"sblock\">\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ USER | TTY | FROM | LOGIN@ | IDLE | JCPU | PCPU | WHAT  </summary>\r\n                        <small> 현재시간 현재 접속한 사용자, 시스템 실행 시간 , 1,5,15분 동안 시스템 로드 평균시간 </small>\r\n                        <li> USER : 서버 접속 계정 </li>\r\n                        <li> TTY : 접속 TTY 명 </li>\r\n                        <li> FROM : 접속한 IP 주소 </li>\r\n                        <li> LOGIN@ : 접속자 로그인 시간 </li>\r\n                        <li> IDLE : 최종 명령 수행 후의 대기시간 </li>\r\n                        <li> JCPU : TTY필드에서 사용하는 장치의 모든 프로세스의 CPU 사용시간 출력 </li>\r\n                        <li> PCPU : what필드에 나타나는 프로세스의 CPU 총 사용시간을 출력 </li>\r\n                        <li> WHAT : 접속자 현재 사용 명령어 </li>\r\n                      </details>\r\n                    </span>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li> -h : 헤더를 제외하고 출력 </li>\r\n                  <li> -s : LOGIN@ , JCPU, PCPU 를 제외한 값 출력 </li>\r\n                  <li> -f : from을 제외한 값 출력 </li>\r\n                  <li> -i : 호스트 이름 일 때 from에 IP주소로 표기  </li>\r\n                  <li> -o : IDLE,JCPU,PCPU에 값이 1분 보다 작으면 빈칸으로 출력 </li>\r\n                  <li> - :  </li>\r\n                  {/*  */}\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ grep 명령어 <small> 파일들에서 하나이상의 내용을 검색 </small>\r\n                <a name=\"grep 명령어\" style={{ visibility: \"hidden\" }}>  grep 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <small>  </small>\r\n                  <li className=\"sstitle\"> grep [옵션s] [검색내용] [파일명]  </li>\r\n                  <li> -i : 대소문자 구분없이 검색 </li>\r\n                  <li> -l : 검색패턴과 일치하면 파일명을 출력 </li>\r\n                  <li> -n :  검색패턴과 일치하면 출력 값에 줄 번호를 붙여서 출력 </li>\r\n                  <li> -v :  검색내용을 제외한 정보 출력 </li>\r\n                  <li> -c :  패턴과 일치하는 라인 수 출력 </li>\r\n                  <li> -w :  단어단위의 패턴을 사용하여 검색 </li>\r\n                  <li> --color=[none,auto,always] \"찾을내용\" 파일명 : 찾는 내용을 컬러로 표현해줌 </li>\r\n                  <li> -E : 정규식을 사용하겠다.  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> 사용 예시 </span>\r\n                  <span className=\"sblock\">\r\n                    <li> cat /etc/passwd | grep \"14\" #표준출력을 파일로 만들지 않고도 파이프(|)를 이용해서 원하는 내용을 찾음 </li>\r\n                    <li> grep --help | grep -E '\\-.,' # \\:정규식문자로 사용하겠다. , .:모든문자 ,: 모르겠다. </li>\r\n                    <li> grep --help | grep --color=always -E '\\-.,' | head -10 #always로 해야 파이프로 넘겼을 때 색깔로 표시가됨 </li>\r\n                    <li> 문장~~~ | grep -E \"^abc\" , # \"abc\"로 시작하는 문장을 찾음 </li>\r\n                    <li> 문장~~~ | grep -E \"abc$\" , # \"abc\"로 끝나는 문장을 찾음 </li>\r\n                    <li> 문장~~~ | grep -E \"[12]\" , # 1이나 2가 들어간 문장을 찾음 </li>\r\n                    <li> 문장~~~ | grep -E \"{'a{2,3}'}\" , # a가 2나3회 입력이 된 문장을 찾음 </li>\r\n                    <li> ifconfig | grep -A 2 ens | grep \"inet \" | awk ' {'{ printf $2 }'} , #본인의 IP주소만을 가져옴 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ find 명령어 <small> 지정한 위치에서 조건에 맞는 파일을 찾는다. </small>\r\n                <a name=\"find 명령어\" style={{ visibility: \"hidden\" }}> find 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> find [경로] [옵션] [정규식/표현] </li>\r\n                  <li> -name 파일명 : 파일이름으로 검색  </li>\r\n                  <li> -type 파일종류 : 파일종류로 검색 </li>\r\n                  <small> d:디렉토리, f:일반파일, l:링크파일, b:블록디바이스, c:캐릭터디바이스, p:파이프디바이스, s:소켓파일 </small>\r\n                  <li> -user 사용자ID : 사용자가 소유한 모든 파일을 검색  </li>\r\n                  <li> -perm 775 : 접근권한과 일치하는 파일을 검색 </li>\r\n                  <li> -group : 그룹 소유의 모든 파일이나 디렉토리를 검색  </li>\r\n                  <li> -uid : UID소유의 파일이나 디렉토리를 검색(아이디번호로) </li>\r\n                  <li> -gid : UID소유의 파일이나 디렉토리를 검색(그룹번호로) </li>\r\n                  <li> -atime [n,+n,-n] : n일 이전, n보다 오래된, 지금부터 n일내로 접근한 파일들을 검색 </li>\r\n                  <li> -ctime n : 퍼미션(권한 등)이 변경되었을 때 </li>\r\n                  <li> -mtime n : 내부 내용이 수정된 시간 기준으로 검색 </li>\r\n                  <li> -mmin n : 분(시간)을 기준으로 검색 </li>\r\n                  <li> -empty : 빈 파일을 찾음 </li>\r\n                  <li> -size n : n블록 길이의 파일을 검색 </li>\r\n                  <li> -exec :  </li>랴\r\n                  <li> -ls : ls -l </li>\r\n                  <li> -inum n :  </li>\r\n                  <li> -iname :  </li>\r\n                  <li> -maxdepth n : 현재 디렉토리부터 n깊이 만큼 디렉토리를 검색 </li>\r\n                  <li> -mindepth n : n번째 하위디렉토리부터 하위디렉토리르 검색 </li>\r\n                  <li> -prune :  </li>\r\n                  <li> -newer :  </li>\r\n                  <li> -cnewer :  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> 사용 예시 </span>\r\n                  <span className=\"sblock\">\r\n                    <li> find /app -name \"abc.*\" #app경로에 abc.으로 시작하는 폴더를 검색 </li>\r\n                    <li> find /app -name \"abc.*\" type -d #app경로에 abc.으로 시작하고 파일유형이 디렉토리인 폴더를 검색 </li>\r\n                    <li> find /app \"abc.*\" | head -10  </li>\r\n                    <li> find . -name \"*.txt\" -mtime +10 -delete #수정시간이 10일이상된 오래된 파일을 삭제 </li>\r\n                    <li> find . -size +100k #파일100kb이상 검색 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ group 명령어 <small> 권한 그룹 </small>\r\n                <a name=\"group 명령어\" style={{ visibility: \"hidden\" }}>  group 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> groups [사용자]  </li>\r\n                  <li> sudo groupadd 그룹명 , #그룹을 생성 </li>\r\n                  <li> sudo groupdel 그룹명 , #그룹을 삭제  </li>\r\n                  <li> sudo gpasswd 그룹명 , #그룹의 암호를 설정(사용자가 그룹에 로그인하기 위해 설정)  </li>\r\n                  <li> sudo gpasswd -r 그룹명 , #그룹의 암호를 제거  </li>\r\n                  <li> sudo gpasswd -A 사용자명 그룹명 , #그룹의 관리자를 사용자로 설정  </li>\r\n                  <li> sudo gpasswd -a 사용자명 그룹명 , #그룹에 사용자를 포함시킴  </li>\r\n                  <li> sudo gpasswd -d 사용자명 그룹명 , #그룹에서 사용자를 제외 시킴  </li>\r\n                  <li> sudo usermod -a -g 사용자명 그룹명 , #사용자의 그룹을 변경  </li>\r\n                  <li> sudo usermod -a -G 사용자명 그룹명 , #사용자의 주 그룹 + 그룹을 하나 추가  </li>\r\n                  <li> newgrp 그룹명 , #다른 그룹으로 로그인  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ user 명령어 <small>  </small>\r\n                <a name=\"user 명령어\" style={{ visibility: \"hidden\" }}>  user 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"mblock\">\r\n                  <li className=\"sstitle\"> useradd [옵션s] [계정이름] , useradd [계정이름] , adduser [옵션s] [계정이름] , adduser [계정이름] </li>\r\n                  <li> [계정이름] : 계정을 생성 </li>\r\n                  <li> -p :  </li>\r\n                  <li> -d : 홈 디렉토리를 지정할 떄 사용, 중간 경로는 생성을 해주지 않는다. </li>\r\n                  <li> -u : 사용자 추가시 UID 지정 </li>\r\n                  <small> useradd -u UID번호 계정명 </small>\r\n                  <li> -g : 그룹(GID)을 지정할 때 사용 </li>\r\n                  <li> -G : 2번쨰 그룹(GID)을 지정할 때 사용 </li>\r\n                  <li> -c : 사용자 생성 시 사용자에 대한 설명을 설정 </li>\r\n                  <li> -s : 사용자 생성 시 사용자가 사용할 셸을 지정 </li>\r\n                  <li> -D : /etc/default/useradd에 설정된 유저 추가와 관련된 기본 사항들을 보여준다. </li>\r\n                  <li> -m : 사용자 생성시 홈 디렉토리를 생성해주는 옵션 </li>\r\n                  <li> -k : 사용자 생성 시 제공되는 파일은 기본적으로 /etc/skel에 있는데 이외으 디렉토리를 지정할 때 사용  </li>\r\n                  <li> -f : 패스워드의 만기일을 날짜로 지정 </li>\r\n                  <li> -e : 계정의 만기일을 YYYY-MM-DD 형식으로 지정 </li>\r\n                  <small>  </small>\r\n                  <li> </li>\r\n                  {/*  */}\r\n                  <li> 소제목\r\n                    <span className=\"sblock\">\r\n                      <details>\r\n                        <summary className=\"stitle\"> ▶   </summary>\r\n                        <li>   </li>\r\n                      </details>\r\n                    </span>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li> - :  </li>\r\n                  {/*  */}\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> 사용 예시 </span>\r\n                  <span className=\"sblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 네트워크 설정 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">vi /etc/sysconfig/network-scripts/ifcfg-ens33  </span>\r\n                <span className=\"mblock\">\r\n                  <li> BOOTPROTO=\"dhcp\" #dhcp서버를 이용 </li>\r\n                  <li> ONBOOT=\"yes\" #부팅을 할 때 자동으로 시작을 할 것인지 설정 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> systemctl restart network </span>\r\n                <span className=\"mblock\">\r\n                  <li> 네트워크 재시작 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> ifconfig </span>\r\n                <span className=\"mblock\">\r\n                  <li> 네트워크 인터페이스 확인 , ip, mac 등등 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> ip addr </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> ip route </span>\r\n                <span className=\"mblock\">\r\n                  <li> 본인 컴퓨터의 ip만 출력 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> ping IP주소 </span>\r\n                <span className=\"mblock\">\r\n                  <li> IP주소로 ping을 보내서 인터넷이 연결이 되었는지 확인하는 방법 , 168.126.63.1(KT) </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 고정 IP 만드는 방법  </span>\r\n                <span className=\"mblock\">\r\n                  <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33   </li>\r\n                  <li> BOOTPROTO=\"static\" 으로 변경  </li>\r\n                  <li> IPADDR=고정IP주소 (ex 192.168.10.20)  </li>\r\n                  <li> PREFIX=24 #24까지가 네트워크 대역이다라고 알려주는것 </li>\r\n                  <li> GATEWAY=게이트웨이주소 (ex 192.168.10.2) </li>\r\n                  <li> DNS1=구글에서 통신사 DNS 서버 치고 통신사에 맞는 주소 넣기 (ex 168.126.63.1)  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 방화벽 설정 </span>\r\n                <span className=\"mblock\">\r\n                  <li> firewall-cmd --permanent --add-port=포트번호/tcp </li>\r\n                  <li> firewall-cmd --reload </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ AWK 명령어 <small> 스크립트 파일을 필터,추가,행과열로 출력 </small>\r\n                <a name=\"AWK 명령어\" style={{ visibility: \"hidden\" }}> AWK 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> awk {'{action}'} </span>\r\n                <span className=\"mblock\">\r\n                  <li> -F \"구분자\": 일반적으로는 공백으로 열을 구분하지만 구분자를 설정해서 바꿈 </li>\r\n                  <li> {'{\\'print(\"name: \" $1)\\'}'}  </li>\r\n                  <li> {'{\\'if($1 >= 10) print(\"name: \" $1)\\'}'}  </li>\r\n                  <li> '/문자열/' 파일명 , #파일에 abc라는 문자열이 포함된 레코드를 출력  </li>\r\n                  <li> {'{\\'print(\"name: \" length($1) )\\'}'} #length 내장함수 </li>\r\n                  <li> {'{\\'print(\"name: \" substr($1,0,3) )\\'}'} #substr 내장함수 </li>\r\n                  <li> {'{\\' for(i=0;i<10;i++) print(\"name: \" $1)\\'}'} #반복문  </li>\r\n                  <li> 변수 사용하는 방법\r\n                    <span className=\"sblock\">\r\n                      <li> 'BEGIN {' {a=0 b=0} '} </li>\r\n                      <li>  {' {a+=$1 b++} '} </li>\r\n                      <li> END {' {avg=a/b print() }'}' 파일명 </li>\r\n                    </span>\r\n                  </li>\r\n                  <li>   </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ sed 명령어 <small> vi편집기가 아닌 원본 텍스트 파일을 편집할수 있는 유용한 명령어 </small>\r\n                <a name=\"sed 명령어\" style={{ visibility: \"hidden\" }}> sed 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> sed [스크립트] [명령어] </span>\r\n                <span className=\"mblock\">\r\n                  <small> 패턴버퍼에 내용을 가져오고 데이터의 변형과 추가하기 위해 홀드 버퍼를 사용하고 패턴버퍼에 그\r\n                    임시결과를 저장한다. 그리고 실제 저장할 때  </small>\r\n                  <li> -n : 해당하는 행만 출력 </li>\r\n                  <li> -e : 스크립트를 여러개 사용할 수 있도록 한다. </li>\r\n                  <small> sed -n -e '1p' -e '3p' 파일명 , #1번행과 3번행 출력 </small> <br />\r\n                  <li> -i : 파일을 실제로 수정하도록 한다. </li>\r\n                  <li> 'p' : 행을 출력해주는 명령어 </li>\r\n                  <li> 'm,np' : m번째에서 n번째 까지 행을 출력 </li>\r\n                  <li> 'n,%p' : n번째에서 마지막 까지 행을 출력 </li>\r\n                  <li> '/정규식/p' : 정규식  사용   </li>\r\n                  <small> sed '/[Rr]oot/p' 파일명  </small>\r\n                  <li> 'nd' : n번째 행을 제외하고 출력 </li>\r\n                  <li> 'n,md' : n번째에서 마지막 까지 제외하고 행을 출력 </li>\r\n                  <li> 'n,$d' : n번째째부터 마지막까지 제외하고 출력 </li>\r\n                  <li> 's/오래된단어/바꿀단어/' : 오래된 단어 첫번째만? 바꿈 </li>\r\n                  <li> 's/오래된단어/바꿀단어/g' : 오래된 단어 전체를 바꿈 </li>\r\n                  <li> 's/오래된단어/바꿀단어/gi' : 오래된 단어 전체를 대소문자 상관없이 바꿈 </li>\r\n                  <li> 's/^오래된단어/바꿀단어/gi' : 오래된단어로 시작하는 줄의 단어를 바꾼다 </li>\r\n                  <li> 's/오래된단어$/바꿀단어/gi' : 오래된단어로 끝나는 줄의 단어를 바꾼다. </li>\r\n                  <li> 'n,/정규식/p' : n번째 정규식에 해당하는 행을 발견할 때 까지 행을 출력   </li>\r\n                  <li> '/root/,'/root1/p' : root,root1 이라는 내용 있으면 출력   </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ lasttr 명령어 <small> 파일의 속성 확인 </small>\r\n                <a name=\"lasttr 명령어\" style={{ visibility: \"hidden\" }}> lasttr 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> lasttr [옵션] [파일,디렉토리] </span>\r\n                <span className=\"mblock\">\r\n                  <li> -d [디렉토리] : 파일 형식으로 출력  </li>\r\n                  <li> -R [디렉토리] : 하위 모든 파일에 대한 속성 표시 </li>\r\n                  <li> -a [디렉토리] : 숨긴 파일 출력 </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ chattr 명령어 <small> 파일의 속성을 추가 </small>\r\n                <a name=\"chattr 명령어\" style={{ visibility: \"hidden\" }}> chattr 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> chattr [+옵션] [파일] </span>\r\n                <span className=\"mblock\">\r\n                  <li> a : 추가 모드로만 오픈 가능 </li>\r\n                  <li> i : 변경, 삭제, 링크 금지 </li>\r\n                  <li> s : 안전한 삭제 </li>\r\n                  <li> A : atime 갱신 불가 </li>\r\n                  <li> c : 커널에 의해서 압출 상태로 저장 </li>\r\n                  <li> d : dump 명령으로 백업 금지 </li>\r\n                  <li> j : 저널링 </li>\r\n                  <li> t : 하위 결합 불가 </li>\r\n                  <li> u : 삭제시 내용 저장 </li>\r\n                  <li> D : 디렉토리 실시간 동기화 </li>\r\n                  <li> S : 파일 수정 시 실시간 동기화 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ echo 명령어 <small> 문자열이나 파일의 내용을 화면에 출력 </small>\r\n                <a name=\"echo 명령어\" style={{ visibility: \"hidden\" }}> echo 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> echo [옵션] [문자열] </span>\r\n                <span className=\"mblock\">\r\n                  <li> echo 문자열 </li>\r\n                  <li> echo $\"문자열\" &gt;&gt; 파일명.txt , # 입력한 문자열을 파일로 저장 </li>\r\n                  <li> echo $(expr $요소1 + $요소2) , #연산식에서 사용 , 공백 필요 , 특수문자( (,),*,$ )을 사용하려면 \\를 붙여야 사용이 가능하다. </li>\r\n                  <li> echo -n 내용 : 후행 줄 바꿈을 생략하는데 사용  </li>\r\n                  <li>  <span className=\"sstitle\">  echo -e 내용 : 정규표현식을 사용할 수 있는 옵션 </span>\r\n                    <span className=\"sblock\">\r\n                      <ul style={{ listStyle: \"none\" }}>\r\n                        <li> \\b : 공백을 지움 </li>\r\n                        <li> \\c : 줄 바꿈을 억제 </li>\r\n                        <li> \\n : 줄 바꿈  </li>\r\n                        <li> \\t : 수평 탭 공간을 만듬  </li>\r\n                        <li> \\r : 이후에 출력할 위치를 지정  </li>\r\n                        <li> \\v : 수직 탭 공간을 만듬  </li>\r\n                        <li> \\a : 경고음이 울림  </li>\r\n                        <li> \\\\ : 역슬래시  </li>\r\n                      </ul>\r\n                    </span>\r\n                  </li>\r\n                  <li> <span className=\"sstitle\">  echo 이미지정된변수 </span>\r\n                    <span className=\"sblock\">\r\n                      <ul style={{ listStyle: \"none\" }}>\r\n                        <li> $USER, $USERNAME : <small> 현재 사용자 이름 </small> </li>\r\n                        <li> $PWD : <small>  현재 디렉토리 </small> </li>\r\n                        <li> $OSTYPE : <small> 현재 운영체제를 알려줌 </small> </li>\r\n                        <li> $PATH : <small> 실행 파일을 찾는 디렉토리 경로</small> </li>\r\n                        <li> $SHELL : <small> 로그인해서 사용하는 셸 </small> </li>\r\n                        <li> $HOME : <small> 현재 사용자의 홈 디렉토리 </small> </li>\r\n                        <li> $HOSTNAME : <small> 호스트 이름 </small> </li>\r\n                        <li> $LANG : <small> 사용가능한 언어 </small> </li>\r\n                        <li> $LOGNAME : <small> 로그인 이름 </small> </li>\r\n                        <li> $TERM : <small> 로그인 터미널 타입 </small> </li>\r\n                        <li> $COLUMNS : <small> 현재 터미널 컬럼수  </small> </li>\r\n                        <li> $BASH : <small> bash 셸의 경로 </small> </li>\r\n                        <li> $PS1 : <small> 1차 명령 프롬프트 변수 </small> </li>\r\n                        <li> $HISTFILE : <small> 히스토리 파일의 경로 </small> </li>\r\n                        <li> $MAIL : <small> 메일을 보관하는 경로 </small> </li>\r\n                        <li> $DISPLAY : <small> X 디스플레이 이름 </small> </li>\r\n                        <li> $LINES : <small> 현재 터미널 라인수  </small> </li>\r\n                        <li> $PS2 : <small> 2차 명령 프롬프트 </small> </li>\r\n                        <li> $BASH_VERSION : <small> bash 버전 </small> </li>\r\n                        <li> $HISTSIZE : <small> 히스토리 파일에 저장되는 개수 </small> </li>\r\n                        <li> $LS_COLORS : <small> 'ls' 명령어의 확장자 색상 옵션 </small> </li>\r\n                        <li> $$ : <small> 사용되는 PID 출력 </small> </li>\r\n                        <li> export PATH=$PATH: /경로/ : <small> PATH경로에 추가하는 방법(재부팅시 초기화) </small> </li>\r\n                        <li>  </li>\r\n                      </ul>\r\n                    </span>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ chmod 명령어 <small> 파일 사용권한 변경 </small>\r\n                <a name=\"chmod 명령어\" style={{ visibility: \"hidden\" }}> chmod 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> chmod [옵션] [모드] [파일명] </span>\r\n                <span className=\"mblock\">\r\n                  <small> 퍼미션 = #소유자(u)/그룹(g)/게스트(o),모두(a) 777 = r(4),w(2),x(1) , t(Sticky bit) , X(실행권한적용) , s(SUID) </small>\r\n                  <li> chmod 퍼미션(755) 파일명 , 파일명에 권한을 준다. </li>\r\n                  <li> chmod ugo+rwx 파일명 , #파일에 user,group,other 사용자에게 r(읽기),w(쓰기),x(실행) 권한을 준다.  </li>\r\n                  <li> chmod ugo=rwx 파일명 , #파일에 user,group,other 사용자에게 r(읽기),w(쓰기),x(실행) 권한을 지정  </li>\r\n                  <li> chmod ugo-rwx 파일명 , #파일에 user,group,other 사용자에게 r(읽기),w(쓰기),x(실행) 권한을 제거한다.  </li>\r\n                  <li> chmod ug=w,o=r 파일명 , #파일에 user,group,other 사용자에게 r(읽기),w(쓰기),x(실행) 권한을 제거한다.  </li>\r\n                  <li> chmod 퍼미션(775) * , #현재 위치한 파일에 모두 접근 권한 부여 </li>\r\n                  <li> chmod 퍼미션(1775) * , #현재 위치한 파일에 모두 접근 권한 부여 , 단 소유자만이 삭제가능(Sticky bit)  </li>\r\n                  <li> chmod 퍼미션(4775) * , #현재 위치한 파일에 모두 접근 권한 부여 ,\r\n                    SUID, {'유저 -> 파일1 (가능)'} | {'유저 -> 파일2(불가능)'} | {'유저->파일1->파일2(가능하게 해줌)'} 실행 권한이 없을때 다른 파일을 거쳐서 실행을 가능하게 해준다. </li>\r\n                  <li> chmod -R 퍼미션 디렉토리 , #디렉토리 하위에 위치한 모든 파일 접근 권한 부여 </li>\r\n                  <li> chmod -c 퍼미션 파일명 : 기존 파일 모드가 변경되는 경우만 진단 메시지 출력 </li>\r\n                  <li> chmod -f 퍼미션 파일명 : 에러 메시지를 출력하지 않음 </li>\r\n                  <li> chmod -v 퍼미션 파일명 : 모든 파일에 대해 모드가 적용되는 진단 메시지 출력 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ chown 명령어 <small> 파일,디렉토리의 소유자 변경 </small>\r\n                <a name=\"chown 명령어\" style={{ visibility: \"hidden\" }}> chown 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> chown [소유자] [파일명] , # 파일의 소유자를 변경하는 방법 </li>\r\n                  <li> chown [소유자]:[소유그룹] 변경할파일 , # 파일의 소유자,소유그룹을 변경하는 방법 </li>\r\n                  <li> chown -R [소유자]:[소유그룹] [디렉토리] , # 하위 디렉토리도 변경</li>\r\n                  <li> chown -h [소유자] [심볼릭링크] , # 심볼릭 링크의 소유자를 변경  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ rpm 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> rpm -qa : 시스템에 설치된 모든 패키지명 </li>\r\n                  <li> rpm -qi 패키지명 : 시스템에 설치된 모든 패키지명 </li>\r\n                  <li> rpm -ql 패키지명 : 패키지의 파일 리스트 </li>\r\n                  <li> rpm -qf 파일명 : 지정한 파일이 포함된 패키지  </li>\r\n                  <li> rpm -ivh rpm파일경로 : 직접 rpm파일을 직접 설치하지만 문제가 많아 권장하지 않음 </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ yum 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> yum check-update # 현재 설치된 프로그램 중 업데이트 된것을 확인 </li>\r\n                  <li> yum clean all # 캐시 삭제</li>\r\n                  <li> yum deplist # yum 패키지에 대한 의존성 테스트 </li>\r\n                  <li> yum downgrade 패키지 # yum을 통한 패키지 다운그레이드 </li>\r\n                  <li> yum erase 패키지 # yum을 이용해서 시스템에서 삭제 </li>\r\n                  <li> yum groupinfo 그룹 # 그룹 패키지 정보 조회</li>\r\n                  <li> yum groupinstall 그룹 # 그룹패키지 설치 </li>\r\n                  <li> yum grouplist 그룹 # 그룹 리스트에 관한 정보 확인</li>\r\n                  <li> yum groupremove 그룹 #그룹 리스트 삭제 </li>\r\n                  <li> yum help # yum 도움말 </li>\r\n                  <li> yum info 그룹 또는 패키지 # 패키지 또는 그룹의 패키지를 상세 확인 </li>\r\n                  <li> yum install 패키지 # 패키지 설치 </li>\r\n                  <li> yum list # 서버에 있는 그룹 및 패키지 리스트 </li>\r\n                  <li> yum localinstall 패키지 # 로컬에 설치를 실시 </li>\r\n                  <li> yum makecache # 캐쉬를 올림 </li>\r\n                  <li> yum provides 파일패스명 # 파일이 제공하는 패키지 정보 조회 </li>\r\n                  <li> yum reinstall 패키지 # 패키지 재설치 </li>\r\n                  <li> yum update 패키지 # 패키지 업데이트 </li>\r\n                  <li> yum upgrade 패키지 # 패키지 업그레이드 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ lsof 명령어 <small> 열려있는 파일 정보 </small>\r\n                <a name=\"lsof 명령어\" style={{ visibility: \"hidden\" }}> lsof 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> lsof -i udp:67 , # ip기반의 67번 포트에 접속을 확인  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ ps 명령어 <small> 현재 돌아가는 프로세스를 확인 </small>\r\n                <a name=\"ps 명령어\" style={{ visibility: \"hidden\" }}> ps 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> ps -ef | grep dnsmasq , # dnsmasq dns서버 프로세스를 확인 </li>\r\n                  <li> ps -l -ef # 진행중인 긴 메뉴 프로세스\r\n                    <span className=\"sblock\">\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ F | S | UID | PID | PPID | C | PRI | NI | ADDR | SZ | WCHAN | STIME | TTY | TIME | CMD </summary>\r\n                        <li> F : 프로세스 플래그 </li>\r\n                        <li> S : 현재 프로세스의 상태 코드 ( S:Sys V, STAT:BSD ) </li>\r\n                        <li> UID : 실행 유저 </li>\r\n                        <li> PID : 프로세스 ID </li>\r\n                        <li> PPID : 부모 프로세스 ID </li>\r\n                        <li> C : CPU 사용량 </li>\r\n                        <li> PRI : 실행 우선순위 </li>\r\n                        <li> NI : nice 우선순위 번호 </li>\r\n                        <li> ADDR :  </li>\r\n                        <li> SZ : 가상 메모리 사용량? </li>\r\n                        <li> WCHAN :  </li>\r\n                        <li> STIME : Start Time </li>\r\n                        <li> TTY : tty1(콘솔) , pts/1(원격) </li>\r\n                        <li> TIME : 구동시간 </li>\r\n                        <li> CMD : 실행 명령어 </li>\r\n                      </details>\r\n                    </span>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li> ps -f -ef # 진행중인 완전한 메뉴 프로세스\r\n                    <span className=\"sblock\">\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ UID | PID | PPID | C | STIME | TTY | TIME | CMD  </summary>\r\n                        <li> UID : 실행 유저 </li>\r\n                        <li> PID : 프로세스 ID </li>\r\n                        <li> PPID : 부모 프로세스 ID </li>\r\n                        <li> C : CPU 사용량 </li>\r\n                        <li> STIME : Start Time </li>\r\n                        <li> TTY : tty1(콘솔) , pts/1(원격) </li>\r\n                        <li> TIME : 구동시간 </li>\r\n                        <li> CMD : 실행 명령어 </li>\r\n                      </details>\r\n                    </span>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ xargs 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> | 파이프 명령어 앞에 서 받은 파라미터를 하나씩 넘겨주는 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ firewall 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> firewall-cmd --list-services , # 방화벽을 허용한 리스트 </li>\r\n                  <li> firewall-cmd --info-service=요소 , # 방화벽을 허용한 리스트중에 알고싶은 요소의 정보 </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ dirname,basename 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> dirname 명령어 </span>\r\n                <span className=\"mblock\">\r\n                  <li> dirname /경로1/경로2 , #최상위 경로인 /경로1 출력  </li>\r\n                  <li> dirname /경로1 , #최상위 경로인 / 출력  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> basename 명령어 </span>\r\n                <span className=\"mblock\">\r\n                  <li> basename /경로1/경로2/ , #하위경로의 상위 경로인 경로2 출력 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ export 명령어 <small> 쉘 변수를 환경변수로 저장 </small>\r\n                <a name=\"export 명령어\" style={{ visibility: \"hidden\" }}> export 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 명령어 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> export 값 <small> 재접속 하면 사라짐 , 쉘스크립트 내부에서 사용 </small> </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 변수를 영구적으로 환경변수로 사용하는 방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> vi ~/.bashrc에 들어감 </li>\r\n                  <li> export 변수명=변수값 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ at 명령어 <small> 지정된 시간에 1회 자동으로 작업 실행, 간단한 예약 작업 </small>\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> at 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> yum install at </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> CentOS7 at 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> systemctl stop ntpd , 혹시나 영향을 줄까봐 </li>\r\n                  <li> systemctl stop chronyd , 혹시나 영향을 줄까봐 </li>\r\n                  <li> systemctl start atd </li>\r\n                  <li> systemctl enable atd </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> at [option] \"시간\" </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> -f 파일명 : 스크립트 파일 등을 실행\r\n                      <li>  <small> at HHMM DDMMYYYY -f test.sh </small> </li>\r\n                    </li>\r\n                    <li> -m : 완료되면 사용자에게 메일을 보냄\r\n                      <li> <small> at -m HHMM DDMMYYYY </small> </li>\r\n                    </li>\r\n                    <li> -M : 메일 보내지 않기\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> -t : YYYYMMDDHHMM로 시간 지정\r\n                      <li> <small> at -t YYYYMMDDHHMM  </small> </li>\r\n                    </li>\r\n                    <li> -l : 예약된 작업 목록을 보여줌(atq 명령어와 같음)\r\n                      <li> <small> at -l </small> </li>\r\n                    </li>\r\n                    <li> -r 번호 : 예약된 작업 삭제(unix)\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> -d 작업번호 : 예약된 작업 삭제(linux)\r\n                      <li> <small> -d 1 </small> </li>\r\n                    </li>\r\n                    <li> -q : queue 이름을 지정\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> -V : 버전 확인\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> -v : 작업 시간 상세보기\r\n                      <li> <small> at -v HHMM DDMMYYYY </small> </li>\r\n                    </li>\r\n                    <li> -c : 예약 작업 상세보기\r\n                      <li> <small> at -v HHMM DDMMYYYY </small> </li>\r\n                    </li>\r\n                    <li> -b : 시스템에 부하를 주지 않게 실행\r\n                      <li> <small> at -b HHMM DDMMYYYY </small> </li>\r\n                    </li>\r\n                    <li> atq : 예약된 작업 목록을 보여줌\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> atrm : 예약된 작업 목록을 삭제\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> batch : 시스템 부하가 일정 이하일 때 명령을 실행\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> cron : 정기적으로 예약된 작업을 수행\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ crontab 명령어 <small> 예약 작업 자동 실행 명령어 </small>\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> crontab 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  CentOS\r\n                    <li> sudo yum update -y </li>\r\n                    <li> sudo yum install -y cronie </li>\r\n                    <li> sudo systemctl start crond </li>\r\n                    <li> sudo systemctl enable crond , 활성화 </li>\r\n                  </li>\r\n                  <li>  Ubuntu\r\n                    <li> sudo apt update -y  </li>\r\n                    <li> sudo apt install -y cron  </li>\r\n                    <li> sudo service cron start  </li>\r\n                    <li> sudo systemctl enable cron.service  </li>\r\n                  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> cron 설정 파일 위치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> /var/spool/cron/ID : BSD 계열 </li>\r\n                  <li> /var/spool/cron/crontabs/ID : 솔라리스 계열 </li>\r\n                  <li> /etc/cron.d :  </li>\r\n                  <li> /etc/crontab : 크론 데몬 파일 </li>\r\n                  <li> /etc/rc.d/init.d/crond : 데몬 실행 스크립트(service) </li>\r\n                  <li> /usr/lib/systemd/system/crond.service : 데몬 실행 스크립트(systemctl) </li>\r\n                  <li> /usr/sbin/anacron : 서버가 일정 시간 중지 되었을 때 작업이 실행되는 것을 보장하기 위해 사용되는 도구 </li>\r\n                  <li> ls -la /etc | grep cron : cron은 일,시,월,주 등 디렉토리 파일이 있고 그안에 실행할 파일들을 넣어놓고 작동 </li>\r\n                  <li> /var/log/cron : 크론 실행내용 로그 </li>\r\n                  <li> /etc/cron.allow , etc/cron.deny : 크론을 허용,비허용 등을 설정하는 파일 </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> crontab [option] 파일명 </span>\r\n                <span className=\"mblock\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li> crontab -l : crontab 조회\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> crontab -e : crontab 작성 및 수정\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> crontab -r : crontab 삭제\r\n                      <li> <small>  </small> </li>\r\n                    </li>\r\n                    <li> crontab -u : 루트가 특정 사용자의 crontab파일을 다룰 때 사용\r\n                      <li> <small> crontab -u 사용자명 -e </small> </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </ul>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> crontab 파일 작성 </span>\r\n                <span className=\"mblock\">\r\n                  <li> [ minute hour day month week user command ] </li>\r\n                  <li> minute(분) : 0~59 </li>\r\n                  <li> hour(시) : 0~23 </li>\r\n                  <li> day(일) : 1~31 </li>\r\n                  <li> month(월) : 1~12 </li>\r\n                  <li> week(주) : 0~7(0과7은 일요일) </li>\r\n                  <li> user : 사용자이름 </li>\r\n                  <li> command : 실행할 명령어 </li>\r\n                  <li> 정규표현식 문자 : *(모든날짜) (10일)-(20일) (요일1),(요일2),(요일3) (날짜)/(값) (주기를 나타냄) </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> crontab 파일 예시  </span>\r\n                <span className=\"mblock\">\r\n                  <li> 0 12 * * * 명령어 <small> 12시에 명령어 실행 </small> </li>\r\n                  <li> 0 0,12 * * * 명령어 <small> 0,12시에 명령어 실행 </small> </li>\r\n                  <li> 0 /2 * * * 명령어 <small> 12시간마다 명령어 실행 </small> </li>\r\n                  <li> 0 12-18 * * * 명령어 <small> 12-18 시간마다 명령어 실행 </small> </li>\r\n                  <li> 0 18 * * fri 명령어 <small> 18시 금요일마다 명령어 실행 </small> </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ wget 명령어 <small> 웹에서 다운로드 하기 위한 명령어 </small>\r\n                <a name=\"wget 명령어\" style={{ visibility: \"hidden\" }}> wget 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> wget 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> wget : wget가 설치되어 있으면 missing URL 이라고 출력된다. </li>\r\n                  <li> CentOS\r\n                    <li> sudo yum install wget </li>\r\n                  </li>\r\n                  <li> Ubuntu, Debian\r\n                    <li> sudo apt install wget </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> wget [options] [url]  사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> wget -q [url] : 다운로드 진행률 표시를 끔 </li>\r\n                  <li> wget -O 저장할파일이름.확장자 [url]  </li>\r\n                  <li> wget -P 경로 [url] : 특정 위치에 파일을 다운로드 </li>\r\n                  <li> wget -c [url] : 파일을 이어서 다운로드, 이어서 다운로드 지원을 하지 않으면 기존 파일 덮어쓰기 </li>\r\n                  <li> wget -b [url] : 백그라운드에서 다운로드 </li>\r\n                  <li> wget -i [다운로드할 url이 담겨있는 파일] :  </li>\r\n                  <li> wget --ftp-user=FTP유저명 --ftp-password=FTP패스워드 [url] :  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 파일 압축 명령어 <small> 파일을 압축 </small>\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> tar -cvf 파일명.tar . # 현재 폴더를 압축 </li>\r\n                  <li> tar -xvf 압축파일명.tar # 압축을 해제 </li>\r\n                  <li> bzip2 -k 폴더명 # -k는 원본파일을 유지하면서 압축 </li>\r\n                  <li> bzip2 -d 압축파일명.bz2 # 원본파일 제거하면서 압축해제 </li>\r\n                  <li> gzip -k 파일명 # 압축 </li>\r\n                  <li> gzip -d 압축파일명.gz # 압축해제 </li>\r\n                  <li> 팁 : tar 압축으로 하나의 파일로 만들고 그다음 gz로 압축하면 좋음 </li>\r\n                  <li> tar cvfz 파일명.tar.gz . # 현재폴더를 tar.gz 압축방법으로 해줌  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ openssl 명령어 <small> 해쉬값 관련 명령어 </small>\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> openssl passwd -1 -salt 솔트값 비번 </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <small>  </small>\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxCommand;","import React from 'react';\r\n\r\nconst LinuxMobaXterm = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MobaXterm 다운로드 <a name=\"MobaXterm 다운로드\" style={{ visibility: \"hidden\" }}> MobaXterm 다운로드 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <li> <a href=\"https://mobaxterm.mobatek.net/download.html\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                                <li> Home Edition - Portable edition 다운로드 </li>\r\n                                <li> 알집파일 우측클릭 - 7-zip - \"\"에 풀고 폴더명을 MobaXterm으로 바꾸기   </li>\r\n                                <li> C드라이브 - app - 새폴더로 Run과 Terminal 이라고 만들기   </li>\r\n                                <li> Terminal 폴더안에 MobaXterm폴더를 이동시키기  </li>\r\n                                <li> MobaXterm폴더에 들어가서 MobaXterm_Personal.exe파일 바로가기 생성하기  </li>\r\n                                <li> 바로가기 생성한 파일을 Ctrl+X를 이용해서 잘라내기 그리고 잘라낸 파일 Ctrl+C로 복사  </li>\r\n                                <li> 복사한 파일을 아까 만들었던 상위폴더 Run에 Ctrl+V   </li>\r\n                                <li> 시스템 환경 변수 편집 - 고급 - 환경 변수 - 사용자 변수 Path 더블클릭   </li>\r\n                                <li> 새로만들기 - C:\\app\\Run 넣어주기  </li>\r\n                                <li> 그리고 Win + R 누르고 mob입력했을 때 실행되면 성공   </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MobaXterm 사용\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> ssh root@[본인의IP주소입력] </li>\r\n                                    <li> P@ssW0rd! 입력 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinuxMobaXterm;","import React from 'react';\r\n\r\nconst LinuxVimEditor = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ vim 에디터 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 기타 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> vi 파일명 # vi 편집기로 파일 실행</li>\r\n                                        <li> # : vi 편집기에서 주석 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 명령모드 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> u :실행한것 되돌리기 </li>\r\n                                        <li> x :  문자 삭제하기 </li>\r\n                                        <li> dd : 커서가 위치한곳 문장 삭제가능 </li>\r\n                                        <li> dw : 커서가 위치한곳 단어 삭제가능 </li>\r\n                                        <li> d$ : 커서가 위치한곳에서 문장 끝까지 삭제가능 </li>\r\n                                        <li> d^ : 커서가 위치한곳에서 문장 앞까지 삭제가능 </li>\r\n                                        <li> ndd : 커서가 위치한곳에서 n숫자를 입력한 만큼 문장을 삭제 </li>\r\n                                        <li> yy : 커서가 위치한곳의 줄을 복사 </li>\r\n                                        <li> nyy : 커서가 위치한곳의 줄을 n번째까지의 줄을 복사 </li>\r\n                                        <li> p : 복사한 내용을 붙여넣기 </li>\r\n                                        <li> G : 가장 마지막 줄로 이동 </li>\r\n                                        <li> gg : 가장 첫번째 줄로 이동 </li>\r\n                                        <li> ngg : n번째에 해당하는 줄로 이동 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 삽입모드 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 명령모드에서 삽입모드로 변경 [i,I,a,A,o] </small>\r\n                                        <li> i : 현재커서가 위치한 곳에서 입력가능 </li>\r\n                                        <li> I : 현재커서가 위치한 곳에 가장 첫문장부터 입력가능 </li>\r\n                                        <li> a : 현재커서가 위치한 다음 부터 입력가능 </li>\r\n                                        <li> A : 현재커서가 위치한 가장 끝문장부터 입력가능 </li>\r\n                                        <li> o : 다음줄 부터 문자를 입력가능 </li>\r\n                                        <li> esc : 명령모드로 돌아가기 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 실행모드 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> : : 명령모드에서 실행모드로 변경</li>\r\n                                        <li> w : 현재 파일 내용을 저장 </li>\r\n                                        <li> q : 현재 파일에서 빠져나옴 </li>\r\n                                        <li> wq : 현재 파일 내용을 저장하고 빠져나옴 </li>\r\n                                        <li> q! : 현재 파일을 저장하지 않고 빠져나옴 </li>\r\n                                        <li> set nu : 에디터에 줄번호 표시 </li>\r\n                                        <li> set nonu : 에디터에 줄번호 표시를 제거 </li>\r\n                                        <li> %s/[변경하려는단어]/[변경할단어]/g : 모든 문장의 단어 바꾸기 </li>\r\n                                        <li> ns/[변경하려는단어]/[변경할단어]/g : n번째 문장의 단어 바꾸기 </li>\r\n                                        <li> n,ms/[변경하려는단어]/[변경할단어]/g : n~m번째 문장의 단어 바꾸기 </li>\r\n                                        <li className=\"sblock\"> <span className=\"sstitle\"> Ubuntu </span>\r\n                                            <li> set number : 줄번호를 표시해주는 명령어 </li>\r\n                                            <li> set nocp : 오리지널 vi의 기능을 없앰 </li>\r\n                                            <li> set bs=2 : 삽입모드에서 백스페이스를 사용하게함 </li>\r\n                                            <li> vi /root/.exrc #vi에 적용 </li>\r\n                                            <li> source /root/.exrc #껏다가 킨것처럼 적용 </li>\r\n                                        </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 검색모드 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> / : 명령모드에서 검색모드로 변경 </li>\r\n                                        <li> /[검색할내용] : 검색모드일 때 </li>\r\n                                        <li> n : 검색모드일 때 , 검색한 문자열을 아래로 계속 찾음</li>\r\n                                        <li> N : 검색모드일 때 , 검색한 문자열을 위로 계속 찾음</li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 기타 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <summary className=\"sstitle\">  </summary>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <summary className=\"sstitle\">  </summary>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinuxVimEditor;","import React from 'react';\r\n\r\nconst LinuxDirectory = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스 디렉토리 계층 구조 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 최상위 디렉토리 / </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 뿌리 , 윈도우의 C드라이브 같은거 , 디렉토리의 최상단 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ dev </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 장치 파일이 담긴 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ home </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 사용자가 사용하는 홈 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ media </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> CD, USB 등 외부장치(마운트)를 사용하는 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ opt </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 추가 패키지가 설치되는 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ root - [시작시실행파일설정] </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> root계정의 홈 디렉토리, / 와는 다름 </li>\r\n                    <li> .bashrc : 실행될 때 작동하는 파일 , alias 설정을 해놓는 파일\r\n                      <li> alias [별칭]='[명령어] [옵션]' , [su 사용자명] 명령어로 재로그인 해야 설정적용 </li>\r\n                    </li>\r\n                    <small> .bashrc 파일에 alias설정을 해놓으면 우선순위로 적용되어 다른 옵션을 무시하게 된다. </small>\r\n                    <li> </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ sys </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 리눅스 커널과 관련된 파일이 있는 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ usr </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 기본 실행 파일과 라이브러리 파일, 헤더 파일 등 많은 파일이 있다. </li>\r\n                    <li> /bin/sh </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ boot </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 부팅에 필요한 커널 파일을 가지고 있다. </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ etc </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 리눅스 설정을 위한 각종 파일을 가지고 있다. </li>\r\n                    {/*  */}\r\n                    <li> /passwd : 시스템에 등록된 사용자의 정보들이 감겨있는 파일\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶  [사용자계정 | 패스워드 | UID | GID | comment | 홈디렉토리 | 로그인쉘] </summary>\r\n                          <li> 사용자계정 :   </li>\r\n                          <li> 패스워드 : [ x:shadow에암호화되어저장 | ]  </li>\r\n                          <li> UID : 사용자의 User ID </li>\r\n                          <li> GID : 사용자의 Group ID </li>\r\n                          <li> comment : 기타 정보(일반적으로는 사용자의 이름) </li>\r\n                          <li> 홈디렉토리 : 사용자의 홈 디렉토리 </li>\r\n                          <li> 로그인쉘 : 사용자가 로그인시 사용하는 쉘(bash로 끝나지 않으면 로그인이 불필요한 계정)  </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /shadow : 시스템에 등록된 사용자의 암호화된 패스워드를 저장하는 파일\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ [사용자계정 | 암호화된 패스워드 | ]  </summary>\r\n                          <li> 사용자계정 :   </li>\r\n                          <li> 암호화된 패스워드 : $algorithm_id$salt$encrypted_password\r\n                            <span className=\"mblock\">\r\n                              <li> algorithm_id : 해시 알고리즘 [1:MD5, 2:BlowFish, 5:SHA-256, 6:SHA-512 ] </li>\r\n                              <li> salt : 해쉬 암호화에 추가되는 랜덤값 </li>\r\n                              <li> encrypted_password :\r\n                                <li> * : 패스워드가 잠긴 상태이고  로그인 불가 </li>\r\n                                <li> ! : 패스워드가 잠신 상태이고 로그인 불가 또는 사용자를 생성하고 패스워드를 설정하지 않은 상태 </li>\r\n                                <li> empty : 패스워드가 설정되지 않았지만 로그인이 가능 </li>\r\n                              </li>\r\n                              <li>  </li>\r\n                            </span>\r\n                          </li>\r\n                          <li> 마지막 비번 변경 날짜 : 1970년 1월 1일 이후를 기준으로 며칠이 지났는지 표시  </li>\r\n                          <li> 패스워드 최소 사용기간 : 변경한 후에 최소 사용기간 동안 사용하지 않으면 변경불가  </li>\r\n                          <li> 패스워드 최대 사용기간 : 패스워드의 만료기간  </li>\r\n                          <li> 경고 : 패스워드 만료되기전에 경고할 일수  </li>\r\n                          <li> 비활성화 : 패스워드 만료된후에 비활성화 일수, 기간이 지나면 잠김  </li>\r\n                          <li> 만료일 : 계정 만료일 , 1970년 1월 1일 기준  </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /securetty : 루트가 로그인이 가능한 터미널 목록을 정의해둔 파일\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ /bin/login 프로세스가 현재 파일을 참조하여 사용  </summary>\r\n                          <small>  </small>\r\n                          <li> tty(TeleTYpewriter) : 콘솔이나 터미널을 의미 </li>\r\n                          <li> pts(Pseudo TTY Slave) : 네트워크를 통해 원격접속 했을때 열리는 터미널 </li>\r\n                          <li> ttyS : 시리얼 라인 또는 모뎀을 통했을때 허용하는 터미널 </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /ssh/sshd_config\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ ssh의 설정을 가진 파일  </summary>\r\n                          <li>  PermitRootLoing yes #root로그인을 막는 설정 </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /group\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ 사용자의 그룹들을 모아놓은 파일  </summary>\r\n                          <li> sudo groupadd 그룹명 , #그룹을 생성 </li>\r\n                          <li> sudo groupdel 그룹명 , #그룹을 삭제  </li>\r\n                          <li> sudo gpasswd 그룹명 , #그룹의 암호를 설정(사용자가 그룹에 로그인하기 위해 설정)  </li>\r\n                          <li> sudo gpasswd -r 그룹명 , #그룹의 암호를 제거  </li>\r\n                          <li> sudo gpasswd -A 사용자명 그룹명 , #그룹의 관리자를 사용자로 설정  </li>\r\n                          <li> sudo gpasswd -a 사용자명 그룹명 , #그룹에 사용자를 포함시킴  </li>\r\n                          <li> sudo gpasswd -d 사용자명 그룹명 , #그룹에서 사용자를 제외 시킴  </li>\r\n                          <li> sudo usermod -a -g 사용자명 그룹명 , #사용자의 그룹을 변경  </li>\r\n                          <li> sudo usermod -a -G 사용자명 그룹명 , #사용자의 주 그룹 + 그룹을 하나 추가  </li>\r\n                          <li> newgrp 그룹명 , #다른 그룹으로 로그인  </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /default/useradd\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ 사용자 생성 설정  </summary>\r\n                          <li> GROUP : 기본등록 그룹의 GID , 100 </li>\r\n                          <li> HOME : 생성될 홈 디렉토리의 위치 , /home </li>\r\n                          <li> INACTIVE : 패스워드 만료 이후의 유효기간 설정 , 1  </li>\r\n                          <li> EXPIRE : 계정 종료일 지정 , 1 </li>\r\n                          <li> SHELL : 기본 사용 쉘 지정 , /bin/bash </li>\r\n                          <li> SKEL : 홈 디렉토리에 복사할 기본환경파일위치(사용자가 생성될 때 자동으로 홈 디렉토리에 자동으로 추가되는 파일들을 담은 폴더) , /etc/skel </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /login.defs\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ 사용자 계정 설정과 관련된 기본 값을 정의한 파일 </summary>\r\n                          <li> MAIL_DIR : 기본 메일 디렉토리 , # /var/spool/mail  </li>\r\n                          <li> PASS_MAX_DAYS : 패스퉈드 최대 사용일 , # 99999 </li>\r\n                          <li> PASS_MIN_DAYS : 패스워드 최소 사용일 , # 0 </li>\r\n                          <li> PASS_MIN_LEN\t : 패스워드 최소 길이 , # 5 </li>\r\n                          <li> PASS_WARN_AGE : 패스워드 만료 경고일 , # 7 </li>\r\n                          <li> UID_MIN , UID_MAX : 사용자 계정 UID범위 , # 1000,60000 </li>\r\n                          <li> SYS_UID_MIN , SYS_UID_MAX : 시스템 계정 UID범위 , # 210 , 999 </li>\r\n                          <li> GID_MIN , GID_MAX : 사용자 계정 GID범위 , # 1000,60000 </li>\r\n                          <li> SYS_GID_MIN , SYS_GID_MAX : 시스템 계정 GID범위 , # 210 , 999 </li>\r\n                          <li> CREATE_HOME : 홈 디렉토리 생성 여부 , # yes  </li>\r\n                          <li> UMASK : umask 값 설정(권한설정) , # 077 , 허가권=777-unmask값 </li>\r\n                          <li> USERGROUPS_ENAB : 사용자 계정 삭제시 그룹 삭제 여부 , # yes  </li>\r\n                          <li> ENCRYPT_METHOD : 암호화 기법 , # SHA512  </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> etc/dhcp/dhcpd.conf\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ dhcp 설정 파일 </summary>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /resolv.conf\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶   </summary>\r\n                          <li>   </li>\r\n                          <li>   </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶   </summary>\r\n                          <li>   </li>\r\n                          <li>   </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ lost+found </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 파일 시스템에 문제가 발생하여 복구할 경우 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ mnt </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 파일 시스템을 임시로 마운팅 하는 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ proc </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 프로세스 정보 등 커널 관련 정보가 저장되는 디렉토리 </li>\r\n                    <li> ls -la /proc : 현재 작동되는 프로세스들을 보여줌 </li>\r\n                    <li> ls -la /proc/PID번호 : PID번호에 맞는 프로세스 파일들을 보여줌 </li>\r\n                    <li> ls -la /proc/$$/fd : 파일 디스크립터  </li>\r\n                    <li> exec 0&lt;&amp;- : 0번 표준입력을 꺼버림 , 문제가 발생  </li>\r\n                    <li> exec 1&lt;&amp;- : 1번 표준입력을 꺼버림 , 문제가 발생  </li>\r\n                    <li> exec 2&lt;&amp;- : 2번 표준입력을 꺼버림 , 문제가 발생  </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ run </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 실행 중인 서비스와 관련된 파일이 저장 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ srv </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> FTP나 Web 등 시스템에서 제공하는 서비스의 데이터가 저장된다. </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ tmp </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 시스템에 사용중에 발생하는 임시데이터 저장공간, 재부팅 되면 모두 삭제 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ var </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 시스템 운영 중에 발생하는 데이터나 로그 등이 저장되는 디렉토리 </li>\r\n                    {/*  */}\r\n                    <li> /lib/dhcpd/dhcpd.leases\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶   </summary>\r\n                          <li>   </li>\r\n                          <li>   </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶   </summary>\r\n                          <li>   </li>\r\n                          <li>   </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxDirectory;","import React from 'react';\r\n\r\nconst LinuxUbuntu = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ VMware에 Ubuntu 설치하는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> <a href=\"https://ubuntu.com/download/desktop/thank-you?version=20.04.2.0&amp;architecture=amd64\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                                    <li> CentOS-7-x86_64-DVD-2009.iso 다운로드 </li>\r\n                                    <li> VMware Workstation 실행 </li>\r\n                                    <li> Create a New Virtual Machine </li>\r\n                                    <li> Typical 클릭 </li>\r\n                                    <li> I will install the operation system later 클릭 </li>\r\n                                    <li> Linux , CentOS 7 64-bit 클릭 </li>\r\n                                    <li> Virtual machine name: CentOS7_Server 이름으로 바꾸기 (안바꾸어도 상관은 없음) </li>\r\n                                    <li> 20GB , Split virtual disk into multiple files 클릭 </li>\r\n                                    <li> Customize Hardware... 클릭 </li>\r\n                                    <li> Memory : 가상 램은 2GB(2048MB)로 변경 </li>\r\n                                    <li> New CD/DVD (IDE) : Use ISO image file:에 아까받은 CentOS7 넣기 </li>\r\n                                    <li> Network Adapter : Custom 부분에 VMnet8(NAT)로 선택 </li>\r\n                                    <li> Sound Card, Printer는 remove (아래쪽에 버튼이 있음) </li>\r\n                                    <li> close하고 finish </li>\r\n                                    <li> 한국어 선택하고 Ubuntu 설치  </li>\r\n                                    <li> 키보드 레이아웃 선택: Korean 하고 101/104 선택하고 계속하기 </li>\r\n                                    <li> 건드리지 않고 계속하기 클릭 </li>\r\n                                    <li> 디스크를 지우고 Ubuntu설치 클릭 - 지금 설치 - 계속하기 </li>\r\n                                    <li> 거주지역 Seoul </li>\r\n                                    <li> 이름 : 이름 </li>\r\n                                    <li> 컴퓨터 이름 : 이름.com </li>\r\n                                    <li> 사용자 이름 선택 : </li>\r\n                                    <li> 암호 선택 : P@ssw0rd! </li>\r\n                                    <li>  </li>\r\n                                    <li> 프로그램 - 시스템 도구 - 설정 - 개인 정보 - 화면잠금 - 끔 </li>\r\n                                    <li> 프로그램 - 시스템 도구 - 설정 - 전원 - 빈화면 - 안함 </li>\r\n                                    <li> 프로그램 - 시스템 도구 - 설정 - 터미널   </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Ubuntu 터미널 명령어 <a name=\"Ubuntu 터미널 명령어\" style={{ visibility: \"hidden\" }}> Ubuntu 터미널 명령어 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> sudo passwd root #루트의 비번을 변경 </li>\r\n                                    <li> su - root #루트로 접속 </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 네트워크 설정 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> ls -la /etc/netplan : 우분투에서 네트워크 설정이 있는 경로에서 파일보기  </li>\r\n                                    <li> cd /etc/netplan 경로이동 - vi 01-network-manager-all.yaml </li>\r\n                                    <li> ethernets:  </li>\r\n                                    <li> &nbsp;ens33:  </li>\r\n                                    <li> &nbsp;&nbsp;addresses: [192.168.10.90/24] </li>\r\n                                    <li> &nbsp;&nbsp;gateway4: 192.168.10.2 </li>\r\n                                    <li> &nbsp;&nbsp;nameservers: </li>\r\n                                    <li> &nbsp;&nbsp;&nbsp;addresses: [168.126.63.1,8.8.8.8] </li>\r\n                                    <li> &nbsp;&nbsp;dhcp4: no </li>\r\n                                    <li> cat 01-network-manager-all.yaml 으로 확인 </li>\r\n                                    <li> netplan apply #netplan이 관리해서 적용한다?</li>\r\n                                    <li> ip route #확인해보면 ip가 변경된 것을 볼 수 있음 </li>\r\n                                    <li> 참고 구글에 winmerge 검색하고 다운로드 하고 실행</li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ telnet 서버 설치하는 방법 <a name=\"telnet 서버 설치하는 방법\" style={{ visibility: \"hidden\" }}> telnet 서버 설치하는 방법 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <small> 텔넷서버: 원격 접속을 지원하는 프로그램, 보안에 취약해서 대분분 SSH를 사용 </small>\r\n                                <span className=\"sstitle\"> 방법1 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 0. sudo passwd root </li>\r\n                                    <li> 0. su - # 루트 계정으로 접속하는 방법 </li>\r\n                                    <li> 1. apt-get install xinetd </li>\r\n                                    <li> 2. apt-get install telnetd </li>\r\n                                    <li> 3. vi /etc/xinetd.conf\r\n                                        <li> {'service telnet '} </li>\r\n                                        <li> {'{ '} </li>\r\n                                        <li> {'        disable = no '} #서비스를 사용하지 않을것인지 no면 사용한다는 의미</li>\r\n                                        <li> {'        flags = REUSE '} #재사용한다는 의미</li>\r\n                                        <li> {'        socket_type = stream '} #소켓형태 스트림</li>\r\n                                        <li> {'        wait = no '} #바로 서버를 사용?</li>\r\n                                        <li> {'        user = root '} #접속할수 있는 유저</li>\r\n                                        <li> {'        server = /usr/sbin/in.telnetd '} #텔넷서버에 대한 명령어 </li>\r\n                                        <li> {'        log_on_failure += USERID '} #접속실패했을떄 유저의 아이디를 로그로 남겨라</li>\r\n                                        <li> {'} '} </li>\r\n                                    </li>\r\n                                    <li> /etc/init.d/xinetd restart </li>\r\n                                    <li> apt-get install net-tools # netstat 보려고 다운 </li>\r\n                                    <li> netstat -tnlp #tcp에 대한 포트를 보겠다? , 우분투에서는 없음</li>\r\n                                    <li> ufw enable #방화벽 활설화? </li>\r\n                                    <li> ufw statue #방확벽의 활성화 여부 확인 </li>\r\n                                    <li> ufw allow 23/tcp #tcp23포트를 방화벽에서 허용 </li>\r\n                                    <li> vi /etcpam.d/login로 가서 10번쨰 줄 정도에 auth required pam_securetty.so 추가  </li>\r\n                                    <li> systemctl restart xinetd </li>\r\n                                    <li> vi etc/securetty </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 쉘 설치하기 <a name=\"쉘 설치하기\" style={{ visibility: \"hidden\" }}> 쉘 설치하기 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> csh 설치하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 과거에 사용한 C기반의 쉘 </li>\r\n                                    <li> apt-get install csh </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ dhcp 서버 설치하는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> dhcp 서버란? </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Dynamic Host Configuration Protocol </li>\r\n                                    <li> 자신의 네트워크 안에 클라이언트 컴퓨터가 부팅될 떄 자동으로 IP주소, 서브넷마스크, 게이트웨이 주소, DNS 서버 주소를\r\n                                        할당해주는 것 </li>\r\n                                    <li> 일반 사용자는 IP에 관련된 어려운 정보를 알지 못해도 사용을 하는데 문제가 없음 </li>\r\n                                    <li> dhcp 서버는 관리가 편하고 이용자도 편함 </li>\r\n                                    <li> 한정된 IP주소를 가지고 더많은 IP주소가 있는 것처럼 사용하여 여러명의 사용자가 사용할 수 있게 함 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> dhcp 서버 작동원리 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. dhcp클라이언트 컴퓨터 부팅 </li>\r\n                                    <li> 2. 자동으로 IP 주소를 dhcp서버로 요청 </li>\r\n                                    <li> 3. dhcp서버에 있는 할당 되지 않은 IP를 선택하고 할당됨으로 변경 </li>\r\n                                    <li> 4. IP주소를 dhcp클라이언트에게 할당 </li>\r\n                                    <li> 5. dhcp클라이언트는 dhcp서버에게 받은 IP로 인터넷을 이용  </li>\r\n                                    <li> 6. dhcp클라이언트가 접속을 종료하게 되면 dhcp서버에 IP주소를 반납 </li>\r\n                                    <li> 7. dhcp서버에 있는 IP주소 목록에서 반납된 IP주소를 다시 할당해제를 시켜준다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> dhcp 서버 설치 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> apt-get -y install isc-dhcp-server , # LOCK이 걸려있으면 아래 명령어 참고  </li>\r\n                                    <small> rm /var/lib/apt/lists/lock </small> <br />\r\n                                    <small> rm /var/cache/apt/archives/lock </small> <br />\r\n                                    <small> rm /var/lib/dpkg/lock* </small> <br />\r\n                                    <li> apt install net-tools , # ifconfig를 지원하지 않아 설치 </li>\r\n                                    <li> systemctl restart isc-dhcp-server </li>\r\n                                    <li> lsof -i upd:67 </li>\r\n                                    <li>  </li>\r\n\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> dhcp 서버 설정 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> /etc/dhcp/dhcpd.conf 에 아래와 같은 내용을 넣어 주면 된다.  </li>\r\n                                    <li> subnet 192.168.10.0 netmask 255.255.255.0 , # netmask는 앞에 9자리가 네트워크 대역이라는 것을 알려줌 </li>\r\n                                    <li> {'{'}  </li>\r\n                                    <li> host client1  </li>\r\n                                    <li> {'{'}  </li>\r\n                                    <li> option host-name \"client1\";  </li>\r\n                                    <li> hardware ethernet 하드웨어주소; , # ifconfig에서 ether 주소를 참조 </li>\r\n                                    <li> fixed-address 102.168.10.251;  </li>\r\n                                    <li> {'}'}  </li>\r\n                                    <li> option routers 192.168.10.2; , #dhcp서버가 보는 나의 게이트웨이 주소  </li>\r\n                                    <li> option subnet-mask 255.255.255.0;  , # 네트워크 대역을 255로 알려줘  </li>\r\n                                    <li> range dynamic-bootp 192.168.10.30 192.168.10.50; , #30~50번 IP를 나누어 준다.   </li>\r\n                                    <li> option domain-name-servers 8.8.8.8;  , # 도메인 주소를 설정 </li>\r\n                                    <li> default-lease-time 86400; , # 클라이언트에게 준 IP의 시간을 초단위로 설정  </li>\r\n                                    <li> max-lease-time 172800; , # 클라이언트에게 준 동일한 IP의 최대 시간을 초단위로 설정, 오랜기간 사용하면 악용의 소지떄문에 제한  </li>\r\n                                    <li> {'}'}  </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> dhcp 클라이언트 설정 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> vi /etc/netplan/01-network-manager-all.yaml </li>\r\n                                    <li> netplan apply </li>\r\n                                    <li> ip route , # 아무것도 나오지 않으면 아래 참고 </li>\r\n                                    <small>  우분트 우측 상단 - 전원 버튼 - 유선으로 관리되지 않음 - 연결 , 이래도 안되면 아래방법 참고  </small> <br />\r\n                                    <small>    </small> <br />\r\n                                    <li> vi /etc/netplan/01-network-manager-all.yaml\r\n                                        <li> renderer: ~~~~ 아래부터 작성 </li>\r\n                                        <li> ethernets: </li>\r\n                                        <li> &nbsp;ens33: , # ls /sys/class/net 참고 </li>\r\n                                        <li> &nbsp;&nbsp;dhcp4: yes </li>\r\n                                    </li>\r\n                                    <li> systemctl restart isc-dhcp-server </li>\r\n                                    <li> lsof -i udp:67  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinuxUbuntu;","import React from 'react';\r\n\r\nconst LinuxCentOS7 = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ VMware에 CentOS7 설치하는 방법 <a name=\"VMware에 CentOS7 설치하는 방법\" style={{ visibility: \"hidden\" }}> VMware에 CentOS7 설치하는 방법 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> <a href=\"https://www.centos.org/download/\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                  <li> CentOS Linux 7 ISO x86_64 클릭 </li>\r\n                  <li> <a href=\"http://ftp.kaist.ac.kr/CentOS/7.9.2009/isos/x86_64/\" target=\"_blank\" rel=\"noreferrer\"> http://ftp.kaist.ac.kr/CentOS/7.9.2009/isos/x86_64/ 파일 다운로드 </a>  </li>\r\n                  <li> CentOS-7-x86_64-DVD-2009.iso 다운로드 </li>\r\n                  <li> VMware Workstation 실행 </li>\r\n                  <li> Create a New Virtual Machine </li> <br />\r\n                  {/*  */}\r\n                  <li> Typical 클릭 </li>\r\n                  <li> I will install the operation system later 클릭 </li>\r\n                  <li> Linux , CentOS 7 64-bit 클릭 </li>\r\n                  <li> Virtual machine name: CentOS7_Server 이름으로 바꾸기 (안바꾸어도 상관은 없음) </li>\r\n                  <li> 20GB , Split virtual disk into multiple files 클릭 </li>\r\n                  <li> Customize Hardware... 클릭 </li>\r\n                  <li> Memory : 가상 램은 2GB(2048MB)로 변경 </li>\r\n                  <li> New CD/DVD (IDE) : Use ISO image file:에 아까받은 CentOS7 넣기 </li>\r\n                  <li> Network Adapter : Custom 부분에 VMnet8(NAT)로 선택 </li>\r\n                  <li> Sound Card, Printer는 remove (아래쪽에 버튼이 있음) </li>\r\n                  <li> close하고 finish </li> <br />\r\n                  {/*  */}\r\n                  <li> Test this media &amp; install CentOS 7 클릭  </li>\r\n                  <li> 스크롤로 내려서 한국어 누르고 계속 진행 </li>\r\n                  <li> 키보드 - '+'키 클릭 -  english검색하고 영어(미국) 추가</li>\r\n                  <li> 소프트웨어 설치 - 개발 및 창조를 위한 워크스테이션 - 완료 <small> GUI 등을 추가하기 위해서 선택 </small> </li>\r\n                  <li> 설치대상 - 상단에 VMware 아이콘 체크박스를 클릭하고 다시한번더 클릭해서 인식되게 만듬 </li>\r\n                  <li> KDUMP 활성화는 비활성화 #메모리를 좀더 절약하기 위해서 </li>\r\n                  <li> 네트워크 및 호스트명 끔 → 켬  - 완료 </li>\r\n                  <li> 설치 시작 </li>\r\n                  <li> root 암호 : P@ssw0rd! </li>\r\n                  <li> 사용자 생성 : 영어로된아이디나이름 </li>\r\n                  <li> 라이센스 동의 - 완료     </li>\r\n                  <li> 한국 - 한국어(Hangul) - 다음  - 위치정보 끔 - 다음 - 건너뛰기 - 시작 </li>\r\n                  <li> 라이센스 동의 해주기 </li> <br />\r\n                  {/*  */}\r\n                  <li> 프로그램 - 시스템 도구 - 설정 - 알림 - 알림팝업,잠근화면알림 끄기 </li>\r\n                  <li> 프로그램 - 시스템 도구 - 설정 - 전원 - 빈화면 안함으로 바꿈 </li>\r\n                  <li> 프로그램 - 시스템 도구 - 개인 정보 - 화면 잠금 끄기 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ CentOS7 관련 명령어 <a name=\"CentOS7 관련 명령어\" style={{ visibility: \"hidden\" }}> CentOS7 관련 명령어 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\" style={{ listStyle: \"none\" }} >\r\n                  <li>  </li>\r\n                  <li> su - : 루트 계정으로 접속하는 방법 </li>\r\n                  <li> su 계정명 : 원하는 계정으로 접속하는 방법 </li>\r\n                  <li> netstat -tnlp , 텔넷은 23번포트트 사용한다. </li>\r\n                  <li> cd /etc/xinetd.d/ 그리고 vi telnet </li> <br />\r\n                  <li> {'service telnet {'}\r\n                    <li> {' disable = no '} <small> #서비스를 사용하지 않을것인지 no면 사용한다는 의미 </small> </li>\r\n                    <li> {' flags = REUSE '}   <small> #재사용한다는 의미 </small></li>\r\n                    <li> {' socket_type = stream '}   <small> #소켓형태 스트림 </small></li>\r\n                    <li> {' wait = no '}   <small> #바로 서버를 사용? </small></li>\r\n                    <li> {' user = root '}   <small> #접속할수 있는 유저 </small></li>\r\n                    <li> {' server = /usr/sbin/in.telnetd '}   <small> #텔넷서버에 대한 명령어 </small> </li>\r\n                    <li> {' log_on_failure += USERID '}   <small> #접속실패했을떄 유저의 아이디를 로그로 남겨라 </small></li>\r\n                  </li>\r\n                  <li> {'} '} </li> <br />\r\n                  <li> systemctl restart xinetd </li>\r\n                  <li> centos7 client에서 centos7 server로 접속하기\r\n                    <li> ping 168.126.63.1 </li>\r\n                    <li> ping 192.168.10.2 </li>\r\n                    <li> ip route </li>\r\n                    <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33 </li>\r\n                    <li> firewall-cmd --permanent --add-port=23/tcp #방화벽을 열음 </li>\r\n                    <li> firewall-cmd --reload </li>\r\n                    <li> tty : 현재 접속중인 터미널 번호 </li>\r\n                    <li> echo$$ </li>\r\n                    <li> vi /etc/securetty :  </li>\r\n                    <li>  </li>\r\n                    <li> yum install xinetd telnet #client에서 설치하는 거 </li>\r\n                    <li> telnet l root 192.168.10.1 </li>\r\n                    <li> ip route </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ telnet 서버 설치하는 방법 <a name=\"telnet 서버 설치하는 방법\" style={{ visibility: \"hidden\" }}> telnet 서버 설치하는 방법 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설치 방법 </span> <br />\r\n                <small> 텔넷서버: 원격 접속을 지원하는 프로그램, 보안에 취약해서 대분분 SSH를 사용 </small>\r\n                <span className=\"mblock\">\r\n                  <li> 0. su - # 루트 계정으로 접속하는 방법 </li>\r\n                  <li> 1. yum -y install telnet-server # telnet서버 설치 1번방법 </li>\r\n                  <li> 1-1. yum install xinetd telnet-server # telnet서버 설치 2번방법 </li>\r\n                  <li> 2. rpm -qa telnet-server , rpm -qa | grep telnet # 설치가 잘 되었는지 확인 </li>\r\n                  <li> 3. systemctl start telnet.socket # 서버를 가동 </li>\r\n                  <li> 4. systemctl status telnet.socket # 서버가 잘 가동 되었는지 확인 </li>\r\n                  <li> 5. firewall-config - 메뉴 - 설정은 영구적으로 변경, 영역 - public - 서비스 -telnet 체크박스 체크  # 방화벽 해제 </li>\r\n                  <li> 6. 이어서 옵션 - firewalld 다시 불러오기 - 창닫기 </li>\r\n                  <li> 6-1. firewall-cmd --permanent --add-port=23/tcp #방확벽에서 23포트 오픈  </li>\r\n                  <li> 6-2. firewall-cmd --permanent --add-service=telnet   </li>\r\n                  <li> 7. firewall-cmd --reload  #방화벽 설정 적용 </li>\r\n                  <li> 8. systemctl enable telnet.socket #재부팅 후에도 텔넷 서버가 돌아가도록 만듬 </li>\r\n                  <li>  </li>\r\n                  <li> 0. adduser 사용자명, passwd 사용자명 </li>\r\n                  <li> 1. yum -y install telnet </li>\r\n                  <li> 2. 제어판 - Window 기능 켜기/끄기 - 텔넷 클라이언트 체크박스 체크 </li>\r\n                  <li> 3. ping telnet서버IP주소  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ dhcp 서버 설치하는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> dhcp 서버란? </span>\r\n                <span className=\"mblock\">\r\n                  <li> Dynamic Host Configuration Protocol </li>\r\n                  <li> 자신의 네트워크 안에 클라이언트 컴퓨터가 부팅될 떄 자동으로 IP주소, 서브넷마스크, 게이트웨이 주소, DNS 서버 주소를\r\n                    할당해주는 것 </li>\r\n                  <li> 일반 사용자는 IP에 관련된 어려운 정보를 알지 못해도 사용을 하는데 문제가 없음 </li>\r\n                  <li> dhcp 서버는 관리가 편하고 이용자도 편함 </li>\r\n                  <li> 한정된 IP주소를 가지고 더많은 IP주소가 있는 것처럼 사용하여 여러명의 사용자가 사용할 수 있게 함 </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> dhcp 서버 작동원리 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 1. dhcp클라이언트 컴퓨터 부팅 </li>\r\n                  <li> 2. 자동으로 IP 주소를 dhcp서버로 요청 </li>\r\n                  <li> 3. dhcp서버에 있는 할당 되지 않은 IP를 선택하고 할당됨으로 변경 </li>\r\n                  <li> 4. IP주소를 dhcp클라이언트에게 할당 </li>\r\n                  <li> 5. dhcp클라이언트는 dhcp서버에게 받은 IP로 인터넷을 이용  </li>\r\n                  <li> 6. dhcp클라이언트가 접속을 종료하게 되면 dhcp서버에 IP주소를 반납 </li>\r\n                  <li> 7. dhcp서버에 있는 IP주소 목록에서 반납된 IP주소를 다시 할당해제를 시켜준다. </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> dhcp 서버 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> yum install dhcp  </li>\r\n                  <li> r pm -qa | grep dhcp , # dhcp서버 설치되었는지 확인  </li>\r\n                  <li> systemctl restart dhcpd </li>\r\n                  <li> lsof -i updL67 </li>\r\n                  <li> dnsmasq라는 간소화된 dhcp/dns서버가 설치 되어있다. 그러므로 제거가 필요 </li>\r\n                  <li> ps -ef | grep dnsmasq | grep -v grep | xargs kill -9 </li>\r\n                  <li> systemctl disable libvirtd </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> dhcp 서버 설정 </span>\r\n                <span style={{ listStyle: \"none\" }} className=\"mblock\">\r\n                  <li> subnet 192.168.10.0 netmask 255.255.255.0 <small> netmask는 앞에 9자리가 네트워크 대역이라는 것을 알려줌 </small> </li>\r\n                  <li> {'{'}\r\n                    <li> host client1  </li>\r\n                    <li> {'{'}\r\n                      <li> option host-name \"client1\";  </li>\r\n                      <li> hardware ethernet 하드웨어주소; , # ifconfig에서 ether 주소를 참조 </li>\r\n                      <li> fixed-address 102.168.10.251;  </li>\r\n                    </li>\r\n                    <li> {'}'}  </li>\r\n                    <li> option routers 192.168.10.2; <small> # dhcp서버가 보는 나의 게이트웨이 주소 </small> </li>\r\n                    <li> option subnet-mask 255.255.255.0; <small> # 네트워크 대역을 255로 알려줘 </small> </li>\r\n                    <li> range dynamic-bootp 192.168.10.30 192.168.10.50;  <small> #30~50번 IP를 나누어 준다. </small>  </li>\r\n                    <li> option domain-name-servers 8.8.8.8;  <small> # 도메인 주소를 설정 </small> </li>\r\n                    <li> default-lease-time 86400; <small> # 클라이언트에게 준 IP의 시간을 초단위로 설정 </small>  </li>\r\n                    <li> max-lease-time 172800; <small> # 클라이언트에게 준 동일한 IP의 최대 시간을 초단위로 설정, 오랜기간 사용하면 악용의 소지떄문에 제한 </small>  </li>\r\n                  </li>\r\n                  <li> {'}'}  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> dhcp 클라이언트 설정 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxCentOS7;","import React from 'react';\r\n\r\nconst LinuxShell = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ rsh(remote shell) <a name=\"rsh(remote shell)\" style={{ visibility: \"hidden\" }}> rsh(remote shell) </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 컴퓨터 네트워크의 다른 컴퓨터에서 다른 사용자로 셸 명령을 실행할 수 있는 명령줄 컴퓨터 프로그램 </li>\r\n                                    <li> rsh 연결시 원격 시스템은 rsh 데몬을 실행 , rsh데몬은 전송제어프로토콜(TCP) 포트 514를 사용 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 장단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_r\"> rsh 프로토콜은 네트워크 용도로 안전하지 않음, 암호화되지 않음 정보를 전송함  </li>\r\n                                    <li className=\"col_be\">  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinuxShell;","import React from 'react';\r\n\r\nconst LinuxShellScript = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 쉘 스크립트의 기본 설명 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 주석 </span>\r\n                <span className=\"mblock\">\r\n                  <li> # </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> #!(Shebang) </span>\r\n                <span className=\"mblock\">\r\n                  <li> 스크립트를 처리할 인터프리터 </li>\r\n                  <li> 처리할 인터프리터 종류\r\n                    <li> #!/bin/sh (Bourne Shell) </li>\r\n                    <li> #!/bin/csh (C Shell) </li>\r\n                    <li> #!/bin/ksh (Korn Shell) </li>\r\n                    <li> #!/bin/bash (Bash Shell) </li>\r\n                    <li> #!/usr/bin/perl (Perl)</li>\r\n                    <li> #!/usr/bin/python (Python) </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 공백(띄어쓰기) </span>\r\n                <span className=\"mblock\">\r\n                  <li> 스크립트에서 공백은 무시할 수 없는 중요한 요소이다. </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 쉘 스크립트를 사용하는 이유 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 여러개의 명령을 작업하는 것보다 여러개의 명령어를 하나의 공간(스크립트)에 담아서\r\n                    하나의 스크립트만을 실행하여 작업하는 것이 편해서 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 쉘 스크립트 사용하는 방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 1. vi 파일명.sh 로 스크립트를 생성 </li>\r\n                  <li> 2. #!/bin/bash , 파일의 최상단에 선언(스크립트를 무슨 인터프리터로 사용해서 처리하겠다.) </li>\r\n                  <li> 3. 코드를 작성 </li>\r\n                  <li> 4. 코드를 다 작성하고 실행해서 실행이 되지 않으면 chmod 명령어로 실행권한을 준다. </li>\r\n                  <li> 5. ./파일명.sh  를 사용해서 실행 가능 , bash쉘은 sh 파일명.sh 로도 실행 가능 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 쉘 스크립트 실행하고 입력값 넣는방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> read 변수명  을 쉡 스크립트 안에 써놓으면 사용할 때 입력값을 넣을 수 있다. </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 변수 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 변수 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 변수명=\"문자열\" , # 공백이 존재하면 안됨, 특수문자나숫자로 변수명이 시작하면 안됨 </li>\r\n                  <li> 변수명=변수값 , # 공백이 존재하면 안됨, 특수문자나숫자로 변수명이 시작하면 안됨 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 변수 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> ${'{변수명}'} : 변수 출력 </li>\r\n                  <li> ${'{변수명^}'} : 제일 앞에 글자만 대문자로 변경 </li>\r\n                  <li> ${'{변수명^^}'} : 모든 글자 대문자로 변경 </li>\r\n                  <li> ${'{변수명,}'} : 제일 앞에 글자만 소문자로 변경 </li>\r\n                  <li> ${'{변수명,,}'} : 모든 글자 소문자로 변경 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 변수 다른 쉡 스크립트에서 사용하기  </span>\r\n                <span className=\"mblock\">\r\n                  <li> export 변수명=\"변수값\" </li>\r\n                  <li> ./@.sh , # 다른 쉘 스크립트 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 내부에서 정의한 변수를 매개변수(파라미터)처럼 사용하는 방법  </span>\r\n                <span className=\"mblock\">\r\n                  <li> set $(변수)  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 매개변수 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 매개변수 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> ${0} , ${1} , ${2} : 매개변수가 들어온 순서대로 사용 , 0번은 실행된 스크립트 </li>\r\n                  <li> ${'{#}'} ,매개변수의 갯수 </li>\r\n                  <li> ${'{*}'} ,매개변수의 모든 값  </li>\r\n                  <li> ${'{@}'} ,매개변수의 모든 값 </li>\r\n                  <li> ${'{매개변수명:start:count}'} : 시작인덱스 부터 갯수만큼 출력 </li>\r\n                  <li> ${'{배열[index]}'} : 인덱스값에 맞는 배열값을 출력 </li>\r\n                  <li> ${'{$!}'} ,  </li>\r\n                  <li> ${'{$$}'} , 쉘 스크립트의 PID </li>\r\n                  <li> ${'{$?}'} , 실행한 뒤의 반환값 </li>\r\n                  <li> ${'{$_}'} , 지난 명령의 마지막 인자로 설정된 특수 변수 </li>\r\n                  <li> ${'{$-}'} , 현재 Shell이 호출될 때 사용한 옵션들 </li>\r\n                  <li> ${'{#매개변수명}'} : 매개변수의 길이 출력 </li>\r\n                  <li> ${'{#배열[*]}'} : 배열의 길이 출력 </li>\r\n                  <li> ${'{매개변수명:start:count}'} : 시작인덱스 부터 갯수만큼 출력 </li>\r\n                  <li> ${'{매개변수명:=\"값\"'} #값이 존재한다면 그대로 사용하고 없으면 추가 </li>\r\n                  <li> ${'{매개변수명+\"값\"'} #값이 존재한다면 저장하지 않고 값만 출력만 해줌 </li>\r\n                  <li> ${'{매개변수명-\"값\"'} #값이 존재한다면 원래 값을 출력 값이 없다면 값만 출력 해준다. </li>\r\n                  <li> ${'{#매개변수명#입력값}'} : 입력값을 제일앞에서부터 첫번째 것을 찾음  </li>\r\n                  <li> ${'{#매개변수명##입력값}'} : 입력값을 제일앞에서부터 마지막 것을 찾음  </li>\r\n                  <li> ${'{#매개변수명%입력값}'} : 입력값을 제일뒤에서부터 첫번째 것을 찾음   </li>\r\n                  <li> ${'{#매개변수명%%입력값}'} : 입력값을 제일뒤에서부터 마지막 것을 찾음 </li>\r\n                  <li> ${'{#매개변수명/입력값/변경값}'} : 입력값과 첫번째로 일치하는 값을 변경 </li>\r\n                  <li> ${'{#매개변수명//입력값/변경값}'} : 입력값과 일치하는 모든 값을 변경 </li>\r\n                  <li> ${'{#매개변수명/#입력값/변경값}'} : 제일 앞에 있는 값이 입력값과 같을 경우만 변경 </li>\r\n                  <li> ${'{#매개변수명/%입력값/변경값}'} : 제일 뒤에 있는 값이 입력값과 같을 경우만 변경 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 매개변수 인자 전달하는 방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> ./@.sh 매개변수1 매개변수2 매개변수3 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 매개변수를 한칸씩 밀어내는 방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> shift , #반복문에서 이용을 하면 S1이 사라지는 것을 볼 수 있을 것이다.  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 시스템 변수 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 시스템 변수 종류 </span>\r\n                <span className=\"mblock\">\r\n                  <li> HOME : 사용자 홈 디렉토리 </li>\r\n                  <li> PATH : 실행 파일의 경로 </li>\r\n                  <li> LANG : 실행시 사용되는 언어 </li>\r\n                  <li> UID : 사용자의 UID </li>\r\n                  <li> SHELL : 로그인시 실행되는 쉘 </li>\r\n                  <li> USER : 사용자 계정 </li>\r\n                  <li> FUNCNAME : 현재 실행되고 있는 함수 이름 </li>\r\n                  <li> TERM : 로그인 터미널 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 조건문 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> if 조건문 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> if  조건문 {'&&'} 조건문 {'||'} 조건문 ; then </li>\r\n                  <li> 내용 </li>\r\n                  <li> elif [조건문] ; then </li>\r\n                  <li> 내용 </li>\r\n                  <li> else </li>\r\n                  <li> 내용 </li>\r\n                  <li> fi </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> else 조건문 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> case ${'{1}'} in </li>\r\n                  <li> 값1 | 값2) 내용 ;; </li>\r\n                  <li> [fF]*{')'} 내용 ;; </li>\r\n                  <li> *{')'} 내용 ;; </li>\r\n                  <li> esac </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 조건문 연산자 </span>\r\n                <span className=\"mblock\">\r\n                  <li> -a : AND </li>\r\n                  <li> -o : OR </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 조건문 종류 , []괄호 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> if [ ${'{요소1}'} -eq  ${'{요소2}'} ]; , # equal(=)</li>\r\n                  <li> if [ ${'{요소1}'} -ne  ${'{요소2}'} ]; , # not equal(!=)</li>\r\n                  <li> if [ ${'{요소1}'} -gt  ${'{요소2}'} ]; , # greater(&gt;) </li>\r\n                  <li> if [ ${'{요소1}'} -ge  ${'{요소2}'} ]; , # greater or equal(&lt;)</li>\r\n                  <li> if [ ${'{요소1}'} -lt  ${'{요소2}'} ]; , # little(&lt;)</li>\r\n                  <li> if [ ${'{요소1}'} -le  ${'{요소2}'} ]; , # little or equal(&lt;=)</li>\r\n                  <li> if [ -n  문자열 ]; , # 문자열의 길이가 0이 아닌경우 </li>\r\n                  <li> if [ -z  문자열 ]; , # 문자열이 길이가 0인 경우 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 파일과 관련된 조건문 종류 . []괄호 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> if [  -d $(요소) ]; , # 디렉토리가 존재하면 참 </li>\r\n                  <li> if [ ! -d $(요소)];  , # 디렉토리가 존재하지 않으면 참 </li>\r\n                  <li> if [  -e $(요소) ]; , # 파일이 존재하면 참 </li>\r\n                  <li> if [ ! -e $(요소)];  , # 파일이 존재하지 않으면 참 </li>\r\n                  <li> if [  -L $(요소) ]; , # 파일이 심볼릭 링크이면 참 </li>\r\n                  <li> if [  -S $(요소) ]; , # 파일이 소켓이면 참 </li>\r\n                  <li> if [  -s $(요소) ]; , # 파일이 크기가 0보다 크면 참 </li>\r\n                  <li> if [  -r $(요소) ]; , # 파일을 읽을 수 있으면 참 </li>\r\n                  <li> if [  -w $(요소) ]; , # 파일을 쓸 수 있으면 참 </li>\r\n                  <li> if [  -x $(요소) ]; , # 파일을 실행 할 수 있으면 참 </li>\r\n                  <li> if [  -f $(요소) ]; , # 파일이 정규 파일이면 참 </li>\r\n                  <li> if [  -c $(요소) ]; , # 파일이 문자 장치이면 참 </li>\r\n                  <li> if [  -g $(요소) ]; , # 파일에 set-user-id가 설정되면 참 </li>\r\n                  <li> if [ $(요소1) -nt $(요소2) ]; , # 요소1이 더 최신이면 참 </li>\r\n                  <li> if [ $(요소1) -os $(요소2) ]; , # 요소1이 더 오래되면 참 </li>\r\n                  <li> if [ $(요소1) -ef $(요소2) ]; , # 요소1,요소2가 동일하면 참 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 반복문 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> for 반복문 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> for 반복문조건; </li>\r\n                  <li> do </li>\r\n                  <li> 내용 </li>\r\n                  <li> done </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> while 반복문 정의 (거짓이면 반복되는 until도 존재는 한다.) </span>\r\n                <span className=\"mblock\">\r\n                  <li> while ((반복문조건)); , while [ true ] , while [ $i -le 10 ] </li>\r\n                  <li> do</li>\r\n                  <li> 내용</li>\r\n                  <li> ((숫자와 변수의 연산 내용))</li>\r\n                  <li> `expr $i + 1`  , # backtick, backquoto , grave accent, 억음부호 </li>\r\n                  <li> done </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 반복문조건 </span>\r\n                <span className=\"mblock\">\r\n                  <li> for i in 1 2 3 4 5 </li>\r\n                  <li> for i in ${'{list}'} , list = \"1 2 3 4 5\" </li>\r\n                  <li> for i in {'{1..5}'} . # 1~5 </li>\r\n                  <li> for i in {'{1..5..2}'} , # 1,3,5 </li>\r\n                  <li> for i in `seq 1 2 10` , # 1,3,5,7,9 </li>\r\n                  <li> for i in `seq 10 -2 1` , # 10,8,6,4,2 </li>\r\n                  <li> for i in ${'{arr[@]}'} , arr = (1 2 3 4 5) </li>\r\n                  <li> for ((i=0; i&gt;5; i++)); </li>\r\n                  <li> for i in * .*  , # 현재 폴더에 모든 숨긴 파일</li>\r\n                  <li> for i in f*  , # f로 시작하는 모든파일 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 배열 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 배열 선언 및 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 배열 = (요소1 요소2 요소3)  </li>\r\n                  <li> 1. 공백으로 구분 </li>\r\n                  <li> 2. 1차원 배열만 지원 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 배열 요소 바꾸기 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 배열[인덱스] = 값  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 배열 요소 삭제 </span>\r\n                <span className=\"mblock\">\r\n                  <li> unset 배열[인덱스]  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 배열 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> ${'{배열[@]}'} , # 배열의 모든 요소 </li>\r\n                  <li> ${'{배열[인덱스]}'} </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 함수 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 함수 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> function 함수명(){'{'} </li>\r\n                  <li> 내용 </li>\r\n                  <li> {'}'} </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 함수 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 함수명 매개변수 매개변수 , # 스크립트 내부에서 사용 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ printf <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> printf \"%5.2f\" \\n\\n \\t %s \\n\" $var1 \"$var2\" </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 기타  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> sleep 초(시간) </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxShellScript;","import React from 'react';\r\n\r\nconst LinuxServer = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <ul>\r\n          <span className=\"lblock\">\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 네트워크 연결 <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 초기 연결 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h3> CentOS7 </h3>\r\n                      <li> ping 8.8.8.8 #연결이 되었는지 확인 </li>\r\n                      <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33 에서 코드를 변경하거나 추가\r\n                        <li> BOOTPROTO=\"dhcp\"에서 BOOTPROTO=\"static\" 으로 변경 # ip주소를 고정해주겠다. </li>\r\n                        <li> IPADDR=고정IP주소 (ex 192.168.10.80)  </li>\r\n                        <li> PREFIX=24 #24까지가 네트워크 대역이다라고 알려주는것 </li>\r\n                        <li> GATEWAY=192.168.10.2 (ex 게이트 웨이 주소) </li>\r\n                        <li> DNS1=8.8.8.8 (ex DNS서버 주소 , default값 168.126.63.1)  </li>\r\n                      </li>\r\n                      <li> <h4> 방화벽 설정 </h4>\r\n                        <li> firewall-cmd --list-all  # 방화벽 리스트 확인 </li>\r\n                        <li> firewall-cmd --permanent --add-port=포트번호/tcp  # 방화벽 포트 허용 </li>\r\n                        <li> firewall-cmd --reload  # 방화벽 재시작 </li>\r\n                      </li>\r\n                      <li> systemctl restart network </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> Ubuntu </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ httpd 서버 <small> </small>\r\n                  <a name=\"httpd 서버\" style={{ visibility: \"hidden\" }}> httpd 서버 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> httpd 서버 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  <h3> CentOS7 </h3>\r\n                      <li> yum install -y libjpeg* libpng* freetype* gd-* gcc gcc-c++ gdbm-devel libtermcap-devel\r\n                        <small> 의존성 라이브러리 설치 </small></li>\r\n                      <li> yum install httpd* <small> 설치 명령어 </small> </li>\r\n                      <li> systemctl status httpd <small> 설치 확인 명령어 </small></li>\r\n                      <li> systemctl start httpd <small> 서비스 시작 명령어 </small></li>\r\n                      <li> systemctl stop httpd <small> 서비스 중지 명령어 </small></li>\r\n                      <li> systemctl restart httpd <small> 서비스 재시작 명령어 </small></li>\r\n                      <li> firewall-cmd --list-all <small> 방화벽 리스트 확인 </small></li>\r\n                      <li> firewall-cmd --permanent --add-port=80/tcp <small> 방화벽 포트80번 허용 </small></li>\r\n                      <li> firewall-cmd --reload <small> 방화벽 재시작 </small></li>\r\n                      <li> vi /etc/httpd/conf/httpd.conf 에서 :set nu 입력 그리고\r\n                        151번째 줄 AllowOverride ALL 로 변경 <small>  </small></li>\r\n                      <li>  <small>  </small></li>\r\n                      <li>  <small>  </small></li>\r\n                    </li>\r\n                    <li> <h3> Ubuntu  </h3>\r\n                      <li> apt-get install apache2 </li>\r\n                      <li> service apache2 status <small> 설치 확인 명령어 </small></li>\r\n                      <li> service apache2 start <small> 서비스 시작 명령어 </small></li>\r\n                      <li> service apache2 stop <small> 서비스 중지 명령어 </small></li>\r\n                      <li> service apache2 restart <small> 서비스 재시작 명령어 </small></li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> httpd 서버 디렉토리 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> /var/www/html <small> index.html이 있는 경로(없으면 만들어서 사용) </small></li>\r\n                    <li> /etc/httpd/conf <small> MIME 형식을 지정하기 위한 파일인 magic 파일이 있는곳 </small></li>\r\n                    <small> MIME(Multipurpose Internet Mail Extensions) : 과거에는 메일  </small>\r\n                    <li> /etc/httpd/conf.d <small>  아파치의 주요설정을 분리해서 저장하는 곳 </small></li>\r\n                    <li> /etc/httpd/conf.modules.d <small> 아파치 모듈 설치 디렉토리 </small></li>\r\n                    <li> /etc/httpd/modules <small> 아파치 모듈 설치 디렉토리 </small></li>\r\n                    <li> /etc/httpd/logs <small> 로그 파일 저장 위치 </small></li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> httpd 서버 로그 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> cat /var/log/httpd/error_log\r\n                      <span className='sblock'>\r\n                        <li> <span className='sstitle'> client denied by server configuration </span> </li>\r\n                        <li> 폴더 경로가 잘 잡혔는지 확인 </li>\r\n                        <li>  </li>\r\n                      </span>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ ftp 서버 <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> ftp 서버 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h3> CentOS </h3>\r\n                      <li> yum -y install vsftpd </li>\r\n                      <li> systemctl enable vsftpd <small> 시스템을 꺼도 작동되게함 </small> </li>\r\n                      <li> systemctl restart vsftpd <small>  </small> </li>\r\n                      <li> netstat -tnlp 로 21번포트가 존재하는지 검색 <small>  </small> </li>\r\n                      <li> firewall-cmd --permanent --add-port=21/tcp </li>\r\n                      <li> firewall-cmd --permanent --add-port=20/tcp </li>\r\n                      <li> firewall-cmd --reload </li>\r\n                      <li> vi /etc/vsftpd/ftpusers에서 root를 지움 (이곳에 등록된 유저는 패스워드를 확인후 접근 불가) </li>\r\n                      <li> vi /etc/vsftpd/user_list에서 root를 지움 (이곳에 등록된 유저는 접속 불가) </li>\r\n                      <li> 구글에 winscp 검색 다운로드 , ftp 서버에 접속하는 프로그램  </li>\r\n                      <li> winscp 다음 누르다가 FTP로 변경, 호스트이름은 IP주소 , root , 본인비번 입력 </li>\r\n                      <li> 고급 - 연결 - 패시브모드 체크 해제  </li>\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> Ubuntu </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ dns 서버 <small> 도메인을 IP주소로 바꿔주는 서버 </small>\r\n                  <a name=\"dns 서버\" style={{ visibility: \"hidden\" }}> dns 서버 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 설명 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> 기본포트 53번 포트 </li>\r\n                    <li> zone 영역 :\r\n                      <li> 정방향(IP주소를 문자로)과 역방향(문자를 IP주소로)이 있다. </li>\r\n                      <li> <h3> zone 파일의 구조 </h3> <small> 최초 TTL(Time To Live) 값 설정 이후 레코드가 나뉨 </small>\r\n                        <li> <h4> SOA 레코드  </h4>\r\n                          <li> nameserver = dns서버의호스트명.도메인명.루트도메인. (ex host.test.com ) </li>\r\n                          <li> contact_email_address = 계정.도메인.루트도메인. (ex root.test.com) </li>\r\n                          <li> serial = 0 , YYYYMMDDNN형식으로 기입(NN은 수정횟수) </li>\r\n                          <li> refresh = 1D , 2차 DNS서버가 정보를 업데이트 하는 주기(초단위) </li>\r\n                          <li> retry = 1H , 2차 DNS서버가 주 DNS서버로 접속 실패했을 경우 재시도하는 주기 </li>\r\n                          <li> expire = 1W , 2차 DNS서버가 주 DNS서버로 접속 실패했을 경우 만기되는 시간 </li>\r\n                          <li> minimum = 3H , zone파일 정보의 최소 보관 시간 설정 </li>\r\n                        </li>\r\n                        <li> <h4> 자원 레코드 </h4>\r\n                          <li> IN : 네트워킹 주소 클래스 </li>\r\n                          <li> NS : 도메인의 네임서버 정보 </li>\r\n                          <li> MX : 도메인의 Mail 서버로, MX 다음 숫자는 메일처리의 우선순위를 명시한 것. </li>\r\n                          <li> A : 해당 도메인의 실제 IP주소(IPv4)를 설정 하는 레코드 </li>\r\n                          <li> CNAME : 별칭으로 부여된 name (서브도메인을 사용하기 위해 지정) </li>\r\n                          <li> HINFO : 호스트의 CPU정보와 운영체제 정보 </li>\r\n                          <li> MINFO : 메일박스와 메일 리스트 정보  </li>\r\n                          <li> PTR : IP주소에 대한 호스트명 </li>\r\n                          <li> TXT : 호스트에 대한 텍스트 정보 </li>\r\n                          <li> UINFO : 사용자 정보 </li>\r\n                          <li> ANY : 호스트에 관련된 모든 레코드들의 정보 </li>\r\n                        </li>\r\n                      </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> 리졸빙(resolving) : 데이터베이스를 검색하는 역할 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h3> CentOS - bind(DNS서버 프로그램) </h3>\r\n                      <li> yum -y install bind bind-chroot </li>\r\n                      <li> vi /etc/named.conf\r\n                        <span className=\"sblock\">\r\n                          <li> options\r\n                            <li> listen-on port 53 {'{ any; }'} , #누구든 접속할 수 있게 허용(default=127.0.0.1) </li>\r\n                            <li> listen-on-v6 port 53 {'{ none; }'} , #ipv6를 사용 유무(default=;;1) </li>\r\n                            <li> directory  , #zone파일의 위치 </li>\r\n                            <li> dump-file , #named정보가 갱신될 때 dump파일에 저장이 되므로 dump파일의 생성위치 및 파일명 </li>\r\n                            <li> statistics-file , # 네임서버의 통계파일의 생성위치 및 파일명 </li>\r\n                            <li> memstatistics-file , # 네임서버의 메모리 통계파일의 생성위치 및 파일명 </li>\r\n                            <li> allow-query {' {none;} '} , #질의문 허용 유무(default=localhost) </li>\r\n                            <li> datasize 512M; , # DNS 관련 정보를 캐싱하는데 사용하는 메모리 제한 </li>\r\n                            <li> recursion yes; , # 하위도메인 검색 가능 유무 </li>\r\n                            {/*  */}\r\n                            <li> zone \"test.com\" IN {'{'}  <small>  # 정방향 </small>\r\n                              <li> type [master | slave | hint ]; , # master는 본인이 관리,  </li>\r\n                              <li> file \"zone파일명.zone\"; </li>\r\n                              <li> allow-update {'{none;}'}; </li>\r\n                              <li> allow-transfer {'{192.168.10.81;}'}; ,# 서브 도메인 서버를 사용할 경우 </li>\r\n                            </li>\r\n                            <li> {'};'} </li>\r\n                            <li> zone \"0.168.80.in-addr.arpa\" IN {'{'} <small>  # 역방향 </small>\r\n                              <li> type [master | slave | hint ]; , # master는 본인이 관리,  </li>\r\n                              <li> file \"zone파일명.rev.zone\"; </li>\r\n                              <li> allow-update {'{none;}'}; </li>\r\n                            </li>\r\n                            <li> {'};'} </li>\r\n                            <li> zone \"test.com\" IN {'{'} <small>  # 서브도메인에다가 정의 </small>\r\n                              <li> type slave;  </li>\r\n                              <li> file \"slaves/test.zone\"; </li>\r\n                              <li> masters{'{192.168.10.80;}'}; </li>\r\n                              <li> masterfile-format text; </li>\r\n                            </li>\r\n                            <li> {'};'} </li>\r\n                            <small> zone영역은 include로 다른 파일에서 관리할 수도 있다. </small>\r\n                          </li>\r\n                        </span>\r\n                      </li>\r\n                      <li> cd /var/named </li>\r\n                      <li> vi zone파일명.zone ( ex test.zone , /etc/named.conf 에서 생성한 zone파일명을 사용해야 한다. )\r\n                        <span className=\"sblock\">\r\n                          <li>\r\n                            <span> $TTL </span>\r\n                            <span className=\"tab_4\"> 3H </span>\r\n                          </li>\r\n                          <li>\r\n                            <span> @ </span>\r\n                            <span className=\"tab_4\"> SOA </span>\r\n                            <span className=\"tab_4\"> @ </span>\r\n                            <span className=\"tab_4\"> root. </span>\r\n                            <span className=\"tab_4\"> (20201111 1D 1H 1W 1H) <small> root는 파일을만든사용자이름,\r\n                              뒤에는 생성 날짜 </small></span>\r\n                          </li>\r\n                          <li>\r\n                            <span> 공백 </span>\r\n                            <span className=\"tab_4\"> IN </span>\r\n                            <span className=\"tab_4\"> NS </span>\r\n                            <span className=\"tab_4\"> @ <small> 메인 DNS서버의 있다고 알려줌? , NS는 네임서버 </small></span>\r\n                          </li>\r\n                          <li>\r\n                            <span> 공백 </span>\r\n                            <span className=\"tab_4\"> IN </span>\r\n                            <span className=\"tab_4\"> NS </span>\r\n                            <span className=\"tab_4\"> ns2. <small> 서브 DNS서버의 있다고 알려줌? </small></span>\r\n                          </li>\r\n                          <li>\r\n                            <span> 공백 </span>\r\n                            <span className=\"tab_4\"> IN </span>\r\n                            <span className=\"tab_4\"> A </span>\r\n                            <span className=\"tab_4\"> 192.168.10.80 <small> DNS서버의 IP주소가 뭔지를 알려줌 , A는 주소? </small> </span>\r\n                          </li>\r\n                          <li>\r\n                            <span> 공백 </span>\r\n                            <span className=\"tab_4\"> ns </span>\r\n                            <span className=\"tab_4\"> A </span>\r\n                            <span className=\"tab_4\"> 192.168.10.80 <small> 메인 DNS서버의 IP주소가 뭔지를 알려줌 </small> </span>\r\n                          </li>\r\n                          <li>\r\n                            <span> 공백 </span>\r\n                            <span className=\"tab_4\"> ns2 </span>\r\n                            <span className=\"tab_4\"> A </span>\r\n                            <span className=\"tab_4\"> 192.168.10.81 <small> 서브 DNS서버의 IP주소가 뭔지를 알려줌 </small> </span>\r\n                          </li>\r\n                          <li>\r\n                            <span> 호스트주소 ( ex www , ftp 등) </span>\r\n                            <span className=\"tab_4\"> IN (파일형식?) </span>\r\n                            <span className=\"tab_4\"> A </span>\r\n                            <span className=\"tab_4\"> 알려줄 IP 주소 (ex 192.168.10.80) <small> 호스트.test.com 파일의 IP주소를 알려줌 </small> </span>\r\n                          </li>\r\n                          <li>\r\n                            <span> www </span>\r\n                            <span className=\"tab_4\"> IN </span>\r\n                            <span className=\"tab_4\"> A </span>\r\n                            <span className=\"tab_4\"> 192.168.10.80 <small> www.test.com 파일의 IP주소를 알려줌 </small> </span>\r\n                          </li>\r\n                        </span>\r\n                      </li>\r\n                      <li> named-checkconf /etc/named.conf </li>\r\n                      <li> named-checkconf /etc/named.rfc1912.zones </li>\r\n                      <li> named-checkzone zone파일명.com zone파일명.zone (com,zone순서대로 안하면 에러) </li>\r\n                      <li> <small> 위에 코드가 되지 않는다면 아래와 같이 입력 </small>\r\n                        <span className=\"sblock\">\r\n                          <li> cp /var/named/zone파일명.zone /var/named/chroot/var/named/ </li>\r\n                          <li> named-checkzone zone파일명.com zone파일명.zone (com,zone순서대로 안하면 에러) </li>\r\n                        </span>\r\n                      </li>\r\n                      {/*<li> named-checkzone zone파일명.rev.zone </li>*/}\r\n                      <li> 실행 - ncpa.cpl - 사용하는 네트워크(이더넷이나 와이파이) 우측 클릭 후 속성 - 2개 (인터넷프로토콜버전4,VMwareNetwork Adapter VMnet8)\r\n                        속성 -  기본설정 DNS 서버의 포트를 DNS설정(192.168.10.80)으로 전환 ,   </li>\r\n                      <li> systemctl enabled named </li>\r\n                      <li> systemctl restart named </li>\r\n                      <li> systemctl stop firewalld </li>\r\n                      {/*<li> vim /etc/resolv.conf <small> DNS 서버의 주소 IP를 설정 </small> </li>*/}\r\n                    </li>\r\n                    <li> <h3> CentOS</h3>\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> Ubuntu </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> dns 서버 디렉토리 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h3> bind(DNS서버 프로그램) </h3>\r\n                      <li> /etc/hosts </li>\r\n                      <li> /etc/resolv.conf </li>\r\n                      <li> /etc/named.conf : 환경설정 담당 파일 , 서버에서 사용하는 zone파일을 지정 </li>\r\n                      <li> /etc/named.rfc1912.zones : 사용자의 도메인 zone이 참조 </li>\r\n                      <li> /var/named : 루트도메인서버 정보가 담긴 파일(named.ca) 과 사용자가 선언하는 zone파일 등이 위치 </li>\r\n                      <li> /etc/rc.d/init.d/named : DNS서버 가동을 위한 스크립트, named 데몬을 제어 </li>\r\n                      <li> /var/named/named.empty : 도메인 데이터베이스 파일 양식 </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> dns 보안 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h3> CentOS , zone파일 암호화키 생성 </h3>\r\n                      <li> /var/named/keys 폴더만들기 </li>\r\n                      <li> dnssec-keygen -a NSEC3RSASHA1 - r /dev/urandom -b 1024 -n ZONE test.com </li>\r\n                      <li> dnssec-keygen -a NSEC3RSASHA1 - r /dev/urandom -b 2048 -n ZONE -f KSK test.com </li>\r\n                      <li> DNS서버의 /var/named/test.zone 파일 내부에 아래 내용 추가\r\n                        <li> $INCLUDE /var/named/keys/test.com. +123+12345. key , # 공개키 붙여넣기(경로만 절대경로)   </li>\r\n                        <li> $INCLUDE /var/named/keys/test.com. +123+12345. key , # 공개키 붙여넣기(경로만 절대경로)  </li>\r\n                      </li>\r\n                      <li> dnssec-signzone -S -K /var/named/keys/ -3 96e920 -o test.com. /var/named/test.zone  </li>\r\n                      <li> /var/named/named.conf 에 가서 존 부분을 보면\r\n                        <li> file \"test.zone\"; 이 부분을 file \"test.zone.signed\"; 로 변경 </li>\r\n                        <li>  </li>\r\n                      </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ ssh 서버 <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> ssh 서버 설명 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> 포트 22번 </li>\r\n                    <li> 암호화 방식 사용(텔넷 방식보다 좋은 이유) </li>\r\n                    <li> 원격접속 서비스 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> ssh 서버 설치</span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h3> CentOS </h3>\r\n                      <li> 0. rpm -qa openssh-server # ssh 서버 설치 확인</li>\r\n                      <li> 0. systemctl status sshd  # sshd 데몬이 동작중인지 확인 </li>\r\n                      <li> 1. yum -y install openssh-server openssh-clients openssh-askpass </li>\r\n                      <li> 2. firewall-cmd --list-services # 방화벽 허용 리스트</li>\r\n                      <li> 3. firewall-cmd --permanent --zone=public --add-port=22/tcp # 22번 포트 방화벽 해제 </li>\r\n                      <li> 3. firewall-cmd --reload </li>\r\n                      <li> 4. systemctl start sshd </li>\r\n                      <li> 5. systemctl enable sshd </li>\r\n                      <li> 6. netstat -ntlp | grep sshd </li>\r\n                      <li> 7. service sshd status </li>\r\n                      <li> 8. vim /etc/ssh/sshd_config\r\n                        <li> Port 22 # 이 부분 주석해제 , 17번째 줄 </li>\r\n                      </li>\r\n                      <li> 9. 끝 </li>\r\n                    </li>\r\n                    <li> <h3> Ubuntu (미완성) </h3>\r\n                      <li> 0. dpkg --get-selections | grep ssh # ssh 서버 설치 확인 </li>\r\n                      <li> 0. service ssh status # sshd 데몬이 동작중인지 확인  </li>\r\n                      <li> 추가작성 필요~~ </li>\r\n                      <li> ufw allow 22/tcp  # 방화벽 허용 </li>\r\n                      <li> service ssh restart </li>\r\n                      <li> service ssh status </li>\r\n                      <li> netstat -ntlp | grep sshd </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3>  </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> ssh 서버 디렉토리 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> vim /etc/ssh/sshd_config  # ssh 설정 파일\r\n                      <li> Port 포트번호 # 포트번호 변경시 사용 </li>\r\n                      <li> PermitRootLogin yes # 루트 계정 로그인 허용 </li>\r\n                      <li> ListenAddress 0.0.0.0 # 모든 네트워크 접속 허용(그냥 주석으로 놔두기) </li>\r\n                      <li> ListenAddress IP #  네트워크 접속 허용(그냥 주석으로 놔두기) </li>\r\n                      <li> HostKey ~~~ # 호스트를 구분할 때 사용되는 공개키 </li>\r\n                      <li> UsePrivilegeSeparation yes # 권한 분리 설정 여부 </li>\r\n                      <li> LoginGraceTime  # 로그인 제한 시간 기본 120 </li>\r\n                      <li> PubkeyAuthentication yes # 공개키 사용 옵션 </li>\r\n                      <li> AuthorizedKeysFile # 공개키 사용시 저장 위치 </li>\r\n                      <li> PermitEmptyPasswords no # 패스워드 인증 시 비어있는 패스워드 허용 여부 </li>\r\n                      <li> PasswordAuthentication yes  #패스워드 인증 사용 여부 </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ raid 서버 <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> raid 서버 설명 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> 디스크의 용량이 부족할 때 데이터 손실 없이 증가 시킬 때 사용 </li>\r\n                    <li> 여러개의 디스크를 배열하여 속도의 증대, 안정성의 증대, 효율성, 가용성의 증대를 하는데 사용 </li>\r\n                    <li> 비용 절감 (하나의 좋은 하드디스크보다 여러개의 싼 디스크를 이어서 사용하면 좋음)  </li>\r\n                    <li> 하드웨어 RAID (전문업체에서 만든 장비, 안정적이지만 비쌈)  </li>\r\n                    <li> 소프트웨어 RAID (운영체제를 이용해서 사용하므로 저가) </li>\r\n                    <li> 관련 용어:\r\n                      <li> 패리티: </li>\r\n                      <li> 마운트: 리눅스에서는 하드디스크나 USB를 인식하게 하기위해서는 마운트라는 작업을 해야함 </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> raid의 종류 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> 단순 불륨 (디스크 1개) </li>\r\n                    <li> Linear RAID (컴퓨터처럼 하드, SSD 장착하는 것처럼 순서대로, 2개이상) </li>\r\n                    <li> RAID0: 2개 이상 동시 저장 하는 방식, Stripping 방식, 공간(N)\r\n                      <li> 1개의 데이터를 여러개의 공간에 분산해서 저장하는 방식 </li>\r\n                      <li> 저장 속도가 빠른다.하지만 하나가 고장나면 원본 데이터의 손실이 발생하여 신뢰성이 적다.</li>\r\n                    </li>\r\n                    <li> RAID1: 2개 동시저장 느림, 결함 허용 제공, Mirroring 방식, 공간(N/2)\r\n                      <li> 1개의 데이터를 여러개의 공간에 복사해서 각각 저장 </li>\r\n                      <li> 데이터의 저장 용량이 2배 필요, 하나가 고장나도 원본데이터를 가지고 있어 신뢰성이 높음 </li>\r\n                      <li> 저장속도는 똑같음, 즉 데이터의 손실을 방지할 경우에 사용 </li>\r\n                    </li>\r\n                    <li> RAID5: 3개 이상, 결함 허용 제공, 공간 효율 좋음, 패리티 정보 사용, 공간(N-1)\r\n                      <li> 1개의 디스크 공간에는 나머지 다른 디스크에서 분산된 패리티 데이터를 조합한 값을 저장  </li>\r\n                      <li> 4개의 공간이 있다면 1 + 1 + 0 +?와 같이 이진수로 나누어서 데이터를 넣어서 총합이 짝수가 나오게 함\r\n                        그러므로?에는 0이 들어감  </li>\r\n                      <li> 위와 같이 조합을 하면 1개의 디스크가 고장나도 값을 유추할 수 있지만 2개가 고장나면 복구 불가 </li>\r\n                      <li> 속도는 raid1 {'<'} raid5 {'<'} raid0, 신뢰성 raid0 {'<'} raid5 {'<'} raid1 </li>\r\n                    </li>\r\n                    <li> RAID6: 4개 이상, RAID5의 개선, 결함 허용 제공, 중복 패리티 정보 사용, 공간(N-2)\r\n                      <li> 홀수 패리티와 짝수 패리티 2개의 공간을 이용해서 신뢰성을 보장하는 방법 </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> raid 서버 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h3> CentOS </h3>\r\n                      <li> CentOS 설정 하는 부분에서 ram은 2gb에서 3gb로 변경 </li>\r\n                      <li> Virtual Machine Settings에서 하드디스크(SCSI)가 1개 있으므로 아래\r\n                        add버튼 클릭해서 추가 - 하드디스크(SCSI) 5gb, Store virtual disk as a single file로 7개 추가하기  </li> <br />\r\n                      <li> ls -la /dev/sd* # 디스크 목록 보기 </li>\r\n                      <li> fdisk -l | more # 현재 디스크 및 파티션 확인 명령어 </li>\r\n                      <li> fdisk /dev/sdb # sdb디스크 설정하기\r\n                        <li> m: 명령어들의 목록을 보여줌 </li>\r\n                        <li> p: 파티션을 보여줌 </li>\r\n                        <li> n: 파티션을 생성 (p: 주 영역, e: 보조 영역), 섹터를 작게하면 신뢰성이 떨어짐\r\n                          섹터하나가 고장나면 전체가 고장 </li>\r\n                        <li> t: 파일 시스템을 변경 (l 을 입력해서 hex code보기), rd: (rinux raid auto) </li>\r\n                        <li> w: 현재 까지 설정한 내용을 저장 </li>\r\n                      </li>\r\n                      <li> sfdisk--help | grep '\\-d' </li>\r\n                      <li> sfdisk -d /dev/sdb </li>\r\n                      <li> sfdisk -d /dev/sdb {'>'} /tmp/sdb.tmp # 설정 파일 복사 </li>\r\n                      <li> sfdisk--force /dev/sdc {'<'} /tmp/sdb.dmp # sdc에 덮어쓰기 </li>\r\n                      <li> sfdisk--force /dev/sdd {'<'} /tmp/sdb.dmp # sdd에 덮어쓰기 </li>\r\n                      <li> sfdisk--force /dev/sde {'<'} /tmp/sdb.dmp # sde에 덮어쓰기 </li>\r\n                      <li> sfdisk--force /dev/sdf {'<'} /tmp/sdb.dmp # sdf에 덮어쓰기 </li>\r\n                      <li> sfdisk--force /dev/sdg {'<'} /tmp/sdb.dmp # sdg에 덮어쓰기 </li>\r\n                      <li> sfdisk--force /dev/sdh {'<'} /tmp/sdb.dmp # sdh에 덮어쓰기 </li> <br />\r\n\r\n                      <li> <h4> 레이드0 방식 </h4> </li>\r\n                      <li> mdadm --create /dev/md0 --level=0 --raid-devices=2 /dev/sdb1 /dev/sdc1 #\r\n                        레이드 공간을 2개를 사용, level: 레이드방식설정 </li>\r\n                      <li> mdadm--detail /dev/md0 # 만들어진 레이드공간을 본다</li>\r\n                      <li> cat /proc/mdstat # 레이드들에 대한 정보를 볼 수 있음 </li>\r\n                      <li> mkfs.ext4 /dev/md0 # 새로 만들어진 공간에 대해서도 리눅스가 아는 파일포맷 설정 </li>\r\n                      <li> mkdir /data1 </li>\r\n                      <li> mount /dev/md0 /data1 </li>\r\n                      <li> df -Th # 마운트가 된 리스트를 확인 </li> <br />\r\n                      <li> <h4> 레이드1 방식 </h4> </li>\r\n                      <li> mdadm --create /dev/md1 --level=1 --raid-devices=2 /dev/sdd1 /dev/sde1\r\n                        <li> 미러링을 할것이냐고 물음: Y </li>\r\n                      </li>\r\n                      <li> mkfs.ext4 /dev/md1 </li>\r\n                      <li> mkdir /data2 </li>\r\n                      <li> mount /dev/md1 /data2 </li> <br />\r\n\r\n                      <li> <h4> 레이드5 방식 </h4> </li>\r\n                      <li> mdadm --create /dev/md5 --level=5 --raid-devices=3 /dev/sdf1 /dev/sdg1 /dev/sdh1 </li>\r\n                      <li> mdadm --detail /dev/md5 # Consistency Policy 100% 가 된 후에 사용가능 </li>\r\n                      <li> mkfs.ext4 /dev/md5 </li>\r\n                      <li> mkdir /data3 </li>\r\n                      <li> mount /dev/md5 /data3 </li> <br />\r\n\r\n                      <li> <h4> 레이드6 방식 </h4> </li>\r\n                      <li> mdadm --create /dev/md6 --level=6 --raid-devices=4 /dev/sdb1 /dev/sdc1 /dev/sdd1 /dev/sde1 </li>\r\n                      <li> mdadm --detail /dev/md6 # Consistency Policy 100% 가 된 후에 사용가능 </li>\r\n                      <li> mkfs.ext4 /dev/md6 </li>\r\n                      <li> mkdir /data6 </li>\r\n                      <li> mount /dev/md6 /data6 </li> <br />\r\n\r\n                      <li> <h4> 레이드(1+0) 방식 </h4> </li>\r\n                      <li> mdadm --create /dev/md1 --level=1 --raid-devices=2 /dev/sdb1 /dev/sdc1 </li>\r\n                      <li> mdadm --create /dev/md2 --level=1 --raid-devices=2 /dev/sdd1 /dev/sde1 </li>\r\n                      <li> mdadm --detail /dev/md1 # Consistency Policy 100% 가 된 후에 사용가능 </li>\r\n                      <li> mdadm --detail /dev/md2 # Consistency Policy 100% 가 된 후에 사용가능 </li>\r\n                      <li> cat /proc/mdstat # 레이드가 묶인것을 확인 </li>\r\n                      <li> mdadm--create /dev/md10 --level=0 --raid-devices=2 /dev/md1 /dev/md2 </li>\r\n                      <li> mkfs.ext4 /dev/md10 </li>\r\n                      <li> mkdir /data10 </li> <br />\r\n                      <li> mount /dev/md1 #이거 왜하는거지? </li> <br />\r\n                      <li> mount /dev/md10 /data10 </li> <br />\r\n\r\n                      <li> 리눅스에서는 재부팅을 하면 마운트가 자동으로 풀려서 오토마운트라는 것을 사용해야됨 </li>\r\n                      <li> /etc/fstab 라는 곳을 보고 리눅스가 자동으로 마운트를 해준다.</li>\r\n                      <li> vi /etc/fstab\r\n                        <li> /dev/md0 /data1 ext4 defaults 0 0 # 위에 줄여 적혀있는 내용에 탭 간격으로 구분해주기!! </li>\r\n                        <li> /dev/md1 /data2 ext4 defaults 0 0  </li>\r\n                        <li> /dev/md5 /data3 ext4 defaults 0 0  </li>\r\n                      </li>\r\n                      <li> 이제부터 잘못하면 부팅이 안되므로 주의 </li>\r\n                      <li> mount -a # 입력해서 뭐가 나오면 잘못됨 그러므로 수정필요 </li>\r\n                      {/*  */}\r\n                      <li> cp /boot/vmlinuz ~~~~ /data1 </li>\r\n                      <li> cp /boot/vmlinuz ~~~~ /data2 </li>\r\n                      <li> cp /boot/vmlinuz ~~~~ /data3 </li>\r\n                      <li> shutdown -h now  </li>\r\n                      <li> 기존에 있는 하드디스크 중에 6번,4번,2번 하드디스크 삭제 </li>\r\n                      <li> 그리고 부팅하면 부팅이 안된다 (설정해놓은 마운트가 실행되야 되는데 망가져서 안되기 때문) </li>\r\n                      <li> 그러므로 실행을 하고 검은 화면에서 e 버튼을 누르면 안전모드로 부팅 가능 </li>\r\n                      <li> centos-root r\\o rd.lvm 부분을 centos-root r\\w rd.lvm으로 변경 </li>\r\n                      <li> swap rhgb quiet 부분을 swap init=\\bin\\bash 으로 변경 </li>\r\n                      <li> ctrl + x </li>\r\n                      <li> vi /etc/fastab\r\n                        <li> 마운트했던 부분들을 모두 #으로 주석처리하고 강제로 재부팅시키기(명령어가 안먹힘) </li>\r\n                      </li>\r\n                      <li> ls -la /dev/sd*  # 하드디스크를 순차적으로 인식하므로 sdh가 sde가 되어있다.</li>\r\n                      <li> cat /proc/mdstat </li>\r\n                      <li> madam--detail /dev/md0 </li>\r\n                      <li> madam--detail /dev/md1 </li>\r\n                      <li> madam--detail /dev/md5 </li>\r\n                      <li> madam--run /dev/md0 # 레이드0은 고장이나서 사용할 수 없다고 나옴 </li>\r\n                      <li> madam--run /dev/md1 </li>\r\n                      <li> madam--run /dev/md5 </li>\r\n                      <li> 다시 삭제한 만큼의 수의 디스크를 만든다.</li>\r\n                      <li> sfdisk--force /dev/sdb {'<'} /tmp/sdb.dmp </li>\r\n                      <li> sfdisk--force /dev/sdd {'<'} /tmp/sdb.dmp </li>\r\n                      <li> sfdisk--force /dev/sdf {'<'} /tmp/sdb.dmp </li>\r\n                      <li> ls -la /dev/sd* </li>\r\n                      <li> mdadm /dev/md1--add /dev/sdb1 </li>\r\n                      <li> madam--detail /dev/md1 # 100% 될 때 까지 확인 </li>\r\n                      <li> mdadm /dev/md5--add /dev/sdf1 </li>\r\n                      <li> madam--detail /dev/md5 # 100% 될 때 까지 확인 </li>\r\n                      <li> vi /etc/fastab\r\n                        <li> md1,md5에 주석처리를 한것을 해제 </li>\r\n                      </li>\r\n                      <li> mount -a # 에러가 없다면 성공 </li>\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                      <li>  </li> <br />\r\n                    </li>\r\n                    <li> <h3> Ubuntu </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3>  </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> raid 서버 해제 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h3> CentOS </h3>\r\n                      <li> cd / </li>\r\n                      <li> vi /etc/fstab # 마운트된것을 주석처리(해제가 되는것은 아님) </li>\r\n                      <li> mount -a  </li>\r\n                      <li> df -Th </li>\r\n                      <li> umount /dev/md1 # 마운트 해제</li>\r\n                      <li> umount /dev/md5 </li>\r\n                      <li> df -Th </li>\r\n                      <li> mdadm --misc --stop /dev/md0 # 강제적으로 동기화 중지 </li>\r\n                      <li> mdadm --stop /dev/md1 # 동기화 중지 </li>\r\n                      <li> mdadm --stop /dev/md5 </li>\r\n                      <li> fdisk -l | grep -v sda | grep sd </li>\r\n                      <li> cat /proc/mdstat # 현재 레이드를 볼 수 있음 </li>\r\n                      <li> mdadm --zero-superblock /dev/sdb1 </li>\r\n                      <li> mdadm --zero-superblock /dev/sdc1 </li>\r\n                      <li> mdadm --zero-superblock /dev/sdd1 </li>\r\n                      <li> mdadm --zero-superblock /dev/sde1 </li>\r\n                      <li> mdadm --zero-superblock /dev/sdf1 </li>\r\n                      <li> mdadm --zero-superblock /dev/sdg1 </li>\r\n                      <li> mdadm --zero-superblock /dev/sdh1 </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> Ubuntu </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> raid 서버 디렉토리 </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ mail 서버 <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 메일 서버 설명 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> SMTP(25번 포트) 프로토콜을 이용하여 메일서버로 보냄 </li>\r\n                    <li> POP3 , IMAP 프로토콜을 이용하여 메일서버에서 받음 </li>\r\n                    <li> MUA(Mail User Agent) : 유저 </li>\r\n                    <li> MTA(Mail Transfer Agent) : 메일 서버 </li>\r\n                    <li> MDA(Mail Delivery Agent) 메일 송신,수신 프로그램? </li>\r\n                    <li> MRA(Mail Retrieval Agent) : 유저에게 메일을 전달해주는 프로그램(dovecot) </li>\r\n                    <li> 메일 박스 : 메일을 보관하는 공간 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> 메일 서버 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <h4> CentOS - Server (DNS서버 설정 필요) </h4>\r\n                      <span className=\"sblock\">\r\n                        <li> cd /var/named </li>\r\n                        <li> DNS 서버 설정에서 vi test.zone\r\n                          <li> $TTL 3H  </li>\r\n                          <li> 공백 @ SOA @ root. (20201111 1D 1H 1W 1H)  </li>\r\n                          <li> 공백 IN NS @  </li>\r\n                          <li> 공백 IN A 192.168.10.80  </li>\r\n                          <li> 공백 IN MX 10 (탭여백) mail.test.com.  </li>\r\n                          <li> mail IN A 192.168.10.80 </li>\r\n                        </li>\r\n                        <li> named-checkzone test.com test.zone </li>\r\n                        <li> cp test.zone linux.zone </li>\r\n                        <li> vi linux.zone\r\n                          <li> $TTL 3H  </li>\r\n                          <li> 공백 @ SOA @ root. (20201111 1D 1H 1W 1H)  </li>\r\n                          <li> 공백 IN NS @  </li>\r\n                          <li> 공백 IN A 192.168.10.80  </li>\r\n                          <li> 공백 IN MX 10 (탭여백) mail.linux.com.  </li>\r\n                          <li> mail IN A 192.168.10.111 # 클라이언트의 IP 주소를 적어야 함</li>\r\n                        </li> <br />\r\n                        <li> <h4> 메일 서버 설치 </h4> </li>\r\n                        <span className=\"mblock\">\r\n                          <li> yum -y install sendmail sendmail-cf dovecot </li> <br />\r\n                          <li> vi /etc/mail/sendmail.cf\r\n                            <li> Cwtest.com # 85번 째 줄 변경 </li>\r\n                            <li> O DaemonPortOptions=Port=smtp, Name=MTA # 264번째 addr 지워주기  </li>\r\n                          </li> <br />\r\n                          <li> systemctl restart sendmail </li> <br />\r\n                          <li> vi /etc/mail/access #접근 권한 설정\r\n                            <li> ssssksss.com                            RELAY </li>\r\n                            <li> linux.com                               RELAY </li>\r\n                            <li> 192.168.10                             RELAY </li>\r\n                          </li> <br />\r\n                          <li> {' makemap hash /etc/mail/access < /etc/mail/access'} # DB로 만들어서 사용해야함 </li>\r\n                          <li> ls -la /etc/mail </li>\r\n                          <li> cat /etc/mail/access.db # 새로 생성이 됨 </li>\r\n                          <li> strings /etc/mail/access.db # DB파일로 생성이 된것을 볼 수 있음</li> <br />\r\n                          <li> vi /etc/dovecot/conf.d/10-ssl.conf # 송수신하는 설정파일\r\n                            <li> ssl = required를 ssl = yes 로 변경 # 8번째 줄</li>\r\n                          </li> <br />\r\n                          <li> vi /etc/dovecot/conf.d/10-mail.conf\r\n                            <li> mail_location = mbox:~/mail:INBOX=/var/mail/%u # 25줄 주석해제, 메일이 저장되는 위치 </li>\r\n                            <li> mail_access_groups = mail # 121번째 줄 주석해제 및 수정 </li>\r\n                            <li> lock_method = fcntl # 166번째 줄 주석해제 </li>\r\n                          </li> <br />\r\n                          <li> vi /etc/dovecot/conf.d/10-auth.conf\r\n                            <li> disable_plaintext_auth = no # 평문으로 보내지 못하게 하는 설정 , SSH설정이 복잡해서 일단 넘어감 </li>\r\n                          </li> <br />\r\n                          <li> vi /etc/hostname\r\n                            <li> localhost.localdomain 삭제하고 mail.test.com 추가 </li>\r\n                          </li> <br />\r\n                          <li> vi /etc/mail/local-host-names\r\n                            <li> 주석내용 삭제하고 mail.test.com 추가 </li>\r\n                          </li> <br />\r\n                          <li> vi /etc/sysconfig/network\r\n                            <li> HOSTNAME=mail.test.com </li>\r\n                          </li> <br />\r\n                          <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33  # 네트워크 설정 파일\r\n                            <li> DNS1=192.168.10.80 # 본인의 IP주소로 변경 </li>\r\n                          </li> <br />\r\n                          <li> useradd service </li>\r\n                          <li> echo -e \"1234\\n1234\" | passwd service </li>\r\n                          <li> systemctl restart named </li>\r\n                          <li> systemctl restart sendmail </li>\r\n                          <li> systemctl restart dovecot </li>\r\n                          <li> systemctl enable named </li>\r\n                          <li> systemctl enable sendmail </li>\r\n                          <li> systemctl enable dovecot </li>\r\n                          <li> systemctl disable firewalld # 포트를 개방할 것이 너무 많아서 그냥 중단 </li>\r\n                          <li> setenforce 0  # se리눅스 끄기</li>\r\n                          <li> systemctl restart network </li>\r\n                          <li> cat /etc/resolv.conf # 본인의 네임서버  확인 </li>\r\n                          <li> 끝 , 이제 클라이언트 설정 </li> <br />\r\n                        </span>\r\n                      </span>\r\n                    </li>\r\n                    <li> <h4> CentOS - Client  </h4>\r\n                      <span className=\"sblock\">\r\n                        <li> <h4> 메일 서버 설치 </h4> </li>\r\n                        <li> yum -y install thunderbird </li>\r\n                        <li> yum -y install sendmail sendmail-cf dovecot </li> <br />\r\n                        <li> vi /etc/mail/sendmail.cf\r\n                          <li> Cwlinux.com # 85번 째 줄 변경 </li>\r\n                          <li> O DaemonPortOptions=Port=smtp, Name=MTA # 264번째 addr 지워주기 </li>\r\n                        </li> <br />\r\n                        <li> vi /etc/mail/access\r\n                          <li> test.com RELAY </li>\r\n                          <li> linux.com RELAY </li>\r\n                          <li> 192.168.10 RELAY </li>\r\n                        </li> <br />\r\n                        <li> {' makemap hash /etc/mail/access < /etc/mail/access '} </li>\r\n                        <li> strings /etc/mail/access.db </li>\r\n                        <li> vi /etc/dovecot/conf.d/10-ssl.conf # 송수신하는 설정파일\r\n                          <li> ssl = required를 ssl = yes 로 변경 # 8번째 줄</li>\r\n                        </li> <br />\r\n                        <li> vi /etc/dovecot/conf.d/10-mail.conf\r\n                          <li> mail_location = mbox:~/mail:INBOX=/var/mail/%u # 25줄 주석해제, 메일이 저장되는 위치 </li>\r\n                          <li> mail_access_groups = mail # 121번째 줄 주석해제 및 수정 </li>\r\n                          <li> lock_method = fcntl # 166번째 줄 주석해제 </li>\r\n                        </li> <br />\r\n                        <li> vi /etc/dovecot/conf.d/10-auth.conf\r\n                          <li> disable_plaintext_auth = no # 10번째 줄 평문으로 보내지 못하게 하는 설정 , SSH설정이 복잡해서 일단 넘어감 </li>\r\n                        </li> <br />\r\n                        <li> vi /etc/hostname\r\n                          <li> localhost.localdomain 삭제하고 mail.linux.com 추가 </li>\r\n                        </li> <br />\r\n                        <li> vi /etc/mail/local-host-names\r\n                          <li> 주석내용 삭제하고 mail.linux.com 추가 </li>\r\n                        </li> <br />\r\n                        <li> vi /etc/sysconfig/network\r\n                          <li> HOSTNAME=mail.linux.com </li>\r\n                        </li> <br />\r\n                        <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33  # 네트워크 설정 파일\r\n                          <li> DNS1=192.168.10.80 # 본인이 만든 DNS서버의 IP주소로 변경 </li>\r\n                        </li> <br />\r\n                        <li> useradd admin </li>\r\n                        <li> echo -e \"1234\\n1234\" | passwd admin </li>\r\n                        <li> systemctl restart sendmail </li>\r\n                        <li> systemctl restart dovecot </li>\r\n                        <li> systemctl enable sendmail </li>\r\n                        <li> systemctl enable dovecot </li>\r\n                        <li> systemctl disable firewalld  </li>\r\n                        <li> systemctl stop firewalld # 포트를 개방할 것이 너무 많아서 그냥 중단 </li>\r\n                        <li> setenforce 0  # se리눅스 끄기</li>\r\n                        <li> systemctl restart network </li>\r\n                        <li> cat /etc/resolv.conf # 본인의 네임서버 주소 확인 </li>\r\n                        <li> 끝 </li> <br />\r\n                        <li> thunderbird &amp; # 시간이 조금 걸림 </li>\r\n                        <li> server에 service라는 계정으로 접속\r\n                          <span className=\"mblock\">\r\n                            <li> 이름 : service </li>\r\n                            <li> 메일주소 : service@test.com </li>\r\n                            <li> 비밀번호 : 1234 </li>\r\n                            <li> 수동으로 구성 클릭 </li>\r\n                          </span>\r\n                          <span className=\"mblock\">\r\n                            <li> 프로토콜 : POP3 </li>\r\n                            <li> 서버 : mail.test.com , mail.test.com </li>\r\n                            <li> 포트 : 110 , 25 </li>\r\n                            <li> SSL : 암호화 안함 , 암호화 안함 </li>\r\n                            <li> 인증 방법 : 평문 비밀번호 , 인증 없음 </li>\r\n                            <li> 아이디 : service </li> <br />\r\n                            <li> 접속이 되지 않는 다면 nslookup mail.ssssksss.com 해보기\r\n                              <li> 서버의 방화벽 제거 , 서버로 이동 , systemctl stop firewalld </li>\r\n                              <li> 유저가 추가되있지 않아서 해결이 안되어 있을 수도 있음 </li>\r\n                            </li>\r\n                          </span>\r\n                        </li>\r\n                        <li> 좌측에 이메일 계정 우측클릭 설정 - 좌측 하단에 계정작업 - 메일 계정 추가\r\n                          <span className=\"mblock\">\r\n                            <li> 이름 : admin </li>\r\n                            <li> 메일주소 : admin@linux.com </li>\r\n                            <li> 비밀번호 : 1234 </li>\r\n                            <li> 수동으로 구성 클릭 </li>\r\n                          </span>\r\n                          <span className=\"mblock\">\r\n                            <li> 프로토콜 : POP3 </li>\r\n                            <li> 서버 : mail.linux.com , mail.linux.com </li>\r\n                            <li> 포트 : 110 , 25 </li>\r\n                            <li> SSL : 암호화 안함 , 암호화 안함 </li>\r\n                            <li> 인증 방법 : 평문 비밀번호 , 인증 없음 </li>\r\n                            <li> 아이디 : admin </li> <br />\r\n                            <li> 접속이 되지 않는 다면 nslookup mail.linux.com 해보기\r\n                              <li> 클라이언트의 방화벽 제거 , systemctl stop firewalld </li>\r\n                              <li> 유저가 추가되있지 않아서 해결이 안되어 있을 수도 있음 </li>\r\n                            </li>\r\n                          </span>\r\n                        </li>\r\n                        <li> 좌측에 계정이 2개 있는 것을 볼 수 있음 </li>\r\n                        <li> 좌측에 계정이 2개 있는 것을 볼 수 있음 , 보내기를 테스트 해보고 안된다면 서버 재시작 </li>\r\n                        <li> 양쪽 서버에 setenforce 0  </li>\r\n                        <li>  </li>\r\n                      </span>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> 메일 서버 디렉토리 </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 레포지토리 서버(미완성) <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li> yum -y install createrepo # 저장소 생성을 위한 패키지 </li>\r\n                    <li> yum -y install httpd # 웹서버를 이용해서 rpm파일을 배포하기위해 httpd서버 설치 </li>\r\n                    <li> mkdir -p /app/repo  </li>\r\n                    <li> createrepo /app/repo # rpm파일을 yum을 통해 배포할수 있는 공간으로 지정 </li>\r\n                    <li> ls -la  /app/repo/repodata # 의존성에 대한 다양한 정보가 보관된다고 이해 </li>\r\n                    <li> vi /etc/httpd/conf/httpd.conf\r\n                      <div className=\"sblock\">\r\n                        <li> 제일 마지막 줄에 추가 </li>\r\n                        <li> <a href=\"https://httpd.apache.org/docs/2.4/en/mod/core.html#directory\"\r\n                          target=\"_blank\" rel=\"noopener noreferrer\"> Directory 아파치 문서 참조 </a> </li> <br />\r\n                        <li> Alias /repo \"/app/repo\" # 도메인/repo 으로이동하면 /app/repo로 이동하라는 의미  </li>\r\n                        <li> {' <Directory \"/app/repo\"> '}\r\n                          <li> {' \tOptions FollowSymLinks '} </li>\r\n                          <li> {' \tDirectoryIndex index.html index.jsp *.jsp '} </li>\r\n                          <li> {' \tOrder allow,deny '} # 모두 접근 허용 </li>\r\n                          <li> {' \tAllow from all '} # 모두 접근 허용 </li>\r\n                          <li> {' \tRequire all granted '} # 모두 접근 가능하게 하겠다. </li>\r\n                        </li>\r\n                        <li> {' </Directory> '} </li>\r\n                      </div>\r\n                    </li>\r\n                    <li> systemctl stop firewalld </li>\r\n                    <li> systemctl start httpd </li>\r\n                    <li> cd /app/repo </li>\r\n                    <li> yum install --downloadonly --downloaddir=/app/repo vsftpd # 다운만받고 설치까지는 하지 않음 </li>\r\n                    <li> yum install --downloadonly --downloaddir=/app/repo net-snmp # 다운만받고 설치까지는 하지 않음 </li>\r\n                    {/*<li> cp /root/rpmbuild/RPMS/x86_64/hello-1.0.0-1.el7.x86_64.rpm /app/repo #개인적으로 만든 rpm파일 </li>*/}\r\n                    <li> setenforce 0 # se리눅스 끄기 </li>\r\n                    <li> ls -la </li>\r\n                    <li> 인터넷에서 URL에 localhost/repo/파일명.rpm # 인터넷창 아래쪽에 다운이 되면 성공\r\n                      <div className=\"sblock\">\r\n                        <li> You don't have permission to access ~~~ 에러 발생</li>\r\n                        <li> 1. 아파치가 접근 할 수 있는 권한 문제 , 경로에 읽기 권한이 있는지 한번 확인 </li>\r\n                        <li> 2. 만약에 되지 않는 다면 vi /etc/httpd/conf/httpd.conf\r\n                          <li> 104번 째 줄 </li>\r\n                          <li> #Require all denied # 주석처리해주고 </li>\r\n                          <li> Require all granted # 내용을 추가해준다. </li>\r\n                        </li>\r\n                      </div>\r\n                    </li>\r\n                    <li> createrepo --update /app/repo # rpm파일들이 있다고 repodata에 알려주어야 한다. </li>\r\n                    <li> yum clean all </li>\r\n                    <li> ls -la /etc/yum.repos.d/ # yum install 사이트들의 목록을 가지고 있는 공간 </li>\r\n                    <li> cat CentOS-Base.repd # 그중에 하나 열어보면 다운로드 받는 경로들의 위치가 있다는 것을 보여준다. </li>\r\n                    {/* 여기까지 진행함 1:57:00 강의 참고 */}\r\n                    <li> mkdir /etc/yum.repos.d/backup  </li>\r\n                    <li> mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup/ #기존에 있던 yum 다운 지원을 하는 repo파일을 다른곳으로 옮김 </li>\r\n                    <li> yum -y install vsftpd # 에러가 발생함 이유는 다운받는 repo 경로가 하나도 없음 </li>\r\n                    <li> vi repo-server.repo  # repo 서버를 만듬\r\n                      <div className=\"sblock\">\r\n                        <li> [repo-server] </li>\r\n                        <li> name=Repository Server </li>\r\n                        <li> {' baseurl=file:///app/repo '} </li>\r\n                        <li> enabled=1 </li>\r\n                        <li> gpgcheck=0 </li>\r\n                      </div>\r\n                    </li>\r\n                    <li> yum clean all </li>\r\n                    <li> yum install net-snmp # 기존에 사용하던 yum파일들이 모여있는 경로는 없지만\r\n                      아까 /app/repo 파일에 다운을 받아놓았기 때문에 설치가 가능   </li> <br />\r\n                    <li> 클라이언트 CentOS 열기 - 레포지토리서버에서 받아오기 테스트\r\n                      <li> cd /etc/yum.repos.d/ </li>\r\n                      <li> mkdir /etc/yum.repos.d/backup </li>\r\n                      <li> mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup </li>\r\n                      <li> vi repo-server.repo\r\n                        <span className='sblock'>\r\n                          <li> [repo-server] </li>\r\n                          <li> name=Repository Server </li>\r\n                          <li> {' baseurl=file://192.168.10.80/repo '} </li>\r\n                          <li> enabled=1 </li>\r\n                          <li> gpgcheck=1 </li>\r\n                        </span>\r\n                      </li>\r\n                      <li> yum clean all </li>\r\n                      <li> 만약 yum lock이 있다면 , 반복 시도\r\n                        <span className='sblock'>\r\n                          <li> ps -ef | grep yum  </li>\r\n                          <li> kill -9 PID번호 </li>\r\n                          <li> yum clean all </li>\r\n                        </span>\r\n                      </li>\r\n                      <li> cat /root/RPM-GPG-KEY 의 내용을 모두 복사 </li>\r\n                      <li> vi /tmp/key 에 복사한 내용을 넣어주기 </li>\r\n                      <li> yum install net-snmp # 설치할 필요는 없음 , 되는지만 확인 안되면\r\n                        <li> vi repo-server.repo 에 가서 gpgcheck=0으로 변경 </li>\r\n                      </li>\r\n                      <li> rpm --import /tmp/key # 공개키를 임포트를 함 </li>\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <div className=\"sstitle\"> 의존성을 고려한 파일 만들고 배포하기 </div> </li>\r\n                    <li> yum deplist net-snmp | grep \"dependency:\" # net-snmp 파일에 필요한 의존성파일들을 볼 수 있는 방법 </li>\r\n                    <li> cd /app/script </li>\r\n                    <li> vi lyum.sh\r\n                      <div className=\"sblock\">\r\n                        <li> #!/bin/bash </li>\r\n                        <li> yum install --downloadonly --downloaddir=/app/repo $1 #매개변수를 전달하여 의존성 파일 다운 </li>\r\n                        <li> yum reinstall --downloadonly --downloaddir=/app/repo $1 #이미 파일이 깔려있어도 다운받게 한다 </li>\r\n                        <li> yum deplist $1 | grep \"dependency:\" | awk '{'{print $2}'}' | awk -F \"(\" '{'{print $1}'}' | xargs\r\n                          yum install --downloadonly --downloaddir=/app/repo  </li>\r\n                        <li> yum deplist $1 | grep \"dependency:\" | awk '{'{print $2}'}' | awk -F \"(\" '{'{print $1}'}' | xargs\r\n                          yum reinstall --downloadonly --downloaddir=/app/repo  </li>\r\n                        <li> createrepo --update /app/repo # repodata라는 db파일에 어떠한 rpm파일들이 있는지 알수 있는 공간인데\r\n                          이 공간에 업데이트\r\n                        </li>\r\n                        <li> yum clean all </li>\r\n\r\n                      </div>\r\n                    </li>\r\n                    <li> chmod 755 lyum/sh </li>\r\n                    <li> /app/script/lyum.sh net-snmp </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 톰캣 서버 <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 설명 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> 아파치는 웹서버 </li>\r\n                    <li> 톰캣(아파치톰캣)은 아파치 재단 하위에 있는 웹서버+어플리케이션서버 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  <span className=\"sstitle\"> 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <a href=\"https://tomcat.apache.org/download-80.cgi\"\r\n                      target=\"_blank\" rel=\"noopener noreferrer\"> 아파치 톰캣 다운 주소 </a> </li>\r\n                    <li> Core tar.gz 파일의 링크 주소를 복사  </li>\r\n                    <li> mkdir -p /app/install </li>\r\n                    <li> cd /app/install </li>\r\n                    <li> mkdir -p /app/server/tomcat </li>\r\n                    <li> wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.70/bin/apache-tomcat-8.5.70.tar.gz -O /app/install/tomcat8.5.tar.gz </li>\r\n                    <li> tar xvfz /app/install/tomcat8.5.tar.gz -C /app/server/tomcat --strip-components=1\r\n                      # --strip-components=1 상위 n번쨰 이후 폴더부터 압축해제  </li>\r\n                    <li> cd /app/server/tomcat/bin  </li>\r\n                    <li> vim startup.bat </li>\r\n                    <li> ./startup.sh </li>\r\n                    <li> systemctl stop firewalld </li>\r\n                    <li> setenforce=0 </li>\r\n                    <li> java -version </li>\r\n                    <li> which java </li>\r\n                    <li> 구글에 \"자바 오라클 아카이브\" 검색 </li>\r\n                    <li> 자바 다운로드 주소\r\n                      <li> <a href=\"https://www.oracle.com/kr/java/technologies/javase/javase8-archive-downloads.html\"\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"> 자바 다운로드 주소 </a> </li>\r\n                    </li>\r\n                    <li> mkdir -p /app/install/dkit/jdk </li>\r\n                    <li> cd /app/install/dkit/jdk </li>\r\n                    <li> 리눅스 x64버전 다운로드(로그인 필요)  </li>\r\n                    <li> 리눅스 내부 브라우저에서 직접 다운 받아서 /app/install/dkit/jdk/ 에 다운파일(jdk-8u202-linux-x64.tar.gz) 설치해주기\r\n                      <li> 하다가 하는 방법을 몰라서 mobaxterm을 이용해서 넣어주었다. </li>\r\n                    </li>\r\n                    <li> 이거는 별개인데 md5sum 파일명 # 해쉬값이 나오는데 동일하면 같은 파일 </li>\r\n                    <li> mkdir -p /app/dkit/jdk/1.8.0 </li>\r\n                    {/*<li> cd /app/install/dkit/jdk </li>*/}\r\n                    <li> tar xvfz /app/install/dkit/jdk/jdk-8u202-linux-x64.tar.gz -C /app/dkit/jdk/1.8.0 --strip-components=1 </li>\r\n                    <li> java -version </li>\r\n                    <li> cd /app/dkit/jdk </li>\r\n                    <li> ln -Tfs /app/dkit/jdk/1.8.0 /app/dkit/jdk/release </li>\r\n                    <li> ls -la /usr/bin/java </li>\r\n                    <li> ln -Tfs /app/dkit/jdk/release/bin/java /usr/bin/java </li> <br />\r\n                    <li> cd /etc/systemd/system </li>\r\n                    <li> ll /usr/lib/systemd/system | grep firewalld #서비스 목록 , 방화벽 서비스 </li>\r\n                    <li> vi /usr/lib/systemd/system/firewalld.service # 안을 보면 실행을 어떻게 하는지 볼수있음 </li>\r\n                    <li> cd /etc/systemd/system </li>\r\n                    <li> vi tomcat.service\r\n                      <span className='sblock'>\r\n                        <li> [Unit] </li>\r\n                        <li> Description=Apache Tomcat Web Application Container </li>\r\n                        <li> After=syslog.target network.target </li>\r\n                        <li> [Service] </li>\r\n                        <li> Type=forking </li>\r\n                        <li> Enviroment=JAVA_HOME=/app/dkit/jdk/release </li>\r\n                        <li> Enviroment=CATALINA_PID=/app/server/tomcat/temp/tomcat.pid </li>\r\n                        <li> Enviroment=CATALINA_HOME=/app/server/tomcat </li>\r\n                        <li> Enviroment=CATALINA_BASE=/app/server/tomcat </li>\r\n                        <li> Enviroment='CATALINA_OPTS=Xms512M -Xmx1024M -server -XX:+UseParallelGC' </li>\r\n                        <li> Enviroment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom' </li>\r\n                        <li> ExecStart=/app/server/tomcat/bin/startup.sh </li>\r\n                        <li> ExecStop=/bin/kill -15 $MAINPID </li>\r\n                        <li> User=root </li>\r\n                        <li> Group=root </li>\r\n                        <li> [Install] </li>\r\n                        <li> WantedBy=multi-user.target </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> systemctl restart tomcat </li>\r\n                    <li> netstat -tnlp # 8080포트를 보면 자바를 볼 수 있다. </li>\r\n                    <li> cd /app/server/tomcat/conf </li>\r\n                    <li> vi tomcat-users.xml\r\n                      <span className='sblock'>\r\n                        <li> {' <role rolename=\"admin-gui\"/> '} </li>\r\n                        <li> {' <role rolename=\"manager-gui\"/> '} </li>\r\n                        <li> {' <role rolename=\"manager-script\"/> '} </li>\r\n                        <li> {' <role rolename=\"manager-status\"/> '} </li>\r\n                        <li> {' <role rolename=\"manager-jmx\"/> '} </li>\r\n                        <li> {'<user username=\"tomcat\" password=\"tomcat\" roles=\"adming-gui,manager-gui,manager-script,manager-status,manager-jmx\"/> '}\r\n                          # 다른 사용자가 접근 가능하게 , 56번쨰 줄에 추가 </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> vi /app/server/tomcat/conf/Catalina/localhost/manager.xml\r\n                      <span className='sblock'>\r\n                        <li> {' <Context privileged=\"true\" antiResourceLocking=\"false\" docBase=\"${catalina.home}/webapps/manager\"> '} </li>\r\n                        <li> {' <Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"^.*$\" /> '} </li>\r\n                        <li> {' </Context> '} </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> systemctl restart tomcat </li>\r\n                    <li> 브라우저에 192.168.10.80:8080 에서 manager app을 클릭 #에러 발생 </li>\r\n                    <li> yum -y install httpd </li>\r\n                    <li> systemctl restart httpd </li>\r\n                    <li> yum -y install gcc gcc-c++ httpd-devel libtool make # 아파치 확장 파일 httpd-devel </li>\r\n                    <li> 구글에서 톰캣에 들어가 톰캣 커넥터 파일 리눅스.tar.gz 링크복사\r\n                      <li> <a href=\"http://tomcat.apache.org/download-connectors.cgi\" target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"> 아파치 커넥터 사이트 </a> </li>\r\n                      <li> <a href=\"https://dlcdn.apache.org/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.48-src.tar.gz\"\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"> 아파치 커넥터 JK 1.2.48 </a> </li>\r\n                    </li>\r\n                    <li> mkdir -p /app/temp/mod_jk </li>\r\n                    <li> wget https://dlcdn.apache.org/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.48-src.tar.gz -O /app/install/tomcat-connectors-1.2.48-src.tar.gz </li>\r\n                    <li> tar xvfz /app/install/tomcat-connectors-1.2.48-src.tar.gz -C /app/temp/mod_jk/\r\n                      --strip-components=1 </li>\r\n                    <li> cd /app/temp/mod_jk/native </li>\r\n                    <li> ./configure --with-apxs=/usr/bin/apxs #configure는 설치파일 </li>\r\n                    <li> make </li>\r\n                    <li> make install </li>\r\n                    <li> chcon -u system_u -r object_r -t httpd_modules_t /etc/httpd/modules/mod_jk.so # se리눅스에서 권한을 주는 방법\r\n                      몰라도 된다.. </li>\r\n                    <li> cd /etc/httpd/conf </li>\r\n                    <li> mkdir /etc/httpd/conf/extra </li>\r\n                    <li> touch /etc/httpd/conf/extra/httpd-ssl.conf </li>\r\n                    <li> cat httpd.conf | grep conf </li>\r\n                    <li> vi /etc/httpd/conf/workers.properties\r\n                      <span className='sblock'>\r\n                        <li> worker.list=worker1 #아파치와-톰캣이 여러개 일 수 있으므로 이름지정 </li>\r\n                        <li> worker.worker1.port=8009 #아파치-톰캣 포트 연동 </li>\r\n                        <li> worker.worker1.host=localhost #아파치 서버의 위치  </li>\r\n                        <li> worker.worker1.type=ajp13 #아파치-톰캣 프로토콜? 연동 </li>\r\n                        <li> worker.worker1.lbfactor=1 #  </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> vi /etc/httpd/conf/uriworkermap.properties\r\n                      <span className='sblock'>\r\n                        <li> /*=worker1 #서브 디렉토리를 모두 worker1이라는 곳에서 참조해라 </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> vi /etc/httpd/conf/httpd.conf\r\n                      <span className='sblock'>\r\n                        <li> \"/var/www/html\"을 \"/app/server/tomcat/webapps\" 이걸로 변경 #119번쨰줄 </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> ls -la /app/server/tomcat/webapps #(루트경로처럼 사용) </li>\r\n                    <li> 따라 하지 않아도됨 , sed -i \"s/^\\s*#.//g\" /etc/httpd/conf/httpd.conf # 파일안에 주석을 모두 제거 </li>\r\n                    <li> 따라 하지 않아도됨 , sed -i \"/^$/d\" /etc/httpd/conf/httpd.conf # 파일안에 공백제거  </li>\r\n                    <li> vim /etc/httpd/conf/httpd.conf\r\n                      <span className='sblock'>\r\n                        <li> {' <Directory /> '} 이부분의 denied 를 granted로 변경 </li>\r\n                        <li> {' <Directory /var/www> <Directory /var/html> '} 이 두부분은 필요가 없음 </li>\r\n                        <li> LoadModule jk_module modules/mod_jk.so #가장 아래쪽에 추가 </li>\r\n                        <li> {'<IfModule jk_module>'}\r\n                          <li> JkWorkersFile conf/workers.properties </li>\r\n                          <li> JkLogFile logs/mod_jk.log </li>\r\n                          <li> JkLogLevel info </li>\r\n                          <li> JkLogStampFormat \"[%y %m %d %H:%M:%S]\" </li>\r\n                          <li> JkShmFile logs/mod_jk.shm </li>\r\n                          <li> JkMountFile conf/uriworkermap.properties </li>\r\n                          <li> JkUnMount /mail/* worker1 </li>\r\n                          <li> JkUnMount /*.php worker1 </li>\r\n                        </li>\r\n                        <li> {'<IfModule>'} </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> systemctl restart httpd  </li>\r\n                    <li> vi /app/server/tomcat/conf/server.xml\r\n                      <li> 117번 AJP부분을 보면 주석 처리가 되어있음 </li>\r\n                      <li> 위아래에 주석을 해제  </li>\r\n                      <li> address=\"::1\" 을 \"0.0.0.0\" 으로 수정 </li>\r\n                      <li> secretRequired=\"false\" # 추가 </li>\r\n                    </li>\r\n                    <li> systemctl restart tomcat  </li>\r\n                    <li> netstat -tnlp에서 8009번포트가 열렸는지 확인 </li>\r\n                    <li>   </li>\r\n                    <li>   </li>\r\n                  </span>\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ PXE 서버 <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 설명 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> 여러대의 컴퓨터의 프로그램을 동시에 설치하는 방법 </li>\r\n                    <li> DHCP, TFTP , syslinux 부팅파일, FTP나 웹서버  </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  <span className=\"sstitle\"> 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> ps -ef | grep yum | grep -v grep | awk '{'{print $2}'}' | xargs kill -9 2{'>'}/dev/null  </li>\r\n                    <li> yum -y install syslinux tftp-server vsftpd dhcp xinetd  </li>\r\n                    {/* 여기까지 진행 */}\r\n                    <li> vi /etc/dhcp/dhcpd.conf\r\n                      <li> subnet 192.168.10.0 netmask 255.255.255.0 {'{'}\r\n                        <li> option routers 192.168.10.2;  </li>\r\n                        <li> option subnet-mask 255.255.255.0;  </li>\r\n                        <li> range dynamic-bootp 192.168.10.30 192.168.10.50;  </li>\r\n                        <li> option domain-name-servers 8.8.8.8;  </li>\r\n                        <li> allow booting;  </li>\r\n                        <li> allow bootp;  </li>\r\n                        <li> next-server 192.168.10.80;  </li>\r\n                        <li> filename \"pxelinux.0\";  </li>\r\n                      </li>\r\n                      <li> {'}'}  </li>\r\n                    </li>\r\n                    <li> systemctl restart dhcpd </li>\r\n                    <li> vim /etc/xinetd.d/tftp\r\n                      <li> disable = yes 를 disable = no로 변경 </li>\r\n                    </li>\r\n                    <li> df # 현재 마운트 목록을 보여줌  </li>\r\n                    <li> USB 등이 꽂혀있는 공간을 삭제하고 다시 만들기 </li>\r\n                    <li> umount /dev/cdrom # 연결 usb가 꽂혀 있는 공간을 비움 </li>\r\n                    <li> mkdir /mnt/cdrom </li>\r\n                    <li> mount /dev/cdrom /mnt/cdrom # /dev/cdrom 에 있는 것을 /mnt/cdrom 마운트 한다.\r\n                      <li> mount: no medium found on /dev/sr0 이렇게 나온다면 꽂혀있는 CD가 없다는 이야기</li>\r\n                      <li> 좌측에 실행중인 CentOS 우측클릭 - Settings - CD/DVD - Connected 체크 </li>\r\n                    </li>\r\n                    <li> df </li>\r\n                    <li> umount /dev/cdrom  </li>\r\n                    <li> mount /dev/cdrom /mnt/cdrom  </li>\r\n                    <li> ls -la /mnt/cdrom </li>\r\n                    <li> cp -r /mnt/cdrom/* /var/ftp/pub # 시간 오래걸림 </li>\r\n                    <li> ls -la /var/ftp/pub </li>\r\n                    <li> umount /dev/cdrom </li>\r\n                    <li> chmod 777 /var/ftp/pub </li>\r\n                    <li> ls -la /var/lib/tftpboot </li>\r\n                    <li> cp /var/ftp/pub/images/pxeboot/vmlinuz /var/lib/tftpboot/ </li>\r\n                    <li> cp /var/ftp/pub/images/pxeboot/initrd.img /var/lib/tftpboot/ </li>\r\n                    <li> cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/ </li>\r\n                    <li> mkdir /var/lib/tftpboot/pxelinux.cfg </li>\r\n                    <li> cd /var/lib/tftpboot/pxelinux.cfg/ </li>\r\n                    <li> vim default\r\n                      <span className='sblock'>\r\n                        <li> DEFAULT CentOS7_Auto_Install # pxe서버에서 기본적으로 설치할 파일</li>\r\n                        <li> LABEL CentOS7_Auto_Install # 설치할 파일에 대한 내용\r\n                          <li> kernel vmlinuz </li>\r\n                          <li> APPEND initrd=initrd.img repo=ftp://192.168.10.80/pub </li>\r\n                        </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> ps -ef | grep dnsmasq # 기본적으로 설치하지 않아도 실행되는 dhcp서버 </li>\r\n                    <li> kill -9 1955 # 사람마다 다름 </li>\r\n                    <li> systemctl restart dhcpd  </li>\r\n                    <li> systemctl restart vsftpd </li>\r\n                    <li> systemctl restart xinetd </li>\r\n                    <li> systemctl enable dhcpd   </li>\r\n                    <li> systemctl enable vsftpd  </li>\r\n                    <li> systemctl enable xinetd  </li>\r\n                    <li> systemctl stop firewalld  </li>\r\n                    <li> systemctl disable firewalld  </li>\r\n                    <li> setenforce 0 </li>\r\n                    <li> Virtual Network Editor에서 Use local DHCP service to distribute IP address to VMs 체크해제\r\n                      # 사용하고 있는 dhcp 끄기 </li>\r\n                    <li> 새롭게 PXE_Client CentOS를 생성 , 단 CD ROOM은 넣지 않고 설치하면 설치가 가능 </li>\r\n                    <li> 이제 언어 등 설정까지 다 해주는 킥스타트  </li>\r\n                    <li> yum -y install system-config-kickstart system-config-keyborard </li>\r\n                    <li> sustem-config-kickstart\r\n                      <span className='sblock'>\r\n                        <li> 기본설정 - 언어 - 한국어 </li>\r\n                        <li> 기본설정 - 시간대 - Asia/Seoul </li>\r\n                        <li> 기본설정 - 암호 - P@ssw0rd! </li>\r\n                        <li> 기본설정 - 고급설정 - \"설치후 시스템 재부팅\" 체크 </li>\r\n                        <li> 설치 방법 - FTP - FTP 서버 192.168.10.80 </li>\r\n                        <li> 설치 방법 - FTP - FTP 디렉토리 : pub </li>\r\n                        <li> 부트로더 옵션 - 설치유형 - 새로운 부트로더 설치 </li>\r\n                        <li> 파티션 정보 - 마스터 부트 레코드 - 마스터 부트 레코드 내용 삭제 , 디스크레이블 - 디스크레이블 초기화 </li>\r\n                        <li> 파티션 정보 - 디스크레이블 - 디스크레이블 초기화 </li>\r\n                        <li> 파티션 정보 - 레이아웃 추가 - 파일시스템 유형 swap , 크기옵션 수정된용량 2048  </li>\r\n                        <li> 파티션 정보 - 레이아웃 추가 - 마운트할 지점 / , 크기옵션 사용안된 디스크 공간 모두 채움  </li>\r\n                        <li> 좌측 상단 - 파일 - 저장 - 파일시스템 - var - ftp - centos.ks 라는 파일로 저장 </li>\r\n                        <li> 좌측 상단 - 파일 - 끝내기 </li>\r\n                        <li> cd /var/ftp </li>\r\n                        <li> ls -la . </li>\r\n                        <li> vi centos.ks\r\n                          <span className='sblock'>\r\n                            <li> 제일 아래에 아래내용 추가 </li>\r\n                            <li> %packages </li>\r\n                            <li> @base </li>\r\n                            <li> @core </li>\r\n                            <li> @directory-client </li>\r\n                            <li> @fonts </li>\r\n                            <li> @gnome-desktop </li>\r\n                            <li> @input-methods </li>\r\n                            <li> @internet-browser </li>\r\n                            <li> @java-platform </li>\r\n                            <li> @multimedia </li>\r\n                            <li> @network-file-system-client </li>\r\n                            <li> @x11 </li>\r\n                            <li> %end </li>\r\n                          </span>\r\n                        </li>\r\n                        <li> vim /var/lib/tftpboot/pxelinux.cfg/default\r\n                          <li> pub 뒤쪽에 ks=ftp://192.168.10.80/centos.ks 추가 </li>\r\n                        </li>\r\n                        <li> systemctl restart dhcpd  </li>\r\n                        <li> systemctl restart vsftpd </li>\r\n                        <li> systemctl restart xinetd </li>\r\n                      </span>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n          </span>\r\n        </ul >\r\n      </div >\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxServer;","import React from 'react';\r\n\r\nconst LinuxProgramInstall = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <ul>\r\n          <span className=\"lblock\">\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ php 설치\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> yum install gcc glibc glibc-common gd gd-devel -y\r\n                      <li> ps -ef | grep yum | grep -v grep | awk '{'{print $2}'}' | xargs kill -9 2{'>'}/dev/null </li>\r\n                    </li>\r\n                    <li>  yum -y install libxml2-devel </li>\r\n                    <li>  yum -y install sqlite-devel </li>\r\n                    <li>  yum -y install make </li>\r\n                    <li>  mkdir -p /app/install </li>\r\n                    <li>  wget https://www.php.net/distributions/php-8.0.10.tar.gz -O /app/install/php-8.0.10.tar.gz\r\n                      <li>  <a href=\"https://www.php.net/downloads.php\" target=\"_blank\" rel=\"noopener noreferrer\"></a> php설치 주소 </li>\r\n                    </li>\r\n                    <li> mkdir -p /app/temp/php/8.0.10  </li>\r\n                    <li> tar xvfz /app/install/php-8.0.10.tar.gz -C /app/temp/php/8.0.10 --strip-components=1  </li>\r\n                    <li> cd /app/temp/php/8.0.10  </li>\r\n                    <li> ./configure --prefix=/app/dkit/php/8.0.10  </li>\r\n                    <li> make {'&&'} make install  # 매우 오래 걸림 </li>\r\n                    <li> ls -la /app/dkit/php/8.0.10/  </li>\r\n                    <li> /app/dkit/php/8.0.10/bin/php -version  </li>\r\n                    <li> 환경변수 등록하기  </li>\r\n                    <li> cd /app/dkit/php/  </li>\r\n                    <li> ln -Tfs /app/dkit/php/8.0.10 /app/dkit/php/release  </li>\r\n                    <li> rm -rf /app/temp/php/8.0.10  </li>\r\n                    <li> ls -la /usr/bin #윈도우의 환경변수같음  </li>\r\n                    <li> ln -Tfs /app/dkit/php/release/bin/php /usr/bin/php  </li>\r\n                    <li> php -version  </li>\r\n                    <li> ls -la /usr/bin/php  </li>\r\n                    <li>   </li>\r\n                    <li>   </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 워드프레스 설치\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 워드프레스 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> pkgs.org 에 가보면 php 5.4나 7까지만 지원 </li>\r\n                    <li> yum -y install epel-release # yum에 올라온 공식적인 패키지가 아닌 unofficial에서\r\n                      third party에 대한 repo서버의 정보가 필요한데 대표적인 사람들의 정보가 존재? </li>\r\n                    <li> yum -y install httpd mariadb mariadb-server </li>\r\n                    <li> yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm #remi 파일에 대해 설치 필요\r\n                      <li> 안된다면 아래와 같이 입력 </li>\r\n                      <li> yum -y install https://rpms.remirepo.net/enterprise/remi-release-7.rpm </li>\r\n                      <li> 안된다면 아래와 같이 한번 받고나서 다시 위에 명령어 입력 </li>\r\n                      <li> rpm -Uvh install http://rpms.remirepo.net/enterprise/remi-release-7.rpm </li>\r\n                    </li>\r\n                    <li> yum -y install php80-php php80-php-mysql </li>\r\n                    <li> systemctl restart mariadb </li>\r\n                    <li> mysql -e \"CREATE DATABASE wordpress;\" # 데이터베이스 생성 </li>\r\n                    <li> mysql -e \"GRANT ALL PRIVILEGES ON wordpress.* TO test@localhost IDENTIFIED BY 'P@ssw0rd\"'!'\"';\" </li>\r\n                    <li> mysql -e \"FLUSH PRIVILEGES;\" </li>\r\n                    <li> mysql -e \"SELECT User,Host FROM mysql.user;\"\r\n                      <li> 아래는 할 필요 없음 실수로 비번을 잘못입력하고 워드프레스에 비번 잘못 입력해서 사용 </li>\r\n                      <li> mysql -e \"SELECT User,Password From mysql.user;\" # 테이블의 유저,유저비번 조회 </li>\r\n                      <li> mysql -e \"UPDATE mysql.user Set Password=Password('P@ssw0rd\"'!'\"') WHERE User='test';\" #유저 비번 바꾸기</li>\r\n                      <li> mysql -e \"SHOW DATABASES;\" </li>\r\n                      <li> mysql -e \"DROP DATABASE wordpress;\" </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> vi /etc/httpd/conf/httpd.conf\r\n                      <span className='sblock'>\r\n                        <li> 164번째 줄 index.html 뒤에 index.php 추가 </li>\r\n                        <li> 가장 아래에 추가 </li>\r\n                        <li> AddType application/x-httpd-php .php .html .htm .inc </li>\r\n                        <li> AddType application/x-httpd-php-source .phps </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> systemctl restart httpd </li>\r\n                    <li> mkdir -p /app/install </li>\r\n                    <li> <a href=\"https://ko.wordpress.org/download/\" target=\"_blank\" rel=\"noopener noreferrer\"></a> 워드프레스 홈페이지 </li>\r\n                    <li> wget https://ko.wordpress.org/latest-ko_KR.tar.gz -O /app/install/wordpress.tar.gz </li>\r\n                    <li> mkdir -p /var/www/html/wordpress </li>\r\n                    <li> tar xvfz /app/install/wordpress.tar.gz -C /var/www/html/wordpress --strip-components=1 </li>\r\n                    <li> cd /var/www/html/wordpress/ </li>\r\n                    <li> cd wp-content </li>\r\n                    <li> mkdir uploads # 워드프레스 메뉴얼에 적혀져 있음 </li>\r\n                    <li> cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php </li>\r\n                    <li> vi /var/www/html/wordpress/wp-config.php\r\n                      <span className='sblock'>\r\n                        <li> 'database_name_here' 에 'wordpress' 입력 #데이터베이스 입력 </li>\r\n                        <li> 'username_here' 에 'test' 입력 # DB 사용자 입력 </li>\r\n                        <li> 'password_here' 에 'P@ssw0rd!' 입력 # DB 사용자 비번 입력 </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> systemctl restart httpd </li>\r\n                    <li> setenforce 0 </li>\r\n                    <li> systemctl stop firewalld </li>\r\n                    <li> 브라우저에 192.168.10.80/wordpress 입력해서 나와야 함 </li>\r\n                    <li> 그리고 정보를 입력(비밀번호 바꿀것)  </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ unzip 설치 <small>  </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> CentOS 설치\r\n                      <li> yum install unzip </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ mariaDB 설치 <small>  </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li> CentOS 설치\r\n                      <li> yum -y install mariadb mariadb-server </li>\r\n                      <li> yum -y install php-mysqlnd <small> php와 mariadb를 연동 </small> </li>\r\n                      <li> systemctl restart mariadb </li>\r\n                      <li> mysql <small> mariadb 실행 </small> </li>\r\n                      <li> GRANT ALL PRIVILEGES ON xeDB.* TO xeUser@localhost IDENTIFIED BY '1234'; </li>\r\n                      <li> exit </li>\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\"> 사용 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> mysql -u 유저명 -p비번 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ xpressengine 설치 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> xpressengine 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> CentOS 설치\r\n                      <li> <a href=\"https://www.xpressengine.com/download\" target=\"_blank\">\r\n                        https://www.xpressengine.com/download </a> 로 가서 xe core 다운로드 - 다운로드 우측클릭 링크 주소 복사 </li>\r\n                      <small> http://download.xpressengine.com/download/18325662/22756225 </small>\r\n                      <li> cd /var/www/html  </li>\r\n                      <li> wget 링크주소URL -O xe.zip </li>\r\n                      <li> unzip xe.zip </li>\r\n                      <li> chmod 707 xe </li>\r\n                      <li> 브라우저 URL에 ip주소/xe 입력 (localhost/xe 입력도 가능) </li>\r\n                      <li> setenforce 0 , 리눅스 보안 끔(일시적, 아래방법은 영구적) </li>\r\n                      <li> <small> vim /etc/sysconfig/selinux , SELINUX=disabled (default=enforcing)로 변경 </small> </li>\r\n                      <li> 창이 나오면 한국어 - 동의 - 다음 - 제일위에 mysql 선택 -  </li>\r\n                      <li> 만약에 퍼미션 에러가 나온다면 chmod 707문제거나 selinux문제이다. 꼭 setenforce 0 해주기 </li>\r\n                      <li> DB아이디, DB비밀번호, DB이름 적어주기 </li>\r\n                      <li> 한국시간으로 설정 Korea Standard Time, Japan Standard Time </li>\r\n                      <li> 이메일주소는 실제 이메일주소를 입력하지 않아도 됨 test@test.com </li>\r\n                      <li> 그러면 사이트가 만들어짐 </li>\r\n                      <li> ftp서버를 설정한 후에는 아래 과정 가능 </li>\r\n                      <li> 우측 관리(톱니바퀴) - 사이트 제작/편집 - 사이트 디자인 설정 - 다른 레이아웃 설치\r\n                        - 이나 Paper 레이아웃 다운로드 버튼 클릭 - 확인(FTP 설정 어쩌구) - 아이디와 비번 입력하고\r\n                        - 고급 아래 화살표 클릭 - 에러발생 - 다시 xe로 접속해서 이나 Paper 레이아웃 다운로드 -\r\n                        이나레이아웃으로 설정하고 저장 한후에 다시 xe로 접속하면 완료 </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ C언어 설치 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> 설치 </span>\r\n                  <span className=\"mblock\">\r\n                    <li> yum install gcc glibc glibc-common gd gd-devel -y </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 파이썬 설치\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li> <a href=\"https://www.python.org/downloads/source/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      https://www.python.org/downloads/source/ </a> </li>\r\n                    <li> https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz # 3.9.6 버전 Gzipped 우측클릭 링크복사 </li>\r\n                    <li> mkdir -p /app/temp </li>\r\n                    <li> cd /app/temp </li>\r\n                    <li> wget https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz </li>\r\n                    <li> ls -la # 파일 확인  </li>\r\n                    <li> tar xvfz ./Python-3.9.6.tgz </li>\r\n                    <li> 설치를 진행하기 위해서는 C언어, make가 설치되어 있어야 한다..\r\n                      <li> yum install gcc glibc glibc-common gd gd-devel -y </li>\r\n                      <li> yum -y install make </li>\r\n                    </li>\r\n                    <li> mkdir -p /app/dkit/python/3.9.6 </li>\r\n                    <li> ./configure --prefix=/app/dkit/python/3.9.6 # 의존성 파일이 있는지 검사 </li>\r\n                    <li> ls -la ./Makefile </li>\r\n                    <li> make # 의존성 파일을 가지고 빌드 파일로 만들어 주는 역할 </li>\r\n                    <li> make install # 빌드 파일을 가지고 실제 설치를 해주는 역할 </li>\r\n                    <li> ls -la /app/dkit/python/3.9.6/bin/ </li>\r\n                    <li> cd /app/dkit/python/3.9.6/bin </li>\r\n                    <li> cd / </li>\r\n                    <li> python --version # 설치한 버전이 다르다는 것을 볼 수 있음(기본적으로 설치된 버전) </li>\r\n                    <li> ls -ld /usr/bin/python\r\n                      <li> 권한을 보면 제일 앞에 l(심볼릭 링크,바로가기)로 되어있는것을 볼 수 있다. </li>\r\n                    </li>\r\n                    <li> cd /app/dkit/python/3.9.6/bin </li>\r\n                    <li> ./python3 --version </li>\r\n                    <li> cd /app/dkit/python </li>\r\n                    <li> ln -Tfs /app/dkit/python/3.9.6/bin/python3 /usr/bin/python3 #전역변수에 바로가기 생성 </li>\r\n                    <li> ln -Tfs /usr/bin/python3 /usr/bin/python </li>\r\n                    <li> python # 파이썬 실행 , exit()를 입력해서 나올 수 있음 </li>\r\n                    <li> yum -y install vsftpd (ftp서버를 설치하려 하지만 에러 발생) </li>\r\n                    <li> vi /usr/bin/yum # 배쉬가 python으로 변경이 된것을 볼 수 있음 </li>\r\n                    <li> 파이썬 2는 지원하나 파이썬 3에서는 yum을 지원하지 않음 </li>\r\n                    <li> 파이썬 버전을 바꾸어주는 쉘 스크립트 만들기\r\n                      <li> mkdir -p /app/script </li>\r\n                      <li> cd /app/script </li>\r\n                      <li> <span className=\"sstitle\"> vi chvpython.sh </span>\r\n                        <span className=\"sblock\">\r\n                          <li> #!/bin/bash </li>\r\n                          <li> if [ -n \"$1\" ]  #공백인지 검사 </li>\r\n                          <li> then\r\n                            <li> PYTHON_VERSION=$1 </li>\r\n                          </li>\r\n                          <li> else\r\n                            <li> echo \"Input Change Python Version(2 or 3) :\" </li>\r\n                            <li> read PYTHON_VERSION </li>\r\n                          </li>\r\n                          <li> fi </li> <br />\r\n                          <li> {'if [ \"${PYTHON_VERSION}\" == \"2\" ]'} </li>\r\n                          <li> then\r\n                            <li> ln -Tfs /usr/bin/python2 /usr/bin/python </li>\r\n                          </li>\r\n                          <li> {'elif [ \"${PYTHON_VERSION}\" == \"3\" ]'} </li>\r\n                          <li> then\r\n                            <li> ln -Tfs /usr/bin/python3 /usr/bin/python </li>\r\n                          </li>\r\n                          <li> else\r\n                            <li> echo \"Input Vaild Python Version(2 or 3)\" </li>\r\n                          </li>\r\n                          <li> fi </li> <br />\r\n                          <li> python --version </li>\r\n                        </span>\r\n                      </li>\r\n                    </li>\r\n                    <li> chmod 755 chvpython.sh </li>\r\n                    <li> ./chvpython  </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n          </span>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxProgramInstall;","import React from 'react';\r\n\r\nconst Term = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <ul>\r\n          <span className=\"lblock\">\r\n\r\n            <span className=\"mtitle\"> <a name=\"\">  용어 정리  </a> </span>\r\n            <li> <small>   </small> </li>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 프론트엔드 관련용어 <small> </small>\r\n                  <a name=\"프론트엔드 관련용어\" style={{ visibility: \"hidden\" }}> 프론트엔드 관련용어 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ MIME(Multipurpose Internet Mail Extensions) </summary>\r\n                    <span className=\"mblock\">\r\n                      <li> 과거에 이메일에 파일을 텍스트문자로 변환하여 같이 보냈는데 MIME가 변환 역할을 함 </li>\r\n                      <li> 현재는 웹을 통해 여러형태의 파일을 변환(인코딩)해서 전달하는 역할 </li>\r\n                      <li> 웹에서 Content-Type 정보를 파일의 앞부분에 담음 </li>\r\n                      <li> <span className=\"sstitle\">  MIME 형식 [파일종류/파일포맷]  </span>\r\n                        <small> 바이너리파일은 8비트, 텍스트파일은 7비트 데이터 </small>\r\n                        <span className=\"sblock\">\r\n                          <li> text/plain </li>\r\n                          <li> text/html </li>\r\n                          <li> text/css </li>\r\n                          <li> text/javascript </li>\r\n                          <li> text/xml </li>\r\n                          <li> Application/xml </li>\r\n                          <li> Application/pdf </li>\r\n                          <li> Application/json </li>\r\n                          <li> Application/javascript </li>\r\n                          <li> Application/ogg </li>\r\n                          <li> Application/octet-stream </li>\r\n                          <li> Application/ </li>\r\n                          <li> Application/x-www-form-urlencode </li>\r\n                          <li> multipart/formed-data : 브라우저에서 서버로 HTML Form 내용 전송시 사용</li>\r\n                          <li> image/jpeg </li>\r\n                          <li> image/gif </li>\r\n                          <li> image/png </li>\r\n                          <li> image/svg+xml </li>\r\n                          <li> audio/midi </li>\r\n                          <li> audio/mpeg </li>\r\n                          <li> audio/webm </li>\r\n                          <li> audio/x-ms-wma </li>\r\n                          <li> audio/ogg </li>\r\n                          <li> audio/wav </li>\r\n                          <li> video/webm </li>\r\n                          <li> video/ogg </li>\r\n                          <li> application/msword </li>\r\n                          <li> application/pdf </li>\r\n                          <li> application/zip </li>\r\n                          <li> application/x-javascript </li>\r\n                          <li> application/ </li>\r\n                          <li> application/ </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </li>\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 백엔드 관련용어  <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 네트워크 관련용어  <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <details>\r\n                    <summary className=\"sstitle\"> URL(Uniform Resource Locator) </summary>\r\n                    <span className=\"mblock\">\r\n                      <li> <h3> URL 구조 </h3>\r\n                        <li> <span className=\"sstitle\"> http://www.naver.com:80/webtoon_folder/webtoon.jsp?id=123 </span> </li>\r\n                        <li> http : 통신 프로토콜(http, https, ftp, file 등)  </li>\r\n                        <li> www : 호스트 이름 </li>\r\n                        <li> naver : 2차도메인 / 메인도메인  </li>\r\n                        <li> .com : 1차도메인 / 최상위도메인  </li>\r\n                        <li> 80 : 포트번호  </li>\r\n                        <li> webtoon_folder : 디렉토리 </li>\r\n                        <li> webtoon.jsp : 파일명과파일형식  </li>\r\n                        <li> id=123 : 쿼리,매개변수 (get방식)  </li>\r\n                      </li>\r\n                      <li>  </li>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                    {/*  */}\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 서버 관련용어  <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ 호스팅, 클라우드 서버 </summary>\r\n                    <span className=\"mblock\">\r\n                      <li> <h3> 호스팅 서버 </h3>  : 서버 공간을 돈받고 빌려주는 서버 , 24시간 켜져있는 서버 </li>\r\n                      <li> <h3> 공유 호스팅 </h3> : 서버1개를 여러명이서 사용, 가격이 저렴(개인), 하나의 서버를\r\n                        여러명의 사용자가 나누어씀, 한명의 사용자에 트래픽이 급격하게 발생하면 같은 서버를 사용하는 다른\r\n                        사용자들에게 문제가 발생  </li>\r\n                      <li> <h3> 전용 호스팅 </h3> : 서버1개를 통째로 빌려서 관리,권한 등을 가짐, 가격이 비쌈(개인이 부담하기에는 부담스러움) </li>\r\n                      <li> <h3> VPS(Vitual Private Server) 호스팅 </h3> : 서버 1개를 여러개의 구역으로 나눔 그리고 각 사용자들이\r\n                        구역을 사용하게 하는 방식, 서로에게 간섭이 되지 않음, 단 직접 서버를 구축해야함으로 리눅스에 대한 지식이 필요 </li>\r\n                      <li> <h3> 클라우드 </h3> : IaaS(하드웨어) , PaaS(IaaS+가상서버) , SaaS(PaaS+소프트웨어) </li>\r\n                      <li> <h3> IaaS 업체 </h3> 아마존, 구글, Azure, 네이버 클라우드 (1년간 무료제공)  </li>\r\n                      <li> <h3> StasS 업체 </h3>  </li>\r\n                      <li> <h3> PaaS 업체 </h3>  heroku , netlify  </li>\r\n                      <li> <h3> DaaS 업체 </h3>  </li>\r\n                      <li> <h3> FaaS 업체 </h3>  </li>\r\n                      <li> <h3> SaaS 업체 </h3>   </li>\r\n                    </span>\r\n                    {/*  */}\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ DNS 서버(네임서버) </summary>\r\n                    <span className=\"mblock\">\r\n                      <span className=\"sstitle\"> 설명 </span>\r\n                      <li> 과거에는 URL과 IP주소를 hosts파일에 기록해서 가지고 있었음(수동적, 실시간반영이 안됨) </li>\r\n                      <li> 클라이언트가 naver.com이라는 주소를 입력하면 DNS서버에서 naver.com이라는 도메인 주소에 맞는지\r\n                        IP주소(호스팅서버의주소)를 찾아서 클라이언트에게 보내준다. </li>\r\n                      <li> DNS서버는 1개로 구성되어있지 않고 단계적으로 구성되어 있음\r\n                        <li> Root DNS 서버(com,org,net 등) : ICANN이라는 비영리 기관이 관리 , TLD DNS서버 IP들을 가지고 있음 </li>\r\n                        <li> 최상위 도메인(TLD) DNS 서버(A.com,B.net 등) : 도메인 등록기관이 관리 , 권한 DNS서버 IP들을 가지고 있음 </li>\r\n                        <li> 권한(Authoriatative) DNS 서버() : 개인도메인과 IP주소의 관계(기록,저장,변경)가 있는 서버,\r\n                          도메인/호스팅 업체의 네임서버 , 개인 DNS서버가 여기에 속한다. </li>\r\n                        <li> 캐싱 서버(recursive server) : 클라이언트가 제일 먼저 접근하는 DNS서버, 일정기간동안 도메인과 맞는 IP를 캐시라는\r\n                          형태로 저장하는 DNS서버(ISP(통신사),google,Cloudflare 등) , 이 요청하는 서버는 개인이\r\n                          바꿀 수 있음(일반적으로 ISP(통신사) 캐싱 DNS 서버로 지정되어 있음) </li>\r\n                        <li> <a href=\"https://www.dnsperf.com/#!dns-providers,Asia\" target=\"_blank\">\r\n                          해외 DNS 서버 속도 비교사이트 </a>  </li>\r\n                        <li>  </li>\r\n                      </li>\r\n                      <li>  </li>\r\n                      <span className=\"sstitle\"> DNS 서버 종류 </span>\r\n                      <li> <h3> 주 서버(Primary)  </h3>\r\n                        <li> 도메인 등록기관에 DNS서버를 등록할 때 주 DNS서버를 사용 </li>\r\n                        <li> 도메인을 IP로 바꾸는 역할을 한다. </li>\r\n                        <li> 클라이언트의 질의에 대한 응답 , 클라이언트에게 보낼\r\n                          질의에 대한 응답이 없으면 상위 도메인 서버에 다시 질의 </li>\r\n                      </li>\r\n                      <li> <h3> 보조 서버(Secondary) </h3>\r\n                        <li> 주 서버의 정보를 가지고 있다가 주 서버의 문제가 생기면 역할을 대신함 </li>\r\n                        <li>  </li>\r\n                      </li>\r\n                      <li> <h3> 캐싱 서버(Cacging)  </h3>\r\n                        <li>  </li>\r\n                      </li>\r\n                      <span className=\"sstitle\">  </span>\r\n                      <li>  </li>\r\n                      <span className=\"sstitle\">  </span>\r\n                      <li>  </li>\r\n                      {/*  */}\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 아키텍처 관련용어 <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ DB 관련용어  <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 보안 관련용어  <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\">  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 회사 관련용어  <small> </small>\r\n                  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ 직위, 담당 업무,  </summary>\r\n                    <span className=\"mblock\">\r\n                      <li> FE\t：프론트 엔드\t</li>\r\n                      <li> BE\t：백 엔드\t</li>\r\n                      <li> DB : 데이터베이스 </li>\r\n                      <li> 개발자 : 프로그램 개발 , DB 지식 필요\t</li>\r\n                      <li> PL(Project Leader) : 프로젝트의 프레임워크,DB,개발 가이드 등을 설계/작성하는 역할(핵심인력) </li>\r\n                      <li> PM(Project Manager) : 고객의 요구사항을 듣고 프로젝트 전체적인 기획, 일정, 인력 등을 관리하는 업무\t</li>\r\n                      <li> 실무 담당자 : 시스템의 실제 업무를 담당하는 사람\t</li>\r\n                      <li> 현업 담당자 : 고객사의 모든 업무 담당자를 말함\t</li>\r\n                      <li> \t</li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ 마케팅? 업무 </summary>\r\n                    <span className=\"mblock\">\r\n                      <li> B2B(Business To Business) : 기업대 기업  </li>\r\n                      <li> B2C(Business To Customer) : 기업대 고객  </li>\r\n                      <li> 리뉴얼 : 시스템을 새로 만듬(소규모) </li>\r\n                      <li> SI(System Integration) : 아무것도 없는 상태에서 새로 만드는 업체 </li>\r\n                      <li> SM(System Management) : 시스템 유지 보수 업체 </li>\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ 계약 관련 </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                  <details>\r\n                    <summary className=\"sstitle\"> ▶ </summary>\r\n                    <span className=\"mblock\">\r\n                      <li>  </li>\r\n                    </span>\r\n                  </details>\r\n                  {/*  */}\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"프레임워크와 라이브러리\"> 프레임워크와 라이브러리  </a> </span>\r\n              <li> 프레임워크 : 소프트웨어의 특정 문제를 해결하기 위해서 상호 협력하는 클래스와 인터페이스의 집합,\r\n                어플리케이션 개발할 떄 코드,자료구조,DB연결 등 기능들이 제공이 되는 소프트웨어 프로그램(Maven,Gradle 등)  </li>\r\n              <li> 라이브러리 : 특정 기능들과 도구들을 모아놓은 집합 </li>\r\n              <li>   </li>\r\n              <li>   </li>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Restful API\">  Restful API </a> </span>\r\n              <li> 어떤 자원에 대해 CRUD 연산을 수행하기 위해 URI(Resource)로 요청을 보내는 것 </li>\r\n              <li> Resource(자원,URI) + Method(행위,POST) + Representation of Resource(자원형태,JSON) = REST </li>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> Uniform Interface (유니폼 인터페이스) </span>\r\n                <li> HTTP표준이면 어떤 플랫폼에서도 사용가능 </li>\r\n                <span className=\"sstitle\">Stateless (상태 정보 유지 안함) </span>\r\n                <li> 서버는 요청을 별개의 것으로 인식  </li>\r\n                <span className=\"sstitle\"> Cacheable (캐시 가능)</span>\r\n                <li> http캐싱기능 적용 가능 </li>\r\n                <span className=\"sstitle\"> Client-Server Architecture </span>\r\n                <li> 서버는 api(자원)를 제공하고 클라이언트는 인증,세션 등을 관리하여 역할을 구분시킴 </li>\r\n                <span className=\"sstitle\"> Self-Descriptiveness(자체 표현 구조) </span>\r\n                <li> REST API 메시지만 보고도 이해할 수 있는 구조 </li>\r\n                <span className=\"sstitle\"> Layerd System (계층화) </span>\r\n                <li> 보안, 로드 밸런싱, 암호화 등을 계층을 추가하여 구조를 변경할 수 있다. 또한 Proxy,GateWay와 같은 네트워크\r\n                  기반의 중간매체를 사용할 수 있게 해준다. 하지만 클라이언트는 직접 통신하는지, 중간 서버와\r\n                  통신하는지 알 수 없다. </li>\r\n                <span className=\"sstitle\"> REST 규칙 </span>\r\n\r\n                <ol> URI는 명사를 사용 </ol>\r\n                <ol> 슬래시로 계층 관계를 표현 </ol>\r\n                <ol> URI의 마지막에는 슬래시를 붙이지 않는다. </ol>\r\n                <ol> URI는 소문자로 구성 </ol>\r\n                <ol> 가독성이 떨어지는 경우 하이푼을 사용 </ol>\r\n\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"URL과 URI\">  URL과 URI </a> </span>\r\n              <li> URL(Uniform Resource Locator) : 인터넷에 있는 자원의 위치 </li>\r\n              <li> URI(Uniform Resource Identifier) : 인터넷 상의 자원을 식별하는 문자열, URL을 포함하고 있음 </li>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"IOC와 DI,POJO\">  IOC와 DI,POJO </a> </span>\r\n              <li>  </li>\r\n              <li> DI(의존성 주입) : 객체 의존 관계를 외부에서 넣어주는 방법 @Autowired로 스프링에서는 넣어줌 ,\r\n                방법은 생성자 주입,수정자(setter) 주입,필드 주입 3가지 방법중에 생성자 주입을 추천\r\n              </li>\r\n              <li>  </li>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"TDD (테스트 주도 개발)\">  TDD (테스트 주도 개발) </a> </span>\r\n              <li> 단위테스트를 작성 {\"->\"} 구현 클래스믈 작성 {\"->\"} 통합테스트 {\"->\"} </li>\r\n              <li>  </li>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"ORM(Object Relation Mapping)\"> ORM(Object Relation Mapping) </a> </span>\r\n              <li> 객체(Object)와 DB의 테이블을 Mapping 시켜 RDB 테이블을 객체지향적으로 사용하게 해주는 기술 </li>\r\n              <li> 과거에는 MyBatis라는 Object Mapping기술로 Java코드와 직접 작성한 SQL 코드를 Mapping하여\r\n                사용하였지만 현재는 JPA와 구현체 Hibernate로 처리를 한다. </li>\r\n              <li> 하지만 복잡한 쿼리를 작성하기에는 MyBatis가 더 편할 수도 있지만 생산성은 Hibernate가 더 좋다 그렇지만\r\n              </li>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"JPA(Java Persistence API)\">  JPA(Java Persistence API) </a> </span>\r\n\r\n              <span className=\"sblock\">\r\n                <li> 자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 인터페이스 </li>\r\n                <li> SQL언어가 아닌 자바 언어를 사용하여 객체지향 관점으로 관리할 수 있게 해준다.</li>\r\n                <li> 개발자가 DB작업에 집중을 덜 하여도 되고 CRUD를 사용하기 쉬우며 SQL을 수정하기도 쉽고\r\n                  객체와 DB에 넣은 데이터타입의 불일치도 해결을 해준다.\r\n                </li>\r\n                <span className=\"sstitle\"> JPQL(Java Persistence Query Language) </span>\r\n                <li> 자바 객체를 이용하여 SQL 쿼리를 이용할 수 있는 언어</li>\r\n                <li> JPA(인터페이스)의 구현체 </li>\r\n                <li> JPA를 사용하기 위해서 필수로 사용해야할 필요는 없다. </li>\r\n                <li> 다른 구현체 ( DataNucleus,EclipseLink 등) 사용 가능 혹은 사용자 정의 구현체로도 사용 가능</li>\r\n                <span className=\"sstitle\"> Spring Data JPA</span>\r\n                <li> Repository 인터페이스로 메소드를 입력하면 적절한 쿼리를 날려준다. </li>\r\n                <span className=\"sstitle\"> JDBC API </span>\r\n                <li> JPA를 사용하면 SQL을 보내 DB와 통신하는 API 직접적으로 사용하는 일은 없다. </li>\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Spring MVC\">  Spring MVC </a> </span>\r\n              <span className=\"sblock\">\r\n                <li className=\"sstitle\"> Dispatcher Servlet </li>\r\n                <li> 클라이언트 요청을 받고 HandlerMapping에게 찾으라고 지시  </li>\r\n                <li className=\"sstitle\"> HandlerMapping </li>\r\n                <li> Dispatcher Servlet에게 맵핑정보를 받아 Controller를 찾아 요청   </li>\r\n                <li className=\"sstitle\"> front controller </li>\r\n                <li> Controller의 명령에 따라 작업을 하고 View를 리턴 Dispatcher Servlet으로 보냄 </li>\r\n                <li className=\"sstitle\"> ViewResolver </li>\r\n                <li> Controller리턴 값 View를 검색 </li>\r\n                <li className=\"sstitle\"> View </li>\r\n                <li> 처리결과를 View에 송신하여 처리하고 그 View를 Dispatcher Servlet으로 이동하고 클라이언트에게 보냄 </li>\r\n                <li className=\"sstitle\">  </li>\r\n                <li>  </li>\r\n                <li className=\"sstitle\">  </li>\r\n                <li>  </li>\r\n                {/* <li className=\"sstitle\">  </li>\r\n                            <li>  </li> */}\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"DataSource\"> DataSource  </a> </span>\r\n              <li> 자바에서는 Connection Pool을 구현하여 사용하였는데 DB연동과 관련되 로직들이 추상화 되어있다. </li>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Controller와 RestController\">  Controller와 RestController </a> </span>\r\n              <a href=\"https://mangkyu.tistory.com/49?category=761302\"> 참고 </a>\r\n              <li> @Controller : 클라이언트의 요청을 받아 View를 반환 </li>\r\n              <li> @RestController(@Controller+@ResponseBody) :\r\n                클라이언트의 요청을 받아 객체형태(JSON 등)로 http에 담아 반환 </li>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Transaction(트랜잭션)\"> Transaction(트랜잭션)  </a> </span>\r\n              <span className=\"sblock\">\r\n\r\n                <li> 장바구니에 담기 여러개 상품구매나 호텔+항공 예약 등 여러개의 쿼리를 사용하여 처리할 때 도중에 문제가 생기면 처음으로\r\n                  돌려놓기 위한 방법   </li>\r\n                <span className=\"sstitle\">  1. 트랜잭션 동기화 </span>\r\n                <li> Connection 객체를 특정 장소에 보관하고 필요할 떄 꺼내쓰는 방법, 작업 쓰레드마다 Connection 객체를\r\n                  독립적으로 관리하기 떄문에, 멀티쓰레드 환경에서 충돌이 발생할 여지가 없다. JDBC와 같은 종속적인 트랜잭션 동기화 코드는\r\n                  hibernate에서 Connection이 아닌 session객체를 사용하기 떄문에 문제를 유발한다. </li>\r\n                <span className=\"sstitle\">  2. 트랜잭션 추상화</span>\r\n                <li> 스프링에서는 트랜잭션 기술의 공통점을 담은 추상화 기술을 제공하여 종속적인 코드를 이용하지 않고\r\n                  일관된 트랜잭션을 처리할 수 있게 도와준다.\r\n                </li>\r\n                <span className=\"sstitle\">  3. AOP를 이용한 트랜잭션</span>\r\n                <li>  트랜잭션을 담당하는 코드를 비즈니스 로직과 분리하여 처리한다.\r\n                  <span className=\"mblock\">\r\n\r\n                    <li> 트랜잭션 전파 : Propagation Requied(추가), Propagation Requires New(생성), Propagation Not Supported(별도로 동작)\r\n                      이외에도 처리방법이 존재 </li>\r\n                    <li> 격리수준 : 서버에 여러 개의 트랜잭션이 동시에 진행될 때 순차진행 방법이 아닌 동시에 여러개를 진행하기 위해 조정 </li>\r\n                    <li> 제한시간 : 트랜잭션을 수행하는 시간을 설정 </li>\r\n                    <li> 읽기전용 : 트랜잭션 내에서 데이터를 조작하는 시도를 막고, 성능이 향상될 수 있다. </li>\r\n\r\n                  </span>\r\n                </li>\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"세션,쿠키,토큰\"> 세션,쿠키,토큰,캐시  </a> </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 세션 </span>\r\n                <span className=\"mblock\">\r\n                </span>\r\n                <span className=\"sstitle\"> 쿠키 </span>\r\n                <span className=\"mblock\">\r\n                </span>\r\n                <span className=\"sstitle\"> 토큰 </span>\r\n                <span className=\"mblock\">\r\n                </span>\r\n                <span className=\"sstitle\"> 캐시 </span>\r\n                <small> 자주 사용하는 데이터를 복사해 놓는 임시 장소, 캐시는 저장 공간이 작고 비용이 비싸지만 빠른\r\n                  성능을 제공한다.  </small>\r\n                <span className=\"mblock\">\r\n                  <li> 1. 접근 시간에 비해 원래 데이터를 접근하는 시간이 오래 걸리는 경우 </li>\r\n                  <li> 2. 반복적으로 동일한 결과를 돌려주는 경우(이미지나 썸네일 등) </li>\r\n                  <li> 3. memory에 저장하므로 DBMS의 부하를 줄일 수 있는 장점이 있다. </li>\r\n                  <li> 4. Cache Hit는 캐시에 해당 데이터가 존재하면 반환\r\n                    , Cache Miss는 데이터가 캐시에 존재하지 않으면 DBMS 또는 서버에\r\n                    요청을 하는 경우\r\n                  </li>\r\n                </span>\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> Local Cache </span>\r\n                  <li> Local 장비에서만 사용되는 캐시, Local 장비의 Resource를 이용 </li>\r\n                  <li> Local에서만 작동되므로 속도가 빠름 </li>\r\n                  <li> Local에서 작동하므로 다른 서버와 데이터 공유가 어렵다. </li>\r\n                  <span className=\"sstitle\"> Global Cache </span>\r\n                  <li> 여러 서버에서 Cache Server에 접근하여 사용하는 캐시로 분산된 서버에서 데이터를 저장하고 조회할 수 있다 </li>\r\n                  <li> 네트워크를 통해 데이터를 가져오므로, Local Cache에 비해 상대적으로 느리다  </li>\r\n                  <li> 별도의 Cache서버를 이용하기 때문에 서버 간의 데이터 공유가 쉽다. </li>\r\n                </span>\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"서버기반, 토큰기반 인증시스템 차이\"> 서버기반, 토큰기반 인증시스템 차이  </a> </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 서버 기반 인증 시스템  </span>\r\n                <li> 서버측에서 사용자의 정보를 기억하는 방식 </li>\r\n                <li> 서버에서 세션을 유지하는 방식 </li>\r\n                <li>  Sateful 서버</li>\r\n                <li>  하지만 세션을 저장하기 위해 메모리나 DB에 저장하는데 사용자가 많아지면 서버에 부하가 걸린다.\r\n                  또한 세션을 분산처리하기는 어렵고 그리고 CORS를 이용하기에도 번거로움</li>\r\n                <span className=\"sstitle\"> 토큰 기반 인증 시스템  </span>\r\n                <li> 인증받은 사용자에게 토큰을 발급하고 서버에 요청을 보낼때 헤더에 토큰을 함께\r\n                  보내도록 하여 유효성 검사를 하는 방식 </li>\r\n                <li> Stateless서버 </li>\r\n                <li> 여러개의 서버를 작동시키고 있을 경우 한개의 서버에만 세션이 저장될 경우 다른 서버를 이용하게 되면\r\n                  이용이 되지 않지만 토큰 방식은 클라이언트가 가지고 있으므로 서버가 변경이 되어도 어떤 서버에서\r\n                  처리를 해도 상관이 없어지는 장점이 있다. </li>\r\n                <li> OAuth를 이용하게 되면 Facebook, Google 등과 같이 소셜계정을 이용하여 다른 웹서비스에 로그인을 할 수 있다.  </li>\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"JWT(Json Web Token)\"> JWT(Json Web Token)  </a> </span>\r\n              <small> Json 포맷을 이용하여 사용에 대한 속성을 저장하는 Web Token 기반  </small>\r\n              <li> 토큰 자체를 정보로 사용하는 Self-Contained 방식으로 정보를 안전하게 전달한다. </li>\r\n              <li> 토큰을 static변수(매번 로컬스토리지에 꺼내지 않기 위해서)와 로컬 스토리지에 저장 </li>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> JWT 구조 </span>\r\n                <small> Base64로 인코딩, 각 부분을 .구분자를 사용하여 구분 </small>\r\n\r\n                <li> Header </li>\r\n                <span className=\"mblock\">\r\n                  <li> typ : 토큰의 타입을 지정 </li>\r\n                  <li> alg : 알고리즘 방식 지정, 서명 및 토큰 검증에 사용 </li>\r\n                </span>\r\n                <li> Payload </li>\r\n                <small> 토큰에 사용되는 정보의 조각 클레임이 담겨있다. JSON형태로 다수의 정보를 넣는다.  </small>\r\n                <span className=\"mblock\">\r\n\r\n                  <span className=\"sstitle\"> 등록된 클레임(Registered Claim) </span>\r\n\r\n                  <li> iss : 토큰 발급자 </li>\r\n                  <li> sub : 토큰 제목 </li>\r\n                  <li> aud : 토큰 대상자 </li>\r\n                  <li> exp : 토큰 만료 시간(NumericDate형식으로 되야한다.) </li>\r\n                  <li> nbf : 토큰 활성 날짜 , 토큰이 활성되는 날짜 </li>\r\n                  <li> iat : 토큰 발급 시간 , 토큰 발급 경과 시간 </li>\r\n                  <li> jti : JWT 토큰 식별자 , 중복 방지를 위해 사용, 일회용 토큰 등에 사용  </li>\r\n\r\n                  <span className=\"sstitle\"> 공개 클레임(Public Claim) </span>\r\n                  <li> 사용자 정의 클레임, 공개용 정보를 위해 사용, 충동 방지를 위해 URI포맷을 사용 </li>\r\n                  <span className=\"sstitle\"> 비공개 클레임(Private Claim) </span>\r\n                  <li> 사용자 정의 클레임, 서버와 클라이언트 사이에 임의로 지정한 정보를 저장 </li>\r\n\r\n                </span>\r\n                <li> Signature(서명) </li>\r\n                <span className=\"mblock\">\r\n                  <li> 토큰을 인코딩하거나 유효성 검증을 할 때 사용하는 고유한 암호화 코드 </li>\r\n                  <li> 인코딩한 값을 비밀키를 이용해 헤더에서 정의한 알고리즘으로 해싱을 하고 다시 BASE64로 인코딩하여 생성한다. </li>\r\n                </span>\r\n\r\n              </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> JWT의 단점 </span>\r\n                <li> 토큰 자체에 정보를 담으므로 보안문제가 있을 수 있다. </li>\r\n                <li> 토큰에 3개로 구분이 되므로 정보가 많으면 토큰의 길이가 늘어난다. </li>\r\n                <li> 인코딩된 데이터는 탈취하여 디코딩하여 정보를 볼 수 있으므로 중요 데이터를 넣으면 안된다. </li>\r\n                <li> JWT는 Stateless이므로 토큰에 만료시간을 꼭 넣어주어야 한다. </li>\r\n                <li> 토큰을 클라이언트 측에서 관리해야 하기 떄문에 토큰을 저장해야 한다. </li>\r\n\r\n              </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> 로그인 </span>\r\n                <li> 로컬 스토리지에 토큰이 존재하는지 유무 확인 </li>\r\n                <li> 만일 존재한다면 로그인 </li>\r\n                <li> 존재하지 않는다면 서버에서 토큰 발행 응답 헤더에 담아서 클라이언트에 보냄 </li>\r\n                <li> 클라이언트는 로컬스토리지와 static변수에 저장 그리고 로그인 </li>\r\n\r\n              </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 로그아웃  </span>\r\n                <li> 로그아웃을 할 경우 토큰을 제거 </li>\r\n                <li> 실제 서비스에서는 사용한 토큰을 DB테이블에 넣어서 접근을 막아준다.  </li>\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"RequestBody, ModelAttribute, RequestParam의 차이\"> RequestBody, ModelAttribute, RequestParam의 차이  </a> </span>\r\n              <span className=\"sblock\">\r\n                <li className=\"sstitle\"> RequestParam </li>\r\n                <li> 1개의 HTTP 요청 파라미터를 받기 위해 사용 </li>\r\n                <li> 파라미터가 필수적으로 전송되어야 한다.(400에러 발생) </li>\r\n                <li className=\"sstitle\"> RequestBody </li>\r\n                <li> Json형태의 HTTP  Body 데이터를 MessageConverter를 통해 변환시킴 </li>\r\n                <li> 바인딩이 아닌 변환이므로 Setter함수가 없어도 변수들이 저장됨 </li>\r\n                <li className=\"sstitle\"> ModelAttribute </li>\r\n                <li>  multipart/form-data 형태의 HTTP Body 내용과 HTTP 파라미터들을 Setter를 통해 1대1로 객체에 바인딩시킴 </li>\r\n                <li> 변환이 아닌 바인딩 작업이므로 Setter함수가 필요(없으면 에러발생 )</li>\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Bean, Configuration, Component\"> Bean, Configuration, Component </a> </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> Bean </span>\r\n                <li> Spring (Ioc 컨테이너,DI 컨테이너)에 의해 관리되는 POJO를 Bean라고 한다. </li>\r\n\r\n                <li> class : Bean으로 등록할 Java 클래스 </li>\r\n                <li> id : Bean의 고유 식별자 </li>\r\n                <li> scope : Bean을 생성하기 위한 방법(singleton(기본), prototype, web(request,session,application)) </li>\r\n                <li> constructor-arg : Bean 생성 시 생성자에 전달할 파라미터 </li>\r\n                <li> property : Bean 생성 시 setter에 전달할 인수 </li>\r\n\r\n                <span className=\"sstitle\"> Configuration </span>\r\n                <li> Bean을 사용하기위해 명시 </li>\r\n                <span className=\"sstitle\"> Component </span>\r\n                <li> 개발한 클래스를 Bean으로 등록할 때 사용, Spring에서는 @Bean을 사용하면 그안에 포함이 되어있다 </li>\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"OOP의 5가지 원칙(SOLID)\"> OOP의 5가지 원칙(SOLID)  </a> </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> 단일 책임 원칙(Single responsibility principle) </span>\r\n                <li> 하나의 클래스는 오직 하나의 책임(기능)만을 가져야 한다는 원칙, 예를 들어 로그인 클래스면 로그인만\r\n                  담당을 해야지 회원가입이나 인증과 같은 기능들을 가지고 있으면 나중에 코드를 수정하거나 문제가 생길 때\r\n                  파악이 어려울 수 있음 </li>\r\n                <span className=\"sstitle\"> 개방 폐쇄 원칙(Open/closed principle) </span>\r\n                <li> 클래스,모듈 함수 등은 쉽게 확장(코드 추가, 연결)이 되어야하고 수정에 대해서는 쉽게 일어나지 못하게\r\n                  닫혀있어야 한다는 원칙 </li>\r\n                <span className=\"sstitle\"> 리스코프 치환 원칙(Liskov substitution principle) </span>\r\n                <li> 부모 클래스자리에 자식 클래스를 넣어도 작동이 잘 되어야 한다는 뜻, 자료형P의 객체를 자료형 C의 객체로\r\n                  교체되어도 문제가 없어야 한다는 원칙 </li>\r\n                <span className=\"sstitle\"> 인터페이스 분리 원칙(Interface segregation principle) </span>\r\n                <li> 큰 덩어리의 인터페이스를 구체적이고 작은 단위들로 분리시킴으로 필요한 메서드 들만 이용한다는 원칙,\r\n                  필요없는 모듈이나 기능을 가지고 있지 않게 하는 의미도 있고\r\n                  인터페이스를 작은 단위들로 분리 시켜놓으면 리팩토링, 수정 등을 쉽게 할 수 있다. </li>\r\n                <span className=\"sstitle\"> 의존관계 역전 원칙(Dependency inversion principle) </span>\r\n                <li> 상위 모듈이 하위 모듈에 종속되어서는 안된다는 원칙, 하위 모듈에서 상위 모듈을 객체로 만들고\r\n                  그 객체의 상위모듈에 영향을 주게 된다면 제일 하위 모듈에서 코드를 수정하게 되면 상위모듈에 영향을\r\n                  미치게 되어 수정하기 어려운 경우가 될 수도 있다. </li>\r\n\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Spring Security\"> Spring Security </a> </span>\r\n              <small> 어플리케이션의 보안(인증,권한 등)을 처리하는 프레임워크  </small>\r\n              <li> 스프링 기반의 보안관련 프레임워크, 인증과 권한을 담당 </li>\r\n              <li> API서버에 특정 토큰을 Request헤더에 담아 보내면 인증이 완료되고\r\n                api 기능을 사용할 권한을 갖게 된다.  </li>\r\n              <li> 필터 기반으로 동작 </li>\r\n              <li> 세션-쿠키 방식으로 인증, DB에 검증이 된 회원일 경우 JSESSIONID부여한 후\r\n                다음 요청부터 JSESSIONID를 검증해서 유효하면 인증을 준다.\r\n              </li>\r\n              <li> 스프링 필터에는 엄청나게 많은 필터가 존재한다. </li>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 인증(Authorization) </span>\r\n                <li> 사용자가 맞는지 확인 </li>\r\n                <span className=\"sstitle\"> 인가(Authentication) </span>\r\n                <li> 인증 성공 후 사용자가 자원에 접근 가능한지를 결정하는 절차 </li>\r\n                <span className=\"sstitle\"> Principal(접근주체) </span>\r\n                <li> Resource에 접근하는 대상 </li>\r\n                <span className=\"sstitle\"> Credential(비밀번호) </span>\r\n                <li> Resource에 접근하는 대상의 비밀번호 </li>\r\n              </span>\r\n            </span>\r\n            <span className=\"mblock\">\r\n              <li className=\"stitle\" > <a name=\"Cors(Cross Origin Resource Sharing)\"> Cors(Cross Origin Resource Sharing) 교차 출처 자원 공유  </a>   </li>\r\n              <li> API서버에 SPA프레임워크(react,vue 등)을 사용하게 되면 스프링과SPA프레임워크의\r\n                포트가 다르거나 서버가 다르면 서로 자원을 공유할 수 없게 하는 보안 정책 </li>\r\n              <li> 스프링 시큐리티에서 특정 도메인을 열거나 닫을 수 있음 </li>\r\n              <li> 필터나 mvc설정 등으로 처리가능 </li>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"도메인\"> 도메인  </a> </span>\r\n              <a href=\"https://krnic.or.kr/jsp/popup/agencyFeePop.jsp\"> 도메인 비용 참고 </a>\r\n\r\n              <li> IP(255.255.255.1)이 아닌 문자로 사용하는 방식 </li>\r\n              <li> 서버의 확장 준비  </li>\r\n              <li> 서버를 분리하여 서버 기능의 명확성 과 문제발생시 빠른 문제점을 파악  </li>\r\n\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> 도메인이란? </span>\r\n                <li> www.naver.com </li>\r\n                <span className=\"sstitle\"> 서브 도메인 </span>\r\n                <li> m.naver.com </li>\r\n                <li> cafe.naver.com </li>\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"인증서\"> 인증서  </a> </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> SSL 인증서 </span>\r\n                <small> 인증서 등급 : OV </small>\r\n                <li> 도메인 * 서브도메인 갯수 만큼 받아야함 </li>\r\n                <li> *.naver.com 와 같이 사용하면 도메인 갯수 만큼 받아야함 </li>\r\n                <span className=\"sstitle\"> SAN 인증서 </span>\r\n                <small> 인증서 등급 : OV </small>\r\n                <li> 대표 도메인을 하나 두고 250개 까지 붙여서 사용 가능 </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"WWW(World Wide Web)\">  WWW(World Wide Web) </a> </span>\r\n\r\n              <li> 인터넷에 연결된 컴퓨터를 이용해 사람들과 정보를 공유하는 공간 </li>\r\n              <li> HTTP프로토콜을 기반으로 HTML 작성된 하이퍼텍스트 페이지를 웹브라우저에서 읽을 수 있는곳 </li>\r\n              <li>  </li>\r\n\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"서버\"> 서버 </a> </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> 서버의 종류 </span>\r\n                <li> Web, FTP(파일전송), DB, File(이미지,음악,동영상 등), WAS, Proxy , DNS(도메인-&gt;IP로 변경)\r\n                  MTA(메일 서버), TELNET(원격제어)    </li>\r\n                <span className=\"sstitle\"> Web 서버 </span>\r\n                <li> 정적 페이지 처리 </li>\r\n                <li> Apache , Nginx(추천) , IIS(비추)  </li>\r\n                <span className=\"sstitle\"> AWS 서버 </span>\r\n                <li> 동적 페이지 처리 </li>\r\n                <span className=\"sstitle\"> Proxy 서버 </span>\r\n                <li> 요청된 내용들을 캐시로 저장 </li>\r\n                <li> 원격서버에 접근해서 직접적으로 가져올 필요가 없음 , 시간 절약 </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> 서버 운영 방식 </span>\r\n                <div> 웹 호스팅 , 호스팅(외부) 업체에서 1개의 서버의 일부분을 빌려 사용, 월 결제 </div>\r\n                <li> 장점 : 비용부담적음 , 단점 : 서버 리모델링,제약조건 등에 불리 </li>\r\n                <div> 서버 호스팅 , 호스팅(외부) 업체에서 1개의 서버를 임대나 구매하여 운영 </div>\r\n                <li> 장점 : 리모델링, 높은 성능, , 단점 : 비용 증가 </li>\r\n                <div> 클라우드 </div>\r\n                <li> 서버 여러대를 호스팅으로 운영이 가능하다. </li>\r\n                <li> 장점 : 사용자 폭증해도 대응 가능, 단점 : 비용이 사용하는 만큼 나감 </li>\r\n                {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Dto, Dao, Vo, Entity\"> Dto, Dao, Vo, Entity </a> </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"업무 용어\"> 업무 용어 </a> </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 스타트업 관련 용어</span>\r\n                <li> Wrap-up : 전에 것을 다시 보다 </li>\r\n                <li> Silo : 팀간에 협조하지 않음 </li>\r\n                <li> Issue : 문제 </li>\r\n                <li> R&amp;R : 역할과 책임 </li>\r\n                <li> Squad : 독립적인 조직(10명 내외) </li>\r\n                <li> Agile : 업무환경에 바로 반응하고 적극적으로 소통 </li>\r\n                <li> MVP(Minimum Viable Product) : 최소한의 요건이 충족되는 제품 </li>\r\n                <li> Launching : 시장에 출시 </li>\r\n                <li> Daily Scrum : 짧은 회의(진행상황, 문제, 진행율, 도움원조 등 공유하는 시간) </li>\r\n                <li> Pivot : 사업 방향 전환 </li>\r\n                <li> Sprint : 짧은 시간에 완료하는 프로젝트 </li>\r\n                <li> Demo day : 스타트 업에서 사업제품, 방향 등을 모델을 공개하는 행사 </li>\r\n                <li> Accelerator : 스타트업을 지원해주는 단체 </li>\r\n                <li> Incubating : 하드웨어나 장비 등을 지원해주는 공간 </li>\r\n                <li> Milestone : 과정 중에 해야할 중간 목표 </li>\r\n                <li> Series A B C : 초기시장진입투자 , 진출단계투자 , 확대투자 </li>\r\n                <li> Angel Investor : 스타트업에 직접 투자하는 개인,소수 투자자 </li>\r\n                <li> Venture Capital : 투자 전문 회사나 자본 </li>\r\n                <li> Exit(엑싯) : 상장이나 매각을 통해 투자자들에게 수익을 주는것 </li>\r\n                <li>  </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n\r\n          </span>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Term;\r\n","import React from 'react';\r\n\r\nconst KeyMapVscode = (props) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"common_style\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<span className=\"lblock\">\r\n\t\t\t\t\t\t<span className=\"mtitle\"> 단축키 및 설정 </span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary className=\"stitle\"> ▶ VS Code 단축키 <a name=\"VS Code 단축키\" style={{ visibility: \"hidden\" }}> VS Code 단축키 </a> </summary>\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t\t<li> Ctrl + , : 설정창 이동 </li>\r\n\t\t\t\t\t\t\t\t\t<li> Alt + Shift + F : 포맷팅 단축키 </li>\r\n\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary className=\"stitle\"> ▶ VS Code 설정 <a name=\"VS Code 설정\" style={{ visibility: \"hidden\" }}> VS Code 설정 </a> </summary>\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> 탭 설정 </span>\r\n\t\t\t\t\t\t\t\t\t<li> 아래 파란색 줄 Tab Size: 4 를 변경하기 </li>\r\n\t\t\t\t\t\t\t\t\t<li> Indent Using Spaces : 들여쓰기를 공백으로 설정, Indent Using Tabs : 들여쓰기를 탭으로 설정 </li>\r\n\t\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary className=\"stitle\"> ▶ VS Code Prettier 설정  <a name=\"VS Code Prettier 설정\" style={{ visibility: \"hidden\" }}> VS Code Prettier 설정 </a> </summary>\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> 설정창으로 설정하는 방법 </span>\r\n\t\t\t\t\t\t\t\t\t<li> File - Preferences - settings - Extensions - Prettier </li>\r\n\t\t\t\t\t\t\t\t\t<li> File - Preferences - settings - 우측 상단에 -\r\n\t\t\t\t\t\t\t\t\t\tOpen Settings(JSON) 아이콘 클릭 - 구버전 방식의 Prettier 코드  추가적으로 입력 </li>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.printWidth (default: 80) <small> 한 줄의 글자수를 설정 </small> </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.tabWidth (default: 2) <small> 탭을 눌렀을 때 간격 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.singleQuote (default: false) <small> 객체, 배열, 함수 등 줄 뒤에 쉼표를 사용할지 선택 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> <small> none : 사용x , es5 : ES5에서 유효한 후행 쉼표 , all : 가능하면 후행 쉼표 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.bracketSpacing (default: true) <small> 객체 내부의 공백을 제어 </small></li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.jsxBracketSameLine (default: false) <small> jsx 요소 마지막 다음 줄에 닫기 &gt; 표시 </small> </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.parser (default: 'babylon') <small> javascript에서만 사용됨, 파서를 설정 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.semi (default: true) <small> 문장 뒤에 세미콜론 설정 여부 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.useTabs (default: false) <small> 탭이 있는 줄은 들여쓰기를 사용 여부 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.proseWrap (default: 'preserve') <small> 여러 줄에 걸쳐 산문을 랩핑 ??? </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.arrowParens (default: 'avoid') <small> 화살표 함수의 매개변수 주위에 괄호를 자동으로 붙힘 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.jsxSingleQuote (default: false)  <small> 큰 따옴표대신 작은 따옴표를 사용한다는 의미 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.htmlWhitespaceSensitivity (default: 'css') <small> HTML 파일의 공백 감도 지정 ??? </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.endOfLine (default: 'auto') <small> ? </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.quoteProps (default: 'as-needed') <small> 객체의 속성이 인용될 때 변경 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.requireConfig (default: false) <small> prettierconfig 파일 적용 선택 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.ignorePath (default: 파일명) <small> 파일명(.prettierignore)에 prettier이 적용 안되게함 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> prettier.disableLanguages (default: [\"vue\"]) <small> 확장 기능을 비활성화 할 언어 ID 목록 </small>  </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary className=\"stitle\"> ▶ 워크스페이스 관련 <a name=\"워크스페이스 관련\" style={{ visibility: \"hidden\" }}> 워크스페이스 관련 </a> </summary>\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> 워크스페이스 계단식으로 만들기 </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> File - Preferences - Settings - Features - Explorer - Compact Folders 체크 해제 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary className=\"stitle\"> ▶ 탭키가 작동하지 않을 때 <a name=\"탭키가 작동하지 않을 때\" style={{ visibility: \"hidden\" }}> 탭키가 작동하지 않을 때 </a> </summary>\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Ctrl + M을 누르면 해결 </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> Ctrl + M을 누르면 포커스 이동으로 바뀜 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary className=\"stitle\"> ▶ VS Code Extension 추천\r\n\t\t\t\t\t\t\t\t\t<a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Auto Rename Tag </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> HTML 여는태그와 닫는태그를 동시에 수정 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Auto Close Tag </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> HTML 여는태그만 입력해도 닫는태그가 자동으로 생성 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Bracket Pair Colorizer 2 </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 괄호에 맞춰 색상을 변경 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> colorize , Color Highlight </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> css에서 색을 입력하면 css코드에서 색을 보여줌 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Prettier </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 코드를 정렬해주고 양식에 맞게 설정해줌 , 추가적인 코드가 필요하다. </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> 필요하다면 인터넷에 검색 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Css Peek </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> Ctrl 버튼을 누르고 마우스 왼쪽을 클릭하면 참조된 위치로 이동이 가능하다. </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Highlight Matching Tag </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 현재 태그의 쌍이 어디인지를 알려준다. </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> vscode-icons , Material Icon Theme </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 기존 vscode의 파일 아이콘을 변경하는 기능 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> npm Intellisense </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 라이브러리의 이름이 일부 일치하면 코드를 추천해주는 기능 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Bookmarks </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> ctrl + alt + k 를 코드 줄에서 누르면 좌측 북마크 목록에 기록이 된다. </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Korean Language Pack for Visual Studio Code </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 한국어 팩 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Settings Sync </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 기존에 개발환경 세팅을 GitHub gist에 업로드 해놓고서 사용 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> settings.json도 동기화 가능 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Theme 종류 </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 코드의 태그,클래스, 등등의 색깔을 바꾸거나 배경의 색, 테두리 색등을 바꾸는 기능 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> 너무 많아서 본인에게 맞는 것을 찾아서 사용 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Indent Rainbow </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 탭 간격을 색깔로 구분지어서 보여주는 기능 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Html Css Support </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> html에서 css를 추천해주는 기능 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Live Server </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 코드를 작성하면 바로 브라우저에서 적용해서 보여주는 기능 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Todo Tree </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 주석으로 내가 무엇을 하려고 했는지 표시를 해주고 기록해주는 기능 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Better Comments </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 주석에 색을 입히는 것이 가능하다 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> REST Client </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Sort Lines </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> 드래그를 한 후에 설정을 하면 코드가 알파벳 순서로 정렬이 되게 하는 기능 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary className=\"stitle\"> ▶ VS Code Snippet\r\n\t\t\t\t\t\t\t\t\t<a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\"> 설정 </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li> File - Preferences - User Snippets </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> New Global Snippets File </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> 아래와 같이 스니펫 정의하기 </li>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {'{'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\t\"스니펫이름\": {'{'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> \"scope:\" \"사용언어\", </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> \"prefix\": \"스니펫약어, 코드에서 쓰는 약어\" </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li> \"body\": [ </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li> \"내용1\", </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li> \"내용2\", </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> ], </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> \"description\": \"스니펫설명\" </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<li> https://code.visualstudio.com/docs/editor/userdefinedsnippets 참고 </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> 이미 extension으로 스니펫이 있으니 기존에 있는 것을 사용하는 것을 추천 </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n\t\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default KeyMapVscode;","import React from 'react';\r\n\r\nconst KeyMapIntellij = (props) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"common_style\" >\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<span className=\"lblock\">\r\n\t\t\t\t\t\t<span className=\"mtitle\"> 단축키 및 설정 </span>\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> Intellij  </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\"> <a name=\"Intellij 단축키\"> Intellij 단축키 </a> </span>\r\n\t\t\t\t\t\t\t\t<li> <a href=\"https://gmlwjd9405.github.io/2019/05/21/intellij-shortkey.html\" target=\"_blank\"> 참고 </a></li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + D   : 코드 한줄 아래 복사 붙여넣기 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + R   : 내용 바꾸기 </li>\r\n\t\t\t\t\t\t\t\t<li> Alt + Insert   : 생성자, getter,setter 등 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + O : 오버라이딩 메소드 선택 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + X   : 코드 한줄 지우기 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + Alt + l   : 코드 정리 </li>\r\n\t\t\t\t\t\t\t\t<li> Alt + Shift + 방향키   :  코드 라인 위치 옮기기 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + /   : 해당 줄 주석 처리 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + E   : 최근 실행 파일 확인 </li>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t<li> Alt + 1  : Project View 열고 닫기 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + Shift + T   : 테스트 코드 작성 </li>\r\n\t\t\t\t\t\t\t\t<li> Shift + F6   : 이름 변경(동일이름 전부 변경) </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + A   : 코드 전체 드래그 </li>\r\n\t\t\t\t\t\t\t\t<li> Alt + Enter   :  코드 수정 제안 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + B   : 코드에서 선택된 필드 코드로 이동 </li>\r\n\t\t\t\t\t\t\t\t<li> Alt + F7   : 항목이 사용된 위치를 모두 표시 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + W   : 코드 주위 영역 드래그 확대 </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + Shift + W   : 코드 주위 영역 드래그 축소 </li>\r\n\t\t\t\t\t\t\t\t<li> Shift + Ctrl + A   : 모든 액션을 검색 가능  </li>\r\n\t\t\t\t\t\t\t\t<li> Ctrl + Alt +Shift + T : 무엇인가를 실행할 때 윈도우용 단축키를 보는 방법(미확인) </li>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"Intellij 설정\"> Intellij 설정 </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\"> 폰트 크기 마우스 휠로 설정하기 </span>\r\n\t\t\t\t\t\t\t\t<li>  File - Settings - Editor - General - Change font size with Ctrl+Mouse Wheel 체크하기 </li>\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\"> 자동 저장 설정 , 저장하지 않은 파일 표시 </span>\r\n\t\t\t\t\t\t\t\t<li> File - Settings - Appearance &amp; Behavior - Systme Settings - Autosave탭</li>\r\n\t\t\t\t\t\t\t\t<li> File - Settings - Editor - General - Editor Tabs - Mark modified(*) 체크 </li>\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\"> 탭 갯수 제한 설정 </span>\r\n\t\t\t\t\t\t\t\t<li> File - Settings - Editor - General - Editor Tabs - Tab limit: 갯수 설정하기 </li>\r\n\t\t\t\t\t\t\t\t<li>   </li>\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\"> Gradle 사용할 경우 실행 속도를 빠르게 하기 위한 설정 </span>\r\n\t\t\t\t\t\t\t\t<li> File - Settings - Build,Extension,Deployment - Build Tools - Gradle - Build and run using, Run tests using\r\n\t\t\t\t\t\t\t\t\t을 둘다 Intellij IDEA 로 바꾸기 </li>\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default KeyMapIntellij;","import React from 'react';\r\n\r\nconst KeyMapEclipse = (props) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"common_style\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<span className=\"lblock\">\r\n\t\t\t\t\t\t<span className=\"mtitle\"> 단축키 및 설정 </span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"Eclipse 단축키\"> Eclipse 단축키 </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"Eclipse Spring 설정\"> Eclipse Spring 설정 </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li> <i> 초기 설정 </i> </li>\r\n\t\t\t\t\t\t\t\t<li> <i>1.</i> Window - Preferencs - enc 입력 - Workspace, Css Files, HTML Files, JSP Files 인코딩\r\n\t\t\t\t\t\t\t\t\tUTF-8로 모두 바꾸어 주기  </li>\r\n\t\t\t\t\t\t\t\t<li> <i>2.</i> Help - Eclipse MarketPlace - Spring Tools 3(Standalone Edition) 설치 </li>\r\n\t\t\t\t\t\t\t\t<li> <i>3.</i> Help - Eclipse MarketPlace - Spring Tools 3(Add-On for Spring Tools)) 설치?? </li>\r\n\t\t\t\t\t\t\t\t<li> <i>4.</i> Help - Install New Software - Add - Name에 STS ,\r\n\t\t\t\t\t\t\t\t\tLocation에 https://dist.springsource.com/snapshot/TOOLS/nightly/e4.18 입력\r\n\t\t\t\t\t\t\t\t\t그리고 Add버튼 클릭\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> <i>5.</i> 체크박스 모드 체크 그리고 Next 버튼 클릭 그리고 모두 동의 및 Next </li>\r\n\t\t\t\t\t\t\t\t<li> <i>6.</i> File - New - Other - spring 입력 - Spring Legacy Project - 프로젝트 이름 입력-\r\n\t\t\t\t\t\t\t\t\ttemplates에서 Spring MVC Project로 선택 하고 다음 - com.spring.app 와 같이 3단계 이상으로\r\n\t\t\t\t\t\t\t\t\t이름 입력\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> <i>7.</i> 프로젝트 우클릭 - Properties - Project Facets - 자바버전 맞추어주기\r\n\t\t\t\t\t\t\t\t\t(cmd창에서 java -version 으로 확인가능) - 우측에 runtimes 탭에 가서 - 아파치톰캣버전 선택하고 apply </li>\r\n\t\t\t\t\t\t\t\t<li> <i>8.</i> src/main/resources 에서 log4j.xml만 남기고 다 삭제 </li>\r\n\t\t\t\t\t\t\t\t<li> <i>9.</i> src - main - webapp - WEB-INF - spring과 views 파일 삭제 그리고 web.xml에 &lt;web-app&gt; 상단\r\n\t\t\t\t\t\t\t\t\t부분 뺴고 내부에 맵핑코드 삭제 </li>\r\n\t\t\t\t\t\t\t\t<li> <i>10.</i> pom.xml에 springframework버전을 4.2.4로 수정을 하고 강제 업데이트 하기</li>\r\n\t\t\t\t\t\t\t\t<li> <i>11.</i> 프로젝트 우클릭 - Maven - Update Project - 확인</li>\r\n\t\t\t\t\t\t\t\t<li> <i>12.</i> 제대로 설치되었으면 Java Resources - Libraries - Maven Dependencies 에서 버전 확인 </li>\r\n\t\t\t\t\t\t\t\t<li> <i>13.</i> 혹시 포로젝트 익스프롤러에 빨간줄이 보이면 버전이 자바버전이 틀려서 그럴수 있음\r\n\t\t\t\t\t\t\t\t\tpom.xml에거서 java-version, 아래쪽에 maven.plugins에 source,target 버전을 11(본인버전)으로 변경하고\r\n\t\t\t\t\t\t\t\t\t강제 업데이트 </li>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"stitle\">  </span>\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default KeyMapEclipse;","import React from 'react';\r\n\r\nconst KeyMapWindow = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mtitle\"> 단축키 및 설정 </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Window 단축키\"> Window 단축키 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 내가 자주 사용하는 Window 단축키 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> F2 : 폴더이름 바꾸기  </li>\r\n                                <li> Win + 방향키 : 화면 분할 </li>\r\n                                <li> Win + S : 윈도우 검색창 열기 </li>\r\n                                <li> Win + L : 화면 잠금 </li>\r\n                                <li> Win + E : 파일 탐색기 열기 </li>\r\n                                <li> Win + R : 실행 파일 열기 </li>\r\n                                <li> Win + D : 모든 프로그램,브라우저 최소화 , 한번더 클릭하면 원래대로 </li>\r\n                                <li> Win + 숫자키 : 작업 표시줄에 고정된 프로그램 실행 </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> Window 단축키 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> Win + I : 윈도우 설정창 열기 </li>\r\n                                <li> Win + Ctrl +D : 가상 데스크탑 생성 </li>\r\n                                <li> Win + Ctrl + 방향키 : 가상 데스크탑 이동 </li>\r\n                                <li> Win + Tab : 모든 가상 데스크톱 보기 </li>\r\n                                <li> Win + Ctrl + F4 : 현재 창 닫기 </li>\r\n                                <li> Win + , : 누르고 있는 동안 바탕화면 보기 </li>\r\n                                <li> Win + Home : 현재 보고 있는 창을 제외한 창들은 모두 최소화 </li>\r\n                                <li> Win + '+' , Win + '-' : 브라우저 화면 확대, 축소(돋보기 용도) </li>\r\n                                <li> Win + Shift + S : 화면 캡쳐 관리창 열기 </li>\r\n                                <li> Win + . : 이모지 아이콘 보기 </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 부팅 후 자동으로 프로그램 실행 <a name=\"부팅 후 자동으로 프로그램 실행\" style={{ visibility: \"hidden\" }}> 부팅 후 자동으로 프로그램 실행 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> shell:startup 폴더 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 실행창 - shell:startup 검색 - 이 파일에 원하는 프로그램 넣기 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 작업 스케줄러 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 작업 스케줄러 - 작업만들기 - 이름 작성 후 트리거 클릭 - 작업 시작 - \"시작할 때\"로 변경 </li>\r\n                                    <li> 그리고 동작 클릭 - 새로만들기 - 찾아보기 - 원하는 프로그램 클릭 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default KeyMapWindow;","import React from 'react';\r\n\r\nconst KeyMapBrowser = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default KeyMapBrowser;","import React from 'react';\r\n\r\nconst GithubBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mtitle\"> 깃허브 </span>\r\n                        <small> 분산형 저장소, 형상관리 Tool </small>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"깃허브와 관련된 용어\"> 깃허브와 관련된 용어 및 명령어 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Git 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 깃을 사용하는 이유\r\n                                        <li> 이전 버전의 코드 불러오기 </li>\r\n                                        <li> 개발자들과의 협업에서 잘못된 코드 복원 용도 </li>\r\n                                        <li> 개발자들끼리의 코드(작업 상황) 공유  </li>\r\n                                        <li> 새로운 버전 백업  </li>\r\n                                    </li>\r\n                                    <li> git은 로컬과 원격저장소(Github)에서 관리가 가능하다. </li>\r\n                                    <li> git은 CLI(터미널)을 이용하여 명령어로 작업을 수행  </li>\r\n                                    <li> Source Tree라는 GUI 어플리케이션이 있음 </li>\r\n                                    <li> git은 작업을 따로 하다가 하나로 합칠수도 있다. </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> Git 명령어 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> git-version : git 버전을 확인 </li>\r\n                                    <li> git init : git에 파일을 연동 # 로컬에 저장소를 생성 </li>\r\n                                    <li> git add . : git에 파일은 올려놓음(임시공간에 잠시 보관) </li>\r\n                                    <li> git remote add origin 깃허브저장소주소 # 깃허브에 연결 </li>\r\n                                    <li> git push origin master : github 저장소에 파일을 올리기 </li>\r\n                                    <li> git fetch # 깃허브에서 local 저장소로 파일을 가져옴 </li>\r\n                                    <li> git merge # git을 합침, 이거는 에러도 발생하는 것으로 기억 </li>\r\n                                    <li> git pull # git fetch + git merge 사용 </li>\r\n                                    <li> git status # git에 현재상태를 보는 방법 </li>\r\n                                    <li> git clone # 깃허브에서 전체 내용을 가져옴 </li>\r\n                                    <li> git commit -m \"메모\" # 로컬 저장소에 저장(C언어의 포인터 같이 저장된 데이터의 위치를 기억) </li>\r\n                                    <li> git branch \"브랜치명\" # 브랜치를 생성 </li>\r\n                                    <li> git merge \"브랜치명\" # 마스터 브랜치에 브랜치를 합침 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"깃허브에 파일 올리는 방법\"> 깃허브에 파일 올리는 방법 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Git Bash를 이용하여 파일 업로드 </span>\r\n                                <small> <a href=\"https://www.git-scm.com/download\" target=\"_blank\"> Git Bash 다운로드 링크 </a> </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. cd 폴더주소 : 연결할 폴더로 이동 </li>\r\n                                    <li> 2. git init : git에 파일을 연동 </li>\r\n                                    <li> 3. git remote add origin 깃허브저장소주소 </li>\r\n                                    <li> 4. git add . </li>\r\n                                    <li> 5. git commit -m \"커밋내용\" </li>\r\n                                    <small> error: src refspec main does not match any 에러가 날때 해결가능 </small>\r\n                                    <li> 6. git push origin master </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\"> 깃허브에 폴더 올리는 방법 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 처음일때 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. git에 저장소를 생성 </li>\r\n                                    <li> 2. git bash 명령어 사용 (터미널)\r\n                                        <li> C/AA/BB , BB라는 폴더를 깃에 올리고 싶다면 C/AA 경로에서 git bash 명령어 입력 </li>\r\n                                    </li>\r\n                                    <li> git status </li>\r\n                                    <li> git add 폴더명(BB) </li>\r\n                                    <li> git commit -m \"메모\" </li>\r\n                                    <li> git remote add origin https://github.com/깃허브리포지토리명\r\n                                        <li> 상위 폴더에 깃이 연결되어 있다면 git remote -v </li>\r\n                                    </li>\r\n                                    <li> git push origin master </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 처음이 아닐때 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> git add 폴더명(BB) </li>\r\n                                    <li> git commit -m \"메모\" </li>\r\n                                    <li> git push origin master </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\"> 깃허브 리포지토리 삭제하는 방법 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> git remote remove origin # 기존 리포지토리에 연결되어 있는 것을 제거 </li>\r\n                                    <li> git remote add origin https://github.com/깃허브아이디/리포지토리 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\"> </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default GithubBasic;\r\n\r\n","import React from 'react';\r\n\r\nconst RefBlog = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"참고 블로그\">  참고 블로그  </a> </span>\r\n                    <p> <small> 공부에 도움되는 블로그를 모으고 공부한 내용 정리 </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"우아한 형제들\"> 우아한 형제들  </a> </span>\r\n                        <a href=\"https://techblog.woowahan.com/\"> 우아한 형제들 기술 블로그 링크  </a>\r\n\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default RefBlog;\r\n\r\n","import React from 'react';\r\n\r\nconst PythonBasic = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mtitle\"> 파이썬 공부 </span>\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 설치\r\n                                    <a name=\"설치\" style={{ visibility: \"hidden\" }}> 설치 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <li> <h4> vscode에 설치 </h4> </li>\r\n                                    <li> vscode extension에 가서 Python, python for VSCode , Python Extension Pack 설치 </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                    <li> <h4>  </h4> </li>\r\n                                    <li>  </li>\r\n                                    <li> <h4>  </h4> </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ Python이란?\r\n                                    <a name=\"Python이란?\" style={{ visibility: \"hidden\" }}> Python이란? </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <li> <small> 인터프리터 언어 </small> </li>\r\n                                    <li> <small> .py코드 실행 - 바이트 코드 상태 - PVM(파이썬 가상 머신) - 처리 </small> </li>\r\n                                    <li> <small> 객체지향언어 지원 </small> </li>\r\n                                    <li> <small> 자료형이 정해져 있지 않음, 변수를 따로 선언하지도 않음 </small> </li>\r\n                                    <li> <small> 영상처리, 딥러닝 등 수학적인 내용이 들어갈때 자바보다 유리한것 같다.(numpy를 사용) </small> </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 출력메소드\r\n                                    <a name=\"출력메소드\" style={{ visibility: \"hidden\" }}> 출력메소드 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 메소드 - 문자열 메소드 참고 </small>\r\n                                    <span className=\"sstitle\"> 문자열 형식 </span>\r\n                                    <li> %d(정수), %o(8진수) , %x(16진수), %f(실수), %s(문자열) </li>\r\n                                    <span className=\"sstitle\"> 이스케이프 문자 </span>\r\n                                    <li> \\' , \\\" , \\n , \\t , \\\\ , \\b 등등 </li>\r\n                                    <span className=\"sstitle\"> print()함수 </span>\r\n                                    <li>  print('hello') </li>\r\n                                    <li>  print('hello', end='') , #줄을 바꾸지 않고 출력 </li>\r\n                                    <li>  print('hello' + 'world') , 공백없음 </li>\r\n                                    <li>  print('hello+\"world\"') , \"\"지워지지 않고 존재 </li>\r\n                                    <li>  print('hello'+end='abc') , hello 끝에 abc추가 , 그리고 개행(new line)을 하지 않음</li>\r\n                                    <li>  print('hello'+'world',sep='&nbsp;') , &nbsp;문자로 구분을 한다. </li>\r\n                                    <li>  print('hello'+'world') </li>\r\n                                    <li>  print('hello'+'world',file=sys.stdout) , 사용하면 모니터에 출력x? 확인필요 </li>\r\n                                    <li>  print('hello'+'world',flush=false) ,  </li>\r\n                                    <li>  pirnt('''asd asd asd''') , 여러줄을 줄바꿈 하여서 출력하기 </li>\r\n                                    <li>  print(변수) ,변수 출력 </li>\r\n                                    <li>  f=open('파일명.txt','w') , print('hello',file=f) , 텍스트 파일에 출력내용이 저장이 된다 </li>\r\n                                    <li>  str1 = '%s는 %d원입니다' print(str1%(변수,변수))  </li>\r\n                                    <li>  print('%d,%f,%s',(변수,변수,변수)) , 데이터 타입에 맞게 출력</li>\r\n                                    <li>  print('%5d,%2.2f,%2s',(변수,변수,변수)) , 자릿수와 소수점을 고려한 출력방법 </li>\r\n                                    <li>  print('%5d,%2.2',(변수,변수)) , 자릿수와 소수점을 고려한 출력방법</li>\r\n                                    <li>  print('{\"{}\"},{\"{}\"},{\"{}\"}'.format(변수,변수,변수)) , 순서대로 출력</li>\r\n                                    <li>  print('{\"{2}\"},{\"{1}\"},{\"{0}\"}'.format(변수,변수,변수)) , 순서를 바꾸어서 사용가능 </li>\r\n                                    <li>  print('{\"{a}\"},{\"{b}\"},{\"{c}\"}'.format(a=변수,b=변수,c=변수)) </li>\r\n                                    <li>  print('{\"{0[a]}\"},{\"{0[b]}\"}'.format(locals())) , 변수로 선언된 변수들이 맞게 들어감 </li>\r\n                                    <li>  print('{\"{a}\"},{\"{b}\"}'.format(**locals())) , 변수로 선언된 변수들이 맞게 들어감 </li>\r\n                                    <li>  print(True) , True가 출력됨 </li>\r\n                                    <li>  pirnt(list(range(1,5)) , 1~5가 배열로 출력) </li>\r\n\r\n                                    <span className=\"sstitle\"> f-string 문자열 포매팅(파이썬 버전 3.6이상) </span>\r\n                                    <li> print(f'hello{\"{변수}\"}') </li>\r\n                                    <li> print(f'hello{\"{변수}\"}:^10') , 총 10칸 가운데 정렬</li>\r\n                                    <li> print(f'hello{\"{변수}\"}:&gt;10') ,총 10칸 우측 정렬</li>\r\n                                    <li> print(f'hello{\"{변수}\"}:&lt;10') ,총 10칸 좌측 정렬</li>\r\n                                    <span className=\"sstitle\"> 출력 모양(별로 필요없는 내용이라 접어둠) </span>\r\n                                    <details>\r\n                                        <summary> 출력의 모양(간격조정) </summary>\r\n                                        <li> print('hello'.center(10)) </li>\r\n                                        <li> print('hello'.rjust(10,\"@\")) , 글자수가 부족한 부분은 왼쪽에 특정문자로 채움 </li>\r\n                                        <li> print('hello'.ljust(10,\"@\")) , 글자수가 부족한 부분은 우측에 특정문자로 채움 </li>\r\n                                        <li> print('hello'.zfill(10) , 글자수가 부족한 부분은 왼쪽에 0으로 채움) </li>\r\n                                        <li> print('hello'.capitalize() , 첫글자만 대문자) </li>\r\n                                        <li> print('hello'.upper()) , 대문자로 변경 </li>\r\n                                        <li> print('hello'.lower()) , 소문자로 변경 </li>\r\n                                    </details>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 주석\r\n                                    <a name=\"주석\" style={{ visibility: \"hidden\" }}> 주석  </a> </summary>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <span className=\"sstitle\"> 한줄 주석 </span>\r\n                                    <li> # </li>\r\n                                    <span className=\"sstitle\"> 여러줄 주석 </span>\r\n                                    <li> ''' ''' 혹은  \"\"\" \"\"\" </li>\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 자료형과 변수\r\n                                    <a name=\"자료형과 변수\" style={{ visibility: \"hidden\" }}>  자료형과 변수 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 변수 </span>\r\n                                    <li> 파이썬의 변수는 자료형을 따로 지정하지 않아도 변수의 값에 따라서 알아서 지정을 해준다.\r\n                                        그러므로 대입연산자(=)를 사용해서 값만 넣어주면 변수가 생성이 된다. </li>\r\n                                    <span className=\"sstitle\"> 자료형  </span>\r\n                                    <li> 정수(int), 실수(float), 논리(bool), 문자열,   </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 문자열\r\n                                    <a name=\"문자열\" style={{ visibility: \"hidden\" }}> 문자열  </a> </summary>\r\n                                <p> 문자열은 추가,중복,순서,정렬 등은 되지만 수정은 되지 않는다.  </p>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 인덱싱(indexing) </span>\r\n                                    <li> 문자열[인덱스] </li>\r\n                                    <li> 문자열[-인덱스]  # -1이 제일 뒷문자 </li>\r\n                                    <span className=\"sstitle\"> 슬라이싱(slicing) </span>\r\n                                    <li> 문자열[start:end:step]  </li>\r\n                                    <li> 문자열[start:end] </li>\r\n                                    <li> 문자열[start:] </li>\r\n                                    <li> 문자열[:end] </li>\r\n                                    <span className=\"sstitle\"> 문자열 길이(len) </span>\r\n                                    <li> len(문자열)  </li>\r\n                                    <span className=\"sstitle\"> 여백공간제거(strip) </span>\r\n                                    <li> 문자열.strip() </li>\r\n                                    <span className=\"sstitle\"> 특정기호로 구분하여 리스트로 반환(split) </span>\r\n                                    <li> 리스트 = 문자열.split(\"특수문자,문자\")  </li>\r\n                                    <span className=\"sstitle\"> 문자열 연산 </span>\r\n                                    <li> 문자열3 = 문자열1 + 문자열2 </li>\r\n                                    <li> 문자열3 = 문자열1 * 10 </li>\r\n                                    <span className=\"sstitle\"> 문자열 포맷팅 </span>\r\n                                    <li> \"%s\" % [\"문자열\" | 문자열변수 ]</li>\r\n                                    <li> \"%d\" % [숫자 | 숫자변수 ] </li>\r\n                                    <li> \"%s %d\" % ([\"문자열\" | 문자열변수 ], [숫자 | 숫자변수 ]) </li>\r\n                                    <li> %c %s %d %f %o %x %%(\"%\" 문자출력) </li>\r\n                                    <li> %숫자s : 숫자만큼 좌측으로 공간을 비움 </li>\r\n                                    <li> %0.숫자f : 소수점 몇 째 짜리까지 나타낼지 </li>\r\n                                    <li> \" {'{0}'} \".format(3) </li>\r\n                                    <li> \" {'{name}'} \".format(name=값) </li>\r\n                                    <li> \" {'{0:>10}'} \".format(3) # 우측정렬 공간 10칸 </li>\r\n                                    <li> \" {'{0:문자>10}'} \".format(3) # 우측정렬 공간 10칸 , 빈공간은 문자로 채움 </li>\r\n                                    <span className=\"sstitle\"> 문자열 함수 </span>\r\n                                    <li> 문자열.replace(\"바꿀문자열\",\"대체할문자열\") </li>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 연산자\r\n                                    <a name=\"연산자\" style={{ visibility: \"hidden\" }}> 연산자  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 산술 연산자 </span>\r\n                                    <li> +, -, *, **(제곱) , / , //(몫) , %(나머지)  </li>\r\n                                    <li>  문자열에 *를 사용하면 문자열이 2번 반복이 된다. </li>\r\n                                    <span className=\"sstitle\"> 대입 연산자, 복합대입 연산자 </span>\r\n                                    <li>  =, +=, -=, *=, **= , /= ,//= , %= </li>\r\n                                    <span className=\"sstitle\"> 관계 연산자 </span>\r\n                                    <li> &gt;, &gt;=, &lt;, &lt;=, ==, != </li>\r\n                                    <span className=\"sstitle\"> 논리 연산자 </span>\r\n                                    <li> and, or, not  </li>\r\n                                    <span className=\"sstitle\"> 비트 연산자 </span>\r\n                                    <li> &nbsp;, |, ^, ~, &lt;&lt;, &gt;&gt;   </li>\r\n                                    <span className=\"sstitle\"> 기타 연산자 </span>\r\n                                    <li>  시퀸스 연산(리스트, 튜플 등 데이터 구조가 있는 곳에서 사용 가능) , * 혹은 + 사용  </li>\r\n                                    <li>  'a' in 문자열 : 문자열에 a라는 문제가 있으면 true, 없으면 false (멤버쉽연산자)</li>\r\n                                    <li>  변수 = 조건식 ? 참 : 거짓 : 삼항연산자  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 입력메소드\r\n                                    <a name=\"입력 메소드\" style={{ visibility: \"hidden\" }}>  입력메소드 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> input() </span>\r\n                                    <li> 2.x 버전에서 입력값을 받아 판단하고 그에 맞게 자료형으로 초기화 </li>\r\n                                    <li> 표준 입력 장치(키보드)로 입력받을 때 사용  </li>\r\n                                    <li> raw_input() # 입력값을 문자열로만 받음, 2.x버전에서만 존재, 3.x에서는 사라짐  </li>\r\n                                    <li> input('') 입력은 문자열로 반환하므로 다른 자료형은 형변환을 해야한다.  </li>\r\n                                    <li> input('입력을 하시오 : ')  </li>\r\n                                    <li> input().split() , 입력값을 띄어쓰기로 구분하여 저장  </li>\r\n                                    <li> input().split(\",\") , 입력값을 \",\" 로 구분하여 저장  </li>\r\n                                    <li> input().split(\",\")   </li>\r\n                                    <li> str = input('')   </li>\r\n                                    <li> x = int(input())   </li>\r\n                                    <li> x = float(input())   </li>\r\n                                    <li> x,y = map(int,input().split())   </li>\r\n                                    <span className=\"sstitle\"> import sys  </span>\r\n                                    <li> a = sys.stdin # 여러줄 입력 </li>\r\n                                    <li> a = sys.stdin.readline() # 한줄 입력 \\n 개행문자 끝에 존재 </li>\r\n                                    <li> a = sys.stdin.readline().strip() # 한줄 입력 , 앞뒤로 개행 문자 제거 </li>\r\n                                    <li> x,y = map(int,sys.stdin.readline().split()) # 한줄 입력 \\n 개행문자 끝에 추가됨 </li>\r\n                                    <li> 혹시 알고리즘 문제를 풀다가 EOF, ValueError 문제가 생긴다면\r\n                                        <li> for line in sys.stdin: # 이와 같이 사용해서 해결  </li>\r\n                                    </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 리스트(list)\r\n                                    <a name=\"리스트(list)\" style={{ visibility: \"hidden\" }}> 리스트(list)  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 리스트 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 타입이 다르더라도 하나의 리스트에 저장 가능  </li>\r\n                                        <li> {'{}'}기호를 이용하여 사용  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트와 문자열 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 객체 = \"\".join(리스트) <small> # 리스트를 문자열로 반환 </small>  </li>\r\n                                        <li> 객체 = \"특수문자,문자\".join(리스트) <small> # 리스트를 문자를 구분자로 사용하여 반환 </small>  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 기타 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> len(리스트) <small> 리스트 길이 보기 </small> </li>\r\n                                        <li> 리스트.count(요소) <small> 리스트의 요소의 갯수를 반환  </small> </li>\r\n                                        <li> 리스트[인덱스1],리스트[인덱스2] = 리스트[인덱스2],리스트[인덱스1] <small> 리스트 SWAP </small> </li>\r\n                                        <li> 요소 in 리스트 <small> 리스트에 요소가 있는지 확인 , boolean 값으로 반환 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 위치 , 인덱싱,  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트.index(요소) <small> 리스트에서 맞는 요소 값의 위치 반환, 요소가 없으면 ValueError  </small> </li>\r\n                                        <li> 리스트[인덱스]  <small> # 리스트 인덱싱(음수값도 지원) </small> </li>\r\n                                        <li> 리스트[:인덱스] , 리스트[인덱스:] , 리스트[인덱스:인덱스] <small> 리스트 슬라이싱 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 추가, 생성, 수정 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트1 = 리스트2 + 리스트3 <small> # +연산을 이용하여 리스트 합치기 </small> </li>\r\n                                        <li> 리스트1 = 리스트2 * 5 <small> # *연산을 이용하여 리스트 여러개 추가하기 </small> </li>\r\n                                        <li> 리스트[인덱스] = 값 , 리스트[-인덱스] = 값 <small> # 리스트 값 수정하기 </small> </li>\r\n                                        <li> 리스트.append(요소) <small> # 리스트 뒤에 요소(값,리스트) 추가 </small> </li>\r\n                                        <li> 리스트.update([리스트],값) <small> # 리스트 뒤에 여러 요소 추가 </small> </li>\r\n                                        <li> 리스트.insert(a,b) <small> 리스트의 a번째에 b값을 넣는다, 남은 요소들 인덱스는 뒤로 밀린다.\r\n                                            만약에 넣은 요소위치 앞쪽이 비어있으면 비어있는 공간을 제외하고 리스트의 제일 뒤에 추가한다. </small> </li>\r\n                                        <li> 리스트.extend(리스트) <small> 기존 리스트에 리스트를 더해서 확장 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 1차원 배열 만들기 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 배열 = [0]*10 <small> # 1차원 배열 만들기 </small> </li>\r\n                                        <li> 배열 = [[0] for i in range(10)] <small> # 연산을 이용하여 리스트 여러개 추가하기 </small> </li>\r\n                                        <li> 배열 = [[0] for i in range(10) if 조건 ] <small> # 조건에 맞는 배열 생성 </small> </li>\r\n                                        <li> 배열 = [값1,값2,값3] <small> 1차원 배열 만들기 </small> </li>\r\n                                        <li> 배열 = [값1,값2,값3] <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 2차원 배열 만들기 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 배열 = [[값1,값2,값3],[값1,값2,값3]] <small> 2차원 배열 만들기 </small> </li>\r\n                                        <li className=\"col_r\"> list = [0 * col] * row <small> 잘못된 2차원 배열 만들기 </small> </li>\r\n                                        <li> list = [[0 for col in range(10) ] for row in range(10)] <small> 2차원 배열 만들기 </small> </li>\r\n                                        <li> list = [[0 * col ] for row in range(10)] <small> 2차원 배열 만들기 </small> </li>\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 순서 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트.sort() <small> 리스트 정렬하기 , 반환값은 None , 원본이 바뀜 </small> </li>\r\n                                        <li> 리스트.sort(reverse=True) <small> 리스트 역정렬하기 , 반환값은 None , 원본이 바뀜 </small> </li>\r\n                                        <li> 리스트.reverse() <small> 리스트 순서 바꾸기 , 반환값은 None , 원본이 바뀜 </small> </li>\r\n                                        <li> 리스트2 = sorted(리스트1) <small> 리스트를 정렬해서 반환, 깊은복사처럼 정렬됨 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 삭제 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> del 리스트[인덱스] <small> 리스트 요소 삭제하기 </small> </li>\r\n                                        <li> del 리스트[인덱스:] <small> 리스트 요소 슬라이싱 이용하여 삭제하기 </small> </li>\r\n                                        <li> 리스트.remove(요소) <small> 리스트 제일 앞에 보이는 요소를 제거한다. </small> </li>\r\n                                        <li> 리스트.pop() <small> 리스트 마지막 요소를 반환하고 삭제 </small> </li>\r\n                                        <li> 리스트.pop(인덱스) <small> 리스트 인덱스 요소를 반환하고 삭제  </small> </li>\r\n                                        <li> 리스트.clear() <small> 리스트 초기화, 빈 배열존재 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 복사 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트1 = 리스트2.copy() <small> 리스트 깊은복사 </small> </li>\r\n                                        <li> 리스트1 = 리스트2 <small> 리스트 얕은복사 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 형변환 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> list1 = list(튜플) <small> 튜플을 리스트로 변환 </small> </li>\r\n                                        <li> list1 = list(세트) <small> 세트를 리스트로 변환 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 중복 요소 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트2 = list(set(리스트)) <small> 리스트의 중복요소를 제거하고 리스트로 반환 </small> </li>\r\n                                        <li> 리스트1 = list(set(리스트2).intersection(리스트3)) <small> 리스트2와 리스트3의 중복요소 반환 </small> </li>\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 튜플(tuple)\r\n                                    <a name=\"튜플(tuple)\" style={{ visibility: \"hidden\" }}> 튜플(tuple) </a> </summary>\r\n                                <small> 저장된 값을 수정,삭제 할 수 없는 리스트 </small>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 튜플 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> {'()'}기호를 이용하여 사용 <small>  </small> </li>\r\n                                        <li> 중복된 값을 허용하지 않음 <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 튜플 인덱싱 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  <small>  </small> </li>\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 튜플의 일반적인 형태 </span>\r\n                                    <li> tuple1 = (값,값,값) </li>\r\n                                    <span className=\"sstitle\"> 튜플 생성 </span>\r\n                                    <li> tuple1 = () </li>\r\n                                    <li> tuple1 = tuple() </li>\r\n                                    <li> tuple1 = (값,) , (값)으로 하면 일반적인 값만 들어가서 튜플의 형태가 되지 않는다. </li>\r\n                                    <span className=\"sstitle\"> 튜플 인덱싱 </span>\r\n                                    <li> 튜플[인덱스] </li>\r\n                                    <span className=\"sstitle\"> 튜플 슬라이싱 </span>\r\n                                    <li> 튜플[인덱스:인덱스] </li>\r\n                                    <span className=\"sstitle\"> 튜플 길이 </span>\r\n                                    <li> len(tuple1) </li>\r\n                                    <span className=\"sstitle\"> 튜플 덧셈 곱셈 </span>\r\n                                    <li> tuple1+tuple2 , tuple1*2 </li>\r\n                                    <span className=\"sstitle\"> 튜플 swap </span>\r\n                                    <li> tuple1,tuple2 = tuple2,tuple1 </li>\r\n                                    {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 세트(set)\r\n                                    <a name=\"세트(set)\" style={{ visibility: \"hidden\" }}> 세트(set) </a> </summary>\r\n                                <small> 세트는 순서가 없지만 중복된 값이 저장이 되지 못하게 한다. </small>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <span className=\"sstitle\"> 세트의 일반적인 형태 </span>\r\n                                    <li> set1 = {\"{값,값,값\"} </li>\r\n                                    <span className=\"sstitle\"> 세트 생성 </span>\r\n                                    <li> set1 = set() , 빈 세트 생성</li>\r\n                                    <li> set1 = set(리스트,튜플 등) </li>\r\n                                    <span className=\"sstitle\"> 세트 인자 추가하기 </span>\r\n                                    <li> set1.add(값) </li>\r\n                                    <li> set1.update(리스트) , 리스트 전체를 추가 </li>\r\n                                    <li> set1.update(튜플) , 튜플 전체를 추가 </li>\r\n                                    <span className=\"sstitle\"> 세트 값 제거 </span>\r\n                                    <li> set1.remove(값) , 없으면 에러 발생 </li>\r\n                                    <li> set1.discard() , 없어도 에러 발생x </li>\r\n                                    <span className=\"sstitle\"> 세트 교집합 </span>\r\n                                    <li> set1.interserction(set2) </li>\r\n                                    <li> set1 &nbsp; set2</li>\r\n                                    <span className=\"sstitle\"> 세트 합집합 </span>\r\n                                    <li> set1.union(set2) </li>\r\n                                    <li> set1 | set2</li>\r\n                                    <span className=\"sstitle\"> 세트 차집합 </span>\r\n                                    <li> set1.difference(set2) </li>\r\n                                    <li> set1 - set2</li>\r\n                                    <span className=\"sstitle\"> 세트 (합집합-교집합) </span>\r\n                                    <li> set1.symmetric_difference(set2) </li>\r\n                                    <li> set1 ^ set2</li>\r\n                                    {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 딕셔너리(dictionary)\r\n                                    <a name=\"딕셔너리(dictionary)\" style={{ visibility: \"hidden\" }}> 딕셔너리(dictionary) </a> </summary>\r\n                                <small> 키와 값으로 구분되는 리스트 , 요소의 타입이 문자인지숫자인지 섞어도 상관이 없다. </small>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <span className=\"sstitle\"> 딕셔너리 일반적인 형태 </span>\r\n                                    <li> dict1 = {\"'키':값, '키':값\"} </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 생성하기 </span>\r\n                                    <li> dict1={\"{}\"} , 빈 딕셔너리 </li>\r\n                                    <li> dict() , 빈 딕셔너리 </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 수정하기 </span>\r\n                                    <li> dict1[키] = 값 </li>\r\n                                    <li> dict1.update(키 = 값) </li>\r\n                                    <li> dict1.update(['키' , 값]) </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리에 요소 추가하기 </span>\r\n                                    <li> dict1[키] = 값 </li>\r\n                                    <li> dict1.setdefault('키':값) , 키와 값으로 요소 추가하기 </li>\r\n                                    <li> dict1.setdefault('키') , 값은 없는 키만 있는 요소 추가하기 </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 제거하기 </span>\r\n                                    <li> del dict1[키] </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 초기화 </span>\r\n                                    <li> dict1.clear() </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 키 가져오기 </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li> max(딕셔너리,key=딕셔너리.get) #딕셔너리 값중에 최댓값을 가진 키를 반환 </li>\r\n                                        <li> min(딕셔너리,key=딕셔너리.get) #딕셔너리 값중에 최솟값을 가진 키를 반환 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <li> dict1.get(키) </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 값 가져오기 </span>\r\n                                    <li> dict1.get(키) </li>\r\n                                    <span className=\"sstitle\"> 리스트나 튜플로 딕셔너리 만들기  </span>\r\n                                    <li> dict객체 = dict.fromkeys(리스트 혹은 튜플) , 키만 갖는 리스트로 만들어짐 </li>\r\n                                    <li> dict객체 = dict.fromkeys(리스트 혹은 튜플, 값) </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 키 목록 가져오기 </span>\r\n                                    <li> dict1.keys() </li>\r\n                                    <li> for 값 in dict1.keys(): 딕셔너리의 키가 일치하면 반복문 실행 </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 값 목록 가져오기 </span>\r\n                                    <li> dict1.values() </li>\r\n                                    <li> for 값 in dict1.values(): 딕셔너리의 값이 일치하면 반복문 실행 </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 키와값을 튜플 목록으로 가져오기 </span>\r\n                                    <li> dict1.items() </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 조회하기 ( return boolean ) </span>\r\n                                    <li> 키 in dict1 , 딕셔너리에 키가 존재하는지 확인 </li>\r\n                                    <span className=\"sstitle\"> </span>\r\n                                    <li>  </li>\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 조건문\r\n                                    <a name=\"조건문\" style={{ visibility: \"hidden\" }}> 조건문 </a> </summary>\r\n                                <small> 띄어쓰기를 이용, 탭간격으로 구분 , 에러가 이런 부분에서 발생하므로 주의 </small>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> if, if-else, if-elif, if-elif-else </span>\r\n                                    <li> if 조건식: </li>\r\n                                    <li> elif 조건식: </li>\r\n                                    <li> else: </li>\r\n                                    <span className=\"sstitle\"> 삼항 연산 </span>\r\n                                    <li> 변수 = 참값 if 조건값 else 거짓값 , 조건값이 참값과 일치하면 참값 반환, 틀리면 거짓값 반환</li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 반복문\r\n                                    <a name=\"반복문\" style={{ visibility: \"hidden\" }}> 반복문 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> while , for </span>\r\n                                    <li> while 조건식: </li>\r\n                                    <li> for 사용할변수 in 리스트,튜플,문자열,세트,딕셔너리: </li>\r\n                                    <li> continue(조건이 맞으면 다음 인덱스로 넘어감), break(조건에 맞으면 반복문 종료) </li>\r\n                                    <span className=\"sstitle\"> range() </span>\r\n                                    <li> range(10) ※0~9까지  </li>\r\n                                    <li> range(5,10) ※5~9까지  </li>\r\n                                    <li> range(1,10,3) ※1,4,7 간격이 3만큼씩  </li>\r\n                                    <li> for i in range(10 혹은 변수)  </li>\r\n                                    <span className=\"sstitle\"> eumerate(리스트 등) </span>\r\n                                    <li> for i,j in enumerate(리스트 등) </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 메소드\r\n                                    <a name=\"메소드\" style={{ visibility: \"hidden\" }}>  메소드 </a> </summary>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <span className=\"sstitle\"> 문자열 메소드 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> .format() : 문자열 정렬,  </li>\r\n                                        <span classname=\"sblock\">\r\n                                            <li> '1:{'{ }'}, 2:{'{ }'}'.format(x,y); #순서대로 넣기</li>\r\n                                            <li> '1:{'{0}'}, 2:{'{1}'}'.format(x,y); #순서 지정해서 넣기</li>\r\n                                            <li> '1:{'{0}'}, 2:{'{0}'}', 3:{'{1}'}'.format(x,y); #중복해서 넣기</li>\r\n                                            <li> '1:{'{1}'}, 2:{'{0}'}'.format(x,y); #순서 바꿔서 넣기</li>\r\n                                            <li> '1:{'{0}'}'.format('text'); #문자열로 넣기</li>\r\n                                            <li> '1:{'{x}'}'.format(x=123); #이름으로 넣기</li>\r\n                                            <li> '1:{'{0}'}', 중괄호출력:{'{{}}'} .format('test'); #중괄호 출력하기 </li>\r\n                                            <li> '중괄호출력:{'{{0}}'}'.format(1234); #중괄호 출력하기 </li>\r\n                                            <li> '좌측정렬 : {'{0:<10}'}'.format('left') </li>\r\n                                            <li> '우측정렬 : {'{0:>10}'}'.format('right') </li>\r\n                                            <li> '중간정렬 : {'{0:^10}'}'.format('center') </li>\r\n                                            <li> '여백정렬 : {'{0:@<10}'}'.format('center') #여백에 다른 문자(@대신 아무거나)를 채워서 정렬 </li>\r\n                                            <li> '정수표현 : {'{0:05d}'}'.format(123) #00123 정수의 자릿수가 부족하면 채워짐  </li>\r\n                                            <li> '소수표현 : {'{0:0.3f}'}'.format(1.123456) #1.123 소수점 표현, 소수점 자리가 남으면 0으로 표현 </li>\r\n                                        </span>\r\n                                        <li> 변수 = 문자열.count() : 문자열의 갯수 </li>\r\n                                        <li> 문자열.find(\"abc\") : \"abc\" 문자를 문자열 앞에서 찾기 ,없다면 -1 리턴 </li>\r\n                                        <li> 문자열.rfind(\"abc\") : \"abc\" 문자를 문자열 뒤에서 찾기 ,없다면 -1 리턴 </li>\r\n                                        <li> 문자열.index() : 특정문자열의 위치 찾기 ,없다면 에러 발생 </li>\r\n                                        <li> 문자열.upper() : 모두 대문자로 변환 </li>\r\n                                        <li> 문자열.lower() : 모두 소문자로 변환 </li>\r\n                                        <li> 문자열.capitalize() : 첫글자만 대문자로 변환 </li>\r\n                                        <li> 문자열 = \"\".join('123','456') 혹은 \"\".join('문자배열') : 여러문자열을 하나의 문자열로 합쳐서 반환  </li>\r\n                                        <li> 문자열 = \"_(구분자)\".join('123','456')  : 여러문자열을 \"_\"(구분자)로 구분하여 하나의 문자열로 합쳐서 반환  </li>\r\n                                        <li> 문자열.split(sep='구분자', maxsplit=분할횟수) #문자열을 구분자로 잘라서 리스트로 반환 </li>\r\n                                        <li> 문자열.replace(old,new,[count]) #변경하고 싶은 문자를 바꾸는 메소드 </li>\r\n                                        <li> 문자열.[rstrip('문자열') | lstript('문자열') | stript('문자열') ] #불필요한 공백, 문자열 제거 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n\r\n                                    <span className=\"sstitle\"> 사용자 정의 메소드 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> def 메소드명(매개변수): </li>\r\n                                        <li> &nbsp;코드작성 </li>\r\n                                        <li> &nbsp;return 반환값 <small> 리턴은 필수가 아님 </small> </li>\r\n                                    </span>\r\n\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 라이브러리,패키지,모듈\r\n                                    <a name=\"라이브러리,패키지,모듈\" style={{ visibility: \"hidden\" }}> 라이브러리,패키지,모듈  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 패키지 : 특정 기능과 여러 모듈을 하나의 폴더에 보관 </small> <br />\r\n                                    <small> 라이브러리 : 모듈과 패키지를 묶은 단위 </small> <br />\r\n                                    <small> 모듈 : 함수,변수,클래스 등이 묶인 단위 </small> <br />\r\n                                    <small> 선언 : import.패키지명.모듈명 , import 모듈명 , from 모듈명 import 함수명1,함수명2,\r\n                                        from 모듈 import *, import 모듈명 as 별명 </small> <br />\r\n\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ calculator (수학 함수) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li> add(x,y) : 덧셈 </li>\r\n                                            <li> subtract(x,y) : 뺄셈 </li>\r\n                                            <li> multiple(x,y) : 곱셈 </li>\r\n                                            <li> divide(x,y) : 나눗셈 </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ numpy (수학 관련 모듈) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ math (수학 관련)  </summary>\r\n                                        <span className=\"mblock\">\r\n                                            <li> round(값,소수점몇번째까지살리는위치) : 반올림 </li>\r\n                                            <li> sqrt(@) : 제곱근, 루트 </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ datatime (날짜) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ os (운영체제) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ random (랜덤) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\">  </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\">  </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\">  </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 파일 관련\r\n                                    <a name=\"파일 관련\" style={{ visibility: \"hidden\" }}> 파일 관련 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 파일 읽기 (확인 필요) </span>\r\n                                    <span className=\"mblock\">\r\n                                        {/* 이거 실행해봐야함.. 뭔지 아직 잘 모름 */}\r\n                                        <li> with open('주소','r') as f: </li>\r\n                                        <li> for line in f: </li>\r\n                                        <li> print(line) </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 파일 쓰기 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> with open('파일주소.txt','w') as f:   #txt파일에 내용 덮어쓰기 </li>\r\n                                        <li>  f.write(\"Hello world\\n\") </li>\r\n                                        <li>  </li>  <br />\r\n                                        <li> with open('파일주소.txt','a') as f    #txt파일에서 내용 추가하기 </li>\r\n                                        <li>  f.write(\"Hello world\\n\") </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 데코레이터 함수\r\n                                    <a name=\"데코레이터 함수\" style={{ visibility: \"hidden\" }}> 데코레이터 함수 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 기존 함수를 바꾸지 않고 추가적으로 코드를 작성하여 사용하거나 반환 </small>\r\n                                    <span className=\"sstitle\"> 사용방법1 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 함수1에다가 코드를 추가 작성하여 함수2로 만드는 방법 기존코드는 수정하지 않고 만들어냄 </small>\r\n                                        <li> def deco_func(함수명1) </li>\r\n                                        <li> &nbsp;def deco_new_func(): </li>\r\n                                        <li> &nbsp;&nbsp;함수명1() 혹은 코드작성 </li>\r\n                                        <li> &nbsp;return deco_new_func </li> <br />\r\n                                        <li> 함수명2 = deco_func(함수명1) </li>\r\n                                        <li> 함수명2()  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> @을 이용한 사용방법2 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 함수명1()에 함수명2()가 들어가서 새로운 함수를 만들어내는 방법 </small>\r\n                                        <li> def deco_func(함수명1) </li>\r\n                                        <li> &nbsp;def deco_new_func(): </li>\r\n                                        <li> &nbsp;&nbsp;함수명1() 혹은 코드작성 </li>\r\n                                        <li> &nbsp;return deco_new_func </li> <br />\r\n                                        <li> @deco_func </li>\r\n                                        <li> def 함수명2():  </li>\r\n                                        <li> &nbsp;코드작성  </li>\r\n                                        <li> 함수명2()  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 람다(lambda,익명함수)\r\n                                    <a name=\"람다(lambda,익명함수)\" style={{ visibility: \"hidden\" }}> 람다(lambda,익명함수) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 사용방법 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 정의 : lam1 = lambda 변수,변수,변수 :range(변수,변수,변수) </li>\r\n                                        <li> 사용 : lam1(1,10,2) , 1~10까지 2의 간격으로 반환 </li>\r\n                                        <li> 정의 : lam2 = lambda 변수 :변수[-1] </li>\r\n                                        <li> 사용 : sorted(리스트,lam2 = lambda n:n[-1]) , 역순으로 정렬? </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 클래스\r\n                                    <a name=\"클래스\" style={{ visibility: \"hidden\" }}> 클래스 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 클래스 생성자 정의 및 사용 </span>\r\n                                    <small> 멤버변수를 따로 선언할 필요는 없고 생성자로 만들면 사용이 되는것 같다. </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> class 클래스명: </li>\r\n                                        <li> &nbsp;def initialize(self,매개변수1,매개변수2): </li>\r\n                                        <li> &nbsp;&nbsp;self.멤버변수1 = 매개변수1 </li> <br />\r\n                                        <li> &nbsp;&nbsp;self.멤버변수2 = 매개변수2</li> <br />\r\n                                        <li> 변수 = 클래스명() </li>\r\n                                        <li> 변수.initialize(매개변수1,매개변수2) </li>\r\n                                        <li> print(변수.멤버변수1, 변수.멤버변수2) </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 형변환\r\n                                    <a name=\"형변환\" style={{ visibility: \"hidden\" }}> 형변환 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 형변환 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> float(5) </li>\r\n                                        <li> int(5.0) </li>\r\n                                        <li> str(5) </li>\r\n                                        <li> hex(5) </li>\r\n                                        <li> oct(5) </li>\r\n                                        <li> bin(2) </li>\r\n                                        <li> tuple([5,5])  # 리스트를 튜플로 </li>\r\n                                        <li> list((5,5)) # 튜플을 리스트로 </li>\r\n                                        <li> set([5,5]) #리스트를 집합 데이터형으로 바꿈 </li>\r\n                                        <li> dict([[5,5]]) # 쌍으로 존재할 때 만 딕셔너리로 </li>\r\n                                        <li> chr(숫자) # 아스키코드로  </li>\r\n                                        <li> ord(\"문자\")  # 아스키코드로 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ _(언더바) 사용\r\n                                    <a name=\"_(언더바) 사용\" style={{ visibility: \"hidden\" }}> _(언더바) 사용 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 사용방법 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h4> 반복문 인덱스 용도 </h4> , _ 는 인덱스 값을 가지지 않음\r\n                                            <li> for _ in range(10):\r\n                                                <li> print('test') </li>\r\n                                            </li>\r\n                                        </li>\r\n                                        <li> <h4> 값 무시 용도 </h4>\r\n                                            <li> a,b,_,c = 1,2,3,4 </li>\r\n                                            <li> print(a) print(b) print(c) # 1,2,4 출력 </li>\r\n                                        </li>\r\n                                        <li> <h4> 자릿수 표기 용도 </h4>\r\n                                            <li> num = 100_000_000 </li>\r\n                                            <li> print(num) # 100000000 출력 </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> <a name=\"\" style={{ visibility: \"hidden\" }}> ▷  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default PythonBasic;\r\n\r\n","import React from 'react';\r\n\r\nconst PythonRegex = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 설명\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> import re # 라이브러리를 사용  </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 정규 표현식 문법\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 문자열 = r\"모든문자\" # 문자,특수문자 등등을 문자열로 출력 </li>\r\n                                    <li> 패턴{'{1,3}'} # 패턴을 1~3번 반복 </li>\r\n                                    <li> [abc] # a 혹은 b 혹은 c </li>\r\n                                    <li> [a|b|c] # a 혹은 b 혹은 c </li>\r\n                                    <li> [aA] # a 혹은 A  </li>\r\n                                    <li> [a-z] # a~z 까지의 범위 </li>\r\n                                    <li> [^a-z] # a~z가 아닌 문자 </li>\r\n                                    <li> [0-9] # 0~9 까지의 숫자 </li>\r\n                                    <li> [^0-9] # 0~9 까지의 숫자를 제외한 문자 </li>\r\n                                    <li> [a-zA-Z0-9] # 모든 문자와 숫자 </li>\r\n                                    <li> [가-힣] # 모든 한글 </li>\r\n                                    <li> a...z # a~z 까지의 문자 </li>\r\n                                    <li> ^[패턴] # 패턴이 제일 앞에 있는지 물어봄 </li>\r\n                                    <li> 패턴+ : 1번이상의패턴 </li>\r\n                                    <li> 패턴* : 0번 이상의 패턴\r\n                                        <li> [0-9]* # 0~9로 이루어진 문자열 </li>\r\n                                    </li>\r\n                                    <li> 패턴? : 0~1번의 패턴 </li>\r\n                                    <li> 패턴. : 어떠한 문자 패턴도 가능 </li>\r\n                                    <li> \\문자$ # 마지막에 문자의 위치를 찾는다고 하는데 (미확인) </li>\r\n                                    <li> 문자$ # 문자열의 마지막의 문자가 맞는지\r\n                                        <li> [a-zA-Z0-9]+.@ # 문자열의 끝이 @으로 끝나는지 확인  </li>\r\n                                    </li>\r\n                                    <li> \\d : 0-9와 동일 </li>\r\n                                    <li> \\D : [^0-9] 와동일 </li>\r\n                                    <li> \\s : 공백문자(띄어쓰기,탭 등) </li>\r\n                                    <li> \\S : 공백이아닌문자 </li>\r\n                                    <li> \\w : [0-9a-zA-Z]와 동일 </li>\r\n                                    <li> \\W : [^0-9a-zA-Z]와 동일 </li>\r\n                                    <li> 옵션 : re.IGNORECASE # 대소문자를 무시 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ re 문법\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> re.match('패턴','문자열') </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 문자열의 시작부분에서부터 패턴이 일치하는지 검색 </li>\r\n                                    <li> 처음부터 일치하지 않으면 None  </li>\r\n                                    <li> re.match('패턴','문자열') </li>\r\n                                    <span className='title4'> 예시 </span>\r\n                                    <span className='sblock'>\r\n                                        <li> re.match('aaa','aaab') (o) </li>\r\n                                        <li> re.match('baaa','aaab') (x) </li>\r\n                                    </span>\r\n                                </span>\r\n                                <span className=\"sstitle\"> re.search('패턴','문자열') </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 문자열에서 패턴이 매칭되는 곳이 있는지 확인 </li>\r\n                                    <span className=\"title4\"> 예시 </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li> re.search('aaa','aaab') (o) </li>\r\n                                        <li> re.search('baaa','aaab') (o) </li>\r\n                                    </span>\r\n                                </span>\r\n                                <span className=\"sstitle\"> re.findall('패턴','문자열') </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 정규식과 일치하는 모든 문자열을 리스트로 반환 </li>\r\n                                    <li> 만약에 정규식이 일치하는 부분이 겹치다면 중복을 허용하지 않음 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> re.finditer('패턴','문자열') </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 정규식과 일치하는 모든 문자열을 iterator로 반환 </li>\r\n                                    <li> 만약에 정규식이 일치하는 부분이 겹치다면 중복을 허용하지 않음 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> match 객체 사용방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> re.finditer('패턴','문자열') #문자열에서 패턴이 일치하면 iterator로 반환(겹치는값은x)  </li>\r\n                                    <li> re.fullmatch('패턴','문자열') #시작부터 끝까지 모두 일치하면 match객체 반환 </li>\r\n                                    <li> re.split('패턴','문자열',split횟수) </li>\r\n                                    <li> re.sub('패턴','바꿀문자열','문자열','바꿀횟수') #바꾸어진 문자열 반환 </li>\r\n                                    <li> re.subn('패턴','바꿀문자열','문자열') # (문자열,바뀐횟수)로 반환 </li>\r\n                                    <li> re객체명 = re.compile('패턴') #패턴이 반복되면 공통적으로 적용시킴\r\n                                        <li> re객체명.match('문자열') #이와 같이 패턴을 쓰지 않고 사용 </li>\r\n                                    </li>\r\n                                    <li> re.purge() #compile은 캐시에 100개가 넘어가면 초기화 그것을 방지 하는 용도 </li>\r\n                                    <li> re.escape('특수문자') #모든 특수문자 앞쪽에 백슬래쉬(\\)를 붙여서 반환 </li>\r\n                                    <li> match객체\r\n                                        <li> match객체명.group() #일치하는 패턴 문자열  </li>\r\n                                        <li> match객체명.start() #일치한 패턴 시작 위치 인덱스</li>\r\n                                        <li> match객체명.end() #일치한 패턴 끝 위치 인덱스 </li>\r\n                                        <li> match객체명.span() #일치한 패턴이 어디부터 어디까지인지 인덱스 </li>\r\n                                        <li> match객체명.groups() #일치한 패턴들을 반환 </li>\r\n                                        <li> match객체명.group(인덱스) #일치한 패턴들의 인덱스 값을 반환 </li>\r\n                                    </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 사용 예시\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 컴파일 사용해서 반복적으로 적용 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PythonRegex;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst AiBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AiBasic;","import React from 'react';\r\n\r\nconst BlockChainPow = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 작업 증명 합의 알고리즘 <a name=\"작업 증명 합의 알고리즘\" style={{ visibility: \"hidden\" }}> 작업 증명 합의 알고리즘 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> bitcoin 에서 사용되는 알고리즘 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BlockChainPow;","import React from 'react';\r\n\r\nconst CTBaekJoon = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <ul>\r\n          <span className=\"lblock\">\r\n            <span className=\"mtitle\"> 백준 문제 </span>\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 0 - 1000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 1001 - 2000 </summary>\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 1339 번 - 단어 수학  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li> 수학문제는 N개의 단어로 이루어짐 </li>\r\n                      <li> 단어는 알파벳 대문자로만 이루어져 있다. </li>\r\n                      <li> 각 알파벳 대문자를 0~9까지의 숫자 중 하나로 바꾸어서 N개의 수를 합치는 문제 </li>\r\n                      <li> 같은 알파벳은 같은 숫자로 바뀌며, 다른 알파벳과 같은 숫자가 되어서는 안된다. </li>\r\n                      <li> N개의 단어를 합해서 최댓값을 구하는 프로그램 </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 첫째 줄에는 N을 입력한다. {' 1 <= N <= 10 '}  </li>\r\n                      <li> 2번째 줄부터는 단어가 한줄에 1개씩 주어진다. </li>\r\n                      <li> 모든 단어에 포함되어 있는 알파벳은 최대 10개 </li>\r\n                      <li> 단어의 최대 길이는 8 </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 1번째 줄에 단어 합의 최댓값을 출력하라 </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 알파벳의 최대 갯수는 10개 , 일단 값에대한 매칭이 필요하다. </li>\r\n                      <li> 최댓갑이 발생하려면 숫자가 큰 수의 제일 앞에 숫자가 9이어야 한다.  </li>\r\n                      <li> 문제가 경우의 수가 크게 많지가 않아 그냥 브루트포스로 풀면 될것 같다.  </li>\r\n                      <li> 브루트 포스가 아닌 간단한 해쉬테이블을 만들어서 풀어보려고 한다. </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li> import sys </li>\r\n                          <li> N = int(sys.stdin.readline()) </li>\r\n                          <li> word_list = []  # 입력받은 단어들을 보관하는 리스트 </li>\r\n                          <li> word_alphabet = []  # 단어들의 모든 알파벳을 저장하는 리스트 </li>\r\n                          <li> alphabet_kind = { }  # 단어들의 알파벳에서 중복을 제거하고 저장하는 리스트 </li>\r\n                          <li> alphabet_hashtable = { }  # 중복되지 않은 단어들의 값이 빈 해쉬테이블 생성, 추후에 값을 넣음 </li>\r\n                          <li> num_list = []  # 처음에 문자열로 입력한 단어를 숫자 바꿔놓은 리스트 </li>\r\n                          <li> num = 9  # 해쉬테이블에 제일 큰값인 9부터 넣기 위해서 선언 </li> <br />\r\n                          <li> for i in range(N):\r\n                            <li> word_list.append(sys.stdin.readline().rstrip())  </li>\r\n                            <li> for j in word_list[i]:\r\n                              <li> word_alphabet.append(j) </li>\r\n                            </li>\r\n                          </li> <br />\r\n                          <li> alphabet_kind = dict.fromkeys(list(set(word_alphabet)), 0) </li>\r\n                          <li> alphabet_hashtable = dict.fromkeys(list(set(word_alphabet)), 0) </li> <br />\r\n                          <li> for i in range(N): </li>\r\n                          <li> num_position = len(word_list[i])\r\n                            <li>  for j in word_list[i]: </li>\r\n                            <li> rank = 10**(num_position-1) </li>\r\n                            <li> alphabet_kind[j] += rank  </li>\r\n                            <li> num_position = num_position - 1 </li>\r\n                          </li>\r\n                          <li> for i in alphabet_kind:\r\n                            <li> alphabet_hashtable[max(alphabet_kind, key=alphabet_kind.get)] = num </li>\r\n                            <li> alphabet_kind[max(alphabet_kind, key=alphabet_kind.get)] = 0 </li>\r\n                            <li> num -= 1 </li>\r\n                          </li>\r\n                          <li> for word in word_list:\r\n                            <li> temp = \"\" </li>\r\n                            <li> for alpha in word:\r\n                              <li> </li>\r\n                            </li>\r\n                            <li> </li>\r\n                          </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 1399번 끝 */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 번 끝 */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 번 끝 */}\r\n              </details>\r\n            </span>\r\n            {/* 1000번대 끝 */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 2001 - 3000 </summary>\r\n                {/* 2000번대 */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 2529 번 - 부등호 </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li> 부등호 기호 {'< , >'} k개가 나열된 순서열 A가 있다. </li>\r\n                      <li> 부등호 사이에 숫자를 넣어서 순서열을 만족시키는 수를 찾고자한다. </li>\r\n                      <li> 들어갈수 있는 숫자는 0~9이고 각 1개씩 밖에 존재하지 않는다. </li>\r\n                      <li> 조건을 만족할 때 부등호를 없애고 이어 붙인 숫자를 찾는다. </li>\r\n                      <li> 조건을 만족하는 수는 1개가 아니라 여러개일 수 있다. </li>\r\n                      <li> 이때 최솟값과 최댓값을 찾으려 한다. </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 첫줄에 부등호의 갯수 k ({'2 ≤ k ≤ 9'}) </li>\r\n                      <li> 2번째 줄에 부등호를 공백으로 두면서 입력 </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 1번째 줄에는 만족하는 최소 정수 </li>\r\n                      <li> 2번째 줄에는 만족하는 최소 정수 </li>\r\n                      <li> 0으로 시작하는 정수여도 0 표기 , 문자열로 출력 </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 브루트포스로 풀면 최대 10!의 숫자가 들어가고 조건이 일치하는지도 확인을 해야한다.(아닐듯 싶다) </li>\r\n                      <li> 부등호의 갯수를 왼쪽,오른쪽을 먼저 구분해서 문제를 풀어보려 했는데 이게 아니다..  </li>\r\n                      <li> 결론은 DFS 방식 + 백트래킹 </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  import sys </li>\r\n                          <li>  k = int(sys.stdin.readline().rstrip()) </li>\r\n                          <li>  bracket = sys.stdin.readline().rstrip().split() </li>\r\n                          <li>  num_visit = [\"false\" for i in range(10)] </li>\r\n                          <li>  num_list = [] </li> <br />\r\n                          <li> def dfs(front_num, count_num, str_num):\r\n                            <li> if count_num == k:\r\n                              <li> num_list.append([str_num]) </li>\r\n                            </li>\r\n                            <li> else:\r\n                              <li> for j in range(10):\r\n                                <li> if num_visit[j] == \"false\":\r\n                                  <li> if bracket[count_num] == \"{'<'}\":\r\n                                    <li> if front_num {'>'} j:\r\n                                      <li> continue  </li>\r\n                                    </li>\r\n                                  </li>\r\n                                  <li> elif bracket[count_num] == \"{'>'}\":\r\n                                    <li> if front_num {'<'} j:\r\n                                      <li> continue </li>\r\n                                    </li>\r\n                                  </li>\r\n                                  <li> num_visit[j] = \"true\" </li>\r\n                                  <li> dfs(j, count_num+1, str_num+str(j)) </li>\r\n                                  <li> num_visit[j] = \"false\" </li>\r\n                                </li>\r\n                              </li>\r\n                            </li>\r\n                          </li> <br />\r\n                          <li> for i in range(10):\r\n                            <li> num_visit[i] = \"true\" </li>\r\n                            <li> dfs(i, 0, str(i)) </li>\r\n                            <li> num_visit[i] = \"false\" </li>\r\n                          </li> <br />\r\n                          <li> print(\" \".join(num_list[-1])) </li>\r\n                          <li> print(\" \".join(num_list[0])) </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 2000번대 끝 */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 3001 - 4000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 4001 - 5000  </summary>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 4377 번 - Tight words(영문) </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제(번역) </h3>\r\n                      <li> 1~k ({'0 <= k <= 9'}) 의 알파벳이 있다. </li>\r\n                      <li> n의 길이를 가진 단어에서 2개의 이웃한 문자가 1이하인\r\n                        단어를 tight word라고 한다. </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) (번역) </h3>\r\n                      <li> 연속으로 줄에 입력하는데 , 각 라인은 2가지의 정수숫자를 포함한다. </li>\r\n                      <li> k n ({'1 <= n <= 100'}) </li>\r\n                    </li>\r\n                    <li> <h3> 출력 (번역) </h3>\r\n                      <li> 입력값에 대하여 각 줄에 tight한 word가 나타날 확률을\r\n                        소수점 5자리숫자까지 확률로 출력하라 </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 전체 경우의 수는 k^n 최대경우의수는 9^100 </li>\r\n                      <li> 양 옆에 자릿수가 1이하의 차이가 나야한다.  </li>\r\n                      <li> 트리구조인것 같은데..  </li>\r\n                      <li> 자릿수의 값이 0이거나 k이면 다음에 올수 있는 자릿수는 2가지이다.  </li>\r\n                      <li> 자릿수의 값이 0,k 가 아니면 다음에 올수 있는 자릿수는 3가지이다.  </li>\r\n                      <li> arr[n][k] : (n+1)자리에서 k의 값을 가질때 이전의 자릿수의 값과 비교해서\r\n                        tight word조건을 만족할 수 있는 값의 경우의 수(말로 설명하기가 어렵다..)  </li>\r\n                      <li> k=2 n=5 예시를 들어보겠다.\r\n                        <span className=\"mblock\">\r\n                          <li> {'0<=k<=2 , n은 5자리의 숫자 , '} 가로줄은 n번째 자릿수 , <br /> 세로줄은\r\n                            k의 값이 n번째 자릿수에 올 수 있는 경우의 수를 보여준다. </li>\r\n                          <li> # 0  1 2 </li>\r\n                          <li> 1 1  1 1 </li>\r\n                          <li> 2 2  3 2</li>\r\n                          <li> 3 5  7 5</li>\r\n                          <li> 4 12 17 12</li>\r\n                          <li> 5 29 41 29 </li>\r\n                          <li> <h4> 결과 : </h4>\r\n                            <li> 29+41+29 = 99 , 99/243 = 40.74074 </li>\r\n                          </li>\r\n                        </span>\r\n                      </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li> import sys </li>\r\n                          <li> for line in sys.stdin:\r\n                            <li> k, n = map(int, line.split()) </li>\r\n                            <li> array = [[0]*(k+1) for i in range(n)] </li>\r\n                            <li>                     for i in range(k+1):\r\n                              <li> array[0][i] = 1 </li>\r\n                            </li>\r\n                            <li> if k != 0:\r\n                              <li> for i in range(1, n):\r\n                                <li> for j in range(k+1):\r\n                                  <li> array[i][j] = array[i-1][j]+array[i-1][j+1] </li>\r\n                                </li>\r\n                                <li> elif j == k:\r\n                                  <li> array[i][j] = array[i-1][j]+array[i-1][j-1] </li>\r\n                                </li>\r\n                                <li> else:\r\n                                  <li> array[i][j] = array[i-1][j-1]+array[i-1][j]+array[i-1][j+1] </li>\r\n                                </li>\r\n                              </li>\r\n                            </li>\r\n                            <li> elif k == 0:\r\n                              <li> for i in range(n):\r\n                                <li> array[i][k] = 1 </li>\r\n                              </li>\r\n                            </li>\r\n                            <li> print('%0.5f' % (sum(array[n-1])/pow(k+1, n)*100)) </li>\r\n                          </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 5001 - 6000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 6001 - 7000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 7001 - 8000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 8001 - 9000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 9001 - 10000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 10001 - 11000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 11001 - 12000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 12001 - 13000  </summary>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 12002 번 - Field Reduction (Silver) </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 (번역) </h3>\r\n                      <li> 농장에 소가 N마리 ({'5<=N<=50000'})는 2차원적인 영역에 있다. </li>\r\n                      <li> 농부는 소들을 x,y축 평행한 울타리로 막기를 원하고,  </li>\r\n                      <li> 가능한 작게 모든 소를 포함시키기를 원한다. ( 경계의 소들도 가능하다.) </li>\r\n                      <li> 그래서 최대 3마리의 소를 팔 수 있다.  </li>\r\n                      <li> 소는 점으로 생각하고 , 울타리는 수평이고 수직인 직선으로 구성되어 있다.  </li>\r\n                      <li> 즉 좌표명면 1사분면에 점을 찍고 점을 수직으로 이은 사각형의 면적이 제일 작은것을 구하라 </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 1번째 줄에는 N(소의 숫자)을 입력한다, </li>\r\n                      <li> 그 다음줄에는 구체적인 소의 위치(x,y)를 입력한다. </li>\r\n                      <li> 소의 위치는 1~40000까지 된다. </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 최소 면적을 출력하시오 </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 소를 최대 3마리를 팔수 있다는 생각을 해야한다.  </li>\r\n                      <li> 소의 위치는 양의 정수  </li>\r\n                      <li> 1. 모든 수의 중점을 찾아서 멀리떨어진 수를 제거하자니 중점 계산하고\r\n                        5만번의 좌표 거리 계산이 필요한데 이것도 맞을까????  </li>\r\n                      <li> 2. 경우의 수를 해보기? , 만약에 N=50000이면 너무 많아서 이거는 아닐듯 싶다 </li>\r\n                      <li> 3. 상하좌우 끝에서부터 각 3개의 좌표중에 제거해야되는 점이 존재한다. </li>\r\n                      <li> 3-1. <sub> 12 </sub> C <sub> 3 </sub> 이므로 </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 13001 - 14000  </summary>\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 13395 번 - 팬린드롬 행렬 </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li> N행 M열로 이루어진 행렬 A </li>\r\n                      <li> N,M 은 짝수, 행렬의 각 원소는 0 또는 1 </li>\r\n                      <li> 행렬의 행은 1번부터 N번까지 번호가 매겨져 있음 </li>\r\n                      <li> 행렬의 열은 1번부터 M번까지 번호가 매겨져 있음 </li>\r\n                      <li> 팰린드롬이란? 앞에서 읽으나 뒤에서 읽으나 똑같은 번호를 가진 행렬 </li>\r\n                      <li> 행렬 A의 일부 행과 열은 팰린드롬이다. </li>\r\n                      <li> 행렬 A와 두 정수 R과 C가 주어진다. </li>\r\n                      <li> 행렬 A의 팰린드롬 행의갯수는 최소 R개 , 열의 갯수는 최소 C개가 되어야 한다. </li>\r\n                      <li> 위 조건을 만족시키기 위해 바꾸어야하는 행렬 A의 원소의 갯수를 구하는 프로그램을 작성하라. </li>\r\n                      <li> 원소를 바꾼다는 의미는 0을 1로 1을 0으로 바꾼다는 의미이다. </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 첫째 줄에 N M R C 입력 (2 ≤ N, M ≤ 14, N과 M은 짝수, 0 ≤ R ≤ N, 0 ≤ C ≤ M ) </li>\r\n                      <li> 둘째 줄부터 N개의 줄에 행렬 A의 원소가 1행 부터 순서대로 주어진다. </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 위의 조건을 만족하게 끔 행렬 A의 원소를 최소한으로 바꾸어야 하는 갯수를 출력 </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 1. 25분초과 </li>\r\n                      <li> 2. 펠린드롬을 만족하는 행과열의 합은 홀수 일수는 없다. </li>\r\n                      <li> 3.  </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 14001 - 15000  </summary>\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 14888 번 - 연산자 끼워넣기 </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li> N개의 수로 이루어진 수열이 있다. </li>\r\n                      <li> 수와 수 사이에 연산자를 끼어넣을 수 있다. </li>\r\n                      <li> 연산자는 + , - , / , * 이 있다. </li>\r\n                      <li> 식의 계산은 연산자의 우선순위를 무시하고 순서대로 계산한다. </li>\r\n                      <li> 나눗셈은 몫만 챙기고 나머지는 버린다. </li>\r\n                      <li> 음수를 나누면 양수로 바꾼후 몫을 가지고 음수로 바꾼다. </li>\r\n                      <li> 식의 결과가 최대인 것과 최소인 값을 구하라 </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 1번째 줄에 N {' 2 <= N <= 11'}의 갯수가 주어진다. </li>\r\n                      <li> 2번째 줄에 공백을 구분으로 수열의 수를 입력한다. </li>\r\n                      <li> 3번쨰 줄에 공백을 구분으로 +,-,*,/ 의 개수가 주어진다. </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 1번째 줄에는 최댓값 출력 </li>\r\n                      <li> 2번째 줄에는 최솟값 출력 </li>\r\n                      <li> 계산이 되는 중에 값들은 -10억 ~ 10억 사이의 값만 갖는다. </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 1. 연산자를 넣을 때 중복되는 연산자는 제외한다. </li>\r\n                      <li> 2. 연산자의 우선순위가 없다는 것은 이웃한 수끼리 묶어서 계산해야한다. </li>\r\n                      <li> 3. 연산자가 음수일 경우에 대해서 판단을 해야한다.\r\n                        <li> 파이썬에서는 양수를 음수로 나누어도 결과값이 나온다... C는 안그랬던거 같은데 ㅠㅠ </li>\r\n                      </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li> import sys </li>\r\n                          <li> N = int(sys.stdin.readline().rstrip()) </li>\r\n                          <li> A_list = list(map(int, sys.stdin.readline().rstrip().split())) </li>\r\n                          <li> operator_list = list(map(int, sys.stdin.readline().rstrip().split())) </li>\r\n                          <li> sum_list = [] </li> <br />\r\n                          <li> def dfs(A_value, count): <br />\r\n                            <li> if count == N-1:\r\n                              <li> sum_list.append(A_value) </li> <br />\r\n                            </li>\r\n                            <li> for i in range(4):\r\n                              <li> if operator_list[i] {'>'} 0:\r\n                                <li> if i == 0:\r\n                                  <li> temp = A_value + A_list[count+1] </li>\r\n                                </li>\r\n                                <li> if i == 1:\r\n                                  <li> temp = A_value - A_list[count+1] </li>\r\n                                </li>\r\n                                <li> if i == 2:\r\n                                  <li> temp = A_value * A_list[count+1] </li>\r\n                                </li>\r\n                                <li> if i == 3:\r\n                                  <li> if A_value {'<'} 0 and A_list[count+1] {'<'} 0:\r\n                                    <li> temp = int((A_value * -1) / (A_list[count+1] * -1)) </li>\r\n                                  </li>\r\n                                  <li> elif A_value {'<'} 0 or A_list[count+1] {'<'} 0:\r\n                                    <li> temp = int((abs(A_value) / abs(A_list[count+1])) * -1) </li>\r\n                                  </li>\r\n                                  <li> else:\r\n                                    <li> temp = int(A_value / A_list[count+1]) </li>\r\n                                  </li>\r\n                                </li>\r\n                                <li> operator_list[i] -= 1 </li>\r\n                                <li> dfs(temp, count+1) </li>\r\n                                <li> operator_list[i] += 1 </li>\r\n                              </li>\r\n                            </li>\r\n                          </li> <br />\r\n                          <li> dfs(A_list[0], 0) </li>\r\n                          <li> print(max(sum_list)) </li>\r\n                          <li> print(min(sum_list)) </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 번 끝 */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 번 끝 */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 15001 - 16000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 16001 - 17000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 17001 - 18000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n          </span>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CTBaekJoon;\r\n\r\n\r\n{/*\r\n<details>\r\n    <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n    <span className=\"sblock\">\r\n        <li> <h3> 문제 </h3>\r\n            <li>  </li>\r\n        </li>\r\n        <li> <h3> 입력(문제 조건) </h3>\r\n            <li>  </li>\r\n        </li>\r\n        <li> <h3> 출력 </h3>\r\n            <li>  </li>\r\n        </li>\r\n        <li> <h3> 풀이 방법 - 생각 </h3>\r\n            <li>   </li>\r\n        </li>\r\n        <li> <h3> 정답 코드 </h3>\r\n            <details>\r\n                <summary className=\"sstitle\"> ▶ Python </summary>\r\n                <span className=\"mblock\">\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                </span>\r\n            </details>\r\n            <details>\r\n                <summary className=\"sstitle\"> ▶ C </summary>\r\n                <span className=\"mblock\">\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                </span>\r\n            </details>\r\n            <details>\r\n                <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                <span className=\"mblock\">\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                </span>\r\n            </details>\r\n        </li>\r\n    </span>\r\n</details>\r\n\r\n*/}","import React from 'react';\r\n\r\nconst ProgramRecDev = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Everything - 윈도우에서 빠른 검색으로 파일 찾기\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 윈도우 검색 창을 사용하면 매번 찾을 때마다 모든 내용을 찾음 하지만 Everything은\r\n                                        검색해둔 색인을 기억해두어서 빠르게 찾을 수 있음 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 설치 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> <a href=\"https://www.voidtools.com/ko-kr/downloads/\" target=\"_blank\"> 다운로드 링크 </a> </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 설치 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> <a href=\"\" target=\"_blank\"> 다운로드 링크 </a> </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 설치 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> <a href=\"\" target=\"_blank\"> 다운로드 링크 </a> </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProgramRecDev;","import React from 'react';\r\nimport './Main.css';\r\nimport './commonStyle.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// ========== 백엔드 ==========\r\n// 자바\r\nimport JavaBasic from './Main/JavaContent/JavaBasic';\r\nimport JavaSerializable from './Main/JavaContent/JavaSerializable';\r\nimport JavaModifier from './Main/JavaContent/JavaModifier';\r\nimport JavaAnnotation from './Main/JavaContent/JavaAnnotation';\r\n\r\n\r\n// PHP\r\nimport PhpBasic from './Main/PhpContent/PhpBasic';\r\n\r\n// 노드JS\r\nimport NodejsBasic from './Main/NodejsContent/NodejsBasic';\r\n\r\n// 스프링\r\nimport SpringError from './Main/SpringContent/SpringError';\r\nimport SpringCode from './Main/SpringContent/SpringCode';\r\nimport SpringBasic from './Main/SpringContent/SpringBasic';\r\nimport SpringThymeleaf from './Main/SpringContent/SpringThymeleaf';\r\nimport SpringLombok from './Main/SpringContent/SpringLombok';\r\nimport SpringAnnotation from './Main/SpringContent/SpringAnnotation';\r\nimport SpringJpa from './Main/SpringContent/SpringJpa';\r\nimport SpringSetting from './Main/SpringContent/SpringSetting';\r\nimport SpringAPI from './Main/SpringContent/SpringAPI';\r\nimport SpringOAuth2 from './Main/SpringContent/SpringOAuth2';\r\nimport SpringSecurity from './Main/SpringContent/SpringSecurity';\r\nimport SpringSecurityExCode1 from './Main/SpringContent/SpringSecurityExCode1';\r\nimport SpringSecurityExCode2 from './Main/SpringContent/SpringSecurityExCode2';\r\nimport SpringSecurityExCode3 from './Main/SpringContent/SpringSecurityExCode3';\r\nimport SpringSecurityExCode4 from './Main/SpringContent/SpringSecurityExCode4';\r\n\r\n// JSP, Servlet\r\nimport JspServletBasic from './Main/JspServletContent/JspServletBasic';\r\nimport JspServletBulletinBoard from './Main/JspServletContent/JspServletBulletinBoard';\r\nimport JspServletJstl from './Main/JspServletContent/JspServletJstl';\r\nimport JspServletEl from './Main/JspServletContent/JspServletEl';\r\nimport JspServletJdbc from './Main/JspServletContent/JspServletJdbc';\r\nimport JspServletInformation from './Main/JspServletContent/JspServletInformation';\r\n\r\n// 백엔드 개발자\r\nimport BackendBasic from './Main/BackendContent/BackendBasic';\r\nimport BackendSolid from './Main/BackendContent/BackendSolid';\r\nimport BackendBrowserDevTool from './Main/BackendContent/BackendBrowserDevTool';\r\nimport BackendSCTCache from './Main/BackendContent/BackendSCTCache';\r\n\r\n// ========== 프론트엔드 ==========\r\n// HTML\r\nimport HtmlBasic from './Main/HtmlContent/HtmlBasic';\r\nimport HtmlDOM from './Main/HtmlContent/HtmlDOM';\r\nimport HtmlError from './Main/HtmlContent/HtmlError';\r\n\r\n// CSS\r\nimport CssBasic from './Main/CssContent/CssBasic';\r\nimport CssBlurBusinessCard from './Main/CssContent/CssBlurBusinessCard';\r\nimport CssTextAndVideo from './Main/CssContent/CssTextAndVideo';\r\n\r\n// 타입스크립트\r\n\r\n// 자바스크립트\r\nimport JavaScriptBasic from './Main/JavaScriptContent/JavaScriptBasic';\r\n\r\n// 리액트\r\nimport ReactBasic from './Main/ReactContent/ReactBasic';\r\nimport ReactJavaScript from './Main/ReactContent/ReactJavaScript';\r\nimport ReactVscode from './Main/ReactContent/ReactVscode';\r\n\r\n// 프론트 개발자\r\nimport FrontendBasic from './Main/FrontendContent/FrontendBasic';\r\nimport FrontendBrowserDevTool from './Main/FrontendContent/FrontendBrowserDevTool';\r\nimport FrontendRegex from './Main/FrontendContent/FrontendRegex';\r\n\r\n// ========== 기타 ==========\r\n// 데이터 베이스\r\nimport DBOracleBasic from './Main/DatabaseContent/DBOracleBasic';\r\nimport DBMySQLBasic from './Main/DatabaseContent/DBMySQLBasic';\r\nimport DBVariableName from './Main/DatabaseContent/DBVariableName';\r\nimport DBMariaBasic from './Main/DatabaseContent/DBMariaBasic';\r\n\r\n// 디자인 패턴\r\nimport DPMvc2 from './Main/DesignPatternContent/DPMvc2';\r\nimport DPMvp from './Main/DesignPatternContent/DPMvp';\r\nimport DPMvvm from './Main/DesignPatternContent/DPMvvm';\r\n\r\n// 보안\r\nimport SecurityBasic from './Main/SecurityContent/SecurityBasic';\r\nimport SecurityJwt from './Main/SecurityContent/SecurityJwt';\r\nimport SecurityHmac from './Main/SecurityContent/SecurityHmac';\r\nimport SecurityHash from './Main/SecurityContent/SecurityHash';\r\nimport SecurityEncryption from './Main/SecurityContent/SecurityEncryption';\r\nimport SecurityHackingAttack from './Main/SecurityContent/SecurityHackingAttack';\r\nimport SecurityIpSpoofing from './Main/SecurityContent/SecurityIpSpoofing';\r\n\r\n// 네트워크\r\nimport NetworkBasic from './Main/NetworkContent/NetworkBasic';\r\nimport NetworkCommand from './Main/NetworkContent/NetworkCommand';\r\nimport NetworkArpprotocol from './Main/NetworkContent/NetworkArpprotocol';\r\nimport NetworkOSI7Layer from './Main/NetworkContent/NetworkOSI7Layer';\r\nimport NetworkThreeWayHandshake from './Main/NetworkContent/NetworkThreeWayHandshake';\r\nimport NetworkDevice from './Main/NetworkContent/NetworkDevice';\r\nimport NetworkWireshark from './Main/NetworkContent/NetworkWireshark';\r\nimport NetworkProtocol from './Main/NetworkContent/NetworkProtocol';\r\n\r\n// 알고리즘\r\nimport Algorithm_Backtracking from './Main/AlgorithmContent/Algorithm_Backtracking';\r\nimport Algorithm_Divide_Conquer from './Main/AlgorithmContent/Algorithm_Divide_Conquer';\r\nimport Algorithm_Dynamic from './Main/AlgorithmContent/Algorithm_Dynamic';\r\nimport Algorithm_Graph from './Main/AlgorithmContent/Algorithm_Graph';\r\nimport Algorithm_Greedy from './Main/AlgorithmContent/Algorithm_Greedy';\r\nimport Algorithm_Hash from './Main/AlgorithmContent/Algorithm_Hash';\r\nimport Algorithm_Recursive from './Main/AlgorithmContent/Algorithm_Recursive';\r\nimport Algorithm_Search from './Main/AlgorithmContent/Algorithm_Search';\r\nimport Algorithm_Sort from './Main/AlgorithmContent/Algorithm_Sort';\r\nimport Algorithm_Basic from './Main/AlgorithmContent/Algorithm_Basic';\r\n\r\n\r\n// 자료구조\r\n\r\n// 클라우드\r\n\r\n// 윈도우\r\nimport WindowCommand from './Main/WindowContent/WindowCommand';\r\nimport WindowSystem from './Main/WindowContent/WindowSystem';\r\n\r\n// 리눅스\r\nimport LinuxBasic from './Main/LinuxContent/LinuxBasic';\r\nimport LinuxCommand from './Main/LinuxContent/LinuxCommand';\r\nimport LinuxMobaXterm from './Main/LinuxContent/LinuxMobaXterm';\r\nimport LinuxVimEditor from './Main/LinuxContent/LinuxVimEditor';\r\nimport LinuxDirectory from './Main/LinuxContent/LinuxDirectory';\r\nimport LinuxUbuntu from './Main/LinuxContent/LinuxUbuntu';\r\nimport LinuxCentOS7 from './Main/LinuxContent/LinuxCentOS7';\r\nimport LinuxShell from './Main/LinuxContent/LinuxShell';\r\nimport LinuxShellScript from './Main/LinuxContent/LinuxShellScript';\r\nimport LinuxServer from './Main/LinuxContent/LinuxServer';\r\nimport LinuxProgramInstall from './Main/LinuxContent/LinuxProgramInstall';\r\n\r\n// 용어\r\nimport Term from './Main/TermContent/Term';\r\n\r\n// 단축키, 설정\r\nimport KeyMapVscode from './Main/KeyMapContent/KeyMapVscode';\r\nimport KeyMapIntellij from './Main/KeyMapContent/KeyMapIntellij';\r\nimport KeyMapEclipse from './Main/KeyMapContent/KeyMapEclipse';\r\nimport KeyMapWindow from './Main/KeyMapContent/KeyMapWindow';\r\nimport KeyMapBrowser from './Main/KeyMapContent/KeyMapBrowser';\r\n\r\n// 깃허브\r\nimport GithubBasic from './Main/GithubContent/GithubBasic';\r\n\r\n//  참고사이트\r\nimport RefBlog from './Main/RefBlogContent/RefBlog';\r\n\r\n// 파이썬\r\nimport PythonBasic from './Main/PythonContent/PythonBasic';\r\nimport PythonRegex from './Main/PythonContent/PythonRegex';\r\n\r\n// 인공지능\r\nimport AiBasic from './Main/AIContent/AiBasic';\r\n\r\n// 블록체인\r\nimport BlockChainPow from './Main/BlockChainContent/BlockChainPow';\r\n\r\n// 코딩테스트\r\nimport CTBaekJoon from './Main/CodingTestContent/CTBaekJoon';\r\n\r\n// 추천 프로그램\r\nimport ProgramRecDev from './Main/ProgramContent/ProgramRecDev';\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Switch>\r\n                {/*========== 백엔드 ========== */}\r\n                {/* 자바 */}\r\n                <Route path=\"/java_basic\" component={JavaBasic}></Route>\r\n                <Route path=\"/java_serializable\" component={JavaSerializable}></Route>\r\n                <Route path=\"/java_modifier\" component={JavaModifier}></Route>\r\n                <Route path=\"/java_annotation\" component={JavaAnnotation}></Route>\r\n\r\n                {/* PHP */}\r\n                <Route path=\"/php_basic\" component={PhpBasic}></Route>\r\n\r\n                {/* 노드JS */}\r\n                <Route path=\"/nodejs_basic\" component={NodejsBasic}></Route>\r\n\r\n                {/* 스프링 */}\r\n                <Route path=\"/spring_error\" component={SpringError}></Route>\r\n                <Route path=\"/spring_code\" component={SpringCode}></Route>\r\n                <Route path=\"/spring_basic\" component={SpringBasic}></Route>\r\n                <Route path=\"/spring_thymeleaf\" component={SpringThymeleaf}></Route>\r\n                <Route path=\"/spring_jpa\" component={SpringJpa}></Route>\r\n                <Route path=\"/spring_lombok\" component={SpringLombok}></Route>\r\n                <Route path=\"/spring_annotation\" component={SpringAnnotation}></Route>\r\n                <Route path=\"/spring_setting\" component={SpringSetting}></Route>\r\n                <Route path=\"/spring_api\" component={SpringAPI}></Route>\r\n                <Route path=\"/spring_oauth2\" component={SpringOAuth2}></Route>\r\n                <Route path=\"/spring_security\" component={SpringSecurity}></Route>\r\n                <Route path=\"/spring_securityexcode1\" component={SpringSecurityExCode1}></Route>\r\n                <Route path=\"/spring_securityexcode2\" component={SpringSecurityExCode2}></Route>\r\n                <Route path=\"/spring_securityexcode3\" component={SpringSecurityExCode3}></Route>\r\n                <Route path=\"/spring_securityexcode4\" component={SpringSecurityExCode4}></Route>\r\n\r\n                {/* JSP , Servlet */}\r\n                <Route path=\"/jspservlet_information\" component={JspServletInformation}></Route>\r\n                <Route path=\"/jspservlet_basic\" component={JspServletBasic}></Route>\r\n                <Route path=\"/jspservlet_bulletinboard\" component={JspServletBulletinBoard}></Route>\r\n                <Route path=\"/jspservlet_jstl\" component={JspServletJstl}></Route>\r\n                <Route path=\"/jspservlet_el\" component={JspServletEl}></Route>\r\n                <Route path=\"/jspservlet_jdbc\" component={JspServletJdbc}></Route>\r\n\r\n                {/* 백엔드 개발자 */}\r\n                <Route path=\"/backend_basic\" component={BackendBasic}></Route>\r\n                <Route path=\"/backend_solid\" component={BackendSolid}></Route>\r\n                <Route path=\"/backend_sctcache\" component={BackendSCTCache}></Route>\r\n                <Route path=\"/backend_browserdevtool\" component={BackendBrowserDevTool}></Route>\r\n\r\n                {/*========== 프론트엔드 ==========*/}\r\n\r\n                {/* HTML */}\r\n                <Route path=\"/html_basic\" component={HtmlBasic}></Route>\r\n                <Route path=\"/html_dom\" component={HtmlDOM}></Route>\r\n                <Route path=\"/html_error\" component={HtmlError}></Route>\r\n\r\n                {/* CSS */}\r\n                <Route path=\"/css_basic\" component={CssBasic}></Route>\r\n                <Route path=\"/css_blur business card\" component={CssBlurBusinessCard}></Route>\r\n                <Route path=\"/css_text and video\" component={CssTextAndVideo}></Route>\r\n\r\n                {/* 타입스크립트 */}\r\n\r\n                {/* 자바스크립트  */}\r\n                <Route path=\"/javascript_basic\" component={JavaScriptBasic}></Route>\r\n\r\n                {/* 리액트 */}\r\n                <Route path=\"/react_basic\" component={ReactBasic}></Route>\r\n                <Route path=\"/react_javascript\" component={ReactJavaScript}></Route>\r\n                <Route path=\"/react_vscode\" component={ReactVscode}></Route>\r\n\r\n                {/* 프론트 개발자 */}\r\n                <Route path=\"/frontend_basic\" component={FrontendBasic}></Route>\r\n                <Route path=\"/frontend_browserdevtool\" component={FrontendBrowserDevTool}></Route>\r\n                <Route path=\"/frontend_regex\" component={FrontendRegex}></Route>\r\n\r\n                {/*========== 기타 ==========*/}\r\n\r\n                {/* 데이터 베이스 */}\r\n                <Route path=\"/db_oraclebasic\" component={DBOracleBasic}></Route>\r\n                <Route path=\"/db_mysqlbasic\" component={DBMySQLBasic}></Route>\r\n                <Route path=\"/db_variablename\" component={DBVariableName}></Route>\r\n                <Route path=\"/db_mariabasic\" component={DBMariaBasic}></Route>\r\n\r\n                {/* 디자인 패턴 */}\r\n                <Route path=\"/dp_mvc2\" component={DPMvc2}></Route>\r\n                <Route path=\"/dp_mvp\" component={DPMvp}></Route>\r\n                <Route path=\"/dp_mvvm\" component={DPMvvm}></Route>\r\n\r\n                {/* 보안 */}\r\n                <Route path=\"/security_basic\" component={SecurityBasic}></Route>\r\n                <Route path=\"/security_jwt\" component={SecurityJwt}></Route>\r\n                <Route path=\"/security_hmac\" component={SecurityHmac}></Route>\r\n                <Route path=\"/security_hash\" component={SecurityHash}></Route>\r\n                <Route path=\"/security_encryption\" component={SecurityEncryption}></Route>\r\n                <Route path=\"/security_hackingattack\" component={SecurityHackingAttack}></Route>\r\n                <Route path=\"/security_ipspoofing\" component={SecurityIpSpoofing}></Route>\r\n\r\n                {/* 네트워크 */}\r\n                <Route path=\"/network_basic\" component={NetworkBasic}></Route>\r\n                <Route path=\"/network_command\" component={NetworkCommand}></Route>\r\n                <Route path=\"/network_arpprotocol\" component={NetworkArpprotocol}></Route>\r\n                <Route path=\"/network_osi7layer\" component={NetworkOSI7Layer}></Route>\r\n                <Route path=\"/network_threewayhandshake\" component={NetworkThreeWayHandshake}></Route>\r\n                <Route path=\"/network_device\" component={NetworkDevice}></Route>\r\n                <Route path=\"/network_wireshark\" component={NetworkWireshark}></Route>\r\n                <Route path=\"/network_protocol\" component={NetworkProtocol}></Route>\r\n\r\n                {/* 알고리즘 */}\r\n                <Route path=\"/algorithm_backtracking\" component={Algorithm_Backtracking}></Route>\r\n                <Route path=\"/algorithm_divide_conquer\" component={Algorithm_Divide_Conquer}></Route>\r\n                <Route path=\"/algorithm_dynamic\" component={Algorithm_Dynamic}></Route>\r\n                <Route path=\"/algorithm_graph\" component={Algorithm_Graph}></Route>\r\n                <Route path=\"/algorithm_greedy\" component={Algorithm_Greedy}></Route>\r\n                <Route path=\"/algorithm_hash\" component={Algorithm_Hash}></Route>\r\n                <Route path=\"/algorithm_recursive\" component={Algorithm_Recursive}></Route>\r\n                <Route path=\"/algorithm_search\" component={Algorithm_Search}></Route>\r\n                <Route path=\"/algorithm_sort\" component={Algorithm_Sort}></Route>\r\n                <Route path=\"/algorithm_basic\" component={Algorithm_Basic}></Route>\r\n\r\n                {/* 자료구조 */}\r\n\r\n                {/* 클라우드 */}\r\n\r\n                {/* 윈도우 */}\r\n                <Route path=\"/window_command\" component={WindowCommand}></Route>\r\n                <Route path=\"/window_system\" component={WindowSystem}></Route>\r\n\r\n                {/* 리눅스 */}\r\n                <Route path=\"/linux_basic\" component={LinuxBasic}></Route>\r\n                <Route path=\"/linux_command\" component={LinuxCommand}></Route>\r\n                <Route path=\"/linux_mobaxterm\" component={LinuxMobaXterm}></Route>\r\n                <Route path=\"/linux_vimeditor\" component={LinuxVimEditor}></Route>\r\n                <Route path=\"/linux_directory\" component={LinuxDirectory}></Route>\r\n                <Route path=\"/linux_ubuntu\" component={LinuxUbuntu}></Route>\r\n                <Route path=\"/linux_centos7\" component={LinuxCentOS7}></Route>\r\n                <Route path=\"/linux_shell\" component={LinuxShell}></Route>\r\n                <Route path=\"/linux_shellscript\" component={LinuxShellScript}></Route>\r\n                <Route path=\"/linux_server\" component={LinuxServer}></Route>\r\n                <Route path=\"/linux_programinstall\" component={LinuxProgramInstall}></Route>\r\n\r\n                {/* 용어 */}\r\n                <Route path=\"/term\" component={Term}></Route>\r\n\r\n                {/* 단축키,설정 */}\r\n                <Route path=\"/keymap_intellij\" component={KeyMapIntellij}></Route>\r\n                <Route path=\"/keymap_vscode\" component={KeyMapVscode}></Route>\r\n                <Route path=\"/keymap_eclipse\" component={KeyMapEclipse}></Route>\r\n                <Route path=\"/keymap_window\" component={KeyMapWindow}></Route>\r\n                <Route path=\"/keymap_browser\" component={KeyMapBrowser}></Route>\r\n\r\n                {/* 깃허브 */}\r\n                <Route path=\"/github_basic\" component={GithubBasic}></Route>\r\n\r\n                {/* 참고 사이트 */}\r\n                <Route path=\"/ref_blog\" component={RefBlog}></Route>\r\n\r\n                {/* 파이썬 */}\r\n                <Route path=\"/python_basic\" component={PythonBasic}></Route>\r\n                <Route path=\"/python_regex\" component={PythonRegex}></Route>\r\n\r\n                {/* 인공지능 */}\r\n                <Route path=\"/ai_basic\" component={AiBasic}></Route>\r\n\r\n                {/* 블록체인 */}\r\n                <Route path=\"/blockchain_pow\" component={BlockChainPow}></Route>\r\n\r\n                {/* 코딩테스트 */}\r\n                <Route path=\"/codingtest_baekjoon\" component={CTBaekJoon}></Route>\r\n\r\n                {/* 추천 프로그램 */}\r\n                <Route path=\"/program_recdev\" component={ProgramRecDev}></Route>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\nimport './NavMenu.css';\r\n\r\nconst NavMenu = (props) => {\r\n\r\n    function send(page) {\r\n        props.onChangePage(page)\r\n    }\r\n\r\n    return (\r\n        <div className=\"navMenu\">\r\n            <div className=\"firstMenu menu\">\r\n                <p> 백엔드 </p>\r\n                <button onClick={() => { send(\"java\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Java_icon.png'} /> JAVA </button>\r\n                <button onClick={() => { send(\"php\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Php_icon.svg'} /> PHP </button>\r\n                <button onClick={() => { send(\"nodejs\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Nodejs_icon.png'} /> Node.js </button>\r\n                <button onClick={() => { send(\"spring\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Spring_icon.svg'} /> Spring </button>\r\n                <button onClick={() => { send(\"jspservlet\") }}> JSP&amp;servlet </button>\r\n                <button onClick={() => { send(\"backend\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Backenddvl_icon.svg'} /> <span> 백엔드 개발자 </span> </button>\r\n            </div>\r\n            <div className=\"secondMenu menu\">\r\n                <p> 프론트엔드 </p>\r\n                <button onClick={() => { send(\"html\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Html_icon.png'} /> HTML </button>\r\n                <button onClick={() => { send(\"css\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Css_icon.svg'} /> CSS </button>\r\n                <button onClick={() => { send(\"typescript\") }}> TypeScript </button>\r\n                <button onClick={() => { send(\"javascript\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Javascript_icon.svg'} /> <span> JavaScript</span> </button>\r\n                <button onClick={() => { send(\"react\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/React_icon.svg'} /> React </button>\r\n                <button onClick={() => { send(\"frontend\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Frontenddvl_icon.svg'} /> <span> 프론트 개발자 </span> </button>\r\n            </div>\r\n            <div className=\"thirdMenu menu\">\r\n                <p> 기타 </p>\r\n                <button onClick={() => { send(\"database\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Database_icon.svg'} /> DataBase </button>\r\n                <button onClick={() => { send(\"designpattern\") }}> 디자인패턴 </button>\r\n                <button onClick={() => { send(\"security\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Security_icon.svg'} /> 보안</button>\r\n                <button onClick={() => { send(\"network\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Network_icon.svg'} /> 네트워크</button>\r\n                <button onClick={() => { send(\"algorithm\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Algorithm_icon.svg'} /> 알고리즘 </button>\r\n                <button onClick={() => { send(\"contructdata\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/DataStructure_icon.svg'} /> 자료구조 </button>\r\n                <button onClick={() => { send(\"cloud\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Cloud_icon.svg'} /> 클라우드 </button>\r\n                <button onClick={() => { send(\"window\") }}>  <img src={process.env.PUBLIC_URL + '/img/NavMenu/Window_icon.svg'} /> window</button>\r\n                <button onClick={() => { send(\"linux\") }}>   <img src={process.env.PUBLIC_URL + '/img/NavMenu/Linux_icon.svg'} /> Linux </button>\r\n                <button onClick={() => { send(\"term\") }}> 용어 </button>\r\n                <button onClick={() => { send(\"keymap\") }}> 단축키&amp;설정 </button>\r\n                <button onClick={() => { send(\"github\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Github_icon.svg'} /> 깃허브 </button>\r\n                <button onClick={() => { send(\"refblog\") }}> 참고 블로그 </button>\r\n                <button onClick={() => { send(\"python\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Python_icon.svg'} /> Python </button>\r\n                <button onClick={() => { send(\"ai\") }}> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Ai_icon.svg'} /> 인공지능 </button>\r\n                <button onClick={() => { send(\"blockchain\") }}>  블록체인 </button>\r\n                <button onClick={() => { send(\"codingtest\") }}>  코딩테스트 </button>\r\n                <button onClick={() => { send(\"program\") }}>  <h5> 추천 프로그램 </h5> </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HtmlList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/html_basic\"> HTML 기본 문법 </Link>\r\n                <Link to=\"/html_dom\"> HTML DOM </Link>\r\n                <Link to=\"/html_error\"> HTML 에러 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HtmlList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CssList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/css_basic\"> CSS 기본 문법 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/css_blur business card\"> 명함 불러 만들기</Link>\r\n                <Link to=\"/css_text and video\"> 글씨 뒤로 비디오 효과주기 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CssList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst JavaSciptList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/javascript_basic\"> JavaScript 공부 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JavaSciptList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ReactList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/react_basic\"> 리액트 기초 </Link>\r\n                <Link to=\"/react_javascript\"> 리액트 자바스크립트 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/react_vscode\"> 리액트 Vscode 익스텐션 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst JavaList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/java_basic\"> JAVA 공부 </Link>\r\n                <Link to=\"/java_annotation\"> JAVA 어노테이션 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/java_serializable\"> 직렬화 </Link>\r\n                <Link to=\"/java_modifier\"> 한정자 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JavaList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PhpList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/php_basic\"> PHP 기본 문법 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PhpList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NodeJsList = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/nodejs_basic\"> NodeJs 기본 문법 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NodeJsList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst JspServletList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/jspservlet_information\"> JSP,Servlet 정보 </Link>\r\n                <Link to=\"/jspservlet_basic\"> JSP,Servlet 공부 </Link>\r\n                <Link to=\"/jspservlet_bulletinboard\"> JSP,Servlet 게시판만들기 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/jspservlet_jstl\"> JSP JSTL </Link>\r\n                <Link to=\"/jspservlet_el\"> JSP EL </Link>\r\n                <Link to=\"/jspservlet_jdbc\"> JDBC </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JspServletList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SpringList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/spring_error\"> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Error_icon.svg'} /> 스프링 오류 </Link>\r\n                <Link to=\"/spring_code\"> 스프링 코드 정리 </Link>\r\n                <Link to=\"/spring_basic\"> 스프링 기초 </Link>\r\n                <Link to=\"/spring_thymeleaf\"> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Thymeleaf_icon.svg'} /> Thymeleaf </Link>\r\n                <Link to=\"/spring_jpa\"> 스프링 JPA </Link>\r\n                <Link to=\"/spring_lombok\"> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Lombok_icon.svg'} /> Lombok </Link>\r\n                <Link to=\"/spring_annotation\"> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Annotation_icon.svg'} /> Annotation </Link>\r\n                <Link to=\"/spring_setting\"> <img src={process.env.PUBLIC_URL + '/img/NavMenu/Settings_icon.svg'} /> 외부 설정 파일 </Link>\r\n                <Link to=\"/spring_api\"> 스프링 관련 API </Link>\r\n                <Link to=\"/spring_oauth2\">  스프링 OAuth2  </Link>\r\n                <Link to=\"/spring_security\"> 스프링 Security </Link>\r\n\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/spring_securityexcode1\"> 스프링 로그인폼 테스트 </Link>\r\n                <Link to=\"/spring_securityexcode2\"> MySQL - Login </Link>\r\n                <Link to=\"/spring_securityexcode3\"> MySQL - Login - Security </Link>\r\n                <Link to=\"/spring_securityexcode4\"> 스프링 Security ExCode4 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpringList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DatabaseList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/db_oraclebasic\"> OreacleDB 공부 </Link>\r\n                <Link to=\"/db_mysqlbasic\"> Mysql 공부 </Link>\r\n                <Link to=\"/db_variablename\"> Database 변수 이름 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/db_mariabasic\"> MariaDB 공부 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatabaseList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst WindowList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/window_command\"> 윈도우 명령어 </Link>\r\n                <Link to=\"/window_system\"> 윈도우 시스템 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WindowList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinuxList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/linux_basic\"> 리눅스 공부 </Link>\r\n                <Link to=\"/linux_command\"> 리눅스 명령어 </Link>\r\n                <Link to=\"/linux_directory\"> 리눅스 디렉토리 구조 </Link>\r\n                <Link to=\"/linux_shellscript\"> 리눅스 쉘 스크립트 </Link>\r\n                <Link to=\"/linux_server\"> 리눅스 서버 </Link>\r\n                <Link to=\"/linux_programinstall\"> 리눅스 프로그램 설치 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/linux_ubuntu\"> 리눅스 우분투 </Link>\r\n                <Link to=\"/linux_centos7\"> 리눅스 CentOS7 </Link>\r\n                <Link to=\"/linux_mobaxterm\"> 리눅스 MobaXterm </Link>\r\n                <Link to=\"/linux_vimeditor\"> 리눅스 VimEditor </Link>\r\n                <Link to=\"/linux_shell\"> 리눅스 쉘 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinuxList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NetworkList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/network_basic\"> 네트워크 기초 </Link>\r\n                <Link to=\"/network_command\"> 네트워크 명령어 </Link>\r\n                <Link to=\"/network_arpprotocol\"> 네트워크 ARP 프로토콜 </Link>\r\n                <Link to=\"/network_osi7layer\"> 네트워크 OSI 7 계층 </Link>\r\n                <Link to=\"/network_threewayhandshake\"> 네트워크 3WayHandshake </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/network_device\"> 네트워크 관련 장치 </Link>\r\n                <Link to=\"/network_wireshark\"> 네트워크 와이어샤크 </Link>\r\n                <Link to=\"/network_protocol\"> 네트워크 프로토콜 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NetworkList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TermList = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/term\"> 용어 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TermList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst KeyMapList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/keymap_intellij\"> 인텔리제이 단축키 및 설정 </Link>\r\n                <Link to=\"/keymap_vscode\"> 비쥬얼코드 단축키 및 설정 </Link>\r\n                <Link to=\"/keymap_eclipse\"> 이클립스 단축키 및 설정 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/keymap_window\"> 윈도우 단축키 및 설정 </Link>\r\n                <Link to=\"/keymap_browser\"> 브라우저 단축키 및 설정 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeyMapList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst GithubList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/github_basic\"> 깃허브 공부 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GithubList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RefBlogList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/ref_blog\"> 참고 블로그 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RefBlogList;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PtyhonList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/python_basic\"> Python 공부 </Link>\r\n                <Link to=\"/python_regex\"> Python 정규표현식 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PtyhonList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AIList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/ai_basic\"> 인공지능 공부 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AIList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AlgorithmList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/algorithm_basic\"> 알고리즘 기초 </Link>\r\n                <Link to=\"/algorithm_backtracking\"> 백트래킹 </Link>\r\n                <Link to=\"/algorithm_divide_conquer\"> 분할 알고리즘 </Link>\r\n                <Link to=\"/algorithm_dynamic\"> 동적 계획법 </Link>\r\n                <Link to=\"/algorithm_graph\"> 그래프 알고리즘 </Link>\r\n                <Link to=\"/algorithm_greedy\"> 탐욕 알고리즘 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/algorithm_hash\"> 해시 알고리즘 </Link>\r\n                <Link to=\"/algorithm_recursive\"> 재귀 알고리즘 </Link>\r\n                <Link to=\"/algorithm_search\"> 검색 알고리즘 </Link>\r\n                <Link to=\"/algorithm_sort\"> 정렬 알고리즘 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlgorithmList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FrontendList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/frontend_basic\"> 프론트 개발 </Link>\r\n                <Link to=\"/frontend_regex\"> 프론트 정규표현식 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/frontend_browserdevtool\"> 브라우저 개발자 도구 </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FrontendList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BackendList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/BackendBasic\"> 백엔드 개발 </Link>\r\n                <Link to=\"/BackendSolid\"> Solid 5대 원칙 </Link>\r\n                <Link to=\"/BackendSCTCache\"> 세션 쿠키 토큰 캐시 </Link>\r\n                <Link to=\"/BackendBrowserDevTool\"> 브라우저 개발자 도구 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackendList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BlankList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/security_basic\"> 보안 공부 </Link>\r\n                <Link to=\"/security_jwt\"> JWT 토큰 </Link>\r\n                <Link to=\"/security_hmac\"> HMAC 알고리즘 </Link>\r\n                <Link to=\"/security_hash\"> HASH </Link>\r\n                <Link to=\"/security_encryption\"> 암호화</Link>\r\n                <Link to=\"/security_hackingattack\"> 해킹 공격 </Link>\r\n                <Link to=\"/security_ipspoofing\"> IP Spoofing </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlankList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BlockChain = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/blockchain_pow\"> BlockChainPow  </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlockChain;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DesignPatternList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/dp_mvc2\"> MVC2 </Link>\r\n                <Link to=\"/dp_mvp\">  MVP  </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/dp_mvvm\"> MVVM </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DesignPatternList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CodingTestList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/codingtest_baekjoon\"> 백준 알고리즘 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/\">  </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodingTestList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProgramList = () => {\r\n\r\n    return (\r\n        <div className=\"menucontainer\">\r\n            <div className=\"menu menu1\">\r\n                <Link to=\"/program_recdev\"> 개발자 추천 프로그램 </Link>\r\n            </div>\r\n            <div className=\"menu menu2\">\r\n                <Link to=\"/\">  </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgramList;","import HtmlList from './NavMenuList/HtmlList.jsx';\r\nimport CssList from './NavMenuList/CssList.jsx';\r\nimport JavaSciptList from './NavMenuList/JavaSciptList.jsx';\r\nimport ReactList from './NavMenuList/ReactList.jsx';\r\nimport JavaList from './NavMenuList/JavaList.jsx';\r\nimport PhpList from './NavMenuList/PhpList.jsx';\r\nimport NodeJsList from './NavMenuList/NodeJsList.jsx';\r\nimport JspServletList from './NavMenuList/JspServletList.jsx';\r\nimport SpringList from './NavMenuList/SpringList.jsx';\r\nimport DatabaseList from './NavMenuList/DatabaseList.jsx';\r\nimport WindowList from './NavMenuList/WindowList.jsx';\r\nimport LinuxList from './NavMenuList/LinuxList.jsx';\r\nimport NetworkList from './NavMenuList/NetworkList.jsx';\r\nimport TermList from './NavMenuList/TermList.jsx';\r\nimport KeyMapList from './NavMenuList/KeyMapList.jsx';\r\nimport GithubList from './NavMenuList/GithubList.jsx';\r\nimport RefBlogList from './NavMenuList/RefBlogList.jsx';\r\nimport PythonList from './NavMenuList/PythonList.jsx';\r\nimport AIList from './NavMenuList/AIList.jsx';\r\nimport AlgorithmList from './NavMenuList/AlgorithmList.jsx';\r\nimport FrontendList from './NavMenuList/FrontendList.jsx';\r\nimport BackendList from './NavMenuList/BackendList.jsx';\r\nimport SecurityList from './NavMenuList/SecurityList.jsx';\r\nimport BlockChainList from './NavMenuList/BlockChainList.jsx';\r\nimport DesignPatternList from './NavMenuList/DesignPatternList.jsx';\r\nimport CodingTestList from './NavMenuList/CodingTestList.jsx';\r\nimport ProgramList from './NavMenuList/ProgramList.jsx';\r\n\r\nimport './NavMenu2.css';\r\nimport './NavMenuListStyle.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavMenu2 = (props) => {\r\n\r\n    function send(page) {\r\n        props.onChangePage(page)\r\n    }\r\n    function send(page2) {\r\n        props.onChangePage(page2)\r\n    }\r\n    // function changeTitle(title) {\r\n    //     document.querySelector(\"title\").innerHTML = title;\r\n    // }\r\n\r\n\r\n    // NavMenu.jsx에서 선택한 목록을 보여주고 NavMenuList.jsx에서 클릭한 목록을 Main.jsx에 보여준다.\r\n    const showpage = () => {\r\n        // 프론트 엔드 메뉴\r\n        if (props.page === 'html') {\r\n            // { changeTitle('html') }\r\n            return <HtmlList onChangePage={(page2) => { send(page2) }}> </HtmlList>;\r\n        }\r\n        else if (props.page === 'css') {\r\n            return <CssList onChangePage={(page2) => { send(page2) }}> </CssList>;\r\n        }\r\n        else if (props.page === 'javascript') {\r\n            return <JavaSciptList onChangePage={(page2) => { send(page2) }}> </JavaSciptList>;\r\n        }\r\n        else if (props.page === 'react') {\r\n            return <ReactList onChangePage={(page2) => { send(page2) }}> </ReactList>;\r\n        }\r\n        else if (props.page === 'frontend') {\r\n            return <FrontendList onChangePage={(page2) => { send(page2) }}> </FrontendList>;\r\n        }\r\n        // 백엔드 메뉴\r\n        else if (props.page === 'java') {\r\n            return <JavaList onChangePage={(page2) => { send(page2) }}> </JavaList>;\r\n        }\r\n        else if (props.page === 'php') {\r\n            return <PhpList onChangePage={(page2) => { send(page2) }}> </PhpList>;\r\n        }\r\n        else if (props.page === 'nodejs') {\r\n            return <NodeJsList onChangePage={(page2) => { send(page2) }}> </NodeJsList>;\r\n        }\r\n        else if (props.page === 'spring') {\r\n            return <SpringList onChangePage={(page2) => { send(page2) }}> </SpringList>;\r\n        }\r\n        else if (props.page === 'jspservlet') {\r\n            return <JspServletList onChangePage={(page2) => { send(page2) }}> </JspServletList>;\r\n        }\r\n        else if (props.page === 'backend') {\r\n            return <BackendList onChangePage={(page2) => { send(page2) }}> </BackendList>;\r\n        }\r\n        //기타 메뉴\r\n        else if (props.page === 'database') {\r\n            return <DatabaseList onChangePage={(page2) => { send(page2) }}> </DatabaseList>;\r\n        }\r\n        else if (props.page === 'network') {\r\n            return <NetworkList onChangePage={(page2) => { send(page2) }}> </NetworkList>;\r\n        }\r\n        else if (props.page === 'window') {\r\n            return <WindowList onChangePage={(page2) => { send(page2) }}> </WindowList>;\r\n        }\r\n        else if (props.page === 'linux') {\r\n            return <LinuxList onChangePage={(page2) => { send(page2) }}> </LinuxList>;\r\n        }\r\n        else if (props.page === 'term') {\r\n            return <TermList onChangePage={(page2) => { send(page2) }}> </TermList>;\r\n        }\r\n        else if (props.page === 'keymap') {\r\n            return <KeyMapList onChangePage={(page2) => { send(page2) }}> </KeyMapList>;\r\n        }\r\n        else if (props.page === 'github') {\r\n            return <GithubList onChangePage={(page2) => { send(page2) }}> </GithubList>;\r\n        }\r\n        else if (props.page === 'refblog') {\r\n            return <RefBlogList onChangePage={(page2) => { send(page2) }}> </RefBlogList>;\r\n        }\r\n        else if (props.page === 'python') {\r\n            return <PythonList onChangePage={(page2) => { send(page2) }}> </PythonList>;\r\n        }\r\n        else if (props.page === 'ai') {\r\n            return <AIList onChangePage={(page2) => { send(page2) }}> </AIList>;\r\n        }\r\n        else if (props.page === 'algorithm') {\r\n            return <AlgorithmList onChangePage={(page2) => { send(page2) }}> </AlgorithmList>;\r\n        }\r\n        else if (props.page === 'security') {\r\n            return <SecurityList onChangePage={(page2) => { send(page2) }}> </SecurityList>;\r\n        }\r\n        else if (props.page === 'blockchain') {\r\n            return <BlockChainList onChangePage={(page2) => { send(page2) }}> </BlockChainList>;\r\n        }\r\n        else if (props.page === 'designpattern') {\r\n            return <DesignPatternList onChangePage={(page2) => { send(page2) }}> </DesignPatternList>;\r\n        }\r\n        else if (props.page === 'codingtest') {\r\n            return <CodingTestList onChangePage={(page2) => { send(page2) }}> </CodingTestList>;\r\n        }\r\n        else if (props.page === 'program') {\r\n            return <ProgramList onChangePage={(page2) => { send(page2) }}> </ProgramList>;\r\n        }\r\n        else {\r\n            return <div> </div>;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"navMenu2\">\r\n            <div className=\"menu\">\r\n                <p> {props.page} </p>\r\n                <div>\r\n                    {showpage()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavMenu2;","import React from 'react';\r\nimport './FootterMenu.css';\r\n\r\nconst FootterMenu = () => {\r\n    return (\r\n        <div className=\"FootMenu\">\r\n            <div>\r\n\r\n            </div>\r\n            <div className=\"submenu\">\r\n                <button> <a href=\"https://github.com/ssssksss\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={process.env.PUBLIC_URL + '/img/NavMenu/Github_icon.svg'} alt=\"\" /> </a> </button>\r\n                <button> <a href=\"https://www.acmicpc.net/user/ssssksss\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={process.env.PUBLIC_URL + '/img/NavMenu/Baekjoon_icon.svg'} alt=\"\" /> </a> </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FootterMenu;","import React, { useState } from 'react';\nimport { BrowserRouter}  from 'react-router-dom';\nimport './App.css';\nimport Main from './components/Main.jsx';\nimport NavMenu from './components/NavMenu';\nimport NavMenu2 from './components/NavMenu2';\nimport FootterMenu from './components/FootterMenu';\n\nconst App = () => {\n  const [whatPage,setWhatPage] = useState('main');\n  const [whatPage2,setWhatPage2] = useState('main');\n\n  const changePage = (page,e) => {\n    setWhatPage(page);\n  }\n\n  const changePage2 = (page2,e) => {\n    setWhatPage2(page2);\n  }\n\n\n  return (\n\n      <div className=\"app\">\n        \n        <BrowserRouter>\n\n          <div className=\"menu1_container\"> \n            <NavMenu onChangePage={(page)=>{{changePage(page)}}}> </NavMenu>\n            <NavMenu2 page={whatPage} onChangePage={(page2)=>{{changePage2(page2)}}}> </NavMenu2>\n          </div>\n\n          <div className=\"menu2_container\"> \n            <Main page2={whatPage2}> </Main>\n          </div>\n\n          <div className=\"menu3_container\"> \n            <FootterMenu FootterMenu> </FootterMenu>\n          </div>\n\n        </BrowserRouter>\n\n        <button className=\"btn_top\"> <a href=\"#\">\n           <img src={process.env.PUBLIC_URL + '/img/NavMenu/UpArrow_icon.svg'} />  </a> \n         </button>\n      </div>\n\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}