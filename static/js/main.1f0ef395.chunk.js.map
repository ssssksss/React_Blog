{"version":3,"sources":["blogContainer/components/Main/JavaContent/JavaBasic.jsx","blogContainer/components/Main/JavaContent/JavaBasic2.jsx","blogContainer/components/Main/JavaContent/JavaModifier.jsx","blogContainer/components/Main/JavaContent/JavaAnnotation.jsx","blogContainer/components/Main/PhpContent/PhpBasic.jsx","blogContainer/components/Main/NodejsContent/NodejsBasic.jsx","blogContainer/components/Main/SpringContent/SpringError.jsx","blogContainer/components/Main/SpringContent/SpringJpa.jsx","blogContainer/components/Main/SpringContent/SpringBasic.jsx","blogContainer/components/Main/SpringContent/SpringThymeleaf.jsx","blogContainer/components/Main/SpringContent/SpringLombok.jsx","blogContainer/components/Templates/Grid/GridTableCountNRow100px.js","blogContainer/components/Templates/Grid/GridColumn.js","blogContainer/components/Templates/Grid/GridRow.js","blogContainer/components/Templates/Grid/GridField.js","blogContainer/components/Main/SpringContent/SpringDaoDto.jsx","blogContainer/components/Main/SpringContent/SpringYml.jsx","blogContainer/components/Main/SpringContent/SpringAPI.jsx","blogContainer/components/Main/SpringContent/SpringOAuth2.jsx","blogContainer/components/Main/SpringContent/SpringController.jsx","blogContainer/components/Main/SpringContent/SpringSecurity.jsx","blogContainer/components/Main/SpringContent/SpringValidator.jsx","blogContainer/components/Main/SpringContent/SpringAop.jsx","blogContainer/components/Main/SpringContent/SpringService.jsx","blogContainer/components/Main/SpringContent/SpringJackson.jsx","blogContainer/components/Main/SpringContent/SpringCommunication.jsx","blogContainer/components/Main/SpringContent/SpringConverter.jsx","blogContainer/components/Main/SpringContent/SpringException.jsx","blogContainer/components/Main/SpringContent/SpringTestCode.jsx","blogContainer/components/Main/SpringContent/SpringSecurityExCode1.jsx","blogContainer/components/Main/SpringContent/SpringSecurityExCode2.jsx","blogContainer/components/Main/SpringContent/SpringSecurityExCode3.jsx","blogContainer/components/Main/SpringContent/SpringBasicEx1.jsx","blogContainer/components/Main/JspServletContent/JspServletBasic.jsx","blogContainer/components/Main/JspServletContent/JspServletBulletinBoard.jsx","blogContainer/components/Main/JspServletContent/JspServletJstl.jsx","blogContainer/components/Main/JspServletContent/JspServletEl.jsx","blogContainer/components/Main/JspServletContent/JspServletJdbc.jsx","blogContainer/components/Main/JspServletContent/JspServletInformation.jsx","blogContainer/components/Main/BackendContent/BackendBasic.jsx","blogContainer/components/Main/BackendContent/BackendSolid.jsx","blogContainer/components/Main/BackendContent/BackendBrowserDevTool.jsx","blogContainer/components/Main/BackendContent/BackendSCTCache.jsx","blogContainer/components/Main/BackendContent/BackendCompilerInterpreter.jsx","blogContainer/components/Main/BackendContent/BackendCodingConvention.jsx","blogContainer/components/Main/HtmlContent/HtmlBasic.jsx","blogContainer/components/Main/HtmlContent/HtmlTest.jsx","blogContainer/components/Main/CssContent/CssBasic.jsx","blogContainer/components/Main/CssContent/CssBasic2.jsx","blogContainer/components/Main/CssContent/CssScss.jsx","blogContainer/components/Main/CssContent/CssAnimation.jsx","blogContainer/components/Main/CssContent/CssUse.jsx","blogContainer/components/Main/CssContent/CssBlurBusinessCard.jsx","blogContainer/components/Main/CssContent/CssTextAndVideo.jsx","blogContainer/components/Main/BootstrapContent/BootstrapBasic.jsx","blogContainer/components/Main/BootstrapContent/BootstrapTable.jsx","blogContainer/components/Main/TypeScriptContent/TypeScriptBasic.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptBasic.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptBasic2.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptDocument.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptElement.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptEvent.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptEventObject.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptAjax.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptAttribute.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptLocation.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptStyle.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptWindow.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptTable.jsx","blogContainer/components/Main/JavaScriptContent/JavaScriptScroll.jsx","blogContainer/components/Main/ReactContent/ReactBasic.jsx","blogContainer/components/Main/ReactContent/ReactJavaScript.jsx","blogContainer/components/Main/ReactContent/ReactHooks.jsx","blogContainer/components/Main/ReactContent/ReactClass.jsx","blogContainer/components/Main/ReactContent/ReactAnimation.jsx","blogContainer/components/Main/ReactContent/ReactRouter.jsx","blogContainer/components/Main/ReactContent/ReactRedux.jsx","blogContainer/components/Main/ReactContent/ReactReduxSaga.jsx","blogContainer/components/Main/ReactContent/ReactModal.jsx","blogContainer/components/Main/ReactContent/ReactStyledComponent.jsx","blogContainer/components/Main/ReactContent/ReactFetchAPI.jsx","blogContainer/components/Main/ReactContent/ReactAxios.jsx","blogContainer/components/Main/ReactContent/ReactAjax.jsx","blogContainer/components/Main/ReactContent/ReactBabel.jsx","blogContainer/components/Main/FrontendContent/FrontendBasic.jsx","blogContainer/components/Main/FrontendContent/FrontendBrowserDevTool.jsx","blogContainer/components/Main/FrontendContent/FrontendRegex.jsx","blogContainer/components/Main/FrontendContent/FrontendBuildName.jsx","blogContainer/components/Main/FrontendContent/FrontendHttp.jsx","blogContainer/components/Main/FrontendContent/FrontendPrettier.jsx","blogContainer/components/Main/DatabaseContent/DBOracleBasic.jsx","blogContainer/components/Main/DatabaseContent/DBMySQLBasic.jsx","blogContainer/components/Main/DatabaseContent/DBNamingConvention.jsx","blogContainer/components/Main/DatabaseContent/DBMariaBasic.jsx","blogContainer/components/Main/DatabaseContent/DBError.jsx","blogContainer/components/Main/DatabaseContent/DBTable.jsx","blogContainer/components/Main/DatabaseContent/DBErd.jsx","blogContainer/components/Main/DesignPatternContent/DPMvc2.jsx","blogContainer/components/Main/DesignPatternContent/DPMvp.jsx","blogContainer/components/Main/DesignPatternContent/DPMvvm.jsx","blogContainer/components/Main/DesignPatternContent/DPGof.jsx","blogContainer/components/Main/SecurityContent/SecurityBasic.jsx","blogContainer/components/Main/SecurityContent/SecurityJwt.jsx","blogContainer/components/Main/SecurityContent/SecurityHmac.jsx","blogContainer/components/Main/SecurityContent/SecurityHash.jsx","blogContainer/components/Main/SecurityContent/SecurityEncryption.jsx","blogContainer/components/Main/SecurityContent/SecurityHackingAttack.jsx","blogContainer/components/Main/SecurityContent/SecurityIpSpoofing.jsx","blogContainer/components/Main/NetworkContent/NetworkBasic.jsx","blogContainer/components/Main/NetworkContent/NetworkCommand.jsx","blogContainer/components/Main/NetworkContent/NetworkArpprotocol.jsx","blogContainer/components/Main/NetworkContent/NetworkOSI7Layer.jsx","blogContainer/components/Main/NetworkContent/NetworkThreeWayHandshake.jsx","blogContainer/components/Main/NetworkContent/NetworkDevice.jsx","blogContainer/components/Main/NetworkContent/NetworkWireshark.jsx","blogContainer/components/Main/NetworkContent/NetworkProtocol.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Backtracking.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Divide_Conquer.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Dynamic.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Graph.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Greedy.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Hash.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Recursive.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Search.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Sort.jsx","blogContainer/components/Main/AlgorithmContent/Algorithm_Basic.jsx","blogContainer/components/Main/ApiContent/ApiNaver.jsx","blogContainer/components/Main/ApiContent/ApiGoogle.jsx","blogContainer/components/Main/ApiContent/ApiKakao.jsx","blogContainer/components/Main/ApiContent/ApiFacebook.jsx","blogContainer/components/Main/CloudContent/CloudOracle.jsx","blogContainer/components/Main/DockerContent/DockerBasic.jsx","blogContainer/components/Main/CicdContent/CicdJenkins.jsx","blogContainer/components/Main/CicdContent/CicdGithubAction.jsx","blogContainer/components/Main/WindowContent/WindowCommand.jsx","blogContainer/components/Main/WindowContent/WindowSystem.jsx","blogContainer/components/Main/LinuxContent/LinuxBasic.jsx","blogContainer/components/Main/LinuxContent/LinuxCommand.jsx","blogContainer/components/Main/LinuxContent/LinuxMobaXterm.jsx","blogContainer/components/Main/LinuxContent/LinuxVimEditor.jsx","blogContainer/components/Main/LinuxContent/LinuxDirectory.jsx","blogContainer/components/Main/LinuxContent/LinuxUbuntu.jsx","blogContainer/components/Main/LinuxContent/LinuxCentOS7.jsx","blogContainer/components/Main/LinuxContent/LinuxShell.jsx","blogContainer/components/Main/LinuxContent/LinuxShellScript.jsx","blogContainer/components/Main/LinuxContent/LinuxServer.jsx","blogContainer/components/Main/LinuxContent/LinuxNetwork.jsx","blogContainer/components/Main/LinuxContent/LinuxAccountCommand.jsx","blogContainer/components/Main/TermContent/Term.jsx","blogContainer/components/Main/KeyMapContent/KeyMapVscode.jsx","blogContainer/components/Main/KeyMapContent/KeyMapIntellij.jsx","blogContainer/components/Main/KeyMapContent/KeyMapEclipse.jsx","blogContainer/components/Main/KeyMapContent/KeyMapWindow.jsx","blogContainer/components/Main/KeyMapContent/KeyMapBrowser.jsx","blogContainer/components/Main/KeyMapContent/KeyMapSublimeText.jsx","blogContainer/components/Main/CollaborationToolContent/CollaborationTool_Github.jsx","blogContainer/components/Main/CollaborationToolContent/CollaborationTool_Slack.jsx","blogContainer/components/Main/CollaborationToolContent/CollaborationTool_Diagram.jsx","blogContainer/components/Main/CollaborationToolContent/CollaborationTool_Markdown.jsx","blogContainer/components/Main/RefBlogContent/RefBlog.jsx","blogContainer/components/Main/PythonContent/PythonBasic.jsx","blogContainer/components/Main/PythonContent/PythonRegex.jsx","blogContainer/components/Main/AIContent/AiBasic.jsx","blogContainer/components/Main/BlockChainContent/BlockChainPow.jsx","blogContainer/components/Main/CodingTestContent/CTBaekJoon.jsx","blogContainer/components/Main/ProgramContent/ProgramRecDev.jsx","blogContainer/components/Main/ProgramContent/ProgramRecWin.jsx","blogContainer/components/Main/FigmaContent/FigmaBasic.jsx","blogContainer/components/Main.jsx","blogContainer/components/NavMenu.jsx","blogContainer/components/NavMenuList/HtmlList.jsx","blogContainer/components/NavMenuList/CssList.jsx","blogContainer/components/NavMenuList/BootstrapList.jsx","blogContainer/components/NavMenuList/JavaScriptList.jsx","blogContainer/components/NavMenuList/TypeScriptList.jsx","blogContainer/components/NavMenuList/ReactList.jsx","blogContainer/components/NavMenuList/JavaList.jsx","blogContainer/components/NavMenuList/PhpList.jsx","blogContainer/components/NavMenuList/NodeJsList.jsx","blogContainer/components/NavMenuList/JspServletList.jsx","blogContainer/components/NavMenuList/SpringList.jsx","blogContainer/components/NavMenuList/DatabaseList.jsx","blogContainer/components/NavMenuList/WindowList.jsx","blogContainer/components/NavMenuList/LinuxList.jsx","blogContainer/components/NavMenuList/NetworkList.jsx","blogContainer/components/NavMenuList/TermList.jsx","blogContainer/components/NavMenuList/KeyMapList.jsx","blogContainer/components/NavMenuList/CollaborationToolList.jsx","blogContainer/components/NavMenuList/RefBlogList.jsx","blogContainer/components/NavMenuList/PythonList.jsx","blogContainer/components/NavMenuList/AIList.jsx","blogContainer/components/NavMenuList/AlgorithmList.jsx","blogContainer/components/NavMenuList/ApiList.jsx","blogContainer/components/NavMenuList/FrontendList.jsx","blogContainer/components/NavMenuList/BackendList.jsx","blogContainer/components/NavMenuList/SecurityList.jsx","blogContainer/components/NavMenuList/BlockChainList.jsx","blogContainer/components/NavMenuList/DesignPatternList.jsx","blogContainer/components/NavMenuList/CodingTestList.jsx","blogContainer/components/NavMenuList/ProgramList.jsx","blogContainer/components/NavMenuList/CloudList.jsx","blogContainer/components/NavMenuList/FigmaList.jsx","blogContainer/components/NavMenuList/RefactoringList.jsx","blogContainer/components/NavMenuList/DockerList.jsx","blogContainer/components/NavMenuList/CicdList.jsx","blogContainer/components/NavMenu2.jsx","blogContainer/components/FootterMenu.jsx","blogContainer/BlogContainer.js","todoContainer/component/Pages/TodoMain.js","todoContainer/component/Atoms/Day.js","todoContainer/component/Molecules/Month.js","todoContainer/component/Organisms/Calender.js","todoContainer/component/Pages/TodoCalender.js","AuthContainer/Private.js","todoContainer/TodoContainer.js","util/CustomSize.js","portfolioContainer/PortfolioContainer.jsx","util/CustomColor.js","AtomicDesignComponent/Molecules/Cube.js","util/CustomModal.js","util/AxiosInstance.js","store/auth/types.js","store/auth/actions.js","userContainer/LoginPage.jsx","userContainer/SignupPage.jsx","App.js","reportWebVitals.js","store/auth/reducer.js","store/reducer.js","store/index.js","util/history.js","index.js"],"names":["JavaBasic","props","className","href","target","rel","name","style","visibility","class","JavaBasic2","JavaModifier","JavaAnnotation","PhpBasic","NodejsBasic","SpringError","SpringJpa","listStyle","SpringBasic","SpringThymeleaf","SpringLombok","Container","styled","div","count","GridTableCountNRow100px","children","GridColumn","GridRow","GridField","SpringModel","alt","width","src","SpringYml","SpringAPI","SpringOAuth2","SpringController","HtmlTest","SpringValidator","SpringAop","SpringService","SpringJackson","SpringCommunication","SpringConverter","SpringException","SpringTestCode","SpringSecurityExCode1","SpringSecurityExCode2","SpringSecurityExCode3","SpringBasicEx1","JspServletBasic","JspServletBulletinBoard","JspServletJstl","Blank","JspServletJdbc","JspServletInformation","BackendBasic","BackendSolid","BackendBrowserDevTool","BackendSCTCache","BackendCompilerInterpreter","CodingConvention","HtmlBasic","backgroundColor","method","action","type","placeholder","required","autofocus","value","size","maxLength","id","cols","rows","selected","disabled","label","border","colSpan","rowSpan","CssBasic","CssBasic2","CssScss","CssAnimation","TCssUse","CssBlurBusinessCard","CssTextAndVideo","useEffect","script","document","createElement","async","body","appendChild","removeChild","onMouseMove","e","dot","querySelector","left","clientX","top","clientY","BootstrapBasic","background","role","tabindex","aria-disabled","for","readonly","height","viewBox","fill","xmlns","d","aria-valuenow","aria-valuemin","aria-valuemax","BootstrapTable","scope","TypeScriptBasic","JavaScriptBasic","JavaScriptBasic2","Date","getFullYear","getMonth","getDate","JavaScriptDocument","JavaScriptElement","JavaScriptEvent","JavaScriptAjax","JavaScriptAttribute","JavaScriptLocation","JavaScriptStyle","JavaScriptWindow","JavaScriptTable","JavaScriptScroll","ReactBasic","ReactJavascript","ReactHooks","ReactClass","ReactAnimation","ReactRouter","ReactRedux","ReactReduxSaga","ReactModal","ReactStyledComponent","ReactFetchAPI","ReactAxios","ReactAjax","ReactBabel","FrontendBasic","FrontBrowserDevTool","FrontendRegex","FrontendBuildName","FrontendHttp","FrontendPrettier","DBOracleBasic","DBMySQLBasic","DBNamingConvention","DBMariaBasic","DBError","DBTable","DBErd","DPMvc2","DPMvp","DPMvvm","DPGof","SecurityBasic","SecurityJwt","SecurityHmac","SecurityHash","SecurityEncryption","SecurityHackingAttack","SecurityIpSpoofing","NetworkBasic","NetworkCommand","NetworkArpprotocol","NetworkOSI7Layer","NetworkThreeWayHandshake","NetworkDevice","NetworkWireshark","NetworkProtocol","Algorithm_Backtracking","Algorithm_Divide_Conquer","Algorithm_Dynamic","Algorithm_Graph","Algorithm_Greedy","Algorithm_Hash","Algorithm_Recursive","Algorithm_Search","Algorithm_Sort","Algorithm_Basic","ApiNaver","ApiGoogle","ApiKakao","ApiFacebook","CloudOracle","DockerBasic","CicdJenkins","CicdGithubAction","WindowCommand","WindowSystem","LinuxBasic","LinuxCommand","LinuxMobaXterm","LinuxVimEditor","LinuxDirectory","LinuxUbuntu","LinuxCentOS7","LinuxShell","LinuxShellScript","LinuxServer","download","LinuxNetwork","LinuxAccountCommand","Term","KeyMapVscode","KeyMapIntellij","KeyMapEclipse","KeyMapWindow","KeyMapBrowser","KeyMapSublimeText","CollaborationTool_Github","CollaborationTool_Slack","CollaborationTool_Diagram","CollaborationTool_Markdown","RefBlog","PythonBasic","classname","PythonRegex","AiBasic","BlockChainPow","CTBaekJoon","ProgramRecDev","ProgramRecWin","FigmaBasic","Main","path","element","SpringDaoDto","SpringSecurity","JspServletEl","BackendCodingConvention","CssUse","JavaScriptEventObject","ReactJavaScript","FrontendBrowserDevTool","NavMenu","send","page","onChangePage","onClick","HtmlList","to","CssList","BootstrapList","JavaScriptList","TypeScriptList","ReactList","JavaList","PhpList","NodeJsList","JspServletList","SpringList","DatabaseList","WindowList","LinuxList","NetworkList","TermList","KeyMapList","CollaborationToolList","RefBlogList","PtyhonList","AIList","AlgorithmList","ApiList","FrontendList","BackendList","BlankList","BlockChain","DesignPatternList","CodingTestList","ProgramList","CloudList","FigmaList","RefactoringList","DockerList","CicdList","NavMenu2","page2","PythonList","SecurityList","BlockChainList","FootterMenu","BlogContainer","useState","whatPage","setWhatPage","whatPage2","setWhatPage2","Container1","Container2","Container3","changePage","changePage2","MainContainer","ToDoTodayContainer","ToDoListContainer","ToDoStudyContainer","TodoMain","color","opacity","Day","day","main","Header","header","LeftButton","button","RightButton","DayHeader","Month","todayDate","dayList","setDayList","parseInt","year","setYear","month","setMonth","date","prevDate","prevEndDay","prevEndDayW","getDay","nowDate","nowStartDayW","nowEndDay","nextDate","nextStartDayW","i","array","j","map","dayW","Calender","TodoCalender","Private","auth","useSelector","state","Fragment","isLogin","TitleContainer","Title","h2","SideContainer","LinkStyle","Link","TodoContainer","mediaQueryMaxSize","waterwave","keyframes","Water","rotation","TitleIcon","img","rotateAni","css","Introduction","IntroductionTitle","span","IntroductionItem","Stack","StackTitle","StackMenu","StackMenuButton","StackMain","StackGrid","StackGridList","StackItem","StackImg","StackDescription","Project","Career","PortfolioContainer","stackItem","setStackItem","enumGradientColor","sideColor","Math","round","random","sideWidth","Side","SideFront","sideTranslate","SideBack","SideTop","SideBottom","SideLeft","SideRight","Cube","PopupClose","PopupNav","CustomModal","modalOpen","setModalOpen","StrictMode","isOpen","onRequestClose","AxiosInstance","axios","create","baseURL","headers","interceptors","response","use","error","Promise","reject","IS_LOGIN","payload","InputContainer","InputLabel","RememberCheckbox","input","SubmitButton","LoginPage","dispatch","useDispatch","rememberCheckbox","window","localStorage","getItem","getElementsByName","checked","JSON","parse","onChange","setItem","stringify","check","removeItem","url","data","email","password","then","res","accessToken","alert","console","log","catch","err","EmailInput","PasswordInput","SignupPage","submitSignup","a","HomeButton","TopButton","AppContainer","AppContainerRow","AppButton","AbsText","isAvailable","StyleDiv","Nav","setAppElement","App","navigate","useNavigate","location","useLocation","todayFullYear","todayMonth","todayDay","token","jwt","decode","exp","pathname","documentElement","scrollTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","rootReducer","combineReducers","store","createStore","history","createBrowserHistory","ReactDOM","render","getElementById"],"mappings":"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CL,oCAAM,yEAAN,UAED,oCAAM,YAAN,UAED,oCAAM,UAAN,OACA,oCAAM,KAAN,OACA,oCAAM,iCACL,oCAAM,8CAAN,UAED,oCAAM,QAAN,UAED,oCAAM,eAAN,wBASN,sBAAKA,UAAU,SAAf,SACC,qCACC,4DACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,kEACA,2KACA,4KACA,qLACA,iIACA,kKACA,iKACA,yKACA,6LACA,2IACA,6IACA,sIAEA,qBAAIA,UAAU,KAAd,mEACA,8HACA,qJACA,qJACA,uIACA,6GACA,qOACA,8IACA,8IAEA,qBAAIA,UAAU,KAAd,mCACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACC,qDAUN,sBAAKA,UAAU,SAAf,SACC,qCACC,8FACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,4DACA,uEACA,uKAA8C,wIAA9C,OACA,iZAEA,8LAEA,qBAAIA,UAAU,KAAd,mEACA,4LACA,8LACA,gMACA,kJACA,oWAGA,iNACA,gIACA,gIACA,yFACA,yFACA,2HACA,2HACA,qKACA,qKACA,8HACA,8MACA,mGACA,2IACA,mIACA,iNACA,8MACA,+QACA,8CACA,wJACA,iOACA,wKACA,uNACA,yNACA,qCACC,6EACA,uBAAKA,UAAU,UAAf,UACC,iDACA,4DACA,sDACA,sDACA,wDACA,0DACA,2DACA,qDACA,qDACA,sDACA,sDACA,4DACA,4DACA,iDACA,0DACA,4DACA,yDACA,wDACA,6DACA,4DACA,2DACA,6DACA,4DACA,mDACA,kDACA,sDACA,4DACA,2DACA,kDACA,kDACA,iDACA,mDACA,sDACA,0DACA,wDACA,sDACA,wDACA,0DACA,yDACA,wDACA,mDACA,oDACA,mDACA,kEACA,mEACA,sDACA,sDACA,2DAGF,qCACA,6CAOH,sBAAKA,UAAU,SAAf,SACC,qCACC,oEACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,4DACA,uBAAKA,UAAU,SAAf,UACC,sFACA,kJAAmC,gOAAnC,OACA,iKACA,4JACA,uJAAmC,gOAAnC,OACA,oJAAqC,mIAArC,OACA,0KACA,2KACA,wLACA,iIAAsC,gMAAtC,OACA,+HAAoC,4JAApC,OACA,2NACA,2IACA,qKACA,kKAGD,qBAAIA,UAAU,KAAd,mEACA,yKACA,iOACA,oNACA,8NACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,mCACA,gDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACC,oCAAM,YACL,oCAAM,gCACL,oCAAM,mCAAN,OACA,oCAAM,4CAAN,OACA,oCAAM,gCAAN,OACA,oCAAM,iCAAN,OACA,oCAAM,sDAAN,OACA,oCAAM,8DAAN,OACA,oCAAM,gEAAN,OACA,oCAAM,mEAAN,OACA,oCAAM,qEAAN,OACA,oCAAM,kEAAN,OACA,oCAAM,8CAAN,OACA,oCAAM,kDAAN,UAED,oCAAM,aAAN,UAED,oCAAM,aAAN,OACA,oCAAM,cACL,oCAAM,yBACL,oCAAM,qBAAN,OACA,oCAAM,2EAAN,UAED,oCAAM,QAAN,OACA,oCAAM,2BACL,oCAAM,uBAAN,OACA,oCAAM,iFAAN,UAED,oCAAM,QAAN,OACA,oCAAM,0BACL,oCAAM,sBAAN,OACA,oCAAM,8EAAN,UAED,oCAAM,QAAN,OACA,oCAAM,wEAAN,OACA,oCAAM,6EAAN,OACA,oCAAM,6EACL,oCAAM,uBAAN,UAED,oCAAM,QAAN,OACA,oCAAM,sEACL,oCAAM,oBAAN,UAED,oCAAM,SAAN,OACA,oCAAM,wEACL,oCAAM,sBAAN,UAED,oCAAM,SAAN,OACA,oCAAM,sEACL,oCAAM,mBAAN,UAED,oCAAM,SAAN,OACA,oCAAM,uEACL,oCAAM,oBAAN,UAED,oCAAM,SAAN,OACA,oCAAM,wEACL,oCAAM,qBAAN,UAED,oCAAM,SAAN,OACA,oCAAM,uEACL,oCAAM,qBAAN,UAED,oCAAM,SAAN,OACA,oCAAM,wEACL,oCAAM,sBAAN,UAED,oCAAM,SAAN,OACA,oCAAM,2EAAN,OACA,oCAAM,0FAAN,OACA,oCAAM,gGAAN,UAED,oCAAM,gBAAN,wBAUN,sBAAKA,UAAU,SAAf,SACC,qCACC,oGACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,4DACA,uBAAKA,UAAU,SAAf,UACC,mEACA,6JACA,iDACA,qDACA,iDACA,gKACA,6JACA,+JACA,mMACA,qIACA,4IACA,kIACA,0MACA,iLACA,wJACA,uLACA,4JACA,iIACA,2HACA,2JACA,oJACA,iLACA,wCAGD,qBAAIA,UAAU,KAAd,mEACA,oNACA,2CACA,qCACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACC,qDASN,sBAAKA,UAAU,SAAf,SACC,qCACC,4DACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,4DACA,2JACA,wJACA,2IACA,oLACA,6MACA,oNACA,6MACA,sDACA,sDACA,kDACA,mLACA,iJACA,wNACA,mKACA,wJACA,+CAEA,qBAAIA,UAAU,KAAd,mEACA,iVACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACC,qDASN,sBAAKA,UAAU,SAAf,SACC,qCACC,kGACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,4DACA,wEACA,4IACA,wJACA,8IACA,sCAEA,qBAAIA,UAAU,KAAd,mEACA,8GACA,yJACA,+MACA,uMACA,uIACA,sCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACC,qDASN,sBAAKA,UAAU,SAAf,SACC,qCACC,4DACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,4DACA,qEACA,kTACA,2GACA,oHACA,uLACA,gNACA,+MACA,oIACA,+QACA,sCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACC,oCAAM,WACL,oCAAM,UACL,oCAAM,6CAAN,OACA,oCAAM,mDAAN,OACA,oCAAM,uHAAN,OACA,oCAAM,uHAAN,OACA,oCAAM,qHAAN,OACA,oCAAM,2DAAN,UAED,oCAAM,WAAN,UAED,oCAAM,YAAN,OACA,oCAAM,aACL,oCAAM,wFAAN,OACA,oCAAM,iGAAN,OACA,oCAAM,uGAAN,OACA,oCAAM,uGAAN,OACA,oCAAM,oGAAN,OACA,oCAAM,uGAAN,UAED,oCAAM,eAAN,wBASN,sBAAKA,UAAU,SAAf,SACC,qCACC,wFACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,4DACA,+CACA,mHACA,6GACA,yCACA,qCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACC,qDASN,sBAAKA,UAAU,SAAf,SACC,qCACC,sDAEA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,4DACA,8IACA,wHACA,sHACA,gJACA,mIACA,wHACA,qCAEA,qBAAIA,UAAU,KAAd,mEACA,+GACA,mDACA,8JACA,qNACA,2FACA,4IACA,wQACA,iHACA,uLACA,yHACA,gDACA,gDACA,8CACA,+CACA,6HACA,sGAEA,qCACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACC,2DC3kBKoD,GAvCD,SAACrD,GACd,OACC,qCAEC,sBAAKC,UAAU,eAAf,SAEC,sBAAKA,UAAU,SAAf,SACC,qCACC,sDACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACC,0DCoEKmI,GA7FQ,SAACpI,GACpB,OACI,qCACI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,8CACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,oEACA,sGACA,8LACA,2JACA,iGACA,kKACA,6CAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,oHACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,oCAAK,oBAAGC,KAAK,sCAAsCC,OAAO,SAASC,IAAI,sBAAlE,8CAAL,OACA,gEAAiC,qFAAjC,OACA,sDAAuB,4FAAvB,OACA,0CAAW,4FAAX,SACA,iFAAkD,mKAAlD,OACA,yDAA0B,iHAA1B,OACA,iDAAkB,0CAAlB,OACA,4CAAa,2HAAb,OACA,4FAA6D,4HAA7D,OACA,8CAAe,yHAAf,OACA,+CACA,8CAAe,2JAAf,OACA,4CAAa,+IAAb,OACA,+CAAgB,4HAAhB,QACA,iDAAkB,2IAAlB,QACA,qCACA,qCAnBJ,IAmBgB,wBAEZ,wDAAe,gHAAf,OACA,wDAAe,gHAAf,OACA,0DAAiB,4FAAjB,OAEA,qBAAIH,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,sNADJ,IACqD,wBACjD,oCAAM,wEAAN,OACA,oCAAM,KAAN,OAHJ,IAGsB,wBAClB,oCAAM,aACF,oCAAM,+BACF,oCAAM,aACF,oCAAM,oCAAN,OACA,oCAAM,oBAAN,OACA,oCAAM,kCACF,oCAAM,qCAAN,OACA,oCAAM,0DAAN,OACA,oCAAM,4CAAN,UAEJ,oCAAM,OAAN,OACA,oCAAM,6BACF,oCAAM,iDAAN,UAEJ,oCAAM,MAAN,UAEJ,oCAAM,OAAN,UAEJ,oCAAM,MAAN,UAEJ,oCAAM,eAAN,8BCtBzBoI,GAzDa,SAACrI,GACzB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,wGACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,mEACA,oIACA,yIACA,0MAEA,qBAAIA,UAAU,KAAd,mEACA,yIACA,8IACA,kJAEA,qBAAIA,UAAU,KAAd,0EACA,iJACA,sJAEA,qBAAIA,UAAU,KAAd,yCACA,0HACA,+EAEA,qBAAIA,UAAU,KAAd,qHACA,wFACA,iEACA,wEACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,0DCgEzBqI,GA3GY,SAACtI,GACxB,OACI,uBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,SAAf,SACI,qCACI,2DACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,oNACA,wLACA,mIACA,+GACA,iKACA,6HACA,yHACA,4HACA,gIACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCACA,6CAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,yDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,+CACA,gHACA,4PACA,gHACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,WACF,oCAAM,+CAAN,OACA,oCAAM,iDAAN,OACA,oCAAM,+CAAN,OACA,oCAAM,KAAN,OACA,oCAAM,aACF,oCAAM,wBACF,oCAAM,8CAAN,UAEJ,oCAAM,MAAN,OACA,oCAAM,0BACF,oCAAM,+CAAN,UAEJ,oCAAM,MAAN,OACA,oCAAM,wBACF,oCAAM,uBAAN,UAEJ,oCAAM,MAAN,UAEJ,oCAAM,eAAN,UAEJ,oCAAM,YAAN,wBASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,4EACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,qCACA,qCAEA,qBAAIA,UAAU,KAAd,yCACA,0DACA,wFACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,wDC7BrBsI,GAjES,SAACvI,GACrB,OACI,qCAEI,uBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,SAAf,SACI,qCACI,sDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,qDASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,sDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,2DC4BzBuI,GAhFU,SAACxI,GACtB,OACI,qCAEI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,uDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,6CACA,wMACA,sBAAKA,UAAU,SAAf,SACI,+HAEJ,4HAEA,qBAAIA,UAAU,KAAd,+CACA,6FACA,8PACA,gHACA,iNACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,qBAAN,OACA,oCAAM,4CAAN,OACA,oCAAM,sBAAN,UAGJ,qBAAIA,UAAU,KAAd,yCACA,sCAEA,qBAAIA,UAAU,KAAd,yCACA,sCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,qDASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,yDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sDAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,2DC5BzBwI,GAtCS,SAACzI,GACrB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,SACI,qCACI,+GACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,0OACA,iIACA,0HACA,uKAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,0DCLzByI,GApBU,SAAC1I,GACtB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,SACI,qCACI,4HACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,qGC43Bb0I,GAt4BI,SAAC3I,GAGlB,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,4EACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,iEACA,uBAAKA,UAAU,SAAf,UAEE,0GACA,wFAAgC,0HAAhC,OACA,4EACA,8CAAe,oFAAf,UAGF,qBAAIA,UAAU,KAAd,iEACA,uBAAKA,UAAU,SAAf,UACE,0GACA,2EACA,8GACA,4EACA,8CAAe,oFAAf,OACA,gDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,gEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,8GACA,uSACA,wCAGF,qBAAIA,UAAU,KAAd,iEACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,wCAIF,qBAAIA,UAAU,KAAd,iGACA,uBAAKA,UAAU,SAAf,UACE,+GACA,kQACA,iJACA,kHACA,wCAGF,qBAAIA,UAAU,KAAd,iEACA,uBAAKA,UAAU,SAAf,UACE,sHACA,4EACA,oCAAK,uEAAL,OACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,IACJ,gDACE,gEACA,2DACA,2DAEF,yCAEF,oCAAM,IAAN,UAEF,wCAEF,oCAAK,4EAAL,OACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,qDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,iEACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAGF,qBAAIA,UAAU,KAAd,iEACA,uBAAKA,UAAU,SAAf,UACE,qGACA,oCAAK,sDAAL,OACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAEF,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,mFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,0DACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,iFACA,iJACA,gIAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,kDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,4IACA,uBAAKA,UAAU,SAAf,UACE,qTACA,yLAAyF,uEAAzF,OACA,wCAEF,wCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAEF,wCAGF,qBAAIA,UAAU,KAAd,6DACA,uBAAKA,UAAU,SAAf,UACE,2IACA,gOAIF,qBAAIA,UAAU,KAAd,6DACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,wCAEF,qBAAIA,UAAU,KAAd,6DACA,gEACA,yEACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,wEAAN,OACA,oCAAM,KAAN,OAFF,IAEoB,wBAClB,oCAAM,sCACJ,oCAAM,aACJ,oCAAM,mCACJ,oCAAM,yCAAN,OACA,oCAAM,uBAAN,UAEF,oCAAM,OAAN,UAEF,oCAAM,MAAN,UAEF,oCAAM,OAAN,kBASR,sBAAKA,UAAU,SAAf,SACE,qCACE,+EACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,8GACA,uBAAKA,UAAU,SAAf,UACE,2KACA,iLACA,mIACA,oLACA,0KACA,qIACA,qBAAIA,UAAU,QAAd,4GACA,4JACA,sBAAIA,UAAU,QAAd,6BAAsC,uEAAtC,OACA,sBAAIA,UAAU,QAAd,yBAAkC,2HAAlC,OACA,sBAAIA,UAAU,QAAd,wDAA6C,kDAA7C,OACA,sBAAIA,UAAU,QAAd,yCAAkD,qGAAlD,OACA,qIAGF,qBAAIA,UAAU,KAAd,+EACA,uBAAKA,UAAU,SAAf,UACE,qJACA,yNACA,iJACA,mOACA,kIACA,6IAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,iEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,qEAA4B,sFAA5B,OACA,kDACE,+CAAiB,IACf,8FAAqD,sDAArD,UAEF,oCAAM,IAAN,UAEF,uFAAqB,8GACnB,mEAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,gEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,kCACA,uBAAKA,UAAU,SAAf,UACE,+HACA,sGACA,2KACA,wCAEF,sBAAKA,UAAU,SAAf,SACE,yGACE,uBAAKA,UAAU,SAAf,UACE,oCAAM,4CAAN,OACA,gEAAkC,IAChC,6CAAe,IACb,kDACA,oCAAM,kBAAN,UAEF,oCAAM,IAAN,UAEF,oCAAM,IAAN,OACA,gEAKN,qBAAIA,UAAU,KAAd,qCACA,uBAAKA,UAAU,SAAf,UACE,yGACE,uBAAKA,UAAU,SAAf,UACE,gEACA,mDAAqB,IACnB,kDACA,oCAAM,kBAAN,UAEF,oCAAM,IAAN,OACA,8DAGJ,0KACA,+HACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,kCACA,uBAAKA,UAAU,SAAf,UACE,oHACA,iNACA,+MACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,sFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,0dAEA,qLACA,oJACA,uMACA,yKACA,mGACA,uIAAuC,2IAAvC,OACA,mHAAmC,KAAnC,iDAAwD,2IAAxD,OACA,4NACA,2RACA,mVACA,mMAGF,qBAAIA,UAAU,KAAd,mCACA,uBAAKA,UAAU,SAAf,UACE,+DAAgC,uFAChC,sEAAuC,wRAEvC,4EAAmC,8GAAnC,OACA,qFAAsD,+GAAtD,UAGF,qBAAIA,UAAU,KAAd,kCACA,kGACA,wCAAU,KAAV,+DAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,qDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,qLAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,wEACA,uBAAKA,UAAU,SAAf,UACE,4EAAqB,6BAArB,wBAA0C,IACxC,oCAAM,6BAAN,IAAgB,sDAAhB,OACA,oCAFF,IAEa,wBACX,0CACA,sEAEF,oCAAM,IAAN,OACA,qCARF,IAQc,wBACZ,iFAA0B,IACxB,sFAEF,oCAAM,KAAN,UAEF,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,oDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,iHAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,0DACE,oCAAM,IACJ,oDACA,uDAEF,oCAAM,IAAN,QACA,oCAAM,IACJ,oDACA,uDAEF,oCAAM,IAAN,WAEF,sCACA,qCAdF,IAcc,wBACZ,oCAAM,+EACJ,oCAAM,iGAAN,UAEF,oCAAM,QAAN,OACA,6CAKN,qBAAIA,UAAU,KAAd,mCACA,gCACE,qBAAIA,UAAU,KAAd,qFACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,qEAAN,OACA,oCAAM,iEAAN,aAGJ,gCACE,qBAAIA,UAAU,KAAd,qFACA,uBAAKA,UAAU,SAAf,UACE,qCACA,mDASV,sBAAKA,UAAU,SAAf,SACE,qCACE,+CACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,wKACA,gDACA,qCAEA,qBAAIA,UAAU,KAAd,yCACA,iEACA,sHACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,yEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,sHACA,mHACA,mHACA,gDACA,yDACA,kDACA,4HACE,uBAAKA,UAAU,SAAf,UACE,oCAAM,6CAAN,OACA,oCAAM,KAAN,OAFF,IAEoB,wBAClB,oCAAM,iBACJ,oCAAM,aACJ,oCAAM,oBACJ,oCAAM,uDAAN,UAEF,oCAAM,UAAN,UAEF,oCAAM,QAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,KAAN,OACA,oCAAM,uBACJ,oCAAM,sCAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,KAAN,OACA,oCAAM,oCACJ,oCAAM,gCAAN,OACA,oCAAM,gCAAN,OACA,oCAAM,qCAAN,OACA,oCAAM,sFAAN,OACA,oCAAM,QACJ,oCAAM,8CAAN,OACA,oCAAM,yCAAN,UAEF,oCAAM,eACJ,oCAAM,0CAAN,OACA,oCAAM,qCAAN,UAEF,oCAAM,QAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,KAAN,OAnCF,IAmCoB,wBAClB,oCAAM,kCACJ,oCAAM,+BAAN,OACA,oCAAM,gCAAN,OACA,oCAAM,gCAAN,OACA,oCAAM,qCAAN,OACA,oCAAM,wFACJ,oCAAM,qDAAN,UAEF,oCAAM,eACJ,oCAAM,iDAAN,UAEF,oCAAM,QAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,KAAN,OACA,oCAAM,2CACJ,oCAAM,6BAAN,OACA,oCAAM,gCAAN,OACA,oCAAM,mDAAN,UAEF,oCAAM,MAAN,aAGJ,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,yJACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,qDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,2DACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,yJACA,kMAEA,qBAAIA,UAAU,KAAd,mCACA,gHACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,iEACA,uEAEF,qBAAIA,UAAU,KAAd,yCACA,sBAAKA,UAAU,SAAf,SACE,oCAAM,QAAN,IAAe,kEAAf,uBAWZ,sBAAKA,UAAU,SAAf,SACE,qCACE,oFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,kIACA,qIACA,+RACA,8PACA,4KAA8C,qKAA9C,OACA,qCAEA,qBAAIA,UAAU,KAAd,yCACA,8JACA,2JACA,4oBAEA,mMACA,0PACA,uSAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,+DACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uKACA,kFACA,0GACA,yCAGF,qBAAIA,UAAU,KAAd,mCACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,4CAAN,OADF,IAC2D,wBACzD,sEAAwC,IACtC,6CAAe,IACb,2CACE,oCAAM,gBAAN,UAEF,0CAEF,oCAAM,IAAN,UAEF,oCAAM,IAAN,OACA,sEAOV,sBAAKA,UAAU,SAAf,SACE,qCACE,0FACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,iKAEA,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,uDACJ,wCAEF,oCAAM,8CAAN,OACA,qCALF,IAKc,wBACZ,qCACA,wCAGF,qBAAIA,UAAU,KAAd,mCACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,sCACA,uBAAKA,UAAU,SAAf,UACE,oGACA,sEAAwC,IACtC,6CAAe,IACb,4CACE,oCAAM,uDACJ,oCAAM,gCAAN,UAEF,oCAAM,8CAAN,UAEF,0CAEF,oCAAM,IAAN,UAEF,oCAAM,IAAN,UAEF,qCAlBF,IAkBc,wBACZ,qBAAIA,UAAU,KAAd,qDACA,uBAAKA,UAAU,SAAf,UACE,iGAA0C,IACxC,yFACA,6CAAe,IACb,2CAAa,wDAAb,UAEF,oCAAM,IAAN,UAEF,oCAAM,IAAN,qBAOV,sBAAKA,UAAU,SAAf,SACE,qCACE,+DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,4DACA,qGAEA,qBAAIA,UAAU,KAAd,yCACA,4PACA,oKACA,qGACE,kLACE,sJACA,wCAEF,6FACA,6EACE,mGACA,oCAAM,gKAAN,OACA,kLACA,mMACA,kLACA,0KACA,oCAAM,kFAAN,UAEF,oDAEF,qCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,qDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,qDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,kCACA,4CACA,kDACA,kDACA,2CACA,8CACA,gDACA,+CACA,gDACA,+CACA,gDACA,2CACA,gDACA,iDACA,iDACA,gDACA,+CACA,gDACA,8CAEA,qBAAIA,UAAU,KAAd,6BACA,4CACA,2CACA,6CACA,4CACA,8CACA,2CACA,6CACA,4CACA,2CACA,qCAGA,qBAAIA,UAAU,KAAd,kEACA,8LAGA,qBAAIA,UAAU,KAAd,6BACA,8cAKA,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,mDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,+BAAN,OACA,oCAAM,0BAAN,QAFF,IAE0C,wBACxC,mDAAqB,OACnB,2CACE,oCAAM,MACJ,oCAAM,oCAAN,UAEF,oCAAM,OAAN,UAEF,0CAEF,oCAAM,IAAN,OACA,2DAEF,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,+BAAN,OADF,IAC8C,wBAC5C,mDAAqB,OACnB,oCAAM,uCACJ,kDACA,qDAEF,oCAAM,OAAN,OACA,2CACE,oCAAM,MACJ,oCAAM,qEAAN,OACA,oCAAM,8DAAN,UAEF,oCAAM,OAAN,UAEF,0CAEF,oCAAM,IAAN,OACA,6ECv0BH2I,GAhDS,SAAC5I,GAErB,OACI,qCACI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,gOACA,uBAAKA,UAAU,SAAf,UAEI,yDACA,oCAAM,2BACF,oCAAM,qBAAN,UAEJ,oCAAM,MAAN,OAEA,2DACA,wEACA,oCAAM,8BACF,4CACI,oCAAM,iFAAN,UAEJ,yCAEJ,oCAAM,IAAN,eAKZ,sBAAKA,UAAU,SAAf,SACI,qCACI,uJACA,uBAAKA,UAAU,SAAf,UACI,8DACA,sBAAKA,UAAU,SAAf,SACI,sNC4QjB4I,GAhTI,SAAC7I,GAEhB,OACI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,gEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,6JACA,sFAA6C,2JAA7C,QACA,qLACA,qLACI,iFACA,iFACA,wHACA,2DAAc,uDAAd,QACA,2DAAc,uDAAd,WAGJ,qBAAIA,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,wHACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,+BAAN,OADJ,IACgD,wBAC5C,mDAAqB,OACjB,0EACA,2CACI,oCAAM,MACF,oCAAM,iFAAN,OACA,oCAAM,+BAAN,UAEJ,oCAAM,OAAN,UAEJ,0CAEJ,oCAAM,IAAN,OACA,2DAEJ,qBAAIA,UAAU,KAAd,wJACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,+BAAN,OADJ,IACgD,wBAC5C,mDAAqB,OACjB,oCAAM,0CACF,gDACA,mDAEJ,oCAAM,QAAN,OALJ,IAKyB,wBACrB,oCAAM,qCAAN,IAA4C,yGAA5C,OANJ,IAM4F,wBACxF,oCAAM,8BACF,oCAAM,0CAEN,oCAAM,eACF,+CACA,qDAEJ,oCAAM,GAAN,OACA,oCAAM,MAAN,UAEJ,oCAAM,OAAN,OAjBJ,IAiBwB,wBACpB,oCAAM,4BACF,oCAAM,eACF,gDACA,mDAEJ,oCAAM,KAAN,UAEJ,oCAAM,OAAN,OAzBJ,IAyBwB,wBACpB,2CACI,oCAAM,MACF,oCAAM,gEAAN,OACA,oCAAM,gEAAN,OACA,oCAAM,6DAAN,OACA,oCAAM,sCAAN,UAEJ,oCAAM,OAAN,UAEJ,0CAEJ,oCAAM,IAAN,OACA,wEASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,kEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,wIACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,kEACA,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,0FACA,2EAA6C,OACzC,2CACA,oCAAM,eAAN,UAEJ,oCAAM,MAAN,OACA,qBAAIA,UAAU,KAAd,kFACA,uEAAqB,OACjB,oCAAM,+CAAN,IAAsD,+NAAtD,OAEA,oCAAM,uCACF,+EAEJ,oCAAM,0BAAN,UAEJ,oCAAM,MAAN,OACA,gFAEJ,qBAAIA,UAAU,KAAd,oFACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,oCAAN,OACA,uEAAqB,OACjB,oCAAM,2CAAN,UAEJ,oCAAM,MAAN,OACA,6FASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,iEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,+OACA,kLACA,uHACA,uUAEA,0YAGA,qBAAIA,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,iGACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,uDAAN,OADJ,IACwE,wBACpE,oCAAM,qCAAN,OACA,oCAHJ,IAGe,wBACX,oCAAM,oBACF,oCAAM,kCAAN,OACA,oCAAM,kBAAN,OACA,oCAAM,wCAAN,OACA,oCAAM,OAAN,UAEJ,oCAAM,YAAN,OACA,oCAXJ,IAWe,wBACX,mDAAqB,OACjB,qCACA,2CACI,oCAAM,MACF,oCAAM,kCAAN,OACA,oCAAM,wEAAN,UAEJ,oCAAM,OAAN,UAEJ,0CAEJ,oCAAM,IAAN,OACA,wEASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,8DACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,+BAAN,OADJ,IACgD,wBAC5C,mDAAqB,IACjB,2CACI,oCAAM,gBAAN,UAEJ,0CAEJ,oCAAM,IAAN,OACA,yEAWxB,sBAAKA,UAAU,SAAf,SACI,qCACI,+DACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,kGACA,sHACA,2HACA,kHACA,kIAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,0CAAN,OADJ,IAC2D,wBACvD,mDAAqB,OACjB,+DACA,2CACI,oCAAM,MACF,oCAAM,6BAAN,OACA,oCAAM,gFAAN,OACA,oCAAM,qFAAN,UAEJ,oCAAM,OAAN,UAEJ,0CAEJ,oCAAM,IAAN,OACA,yEAQxB,sBAAKA,UAAU,SAAf,SACI,qCACI,gFACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sHACA,qCACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,sEAA8B,QAC1B,wCAEJ,oCAAM,qBAAN,uBASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,2DACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,kDClGT6I,GApMI,SAAC9I,GAehB,OACI,uBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,SAAf,SACI,qCACI,gEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,4GACA,0GACA,kIACA,8NACA,gOACA,6CAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,yFACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,4EAA8C,IAC1C,6CAAe,MACX,4CACI,oCAAM,QACF,oCAAK,sFAAL,UAEJ,oCAAM,SAAN,UAEJ,0CAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,wBASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,8FACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,8PACA,4VACA,kIACA,uMAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,kEACA,uBAAKA,UAAU,SAAf,UACI,mFAAqD,IACjD,6CAAe,MACX,4CACI,oCAAM,QACF,oCAAM,sCAAN,UAEJ,oCAAM,SAAN,UAEJ,0CAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,OAbJ,IAaqB,wBAEjB,oCAAK,4EAAL,OACA,oEAAsC,IAClC,kDAEJ,oCAAM,KAAN,OAnBJ,IAmBsB,wBAElB,oCAAK,6FAAL,OACA,iEAAmC,IAC/B,kEACA,kEACA,uEAAwC,yKAAxC,UAEJ,oCAAM,KAAN,UAEJ,qBAAIA,UAAU,KAAd,kEACA,uBAAKA,UAAU,SAAf,UACI,kFAAoD,IAChD,6CAAe,MACX,4CACI,oCAAM,QACF,oCAAM,sBAAN,IAA6B,gEAA7B,OACA,oCAAM,uBAAN,IAA8B,2DAA9B,UAEJ,oCAAM,SAAN,UAEJ,0CAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,wBASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,qEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,gHAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,4EAA8C,IAC1C,uDAAyB,IACrB,oCAAK,4TAAL,OAEA,kDACA,iDAAmB,IACf,gDAEJ,oCAAK,gIAAL,OACA,8EACA,oCAAM,IAAN,UAEJ,oCAAM,IAAN,OAZJ,IAYqB,wBAEjB,+CAAiB,IACb,iDAAmB,KACf,mEAEJ,oCAAM,KAAN,UAEJ,oCAAM,IAAN,OApBJ,IAoBqB,wBAEjB,6CAAe,MACX,4CACI,oCAAM,QACF,oCAAM,uBAAN,IAA8B,iHAA9B,OACA,oCAAM,4DAAN,YAEJ,oCAAM,SAAN,UAEJ,0CAEJ,oCAAM,IAAN,UAjCR,IAkCU,wBAEN,oCAAM,IAAN,4BCjJrB8I,GApCQ,SAAC/I,GAEpB,OACI,sBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,SACI,qCACI,mEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,oEACA,0DAEA,qBAAIA,UAAU,KAAd,iCACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,wDCiYrB+I,GAzZK,SAAChJ,GAEnB,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,oEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,sDACA,iEACA,8DAEA,qBAAIA,UAAU,KAAd,gDACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,kDAAoB,gBAApB,qBACA,2CAAa,yCAAb,gCACA,qEACA,uEAJF,IAIgD,wBAC9C,mDAAqB,OACnB,2CACE,oCAAM,yBACJ,oCAAM,oBACJ,oCAAM,oCAAN,OACA,oCAAM,0CAAN,OACA,oCAAM,aACJ,oCAAM,oDAAN,OACA,oCAAM,oDAAN,UAEF,oCAAM,cAAN,UAEF,oCAAM,qBAAN,UAEF,oCAAM,eAAN,UAEF,0CAEF,oCAAM,IAAN,OACA,yEAWZ,sBAAKA,UAAU,SAAf,SACE,qCACE,6FACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,qCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,mDAAN,OACA,4DACA,yDAAY,IACV,2EAEF,oCAAM,IAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,+DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,wEAEA,qBAAIA,UAAU,KAAd,yCACA,0KACA,6MACA,wJACA,gLAEA,qBAAIA,UAAU,KAAd,iDACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,oEACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,sFAAN,OACA,oCAFF,IAEa,wBACX,2DACA,qDACA,oCALF,IAKa,wBACX,4CACE,oCAAM,oBAAN,IAA2B,gIACzB,oCAAM,+DAAN,OACA,qCAFF,IAEc,wBACZ,oCAAM,aAAN,IAAoB,qKAClB,oCAAM,4FAAN,OACA,oCAAM,0EAAN,IAAmD,0JAAnD,OACA,oCAAM,6DAAN,IAAgD,0JAAhD,OACA,oCAAM,2EAAN,IAAoD,+HAClD,uBAAKA,UAAU,SAAf,UACE,oCAAK,oEAAL,OACA,oCAAM,aACJ,oCAAM,0EAAN,IAAmD,wHAAnD,UAEF,oCAAM,cAAN,gBAIN,oCAAM,cAAN,UAEF,oCAAM,qBAAN,UAEF,uDAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,6GACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,uCACA,uBAAKA,UAAU,SAAf,UACE,uFACA,mFACA,+EACA,6HACA,wHAGF,qBAAIA,UAAU,KAAd,0CACA,uBAAKA,UAAU,SAAf,UACE,sFACA,sHACA,0GACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,mEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,gFACA,4HACA,wCAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,oDAAN,OACA,4EACA,oCAAM,8BAAN,UAEF,qBAAIA,UAAU,KAAd,0CACA,uBAAKA,UAAU,SAAf,UACE,2CAAa,IACX,gFAEF,oCAAM,IAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,uDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,mGAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,+CAAN,OACA,oCAAM,mDAAN,OACA,oCAAM,yBACJ,oCAAM,mBAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,aACJ,oCAAM,OACJ,oCAAM,mDAAN,OACA,oCAAM,MACJ,oCAAM,8CAAN,UAEF,oCAAM,MAAN,UAEF,oCAAM,QAAN,UAEF,oCAAM,OAAN,OACA,qDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,kIAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,oDAAN,OACA,oCAAM,oCAAN,OACA,oCAAM,mBAAN,OACA,oCAAM,yBACJ,oCAAM,qDAAN,OACA,oCAAM,yBAAN,OACA,oCAAM,yBAAN,OACA,oCAAM,8BAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,aACJ,oCAAM,OACJ,oCAAM,mDAAN,UAEF,oCAAM,QAAN,UAEF,oCAAM,OAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,qDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,+KAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,mCACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,sCACJ,oCAAM,yCAAN,OACA,oCAAM,yCAAN,UAEF,oCAAM,aAAN,UAEF,qBAAIA,UAAU,KAAd,kCACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,+CAAN,OACA,4CAAc,QAEd,oCAAM,eAAN,OACA,oCAAM,MAAN,yBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,gGAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,oDAAN,OACA,oCAAM,sCAAN,OACA,oCAAM,2BACJ,oCAAM,0CAAN,OACA,oCAAM,+CAAN,OACA,oCAAM,gGAAN,OACA,oCAAM,4CAAN,OACA,oCAAM,4CAAN,UAEF,oCAAM,QAAN,OACA,oCAAM,eACJ,oCAAM,WACJ,oCAAM,yDAAN,UAEF,oCAAM,YAAN,UAEF,oCAAM,SAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,0DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,oCACA,sBAAKA,UAAU,SAAf,SACE,oCAAM,sEAAN,SAEF,qBAAIA,UAAU,KAAd,sDACA,sBAAKA,UAAU,SAAf,SACE,6EAEF,qBAAIA,UAAU,KAAd,+CACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,mCAAN,OACA,oCAAM,eACJ,oCAAM,WACJ,oCAAM,gBAAN,OACA,oCAAM,yDAAN,UAEF,oCAAM,YAAN,UAEF,oCAAM,SAAN,2BCiUHgJ,GA5sBI,SAACjJ,GAElB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,qDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,wEACA,oCAAK,oBAAGC,KAAK,8BAA8BC,OAAO,SAASC,IAAI,sBAA1D,2BAAL,OAEA,qBAAIH,UAAU,KAAd,yCACA,8MACA,mHACA,gFACA,4JACA,iPACA,2JACA,sGACA,iNACE,uBAAKA,UAAU,SAAf,UACE,kGACA,+FAGJ,qCAnBF,IAmBc,wBACZ,kLACA,oJACA,qCAEA,qBAAIA,UAAU,KAAd,yCACA,4EACA,6EAA2B,KAA3B,2CAA2C,KAA3C,4CACA,qBAAIA,UAAU,KAAd,yEACA,kHACA,mGACA,6EACA,4EACA,wHACA,oIAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,yEACA,4DAA6B,oLAA7B,OAEA,qBAAIA,UAAU,KAAd,sDACA,+LAKN,sBAAKA,UAAU,SAAf,SACE,qCACE,4FACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,gCACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,2CACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,yCAAN,OACA,oCAAM,yCAAN,OACA,oCAAM,4CAAN,OACA,oCAAM,0BAAN,aAGJ,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,6CACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,6CAAN,OACA,oCAAM,+CAAN,OACA,oCAAM,0CACJ,oCAAM,qBAAN,UAEF,oCAAM,QAAN,OACA,oCAAM,gCAAN,aAGJ,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,gDACA,uBAAKA,UAAU,SAAf,UACE,8DACA,+DACA,kEAGJ,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,iDACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,wCAAN,OACA,oCAAM,0CACJ,oCAAM,YACJ,oCAAM,qBAAN,OACA,oCAAM,sBAAN,UAEF,oCAAM,KAAN,UAEF,oCAAM,OAAN,aAGJ,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,kDACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,wCAAN,OACA,oCAAM,2BACJ,oCAAM,kBAAN,UAEF,oCAAM,OAAN,OACA,oCAAM,4DACJ,oCAAM,0BACJ,oCAAM,oBAAN,OACA,oCAAM,aACJ,oCAAM,aAAN,OACA,oCAAM,2BAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,cACJ,oCAAM,kBAAN,aAGJ,oCAAM,KAAN,UAEF,oCAAM,OAAN,OACA,oCAAM,gCAAN,aAGJ,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,+CACA,sBAAKA,UAAU,SAAf,SACE,mFAGJ,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,qCACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,sDAAN,OACA,oCAAM,4CAAN,OACA,oCAAM,uCAAN,OACA,oCAAM,0CAAN,OACA,oCAAM,6BACJ,oCAAM,qCACJ,oCAAM,aAAN,UAEF,oCAAM,oBAAN,UAEF,oCAAM,gBAAN,aAGJ,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,kDACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,qDAAN,OACA,oCAAM,+CAAN,OACA,mEACA,6DAA8B,sGAA9B,OACA,wCAA8D,6EAA9D,OACA,qCACA,sDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,qCACA,uBAAKA,UAAU,SAAf,UACE,oEACA,0EACA,iEACA,8GACA,yDAA2B,OACzB,2CAAa,IACX,uDAEF,oCAAM,IAAN,UAEF,oCAAM,IAAN,OAXF,IAWmB,wBACjB,yDAA2B,IACzB,0DAEF,oCAAM,IAAN,OACA,iFAAmD,OACjD,wDAA0B,IACxB,kDACE,2CAAa,IACX,8CACA,6EAEF,oCAAM,IAAN,OACA,iEAGJ,oCAAM,IAAN,UAEF,oCAAM,IAAN,OACA,qCA9BF,IA8Bc,wBACZ,wEACA,iEACA,sDAAwB,MAAxB,IACE,sEAEF,oCAAM,IAAN,OACA,iFASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,uFACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,wCACA,uBAAKA,UAAU,SAAf,UACE,+IACA,kMACA,mNACA,iQAGF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,mEAAqC,KAArC,oBACA,oCAAM,8FACJ,yPACA,uBAAKA,UAAU,SAAf,UACE,8DACA,oCAAM,2GAAN,QACA,8DACA,oHAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,yDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,oKACA,2GACA,+MACA,qCAEA,qBAAIA,UAAU,KAAd,yCACA,gHACA,oCAAM,gDAAN,OACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,mDACJ,oCAAM,sBAAN,OACA,oCAAM,kBAAN,UAEF,oCAAM,QAAN,OACA,qDAEF,uBAAKA,UAAU,SAAf,UACE,qFAAuD,mDAAvD,MAA6G,oFAA7G,OACA,8CAAgB,8BAAhB,MAAiD,oFAAjD,OACA,oDAEF,qCACA,qCACA,qBAAIA,UAAU,KAAd,0CACA,oCAAM,kDAAN,OACA,iEAAmC,IACjC,oCAAM,qCACJ,+EAEF,oCAAM,SAAN,UAEF,oCAAM,oBAAN,OACA,qBAAIA,UAAU,KAAd,sDACA,uBAAKA,UAAU,SAAf,UACE,+DACA,0CAAY,IACV,qDACA,wDAEF,oCAAM,IAAN,UAEF,qBAAIA,UAAU,KAAd,qFACA,uBAAKA,UAAU,SAAf,UACE,iEAAmC,IACjC,2CAAa,IACX,+DACA,0CAAY,IACV,qDACA,4CAEF,oCAAM,IAAN,UAEF,oCAAM,KAAN,UAEF,oCAAM,IAAN,UAEF,qBAAIA,UAAU,KAAd,mCACA,gCACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,mFACA,oCAAM,sDACJ,oCAAM,+BAAN,OACA,oCAAM,qBAAN,UAEF,oCAAM,QAAN,OACA,mDAQV,sBAAKA,UAAU,SAAf,SACE,qCACE,+DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,qLACA,iKACA,2KACA,qBAAIA,UAAU,KAAd,4DACA,uBAAKA,UAAU,SAAf,UACE,8FAAwB,2GAAxB,OACA,6DAA+B,gEAA/B,OACA,yEAA2C,0IAA3C,OACA,oJAA8E,IAC5E,wDAA0B,IACxB,uDACE,2CAAa,gKAAb,WAEF,uDACE,2CAAa,2CAAb,KAA0D,+FAA1D,WAEF,4CACE,iFAGJ,oCAAM,IAAN,UAEF,oCAAM,IAAN,UAEF,qBAAIA,UAAU,KAAd,6DACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,6CAAN,OACA,oCAAM,wDAAN,OACA,oCAAM,wDAAN,OACA,oCAAM,0CACJ,oCAAM,sCAAN,OACA,oCAAM,sCAAN,UAEF,oCAAM,QAAN,OACA,oCAAM,gCAAN,OACA,oCAAM,4DACJ,kdADF,UAKF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,mEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,gHACA,uOACA,qCAEA,qBAAIA,UAAU,KAAd,kEACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,kDACJ,oCAAM,wBAAN,UAEF,oCAAM,MAAN,UAEF,uBAAKA,UAAU,SAAf,UACE,oCAAM,kCACJ,oCAAM,kBACJ,oCAAM,qBACJ,oCAAM,wBAAN,UAEF,oCAAM,MAAN,UAEF,oCAAM,KAAN,UAEF,oCAAM,MAAN,UAIF,qBAAIA,UAAU,KAAd,4CACA,qCACA,qCACA,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,+DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,wJACA,oMACA,qCACA,qBAAIA,UAAU,KAAd,4DACA,qCACA,qBAAIA,UAAU,KAAd,6BACA,qCACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,sCAAN,OACA,+FACA,iFACA,qDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,qGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,0GACA,kMACA,oCAEA,qBAAIA,UAAU,KAAd,kEACA,oCAAM,YACJ,oCAAM,YACJ,oCAAM,2CAAN,UAEF,oCAAM,KAAN,UAEF,oCAAM,MAAN,OAEA,qBAAIA,UAAU,KAAd,kEACA,8EACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,4DAAN,OACA,oCAAM,uEAAN,OACA,oCAAM,+CAAN,OACA,oCAAM,MAAN,OACA,oCAAM,4GACJ,oEACA,oCAAM,mIAAN,OACA,qCAHF,IAGc,wBACZ,oCAAM,mEAAN,IAAgE,uCAAS,4DAAT,OAC9D,oCAAM,wGAAN,UAEF,oCAAM,OAAN,UAEF,oCAAM,KAAN,OACA,kGASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,0GACA,mIACA,gRACA,sNAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,iIAAsD,MACpD,sEAEF,oCAAM,IAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,4MACA,qCACA,qBAAIA,UAAU,KAAd,4CACA,2TACA,uGACA,uBAAKA,UAAU,SAAf,UACE,kFAA0C,UACxC,sDAAuB,2IAAvB,OACA,2EAA6B,8DAA7B,UAEF,oCAAM,OAAN,OACA,+GAEF,qBAAIA,UAAU,KAAd,+CACA,2OACA,uGACA,qBAAIA,UAAU,KAAd,6BACA,qCACA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,0CAAN,OACA,mGACA,8GASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,wGACA,8OACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,0GACA,uBAAKA,UAAU,SAAf,UACE,wEAAsB,iCACpB,qCACA,4CAAc,KACZ,oCAAM,iDAAN,OACA,oCAAM,iDAAN,OACA,oCAAM,iDAAN,UAEF,oCAAM,SAAN,UAEF,oCAAM,IAAN,OACA,+EAEF,qBAAIA,UAAU,KAAd,oFACA,uBAAKA,UAAU,SAAf,UACE,0CAAY,8BAAZ,uBAA2C,UAA3C,MAAwD,sIACtD,gEACA,gEACA,wCAEF,oCAAM,IAAN,OACA,oEAAqC,4JAArC,OACA,qFAAyB,6CAAzB,OACA,qFAAyB,6CAAzB,OACA,qFAAyB,6CAAzB,OACA,4CACE,oCAAM,YACJ,oCAAM,mDAAN,OACA,oCAAM,mDAAN,OACA,oCAAM,mDAAN,UAEF,oCAAM,gBAAN,UAEF,qCACA,qDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,mEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,gHACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,2BACJ,wCAEF,oCAAM,cAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,gGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,uDACA,uBAAKA,UAAU,SAAf,UACE,qKACA,6OAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,wDCheHiJ,GA9NQ,SAAClJ,GAEpB,OACI,uBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,SAAf,SACI,qCACI,qDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,6EAEA,qBAAIA,UAAU,KAAd,yCACA,oCAAK,oBAAGC,KAAK,2CAA2CC,OAAO,SAASC,IAAI,sBAAvE,4BAAL,OACA,oPACA,sCACA,sCAEA,qBAAIH,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,6BACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,0DAAN,OACA,oCAAM,2CAAN,OACA,oCAAM,mDAAN,OACA,oCAAM,qCAAN,OACA,oCAAM,mDAAN,OACA,oCAAM,mCACF,oCAAM,+EAAN,OACA,oCAAM,oCAAN,OACA,oCAAM,oBAAN,UAEJ,oCAAM,OAAN,OACA,oCAAM,mCAAN,uBASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,gEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sHACA,+LAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,mFACA,qEACA,mFACA,oCAAM,mCACF,6GACA,kEACA,qDAEJ,oCAAM,KAAN,OACA,oFAQxB,sBAAKA,UAAU,SAAf,SACI,qCACI,+DACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,kCACF,oCAAM,kCAAN,UAEJ,oCAAM,MAAN,UAEJ,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,oDAAN,OACA,oCAAM,qCAAN,OACA,oCAAM,uCAAN,OACA,oCAAM,0CACF,oCAAM,kBACF,oCAAM,wBAAN,OACA,oCAAM,wBAAN,UAEJ,oCAAM,UAAN,UAEJ,oCAAM,MAAN,uBASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,8EACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,uGACA,gGACA,iMACA,0OACA,qDAEA,qBAAIA,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACI,oCAAM,wCAAN,OACA,oCAAM,yDAAN,OACA,oCAAM,iEAAN,OACA,mEACA,sFACA,oCAAM,qCACF,oCAAM,yBAAN,OACA,oCAAM,8BAAN,UAEJ,oCAAM,MAAN,OACA,oCAAM,qCACF,oCAAM,4DAAN,UAEJ,oCAAM,MAAN,OACA,oCAAM,kCACF,oCAAM,QACF,oCAAM,mDAAN,UAEJ,oCAAM,SAAN,OACA,oCAAM,QAAN,UAEJ,oCAAM,OAAN,uBASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,qEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,2NACA,6DACI,uBAAKA,UAAU,SAAf,UACI,oCAAM,2CACF,oCAAM,+BAAN,OACA,oCAAM,cAAN,UAEJ,oCAAM,QAAN,aAGR,0EACI,uBAAKA,UAAU,SAAf,UACI,4FACA,oCAAM,oHACF,8SADJ,aAKR,qBAAIA,UAAU,KAAd,kFACA,oNACA,uBAAKA,UAAU,SAAf,UACI,iEAAmC,KAC/B,0EAA6B,OACzB,0FACA,gGACA,6FACA,kGACA,0CAEJ,oCAAM,MAAN,UAEJ,oCAAM,qBAAN,UAEJ,qCAGA,qBAAIA,UAAU,KAAd,mCACA,8BACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,wDCtIrBkJ,GA3EI,SAACnJ,GAElB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,oFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,4DACA,qCACA,qCAEA,qBAAIA,UAAU,KAAd,sDACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,sIAAN,IAAsF,6JAAtF,OACA,oCAAM,0IAAN,IAA2E,mLAA3E,OACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,6BACA,uBAAKA,UAAU,SAAf,UACE,qEACA,oCAAM,6CAAN,OACA,qCAHF,IAGc,wBACZ,uFACA,qCALF,IAKc,wBACZ,4CACE,oCAAM,0FAAN,OACA,oCAAM,6BACJ,oCAAM,2FAAN,UAEF,oCAAM,aAAN,UAEF,uDAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,oEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uEAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,2CAAN,OACA,qCAFF,IAEc,wBACZ,qCACA,yDCodHmJ,GAnhBc,SAACpJ,GAE5B,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,4EACA,uBAAKA,UAAU,SAAf,UAEE,kFACA,8GACA,sEACA,kDAAmB,mHAAnB,OACA,2EACA,4DACA,8IACA,uBAAKA,UAAU,SAAf,UACE,sDAAuB,+FAAvB,OACA,6DAA8B,qIAA9B,OACA,mEAAoC,6MAApC,OACA,6FAAiB,qFAAjB,OACA,8CAAe,kNAAf,UAEF,uBAAKA,UAAU,SAAf,UACE,oCAAK,iDAAL,OACA,+CAAiB,IACf,2GACA,iEACA,qGAEF,oCAAM,IAAN,WAEF,oCAAK,sDAAL,OACA,uBAAKA,UAAU,SAAf,UACE,qDAAuB,IACrB,mEAEF,oCAAM,KAAN,UAEF,oCAAK,6CAAL,OACA,uBAAKA,UAAU,SAAf,UACE,0CAAY,IACV,mDAAqB,IAArB,IAA0B,6MACxB,qFAEF,oCAAM,IAAN,UAEF,oCAAM,IAAN,kBAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,gGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,4EACA,qGACE,kDACA,uFAEF,mDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2FACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,0EACE,qCACA,8EAAgD,IAC9C,wCAEF,oCAAM,IAAN,UAEF,mDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,oHACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,gCACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,2CACA,uBAAKA,UAAU,SAAf,UACE,2CAAa,qBAAb,iCACA,sEACA,iFACE,oCAAM,WAAN,OACA,sFAEF,6CAGJ,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,mCACA,uBAAKA,UAAU,SAAf,UACE,2CAAa,kBAAb,0BACA,oCAAM,QACJ,oCAAM,iBAAN,UAEF,oCAAM,SAAN,gBAIN,qBAAIA,UAAU,KAAd,mCACA,qBAAIA,UAAU,KAAd,iIACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,2DAAN,OACA,qCAFF,IAEc,wBACZ,6FACE,qCAAO,OACL,uFAEF,oCAAM,MAAN,UAEF,kDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,6GACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,gCACE,qBAAIA,UAAU,KAAd,mJACA,uBAAKA,UAAU,SAAf,UACE,iFACE,kDACA,uFAEF,0CAEF,uBAAKA,UAAU,SAAf,UACE,wGACE,kDACA,uFAEF,0CAEF,qBAAIA,UAAU,KAAd,2IACA,uBAAKA,UAAU,SAAf,UACE,iFACE,kDACA,uFAEF,0CAEF,uBAAKA,UAAU,SAAf,UACE,sIACE,uHAEF,qDAQV,sBAAKA,UAAU,SAAf,SACE,qCACE,gGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,sFACE,oFACA,4CAAc,IACZ,uFAEF,oCAAM,IAAN,UAEF,uDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,8HACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,gCACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,2CAAa,QAAb,8BAAgD,6DAAhD,OACA,qCAFF,IAEc,wBACZ,+EACE,kDACA,uFAEF,uCACA,qCARF,IAQc,wBACZ,6GAAwB,iDAAxB,0EAOV,sBAAKA,UAAU,SAAf,SACE,qCACE,0FACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,gCACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,2GACE,kDACA,oFACA,oCAAM,0KAAN,OACA,oCAAM,+GAAN,OACA,2DAAc,2EAAd,OACA,qCANF,IAMc,wBAEZ,2CAAa,wCAAb,OACA,oMATF,IAS6D,wBAC3D,oCAAM,qCACJ,kDACA,6DAGJ,uCACA,oCAAM,iBACJ,oCAAM,sDACJ,oCAAM,eACJ,uFAEF,oCAAM,MAAN,OACA,oCAAM,MAAN,aAGJ,oCAAM,MAAN,qBASV,sBAAKA,UAAU,SAAf,SACE,qCACE,kHACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,2CACJ,oCAAM,oBAAN,OACA,oCAAM,gEAAN,UAEF,oCAAM,QACJ,oCAAM,0BAAN,UAEF,oCAAM,OAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,qEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,gCACJ,oCAAM,UACJ,oCAAM,4BAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,QACJ,oCAAM,8BAAN,UAEF,oCAAM,MAAN,UAEF,oCAAM,QAAN,OACA,qCAZF,IAYc,wBACZ,oCAAM,kBACJ,oCAAM,2BACJ,oCAAM,gBACJ,oCAAM,8DAAN,UAEF,oCAAM,OAAN,UAEF,oCAAM,MAAN,UAEF,oCAAM,QAAN,OACA,qCAvBF,IAuBc,wBACZ,oCAAM,iDACJ,oCAAM,kBAAN,UAEF,oCAAM,eAAN,uBAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,uHACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oEACA,oEACA,kDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,2HACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,wHAAmC,IACjC,0DACC,KAFH,sBAUZ,sBAAKA,UAAU,SAAf,SACE,qCACE,qFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,iHACE,0DACA,oCAAM,kDACJ,6DAEF,wCAEF,sDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,iEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,sHAA2C,YACzC,uEACA,2CAAa,qBAAb,UAEF,uCACA,qCANF,IAMc,wBACZ,4GAAuB,gDAAvB,wDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,mGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,+HACA,gFACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,iFACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,gDAAN,OACA,sDAAwB,IACtB,wDACA,0DAEF,oCAAM,KAAN,OACA,gDAAkB,IAChB,+CACA,6IAEF,oCAAM,IAAN,OACA,6DAEF,qBAAIA,UAAU,KAAd,mGACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,wDACJ,6EAEF,oCAAM,mBAAN,uBAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,uGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,8IAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,2CACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,2DAAN,OACA,0EACE,oEAEF,uCACA,mEAEF,qBAAIA,UAAU,KAAd,mCACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,KAAN,OACA,oCAAM,mBAAN,OACA,6DACA,oCAAM,MAAN,uBAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,8GACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,wDC7dHoJ,GAxCO,SAACrJ,GAEnB,OACI,sBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,SACI,qCACI,4EACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACI,iDAAmB,OACf,yEACA,mDAAqB,OACjB,sDAAwB,IACpB,gFAEJ,oCAAM,IAAN,OACA,+DAEJ,oCAAM,IAAN,QACA,kDAAoB,OAChB,4DAEJ,oCAAM,IAAN,QACA,+CAAiB,OACb,+EAEJ,oCAAM,IAAN,WAEJ,oCAAM,IAAN,0BCmiBbqJ,GAjkBI,SAACtJ,GAElB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,6DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,gDAEA,qBAAIA,UAAU,KAAd,yCACA,uHAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,sHAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,qDACA,uBAAKA,UAAU,SAAf,UACE,8DACA,qCAFF,IAEc,wBACZ,6DAA+B,IAC7B,sEACA,6CAAe,IACb,2EAEF,oCAAM,KAAN,OACA,8DAEF,oCAAM,MAAN,OACA,2DAEF,qBAAIA,UAAU,KAAd,qDACA,uBAAKA,UAAU,SAAf,UACE,mEACA,qCAFF,IAEc,wBACZ,8DAAgC,OAC9B,0CAAY,SAAZ,qBACE,qDACA,4DAEF,uCACA,oDAEF,oCAAM,KAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,mDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,mFACA,wDACE,uBAAKA,UAAU,SAAf,UACE,oCAAM,YACJ,oCAAM,oBAAN,OACA,oCAAM,cAAN,OACA,oCAAM,4BAAN,UAEF,oCAAM,OAAN,aAIJ,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,0CACA,uBAAKA,UAAU,SAAf,UACE,+DACA,wBAFF,IAEY,wBACV,qEAEF,qBAAIA,UAAU,KAAd,0CACA,uBAAKA,UAAU,SAAf,UACE,+DACA,wBAFF,IAEY,wBACV,oCAAM,oDACJ,mEAEF,oCAAM,wBACJ,2DAEF,oCAAM,OAAN,UAEF,qBAAIA,UAAU,KAAd,0CACA,uBAAKA,UAAU,SAAf,UACE,+DACA,wBAFF,IAEY,wBACV,oCAAM,4DACJ,oCAAM,QACJ,oCAAM,gCACJ,iDACA,kDAEF,oCAAM,OAAN,OACA,oCAAM,eACJ,oCAAM,+CAAN,OACA,oCAAM,4DAAN,UAEF,oCAAM,MAAN,aAGJ,oCAAM,QAAN,OACA,oCAAM,8BAAN,OACA,oCAAM,sBAAN,UAEF,qBAAIA,UAAU,KAAd,oJACA,uBAAKA,UAAU,SAAf,UACE,+DACA,wBAFF,IAEY,wBACV,oCAAM,qCACJ,oCAAM,iBACJ,oCAAM,MACJ,oCAAM,sBAAN,OACA,oCAAM,mBAAN,OACA,oCAAM,YACJ,oCAAM,0BAAN,UAEF,oCAAM,OAAN,OACA,oCAAM,sCAAN,OACA,oCAAM,2BAAN,UAEF,oCAAM,MAAN,UAEF,oCAAM,iCACJ,oCAAM,8CAAN,UAEF,oCAAM,gCACJ,oCAAM,wBAAN,UAEF,oCAAM,QAAN,UAEF,oCAAM,MAAN,uBASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,oDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,yDACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,mCACJ,oCAAM,qBAAN,UAEF,oCAAM,iBAAN,UAEF,yDACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,YACJ,oCAAM,qBAAN,OACA,sDAEF,oCAAM,QAAN,UAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,+DACA,oCAFF,IAEa,wBACX,iEAAyB,IAAzB,IACE,sDAEF,oCAAM,MAAN,UAEF,qBAAIA,UAAU,KAAd,0CACA,uBAAKA,UAAU,SAAf,UACE,+DACA,oCAFF,IAEa,wBACX,oCAAM,qDACJ,mEAEF,oCAAM,wBACJ,2DAEF,oCAAM,OAAN,UAEF,qBAAIA,UAAU,KAAd,oHACA,uBAAKA,UAAU,SAAf,UACE,+DACA,oCAFF,IAEa,wBACX,gCAAK,qCACH,gCAAK,gCAAL,QACA,gCAAK,+BAAL,QACA,gCAAK,gBACH,gCAAK,mCAAL,WAEF,0DACA,mEACA,gCAAK,OAAL,QACA,gCAAK,6DACH,gCAAK,wBACH,gCAAK,4DAAL,WAEF,gCAAK,wBACH,gCAAK,wBAAL,WAEF,gCAAK,QAAL,cAGJ,gCAAK,MAAL,QACA,qCAvBF,IAuBc,wBACZ,sLACA,qNAEF,qBAAIA,UAAU,KAAd,qGACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,YACJ,oCAAM,yBAAN,OACA,oCAAM,oBAAN,OACA,oCAAM,YACJ,oCAAM,0BAAN,OACA,oCAAM,+BAAN,OACA,oCAAM,yBAAN,OACA,oCAAM,MAAN,UAEF,oCAAM,OAAN,UAEF,oCAAM,wBACJ,oCAAM,gCAAN,UAEF,oCAAM,wBACJ,oCAAM,wBAAN,UAEF,oCAAM,QAAN,UAEF,qBAAIA,UAAU,KAAd,qGACA,uBAAKA,UAAU,SAAf,UACE,uDACA,qCACE,oCAAM,IACJ,qDACA,sDACA,gDACA,oDACA,0DAEF,oCAAM,IAAN,WAEF,sCACA,oCAAM,0DAAN,OACA,oCAAM,oCAAN,OACA,oCAAM,iCACJ,oCAAM,YACJ,oCAAM,8CAAN,OACA,oCAAM,oBAAN,OACA,oCAAM,YACJ,oCAAM,+BAAN,OACA,oCAAM,yBAAN,UAEF,oCAAM,MAAN,UAEF,oCAAM,OAAN,OACA,oCAAM,wBACJ,oCAAM,2BAAN,OACA,oCAAM,yDAAN,OACA,oCAAM,sDAAN,OACA,oCAAM,wDAAN,OACA,oCAAM,gDAAN,OACA,oCAAM,yBAAN,UAEF,oCAAM,wBACJ,oCAAM,wBAAN,UAEF,oCAAM,QAAN,UAEF,oCAAM,MAAN,OACA,qCAxCF,IAwCc,wBACZ,oCAAM,8BACJ,oCAAM,wDAAN,UAEF,oCAAM,QAAN,uBAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,iEACA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,2BACA,uBAAKA,UAAU,SAAf,UACE,+DACA,wBAFF,IAEY,wBACV,oCAAM,uDACJ,mEAEF,oCAAM,wBACJ,2DAEF,oCAAM,OAAN,uBAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,mDACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,qEACA,qBAAIA,UAAU,KAAd,mCACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,qDAOZ,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uLACA,yDACA,sBAAKA,UAAU,SAAf,SACE,gEAEF,yDACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,eACJ,oCAAM,oCAAN,UAEF,oCAAM,MAAN,UAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,6DAAN,OACA,oCAAM,YACJ,oCAAM,8CAAN,OACA,oCAAM,oBAAN,OACA,oCAAM,YACJ,oCAAM,+BAAN,OACA,oCAAM,0BAAN,UAEF,oCAAM,OAAN,OACA,oCAAM,eACJ,oCAAM,oCAAN,UAEF,oCAAM,MAAN,UAEF,oCAAM,OAAN,uBAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,wFACA,mGAA0D,6EAA1D,OACA,uHAAwF,qGAAxF,OACA,+HACA,2GAAyC,wIAAzC,OACA,qCACA,qCACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,yEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,yGACA,uHACA,iIACA,uGACA,2IACA,+CACA,0DAAiB,oEAAjB,OACA,2DAA4B,iEAA5B,OACA,qCACA,qCACA,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,kIACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,wDACA,mEAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,wGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,uDACA,2DAA4B,kGAA5B,UAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,2CACA,uBAAKA,UAAU,SAAf,UACE,mFACA,yFACA,4EAEF,qBAAIA,UAAU,KAAd,oDACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,iCACJ,oCAAM,qCAAN,OACA,oCAAM,qCAAN,OACA,oCAAM,+CAAN,OACA,oCAAM,sCAAN,OACA,oCAAM,wCAAN,OACA,oCAAM,4CAAN,OACA,oCAAM,4CAAN,OACA,oCAAM,+IAAN,UAEF,oCAAM,MAAN,UAEF,qBAAIA,UAAU,KAAd,4DACA,sBAAKA,UAAU,SAAf,SACE,iIASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,2DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,+DACA,oCAAM,yCACJ,oCAAM,wCAAN,OACA,oCAAM,uBAAN,OACA,oCAAM,iBACJ,oCAAM,4CAAN,OACA,oCAAM,2CAAN,UAEF,oCAAM,SAAN,OACA,oCAAM,+BAAN,UAEF,oCAAM,QAAN,OACA,qCAbF,IAac,wBACZ,oCAAM,0DAAN,OACA,oCAAM,4CACJ,oCAAM,0BACJ,oCAAM,wFAAN,OACA,oCAAM,eAAN,OACA,oCAAM,uBAAN,UAEF,oCAAM,SAAN,OACA,oCAAM,yBACJ,oCAAM,8FAAN,OACA,oCAAM,eAAN,OACA,oCAAM,sCAAN,aAGJ,oCAAM,UAAN,OACA,qCA7BF,IA6Bc,wBACZ,oCAAM,0DAAN,OACA,oCAAM,6CACJ,oCAAM,4BACJ,oCAAM,8DAAN,OACA,oCAAM,eAAN,OACA,oCAAM,yBAAN,UAEF,oCAAM,SAAN,OACA,oCAAM,yBACJ,oCAAM,wDAAN,OACA,oCAAM,eAAN,OACA,oCAAM,sCAAN,aAGJ,oCAAM,UAAN,OACA,sGACA,iHCjhBHsJ,GAnCG,SAACvJ,GAEf,OACI,sBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,SACI,qCACI,sDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,wDCkBrBuJ,GAzCI,SAACxJ,GAElB,OACE,sBAAKC,UAAU,eAAf,SACE,sBAAKA,UAAU,SAAf,SACE,qCACE,gGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,0CACA,wCACA,6CAAc,uEAAd,OACA,kDAAmB,yEAAnB,OACA,mDAAoB,4EAApB,UAGF,qBAAIA,UAAU,KAAd,uDACA,uBAAKA,UAAU,SAAf,UACE,mDACA,sDAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,uDC8SHwJ,GA3UO,SAACzJ,GAEnB,OACI,qCAEI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,mEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,qJACA,gGACA,2CACA,yGAEA,qBAAIA,UAAU,KAAd,6BACA,6CAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,yDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,wGACA,sRACA,oQACA,uBAAKA,UAAU,SAAf,UACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,+PACA,oCAAM,WACF,oCAAM,6BACF,oCAAM,qCAAN,OACA,oCAAM,qCAAN,UAEJ,oCAAM,WAAN,UAEJ,oCAAM,YAAN,OACA,oCAAM,KAAN,OACA,oCAAM,aACF,oCAAM,uDAAN,OACA,oCAAM,6BACF,oCAAM,wCACF,oCAAM,wBAAN,UAEJ,oCAAM,QAAN,UAEJ,oCAAM,QAAN,OACA,oCAAM,KAAN,OACA,oCAAM,kEAAN,OACA,oCAAM,gDAAN,OACA,oCAAM,+DAAN,OACA,oCAAM,oCAAN,UAEJ,oCAAM,eAAN,UAEJ,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,2HACA,oCAAM,WACF,oCAAM,6BACF,oCAAM,2DAAN,OACA,oCAAM,2DAAN,UAEJ,oCAAM,WAAN,UAEJ,oCAAM,YAAN,OACA,oCAAM,KAAN,OACA,oCAAM,aACF,oCAAM,kEAAN,OACA,oCAAM,qDACF,oCAAM,2BAAN,UAEJ,oCAAM,QAAN,OACA,oCAAM,KAAN,OACA,oCAAM,gDAAN,OACA,oCAAM,+DAAN,OACA,oCAAM,gDAAN,OACA,oCAAM,oCAAN,UAEJ,oCAAM,eAAN,aAGR,mQAEA,qBAAIA,UAAU,KAAd,6BACA,6CAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,8CACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,oDACA,mDACA,sDACA,uDACA,2DAEA,qBAAIA,UAAU,KAAd,8CACA,sEACA,oJAEA,kFAEA,qBAAIA,UAAU,KAAd,iDACA,sJACA,sGAEA,qBAAIA,UAAU,KAAd,kDACA,2GACA,6DAA8B,sHAA9B,OACA,qCAEA,qBAAIA,UAAU,KAAd,sDACA,uGAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,qDAUxB,uBAAKA,UAAU,SAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,uEAA8C,oBAAGI,KAAK,oDAAiBC,MAAO,CAAEC,WAAY,UAA9C,iEAA9C,OACA,uBAAKN,UAAU,SAAf,UAII,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACI,sMACA,4UAEA,wCAGJ,sBAAKA,UAAU,UAAf,qBACA,uBAAKA,UAAU,SAAf,UACI,wJACA,kKACA,iHACA,wCAGJ,sBAAKA,UAAU,UAAf,mBACA,uBAAKA,UAAU,SAAf,UACI,6PACA,qCACA,wCAGJ,sBAAKA,UAAU,UAAf,sCACA,uBAAKA,UAAU,SAAf,UACI,wLACA,kLACA,kSACA,mSACA,4MACA,wCAGJ,sBAAKA,UAAU,UAAf,gBACA,sBAAKA,UAAU,SAAf,SACI,+CAOhB,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,+BAAyC,oBAAGI,KAAK,YAAYC,MAAO,CAAEC,WAAY,UAAzC,yBAAzC,OACA,uBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAU,UAAf,2LACA,uBAAKA,UAAU,SAAf,UACI,+aAGA,gDAMhB,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,oFAA4C,oBAAGI,KAAK,iEAAeC,MAAO,CAAEC,WAAY,UAA5C,8EAA5C,OACA,uBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAU,UAAf,kIACA,sBAAKA,UAAU,SAAf,SACI,gCACI,gKACA,wJACA,yJACA,mSACA,sIACA,6NACA,gKACA,gMACA,sbAEA,sBAAKA,UAAU,SAAf,SACI,gCACI,sBAAKA,UAAU,UAAf,wEACA,8FACA,0GACA,iHACA,wHACA,gJAGR,sBAAKA,UAAU,SAAf,SACI,gCACI,sBAAKA,UAAU,UAAf,oFACA,qHACA,wDACA,sBAAKA,UAAU,SAAf,SACI,0QAIJ,yDACA,sBAAKA,UAAU,SAAf,SACI,6QAKJ,6VAEA,wbAU5B,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,yDAA+C,oBAAGI,KAAK,sCAAkBC,MAAO,CAAEC,WAAY,UAA/C,mDAA/C,OACA,uBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAU,UAAf,sEACA,uBAAKA,UAAU,SAAf,UACI,gCACI,4LACA,yJACA,6KACA,mGACA,yKALJ,IAKmD,wBAC/C,yFANJ,IAMoC,wBAChC,6HAPJ,IAO0C,wBACtC,qLACA,yQACA,yKACA,uQACA,iNACA,iRACA,2EACA,yEACA,mGACA,wHACA,qCACA,wCAEJ,gDAOhB,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,uBACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAU,UAAf,mBACA,uBAAKA,UAAU,SAAf,UACI,qMACA,wHACA,6HACA,0IACA,ySACA,wCACA,wCAEJ,sBAAKA,UAAU,UAAf,oBACA,uBAAKA,UAAU,SAAf,UACI,2OACA,gRACA,uNACA,uMACA,0MACA,qCACA,yDCtMrByJ,GAzHa,SAAC1J,GAEzB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,2CAA2C,oBAAGI,KAAK,wBAAcC,MAAO,CAAEC,WAAY,UAA3C,qCAA3C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,0CAA0C,oBAAGI,KAAK,uBAAaC,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,0CAA0C,oBAAGI,KAAK,uBAAaC,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,0CAA0C,oBAAGI,KAAK,uBAAaC,MAAO,CAAEC,WAAY,UAA1C,oCAA1C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,8CAA8C,oBAAGI,KAAK,2BAAiBC,MAAO,CAAEC,WAAY,UAA9C,wCAA9C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,yCAAyC,oBAAGI,KAAK,sBAAYC,MAAO,CAAEC,WAAY,UAAzC,mCAAzC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,8CAA8C,oBAAGI,KAAK,2BAAiBC,MAAO,CAAEC,WAAY,UAA9C,wCAA9C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,2CAA2C,oBAAGI,KAAK,wBAAcC,MAAO,CAAEC,WAAY,UAA3C,qCAA3C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,6CAA6C,oBAAGI,KAAK,0BAAgBC,MAAO,CAAEC,WAAY,UAA7C,uCAA7C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDCmCrB0J,GAhJO,SAAC3J,GAErB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,0GACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,6DACE,uBAAKA,UAAU,SAAf,UACE,+DACA,+DACA,yDACA,mEACA,mFACA,kJAA8B,iGAA9B,OACA,6HACA,yHAA8B,kEAA9B,OACA,oCAAM,oBAAN,oGACA,oCAAM,qBAAN,iHACA,oCAAM,sBAAN,sIACA,sFACA,2CAGJ,0IACE,uBAAKA,UAAU,SAAf,UACE,gMACA,+FACA,mFACA,yGAGJ,6DACE,uBAAKA,UAAU,SAAf,UACE,wcAEE,wDAFF,OAGA,kGAAsB,uJAAtB,OACA,kGAAsB,0DAAtB,OACA,2EAAmB,yDAAnB,OACA,0NAA+C,2IAA/C,OACA,uKAAoC,wCAApC,OACA,0CAAY,QAAZ,4KAA2D,+CAAiB,SAAjB,wGAA3D,OACA,+XAEE,sFAFF,OAGA,oCAAK,uOAAL,OACA,iMAA0C,2KAA1C,OACA,6LAA2C,wCAA3C,OACA,oCAAM,oBAAN,2KAAsD,qKAAtD,OACA,oCAAM,sBAAN,oKAAsD,wCAAtD,aAIJ,8GACA,qHACA,gFACA,2HACA,2FACA,yHACA,sKACA,2HACA,+FACA,6HACA,0GACA,6EAAiB,QAAjB,oDACA,sCAEA,qBAAIA,UAAU,KAAd,6GACA,kIAON,sBAAKA,UAAU,SAAf,SACE,qCACE,qFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,+CACA,oCAAM,uFAAN,OACA,oCAAM,uDAAN,OACA,oCAAM,4CAAN,SAEA,qBAAIA,UAAU,KAAd,yCACA,oCAAM,yBAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,+CACA,oCAAM,qDAAN,OACA,oCAAM,+CAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,gCACA,oCAAM,mFAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,yCACA,oDACA,qCAEA,qBAAIA,UAAU,KAAd,sDACA,oCAAM,qBAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,qDACA,oCAAM,oBAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,+CACA,oCAAM,wBAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,iEACA,oCAAM,qCAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,qDACA,oCAAM,mEAAN,2CACA,oCAAM,+CAAN,2CACA,oCAAM,sEAAN,mDACA,qCAEA,qBAAIA,UAAU,KAAd,2CACA,oCAAM,2GAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCACA,iDCrEG2J,GAjEW,SAAC5J,GACvB,OACI,qCAEI,uBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,SAAf,SACI,qCACI,sDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,qDASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,sDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,2DCsHzB4J,GA1KM,SAAC7J,GAClB,OACI,uBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,SAAf,SACI,qCACI,wDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,uJAEA,qBAAIA,UAAU,KAAd,iCACA,6FAEA,qBAAIA,UAAU,KAAd,mCACA,gIAEA,qBAAIA,UAAU,KAAd,0CACA,6DACA,gDACI,uBAAKA,UAAU,SAAf,UACI,kGACA,wIACA,qJACA,mHACA,uIACA,gGAIR,qBAAIA,UAAU,KAAd,8CACA,6FACA,gDACI,sBAAKA,UAAU,SAAf,SACI,0IAIR,qBAAIA,UAAU,KAAd,oCACA,uGAEA,qBAAIA,UAAU,KAAd,gCACA,uIAEA,qBAAIA,UAAU,KAAd,6CACA,8FAEA,qBAAIA,UAAU,KAAd,yCACA,iFAEA,qBAAIA,UAAU,KAAd,2CACA,8DAEA,qBAAIA,UAAU,KAAd,6CACA,8DAEA,qBAAIA,UAAU,KAAd,oCACA,8DAEA,qBAAIA,UAAU,KAAd,kCACA,8GAEA,qBAAIA,UAAU,KAAd,0CACA,2EAEA,qBAAIA,UAAU,KAAd,iCACA,yIAEA,qBAAIA,UAAU,KAAd,uCACA,oIAKZ,sBAAKA,UAAU,SAAf,SACI,qCACI,qFACA,uBAAKA,UAAU,SAAf,UACI,oBAAGC,KAAK,0CAA0CC,OAAO,SAASC,IAAI,sBAAtE,sDACA,qBAAIH,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,6CAKZ,sBAAKA,UAAU,SAAf,SACI,qCACI,2EACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,6CAKZ,sBAAKA,UAAU,SAAf,SACI,qCACI,uEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,6CAKZ,sBAAKA,UAAU,SAAf,SACI,qCACI,0FACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,oCAAK,oBAAGC,KAAK,oCAAoCC,OAAO,SAASC,IAAI,sBAAhE,8CAAL,OACA,sCACA,kDCzFT0J,GAvEU,SAAC9J,GAExB,OACE,qCACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,mEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,6CACA,uEACA,wEACA,0EACA,8GAA2D,6IAA3D,OACA,gHAA6D,gJAA7D,OACA,uGAAqC,oFAArC,OACA,qDACA,yDACA,6DACA,0DACA,6EAA0B,sGAA1B,OACA,wCAGF,qBAAIA,UAAU,KAAd,+EACA,uBAAKA,UAAU,SAAf,UACE,6CACA,wFACA,+EACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,yEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,2CACA,uBAAKA,UAAU,SAAf,UACE,qDAAuB,IACrB,uDAAwB,yFAAxB,OACA,gDAAiB,gGAAjB,OACA,oDAAqB,mHAArB,OACA,iDAAkB,qFAAlB,OACA,0DAA2B,yGAA3B,OACA,oDAAqB,iFAArB,OACA,0DAA2B,oLAA3B,OACA,uDAAwB,0EAAxB,OACA,qCACA,wCAEF,oCAAM,KAAN,wBC08BD8J,GArgCO,SAAC/J,GAErB,OACE,qCACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,uFACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,0LACA,qCACA,wCAEF,qBAAIA,UAAU,KAAd,mCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,uCAEF,qBAAIA,UAAU,KAAd,iCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,uCAEF,qBAAIA,UAAU,KAAd,mCACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,mCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,uCAEF,qBAAIA,UAAU,KAAd,6CACA,uBAAKA,UAAU,SAAf,UACE,qCACA,uCAEF,qBAAIA,UAAU,KAAd,2CACA,uBAAKA,UAAU,SAAf,UACE,qCACA,uCAEF,qBAAIA,UAAU,KAAd,6CACA,uBAAKA,UAAU,SAAf,UACE,qCACA,uCAEF,qBAAIA,UAAU,KAAd,6CACA,oCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,+CAMR,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,iBAAR,gCAA1B,OACA,sBAAKJ,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,mCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,yCACA,uBAAKA,UAAU,SAAf,UACE,kPACA,+SACA,+TACA,6SAEF,sBAAKA,UAAU,UAAf,yCACA,uBAAKA,UAAU,SAAf,UACE,mGACA,wCAEF,sBAAKA,UAAU,UAAf,yCACA,uBAAKA,UAAU,SAAf,UACE,sGACA,ueAEA,gDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,iDACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,qCACA,uBAAKA,UAAU,SAAf,UACE,4GACA,sCACA,yCAGF,sBAAKA,UAAU,UAAf,wFACA,uBAAKA,UAAU,SAAf,UACE,iHACA,gDACA,wEACA,8DACA,yCAGF,sBAAKA,UAAU,UAAf,gBACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACE,oCACA,uCAGF,sBAAKA,UAAU,UAAf,4BACA,sBAAKA,UAAU,SAAf,SACE,+CAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,mCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UAEE,sBAAKA,UAAU,UAAf,mBACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAGF,sBAAKA,UAAU,UAAf,oBACA,uBAAKA,UAAU,SAAf,UACE,iFACA,wCAGF,sBAAKA,UAAU,UAAf,oBACA,uBAAKA,UAAU,SAAf,UACE,kHACA,wCAGF,sBAAKA,UAAU,UAAf,oBACA,uBAAKA,UAAU,SAAf,UACE,kIACA,wCAGF,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACE,oCACA,+CAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,uCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,uJACA,wCAGF,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,0HACA,6FACA,sHACA,uHACA,wCAGF,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,6FACA,iGACA,uHACA,0HACA,uFACA,iFACA,wFACA,wCAGF,sBAAKA,UAAU,UAAf,yCACA,uBAAKA,UAAU,SAAf,UACE,4CACA,iDACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,uCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,iDAAkB,uFAAlB,QACA,qEACA,iEACA,sGACE,+CACA,oDAEF,uEACA,8HACE,gDAAkB,IAAlB,UACA,oEAEF,4GACA,sDAAuB,wKAAvB,OACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,gCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,+CACA,sBAAKA,UAAU,SAAf,SACE,sCAGF,sBAAKA,UAAU,UAAf,+CACA,sBAAKA,UAAU,SAAf,SACE,sCAGF,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAGF,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAGF,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAGF,sBAAKA,UAAU,UAAf,4BACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,4BACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACE,qCACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,kDACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,sGACA,uHACA,gHACA,2HACA,mKACA,yIACA,sEACA,sIACA,yJACA,wLACA,2GACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,qNACA,+KACA,yLACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,kIACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,6FACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,uCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,0JACA,uGACA,mNACA,mJACA,wCAGF,sBAAKA,UAAU,UAAf,oBACA,uBAAKA,UAAU,SAAf,UACE,6GACA,4LACA,4MACA,6FAA0C,uLAA1C,OACA,wCAGF,sBAAKA,UAAU,UAAf,qBACA,uBAAKA,UAAU,SAAf,UACE,oLACA,8MACA,8JACA,wKACA,oLACA,2HACA,qKAAsD,oLACpD,uBAAKA,UAAU,SAAf,UACE,2JACA,wSACA,mJACA,2KACA,2CAGJ,mMACA,+IACA,2LACA,gLACA,yKACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,oCACA,uCAGF,sBAAKA,UAAU,UAAf,wBACA,uBAAKA,UAAU,SAAf,UACE,qJACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,iCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,qBACA,uBAAKA,UAAU,SAAf,UACE,gSAEA,8GACA,qFACA,yHACA,gJACA,yIACA,mKACA,2JACA,sIACA,+HACA,oKACA,qFACA,oFACA,wHACA,wFACA,2CACA,8EACA,mJACA,iKACA,8EACA,oFACA,qCACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,oIACA,sHACA,iKACA,yHACA,6GACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,+CACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,4CACA,wHACA,8GACA,+IACA,wCAEF,sBAAKA,UAAU,UAAf,wBACA,uBAAKA,UAAU,SAAf,UACE,mGACA,2JACA,4JACA,gOAEA,+OAEA,qCACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,kBACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,+CACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,sCACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,qBACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,UAAf,yBACA,sBAAKA,UAAU,SAAf,SACE,+CAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,gCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,sBAAKA,UAAU,SAAf,SACE,uCAEF,sBAAKA,UAAU,UAAf,gBACA,sBAAKA,UAAU,SAAf,SACE,+CAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,mCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,yCACA,4EACA,qGACA,8EACA,sBAAKA,UAAU,UAAf,yCACA,qCACA,sBAAKA,UAAU,UAAf,yCACA,+EACA,iIACA,sMACA,wLACA,sBAAKA,UAAU,UAAf,yCACA,qJACA,8FACA,mLACA,sBAAKA,UAAU,UAAf,yCACA,qJACA,mLACA,sBAAKA,UAAU,UAAf,yCACA,2FACA,oHACA,sBAAKA,UAAU,UAAf,yCACA,qLACA,iNACA,8KACA,qGAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,+CACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,qBACA,uBAAKA,UAAU,SAAf,UACE,gKACA,+JACA,yJACA,+JACA,0JACA,0JACA,6LACA,2KACA,4JACA,yJACA,0MACA,gYAZF,IAYiH,wBAC/G,kJAAyC,IAAzC,iFACA,gJAAuC,IAAvC,aAdF,IAc0D,wBACxD,kGAfF,IAemC,wBACjC,2OACA,gGACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,0CACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,kBACA,uBAAKA,UAAU,SAAf,UACE,uHACA,mHAEF,sBAAKA,UAAU,UAAf,wBACA,uBAAKA,UAAU,SAAf,UACE,wIACA,uIACA,2TAEA,wCAEF,sBAAKA,UAAU,UAAf,wBACA,uBAAKA,UAAU,SAAf,UACE,qLACA,wCAEF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,6JACA,2GAA6E,IAA7E,8GAEA,iHAAmF,IAAnF,qEAEA,mDASV,sBAAKA,UAAU,SAAf,SACE,mCACE,wEAIJ,uBAAMA,UAAU,SAAhB,SAEE,gCAEE,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,kCAAR,gDAA1B,OACA,wBAAMJ,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,sDACA,oCAAK,mIAAL,OACA,mJACA,iHACA,uJACA,0JACA,0KACA,uBAAMA,UAAU,UAAhB,qDACA,kIAEA,uBAAMA,UAAU,UAAhB,eACA,2CAIJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,WAAR,yBAA1B,OAEA,gCAAI,4GAAJ,UACA,gCAAI,+HAAJ,SACA,gCAAI,oOAAJ,UAEA,wBAAMJ,UAAU,SAAhB,UACE,2IAEA,uBAAMA,UAAU,UAAhB,+CACA,8EACA,uBAAMA,UAAU,UAAhB,kEACA,iFACA,uBAAMA,UAAU,UAAhB,mEACA,mFACA,uBAAMA,UAAU,UAAhB,kEACA,+EACA,uBAAMA,UAAU,UAAhB,kEACA,0FACA,uBAAMA,UAAU,UAAhB,8CACA,qFACA,uBAAMA,UAAU,UAAhB,2HACA,2VAEA,uBAAMA,UAAU,UAAhB,wGACA,qPAGF,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,+CACA,4IACA,uBAAMA,UAAU,UAAhB,+CACA,2EACA,uBAAMA,UAAU,UAAhB,4DACA,uGACA,0HACA,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,wCAGF,uBAAMA,UAAU,SAAhB,+CACA,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,uBACA,6MACA,uBAAMA,UAAU,UAAhB,uBACA,4SAEA,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,2CAKJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,4BAAR,yCAA1B,OACA,wBAAMJ,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,sDACA,uEACA,qEACA,2FACA,uBAAMA,UAAU,UAAhB,qFACA,mEACA,sEACA,qFACA,uBAAMA,UAAU,UAAhB,eACA,wCAEF,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,sDACA,2IACA,uBAAMA,UAAU,UAAhB,sDACA,qGACA,6EACA,sFACA,uBAAMA,UAAU,UAAhB,gDACA,0GACA,uBAAMA,UAAU,UAAhB,gDACA,8GACA,uBAAMA,UAAU,UAAhB,eACA,2CAMJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,OAAR,qBAA1B,OACA,0KACA,2HACA,ySACA,wBAAMJ,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,qCACA,uBAAMA,UAAU,UAAhB,4HACA,iLACA,2LACA,4NACA,2KACA,uBAAMA,UAAU,UAAhB,6CACA,kLACA,6NACA,+NACA,mJACA,8OACA,uBAAMA,UAAU,UAAhB,oHACA,wOACA,uBAAMA,UAAU,UAAhB,qDACA,oJACA,uBAAMA,UAAU,UAAhB,oDACA,8LACA,gMACA,uBAAMA,UAAU,SAAhB,0BACA,uBAAMA,UAAU,UAAhB,wGACA,oCAAK,0IAAL,OACA,oCAAK,yOAAL,OACA,oCAAK,uLAAL,OACA,oCAAK,0QAAL,OACA,gUACA,sNACA,mMACA,uBAAMA,UAAU,SAAhB,0BACA,uBAAMA,UAAU,UAAhB,mDACA,oCAAK,4NAAL,OACA,2IACA,uBAAMA,UAAU,SAAhB,yBACA,uBAAMA,UAAU,UAAhB,kDACA,oCAAK,uKAAL,QACA,oCAAK,2PAAL,QACA,+JACA,uBAAMA,UAAU,UAAhB,gBACA,qCAGA,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,2CAKJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,qBAAR,kCAA1B,OACA,wBAAMJ,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,uEACA,uIACA,mLACA,qCACA,uBAAMA,UAAU,UAAhB,yEACA,uKACA,qCACA,uBAAMA,UAAU,UAAhB,eACA,2CAKJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,YAAR,0BAA1B,OACA,kHACA,wBAAMJ,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,2DACA,sDACA,uBAAMA,UAAU,UAAhB,2DACA,kEACA,uBAAMA,UAAU,UAAhB,iEACA,2GACA,0FACA,oGACA,oCAAK,sGAAL,OACA,oGACA,oCAAK,6HAAL,OACA,uBAAMA,UAAU,UAAhB,8EACA,+HACA,iLACA,uBAAMA,UAAU,UAAhB,6IACA,sGACA,uBAAMA,UAAU,UAAhB,6GACA,6HACA,0KACA,uBAAMA,UAAU,UAAhB,wGACA,uHAOJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,OAAR,qBAA1B,OACA,wSACA,kPACA,wBAAMJ,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,+CACA,iLACA,wHACA,iHACA,wGACA,gFACA,uBAAMA,UAAU,UAAhB,mCACA,0FACA,uBAAMA,UAAU,UAAhB,yEACA,yFACA,sIACA,yGACA,kKACA,uBAAMA,UAAU,UAAhB,gBACA,2CAKJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,OAAR,qBAA1B,OACA,wPACA,wBAAMJ,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,mCACA,8DACA,uBAAMA,UAAU,UAAhB,mCACA,2DACA,uBAAMA,UAAU,UAAhB,gDACA,kFACA,uBAAMA,UAAU,UAAhB,gDACA,kFACA,uBAAMA,UAAU,UAAhB,gDACA,wFAMJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,YAAR,yBAA1B,OACA,oCAAK,qQACL,oCAAK,sJACL,wBAAMJ,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,sDACA,oCAAK,4XAAL,QAGA,oPAGA,uBAAMA,UAAU,UAAhB,qDACA,oCAAK,mHAAL,OACA,sFACA,uBAAMA,UAAU,UAAhB,eACA,2CAIJ,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,SAAR,sBAA1B,OACA,oCAAK,oBAAGH,KAAK,qCAAqCC,OAAO,SAApD,4BAAL,OACA,oCAAK,0NAAL,OACA,qBAAIF,UAAU,QAAd,iGACA,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,mCACA,kKACA,+KACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,0EAAL,OACA,sEACA,yEACA,uDACA,4CACA,0JACA,oCAAK,4EAAL,OACA,2CACA,yEACA,kDACA,yCACA,wCAEF,6JACA,uBAAMA,UAAU,UAAhB,eACA,qCACA,uBAAMA,UAAU,UAAhB,kCACA,kJACA,+CACA,4CACA,8EACA,qCACA,uBAAMA,UAAU,UAAhB,eACA,2CAIJ,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,kHACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,kDACA,8DACA,+DACA,6GACA,kDACA,kDACA,gDAOR,wBAAMA,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,eAAR,6BAA1B,OACA,wBAAMJ,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,+DACA,qEACA,qEACA,qJACA,uBAAMA,UAAU,UAAhB,kIACA,mGACA,uBAAMA,UAAU,UAAhB,2DACA,6FACA,uBAAMA,UAAU,UAAhB,eACA,sDCbD+J,GA9+BM,SAAChK,GACpB,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,mEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,sEACA,0LACA,2OACA,0NACA,yEAAkB,IAAlB,aAAiC,IAAjC,cAEA,qBAAIA,UAAU,KAAd,6BACA,qDACA,8EACA,qCAEA,qBAAIA,UAAU,KAAd,uGACA,uKAEA,qBAAIA,UAAU,KAAd,6BACA,qCACA,qCACA,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,mEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,8DACA,6EACA,6EACA,qIACA,mGACA,sDACA,gDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,gHACE,uBAAKA,UAAU,SAAf,UACE,0MACA,8EAA+C,uGAA/C,OACA,iDACA,oIACA,0EACA,6FAA8D,sKAA9D,aAGJ,iHACE,uBAAKA,UAAU,SAAf,UACE,kKACA,kEACA,gEACA,uGACA,2CAGJ,8BACE,sBAAKA,UAAU,SAAf,SACE,yCAGJ,8BACE,sBAAKA,UAAU,SAAf,SACE,yCAGJ,8BACE,sBAAKA,UAAU,SAAf,SACE,yCAGJ,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,6FAEA,qBAAIA,UAAU,KAAd,yCACA,kEACA,mEACA,oEACA,8DACA,iEACA,8MACA,qEACA,uEACA,+MACA,wKACE,6OAGF,qBAAIA,UAAU,KAAd,yCACA,oKACA,wDACA,oFACA,uFACA,gHACA,oMACA,yJACA,qCAEA,qBAAIA,UAAU,KAAd,uDACA,wDACA,qEACA,iDACA,oEACA,oGACA,qCACA,0CAIJ,sBAAKA,UAAU,SAAf,SACE,qCACE,0EACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,sFACA,6EAA8C,0EAA9C,OACA,6EAA8C,0EAA9C,OACA,6EAA8C,0EAA9C,OACA,6EAA8C,0EAA9C,OACA,6EAA8C,0EAA9C,OACA,2EAA4C,yEAA5C,OACA,6EAA8C,0EAA9C,OACA,+EAAgD,4EAAhD,OACA,8EAA+C,2EAA/C,OACA,4EAA6C,mGAA7C,OAEA,4EAA6C,0EAA7C,OACA,4EAA6C,0EAA7C,eAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,8EACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,4DACA,6EAA0B,+DAA1B,OACA,oEAAqC,sEAArC,OACA,sDAAuB,uEACrB,oHACA,0GAEF,2EAEA,qBAAIA,UAAU,KAAd,mCACA,+DACA,oCAEA,qBAAIA,UAAU,KAAd,iCACA,oDAAqB,0IAArB,OACA,uDAAwB,mKAAxB,OACA,gEAAiC,kFAAjC,OACA,oCAEA,qBAAIA,UAAU,KAAd,mCACA,uMACE,uBAAKA,UAAU,SAAf,UACE,8EAAiC,IAAjC,gCACA,yFAA4C,IAA5C,gCACA,yFACA,oEAA4B,IAA5B,gCACA,mGAGJ,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8EAA2B,yFAA3B,OACA,sEAAkC,sKAAlC,OACA,qCAEA,qBAAIA,UAAU,KAAd,gCACA,mFAAiB,sGAAjB,OACA,+IACE,uBAAKA,UAAU,SAAf,UACE,+KACA,uMAGJ,oCAGA,qBAAIA,UAAU,KAAd,6CACA,qCACA,oCAEA,qBAAIA,UAAU,KAAd,2CACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,oCACA,4CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,0EAAuB,iEAAvB,OACA,0JAAoE,iEAApE,OACA,qCAEA,qBAAIA,UAAU,KAAd,iCACA,uEAAwC,iKACxC,gFAA6B,oFAA7B,OACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,uBAAKA,UAAU,SAAf,UACE,0GACA,uBAAKA,UAAU,SAAf,UACE,+CACA,wLACA,+JACA,yDAEF,4FACA,uBAAKA,UAAU,SAAf,UACE,wGACA,sDACA,0CACA,kDACA,qKACA,4DAIJ,qBAAIA,UAAU,KAAd,mCACA,iFACE,kEACA,yFAEF,iFACE,uGACA,yDAEF,oCACA,oCAGA,qBAAIA,UAAU,KAAd,6CACA,iNAAmF,kGACnF,iPAC0B,oGAC1B,qCAEA,qBAAIA,UAAU,KAAd,2CACA,gEAAiC,kFAAjC,OACA,oGAA4C,8EAA5C,OACA,mDAAoB,sFAApB,OACA,qCAEA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,8KACA,qCACA,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAGE,qBAAIA,UAAU,KAAd,mCACA,gFACE,2EACE,kFACA,2FACA,yFACA,8FACA,8FACA,6GACA,8HACA,6OAEE,uBAAKA,UAAU,SAAf,UACE,qQACA,qQACA,sBAAKA,UAAU,SAAf,SACE,gDACE,0QACA,yOACA,oPACA,iSACA,iSAMV,yCAEF,qCAEA,qBAAIA,UAAU,KAAd,iCACA,iDAAkB,qKAAlB,OACA,+EAA4B,iGAA5B,OACA,mEAAgB,uEAAhB,OACA,8IACA,gMACA,2HAA+C,gEAA/C,OACA,yJAAyD,gEAAzD,OACA,4HAAgD,gEAAhD,OACA,6KAA8D,kIAA9D,OACA,yJACA,qGAAoC,IAApC,+BAAsD,IAAtD,UACA,qGAAoC,IAApC,8BAAqD,IAArD,UACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,qCACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,wEAAqB,kIAArB,OACA,kFAA+B,oJAA/B,OACA,qCAGA,qBAAIA,UAAU,KAAd,6CACA,qJAA0D,iGAA1D,OACA,qJAA0D,iGAA1D,OACA,qCAEA,qBAAIA,UAAU,KAAd,2CACA,qCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,4EAAyB,wLAAzB,QACA,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,kEACA,uBAAKA,UAAU,SAAf,UAGE,qBAAIA,UAAU,KAAd,mCACA,qCACA,oCAEA,qBAAIA,UAAU,KAAd,iCACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,mCACA,sHAAoD,yGAApD,OACA,oCAEA,qBAAIA,UAAU,KAAd,mCACA,oCACA,oCAGA,qBAAIA,UAAU,KAAd,6CACA,qCACA,oCAEA,qBAAIA,UAAU,KAAd,2CACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,oCACA,4CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,gDACA,uBAAKA,UAAU,SAAf,UAGE,qBAAIA,UAAU,KAAd,mCACA,qCACA,oCAEA,qBAAIA,UAAU,KAAd,iCACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,mCACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,mCACA,oCACA,oCAGA,qBAAIA,UAAU,KAAd,6CACA,qCACA,oCAEA,qBAAIA,UAAU,KAAd,2CACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCAEA,qBAAIA,UAAU,KAAd,6CACA,oCACA,4CAQN,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,mCACA,qCACA,oCACA,qBAAIA,UAAU,KAAd,iCACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,mCACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,mCACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,2CACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,6CACA,oCACA,4CAKN,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,mCACA,kJAAwC,gGAAxC,OACA,6MAA+E,2CAC/E,oCACA,qBAAIA,UAAU,KAAd,iCACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,mCACA,mKAAoD,qIAApD,OACA,4JAAkD,yIAClD,oCACA,qBAAIA,UAAU,KAAd,mCACA,iGAA+B,gGAA/B,OACA,mHAAuC,4GAAvC,OACA,yHAA6C,2HAC7C,oCACA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,2CACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,6CACA,oCACA,oCACA,qBAAIA,UAAU,KAAd,6CACA,oCACA,4CAKN,sBAAKA,UAAU,SAAf,SACE,qCACE,2EACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,wCACA,2CACA,qCACA,qCACA,qCACA,6CAQN,wBAAMA,UAAU,SAAhB,UAEE,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,cAAR,6BAA1B,OAEA,sBAAKJ,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,8CACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UAEE,sBAAKA,UAAU,UAAf,iGACA,uBAAKA,UAAU,SAAf,UACE,+ZAEA,obAEA,iNACA,wCAGF,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACE,oCACA,uCAGF,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,kEACA,mEACA,uFAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,uCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,6BACA,uBAAKA,UAAU,SAAf,UACE,iKACA,sGACA,oEACA,iJACE,6HAEF,wGACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,gCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,uEACA,yFACA,oEAGF,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,iIACA,uHACA,uEAGF,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,6CAAe,KAAf,iCACA,oCAAM,eAAN,OACA,oCAAM,QAAN,gIACA,uFACA,wGACA,gFACA,iGACA,2FACA,4GACA,kLACA,iMACA,wCAGF,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,0CAAY,KAAZ,OACA,yCAAW,KAAX,OACA,wCACA,4CACA,wCAGF,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,IAAN,SACE,4CAAc,IAAd,kBAEF,oCAAM,IAAN,YACA,oCAAM,IAAN,aACA,oCAAM,IAAN,aACA,oCAAM,KAAN,oBACA,oCAAM,KAAN,qBACA,wCAGF,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,iDACE,iJACA,iJACA,yOAEF,yCANF,IAMkB,wBAEhB,uFACA,2OACA,gPAGF,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,uEACA,wEACA,uEACA,uEACA,wEACA,uEACA,sBAAKA,UAAU,UAAf,2DACA,uBAAKA,UAAU,SAAf,UACE,gFACA,mIAEF,wHACA,4HACA,oHACA,0GACA,0GACA,kGACA,qFACA,wEACA,wGACA,yIACA,oCAAM,MAAN,sDACA,oCAAM,QAAN,mFAGF,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACE,qCACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,kCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UAGE,sBAAKA,UAAU,UAAf,oBACA,uBAAKA,UAAU,SAAf,UACE,8EAA+C,4FAA/C,OACA,4FACA,+IACA,0LAEA,8LACA,wEACA,4DAA6B,kGAA7B,OACA,wCAGF,sBAAKA,UAAU,UAAf,oBACA,uBAAKA,UAAU,SAAf,UACE,sFACA,wCAGF,sBAAKA,UAAU,UAAf,mBACA,uBAAKA,UAAU,SAAf,UACE,sGAAuE,wGAAvE,OACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,kDACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,+DACA,+KACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,sXAEA,ySACE,sBAAKA,UAAU,SAAf,SACE,4IAGJ,+FACE,+LACA,yDAEF,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,+TAEA,qMAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,8LACA,sOACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,uCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,6DACA,yNACA,gDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,iCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,0DACA,4IACA,wCAGF,sBAAKA,UAAU,UAAf,qBACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,uBAAMA,UAAU,QAAhB,0EAAL,QACA,gGACE,uBAAKA,UAAU,SAAf,UACE,uHACA,mFACA,iGACA,oKACA,qEACA,0DACA,4DAGJ,wIACA,kGACA,2HACA,kIACA,0KACA,oNACA,qCACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,0GACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,+CACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,iEACA,+LACA,wCAGF,sBAAKA,UAAU,UAAf,sBACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAGF,sBAAKA,UAAU,UAAf,wBACA,uBAAKA,UAAU,SAAf,UACE,qCACA,wCAGF,sBAAKA,UAAU,UAAf,yBACA,uBAAKA,UAAU,SAAf,UACE,qCACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,kBACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,+CACA,uBAAKA,UAAU,SAAf,UACE,gJACA,sBAAKA,UAAU,UAAf,6CACA,iNACA,2MACA,sBAAKA,UAAU,UAAf,+CACA,yMACA,uKAGF,sBAAKA,UAAU,UAAf,sCACA,uBAAKA,UAAU,SAAf,UACE,yPACA,gIACA,sKACA,yPACA,iIACA,uKACA,wCAGF,sBAAKA,UAAU,UAAf,qBACA,uBAAKA,UAAU,SAAf,UACE,6SACA,+SACA,qCACA,wCAGF,sBAAKA,UAAU,UAAf,yBACA,uBAAKA,UAAU,SAAf,UACE,qKACA,kJACA,qCACA,gDAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,gCACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,mKACA,oEACE,uBAAKA,UAAU,SAAf,UACE,+EACA,gIACA,gKACA,kKACA,wEACA,yFACA,yKACA,qFACA,mHACA,8IACA,8HACA,+GACA,kGACA,8CAIN,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACE,gJACA,iIACA,iIACA,6EACA,uDC16BDgK,GAzDY,SAACjK,GAExB,OACI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,kFACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,gJACA,6JACA,sMACA,kHACA,+IACA,oGACA,kMACA,+HACA,wGACA,uHACA,mJACA,2MACA,wIACA,iDAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,sFACA,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,sDACA,kFACA,qFACA,qFACA,+EACA,4FACA,8FACA,kGACA,uDACA,8DACA,uDACA,kEACA,+DACA,gJACA,8HACA,kGCsCTiK,GAvFM,SAAClK,GAClB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,8BACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,yCAAyC,wCACrC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gHACA,6IACA,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,6CAKZ,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,8BAAwC,wCACpC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,+BACA,qCACA,uBAAMA,UAAU,UAAhB,yCACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,6CAKZ,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,sBAAgC,wCAC5B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,6CAKZ,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,sBAAgC,wCAC5B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,6CAKZ,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,sBAAgC,wCAC5B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,qCACA,uBAAMA,UAAU,UAAhB,gBACA,uDCMrBkK,GAjFC,SAACnK,GAEb,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,8BACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,gDACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,qCAAM,sBAAKA,UAAU,UAAf,uFACF,uBAAKA,UAAU,SAAf,UACI,wIACA,sIAGR,oCAAK,sBAAKA,UAAU,UAAf,8GACD,uBAAKA,UAAU,SAAf,UACI,kKACA,yJAGR,oCAAK,sBAAKA,UAAU,UAAf,mFACD,uBAAKA,UAAU,SAAf,UACI,yHACA,sOAGR,oCAAK,sBAAKA,UAAU,UAAf,uIACD,uBAAKA,UAAU,SAAf,UACI,4GACA,kNAGR,oCAAK,sBAAKA,UAAU,UAAf,8FACD,uBAAKA,UAAU,SAAf,UACI,+PACA,6GAIR,oCAAK,sBAAKA,UAAU,UAAf,uHACD,uBAAKA,UAAU,SAAf,UACI,kPACA,+KAIR,oCAAK,sBAAKA,UAAU,UAAf,gBACD,uBAAKA,UAAU,SAAf,UACI,mDACA,iEAOpB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,mCACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,yDCczBmK,GAlFC,SAACpK,GAEb,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,8BACI,wBAAMA,UAAU,SAAhB,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,mDACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAU,UAAf,yEACA,uBAAKA,UAAU,SAAf,UACI,wDACI,8FACA,uEACA,0EACA,wEACA,yEACA,yEACA,qEACA,qEACA,oEACA,yEACA,qEAEJ,kDAMhB,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,6CACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACI,uDACI,6FACA,oEACA,8DACA,qEACA,kEACA,yEACA,sEACA,wEACA,qEACA,gEACA,iEACA,sEAEJ,kDAMhB,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,6CACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAU,UAAf,gBACA,uBAAKA,UAAU,SAAf,UACI,qCACA,0DCpBzBoK,GAjDD,SAACrK,GAKX,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,SAAf,SACI,qCACI,2BAASA,UAAU,SAAnB,UACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,uBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACI,gEACA,wCAEJ,sBAAKA,UAAU,UAAf,sDACA,uBAAKA,UAAU,SAAf,UACI,mEACA,oFACA,qDACA,qCACA,6LACA,0MACA,sEACA,6DACA,sEACA,qCACA,wCAEJ,sBAAKA,UAAU,UAAf,4BACA,uBAAKA,UAAU,SAAf,UACI,qCACA,uDCgCrBqK,GApEA,SAACtK,GAEZ,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,iCAAsC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,0JACA,uBAAMA,UAAU,SAAhB,SACI,gQAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,uCAAuC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,wBAAMN,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,qBACA,wBAAMA,UAAU,SAAhB,UACI,gQACA,wCAGJ,uBAAMA,UAAU,UAAhB,0BACA,uBAAMA,UAAU,SAAhB,SACI,gTAIJ,uBAAMA,UAAU,UAAhB,oBACA,uBAAMA,UAAU,SAAhB,SACI,8LAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,mDAAyC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAzC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,SACI,qBAAIA,UAAU,SAAd,uMAEJ,uBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,SACI,qBAAIA,UAAU,QAAd,oTCUrBsK,GAjED,SAACvK,GAEX,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,gCAAqC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAArC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,oFACA,wBAAMA,UAAU,SAAhB,UACI,iLACA,0OACA,gDAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,sCAAsC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,qBACA,uBAAMA,UAAU,SAAhB,SACI,kMAEJ,uBAAMA,UAAU,UAAhB,oBACA,uBAAMA,UAAU,SAAhB,SACI,6HAEJ,uBAAMA,UAAU,UAAhB,yBACA,uBAAMA,UAAU,SAAhB,SACI,kOAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,4CAAuC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,SACI,qBAAIA,UAAU,SAAd,kLAEJ,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,QAAd,8HACA,qBAAIA,UAAU,QAAd,yKACA,qBAAIA,UAAU,QAAd,mCCUrBuK,GA/DA,SAACxK,GAEZ,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,iCAAsC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,oFACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,uCAAuC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,qBACA,uBAAMA,UAAU,SAAhB,SACI,mMAEJ,uBAAMA,UAAU,UAAhB,oBACA,uBAAMA,UAAU,SAAhB,SACI,6HAEJ,uBAAMA,UAAU,UAAhB,yBACA,wBAAMA,UAAU,SAAhB,UACI,wNACA,wZAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,6CAAwC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAxC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,SACI,qBAAIA,UAAU,SAAd,kBAEJ,uBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,SACI,qBAAIA,UAAU,QAAd,6MC6FrBwK,GAhJD,SAACzK,GACX,OACI,sBAAKC,UAAU,eAAf,SAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,yEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,qEACA,+EACA,uBAAKA,UAAU,SAAf,UACI,qHACA,2MACA,4JACA,qFAEJ,uEACA,uBAAKA,UAAU,SAAf,UACI,yOACA,wHAEJ,8EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,sFACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,0FACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAGJ,qBAAIA,UAAU,KAAd,qEACA,6EACA,uBAAKA,UAAU,SAAf,UACI,kOACA,kIACA,wCAEJ,6EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,qFACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,2FACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,4EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,iGACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,2EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,qBAAIA,UAAU,KAAd,sEACA,oGACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,6EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,6FACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,0FACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,8EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,6EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,8EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,qEACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,wGACA,uBAAKA,UAAU,SAAf,UACI,gJACA,uOACA,gSAEA,8TAGJ,yGACA,uBAAKA,UAAU,SAAf,UACI,qCACA,wCAEJ,6EACA,uBAAKA,UAAU,SAAf,UACI,qCACA,mDCvDbyK,GA9EO,SAAC1K,GACnB,OACI,qCACI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,mEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,gEACA,sVACA,6EACA,8GAEA,qBAAIA,UAAU,KAAd,sDACA,qSACA,gPACA,kUACA,sIAEA,qBAAIA,UAAU,KAAd,6DACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,6BACA,6CAOZ,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,kEAAyC,oBAAGI,KAAK,+CAAYC,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACI,oCAAK,oBAAGC,KAAK,iCAAiCC,OAAO,SAAhD,+DAAL,OACA,+MACA,oCAAK,oBAAGD,KAAK,iCAAiCC,OAAO,SAAhD,gBAAL,UAGJ,uBAAMF,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,wDC6DrB0K,GA/HK,SAAC3K,GAEjB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,yBAAmC,oBAAGI,KAAK,MAAMC,MAAO,CAAEC,WAAY,UAAnC,mBAAnC,OACA,oIAFJ,IAEsD,wBAClD,oBAAGL,KAAK,kBAAkBC,OAAO,SAAjC,+BAHJ,2DAII,wBAAMF,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,+DACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,mFAAyE,oBAAGI,KAAK,+DAA2CC,MAAO,CAAEC,WAAY,UAAxE,4EAAzE,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,sBACA,wBAAMA,UAAU,SAAhB,UACI,qJACA,wCAGJ,uBAAMA,UAAU,UAAhB,uBACA,wBAAMA,UAAU,SAAhB,UACI,gJACA,6GACA,+RAEA,4KACA,sGACA,uCAAS,IAAT,OAPJ,IAO2B,wBACvB,kEARJ,IAQgD,wBAC5C,kEATJ,IASgD,wBAC5C,4DAVJ,IAU0C,wBACtC,wCAXJ,IAWsB,wBAClB,uCAAS,IAAT,OAZJ,IAY2B,2BAG3B,uBAAMA,UAAU,UAAhB,yBACA,wBAAMA,UAAU,SAAhB,UACI,0IACA,oCAAM,gBAAN,OACA,sBAAIA,UAAU,QAAd,cAAwB,oCAAxB,OACA,sBAAIA,UAAU,QAAd,cAAwB,8BAAxB,OACA,sBAAIA,UAAU,QAAd,cAAwB,YAAxB,OACA,gDAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,gEAA4C,oBAAGI,KAAK,6CAAeC,MAAO,CAAEC,WAAY,UAA5C,0DAA5C,OACA,uBAAMN,UAAU,SAAhB,SACI,gCACI,0GACA,0GACA,wZAEA,yNACA,iNACA,8MACA,+KAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,kDAAwC,oBAAGI,KAAK,+BAAWC,MAAO,CAAEC,WAAY,UAAxC,4CAAxC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACI,4QACA,qJACA,mGACA,wLAGJ,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACI,qRACA,oKACA,gDAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDCrErB2K,GA9CM,SAAC5K,GAElB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,gEAA4C,oBAAGI,KAAK,6CAAeC,MAAO,CAAEC,WAAY,UAA5C,0DAA5C,OACA,0KAFJ,IAEuF,wBACnF,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gCACA,wBAAMA,UAAU,SAAhB,UACI,4QACA,4NAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDCuFrB4K,GAzHM,SAAC7K,GAElB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,iCAAsC,oBAAGI,KAAK,cAASC,MAAO,CAAEC,WAAY,UAAtC,2BAAtC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,uCACA,uBAAMA,UAAU,SAAhB,SACI,2QAGJ,uBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,SACI,0RAGJ,uBAAMA,UAAU,UAAhB,oDACA,wBAAMA,UAAU,SAAhB,UACI,uQACA,iHACA,qBAAIA,UAAU,QAAd,oVAIJ,uBAAMA,UAAU,UAAhB,oDACA,uBAAMA,UAAU,SAAhB,SACI,+LAGJ,uBAAMA,UAAU,UAAhB,oFACA,wBAAMA,UAAU,SAAhB,UACI,+OACA,mQACA,sMACA,wIAGJ,uBAAMA,UAAU,UAAhB,kGACA,wBAAMA,UAAU,SAAhB,UACI,0FACA,+EAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,kEAAyC,oBAAGI,KAAK,+CAAYC,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,kGACA,wBAAMA,UAAU,SAAhB,UACI,sdAEA,6aAEA,qQACA,0MACA,wCAGJ,uBAAMA,UAAU,UAAhB,iDACA,uBAAMA,UAAU,SAAhB,SACI,+PAGJ,uBAAMA,UAAU,UAAhB,sBACA,8EACA,wBAAMA,UAAU,SAAhB,UACI,oMACA,qOACA,kLAGJ,uBAAMA,UAAU,UAAhB,sBACA,wBAAMA,UAAU,SAAhB,UACI,sHACA,4QACA,qHACA,wCAGJ,uBAAMA,UAAU,UAAhB,sBACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDC7DrB6K,GAhDY,SAAC9K,GACxB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,yCAAoC,oBAAGI,KAAK,eAAKC,MAAO,CAAEC,WAAY,UAAlC,4BAApC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,qKACA,wBAAMA,UAAU,SAAhB,UACI,sIACA,kJACA,oIACA,oIACA,2PACA,6LACA,2JACA,2FACA,wEACA,kYAEA,6JACA,gDAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDCkIrB8K,GAtKe,SAAC/K,GAE3B,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,kEAAyC,oBAAGI,KAAK,+CAAYC,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,4DACA,wBAAMA,UAAU,SAAhB,UACI,mQACA,wSACA,iLACA,gDAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,wEAA0C,oBAAGI,KAAK,qDAAaC,MAAO,CAAEC,WAAY,UAA1C,kEAA1C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,sNACA,uBAAMA,UAAU,SAAhB,SACI,+FAGJ,uBAAMA,UAAU,UAAhB,wCACA,uBAAMA,UAAU,SAAhB,SACI,kGAGJ,uBAAMA,UAAU,UAAhB,oDACA,uBAAMA,UAAU,SAAhB,SACI,sSAIJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,uEAA8C,oBAAGI,KAAK,oDAAiBC,MAAO,CAAEC,WAAY,UAA9C,iEAA9C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,4KACA,wBAAMA,UAAU,SAAhB,UACI,gJACA,4OAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,iDAA2D,oBAAGI,KAAK,yBAAyBC,MAAO,CAAEC,WAAY,UAAtD,sCAA3D,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,mNACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,8EAAwF,oBAAGI,KAAK,oBAAoBC,MAAO,CAAEC,WAAY,UAAjD,iCAAxF,OACA,gFACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,yNACA,wBAAMA,UAAU,SAAhB,UACI,qVACA,mSACA,ohBAEA,2oCAIA,gDAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,4BAAsC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,uMACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,kEAAyC,oBAAGI,KAAK,+CAAYC,MAAO,CAAEC,WAAY,UAAzC,4DAAzC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,+NACA,uBAAMA,UAAU,SAAhB,SACI,yJAEJ,uBAAMA,UAAU,UAAhB,wBACA,wBAAMA,UAAU,SAAhB,UACI,uHACA,wCAEJ,uBAAMA,UAAU,UAAhB,yBACA,wBAAMA,UAAU,SAAhB,UACI,qCACA,wCAEJ,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACI,qCACA,wCAEJ,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACI,qCACA,gDAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDC9GrB+K,GA5CY,SAAChL,GACxB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,wCAA6C,oBAAGI,KAAK,qBAAgBC,MAAO,CAAEC,WAAY,UAA7C,kCAA7C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,+RAEA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDC4RrBgL,GA5TM,SAACjL,GAElB,OACI,qCACI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,yEACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,qRACA,yQACA,sCAEA,qBAAIA,UAAU,KAAd,gFACA,wKACA,yQACA,sIACA,4KACA,0CACA,wCACA,wCAEA,qBAAIA,UAAU,KAAd,yHACA,6HACA,8LACA,wQACA,uBAAKA,UAAU,SAAf,UACI,6IACA,6QAEJ,wFACA,uBAAKA,UAAU,SAAf,UACI,yFACA,2LAEJ,8JACA,uBAAKA,UAAU,SAAf,UACI,6SACA,4PAGJ,qBAAIA,UAAU,KAAd,+EACA,8FACA,+SACA,uYAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,sFACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,4DACA,4OAEA,qBAAIA,UAAU,KAAd,sCACA,yKAEA,qBAAIA,UAAU,KAAd,4EACA,qIACA,+SACA,qMACA,6KAEA,qBAAIA,UAAU,KAAd,kEACA,2FACA,+GACA,6HAEA,qBAAIA,UAAU,KAAd,6BACA,qCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,qDASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,qDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,gCACA,ogBAE0B,wBAF1B,gIAIA,qBAAIA,UAAU,KAAd,+BACA,oUACI,wBADJ,8HAGA,qBAAIA,UAAU,KAAd,iCACA,4UACI,wBADJ,iTAGA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,qDASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,8CACA,uBAAKA,UAAU,SAAf,UAEI,8DACA,8OACA,gPACA,6eACI,uBAAKA,UAAU,SAAf,UACI,kDACA,6GACA,2GACA,+FAGR,gHACA,4IACA,0HACA,qbAGA,8DACA,oOACA,4SACA,yKAA2C,iLAA3C,QAEA,4IACA,sIACA,2IACA,2JACI,uBAAKA,UAAU,SAAf,UACI,uZACA,0LAGR,mDACA,qCAEA,sEACA,wEACA,mGACA,kFACA,uLACA,0GACA,kDAAmB,6MAAnB,OACA,qCAEA,sEACA,wEACA,qGACA,kFACA,uLACA,4GACA,2HACA,qCAEA,sEACA,yEACA,uGACA,kFACA,uLACA,8GAEA,sEACA,yEACA,mGACA,kFACA,uLACA,mGAEA,sEACA,yEACA,mGACA,kFACA,uLACA,mHAKZ,sBAAKA,UAAU,SAAf,SACI,qCACI,oDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,oNACA,4QACA,wWACA,iRAEA,qBAAIA,UAAU,KAAd,sDACA,8HACA,6MACA,8JAOZ,sBAAKA,UAAU,SAAf,SACI,qCACI,8DACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,mCACA,2QAEA,qBAAIA,UAAU,KAAd,gDACA,qCAEA,qBAAIA,UAAU,KAAd,4DACA,4IACA,+RAEA,qBAAIA,UAAU,KAAd,gDACA,6CAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,wDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,sCACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,uDACA,mDACA,mDAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,qDASxB,sBAAKA,UAAU,SAAf,SACI,qCACI,wDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,oIAEA,qBAAIA,UAAU,KAAd,yCACA,0FAAmB,wBAAnB,0LACA,0FAAmB,wBAAnB,6JACA,+EAAkB,wBAAlB,mEACA,0FAAmB,wBAAnB,qJATJ,IAS8E,wBAC1E,0FAAmB,wBAAnB,uFACA,4DAAc,wBAAd,4BAXJ,IAW0C,wBACtC,4SAEA,qBAAIA,UAAU,KAAd,mCACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACI,2DC1NzBiL,GApFQ,SAAClL,GAEpB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qDAAsC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,wBAAMN,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,wBACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,uBACA,0DACA,wBAAMA,UAAU,SAAhB,UACI,6XACA,8GACA,kLACA,uNACA,sBAAIA,UAAU,SAAd,eAAyB,uBAAMA,UAAU,UAAhB,0DACrB,sFACA,uGACA,mIACA,wIACA,yIACA,4MACA,2JACA,0EAEJ,sBAAIA,UAAU,SAAd,eAAyB,uBAAMA,UAAU,UAAhB,uDACrB,yFACA,uJACA,8HACA,iKAAmC,kMAAnC,QACA,4FACA,6NACA,mKACA,wJACA,2PACA,qHACA,2HACA,+IACA,+JACA,gKACA,+LACA,2CAEJ,sBAAIA,UAAU,SAAd,eAAyB,uBAAMA,UAAU,UAAhB,sDACrB,8CAIR,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDCwDrBkL,GAhIY,SAACnL,GAC1B,OACE,qCACE,sBAAKC,UAAU,eAAf,SACE,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,+DAA2C,oBAAGI,KAAK,4CAAcC,MAAO,CAAEC,WAAY,UAA3C,yDAA3C,OACA,mEACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,qIACA,wBAAMA,UAAU,SAAhB,UACE,yNACA,6JACA,uHACA,gNACA,mMAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,kDAAwC,oBAAGI,KAAK,+BAAWC,MAAO,CAAEC,WAAY,UAAxC,4CAAxC,OACA,wBAAMN,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,kEACA,uBAAMA,UAAU,SAAhB,SACE,gCACE,+PACA,0OACA,+LACA,gKACA,0CAIJ,uBAAMA,UAAU,UAAhB,kEACA,wBAAMA,UAAU,SAAhB,UACE,qCACA,gDAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,mDAAyC,oBAAGI,KAAK,gCAAYC,MAAO,CAAEC,WAAY,UAAzC,6CAAzC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,wBAAO8E,OAAO,IAAIhD,MAAM,MAAxB,SACE,mCACE,gCACE,qBAAIiD,QAAQ,IAAZ,iCACA,qBAAIA,QAAQ,IAAZ,oCAEF,gCACE,qBAAIA,QAAQ,IAAZ,uCACA,qBAAIA,QAAQ,IAAZ,uCACA,qBAAIA,QAAQ,IAAZ,qCAEF,8BACE,qBAAIA,QAAQ,IAAZ,2CAEF,8BACE,qBAAIA,QAAQ,IAAZ,2CAEF,8BACE,qBAAIA,QAAQ,IAAZ,gDAEF,8BACE,qBAAIA,QAAQ,IAAZ,qDAKN,uBAAM/E,UAAU,UAAhB,gBACA,mKACA,mJACA,uIACA,uJACA,qGAAmC,wBAAnC,oEACA,uGACA,uGACA,wIACA,sHAQR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uDCXHmL,GAzGU,SAACpL,GAGtB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,iCAA2C,oBAAGI,KAAK,cAAcC,MAAO,CAAEC,WAAY,UAA3C,4BAA3C,OACA,uOACA,wBAAMN,UAAU,SAAhB,UAEI,qCACI,2BAASA,UAAU,UAAnB,2EAAwD,oBAAGI,KAAK,yDAA2BC,MAAO,CAAEC,WAAY,UAAxD,sEAAxD,OACA,6GACA,wBAAMN,UAAU,SAAhB,UACI,mKACA,kIAIR,qCACI,2BAASA,UAAU,UAAnB,6EAA0D,oBAAGI,KAAK,0DAA4BC,MAAO,CAAEC,WAAY,UAAzD,uEAA1D,OACA,gIACA,wBAAMN,UAAU,SAAhB,UACI,+RACA,4HACA,2CAIR,qCACI,2BAASA,UAAU,UAAnB,wEAAqD,oBAAGI,KAAK,qDAAuBC,MAAO,CAAEC,WAAY,UAApD,kEAArD,OACA,wHACA,uBAAMN,UAAU,SAAhB,SACI,wLAIR,qCACI,2BAASA,UAAU,UAAnB,0EAAuD,oBAAGI,KAAK,uDAAyBC,MAAO,CAAEC,WAAY,UAAtD,oEAAvD,OACA,sQACA,wBAAMN,UAAU,SAAhB,UACI,oHACA,+IACA,yEACA,2CAIR,qCACI,2BAASA,UAAU,UAAnB,oFAAuD,oBAAGI,KAAK,iEAAyBC,MAAO,CAAEC,WAAY,UAAtD,8EAAvD,OACA,mHACA,wBAAMN,UAAU,SAAhB,UACI,+QACA,6FACA,2CAIR,qCACI,2BAASA,UAAU,UAAnB,4FAA0D,oBAAGI,KAAK,yEAA4BC,MAAO,CAAEC,WAAY,UAAzD,sFAA1D,OACA,4GACA,wBAAMN,UAAU,SAAhB,UACI,4NACA,0IACA,qCACA,2CAIR,qCACI,2BAASA,UAAU,UAAnB,yEAAsD,oBAAGI,KAAK,sDAAwBC,MAAO,CAAEC,WAAY,UAArD,mEAAtD,OACA,8GACA,wBAAMN,UAAU,SAAhB,UACI,uOACA,8GACA,mDAQpB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDCtCrBoL,GAvDkB,SAACrL,GAC9B,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,2CAAgD,oBAAGI,KAAK,wBAAmBC,MAAO,CAAEC,WAAY,UAAhD,qCAAhD,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,+PACA,uBAAMA,UAAU,SAAhB,SACI,iQAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,8DAAoD,oBAAGI,KAAK,2CAAuBC,MAAO,CAAEC,WAAY,UAApD,wDAApD,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACI,0FAAmB,wBAAnB,sKACA,8DAAgB,wBAAhB,6LACA,0FAAmB,wBAAnB,gFACA,0FAAmB,wBAAnB,iHAJJ,IAIwE,wBACpE,6DAAe,wBAAf,kDALJ,IAKkD,wBAC9C,2CACA,+GACA,qEAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDClBrBqL,GAzBO,SAACtL,GAEnB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,uBAAMA,UAAU,SAAhB,SAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,sDC4HrBsL,GAzIU,SAACvL,GAEtB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,4CAA4C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA5C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,sCAA2C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA3C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,sEACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,kDAA6C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA7C,OACA,wBAAMN,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,kBACA,0FACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,oBACA,0FACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,sBACA,oFACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,2BACA,8EACA,uBAAMA,UAAU,SAAhB,SACI,sCAGJ,uBAAMA,UAAU,UAAhB,wBACA,6EACA,wBAAMA,UAAU,SAAhB,UACI,qCACA,wCAGJ,uBAAMA,UAAU,UAAhB,sBACA,uEACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,oBACA,iEACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qFAA6C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA7C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,mLACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,4CAA4C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA5C,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,kDAAwC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAxC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,sBAAgC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uDCoDrBuL,GAjLS,SAACxL,GAEvB,OACE,qCAEE,sBAAKC,UAAU,eAAf,SACE,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,UAAnB,qBAAgC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,uBAAMN,UAAU,SAAhB,SACE,2CAKN,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,UAAnB,yBAAoC,oBAAGI,KAAK,MAAMC,MAAO,CAAEC,WAAY,UAAnC,mBAApC,OACA,wBAAMN,UAAU,SAAhB,UACE,qIACA,sFACA,+JACA,mEACE,wBAAMA,UAAU,SAAhB,UACE,oEACA,0EACA,mEAIJ,oDACE,wBAAMA,UAAU,SAAhB,UACE,qKACA,0RAIJ,oDACE,wBAAMA,UAAU,SAAhB,UACE,mKACA,wKACA,+MACA,uKACA,8NACA,mLACA,mMACA,2MACA,uMAIJ,sFACE,wBAAMA,UAAU,SAAhB,UACE,sKACA,6GACA,0HACA,yIACA,iJAIJ,8BACE,uBAAMA,UAAU,SAAhB,SACE,iDAQV,uBAAMA,UAAU,SAAhB,yCAEA,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,UAAnB,wEAAgD,oBAAGI,KAAK,MAAMC,MAAO,CAAEC,WAAY,UAAnC,mBAAhD,OACA,oDACA,wBAAMN,UAAU,SAAhB,UACE,8LACA,uRACA,mGACA,4DACA,qCAEA,oDACE,wBAAMA,UAAU,SAAhB,UACE,wKACA,mJACA,uaAEA,oMACA,+UAEA,kHAIJ,kHACE,wBAAMA,UAAU,SAAhB,UACE,4DACA,6KACA,oFACA,yHACA,qMACA,sMACA,uCACA,6CAIJ,8BACE,uBAAMA,UAAU,SAAhB,SACE,iDAQV,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,UAAnB,2EAAmD,oBAAGI,KAAK,SAASC,MAAO,CAAEC,WAAY,UAAtC,sBAAnD,OACA,uBAAMN,UAAU,SAAhB,SACE,2CAKN,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,UAAnB,0EAAkD,oBAAGI,KAAK,SAASC,MAAO,CAAEC,WAAY,UAAtC,sBAAlD,OACA,uBAAMN,UAAU,SAAhB,SACE,2CAKN,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,UAAnB,6GAAuD,oBAAGI,KAAK,MAAMC,MAAO,CAAEC,WAAY,UAAnC,mBAAvD,OACA,wBAAMN,UAAU,SAAhB,UACE,kMACA,6DACA,kRACA,oPACA,6CAKN,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,UAAnB,qBAAgC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,uBAAMN,UAAU,SAAhB,SACE,2CAKN,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,UAAnB,qBAAgC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,uBAAMN,UAAU,SAAhB,SACE,mDC5HDwL,GA1CgB,SAACzL,GAI5B,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,8BACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,yDCFzByL,GA3BkB,SAAC1L,GAE9B,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,8BACI,uBAAMA,UAAU,SAAhB,SAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,wDCazB0L,GA3BW,SAAC3L,GAEvB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,8BACI,uBAAMA,UAAU,SAAhB,SAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,wDCoOzB2L,GAlPS,SAAC5L,GAMrB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,8BACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,0BAASA,UAAU,SAAnB,0FACA,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACI,8OACA,gHACA,0EACA,yIAGJ,uBAAMA,UAAU,UAAhB,kCACA,wBAAMA,UAAU,SAAhB,UACI,sBAAIA,UAAU,SAAd,0BACI,iLACA,uKACA,mGACA,kKAEJ,sBAAIA,UAAU,QAAd,0BACI,gNACA,2LACA,2CAIR,uBAAMA,UAAU,UAAhB,0EACA,wBAAMA,UAAU,SAAhB,UACI,8HAA8B,qCAA9B,QACA,2LAGJ,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACI,qCACI,0BAASA,UAAU,UAAnB,2BACA,wBAAMA,UAAU,SAAhB,UACI,oCAAK,uBAAMA,UAAU,UAAhB,iFAAL,OACA,oCAAM,gBAAN,OACA,gEACA,uDAAyB,IACrB,gEACA,mDAAqB,KAArB,WAAmC,IAC/B,qDAAuB,KAAvB,uBAAiD,IAC7C,qDACA,kDAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,aAIR,qCACI,0BAASA,UAAU,UAAnB,wBACA,wBAAMA,UAAU,SAAhB,UACI,oCAAK,uBAAMA,UAAU,UAAhB,iFAAL,OACA,8DAAgC,IAC5B,8DACA,8DACA,kDAAoB,KAApB,gBACI,4DAA8B,KAA9B,8BACK,KADL,8BACsC,IAClC,qDAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,OACA,wDACI,6DAGR,oCAAM,IAAN,UAGJ,wBAAMA,UAAU,SAAhB,UACI,oCAAK,uBAAMA,UAAU,UAAhB,qHAAL,OACA,8DAAgC,IAC5B,8DACA,8DACA,kDAAoB,IAApB,8BAAoD,IAChD,sEACA,qEAAuC,KAAvC,uCAAiF,IAC7E,2DAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,OACA,wDACI,6DAGR,oCAAM,IAAN,aAIR,qCACI,0BAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,qCACI,0BAASA,UAAU,UAAnB,6BACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,qCACI,0BAASA,UAAU,UAAnB,uBACA,uBAAMA,UAAU,SAAhB,SACI,qDAUxB,uBAAMA,UAAU,SAAhB,SACI,qCACI,0BAASA,UAAU,SAAnB,mDACA,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,0BAASA,UAAU,SAAnB,wGACA,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,0BAASA,UAAU,SAAnB,kEACA,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,0BAASA,UAAU,SAAnB,yEACA,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,0BAASA,UAAU,SAAnB,+CACA,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,yDCrLzB4L,GA/CU,SAAC7L,GAGtB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,8BACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,gEACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACI,mKACA,wCAEJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,yDCNzB6L,GA5BQ,SAAC9L,GAEpB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,8BACI,uBAAMA,UAAU,SAAhB,SAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,wDCezB8L,GA9Ba,SAAC/L,GAIzB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,8BACI,uBAAMA,UAAU,SAAhB,SAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,wDCYzB+L,GA7BU,SAAChM,GAItB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,8BACI,uBAAMA,UAAU,SAAhB,SAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,wDC4NzBgM,GA5OQ,SAACjM,GAMpB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,8BACI,wBAAMA,UAAU,SAAhB,UAEI,wBAAMA,UAAU,SAAhB,UACI,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,wCAAR,qDAA1B,OACA,wBAAMJ,UAAU,SAAhB,UACI,qCACI,0BAASA,UAAU,UAAnB,6DACA,wBAAMA,UAAU,SAAhB,UACI,4JACA,wHACA,qIACA,wEAAgB,qCAAhB,OACA,8DACA,wBAAMA,UAAU,SAAhB,UACI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,6DACA,wBAAMA,UAAU,SAAhB,UACI,qKACA,+GACA,gLACA,wEAAgB,yBAAhB,OACA,8DACA,wBAAMA,UAAU,SAAhB,UAEI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,iEACA,wBAAMA,UAAU,SAAhB,UACI,gNACA,kFACA,4EACA,wEAAgB,qCAAhB,OACA,8DACA,wBAAMA,UAAU,SAAhB,UACI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,+GACA,wBAAMA,UAAU,SAAhB,UACI,4PACA,oIACA,qFAAmB,qCAAnB,mHACA,wEAAgB,yBAAhB,UAAkC,qCAAlC,OACA,8DACA,wBAAMA,UAAU,SAAhB,UACI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,6DACA,wBAAMA,UAAU,SAAhB,UACI,mKACA,mFACA,wFACA,wEAAgB,qCAAhB,OACA,8DACA,wBAAMA,UAAU,SAAhB,UAEI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,sDACA,wBAAMA,UAAU,SAAhB,UACI,kLACA,kFACA,+JACA,mFAA2B,qCAA3B,OACA,8DACA,wBAAMA,UAAU,SAAhB,UAEI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,mEACA,wBAAMA,UAAU,SAAhB,UACI,wFACA,mFACA,mDACA,6EACA,8DACA,wBAAMA,UAAU,SAAhB,UAEI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,0EACA,wBAAMA,UAAU,SAAhB,UACI,qKACA,kFACA,wHACA,6EACA,8DACA,wBAAMA,UAAU,SAAhB,UAEI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,0CACA,wBAAMA,UAAU,SAAhB,UACI,mDACA,4IACA,sGACA,+EAAuB,2CAAvB,WAAiD,qCAAjD,OACA,8DACA,wBAAMA,UAAU,SAAhB,UAEI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,gDACA,wBAAMA,UAAU,SAAhB,UACI,mDACA,+FACA,iMACA,wEAAgB,yBAAhB,OACA,8DACA,wBAAMA,UAAU,SAAhB,UAEI,qCACA,8CAKZ,qCACI,0BAASA,UAAU,UAAnB,sDACA,wBAAMA,UAAU,SAAhB,UACI,wNACA,+FACA,mLACA,wEAAgB,yBAAhB,OACA,8DACA,wBAAMA,UAAU,SAAhB,UACI,qCACA,oDAQpB,qCACI,0BAASA,UAAU,UAAnB,uBACA,wBAAMA,UAAU,SAAhB,UACI,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,GAAR,gBAA1B,OACA,wBAAMJ,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,gDAMhB,qCACI,0BAASA,UAAU,UAAnB,uBACA,wBAAMA,UAAU,SAAhB,UACI,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,GAAR,gBAA1B,OACA,wBAAMJ,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,gDAMhB,qCACI,0BAASA,UAAU,UAAnB,uBACA,wBAAMA,UAAU,SAAhB,UACI,wBAAMA,UAAU,SAAhB,cAA0B,oBAAGI,KAAK,GAAR,gBAA1B,OACA,wBAAMJ,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,0DCzKzBiM,GAtDS,SAAClM,GAKrB,OACI,qCAEI,sBAAKC,UAAU,eAAf,SACI,8BACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,8DACI,oBAAGI,KAAK,4CAAcC,MAAO,CAAEC,WAAY,UAA3C,yDADJ,OAEA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACI,kEACA,+FACA,2NAEJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,uCAEJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAMhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,yDCoNzBkM,GA7PE,SAACnM,GACjB,OACC,uBAAKC,UAAU,eAAf,UACC,sBAAKA,UAAU,SAAf,SACC,qCACC,iFACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,yCACA,2EACA,iHACA,wUACA,iNACA,uMAMH,sBAAKA,UAAU,SAAf,SACC,qCACC,kIACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,yCACA,wDAAqB,8KAArB,OACA,2JAEA,qBAAIA,UAAU,KAAd,sDACA,uBAAKA,UAAU,SAAf,UACC,oCAAM,4BAAN,OACA,qCAFD,IAEa,wBACZ,oCAAM,sBACL,oCAAM,sDAAN,OACA,oCAAM,KAAN,OAFD,IAEmB,wBAClB,oCAAM,sBACL,oCAAM,2DAAN,OACA,oCAAM,aAAN,UAED,oCAAM,MAAN,OACA,gGAED,oCAAM,SAAN,OACA,qCAdD,IAca,wBACZ,oCAAM,aACL,oCAAM,OACL,oCAAM,sEAAN,UAED,oCAAM,QAAN,UAED,oCAAM,MAAN,kBAOJ,sBAAKA,UAAU,SAAf,SACC,qCACC,iGACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,iGACA,+GACA,uLACA,iPAEA,qBAAIA,UAAU,KAAd,+CACA,8JACA,uBAAKA,UAAU,SAAf,UACC,+DACA,qCAFD,IAEa,wBACZ,oCAAM,gCACL,8EACA,kFACA,8EACA,sFACA,6EACA,qFACA,oCAAM,gCACL,oCAAM,iCAAN,OACA,oCAAM,6BAAN,UAED,oCAAM,MAAN,OACA,qCAZD,IAYa,wBACZ,oCAAM,sCACL,oCAAM,UACL,oCAAM,qBAAN,OACA,oCAAM,oBAAN,OACA,oCAAM,sBAAN,OACA,oCAAM,6DACL,oCAAM,QACL,oCAAM,cACL,oCAAM,iBAAN,OACA,oCAAM,eAAN,UAED,oCAAM,OAAN,OACA,oCAAM,eACL,oCAAM,mCAAN,OACA,oCAAM,0CAAN,UAED,oCAAM,MAAN,aAGF,oCAAM,QAAN,OACA,oCAAM,8BAAN,OACA,oCAAM,sBAAN,OACA,oCAAM,wCAAN,UAED,oCAAM,MAAN,OACA,oCAAM,gBACL,oCAAM,iBAAN,UAED,oCAAM,MAAN,OACA,oCAAM,uBAAN,UAED,oCAAM,MAAN,OACA,oCAAM,sBACL,oCAAM,kBAAN,UAED,oCAAM,YAAN,OACA,oCAAM,oDAAN,OACA,oCAAM,gDAAN,OACA,oCAAM,mFAAN,OACA,oCAAM,aAAN,OACA,oCAAM,OACL,oCAAM,2BACL,oCAAM,oCACL,oCAAM,6DAAN,OACA,oCAAM,0EAAN,OACA,oCAAM,kEAAN,OACA,oCAAM,0DAAN,OACA,oCAAM,qDAAN,OACA,oCAAM,qDAAN,OACA,oCAAM,0DAAN,OACA,oCAAM,oDAAN,UAED,oCAAM,iBAAN,UAED,oCAAM,QAAN,OACA,oCAAM,WACL,oCAAM,sCAAN,UAED,oCAAM,OAAN,OACA,oCAAM,qEAAN,UAED,oCAAM,QAAN,OACA,oCAAM,MAAN,UAED,oCAAM,IAAN,OACA,qEAGD,qBAAIA,UAAU,KAAd,6BACA,6CAOH,sBAAKA,UAAU,SAAf,SACC,qCACC,mFACA,uBAAKA,UAAU,SAAf,UAEC,qBAAIA,UAAU,KAAd,+DACA,oCAAK,oBAAGC,KAAK,qCAAqCC,OAAO,SAASC,IAAI,sBAAjE,kEAAL,OACA,oCAAK,oBAAGF,KAAK,qDAAqDC,OAAO,SAASC,IAAI,sBAAjF,mDAAL,OACA,uFACA,sFACA,iHACA,kHACA,6MAEA,qBAAIH,UAAU,KAAd,sDACA,sDACC,uBAAKA,UAAU,SAAf,UACC,qBAAIA,UAAU,KAAd,4CACA,6CACC,2CACC,2CACC,iDACC,0CACC,iFACA,wHACA,0CACC,4CACA,uDAED,uDACA,gJACA,qNAGF,6CACC,0CACC,gGAAiE,qHAAjE,OACA,mFAAoD,kGAApD,OACA,uFAAwD,6GAAxD,OACA,kEAAmC,+EAAnC,sBAvBN,IA4BO,wBAEN,oCAAK,qBAAIA,UAAU,KAAd,iCACJ,oCAAM,gJAAN,OACA,wQAhCF,IAiCO,wBAEN,oCAAK,qBAAIA,UAAU,KAAd,oDACJ,mHAAqF,IACpF,4IACC,4EACA,4GACA,qGACA,wJACA,2GACA,+EAGF,oCAAM,IAAN,UAGD,oCAAK,qBAAIA,UAAU,KAAd,oDACJ,uDACA,oDACA,8GAAgF,IAC/E,8CACA,iGAAmE,IAClE,mDACA,8DACA,yDACA,mKAED,oCAAM,IAAN,UAED,oCAAM,IAAN,4BC7JMmM,GAlFG,SAACpM,GACf,OACI,sBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,SACI,qCACI,6EACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,gEACA,uCAAQ,oBAAGC,KAAK,oCAAoCC,OAAO,SAASC,IAAI,sBAAhE,mDAAR,OACA,4GACA,8KACA,sKACA,uIACA,+gBAIA,qBAAIH,UAAU,KAAd,sDACA,8BACI,uBAAKA,UAAU,SAASK,MAAO,CAAEU,UAAW,QAA5C,UACI,qBAAIf,UAAU,KAAd,4CACA,6CACI,2CACI,2CACI,iDACI,2CACI,iFACA,wHACA,0CACI,4CACA,gEAX5B,IAiBU,wBAEN,qBAAIA,UAAU,KAAd,8CACA,oCAAM,+EACF,yNADJ,OAEA,oCAtBJ,IAsBe,wBAEX,qBAAIA,UAAU,KAAd,oDACA,mHAAqF,IACjF,6IAA+G,IAC3G,4EACA,4GACA,qGACA,wJACA,2GACA,4EAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,OACA,oCArCJ,IAqCe,wBAEX,qBAAIA,UAAU,KAAd,oDACA,gJAAkH,IAC9G,2GAA6E,IACzE,mDACA,8DACA,yDACA,mKAEJ,oCAAM,IAAN,UAEJ,oCAAM,IAAN,OACA,oCAlDJ,IAkDe,wCCqC5BoM,GA3GE,SAACrM,GAChB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,mFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,oDACA,oCAAK,oBAAGC,KAAK,gCAAgCC,OAAO,SAASC,IAAI,sBAA5D,sEAAL,OAGA,kIACA,oCAAM,sHACJ,4KACA,6LAA+D,4HAA/D,OACA,sIACA,kLAEF,qBAAIH,UAAU,KAAd,6CACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,+DAAN,OACA,oCAAM,kDAAN,OACA,oCAAM,oJAAN,UAEF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,iFAAN,OACA,qCAFF,IAEc,wBACZ,oCAAM,8BACJ,4CACE,oCAAM,+BACJ,oCAAM,uCAAN,OACA,oCAAM,mEAAN,UAEF,oCAAM,SAAN,OACA,0CAEF,oCAAM,KAAN,UAEF,yEAKR,sBAAKA,UAAU,SAAf,SACE,qCACE,uEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,kGACA,oCAAM,iIAAN,OACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,oHACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,4CAAN,OACA,oCAAM,qCACJ,oCAAM,oBAAN,OACA,oCAAM,qBAAN,UAEF,oCAAM,OAAN,OACA,oCAAM,qBACJ,oCAAM,yBACJ,oCAAM,oBAAN,UAEF,oCAAM,QAAN,UAEF,oCAAM,MAAN,OACA,oCAAM,gCAAN,OACA,oCAAM,yEACJ,oCAAM,8BACJ,oCAAM,2BACJ,oCAAM,wEAAN,OACA,oCAAM,mBAAN,UAEF,oCAAM,WAAN,OACA,oCAAM,0DAAN,OACA,oCAAM,wEAAN,UAEF,oCAAM,cAAN,OACA,oCAAM,eACJ,oCAAM,WACJ,oCAAM,kDAAN,UAEF,oCAAM,YAAN,UAEF,oCAAM,SAAN,UAEF,oCAAM,OAAN,OACA,oCAAM,4BAAN,2BC1CHqM,GApDK,SAACtM,GACjB,OACI,sBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,SACI,qCACI,yFACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,kEACA,uCAAQ,oBAAGC,KAAK,gDAAgDC,OAAO,SAASC,IAAI,sBAA5E,qFAAR,OACA,+HACA,6KACA,oHACA,uFACA,oIACA,6GACA,0GACA,sFAEA,qBAAIH,UAAU,KAAd,sDACA,sDACI,uBAAKA,UAAU,SAAf,UACI,qBAAIA,UAAU,KAAd,4CACA,6CACI,2CACI,2CACI,iDACI,6CACI,iFACA,wHACA,0CACI,4CACA,sEAX5B,IAiBU,wBAEN,qBAAIA,UAAU,KAAd,8CACA,oCAAM,6FAAN,OApBJ,IAoB2E,yCCmOxFsM,GA5QK,SAACvM,GACnB,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,sHACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,qEACA,uBAAKA,UAAU,SAAf,UACE,0JACA,+NAEA,iMACA,8jBAIA,mDAQV,sBAAKA,UAAU,SAAf,SACE,qCACE,sGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,oBAAGC,KAAK,wCAAwCC,OAAO,SAASC,IAAI,sBAApE,8EAAL,OACA,8DACA,iDACA,2CACA,oCAAK,oBAAGF,KAAK,8IAA8IC,OAAO,SAASC,IAAI,sBAA1K,+EAAL,OACA,+FACA,6DACA,uDACA,qGACA,wKAMR,sBAAKH,UAAU,SAAf,SACE,qCACE,6KACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,sHACA,uBAAKA,UAAU,SAAf,UACE,0MACA,wKACA,oCAAK,oBAAGC,KAAK,wEACXC,OAAO,SAASC,IAAI,sBADjB,4BAAL,UAIF,qBAAIH,UAAU,KAAd,sHACA,uBAAKA,UAAU,SAAf,UACE,sDAAc,IAAd,gEACA,+NACE,sHAIJ,qBAAIA,UAAU,KAAd,4DACA,sBAAKA,UAAU,SAAf,SACE,mEACE,gHAIJ,qBAAIA,UAAU,KAAd,uJACA,sBAAKA,UAAU,SAAf,SACE,6LACE,oCAAK,gQAAL,OACA,iJACA,+IACA,+IAIJ,qBAAIA,UAAU,KAAd,kEACA,sBAAKA,UAAU,SAAf,SACE,wIACE,mMACA,2NAIJ,qBAAIA,UAAU,KAAd,+IACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,6ZAAL,OAGA,4KACA,weAGA,gNAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,2KACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,sIACA,gEACA,wDACA,gKACA,sHACA,gOAKN,sBAAKA,UAAU,SAAf,SACE,qCACE,8KACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,mNACA,6KACA,sGAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,yLACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,6JACA,mIACA,sHACA,2PACA,kEAAmC,8IAAnC,eAKN,sBAAKA,UAAU,SAAf,SACE,qCACE,8LACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,8IACA,+FACA,2HACA,oHACA,wGACA,6FACA,0JACA,wIACA,0KACA,gLACA,6DACA,2FACA,6HAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,2HACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,8IACA,qDACA,uEACA,6DACA,mDACA,6DACA,6HACA,oGACA,6CAMN,8BACE,uBAAMA,UAAU,SAAhB,SAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,2BAASA,UAAU,SAAnB,sGACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,uBAAKN,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,sFACA,uBAAKA,UAAU,SAAf,UACE,gNACA,gTACA,+JACA,kIACA,wCAEF,sBAAKA,UAAU,UAAf,4DACA,uBAAKA,UAAU,SAAf,UACE,6GACA,uPACA,gJACA,qMACA,8DACA,wCAEF,sBAAKA,UAAU,UAAf,iEACA,uBAAKA,UAAU,SAAf,UACE,8RACA,6KACA,oDAAqB,oFACnB,uBAAKA,UAAU,SAAf,UACE,2CACE,+CACE,oCAAM,gDAAN,OACA,oCAAM,6FAAN,OACA,oCAAM,oCAAN,OACA,oCAAM,0CAAN,aANN,IAQQ,wBACN,wCACE,+CACE,8CACE,mGAhBZ,IAqBQ,wBACN,iDAAkB,qHAChB,uBAAKA,UAAU,SAAf,UACE,6FACA,6FACA,6FACA,wFAGJ,wDC3LHuM,GArEK,SAACxM,GACnB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,6DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,oBAAGC,KAAK,0BAA0BC,OAAO,SAASC,IAAI,sBAAtD,qDAAL,OACA,0EACA,6GACA,oKACA,oKACA,qCACA,wCAGF,qBAAIH,UAAU,KAAd,uDACA,uBAAKA,UAAU,SAAf,UACE,mDACA,sDAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,yEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,wDCsMHwM,GA9PK,SAACzM,GACnB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,uEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,gDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,6EACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qFAAsD,oFAAtD,OACA,kFACA,8DACA,8DACA,wEAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,8FACA,sBAAKA,UAAU,SAAf,SACE,uBAAKA,UAAU,SAAf,UACE,qFACA,oCAAK,qDAAL,OACA,mEACA,+CACA,wGAAyE,uFAAzE,OACA,oFACA,oCAAK,qDAAL,OACA,+CACA,0EAA2C,0GAA3C,OACA,oCAAK,wDAAL,OACA,sEACA,kDACA,+EAAgD,yHAAhD,OACA,8FAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,gGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,wHAAL,OACA,uBAAKA,UAAU,SAAf,UACE,yHACA,oEACA,4HACA,6IAEF,2FACA,oCAAK,kEAAL,OACA,4EAA6C,8EAA7C,OACA,oCAAK,wDAAL,OACA,kDACA,yDACA,qEACA,+DACA,uDACA,iGACA,kFACA,8GACA,+DACA,wCACA,oDACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,sGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,4DACA,yEAA0C,0DAA1C,OACA,+FACA,gEACA,gGAAiE,gGAAjE,OACA,oCAAK,wFAAL,OACA,qDACA,uGAAwE,iFAAxE,QACA,gDACA,4EACA,kEACA,kGACA,qEAAuB,yDAAvB,OACA,+CAAgB,mEAAhB,OACA,wDAAyB,wGAAzB,OACA,oCAAK,2EAAL,OACA,2EACA,oCAAK,uDAAL,OACA,gEACA,yDACA,oEACA,yEAEA,wDACA,mEACA,8GACA,+MACA,mKACA,qCACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,mGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,6CACA,uBAAKA,UAAU,SAAf,UACE,0EACA,uFACA,yGACA,sGACA,sHACA,2DACA,gHAAkF,IAChF,4EAA8C,IAC5C,uGAEF,qCAAO,IAAP,OACA,+CACA,oHAAsF,IACpF,0EAEF,qCAAO,IAAP,UAEF,oCAAM,IAAN,UAIF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,uBAAKA,UAAU,SAAf,UACE,4CAAc,IAAd,IAAmB,iEACjB,gDAEF,oCAAM,IAAN,UAEF,uBAAKA,UAAU,SAAf,UACE,uDAAwB,iEAAxB,OACA,4CAAc,IACZ,0EACA,8EACA,iEAEF,oCAAM,IAAN,OACA,0DAEF,uBAAKA,UAAU,SAAf,UACE,4DACA,0DAEF,uBAAKA,UAAU,SAAf,UACE,iDAAmB,IAAnB,IAAwB,iEACtB,0GAA2E,+EAA3E,UAEF,oCAAM,IAAN,aAIJ,qBAAIA,UAAU,KAAd,iGACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,uDAAL,OACA,mDACA,iDAAkB,gGAAlB,OACA,+FACA,6CACA,wEACA,6CACA,yEACA,oCAAK,gLAAL,OACA,yDACA,gDACA,gIACA,iFACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,8GACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,+HACA,+DACA,6EACA,kEACA,6IACA,6IACA,sDACA,+DACA,oDACA,+DAAgC,uEAAhC,OACA,6DACA,mEACA,kGAAmE,6HAAnE,OACA,gFACA,2KACA,oDC9FCyM,GApJU,SAAC1M,GACxB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,oHACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,+OACA,wGACA,kOACA,iIACA,8CACA,8CACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,+EACA,uBAAKA,UAAU,SAAf,UACE,+EACA,wCAGF,qBAAIA,UAAU,KAAd,sEACA,uBAAKA,UAAU,SAAf,UACE,iIACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,uDACA,uBAAKA,UAAU,SAAf,UACE,0HACA,wCAGF,qBAAIA,UAAU,KAAd,sEACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,kCAAN,8EACA,wCAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDAQZ,sBAAKA,UAAU,SAAf,SACE,qCACE,yIACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,sFACA,uCACE,0CAAW,4GACT,uDAAwB,0FAAxB,aAGJ,yCACE,0CACE,2DAA4B,yGAA5B,OACA,0CACE,4EACA,mOACA,yCAAU,2HACR,gDACA,6CACA,8CACA,iDAKR,qDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,iLACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,6CACA,wJACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,6BAAN,OACA,oCAAM,eAAN,OACA,oCAAM,UACJ,oCAAM,aACJ,oCAAM,oBACJ,oCAAM,+BAAN,OACA,oCAAM,eACJ,oCAAM,+DACJ,oCAAM,6CAAN,OACA,oCAAM,kBACJ,oCAAM,wCAAN,OACA,oCAAM,gDAAN,OACA,oCAAM,sCAAN,OACA,oCAAM,wCAAN,OACA,oCAAM,wBACJ,oCAAM,kCAAN,+BAUhB,qBAAIA,UAAU,KAAd,uDACA,uBAAKA,UAAU,SAAf,UACE,uIACA,qFACA,uMACA,0SACA,oKCpEC0M,GArEO,SAAC3M,GAErB,OACE,qCACE,sBAAKC,UAAU,eAAf,SACE,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,4CAAuC,oBAAGC,KAAK,KAAKG,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAA1C,gBAAvC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,sFACA,oGACA,sJACA,qKACA,kFACA,+JACA,gDAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,kEAA8C,oBAAGC,KAAK,KAAKG,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAA1C,gBAA9C,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,oGACA,qCACA,gDAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGC,KAAK,KAAKG,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAA1C,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGC,KAAK,KAAKG,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAA1C,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uDCgFH2M,GAzIM,SAAC5M,GAEpB,OACE,qCACE,sBAAKC,UAAU,eAAf,SACE,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,2BACA,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,+EACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,oBAAGC,KAAK,6BAA6BC,OAAO,SAASC,IAAI,sBAAzD,6BAAL,OACA,gJAGF,uBAAMH,UAAU,UAAhB,sFACA,wBAAMA,UAAU,SAAhB,UACE,kRAEA,gPACA,imBAIA,kFACA,oKACA,wHACA,6PAEA,0GACA,yKACA,wCAGF,uBAAMA,UAAU,UAAhB,8KACA,gJACA,wBAAMA,UAAU,SAAhB,UACE,odAEA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,6DACA,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,sDACA,wBAAMA,UAAU,SAAhB,UACE,0UACA,+UACA,yVAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,+HACA,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,2FACA,uBAAMA,UAAU,SAAhB,SACE,mWAGF,uBAAMA,UAAU,UAAhB,yHACA,uBAAMA,UAAU,SAAhB,SACE,uJAGF,uBAAMA,UAAU,UAAhB,sFACA,uBAAMA,UAAU,SAAhB,SACE,sLAGF,uBAAMA,UAAU,UAAhB,sFACA,uBAAMA,UAAU,SAAhB,SACE,qNAEF,uBAAMA,UAAU,UAAhB,sGACA,wBAAMA,UAAU,SAAhB,UACE,sNACA,0RACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,4FACA,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,8CACA,kDACA,mFAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uDCyRH4M,GArZI,SAAC7M,GAGlB,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,0HACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,6EAA8C,4IAA9C,OACA,8FACA,yCAAU,6EAAV,kBAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,wIACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,+RACA,sCACA,sCAEA,qBAAIA,UAAU,KAAd,0GACA,2DAEA,qBAAIA,UAAU,KAAd,mCACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,qDASZ,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,iEAAwC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,2DAAxC,OACA,wBAAMN,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,8CACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,oBAAGC,KAAK,sCAAsCC,OAAO,SAASC,IAAI,aAAlE,2DAAL,OACA,yFACA,yFAGF,uBAAMH,UAAU,UAAhB,+DACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,oBAAGC,KAAK,qFAAqFC,OAAO,SAASC,IAAI,aAAjH,2DAAL,OACA,2GACA,wFACA,oGACA,0JACA,qCACA,gDAOR,uBAAMH,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,8EAA2C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eAA3C,OACA,wBAAMN,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,qDACA,wBAAMA,UAAU,SAAhB,UACE,6fAEA,+RACA,6SACA,2pBAGA,sCACA,yCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qDAAsC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eAAtC,OACA,wBAAMN,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,oCACA,uBAAMA,UAAU,SAAhB,SACE,uCAGF,uBAAMA,UAAU,UAAhB,+BACA,wBAAMA,UAAU,SAAhB,UACE,qLACA,oCAAK,uBAAMA,UAAU,UAAhB,+CACH,iNACA,sJACA,8JACA,yHACA,qCAEA,qBAAGA,UAAU,SAAb,eAAwB,uBAAMA,UAAU,UAAhB,qCACtB,gKACA,mMACA,iHACA,0JACA,4JAGF,qBAAGA,UAAU,SAAb,eAAwB,uBAAMA,UAAU,UAAhB,kDACtB,iKACA,0VAIF,qBAAGA,UAAU,SAAb,eAAwB,uBAAMA,UAAU,UAAhB,6DACtB,kIACA,yPAIF,qBAAGA,UAAU,SAAb,eAAwB,uBAAMA,UAAU,UAAhB,wDACtB,8MACA,6PAGF,qBAAGA,UAAU,SAAb,eAAwB,uBAAMA,UAAU,UAAhB,wDACtB,iKACA,0MAIJ,oCAAK,uBAAMA,UAAU,UAAhB,gDACH,0GACA,0EACA,gHACA,8DACA,oEAIJ,uBAAMA,UAAU,UAAhB,wCACA,6PACA,wBAAMA,UAAU,SAAhB,UACE,iRACA,kEACE,wBAAMA,UAAU,SAAhB,UACE,oGACA,wGACA,8DACA,6DACA,sGACA,uFACA,iFAGJ,wCAGF,uBAAMA,UAAU,UAAhB,uDACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,2FAA8C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eAA9C,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,4CACA,wBAAMA,UAAU,SAAhB,UACE,wPACA,mSAGF,uBAAMA,UAAU,UAAhB,2CACA,uBAAMA,UAAU,SAAhB,SACE,uNAGF,uBAAMA,UAAU,UAAhB,kDACA,uBAAMA,UAAU,SAAhB,SACE,2GAGF,uBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,SACE,sKAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,iEAAwC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eAAxC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,gOACA,iSACA,kNACA,2CACA,wCACA,6CACA,qNACA,2CACA,mDACA,6CACA,6EACA,gEACA,gDAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,8EACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACE,iKACA,mIACA,oIACA,0DACA,uDACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,uGACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,kEACA,wEACA,qHACA,uCACA,+FACA,yHACA,sFAAwD,aAAxD,SACA,4DACA,yDACA,6EACA,mDACA,+CACE,oEACA,sDACA,qDACA,yDACA,wDACA,wDACA,mDACA,+GACA,4CACA,kDAEF,4EACA,uJACA,4JACA,kHACA,4JACA,wHACA,+DAAiC,IAAjC,yBACA,mDACA,uDACA,oDACA,4CACE,wBAAMA,UAAU,SAAhB,UACE,gDACA,qDAGJ,6EACA,iDACE,wBAAMA,UAAU,SAAhB,UACE,iDACA,mDACA,+CAAiB,IAAjB,QAA2B,IAA3B,OACA,6DACA,oDACA,iDACA,sEACA,gEACA,oCAAM,wEAAN,kIAEA,kHACA,wDACA,iDACA,qDACA,0CACA,8CACA,2CACA,6CACA,2DACA,2EACA,2EACA,2CACA,2DACA,2CACA,4DACA,8EACA,+CACA,oCAAM,kDAAN,sPAEA,wDAGJ,iLACE,4KAEF,oFACA,8FACA,wEACA,sEACA,6IACA,kGACA,wGACE,wBAAMA,UAAU,SAAhB,UACE,sEACA,8GACA,qCACA,2CAGJ,qCACA,gDAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,oDACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,2FACA,gDAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,sDCu0BD6M,GAjtCM,SAAC9M,GACpB,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,yEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,6HACA,mIACA,8FACA,gMACA,+FACA,kJACA,wHACA,uKACA,gKACA,+QACE,oFACA,mDACA,kFACA,wBACA,iPACA,oDACA,oDACA,qFAEF,4EACA,oJACA,uIACA,kEACE,oQACA,kRACA,sRACA,qRACA,4PACA,8QAEF,qCACA,6QACA,wLACA,iNACA,0HACA,0LACA,iKACA,0LACA,+JACA,sDACA,uGACA,2IACA,+HACA,sHACA,iMACA,qIACE,0IACA,oJACA,yHAAmC,sHAAnC,UAEF,qCACA,yCACE,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,0EACA,mHACA,qJACA,iJACA,2CAGJ,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,+EACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,2GACA,kHACA,gHACA,yGACA,8IACA,4FACA,4HACA,kIACA,+CACA,gJACA,gJAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,iEAAmB,mHAAnB,OACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,sEACA,4FACA,iGACA,mGACA,2HACA,uGACA,kIACA,kKACA,4HAON,sBAAKA,UAAU,SAAf,SACE,qCACE,iEAAmB,uGAAnB,OACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,oEACA,4MACA,sLACA,8GACE,sBAAKA,UAAU,SAAf,SACE,yCACE,0BAASA,UAAU,SAAnB,yFACA,sSACA,uLACA,gFACA,2EACA,sEACA,wDACA,oEACA,mEAGJ,qIACA,4IACA,wGACA,2HACA,6FACA,kGACA,gHACA,+EACA,8GACA,wHACA,2RACA,0KACA,sKAGF,qBAAIA,UAAU,KAAd,mCACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,uFACA,yEAA0C,kBAA1C,6IASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,oEAAsB,6EAAtB,OACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,qGACA,wIACA,sLACA,uIACA,8FAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,+DAAiB,sGAAjB,OACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,oMACA,sNACA,wIACA,kMACA,wOACA,8GACA,oNACA,2LACA,sFAEA,qBAAIA,UAAU,KAAd,mCACA,sDACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,uBAAKA,UAAU,SAAf,UACE,mDACA,uFASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,iEAAmB,4GAAnB,OACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,sDACA,uBAAKA,UAAU,SAAf,UACE,4KACA,0RACA,wQAGF,qBAAIA,UAAU,KAAd,+CACA,uBAAKA,UAAU,SAAf,UACE,mKACA,uKACA,8OACA,+KAAuC,gHAAvC,OACA,kIACA,oJACA,kGACA,mIAA8B,gHAA9B,OACA,4IAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,gFAAmB,wGAAnB,OACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,6CACA,gEACA,gFACA,yIACA,qFACA,yEACA,sEACA,0FAEA,qBAAIA,UAAU,KAAd,+CACA,qMACA,qFAA6B,0GAA7B,OACA,sEAAwB,yFAAxB,OACA,yFAAiC,gHAAjC,OACA,0EAA4B,+GAA5B,OACA,gFAAwB,0CAAxB,OACA,mEAAqB,sEAArB,OACA,iGAA+B,sGAA/B,OACA,mEAAqB,8HAArB,OACA,mFAA2B,0HAA3B,OACA,kEAAoB,sDAApB,OACA,8EAAsB,kEAAtB,eAMN,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,4CAAuC,qHACrC,oBAAGI,KAAK,wBAASC,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,wDACA,yEACA,4KACA,2GAAqB,0FAArB,OACA,+FAAmB,gEAAnB,OACA,+IACA,2HACA,iIACA,wIACA,wCAIF,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACE,+GACA,mDAQV,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,2CAAsC,4GACpC,oBAAGI,KAAK,wBAASC,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,wDACA,+MACA,iQACA,4FACA,iYAEA,iIACA,mGACA,qHACA,qJAIF,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACE,iLACA,wLAQV,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,uGACtC,oBAAGI,KAAK,yBAAUC,MAAO,CAAEC,WAAY,UAAvC,sCADF,OAEA,uBAAMN,UAAU,SAAhB,SACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,mCACA,mHACA,sGAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,0FACtC,oBAAGI,KAAK,0BAAWC,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,uBAAMN,UAAU,SAAhB,SACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,qCACA,yEACA,oHACA,gHACA,4LAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,iDAA4C,0FAC1C,oBAAGI,KAAK,8BAAeC,MAAO,CAAEC,WAAY,UAA5C,2CADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,wDACA,8IACA,uHACA,sJACA,kGACA,uHACA,2GAGF,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,SACE,0FAQV,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,0CAAqC,uIACnC,oBAAGI,KAAK,uBAAQC,MAAO,CAAEC,WAAY,UAArC,oCADF,OAEA,uBAAMN,UAAU,SAAhB,SACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,uDAEA,wDACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,8EACA,sPACA,kFACA,kEACA,8EACA,gGACA,wHACA,yMACA,iLACA,mHAKN,kGACA,2GACA,2FACA,qIACA,yJACA,mDAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,qIACtC,oBAAGI,KAAK,0BAAWC,MAAO,CAAEC,WAAY,UAAxC,wCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,UACE,wCACA,qBAAIA,UAAU,UAAd,qFACA,wGACA,uIACA,sLACA,sHACA,uHACA,kIACA,2LACA,mGACA,wCAGF,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACE,iQACA,sMACA,sNACA,8IACA,wIACA,kJACA,+DAAuB,SAAvB,6FACA,qFAAsD,gBAAtD,2EACA,mDAQV,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,0JACtC,oBAAGI,KAAK,0BAAWC,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,oFACA,kHACA,iHACA,0RACA,2JACA,wIACA,gKACA,4KACA,sKACA,qNACA,mIACA,qJACA,+GACA,oFACA,+GACA,6CAhBF,SAiBE,gDACA,+CACA,8CACA,2KACA,yKACA,8CACA,8CACA,kDAGF,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACE,6JACA,mOACA,kEACA,0LACA,mGACA,mDAQV,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,8CAAyC,iEACvC,oBAAGI,KAAK,2BAAYC,MAAO,CAAEC,WAAY,UAAzC,yCADF,OAEA,uBAAMN,UAAU,SAAhB,SACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,4CACA,wGACA,yGACA,iOACA,8HACA,sLACA,yKACA,gLACA,gKACA,mMACA,qIAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,wCACtC,oBAAGI,KAAK,0BAAWC,MAAO,CAAEC,WAAY,UAAxC,wCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,UAAd,iMACA,iGACA,0CACA,iNACA,gGACA,qFACA,wGACA,sHACA,sJACA,sJACA,0MACA,iKACA,wRACA,iIACA,sIACA,wCACA,oCAEA,sDACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,wBACA,8CAKN,4CAIF,wBAAMA,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,SACE,kDAQV,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,4CAAuC,mJACrC,oBAAGI,KAAK,yBAAUC,MAAO,CAAEC,WAAY,UAAvC,sCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,wBAAMA,UAAU,UAAhB,kBAAgC,WAAhC,OACA,wBAAMA,UAAU,SAAhB,UACE,sOACA,oCAAM,2BAAN,QACA,oCAAM,wCAAN,QACA,uMACA,oCAAM,oCAAN,wCACA,oCAAM,wCAAN,wCACA,oCAAM,8CAAN,4BACA,sFACE,wBAAMA,UAAU,SAAhB,UACE,2CAAa,cAAb,OACA,qCAAO,gBAAP,OACA,wCAAU,sBAAV,iCAGJ,yCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,4CAAuC,8MACrC,oBAAGI,KAAK,yBAAUC,MAAO,CAAEC,WAAY,UAAvC,sCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,mEACA,wBAAMA,UAAU,SAAhB,UACE,uZAEA,4FACA,sJACA,mIALF,IAK6D,wBAC3D,4HACA,yGACA,4HACA,iIACA,iGACA,4EACA,4GACA,0JACA,kJACA,0KACA,oKACA,uNACA,uNACA,kNACA,gNACA,sIACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,+CAA0C,oFACxC,oBAAGI,KAAK,4BAAaC,MAAO,CAAEC,WAAY,UAA1C,yCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,6EACA,wBAAMA,UAAU,SAAhB,UACE,wHACA,wJACA,2GACA,gDAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,+CAA0C,0FACxC,oBAAGI,KAAK,4BAAaC,MAAO,CAAEC,WAAY,UAA1C,yCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,qDACA,wBAAMA,UAAU,SAAhB,UACE,wGACA,8FACA,wEACA,wEACA,2HACA,gGACA,2DACA,+EACA,qFACA,uGACA,0HAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,4IACtC,oBAAGI,KAAK,0BAAWC,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,wDACA,wBAAMA,UAAU,SAAhB,UACE,4DACA,yKACA,gTACA,+IACA,qCAAM,uBAAMA,UAAU,UAAhB,gIACJ,uBAAMA,UAAU,SAAhB,SACE,sBAAIK,MAAO,CAAEU,UAAW,QAAxB,UACE,0EACA,iFACA,+DACA,+FACA,iHACA,+FACA,iFACA,6EAIN,oCAAK,uBAAMf,UAAU,UAAhB,gEACH,uBAAMA,UAAU,SAAhB,SACE,sBAAIK,MAAO,CAAEU,UAAW,QAAxB,UACE,uDAAwB,oFAAxB,OACA,2CAAY,8EAAZ,OACA,8CAAe,sGAAf,OACA,4CAAa,yHAAb,OACA,6CAAc,sGAAd,OACA,4CAAa,6GAAb,OACA,gDAAiB,uEAAjB,OACA,4CAAa,mFAAb,OACA,+CAAgB,uEAAhB,OACA,4CAAa,0FAAb,OACA,+CAAgB,2FAAhB,OACA,4CAAa,sEAAb,OACA,2CAAY,kGAAZ,OACA,gDAAiB,gGAAjB,OACA,4CAAa,gGAAb,OACA,+CAAgB,qFAAhB,OACA,6CAAc,2FAAd,OACA,2CAAY,qFAAZ,OACA,oDAAqB,yDAArB,OACA,gDAAiB,yHAAjB,OACA,iDAAkB,kHAAlB,OACA,yCAAU,iFAAV,OACA,wEAA+B,iJAA/B,OACA,6CAIN,wCAGF,uBAAMf,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAQR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,4CAAuC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,gIACA,yJACA,gIACA,8IACA,gOACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,4CAAuC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAvC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,gLACA,6EACA,kIACA,sJACA,kJACA,0HACA,gHACA,6IACA,+GACA,sEACA,kMACA,qGACA,yIACA,6HACA,oFACA,2KACA,6GACA,gHACA,0HAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,0FACtC,oBAAGI,KAAK,0BAAWC,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,yIACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,2CAAsC,yHACpC,oBAAGI,KAAK,wBAASC,MAAO,CAAEC,WAAY,UAAtC,qCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,kIACA,qHACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,6GACA,oFACA,oIACA,oEACA,sEACA,oFACA,+DACA,gFACA,oFACA,4CACA,6FACA,6CACA,uDACA,mFACA,oEACA,kFAKN,iIACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,uEACA,oEACA,sEACA,oFACA,+DACA,uDACA,mFACA,oEACA,kFAKN,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,8CAAyC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAzC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,mKACA,wBAAMA,UAAU,SAAhB,UACE,qCACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,yDAAoD,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAApD,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,0CACA,wBAAMA,UAAU,SAAhB,UACE,+IACA,uHAGF,uBAAMA,UAAU,UAAhB,2CACA,uBAAMA,UAAU,SAAhB,SACE,kLAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,+CAA0C,6GACxC,oBAAGI,KAAK,4BAAaC,MAAO,CAAEC,WAAY,UAA1C,yCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,+CACA,wBAAMA,UAAU,SAAhB,UACE,kDAAc,iKAAd,OACA,wCAGF,uBAAMA,UAAU,UAAhB,sIACA,wBAAMA,UAAU,SAAhB,UACE,0EACA,oFAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,2CAAsC,sLACpC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,+BACA,uBAAMA,UAAU,SAAhB,SACE,qDAGF,uBAAMA,UAAU,UAAhB,uCACA,wBAAMA,UAAU,SAAhB,UACE,mHACA,sHACA,wDACA,4DAGF,uBAAMA,UAAU,UAAhB,0CACA,uBAAMA,UAAU,SAAhB,SACE,sBAAIK,MAAO,CAAEU,UAAW,QAAxB,UACE,2HACE,qCAAM,mEAAN,UAEF,gIACE,oCAAK,2DAAL,UAEF,qFACE,oCAAK,wCAAL,UAEF,qFACE,oCAAK,2DAAL,UAEF,yJACE,oCAAK,6CAAL,UAEF,wGACE,oCAAK,wCAAL,UAEF,qHACE,oCAAK,4CAAL,UAEF,8EACE,oCAAK,wCAAL,UAEF,kEACE,oCAAK,wCAAL,UAEF,2FACE,oCAAK,2DAAL,UAEF,2FACE,oCAAK,2DAAL,UAEF,2HACE,oCAAK,2DAAL,UAEF,+GACE,oCAAK,wCAAL,UAEF,0GACE,oCAAK,wCAAL,UAEF,wJACE,oCAAK,wCAAL,UAEF,4HACE,oCAAK,wCAAL,eAKN,uBAAMf,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,gDAA2C,8GACzC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,oCACA,wBAAMA,UAAU,SAAhB,UACE,2CACE,uDACA,+DACA,+DACA,wFAEF,2CACE,wDACA,8DACA,6DACA,8EAIJ,uBAAMA,UAAU,UAAhB,2DACA,wBAAMA,UAAU,SAAhB,UACE,0EACA,wGACA,mDACA,0FACA,yHACA,0IACA,iRACA,0QACA,uGACA,4KACA,wCAGF,uBAAMA,UAAU,UAAhB,mDACA,uBAAMA,UAAU,SAAhB,SACE,sBAAIK,MAAO,CAAEU,UAAW,QAAxB,UACE,qEACE,oCAAK,wCAAL,UAEF,yFACE,oCAAK,wCAAL,UAEF,qEACE,oCAAK,wCAAL,UAEF,oKACE,oCAAK,8EAAL,UAEF,0CAIJ,uBAAMf,UAAU,UAAhB,iDACA,wBAAMA,UAAU,SAAhB,UACE,gFACA,0DACA,wDACA,uDACA,yDACA,0FACA,0EACA,oFACA,uPAGF,uBAAMA,UAAU,UAAhB,kDACA,wBAAMA,UAAU,SAAhB,UACE,kEAAoB,sFAApB,OACA,oEAAsB,wFAAtB,OACA,kEAAoB,kGAApB,OACA,qEAAuB,sGAAvB,OACA,oEAAsB,+GAAtB,UAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,gIACtC,oBAAGI,KAAK,0BAAWC,MAAO,CAAEC,WAAY,UAAxC,uCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,iCACA,wBAAMA,UAAU,SAAhB,UACE,2JACA,0CACE,6DAEF,kDACE,6DAEF,wCAGF,uBAAMA,UAAU,UAAhB,kDACA,wBAAMA,UAAU,SAAhB,UACE,0HACA,iHACA,6IACA,sQACA,wHACA,gIACA,iIAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAQR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,gDAA2C,0FACzC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,4FACA,gDAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6CAAwC,wCACtC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,kGACA,gIACA,4IACA,oJACA,iGACA,mHACA,sGAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,wCAC7B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,qCACA,uDCnlCD8M,GAnHQ,SAAC/M,GAEpB,OACI,qCACI,uBAAKC,UAAU,eAAf,UAEI,sBAAKA,UAAU,SAAf,SACI,qCACI,4EACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,6FACA,0LACA,0JACA,kIACA,+KACA,gPACA,4JACA,2MACA,4GACA,6JAEA,qBAAIA,UAAU,KAAd,yCACA,4FACA,mEAMZ,sBAAKA,UAAU,SAAf,SACI,qCACI,wDACA,uBAAKA,UAAU,SAAf,UAEI,qBAAIA,UAAU,KAAd,yCACA,kEAAmC,2EAAnC,OACA,2DACI,uBAAKA,UAAU,SAAf,UACI,sFAAuD,2FAAvD,OACA,iEAAkC,+EAAlC,QACA,iIACA,0HAGR,sGAA+B,wKAA/B,OACA,kEAAmC,2EAAnC,eAMZ,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,wDAA8C,oBAAGI,KAAK,qCAAiBC,MAAO,CAAEC,WAAY,UAA9C,kDAA9C,OACA,wBAAMN,UAAU,SAAhB,UACI,oCAAK,oBAAGC,KAAK,8CAA8CC,OAAO,SAASC,IAAI,aAA1E,2DAAL,OACA,6FACA,0LACA,0JACA,kIACA,+KACA,gPACA,4JACA,2MACA,4GACA,qKAMZ,uBAAMH,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,2CACI,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADJ,OAEA,wBAAMN,UAAU,SAAhB,UAEI,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACI,4FACA,2DACA,wCAGJ,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,+CAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACI,wDCwBrB+M,GA/HQ,SAAChN,GAGtB,OACE,qCACE,sBAAKC,UAAU,eAAf,SACE,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,+DAA2C,oBAAGC,KAAK,KAAKG,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAA1C,gBAA3C,OACA,wBAAMN,UAAU,SAAhB,UAEE,qCACE,0BAASA,UAAU,UAAnB,mCACA,wBAAMA,UAAU,SAAhB,UACE,iHACA,6FAIJ,qCACE,0BAASA,UAAU,UAAnB,+CACA,wBAAMA,UAAU,SAAhB,UACE,yFACA,+EACA,2HACA,2HACA,0JACA,0JACA,sLACA,qHACA,mKACA,uGACA,kGACA,mGACA,uHAIJ,qCACE,0BAASA,UAAU,UAAnB,+CACA,wBAAMA,UAAU,SAAhB,UACE,oIACA,sIACA,4KACA,6IACA,+JACA,oHACA,wGAIJ,qCACE,0BAASA,UAAU,UAAnB,+CACA,wBAAMA,UAAU,SAAhB,UACE,wHACA,kGACA,uGACA,wIACA,wIACA,sGACA,2HACA,yLACA,0LACA,8LACA,sBAAIA,UAAU,SAAd,cAAwB,uBAAMA,UAAU,UAAhB,sBACtB,4HACA,iHACA,wJACA,0EACA,0HAKN,qCACE,0BAASA,UAAU,UAAnB,+CACA,wBAAMA,UAAU,SAAhB,UACE,yHACA,8GACA,wKACA,wKAIJ,qCACE,0BAASA,UAAU,UAAnB,mCACA,uBAAMA,UAAU,SAAhB,SACE,kDAQV,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGC,KAAK,KAAKG,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAA1C,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,0BAASA,UAAU,UAAnB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGC,KAAK,KAAKG,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAA1C,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,0BAASA,UAAU,UAAnB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uDCoPHgN,GAvWQ,SAACjN,GACtB,OACE,qCACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,6CACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,wCACA,0DAEA,qBAAIA,UAAU,KAAd,4CACA,uBAAKA,UAAU,SAAf,UACE,2JACA,2MAGF,qBAAIA,UAAU,KAAd,uCACA,sBAAKA,UAAU,SAAf,SACE,yFAGF,qBAAIA,UAAU,KAAd,wCACA,sBAAKA,UAAU,SAAf,SACE,uGAQR,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,2FAA8C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eAA9C,OACA,wBAAMN,UAAU,SAAhB,UAEE,qCACE,0BAASA,UAAU,UAAnB,oEACA,uBAAMA,UAAU,SAAhB,SACE,2MAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,SACE,+GAIJ,qCACE,0BAASA,UAAU,UAAnB,2BACA,uBAAMA,UAAU,SAAhB,SACE,2HAIJ,qCACE,0BAASA,UAAU,UAAnB,4BACA,uBAAMA,UAAU,SAAhB,SACE,6JAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,SACE,iIAIJ,qCACE,0BAASA,UAAU,UAAnB,sFACA,wBAAMA,UAAU,SAAhB,UACE,wHACA,wKACE,0NAEF,kPACA,0CAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,SACE,2JAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,wBAAMA,UAAU,SAAhB,UACE,6MACA,kDAIJ,qCACE,0BAASA,UAAU,UAAnB,2BACA,uBAAMA,UAAU,SAAhB,SACE,gJAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,wBAAMA,UAAU,SAAhB,UACE,wJAEA,iLACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,qKACA,uEACA,+HACA,2EACA,4EACA,oJACA,8HACA,2QAKN,gNACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,+GACA,uEACA,6HACE,wBAAMA,UAAU,SAAhB,UACE,oIACA,6HACA,wDACE,8IACA,8RACA,sKAEF,2CAGJ,iOACA,8PACA,8JACA,kJACA,kNACA,4IAKN,2LACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,uIACA,wCACA,yHACA,0LACA,wLAKN,oDACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,8EACA,yHAKN,0CACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,+GACA,wGACA,yGACA,iOACA,8HACA,sLACA,yKACA,gLACA,gKACA,mMACA,mIAKN,oDACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,oEACA,kGACA,yHACA,mJACA,8FACA,sGACA,iYAKN,+CACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,sJACA,uHACA,uHACA,mHACA,6GACA,mHACA,uHACA,8HACA,uHACA,8HACA,qHACA,8IACA,yJACA,yGAKN,uDACE,uBAAMA,UAAU,SAAhB,SACE,mCACE,0BAASA,UAAU,UAAnB,4DAKN,gDACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,wBACA,sCACA,8CAKN,qCACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,wBACA,sCACA,oDAQV,qCACE,0BAASA,UAAU,UAAnB,iCACA,uBAAMA,UAAU,SAAhB,SACE,2JAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,SACE,2JAIJ,qCACE,0BAASA,UAAU,UAAnB,2BACA,wBAAMA,UAAU,SAAhB,UACE,gLACA,iJACA,2KACA,sGACA,6IACA,6IACA,mJAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,SACE,+IAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,SACE,kMAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,uBAAMA,UAAU,SAAhB,SACE,uOAIJ,qCACE,0BAASA,UAAU,UAAnB,0BACA,wBAAMA,UAAU,SAAhB,UACE,+MAEA,2DACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,wBACA,sCACA,8CAKN,qCACE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,UAAnB,wBACA,sCACA,4DAYhB,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,wDClCHiN,GAzTK,SAAClN,GAEnB,OACE,uBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,SACE,qCACE,yFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,gDAAiB,oFAAjB,OACA,kEACA,6FACA,mGACA,4CACA,6EAGF,qBAAIA,UAAU,KAAd,0IACA,uBAAKA,UAAU,SAAf,UACE,4DACA,uEAAwC,6DAAxC,OACA,wDACA,sEAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,oDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,2FACA,qCACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,+EAAsD,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,eAAtD,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,oBAAGC,KAAK,qFAAyFC,OAAO,SAASC,IAAI,aAArH,2DAAL,OACA,0FACA,oEACA,iEACA,yDACA,2FACA,yEACA,sLACA,+FACA,uEACA,sGACA,+HACA,+GACA,gIACA,6DACA,qGACA,4KACA,gHACA,uKACA,mEACA,gEACA,uFACA,mFACA,0EACA,qCACA,8KACA,iKACA,gJAMR,uBAAMH,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,kEAA8C,oBAAGI,KAAK,+CAAiBC,MAAO,CAAEC,WAAY,UAA9C,4DAA9C,OACA,wBAAMN,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,yGACA,+EACA,qCACA,wCAGF,uBAAMA,UAAU,UAAhB,qDACA,wBAAMA,UAAU,SAAhB,UACE,qMACA,8GACA,gDACA,gDACA,0EACA,mEACA,yDACA,kFACA,sDACA,8FACA,mHACA,iJACA,wJACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,+EAAiD,oBAAGI,KAAK,4DAAoBC,MAAO,CAAEC,WAAY,UAAjD,yEAAjD,OACA,wBAAMN,UAAU,SAAhB,UACE,0OACA,uBAAMA,UAAU,UAAhB,6BACA,wBAAMA,UAAU,SAAhB,UACE,wDACA,0HACA,8DACA,+DACA,0DACE,oCAAM,kBAAN,OACA,oCAAM,KAAN,OACA,oCAAM,wBAAN,6IACA,oCAAM,yBAAN,yDACA,oCAAM,gCAAN,mDACA,oCAAM,qBAAN,qDACA,oCAAM,uBAAN,0DACA,oCAAM,yCAAN,uEACA,oCAAM,oCAAN,oIACA,oCAAM,KAAN,UAEF,+DACA,wGACA,oKACA,uFACA,sHACA,0HACA,gKACA,6DACA,qDACA,gDAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qDAAsC,oBAAGI,KAAK,kCAASC,MAAO,CAAEC,WAAY,UAAtC,+CAAtC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,4CACA,wBAAMA,UAAU,SAAhB,UACE,qGACA,wDACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,6EAA+C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/C,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,wCACA,wBAAMA,UAAU,SAAhB,UACE,wEACA,qXAEA,kPACA,wIACA,gSACA,wCAGF,uBAAMA,UAAU,UAAhB,0DACA,wBAAMA,UAAU,SAAhB,UACE,0GACA,0HACA,gMACA,wHACA,0KACA,kMACA,oOAGF,uBAAMA,UAAU,UAAhB,8CACA,wBAAMA,UAAU,SAAhB,UACE,mKACA,kEAFF,IAE8C,wBAC5C,uEAHF,IAGmD,wBACjD,8DAJF,IAI0C,wBACxC,gIACA,sEACA,mDACA,wCAIF,uBAAMA,UAAU,UAAhB,8CACA,wBAAMA,UAAU,SAAhB,UACE,4JACA,yNACA,oCAAM,IAAN,QACA,kDACA,oCAAM,IAAN,QACA,iEACA,2JACA,mEACA,oCAAM,IAAN,QACA,kKACA,qJACA,gJACA,gIACA,uLACA,sUACA,oCAAM,IAAN,QACA,qCACA,wCAGF,uBAAMA,UAAU,UAAhB,gEACA,wBAAMA,UAAU,SAAhB,UACE,gFACA,kDACA,0IACA,gRAJF,IAI6E,wBAC3E,0CALF,IAKsB,wBACpB,+EACE,yFACA,+CACA,kFACA,0DAEF,sEACA,oDACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,sDC4/BDkN,GA1yCM,SAACnN,GAEpB,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,yFACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,kEACA,6FACA,4EACA,qFAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,yFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,yDAA0B,+CAA1B,OACA,gEACA,gEAGF,qBAAIA,UAAU,KAAd,mEACA,uBAAKA,UAAU,SAAf,UACE,0DAA2B,8IAA3B,OACA,yDAA0B,uEAA1B,OACA,8DAA+B,oFAA/B,OACA,4DAA6B,oFAA7B,OACA,6DACA,kEANF,IAM2C,wBACzC,8DAA+B,uEAA/B,OACA,+DAAgC,0FAAhC,OACA,6DAA8B,uEAA9B,OACA,+DAAgC,2FAAhC,UAGF,qBAAIA,UAAU,KAAd,4DACA,uBAAKA,UAAU,SAAf,UACE,sIAA+D,kGAA/D,OACA,4LACA,qHACA,yGACA,4FAAmD,sEAAnD,OACA,+FAAsD,sEAAtD,OACA,iIAA0D,kFAA1D,OACA,oIAA6D,kFAA7D,OACA,2IAAgG,kFAAhG,OACA,yIAA8F,kFAA9F,OACA,8IAAmG,+FAAnG,OACA,4IAAiG,+FAAjG,OACA,+LAAgI,2FAAhI,OACA,kMAAmI,wGAAnI,OACA,oOAAuI,wGAAvI,OACA,uOAA0I,qHAA1I,UAGF,qBAAIA,UAAU,KAAd,0EACA,sBAAKA,UAAU,SAAf,SACE,mFAGF,qBAAIA,UAAU,KAAd,yEACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,UAAd,uDACA,qBAAIA,UAAU,WAAd,mEAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,qDACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,6CAAc,yEAAd,SACA,qDAAsB,qOAAtB,OACA,0DACE,wDAAyB,gEAAzB,OACA,uDAAwB,0HAAxB,qBAOV,sBAAKA,UAAU,SAAf,SACE,qCACE,6JACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,oGACA,sBAAKA,UAAU,SAAf,SACE,kFAAmD,mJACjD,uBAAKA,UAAU,SAAf,UACE,qDAAsB,iGAAtB,OACA,8CAAe,kMAAf,OACA,8EAAsB,6FAAtB,QACA,uEAAoB,kEAApB,yBACA,yFAAuB,sGAAvB,OALF,IAK4E,wBAC1E,+CAAgB,uGAAhB,OACA,wDAAyB,yFAAzB,OACA,iDAAkB,6IAAlB,OACA,uDAAwB,uDAAxB,OACA,4CAAa,6EAAb,OACA,4CAAa,6EAAb,OACA,gDAAiB,4IAAjB,OACA,yCACA,yCACA,+CAAgB,8GAAhB,eAKN,qBAAIA,UAAU,KAAd,wEACA,uBAAKA,UAAU,SAAf,UACE,8DAA+B,mFAA/B,QACA,0DAAiB,wNAAjB,QAEA,6CAAc,yHAAd,OACA,6CAAc,mGAAd,QACA,4CACA,wDAAyB,2EAAzB,OACA,kDACA,kDACA,2EAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,sDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,mDACA,uBAAKA,UAAU,SAAf,UACE,2EACA,+CACA,uEACA,sEAAmB,6JAAnB,OACA,kDAAmB,qGAAnB,OACA,sDACA,wEACA,yEACA,2EACA,yEACA,8EACA,wCAGF,qBAAIA,UAAU,KAAd,0DACA,uBAAKA,UAAU,SAAf,UACE,6CACA,kDACA,qDACA,wDAGF,qBAAIA,UAAU,KAAd,oHACA,uBAAKA,UAAU,SAAf,UACE,kNACA,yEACE,sBAAKA,UAAU,SAAf,SACE,0DAA4B,KAA5B,gCAKN,qBAAIA,UAAU,KAAd,mDACA,uBAAKA,UAAU,SAAf,UACE,0EAAuB,2EAAvB,OACA,oEAAiB,2EAAjB,OACA,qEAAkB,8EAAlB,OACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,mDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,sBAAKA,UAAU,SAAf,SACE,gEAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,kDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,+CACA,uBAAKA,UAAU,SAAf,UACE,kDAAmB,qHAAnB,OACA,gDAAiB,iEAAjB,OACA,mEAAoC,iGAApC,OACA,qLACA,oPACA,+OACA,4EAA6C,8EAA7C,OACA,qFAAsD,8EAAtD,UAGF,qBAAIA,UAAU,KAAd,0EACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,yEACA,uBAAKA,UAAU,SAAf,UACE,gDACA,6EACA,oDACA,gDAAiB,8EAAjB,OACA,2DAA4B,iGAA5B,OACA,oDAAqB,6EACnB,sBAAKA,UAAU,SAAf,SACE,6GAA8E,iKAA9E,YAGJ,wDACA,oDAAqB,mHAArB,kBAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,mDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,2IACA,mHACA,4IACA,wCAGF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,kEACE,uBAAKA,UAAU,SAAf,UACE,4CACA,oDACA,0FACA,+CACA,oDAGJ,sDACA,0DACA,2DACA,8DAGF,qBAAIA,UAAU,KAAd,4DACA,uBAAKA,UAAU,SAAf,UACE,6DAA8B,6EAA9B,OACA,kGAA2B,+EAA3B,UAGF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,mEAAoC,iEAApC,OACA,0DAA2B,+FAA3B,OACA,wCAGF,qBAAIA,UAAU,KAAd,4DACA,uBAAKA,UAAU,SAAf,UACE,mLACA,uBAAKA,UAAU,SAAf,UACE,sEACA,gFAEF,qEACA,mEACA,0FACA,uBAAKA,UAAU,SAAf,UACE,2CAAa,IACX,+CACA,+CAAiB,IACf,2EACA,gEACA,yEAEF,oCAAM,IAAN,UAEF,oCAAM,IAAN,UAEF,8IACA,6CAAc,kGAAd,OACA,yDACA,qEAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,qDACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,4DACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,oBAAGC,KAAK,kDAAkDC,OAAO,SAASC,IAAI,sBAA9E,sDAAL,OACA,wMACA,gJACA,sDACA,+HACE,sBAAKH,UAAU,SAAf,SACE,wDAAyB,wLAAzB,YAGJ,yEACA,+EACA,0EAA2C,yHACzC,sBAAKA,UAAU,SAAf,SACE,wDAAyB,+GAAzB,YAGJ,mDACE,uBAAKA,UAAU,SAAf,UACE,yDAA0B,sHAA1B,OACA,4EAA6C,gFAA7C,OACA,mKACA,sFAGJ,wDACA,0EACA,kEAAmC,kPAAnC,OACA,yDAA0B,0FAA1B,OACA,iDAAkB,mFAAlB,OACA,0EACE,uBAAKA,UAAU,SAAf,UACE,2CACA,wFACA,uEACA,qCACA,8CACA,iDACA,oHACA,mFACA,mFACA,8GACA,oGACA,gFACA,gFACA,8CACA,+CACA,+CACA,kDACA,mDACA,8CACA,qEAGJ,gFACA,uBAAKA,UAAU,SAAf,UACE,oCAAM,gBACJ,oCAAM,iCAAN,OACA,oCAAM,mCAAN,OACA,oCAAM,sCAAN,OACA,oCAAM,sCAAN,OACA,oCAAM,mCAAN,OACA,oCAAM,yHACJ,8IADF,UAGF,oCAAM,iBAAN,aAIJ,qBAAIA,UAAU,KAAd,+CACA,uBAAKA,UAAU,SAAf,UACE,qEACA,oEACA,mEACA,sEACA,wEAGF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,+DAAgC,6EAAhC,OACA,uEAAwC,gEAAxC,OACA,wDAAyB,8GAAzB,OACA,wCAGF,qBAAIA,UAAU,KAAd,kGACA,uBAAKA,UAAU,SAAf,UACE,kEAAmC,6EAAnC,OACA,0FACA,wCAGF,qBAAIA,UAAU,KAAd,gHACA,uBAAKA,UAAU,SAAf,UACE,kEAAmC,6EAAnC,OACA,8GACA,0EACA,6DAAW,+FAAX,OACA,sBAAKA,UAAU,SAAf,SACE,oCAAM,yFAAN,SAEF,wCAGF,qBAAIA,UAAU,KAAd,yEACA,uBAAKA,UAAU,SAAf,UACE,+DACA,wEACA,wDACA,kEACA,sFACA,qEACA,sEAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,mDACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UAEE,oCAAK,oBAAGC,KAAK,4CAA4CC,OAAO,SAASC,IAAI,sBAAxE,wFAAL,OACA,+HAAgG,+JAAhG,OACA,4EAA6C,2DAA7C,OACA,iEACA,gEAAiC,yEAAjC,OACA,iEAAkC,iEAAlC,OACA,uFAAwD,2JAAxD,OACA,mEAAoC,wEAClC,qEAAsC,mGAAtC,OACA,sOACA,+OACA,0EACA,sOACA,+OACA,8FACA,mEACA,uEACA,oFACA,6EAEF,mDAAoB,2DAClB,wDAAe,0HAAf,UAEF,qDAAsB,2DAAtB,OACA,0NAEF,qBAAIH,UAAU,KAAd,sDACA,uBAAKA,UAAU,SAAf,UACE,mEACE,uBAAKA,UAAU,SAAf,UACE,2GACA,2GACA,2GACA,2GACA,2GACA,2GACA,iHAGJ,oEACA,0DACA,yDACA,qEAAsC,sHAAtC,OACA,6DACA,8GAAwB,mJAAxB,kBAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,kEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,oBAAGC,KAAK,4CAA4CC,OAAO,SAASC,IAAI,sBAAxE,qDAAL,OAEA,wGACA,sDACA,8EACA,gEACA,uBAAKH,UAAU,SAAf,UACE,oCAAM,gDAAN,OACA,oCAAM,2CAAN,UAEF,sEACA,oEACA,8CACA,gDAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,iFACA,uBAAKA,UAAU,SAAf,UAEE,sBAAKA,UAAU,KAAf,4BACA,sBAAKA,UAAU,SAAf,SACE,uCAGF,sBAAKA,UAAU,KAAf,4BACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,oBAAGC,KAAK,+BAA+BC,OAAO,SAASC,IAAI,sBAA3D,oFAAL,OACA,4HACA,qGACA,wDACA,8DAA+B,gHAA/B,OACA,sBAAKH,UAAU,SAAf,SACE,kGAEF,0DAA2B,uEAA3B,OACA,2DAA4B,6GAA5B,OACA,yDAA0B,uEAA1B,OACA,4DAA6B,6EAA7B,kBAQR,sBAAKA,UAAU,SAAf,SACE,qCACE,+DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,6GACA,oDACA,gDAAiB,+LAAjB,kBAOR,sBAAKA,UAAU,SAAf,SACE,qCACE,kEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,uDAAwB,uIAAxB,OACA,6DACA,oCAAK,oBAAGC,KAAK,oEAAoEC,OAAO,SAASC,IAAI,sBAAhG,gDAAL,OACA,mDACA,oGAEA,0DACA,4CACA,oDACA,2CACA,wCAGF,qBAAIH,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,sBAAKA,UAAU,SAAf,SACE,qCACE,yFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,yDACA,uBAAKA,UAAU,SAAf,UACE,oDAAqB,kHAArB,OACA,mEACA,2CAIJ,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDASZ,sBAAKA,UAAU,SAAf,SACE,mCACE,uFAIJ,sBAAKA,UAAU,SAAf,SACE,qCACE,oGACA,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,oBAAGC,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAA/D,2DAAL,OACA,2EACA,oCAAK,oBAAGF,KAAK,sDAAsDC,OAAO,SAASC,IAAI,aAAlF,yGAAL,QACA,0FACA,oEACA,iEANF,IAM0C,wBACxC,yDACA,2FACA,yEACA,sLACA,+FACA,uEACA,sGACA,+HACA,+GACA,gIACA,6DAjBF,IAiB4B,wBAC1B,qFACA,gJACA,0JACA,0LAAwC,iHAAxC,OACA,kQACA,+KACA,kIACA,8DACA,kEACA,mIACA,6FACA,yLACA,6FA9BF,IA8ByB,wBACvB,0MACA,wLACA,+KAMR,sBAAKH,UAAU,SAAf,SACE,qCACE,gFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,sDACA,0JACA,uEACA,+DAAgC,6GAAhC,OACA,2DAA4B,sLAA5B,OAEA,qBAAIA,UAAU,KAAd,8FACA,uBAAKA,UAAU,SAAf,UACE,oCAAK,oBAAGC,KAAK,4CAA4CC,OAAO,SAASC,IAAI,sBAAxE,yEAAL,OACA,yJACA,6DAA8B,qHAA9B,OACA,uDACA,oEACA,2DAA4B,0LAA5B,OACA,8JAA+H,kOAA/H,QACA,yHAA0F,wJAA1F,OACA,iEACA,oDAAqB,oPACnB,uBAAKH,UAAU,SAAf,UACE,sEACA,gEACA,oCAAK,oBAAGC,KAAK,oFAAoFC,OAAO,SAASC,IAAI,sBAAhH,4IAAL,OACA,yJAAwE,wLACtE,uBAAKH,UAAU,SAAf,UACE,sFACA,yDACA,2KAAuD,iOAAvD,QACA,sKACA,8JACA,sJAA4C,mQAA5C,aAGJ,oEACA,8IACA,yFAA0D,4QAA1D,OACA,4FACA,4EACE,uBAAKA,UAAU,SAAf,UACE,2CACA,wFACA,uEACA,8CACA,iDACA,+EAAgD,iGAAhD,OACA,+FACA,gFACA,gFACA,4GACA,4HACA,gFACA,oEACA,8CACA,+CACA,8CACA,qEAGJ,wDACA,iEACA,sDAAuB,4HAAvB,aAGJ,mFACE,uBAAKA,UAAU,SAAf,UACE,oCAAM,iCAAN,OACA,oCAAM,mCAAN,OACA,oCAAM,sCAAN,OACA,oCAAM,sCAAN,OACA,oCAAM,mCAAN,OACA,oCAAM,wHACJ,gKADF,aAIJ,iGACE,uBAAKA,UAAU,SAAf,UACE,oCAAM,uGACJ,oCAAM,kFAAN,UAEF,oCAAM,eAAN,aAGJ,iEACA,wCAGF,+EACA,yFAAuB,qGAAvB,OAEA,qBAAIA,UAAU,KAAd,sDACA,uBAAKA,UAAU,SAAf,UACE,iDACA,wDACA,wDACA,kDACA,gDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,2EACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,oDACA,+CACA,iNAEA,6JACA,mJACA,kMACE,oCAAK,oBAAGC,KAAK,mDAAmDC,OAAO,SACrEC,IAAI,sBADD,wEAAL,OAEA,oCAAK,oBAAGF,KAAK,2FACXC,OAAO,SAASC,IAAI,sBADjB,+DAAL,UAGF,8DACA,sLACA,wIAEA,+DACA,oHACA,yCACA,iDACA,oOAEA,uDACA,gEACA,+EACA,+DACA,yEACE,uBAAKH,UAAU,SAAf,UACE,wLACA,wHACA,uHACA,sIACA,uEAGJ,8EACE,sBAAKA,UAAU,SAAf,SACE,oLAGJ,iEACE,sBAAKA,UAAU,SAAf,SACE,mJAGJ,2HACA,kNACA,wLACA,kEACE,uBAAKA,UAAU,SAAf,UACE,oCAAM,kBAAN,yEACA,oCAAM,+CAAN,uEACA,+HACA,oCAAM,uBACJ,0EACA,8DACA,oDACA,2EACA,8DACA,6EACA,8DACA,gEAEF,oCAAM,aAAN,aAGJ,6DACA,yEACE,0IACA,8FACA,6FACA,6EAEF,8DACA,iIACA,qCACA,wCAGF,qBAAIA,UAAU,KAAd,yCACA,uBAAKA,UAAU,SAAf,UACE,qCACA,qCACA,gDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,wJACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,sDAAuB,kHAAvB,OAEA,qBAAIA,UAAU,KAAd,+EACA,2DAA4B,yEAA5B,OACA,0DAA2B,yEAA3B,OACA,4DAA6B,+EAA7B,OACA,yDAA0B,yEAA1B,OACA,2DAA4B,sFAA5B,OACA,6CAAc,yEAAd,OACA,wDAAyB,yEAAzB,OACA,wDAAyB,+GAAzB,OAEA,qBAAIA,UAAU,KAAd,+CACA,+DAAgC,sFAAhC,OACA,0DAA2B,+EAA3B,OACA,gFACA,yFAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,iFACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uHACA,8IACA,4HACA,mFANF,IAM6C,wBAC3C,oCAAM,mBACJ,oCAAM,iBAAN,IAAwB,8KAAxB,OACA,oCAAM,kBAAN,MAA2B,6FAC3B,oCAAM,yBAAN,MAAkC,uFAClC,oCAAM,cAAN,MAAuB,yFACvB,oCAAM,gBAAN,MAAyB,8FACzB,oCAAM,kCAAN,MAA2C,uGAA3C,OACA,oCAAM,6BAAN,MAAsC,2KAExC,oCAAM,KAAN,OAhBF,IAgBoB,wBAClB,6DACA,4GACE,sDACA,sDACA,6CACA,kFACA,sHACA,0DACA,gHACA,2CACA,yDACA,qCACA,kHACA,+DACA,wDAMR,sBAAKA,UAAU,SAAf,SACE,qCACE,mGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,uOACA,0HACA,0HACA,gIACA,uJACA,uGACA,qJACA,oQACA,8IACA,iJACA,yFACA,4GACA,yLACA,qCAhBF,IAgBc,wBACZ,yGACA,6DACA,8LACA,sFAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,iGACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,2DACA,sDACA,iIACA,4DACA,mDACA,4MACA,yFACA,+DAEA,qBAAIA,UAAU,KAAd,2DACA,8EAA+C,8KAA/C,OACA,oCAAM,IACJ,kDACA,oCAAM,IACJ,iEACA,2JACA,sEAEF,oCAAM,IAAN,QACA,iEAAkC,sIAAlC,OACA,sEAAuC,kHAAvC,OACA,sFAAuD,8FAAvD,QACA,yEAA0C,4FAA1C,OACA,8DAA+B,6JAA/B,QACA,2DAA4B,+SAA5B,WAEF,oCAAM,IAAN,gBAKN,8BACE,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,sCAEA,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,KAAd,yCACA,wBAAMA,UAAU,SAAhB,UACE,qFACE,4EAA8C,aAA9C,sBAA+E,IAA/E,mBAEF,kEACA,iEACA,yDACA,2DACA,+HACE,qCAAM,oBAAGC,KAAK,oCAAoCC,OAAO,SAASC,IAAI,wBAAtE,uCAEF,mEACA,0HACA,6DACA,+EACA,yCAAW,KAAX,8DACA,kEACA,2EACA,uFACA,uDACA,wFACA,iEACA,oHACA,wFACA,kDACA,yDACA,sCACA,iDAMR,uBAAMH,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,iEAEA,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,KAAd,wEACA,wBAAMA,UAAU,SAAhB,UACE,sHACA,0WAEA,gFACA,yKACE,0GACA,2GACA,6LACA,+GAEF,6EACA,8DACA,8HACA,wIACA,iEACA,gFACE,wQACA,mKACA,4KACA,+DACA,wEACA,wCAEF,iEACE,wBAAMA,UAAU,SAAhB,UACE,0GACA,iFACA,yFACA,uFAGJ,4DACA,0DACA,oCAAK,oBAAGC,KAAK,qCAAqCC,OAAO,SAASC,IAAI,wBAAtE,+DACA,uHACA,qEACA,2HACA,gEACA,kDACA,4IACA,0HACA,4EACE,wBAAMH,UAAU,SAAhB,UACE,4IACA,oHACA,4IAGJ,4DACA,iDACA,6DACA,8IACA,qIACA,gDAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,0CAA0C,2CAE1C,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,KAAd,6BACA,wBAAMA,UAAU,SAAhB,UACE,uDACE,0EACA,+DAAgC,4EAAhC,OACA,8DACA,0CAAW,4DAAX,OACA,6GACA,yCACA,qCACA,wCAEF,wCAGF,qBAAIA,UAAU,KAAd,yCACA,wBAAMA,UAAU,SAAhB,UACE,+EACA,gDAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,iDACA,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,KAAd,sDACA,wBAAMA,UAAU,SAAhB,UACE,uDACE,oCAAK,oBAAGC,KAAK,wCAAwCC,OAAO,SAAvD,oDAAL,uJAEA,mGACA,sDACA,+EACA,iDACA,iDACA,qJACA,iKACA,oCAAK,4HAAL,OACA,sKACA,gOACA,8HACA,+HACA,4LACA,yGACA,uIACA,+zBAKF,qCACA,gDAOR,uBAAMF,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,kDACA,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,KAAd,yCACA,wBAAMA,UAAU,SAAhB,UACE,sFACA,wCAGF,qBAAIA,UAAU,KAAd,6BACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,0BAASA,UAAU,SAAnB,qDAEA,wBAAMA,UAAU,SAAhB,UACE,qBAAIA,UAAU,KAAd,6BACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,oBAAGC,KAAK,2CAA2CC,OAAO,SAASC,IAAI,sBAAvE,uDAAL,OAEA,4KACA,uDACA,iDACA,kGACA,wEACA,gEACA,6LACE,sFACA,2DAEF,oEACA,wJACA,sDACA,iLACA,sKACA,uEACA,kEACA,yCACA,8NACA,0DACE,oOAEF,kEACA,wDACA,wDACA,sKACA,6EACA,sJACA,wJACA,6JACA,+KACA,2JACE,yDACA,mDACA,oCAAK,qBAAIH,UAAU,KAAd,4CACH,wBAAMA,UAAU,SAAhB,UACE,gDACA,2FACA,wCACE,yDAEF,wCACE,iFACA,2DAEF,uCAVF,IAUgB,wBACd,oCAAM,oCAAN,OACA,wCACE,gFAEF,oCAAM,sCAAN,OACA,wCACE,gFAEF,wCACE,iFAEF,uCAtBF,IAsBgB,wBACd,8DAIN,2DACA,iDACA,yDCpnCHmN,GAxKI,SAACpN,GAEhB,OACI,qCACI,sBAAKC,UAAU,eAAf,SACI,wBAAMA,UAAU,SAAhB,UAEI,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,uCAAiD,oBAAGI,KAAK,oBAAoBC,MAAO,CAAEC,WAAY,UAAjD,iCAAjD,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gDACA,wBAAMA,UAAU,SAAhB,UACI,wSACA,0PAGJ,uBAAMA,UAAU,UAAhB,iFACA,uBAAMA,UAAU,SAAhB,SACI,uCAGJ,uBAAMA,UAAU,UAAhB,kCACA,wBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,QAAd,wNACA,qBAAIA,UAAU,SAAd,2BAOhB,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gDACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,wBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,iFACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,uBAAMA,UAAU,UAAhB,kCACA,wBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,QAAd,gBACA,qBAAIA,UAAU,SAAd,wBAMZ,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gDACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,wBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,iFACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,uBAAMA,UAAU,UAAhB,kCACA,wBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,QAAd,gBACA,qBAAIA,UAAU,SAAd,wBAMZ,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gDACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,wBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,iFACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,uBAAMA,UAAU,UAAhB,kCACA,wBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,QAAd,gBACA,qBAAIA,UAAU,SAAd,wBAMZ,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gDACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,wBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,iFACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,uBAAMA,UAAU,UAAhB,kCACA,wBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,QAAd,gBACA,qBAAIA,UAAU,SAAd,wBAMZ,uBAAMA,UAAU,SAAhB,SACI,qCACI,2BAASA,UAAU,SAAnB,qBAA+B,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA/B,OACA,wBAAMN,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,gDACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,wBAAMA,UAAU,SAAhB,UACI,uBAAMA,UAAU,UAAhB,iFACA,uBAAMA,UAAU,SAAhB,SACI,0CAIR,uBAAMA,UAAU,UAAhB,kCACA,wBAAMA,UAAU,SAAhB,UACI,qBAAIA,UAAU,QAAd,gBACA,qBAAIA,UAAU,SAAd,gCC0OjBoN,GAtYU,SAACrN,GAExB,OACE,qCACE,sBAAKC,UAAU,eAAf,SACE,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qFAA6C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAA7C,OACA,wBAAMN,UAAU,SAAhB,UAEE,uBAAMA,UAAU,UAAhB,4BACA,uBAAMA,UAAU,SAAhB,SACE,wCAGF,uBAAMA,UAAU,UAAhB,2BACA,wBAAMA,UAAU,SAAhB,UACE,qHACA,kGACE,6DACA,yDACA,4DACA,6DACA,0DACA,kEAEF,wCAGF,uBAAMA,UAAU,UAAhB,sDACA,uBAAMA,UAAU,SAAhB,SACE,kLAGF,uBAAMA,UAAU,UAAhB,2FACA,uBAAMA,UAAU,SAAhB,SACE,6YAIF,uBAAMA,UAAU,UAAhB,qFACA,wBAAMA,UAAU,SAAhB,UACE,mHACA,yPACA,uEACA,kPACA,gNAGF,uBAAMA,UAAU,UAAhB,oHACA,uBAAMA,UAAU,SAAhB,SACE,iOAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,kCAAkC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACE,0PACA,2PAGF,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACE,qCAAO,uBAAP,mCACA,qCAAO,wBAAP,4FACA,qCAAO,yBAAP,yEACA,qCAAO,wBAAP,4FACA,qCAAO,yBAAP,4EAGF,uBAAMA,UAAU,UAAhB,+GACA,wBAAMA,UAAU,SAAhB,UACE,mFACA,+FAGF,uBAAMA,UAAU,UAAhB,oLACA,uBAAMA,UAAU,SAAhB,SACE,mEAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,8CAAoC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAApC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,qDACA,wBAAMA,UAAU,SAAhB,UACE,qCAAO,EAAP,OAAc,EAAd,OAAqB,EAArB,6JACA,qCAAO,MAAP,oDACA,qCAAO,MAAP,4DACA,qCAAO,MAAP,2DACA,qCAAO,+CAAP,2FACA,qCAAO,wBAAP,2FACA,qCAAO,OAAP,UACA,qCAAO,OAAP,mDACA,qCAAO,OAAP,4DACA,qCAAO,OAAP,4HACA,qCAAO,OAAP,kGACA,qCAAO,oCAAP,kEACA,qCAAO,qBAAP,sDACA,qCAAO,+CAAP,2FACA,qCAAO,4CAAP,gIACA,qCAAO,2CAAP,uIACA,qCAAO,2CAAP,yKACA,qCAAO,uDAAP,2HACA,qCAAO,wDAAP,2HACA,qCAAO,uDAAP,4HACA,qCAAO,wDAAP,0HACA,qCAAO,0EAAP,8GACA,qCAAO,2EAAP,kGACA,qCAAO,2EAAP,mIACA,qCAAO,2EAAP,sIAGF,uBAAMA,UAAU,UAAhB,2FACA,uBAAMA,UAAU,SAAhB,SACE,2HAGF,uBAAMA,UAAU,UAAhB,uGACA,uBAAMA,UAAU,SAAhB,SACE,qNAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,qDAAsC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,4DACA,wBAAMA,UAAU,SAAhB,UACE,8FACA,wFACA,oGACA,uEACA,qGACA,2EACA,4HACA,4FAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,wCAAmC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAnC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,kDACA,wBAAMA,UAAU,SAAhB,UACE,2DAAc,KAAd,uBAAyB,KAAzB,iCACA,iDACA,qEACA,iDACA,yCACA,iDACA,0CAGF,uBAAMA,UAAU,UAAhB,oDACA,wBAAMA,UAAU,SAAhB,UACE,0CAAY,MAAZ,UACA,uEACA,yCAAW,IAAX,uBACA,qCAAO,IAAP,uBACA,4CAGF,uBAAMA,UAAU,UAAhB,qDACA,wBAAMA,UAAU,SAAhB,UACE,6CACA,+CAGF,uBAAMA,UAAU,UAAhB,6EACA,wBAAMA,UAAU,SAAhB,UACE,0CAAY,kBAAZ,UAA4B,kBAA5B,sBACA,0CAAY,kBAAZ,UAA4B,kBAA5B,2BACA,0CAAY,kBAAZ,UAA4B,kBAA5B,yBACA,0CAAY,kBAAZ,UAA4B,kBAA5B,iCACA,0CAAY,kBAAZ,UAA4B,kBAA5B,uBACA,0CAAY,kBAAZ,UAA4B,kBAA5B,iCACA,oJACA,2IAGF,uBAAMA,UAAU,UAAhB,mHACA,wBAAMA,UAAU,SAAhB,UACE,mIACA,uJACA,uHACA,2IACA,0IACA,uHACA,4IACA,qIACA,+HACA,4IACA,oIACA,oIACA,yIACA,iJACA,iJACA,mKAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,wCAAmC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAnC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,mDACA,wBAAMA,UAAU,SAAhB,UACE,wEACA,uCACA,iDACA,4CAGF,uBAAMA,UAAU,UAAhB,sJACA,wBAAMA,UAAU,SAAhB,UACE,qHACA,sCACA,gDACA,uGACA,oHACA,4CAGF,uBAAMA,UAAU,UAAhB,8CACA,wBAAMA,UAAU,SAAhB,UACE,uDACA,8CAAgB,SAAhB,4BACA,6CAAe,SAAf,eACA,6CAAe,YAAf,iBACA,wEACA,0EACA,8CAAgB,WAAhB,2BACA,2DACA,6HACA,0HAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,kCAAkC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,6DACA,wBAAMA,UAAU,SAAhB,UACE,gGACA,6EACA,wFAGF,uBAAMA,UAAU,UAAhB,4DACA,uBAAMA,UAAU,SAAhB,SACE,iFAGF,uBAAMA,UAAU,UAAhB,sDACA,uBAAMA,UAAU,SAAhB,SACE,8EAGF,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACE,qCAAO,oBAAP,wDACA,qCAAO,qCAAP,kBAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,kCAAkC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAlC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,yCACA,wBAAMA,UAAU,SAAhB,UACE,iEAAoB,IAApB,OACA,iDACA,oCAAM,IAAN,UAGF,uBAAMA,UAAU,UAAhB,yCACA,uBAAMA,UAAU,SAAhB,SACE,sLAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,4BAAsC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAtC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,oFACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAQR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,mCAAmC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAnC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,iEAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,sBAAgC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBAAhC,OACA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,uDC00CHqN,GAnsDK,SAACtN,GACnB,OACE,uBAAKC,UAAU,eAAf,UAEE,sBAAKA,UAAU,SAAf,SACE,qCACE,+GACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,0DACA,qHACA,mFACA,4GACA,8HACA,6CAMN,sBAAKA,UAAU,SAAf,SACE,qCACE,4DACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,+CACA,mGACA,gKACA,0GACA,oEACA,8DACA,qDACA,yFACA,oFACA,iEACA,oIACA,uFACA,sDACA,0IACA,iFACA,8DACA,8FACA,2CACA,wEACA,0DACA,qDAEA,qBAAIA,UAAU,KAAd,oCACA,8DAAW,uBAAMA,UAAU,UAAhB,kCAAX,OACA,2EAAc,uBAAMA,UAAU,UAAhB,mCAAd,QACA,+DAAY,uBAAMA,UAAU,UAAhB,4BAAZ,OACA,+DAAY,uBAAMA,UAAU,UAAhB,sCAAZ,OACA,iFAAe,uBAAMA,UAAU,UAAhB,2CAAf,OACA,oEAAY,uBAAMA,UAAU,UAAhB,qCAAZ,OACA,0EAAa,uBAAMA,UAAU,UAAhB,wCAAb,OACA,8DAAW,uBAAMA,UAAU,UAAhB,uCAAX,OACA,4EAAe,uBAAMA,UAAU,UAAhB,2CAAf,OACA,4EAAe,uBAAMA,UAAU,UAAhB,0CAAf,OACA,8DAAW,uBAAMA,UAAU,UAAhB,6BAAX,OACA,0FAAmB,uBAAMA,UAAU,UAAhB,6BAAnB,OACA,+MAAyC,uBAAMA,UAAU,UAAhB,4BAAzC,OACA,qCAAM,uBAAMA,UAAU,UAAhB,iBAAN,OACA,qCAAM,uBAAMA,UAAU,UAAhB,iBAAN,OACA,qCAAM,uBAAMA,UAAU,UAAhB,iBAAN,OACA,qCAAM,uBAAMA,UAAU,UAAhB,iBAAN,OAIA,qBAAIA,UAAU,KAAd,2DACA,oCAAK,oBAAGC,KAAK,yCAAyCC,OAAO,SAASC,IAAI,sBAArE,4BAAL,OACA,qCACA,sFACE,uBAAKH,UAAU,SAAf,UACE,2CAAa,IACX,yDACA,8DACA,iEAAkC,qLAAlC,OACA,+CAAiB,IACf,gFAAiD,gEAAjD,OACA,0EAA2C,gEAA3C,OACA,yFAAsC,sEAAtC,UAEF,oCAAM,IAAN,UAEF,oCAAM,IAAN,qBAUV,sBAAKA,UAAU,SAAf,SACE,qCACE,kEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,wEACA,uSACA,qXACA,kPACA,wIACA,gSACA,yKAEA,qBAAIA,UAAU,KAAd,uEACA,0GACA,0HACA,gMACA,wHACA,0KACA,kMACA,yOAKN,sBAAKA,UAAU,SAAf,SACE,qCACE,uEACA,uBAAKA,UAAU,SAAf,UAEE,qBAAIA,UAAU,KAAd,yCACA,kDAAmB,wEAAnB,OACA,uIACA,mDACA,oDACA,kDAAmB,wEAAnB,OACA,kEACA,0EACA,gDACA,+FACA,+DACA,kDACA,sDAAuB,iFAAvB,OACA,8HACA,uIACA,6EAA8C,4DAA9C,OACA,2OACE,uBAAKA,UAAU,SAAf,UACE,oDACA,mEACA,+DACA,oJAA+C,2JAA/C,aAGJ,iEAAmB,sGAAnB,OACA,qCA3BF,IA2Bc,wBACZ,2EACA,mEACA,0EACA,uFACA,qCAEA,qBAAIA,UAAU,KAAd,mCACA,8BACE,uBAAKA,UAAU,SAAf,UACE,qBAAIA,UAAU,KAAd,4BACA,sBAAKA,UAAU,SAAf,SACE,oDAUZ,wBAAMA,UAAU,SAAhB,UAEE,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,kCAAuC,uCACrC,oBAAGI,KAAK,qBAAWC,MAAO,CAAEC,WAAY,UAAxC,kCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,+CACA,wBAAMA,UAAU,SAAhB,UACE,qCAAM,4CACJ,0HACE,yGACF,uDAAwB,uEAAxB,OACA,2DAA4B,uFAC5B,0DAA2B,6FAC3B,yDAA0B,6FAC1B,4DAA6B,mGAC7B,4DAA6B,6FAC7B,+EAAgD,+FAChD,0DAA2B,gFAC3B,oLACiC,2CACjC,qCAAM,2CACN,qCAAM,8CAER,oCAAK,4CACH,4DACA,2DAA4B,uFAC5B,0DAA2B,6FAC3B,yDAA0B,6FAC1B,4DAA6B,sGAE/B,wCAGF,uBAAMA,UAAU,UAAhB,2DACA,wBAAMA,UAAU,SAAhB,UACE,kDAAmB,+IACnB,oDAAqB,uKACrB,4HACA,sDAAuB,4JACvB,8DAA+B,gHAC/B,uDAAwB,gHACxB,oDAAqB,8FACrB,wCAGF,uBAAMA,UAAU,UAAhB,+CACA,wBAAMA,UAAU,SAAhB,UACE,gEACE,uBAAKA,UAAU,SAAf,UACE,oCAAK,uBAAMA,UAAU,UAAhB,qDAAL,OACA,iHACA,2CAGJ,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,gCAAqC,uCACnC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,6CACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,2CACH,0DACA,4DAA6B,4GAA7B,OACA,6DAA8B,wCAA9B,OACA,gIAAqC,wCAArC,OACA,+EACA,+EACA,0DACA,uOACA,sLACA,gLACA,4MACA,4HACA,qCACA,wCAEF,oCAAK,2CACH,wCAEF,qCACA,qCACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,gCAAqC,2HACnC,oBAAGI,KAAK,mBAASC,MAAO,CAAEC,WAAY,UAAtC,gCADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACE,mFACA,uDACE,sLACA,oCAAK,yEAAL,IAA4B,6IAC1B,oCAAK,4DACH,4KACA,+IACA,oIACA,2KACA,2MACA,sMACA,8IAEF,oCAAK,oEACH,kGACA,wGACA,uNACA,mKACA,uLACA,iIACA,yHACA,qGACA,gHACA,4EACA,qJAGJ,wCAEF,qJACA,wCAGF,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,4FACH,oEACA,sDACE,uBAAMA,UAAU,SAAhB,SACE,2CACE,sDAAwB,WAAxB,oGACA,yDAA2B,YAA3B,4DACA,sFACA,0OACA,yKACA,+LACA,gDAAkB,YAAlB,0EACA,mLACA,6HAEA,uDAAyB,IAAzB,KAA+B,6DAC7B,sHACA,wEACA,iDAAmB,UAAnB,QACA,mDAAqB,mBAArB,iGAEF,oCAAM,KAAN,OACA,oEAAsC,IAAtC,IAA2C,6DACzC,sHACA,4EACA,iDAAmB,UAAnB,WAEF,oCAAM,KAAN,OACA,uDAAyB,IAAzB,IAA8B,wGAC5B,iDACA,6DACA,2CAAa,mBAAb,QACA,+DAEF,oCAAM,KAAN,OACA,wKAIN,kDACA,yMACE,wBAAMA,UAAU,SAAhB,UACE,gCACE,2CACA,uBAAMA,UAAU,QAAhB,qBAEF,gCACE,wCACA,uBAAMA,UAAU,QAAhB,mBACA,uBAAMA,UAAU,QAAhB,iBACA,uBAAMA,UAAU,QAAhB,qBACA,wBAAMA,UAAU,QAAhB,qCAAgD,mKAGlD,gCACE,mDACA,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,QAAhB,kBACA,wBAAMA,UAAU,QAAhB,gBAA2B,2JAE7B,gCACE,mDACA,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,QAAhB,kBACA,wBAAMA,UAAU,QAAhB,mBAA8B,uHAEhC,gCACE,mDACA,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,QAAhB,iBACA,wBAAMA,UAAU,QAAhB,4BAAuC,gJAAvC,UAEF,gCACE,mDACA,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,QAAhB,iBACA,wBAAMA,UAAU,QAAhB,4BAAuC,qIAAvC,UAEF,gCACE,mDACA,uBAAMA,UAAU,QAAhB,mBACA,uBAAMA,UAAU,QAAhB,iBACA,wBAAMA,UAAU,QAAhB,4BAAuC,qIAAvC,UAEF,gCACE,4FACA,uBAAMA,UAAU,QAAhB,8CACA,uBAAMA,UAAU,QAAhB,iBACA,wBAAMA,UAAU,QAAhB,oEAAsD,8HAAtD,UAEF,gCACE,0CACA,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,QAAhB,iBACA,wBAAMA,UAAU,QAAhB,4BAAuC,+GAAvC,gBAIN,oEACA,6EACA,8KACA,oCAAK,0JACH,wBAAMA,UAAU,SAAhB,UACE,2GACA,oLAIJ,ucAEA,4DACA,4DACA,+EAGF,oCAAK,0CACH,qCACA,wCAEF,oCAAK,2CACH,2CAIJ,uBAAMA,UAAU,UAAhB,yDACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,mFACH,+CACA,qDACA,iMACA,mIACA,uPACA,6KACA,kJAEF,wCAGF,uBAAMA,UAAU,UAAhB,gCACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,oGACH,mFACA,4GACA,mHACA,qJACE,sLACA,wLAEF,wHACA,oHACE,6HACA,wCAEF,wCAEF,gDAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,gCAAqC,uCACnC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,6CACA,wBAAMA,UAAU,SAAhB,UACE,0DACA,kJACA,gFACA,wCAGF,uBAAMA,UAAU,UAAhB,4CACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,2CACH,0GACA,oIACA,qGACA,wHACA,wJACA,6DACA,4DACA,6DACA,iEACA,2DACA,+DACE,sHAEF,iDAEF,oCAAK,gEACH,qHACA,iIACA,4EACA,wFACA,wDACA,uDACA,8DACA,wCAEF,oCAAK,qCACH,wCAEF,wCAGF,uBAAMA,UAAU,UAAhB,yDACA,wBAAMA,UAAU,SAAhB,UACE,6FACE,6HACA,oHACA,sLACA,qKACA,iJACA,qHACA,oHACA,4GACA,yHACA,uLACA,oIAEF,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,iCAAsC,uCACpC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,8CACA,wBAAMA,UAAU,SAAhB,UACE,qMACA,uRACA,8PACA,uLACA,8KACA,8DACE,wDACA,+QACA,2CAIJ,uBAAMA,UAAU,UAAhB,uCACA,wBAAMA,UAAU,SAAhB,UACE,2FACA,6LACA,4JACE,sLACA,iRAEF,2KACE,0KACA,0QACA,gMAEF,gNACE,0QACA,wVAEA,yRACA,6DAAgB,IAAhB,UAA4B,IAA5B,oCAAmD,IAAnD,UAA+D,IAA/D,gBAEF,+MACE,sOAEF,wCAGF,uBAAMA,UAAU,UAAhB,8CACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,2CACH,+IACA,gVAFF,IAGyF,wBACvF,mGACA,gJACA,mGACE,4GACA,mFACA,qTAEA,0KACA,uHAEF,+DACA,uDACA,uDAAyB,IAAzB,6DACA,2DAA6B,IAA7B,yDACA,2DAA6B,IAA7B,yDACA,2DAA6B,IAA7B,yDACA,2DAA6B,IAA7B,yDACA,2DAA6B,IAA7B,yDACA,2DAA6B,IAA7B,yDAtBF,IAsBmE,wBAEjE,oCAAK,qEAAL,OACA,iOAEA,uIACA,iJACA,uNACA,iDACA,0DACA,mHAhCF,IAgCqC,wBACnC,oCAAK,qEAAL,OACA,0GACE,+GAEF,uDACA,iDACA,0DAvCF,IAuCmC,wBAEjC,oCAAK,qEAAL,OACA,qHACA,0IACA,uDACA,iDACA,0DA9CF,IA8CmC,wBAEjC,oCAAK,qEAAL,OACA,+HACA,0IACA,uDACA,iDACA,0DArDF,IAqDmC,wBAEjC,oCAAK,yEAAL,OACA,2GACA,2GACA,0IACA,0IACA,sHACA,yGACA,wDACA,kDA/DF,IA+D2B,wBACzB,iGAhEF,IAgEuC,wBACrC,4DAjEF,IAiEqC,wBAEnC,2QACA,oLACA,iDACE,+MACA,uEACA,0EAEF,+IACA,6KAEA,iEACA,iEACA,iEACA,qDACA,oLACA,qRACA,oOACA,gIACA,uHACA,6CACA,kDACE,oQAEF,uMACA,qDACA,2DACA,2DACA,2DACA,6KACA,wDACA,wDACA,gJACA,2DAA6B,IAA7B,oBACA,2DAA6B,IAA7B,oBACA,2DAA6B,IAA7B,oBACA,oDACA,kEACA,0GACA,kEACA,0GACA,kDACE,oHAEF,kGACA,qCACA,qCACA,qCACA,qCAlHF,IAkHc,2BAEd,oCAAK,2CACH,wCAEF,oCAAK,qCACH,wCAEF,wCAGF,uBAAMA,UAAU,UAAhB,8CACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,2CACH,yCACA,4KACA,8CACA,2CACA,qFACA,oDACA,2CACA,kIACA,4FACA,0DACA,qEACA,wHACA,sEACA,sEACA,sEACA,sEACA,sEACA,sEACA,sEACA,wCAEF,oCAAK,2CACH,2CAIJ,uBAAMA,UAAU,UAAhB,0DACA,wBAAMA,UAAU,SAAhB,UACE,qCACA,gDAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,iCAAsC,uCACpC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,sDACA,wBAAMA,UAAU,SAAhB,UACE,oKACA,0JACA,wEACA,yFACA,8HACA,6KACA,yHACA,wCAGF,uBAAMA,UAAU,UAAhB,sDACA,wBAAMA,UAAU,SAAhB,UACE,oCAAK,gGACH,wBAAMA,UAAU,SAAhB,UACE,kDACA,0FACE,6CACA,uFACA,0DACA,qEACA,+FACA,+DAEF,uEACA,4DACA,iDACE,6CACA,uFACA,0DACA,qEACA,gGACA,sJAlBJ,IAmBQ,wBACN,oCAAK,2EAAL,OACA,wBAAMA,UAAU,SAAhB,UACE,gFADF,IACyD,wBACvD,4DACE,qFACA,gIAJJ,IAKQ,wBACN,+DANF,IAMwC,wBACtC,+FACE,kFACA,kFACA,oFAVJ,IAWQ,wBACN,oCAAM,oDAAN,0EACA,qDACA,qGACA,uJAfF,IAe+D,wBAC7D,gIACE,gHAjBJ,IAkBQ,wBACN,uEACE,iLACA,oIACA,6GAtBJ,IAuBQ,wBACN,uEACE,+OAzBJ,IA0BQ,wBACN,oDACE,iHA5BJ,IA6BQ,wBACN,iEACE,oHA/BJ,IAgCQ,wBACN,6DACE,8DAlCJ,IAmCQ,wBACN,uIACE,iHArCJ,IAsCQ,wBACN,oDACA,2EACA,4DACA,+DACA,8DACA,2DACA,8DACA,6DACA,+KACA,qFACA,8DACA,qHACA,sGAnDF,IAmD6B,iCAIjC,oCAAK,qDACH,wBAAMA,UAAU,SAAhB,UACE,oCAAK,2EAAL,OACA,+DACA,gFAHF,IAGyD,wBACvD,4DACE,sFACA,+HANJ,IAOQ,wBACN,uDACE,mDACA,oDACA,wDAXJ,IAYQ,wBACN,oCAAM,qDAAN,OACA,gEACA,gIACE,gHAhBJ,IAiBQ,wBACN,uEACE,iLACA,oIACA,6GArBJ,IAsBQ,wBACN,uEACE,qQAxBJ,IAyBQ,wBACN,oDACE,kHA3BJ,IA4BQ,wBACN,iEACE,qHA9BJ,IA+BQ,wBACN,6DACE,+DAjCJ,IAkCQ,wBACN,uIACE,oJApCJ,IAqCQ,wBACN,kDACA,yEACA,+DACA,8DACA,8DACA,6DACA,iEACA,4EACA,8DACA,iIACA,2CAhDF,IAgDe,wBACb,iGACA,0GACE,wBAAMA,UAAU,SAAhB,UACE,2DACA,gFACA,oEACA,0FAEF,wBAAMA,UAAU,SAAhB,UACE,oEACA,iFACA,4DACA,4GACA,kIACA,iEANF,IAM2B,wBACzB,2IACE,mKACA,+LAIN,gOACE,wBAAMA,UAAU,SAAhB,UACE,yDACA,+EACA,oEACA,0FAEF,wBAAMA,UAAU,SAAhB,UACE,oEACA,mFACA,4DACA,4GACA,kIACA,+DANF,IAMyB,wBACvB,wIACE,mJACA,+LAIN,uIACA,iQACA,kFACA,2CAGJ,wCAGF,uBAAMA,UAAU,UAAhB,kEACA,uBAAMA,UAAU,SAAhB,SACE,uCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAOR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,0DAAgD,uCAC9C,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,gBACA,wBAAMA,UAAU,SAAhB,UACE,sIACA,uMACA,wDACA,oLACA,yLACA,iEACE,uBAAKA,UAAU,SAAf,UACE,8FACA,oCAAK,oBAAGC,KAAK,+DACXC,OAAO,SAASC,IAAI,sBADjB,sEAAL,OAFF,IAG8E,wBAC5E,wLACA,oCAAM,4BACJ,oCAAM,6BAAN,OACA,oCAAM,gDAAN,OACA,oCAAM,uBAAN,gDACA,oCAAM,qBAAN,gDACA,oCAAM,0BAAN,mFAEF,oCAAM,iBAAN,aAGJ,4EACA,0DACA,iDACA,wLACA,0LAEA,2CACA,mNACE,uBAAKH,UAAU,SAAf,UACE,qGACA,oOACA,8HACE,4DACA,qGACA,sHAIN,+KACA,kDACA,0KACA,gQAEA,mEACA,6OACA,sMACA,+FACE,uBAAKA,UAAU,SAAf,UACE,kDACA,2DACA,oCAAM,6BAAN,OACA,8CACA,qDAGJ,kDACA,mVA1DF,IA2DkD,wBAChD,2LACE,yDACA,kEACA,uFACA,uDACE,uBAAKA,UAAU,SAAf,UACE,kDACA,2DACA,oCAAM,sCAAN,OACA,8CACA,qDAGJ,kDACA,8GACE,sBAAKA,UAAU,SAAf,SACE,4EAA8C,IAA9C,WAA2D,IAA3D,sBAAmF,IAAnF,qBAGJ,8GACA,sHACA,wKACE,mHAEF,qHACA,qCACA,wCAEF,oCAAK,sBAAKA,UAAU,UAAf,oHAAL,OACA,kNACA,mDACA,8CACE,uBAAKA,UAAU,SAAf,UACE,gDACA,gMACA,kMACA,gFAAiD,aAAjD,qBAA+E,aAA/E,oEAEA,gFAAiD,aAAjD,qBAA+E,aAA/E,sEAEA,qRAGA,wDAIJ,sDACA,iEACA,wCAGF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAQR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,gCAAqC,uCACnC,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACE,8KACA,kHACA,wCAEF,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACE,4EAA8C,aAA9C,sBAA+E,IAA/E,iBACA,4FAEA,2DACE,8EAAgD,IAC9C,kEACA,uEACA,sFACA,yEACA,oDACA,kDACA,gEACA,+DAEF,oCAAM,IAAN,WAEF,4DACA,0DACE,4FAEF,gHACA,0JACA,yIACA,qDACA,yJACE,0LACA,gKAEF,uCACA,uDACA,iEACA,sDACA,4GACA,wDACA,sDACA,2DACA,6DACA,8FACA,iGACA,yFACA,yEACA,uEACA,+CACE,uBAAKA,UAAU,SAAf,UACE,6JACA,gIACE,mDACA,mGAIN,iLACA,yFACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,4EACA,iEACA,iNAEA,sMACA,8JACA,kJACA,mGACA,2DACE,uBAAKA,UAAU,SAAf,UACE,iGACA,+FACA,wFACA,kKACA,qGACA,yGACA,gKACA,ySACA,qKACA,+NACA,qQACA,kMACA,wGAGJ,gDACA,6CACA,gDACE,uBAAKA,UAAU,SAAf,UACE,0GACA,8CACA,0CACA,0CACA,sDACA,2CACA,mDACA,mDACA,sDACA,mDACA,gDACA,gEACA,yCACA,+CAGJ,8EACE,0HAEF,6DACA,6DACA,6DACA,kIACA,qEAEF,uBAAMA,UAAU,UAAhB,gBACA,uBAAMA,UAAU,SAAhB,SACE,+CAMR,uBAAMA,UAAU,SAAhB,SACE,qCACE,2BAASA,UAAU,SAAnB,+BACE,oBAAGI,KAAK,GAAGC,MAAO,CAAEC,WAAY,UAAhC,gBADF,OAEA,wBAAMN,UAAU,SAAhB,UACE,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACE,0HACA,wCAEF,uBAAMA,UAAU,UAAhB,4BACA,wBAAMA,UAAU,SAAhB,UACE,8DACA,2DACA,+DACE,sBAAKA,UAAU,SAAf,SACE,iIAGJ,+FACA,0DACA,qDACA,gDACA,6CACA,uFACA,2CACA,4CACA,oDACE,uBAAKA,UAAU,SAAf,UACE,gKACA,uGACA,wGACA,oGACA,+JAGJ,6CACE,sBAAKA,UAAU,SAAf,SACE,sFAGJ,4CACE,uBAAKA,UAAU,SAAf,UACE,oCAAM,MAAN,OACA,oDAGJ,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","file":"static/js/main.1f0ef395.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst JavaBasic = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Map </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Map </h2>\r\n            <li> Key와 Value를 가진 집합, 집합이므로 중복 허용x </li>\r\n\r\n            <li> 인터페이스 </li>\r\n\r\n            <h2 className='h2'> 📌 HashMap </h2>\r\n            <li> Map 인터페이스를 상속한 클래스 </li>\r\n            <li> key나 value 값으로 null을 허용한다. </li>\r\n            <li> 해쉬 테이블 사용 </li>\r\n            <li> 해시값을 버킷이라는 곳에 저장해서 사용 </li>\r\n            <li> 자바 1.2부터, thread-safe(x) </li>\r\n\r\n            <h2 className='h2'> 📌 TreeMap </h2>\r\n            <li> Key값들에 대해서 정렬이 이루어진다. </li>\r\n            <li> 이진 트리 기반 </li>\r\n\r\n            <h2 className='h2'> 📌 HashTableMap </h2>\r\n            <li> key나 value 값이 null을 허용하지 않는다. </li>\r\n            <li> 해시값을 버킷이라는 곳에 저장해서 사용 </li>\r\n            <li> thread-safe , 자바 1.0부터 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JVM, JRE JDK </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 JAVA </h2>\r\n            <li> JDK {'>'} JRE {'>'} JVM </li>\r\n\r\n            <h2 className='h2'> 📌 JVM </h2>\r\n            <li> Java Virtual Machine  </li>\r\n            <li> 프로그램을 실행하는 자바 플랫폼 구성요소 </li>\r\n            <li> 자바 소스코드로 만들어지는 자바 바이너리 파일을 실행할 수 있다 </li>\r\n            <li> 바이너리 파일을 읽고, 검증하고, 실행한다. </li>\r\n            <li> 실행환경(런타임, 라이브러리 등)을 제공한다. </li>\r\n            <li> 어떤 기기나 운영체제에서도 운영을 할 수 있게 해준다. </li>\r\n            <li> 메모리를 효율적으로 관리,최적화 해준다. + Garbage Collection </li>\r\n\r\n            <h2 className='h2'> 📌 JRE </h2>\r\n            <li> Java Runtime Environment </li>\r\n            <li> 자바 코드를 실행하기 위한 도구들로 구성된 패키지 </li>\r\n            <li> 라이브러리와 기타 파일들을 가지고 있다. </li>\r\n            <li> Java Class Loader : 자바코드와 라이브러리를 결합하여 JVM에 넘긴다. </li>\r\n            <li> 자바 코드를 작성하는 것이아닌 자바프로그램만 실행시키려면 JRE만 설치해도 가능하다. </li>\r\n\r\n            <h2 className='h2'> 📌 JDK </h2>\r\n            <li> Java Development Kit </li>\r\n            <li> 자바 애플리케이션을 구축하기 위한 핵심 플랫폼 구성요소 </li>\r\n            <li> 자바 기반 소프트웨어를 개발하기 위한 도구들로 이루어진 패키지 </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Enum </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 열거형, 상수 집합, 고정적으로 사용하는 값들을 설정 </li>\r\n            <li> enum객체는 enum클래스를 기본적으로 상속받아서 다른 클래스를 상속받을 수 없다. </li>\r\n\r\n            <h2 className='h2'> 📌 Enum 관련 함수 </h2>\r\n            <li> Enum객체.상수명.toString() 은 상수이름이나온다. </li>\r\n            <li> Enum객체.values() 은 Enum에 있는 인스턴스를 배열에 담아 반환 </li>\r\n            <li> Enum객체.valueOf(\"상수명\") 은 상수명과 일치하는 인스턴스 반환  </li>\r\n            <li> Enum객체[].ordinal() 은 배열로 된 Enum 내부에 상수 인덱스 값 반환 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 enum 예시 </h3>\r\n                <div className='block4'>\r\n                  <li> public enum ResponseApiCode {\"{\"}\r\n                    <li> NONE(0,\"\",\"\") </li> <small> # 하나의 인스턴스로 생성됨, 싱글톤 </small>\r\n                    <li> ,OK(200,\"OK\",\"성공\"); </li> <small> # 하나의 인스턴스로 생성됨, 싱글톤 </small>\r\n                    <li>  </li> <br />\r\n                    <li> private int code; </li>\r\n                    <li> private String type; </li>\r\n                    <li> private String msg; </li>\r\n                    <li>  </li> <br />\r\n                    <li> ResponseApiCode(int code,String type,String msg) {\"{\"}\r\n                      <li> this.code = code; </li>\r\n                      <li> this.type = type; </li>\r\n                      <li> this.msg = msg; </li>\r\n                    </li>\r\n                    <li> {\"}\"} </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> assertThat </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Assert.assertThat(result,`is`(10)) <small> #  </small> </li>\r\n            <li> assertThat(\"값\",`is`(not(startsWith(\"시작값\")))) <small> # 시작값으로 시작하지 않는지 확인</small> </li>\r\n            <li> assertThat(\"값\",`is`(startsWith(\"시작값\"))) <small> # 시작값으로 시작하는지 확인</small> </li>\r\n            <li> <a href=\"https://beomseok95.tistory.com/250\" target=\"_blank\" rel=\"noopener noreferrer\"> 공부 </a> </li>\r\n\r\n            <h2 className='h2'> 📌 설명  </h2>\r\n            <li> Assertions.assertThat(값).isEqualTo(\"값\"); <small> # 값과 원하는 값이 같은지 비교 </small> </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 예시 </h3>\r\n                <div className='block4'>\r\n                  <li> Assert.assertThat(result,`is`(10)) </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className=\"lblock\">\r\n        <div className=\"mtitle\"> <a name=\"자바 문법\"> 자바 문법 </a> </div>\r\n\r\n        <div className=\"block1\">\r\n          <details>\r\n            <summary className='stitle'> 자바\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='block2'>\r\n                <li> 1. 컴파일 기반의 언어 </li>\r\n                <li> 2. 객체 지향 언어, 클래스기반 </li>\r\n                <li> 3. 변수형에 타입을 항상 선언해야한다. (인터프리터 언어에서는 선언을 하지 않고도 사용이 가능하다.) </li>\r\n                <li> 4. 자바는 컴파일 할 때 객체의 참조가 이루어진다. </li>\r\n                <li> 5. 이식성, 보안이 좋음 </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'> 예시 </div>\r\n              <div className='block2'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"출력메소드\">  출력메소드 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small>  </small>\r\n              <li> System.out.println(\"\"); #줄바꿈</li>\r\n              <li> System.out.print(\"\"); </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details>\r\n            <summary className='stitle'> 자료형\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> Primitive Data Type </div>\r\n              <div className='block2'>\r\n                <li> 객체가 아니므로 null값을 넣을수 없다. 만약 넣고 싶다면 Wrapper클래스로 감싸주자! </li>\r\n                <li> byte : 정수형 , 8bits , ( -2^7 ~ 2^7-1  ) </li>\r\n                <li> short : 정수형 , 16bits , ( -2^15 ~ 2^15-1 ) </li>\r\n                <li> int : 정수형 , 32bits , (-2^31 ~ 2^31-1 ) </li>\r\n                <li> long : : 정수형 , 64bits , (-2^63 ~ 2^63-1) </li>\r\n                <li> float : 실수형 , 32bits , ()</li>\r\n                <li> double : 실수형 , 64bits </li>\r\n                <li> char : 문자형 , 16bits , ( 0 ~ 2^15-1 ) </li>\r\n                <li> boolean : 참거짓 , 1bit , (true, false)</li>\r\n                <li> string : 문자열</li>\r\n                <li> LocalDateTime : 날짜 </li>\r\n                <li> 자바에는 C언와 다르게 unsigned가 원래는 존재하지 않았음 , 자바8에서 생김\r\n                  <li> 보기에도 C언어와는 다르게 사용이 불편해 보인다. 필요할때 찾아보자 </li>\r\n                  <li> num = Integer.parseUnsignedInt(\"1234\"); </li>\r\n                  <li> Integer.toUnsignedString(num) <small> # 십진법으로 표기된다. </small> </li>\r\n                  <li> Integer.toUnsignedString(num,2) <small> # 이진법으로 표현됨, 1010.. 이렇게 </small> </li>\r\n                </li>\r\n              </div>\r\n              <div className='sstitle'> Reference Type </div>\r\n              <div className='block2'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"입력메소드\">  입력메소드 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small> import java.util.Scanner; </small>\r\n              <li> Scanner scanner = new Scanner(System.in); </li>\r\n              <li> scanner.nextlnt(); #숫자입력</li>\r\n              <li> scanner.next(); #문자열입력</li>\r\n              <li>  </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"문자열\">  문자열 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small>  </small>\r\n              <li> 문자열.toLowerCase() #모두 소문자로 </li>\r\n              <li> 문자열.toUpperCase() #모두 대문자로 </li>\r\n              <li> 문자열1.equals(문자열2) #2개의 문자열을 비교 </li>\r\n              {/* 기억이 잘안나서 다시 봐야 된다. */}\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n          </details></div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"배열\">  배열 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small>  </small>\r\n              <li> int arr[] = {'{1,2,3}'} </li>\r\n              <li> int arr[][] = {'{1,2,3},{4,5,6}'} </li>\r\n              <li> int arr[][] = new int[2][2]; #배열 선언</li>\r\n              <li> 배열.length #배열의 길이 </li>\r\n              <li> 배열1 = 배열2 #얕은복사 , 원본이 바뀌면 같이 변함 </li>\r\n              <li> 배열.clone() #배열복사 , 깊은복사(원본과 공유x) </li>\r\n              <li> 배열1 = Arrays.copyOf(배열2, 배열2.length) #깊은복사 </li>\r\n              <li> 배열1 = Arrays.copyOfRange(배열2, 시작인덱스, 원하는인덱스) #일정 배열을 깊은복사 </li>\r\n              <li> 2차원 배열을 복사하는 방법은 반복문을 통해서 작업한다. </li>\r\n            </div>\r\n          </details></div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"반복문\">  반복문 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small>  </small>\r\n              <li> for ( int i : 배열) {'{ 코드작성 }'} </li>\r\n              <li> for ( String name : 배열) {'{ 코드작성 }'} </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n          </details></div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details>\r\n            <summary className='stitle'> 클래스\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='block2'>\r\n                <li> 클래스란 속성과 기능을 가지고 있는 데이터 타입 </li>\r\n                <li> class는 실제 동작하는 대상이 아닌 붕어빵의 틀과 같은 존재  </li>\r\n                <li> 실제로 동작하는 대상은 인스턴스(객체)라고 불리는 것이다. </li>\r\n              </div>\r\n              <div className='sstitle'> 예시 </div>\r\n              <div className='block2'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"상속\">  상속 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small>  </small>\r\n              <li> @Override #굳이 선언을 해줄 필요는 없지만 개발자들이 보기 편함 </li>\r\n              <li> extends 부모클래스 </li>\r\n              <li> implements 인터페이스 </li>\r\n            </div>\r\n          </details></div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"랜덤\">  랜덤 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small>  </small>\r\n              <li> rand.nextInt() #랜덤함수 사용 </li>\r\n            </div>\r\n          </details></div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"인터페이스\">  인터페이스 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small> 인터페이스를 상속받은 클래스는 무조건 메소드를 선언해주어야 한다. </small>\r\n              <li> public interface 인터페이스명 {'{'} </li>\r\n              <li> &nbsp;자료형 메소드명(); </li>\r\n              <li> {'}'} </li> <br />\r\n              <li> public class 클래스명 implements 인터페이스명 </li>\r\n            </div>\r\n          </details></div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"캐스팅\">  캐스팅 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small>  </small>\r\n              <li>  </li>\r\n            </div>\r\n          </details></div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"형변환\">  형변환 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small>  </small>\r\n              <li>  </li>\r\n            </div>\r\n          </details></div>\r\n        {/*  */}\r\n\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"함수의 종류\">  함수의 종류</a> </summary>\r\n            <div className=\"sblock\">\r\n\r\n              <li> <a href=\"https://moreget.github.io/dev-00000061-Java-Consumer_Supplier/\" target=\"_blank\"> 참고 사이트 </a> </li>\r\n              <li> Consumer : 매개값은 있고 리턴값은 없음 </li>\r\n\r\n              <li> Supplier : 매개값은 없고, 리턴값은 있음</li>\r\n\r\n              <li> Function : 매개값을 (주로)리턴값으로 반환 </li>\r\n\r\n              <li> Operator : 매개값으로 연산하고 리턴 반환</li>\r\n\r\n              <li> Predicate : 매개값은 있고 리턴은 boolean반환 </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"Assertion\">  Assertion </a> </summary>\r\n            <div className=\"sblock\">\r\n              <li> 코드가 잘 작성되었는지 확인하는데 돕는 기능이다. 예외 처리와 비슷하기는\r\n                하지만 예외처리는 개발자가 생각하지 못한 에러에 대한 처리를 담당하는 것이다.\r\n              </li>\r\n              <li> Assertion은 개발자가 정한 조건을 만족시키면 코드가 실행되고 그 외에는 실행되지\r\n                못하게 하는 차이가 있다.\r\n              </li>\r\n              <li> Assertion을 적당한 위치에 배치시켜 사용하면 좋은 동작을 수행할 수 있다. 반대로\r\n                모든 상황에 적용시키면 좋지 않다.\r\n              </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"자료구조\">  자료구조 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <li> {\"Map<자료형,자료형> Map객체명 = new HashMap<>(); \"}</li>\r\n              <li> 메서드 종류 </li>\r\n              <li>  Map객체.put(키,값)  : 맵객체에 추가 </li>\r\n              <li>  Map객체.keys()  : 객체의 키만 담은 배열 반환 </li>\r\n              <li>  Map객체.values()  : 객체의 값만 담은 배열 반환 </li>\r\n              <li> {\"Collection<String> values = map.values();\"}</li>\r\n              <li> {\"String[] arr = values.toArray(new String[0]);\"}</li>\r\n              <li> {\"List<String> list = new ArrayList<>(values);\"}</li>\r\n              <li> {\"Set<String> set = new HashSet<>(values);\"}</li>\r\n              <li>  Map객체.entries()  : 객체의 [키,값] 담은 배열 반환 </li>\r\n              <li> ArrayList{'<String>'} array = new ArrayList{'<String>();'} #초기에 지정하지 않아도 사용이 가능</li>\r\n              <li> HashMap{'<string>'} hashmap = new HashMap{'<>();'} </li>\r\n              <li>  </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"Enum\">  Enum </a> </summary>\r\n            <div className=\"sblock\">\r\n              <small> 상수들로 만들어진 집합, 열거형 클래스</small>\r\n              <li> enum 클래스를 만들고 사용할 때는 enum클래스.값 , enum클래스[인덱스] 처럼 사용</li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details>\r\n            <summary className='stitle'> Wrapper\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='block2'>\r\n                <li> 박싱(기본타입을 클래스 인스턴스로)과 언박싱의 과정을 거쳐 변경한다.  </li>\r\n                <li> Byte, Short, Integer, Long, Float, Double, Char, Boolean </li>\r\n                <li> wrapper 클래스를 사용하면 ==연산자(주소비교)가 아닌 .equals() 를 사용해서 비교해야 한다. </li>\r\n                <li> Collection에는 객체타입을 이용하므로 유용하게 사용, 자동으로 오토박싱,언박싱이 이때 발생하기도 한다. </li>\r\n                <li> 대체적으로 객체를 사용하는 경우가 많은데 기본 타입으로 처리가 안되는 경우가 있고, 멀티스레딩에서는 객체를 사용한다. </li>\r\n              </div>\r\n              <div className='sstitle'> 예시 </div>\r\n              <div className='block2'>\r\n                <li> Integer num = new Interger(10); , int num1 = num.intValue(); </li>\r\n                <li> Character chr = \"char\"; , char c = chr; <small> # 오토박싱, 언제인지는 기억이 안나지만 new Character(\"char\")로 적지 않아도된다. </small> </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"Generic\">  Generic </a> </summary>\r\n            <small> 자료형 타입을 정해서 사용하는 메소드 </small>\r\n            <div className=\"sblock\">\r\n              <div className=\"sstitle\"> 설명 </div>\r\n              <div className=\"block2\">\r\n                <li> JDK1.5 , Java5에 도입 </li>\r\n                <li>  </li>\r\n                <li> Java SE 7 부터 {'<>'}타입변수가 추측이 가능하면 아래와 같이 생략가능\r\n                  <div className=\"sblock\">\r\n                    <li> {'Test<Integer> test = new Test<>(Integer); '} # Java SE 7 이전 </li>\r\n                    <li> {'Test<Integer> test = new Test<>(); '} # Java SE 7 이후 </li>\r\n                  </div>\r\n                </li>\r\n                <li> 자바 컴파일시에 클래스나 메소드에서 사용할 내부 데이터 타입을 지정 </li>\r\n                <li> 자바 컴파일시 제너릭 타입은 타입 변환이 되고 선언되었던 모든 제너릭타입은 제거가 된다. </li>\r\n                <li className=\"col_be\"> 사용되는 객체의 타입 안정성 증가</li>\r\n                <li className=\"col_be\"> 반환값에 대한 Object객체 타입변환 및 변환검사에 드는 비용을 아낄 수 있음 </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className=\"sstitle\"> 제너릭 클래스 </div>\r\n              <div className=\"block2\">\r\n                <li> public class 클래스명{'<T>'}  </li>\r\n                <li> public class 클래스명{'<T extends 클래스명>'} # 특정 타입만 사용하게 제한   </li>\r\n                <li> public class 클래스명{'<T extends 인터페이스명>'} # 특정 타입만 사용하게 제한   </li>\r\n                <li> public class 클래스명{'<T extends 클래스명 & 인터페이스명>'}    </li>\r\n                <li> 클래스명{'<T>'} 객체명 = new 클래스{'<>'}() </li>\r\n              </div>\r\n              <div className=\"sstitle\"> 제너릭 메소드 </div>\r\n              <div className=\"block2\">\r\n                <li> <h3> 설명 : </h3>\r\n                  <li> 제너릭 클래스의 타입변수와 메소드의 타입변수는 다른 타입변수임  </li>\r\n                  <li> 타입변수의 ?(와일드카드) 는 모든 타입 사용 가능 </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> public static {'<T>'} void 메소드명(T array)  </li>\r\n                <li> public static {'<?>'} void 메소드명(T array) </li>\r\n                <li> public static {'<? extends T>'} void 메소드명(T array) # T타입을 상속받는 것만 가능 </li>\r\n                <li> public static {'<? super T>'} void 메소드명(T array) # T타입이 상속받은 조상클래스 타입만 사용가능 </li>\r\n                <li>   </li>\r\n                <li>   </li>\r\n                <li>   </li>\r\n              </div>\r\n\r\n              <div className=\"sstitle\"> </div>\r\n              <li>  </li>\r\n            </div>\r\n            <div className=\"sblock\">\r\n              <div className=\"sstitle\"> 제너릭 타입변수(임의의 참조형 타입) 종류 </div>\r\n\r\n              <li> E : 요소(Element, 자바 컬렉션)  </li>\r\n              <li> K : 키  </li>\r\n              <li> N : 숫자  </li>\r\n              <li> T : 타입  </li>\r\n              <li> V : 값  </li>\r\n\r\n            </div>\r\n            <div className=\"sblock\">\r\n              <div className=\"sstitle\"> 시큐리티에서 사용하는 제너릭 타입 종류 </div>\r\n\r\n              <li> O : 빌드 하려는 개체의 유형?  </li>\r\n              <li> B : SecurityBuilder의 타입  </li>\r\n              <li>  </li>\r\n\r\n            </div>\r\n            <div className=\"sblock\">\r\n              <div className=\"sstitle\"> Generic WildCard </div>\r\n              <li> {'<?>'} : 모든 타입의 인자를 받을 수 있음  </li>\r\n              <li> {'<? extends 부모클래스>'} : 부모 클래스의 자식 클래스를 인자로 받음,\r\n                하지만 부모클래스의 정의된 기능만 사용가능하다?  </li>\r\n              <li> {'<? super 자식클래스>'} : 자식클래스의 부모클래스를 인자로 받음  </li>\r\n            </div>\r\n            <div className=\"sblock\">\r\n              <div className=\"sstitle\"> Generic example </div>\r\n              <li> ArrayList{'<T>'} array = new ArrayList{'<>'}(); </li>\r\n              <li> 클래스{'<T extends 부모클래스>'} </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"block1\">\r\n          <details> <summary className=\"stitle\"> <a name=\"람다식\">  람다식 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <li> <h3> 설명 : </h3>\r\n                <li> 기존 메소드 표현을 간단하게 표현한 방식 </li>\r\n                <li>   </li>\r\n                <li>  </li>\r\n              </li>\r\n              {/*  */}\r\n              <li> <h3>  메소드 예시 1</h3>\r\n                <div className=\"block2\">\r\n                  <li> <h4> 기존 메소드 방식 </h4>\r\n                    <li> {'for(int i=0; i<10; i++) { '}\r\n                      <li> System.out.println(i); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </li>\r\n                  <li> <h4> 람다 메소드 방식 </h4>\r\n                    <li> IntStream.range(0,10).foreach((int i){'->'} )\r\n                      <li> System.out.println(i) </li>\r\n                    </li>\r\n                    <li> ); </li>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n              {/*  */}\r\n              <li> <h3> 메소드  예시 2</h3>\r\n                <div className=\"block2\">\r\n                  <li> <h4> 기존 메소드 방식 </h4>\r\n                    <li> int add(int x,int y) {'{'}\r\n                      <li> return x+y; </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </li>\r\n                  <li> <h4> 람다 메소드 방식 </h4>\r\n                    <li> {'(x,y)-> x < y ? x : y; '} </li>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n              {/*  */}\r\n              <li> <h3> 1회용 클래스 예시 </h3>\r\n                <div className=\"block2\">\r\n                  <li> <h4> 람다 클래스 방식 </h4>\r\n                    <li> {'new 클래스명(()-> {'}\r\n                      <li> System.out.println(\"\"); </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n              {/*  */}\r\n              <li>  </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n\r\n        <div className=\"block1\">\r\n          <details>\r\n            <summary className='stitle'> volatile\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='block2'>\r\n                <li> CPU cache가 아닌 Main Memory에 변수의 값을 저장하고 읽어들이는 것 </li>\r\n                <li> 멀티쓰레드에서 변수의 값을 일치시켜주기 위해서 사용한다. </li>\r\n                <li> 하지만 volatile로 Main Memory에 직접 값을 넣어주어도 충돌하는 경우가 있다.\r\n                  <li> a1 = a1+1; <small> # 1번 쓰레드 , Main Memory에 저장되기전 </small> </li>\r\n                  <li> a1 = a1+1; <small> # 2번 쓰레드 , Main Memory에 저장되기전 </small> </li>\r\n                  <li> 위의 결과가 발생하면 원하는 결과는 +2가 되야하지만 +1이 될 수도 있다. </li>\r\n                </li>\r\n                <li> volatile은 Main Memory에서 데이터를 가져오기 때문에 비용이 조금 더 비싸다. </li>\r\n              </div>\r\n              <div className='sstitle'> 예시 </div>\r\n              <div className='block2'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className=\"block1\">\r\n          <details>\r\n            <summary className='stitle'> reflection\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='block2'>\r\n                <li> Test1 클래스에는 public int x=1 와 private int y=2 가 있다고 가정 </li>\r\n                <li> Test1 test = new Test1(); </li>\r\n                <li> Class{'<?>'} cls = test.getClass(); <small> # 이와같이 클래스를 제너릭으로 바꾸어준다? </small> </li> <br />\r\n\r\n                <li> getFields 메소드를 이용하면 public 멤버변수에 접근 가능, 클래스의 멤버변수중에 public으로 된 필드를 가져온다.\r\n                  <li> Field publicFields[] = cls.getFields(); <small> # test의 x라는 필드만을 가져온다. </small> </li>\r\n                  <li> publicFields[0].getName() <small> # 필드의 이름 가져오기 </small> </li>\r\n                  <li> publicFields[0].get(test) <small> # 필드의 값 가져오기 </small> </li>\r\n                </li> <br />\r\n\r\n                <li> getDeclaredFields 메소드 : 특정 인스턴스의 멤버 변수, 메소드 등에 접근 가능, private한 멤버변수의 값 수정 불가, 클래스의 멤버변수의 모든 필드를 가져온다.\r\n                  <li> Field allFields[] = cls.getDeclaredFields(); <small> # test의 x,y 필드 모두를 가져온다. </small> </li>\r\n                  <li> publicFields[0].getName() <small> # 필드의 이름 가져오기 </small> </li>\r\n                  <li> publicFields[0].get(test) <small> # 필드의 값 가져오기 </small> <span class=\"col_r\"> # private변수에 접근하면 에러발생, setAccessible로 접근을 허용해주어야 가능 </span>  </li>\r\n                </li> <br />\r\n\r\n                <li> setAccessible 메소드 : private 멤버변수 값을 읽거나 수정하기 위해서는 메소드를 이용하여\r\n                  필드 값의 접근을 허용을 해주어야 한다.\r\n                  <li> allFields[0].setAccessible(true); </li>\r\n                </li> <br />\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'> 예시 </div>\r\n              <div className='block2'>\r\n                <li> {' public class Test { '}\r\n                  <li> {'  '} </li> <br />\r\n                  <li> {' public static void main(String[] args) { '}\r\n                    <li> {'  '} </li> <br />\r\n                    <li> {' Test1 test = new Test1(); '} </li>\r\n                    <li> {'  Class<?> cls = test.getClass(); '} </li>\r\n                    <li> {' Field publicFields[] = cls.getFields(); '} </li>\r\n                    <li> {' Field allFields[] = cls.getDeclaredFields(); '} </li>\r\n                    <li> {'  '} </li> <br />\r\n                    <li> {' try { '}\r\n                      <li> {' System.out.println(\"publicFields의 name: \" + publicFields[0].getName() + \", value :\"+ publicFields[0].get(test) ); '} </li>\r\n                      <li> {' System.out.println(\"allFields의 name: \" + allFields[1].getName() + \", value :\"+ allFields[1].get(test)); '} </li>\r\n                    </li>\r\n                    <li> {' } '} </li>\r\n                    <li> {' catch (Exception e) { '}\r\n                      <li> {' try { '}\r\n                        <li> {' allFields[1].setAccessible(true); '} </li>\r\n                        <li> {' System.out.println(\"allFields의 name: \" + allFields[1].getName() + \", value :\"+ allFields[1].get(test)); '} </li>\r\n                      </li>\r\n                      <li> {' } '} </li>\r\n                      <li> {' catch (Exception e2) {} '} </li>\r\n                    </li>\r\n                    <li> {' } '} </li>\r\n                  </li>\r\n                  <li> {' } '} </li>\r\n                </li> <br />\r\n                <li> {' } '} </li>\r\n                <li> {'  '} </li>\r\n                <li> {' class Test1 { '}\r\n                  <li> {' public int x=1; '} </li>\r\n                  <li> {' private int y=2; '} </li>\r\n                </li>\r\n                <li> {' } '} </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className=\"block1\">\r\n          <details>\r\n            <summary className='stitle'> 싱글톤 패턴\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='block2'>\r\n                <li> 1개의 인스턴스만을 유지시켜주는 패턴 </li>\r\n                <li> <a href=\"https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\"> 참고 </a> </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'>  예시 </div>\r\n              <div className='block2'>\r\n                <li className='sstitle'> 기본적인 형식 <small> # 멀티 쓰레드 방식에서는 사용x </small> </li> <br />\r\n                <li> public class Singleton {'{'}\r\n                  <li>  </li> <br />\r\n                  <li> private static Singleton instance; </li>\r\n                  <li>  </li> <br />\r\n                  <li> private Singleton() {'{}'} </li>\r\n                  <li>  </li> <br />\r\n                  <li> public static Singleton getInstance() {'{'}\r\n                    <li> if(instance == null) {'{'}\r\n                      <li> instance = new Singleton(); </li>\r\n                    </li>\r\n                    <li> {'}'} </li> <br />\r\n                    <li> return new Singleton(); </li>\r\n                  </li>\r\n                  <li> {'}'} </li> <br />\r\n                </li>\r\n                <li> {'}'} </li> <br />\r\n\r\n                <li className='sstitle'> eager initialization(이론 초기화) <small> # 초기 비용이 있으므로 필요하지 않는다면\r\n                  자원의 낭비가 발생한다는 문제점이 존재 </small> </li> <br />\r\n                <li> public class Singleton {'{'}\r\n                  <li>  </li> <br />\r\n                  <li> private static final Singleton instance = new Singleton(); </li>\r\n                  <li>  </li> <br />\r\n                  <li> private Singleton() {'{}'} </li>\r\n                  <li>  </li> <br />\r\n                  <li> public static Singleton getInstance() {'{'}\r\n                    <li> return new Singleton(); </li>\r\n                  </li>\r\n                  <li> {'}'} </li> <br />\r\n                </li>\r\n                <li> {'}'} </li> <br />\r\n\r\n                <li className='sstitle'> synchronized 방식 <small> # 초기 비용이 들지않는 lazy방식이기는 하지만\r\n                  동기화 처리가 되므로 스레드를 1개씩 처리를 하게되어 느리게 된다. </small> </li> <br />\r\n                <li> public class Singleton {'{'}\r\n                  <li>  </li> <br />\r\n                  <li> private static Singleton instance new Singleton(); </li>\r\n                  <li>  </li> <br />\r\n                  <li> private Singleton() {'{}'} </li>\r\n                  <li>  </li> <br />\r\n                  <li> public static Singleton getInstance() {'{'}\r\n                    <li> return new Singleton(); </li>\r\n                  </li>\r\n                  <li> {'}'} </li> <br />\r\n                </li>\r\n                <li> {'}'} </li> <br />\r\n\r\n                <li className='sstitle'> double checked locking <small> # 필요한 부분에만 synchronized 처리를 하므로 개선이\r\n                  되었지만 volatile을 사용함으로써 메모리에서 직접 가뎌  </small> </li> <br />\r\n                <li> public class Singleton {'{'}\r\n                  <li>  </li> <br />\r\n                  <li> private static volatile Singleton instance new Singleton(); </li>\r\n                  <li>  </li> <br />\r\n                  <li> private Singleton() {'{}'} </li>\r\n                  <li>  </li> <br />\r\n                  <li> public static Singleton getInstance() {'{'}\r\n                    <li> if(instance == null) {'{'}\r\n                      <li> synchronized(Singleton.class) {'{'}\r\n                        <li> if(instance == null) {'{'}\r\n                          <li> instance = new Singleton(); </li>\r\n                        </li>\r\n                        <li> {'}'} </li>\r\n                      </li>\r\n                      <li> {'}'} </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </li>\r\n                  <li> {'}'} </li> <br />\r\n                </li>\r\n                <li> {'}'} </li> <br />\r\n\r\n                <li className='sstitle'> static inner 방식 <small> # volatile처럼 복잡하지도 않고 간단하다. </small> </li> <br />\r\n                <li> public class Singleton {'{'}\r\n                  <li>  </li> <br />\r\n                  <li> private static final class SingletonHolder {'{'}\r\n                    <li> private static final Singleton INSTANCE = new Singleton(); </li> <br />\r\n                  </li>\r\n                  <li> {'}'} </li> <br />\r\n                  <li> private Singleton() {'{}'} </li>\r\n                  <li>  </li> <br />\r\n                  <li> public static Singleton getInstance() {'{'}\r\n                    <li> return SingletonHolder.INSTANCE; </li>\r\n                  </li>\r\n                  <li> {'}'} </li> <br />\r\n                </li>\r\n                <li> {'}'} </li> <br />\r\n\r\n                <li className='sstitle'> enum 방식 <small> # 컴파일 시점에 enum이 생성되어서 eager 방식이지만 간단하다. </small> </li> <br />\r\n                <li> public enum Singleton {'{'}\r\n                  <li> INSTANCE(\"\");  </li> <br />\r\n                  <li> public void getInstance(){'{}'}  </li>\r\n                </li>\r\n                <li> {'}'} </li> <br />\r\n                <li> Singleton.INSTANCE.getInstance(); </li>\r\n\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default JavaBasic;\r\n\r\n","import React from 'react';\r\n\r\nconst JavaBasic2 = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Time 객체 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li>  java.util.Date </li>\r\n            <li>  java.util.Calendar </li>\r\n            <li>  java.time(org.joda.time) , 자바 버전 8이상에서 사용가능 </li>\r\n\r\n            <h2 className='h2'> 📌 Date ,  </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 LocalDate , 날짜 </h2>\r\n            <li> LocalDate d = LocalDate.of(YYYY,MM,DD); , 2020-01-06  </li>\r\n            <li> LocalDate d = LocalDate.now() , 2020-01-06 </li>\r\n            <li> Period period = Period.between(D1,D2); , D1,D2의 차이를 반환 30일이상이면 반올림 </li>\r\n            <li> period.getYears(); , period.getMonths(); , period.getDays(); </li>\r\n            <li> ChronoUnit.[YEARS, MONTHS, WEEKS, DAYS, HOURS, SECONDS, MILLIS, NANOS].between(D1,D2); , 차이를 출력  </li>\r\n            <li> LocalDate.of(YYYY,MM,DD).format(DateTimeFormatter.BASIC_ISO_DATE); , String으로 변환 </li>\r\n            <li> Date.valueOf(LocalDate.of(YYYY,MM,DD)); , LocalDate를 java.sql.Date 변환 </li>\r\n            <li> LocalDate.parse(\"1111-11-11\") , String을 LocalDate로 변환 </li>\r\n            <li> LocalDate.parse(\"11111111\", DateTimeFormatter.BASIC_ISO_DATE); , String을 LocalDate로 변환 </li>\r\n            <li> LocalDate.from(LocalDateTime.now()); , LocalDateTime을 LocalDate로 변환 </li>\r\n\r\n            <h2 className='h2'> 📌 LocalTime , 시간 </h2>\r\n            <li> LocalTime t = LocalTime.now(); , 11:11:11  </li>\r\n            <li> LocalTime t = LocalTime.of(HH,MM,SS,ms); , 11:11:11.0000000 </li>\r\n            <li> T1.isBefore(T2); , T1객체가 T2보다 이전시간이면 true반환 </li>\r\n            <li> T1.isAfter(T2); , T1객체가 T2보다 이후시간이면 true반환 </li>\r\n            <li> Duration d = Duration.between(T1,T2); </li>\r\n            <li> d.getSeconds(), d.getNano(); </li>\r\n            <li> LocalDate.now().atTime(11, 11); , LocalDate을 LocalDateTime로 변환 </li>\r\n\r\n            <h2 className='h2'> 📌 LocalDateTime , 날짜 + 시간 </h2>\r\n            <li> LocalDateTime dt = LocalDateTime.now(); </li>\r\n            <li> LocalDateTime dt = LocalDateTime.of(YYYY,MM,DD,HH,MM,SS,MS); </li>\r\n            <li> dt.[plusYears(1),plusMonths(1),plusWeeks(1),plusDays(1),\r\n              plusHours(1),plusMinutes(1),plusSeconds(1),plusNanos(1)] </li>\r\n            <li> dt.[minusYears(),minusMonths(),minusWeeks(),minusDays(),\r\n              minusHours(),minusMinutes(),minusSeconds(),minusNanos()] </li>\r\n            <li> DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"YYYY년 M월 D일 A H시 M분\");</li>\r\n            <li> String s = now.format(dtf); </li>\r\n            <li> DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"YYYY-MM-DD HH:MM:SS\"); </li>\r\n            <li> LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"YYYY-MM-DD HH:MM:SS\")); , String으로 변환 </li>\r\n            <li> Date.from(LocalDateTime.now().atZone(ZoneId.systemDefault()).toInstant()); , LocalDateTime를 java.util.Date로 변환 </li>\r\n            <li> Timestamp.valueOf(LocalDateTime.now()), LocalDateTime을 java.sql.Timestamp로 변환 </li>\r\n            <li> LocalDateTime.parse(\"YYYY-MM-DDTHH:MM:SS\"），String을 LocalDate로 변환  </li>\r\n            <li> LocalDateTime.parse(\"YYYY-MM-DD HH:MM:SS\", DateTimeFormatter.ofPattern(\"YYYY-MM-DD HH:MM:SS\")), ，String을 LocalDateTime로 변환 </li>\r\n            <li> LocalDateTime.ofInstant(new Date().toInstant(), ZoneId.systemDefault()); , java.util.Date을 LocalDateTime로 변환 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 날짜로 요일 구하기 </h2>\r\n            <li> (자바8 이후)  </li>\r\n            <div className=\"block4\">\r\n              <li> LocalDate date = LocalDate.of(1111,11,11); </li>\r\n              <li> DayOfWeek dayOfWeek = date.getDayOfWeek(); </li>\r\n              <li> (참고) dayOfWeek.getDisplayName(TextStyle.[FULL,NARROW,SHORT], [Locale.US, Locale.KOREAN]); <small> Monday, M, Mon </small> </li>\r\n              <li> 요일 = dayOfWeek.getValue(); <small> 1~7 </small> </li>\r\n            </div>\r\n            <li> (자바8 이전) </li>\r\n            <div className=\"block4\">\r\n              <li> <a href=\"https://hianna.tistory.com/610\" target=\"_blank\" rel=\"noopener noreferrer\"> 참고 </a> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 직렬화(Serialization) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> private static final long serialVersionUID = 1L; </li>\r\n            <li> 자바 객체를 바이트 배열로 변환하고 파일,메모리,데이터베이스 등으로 저장하는 방법 </li>\r\n            <li> 위의 과정을 반대로 하는 것을 Deserialization(역직렬화)라고 한다. </li>\r\n            <li> 자바 객체가 바이트배열로 변환될 때 serialVersionUID도 같이 저장된다. </li>\r\n            <li> 자바 객체를 다시 생성할 때 serialVersionUID를 체크한다. 다르면 예외발생 </li>\r\n\r\n            <h2 className='h2'> 📌 직렬화 예시 </h2>\r\n            <div className=\"block4\">\r\n              <li> private static String serialize() {\"{\"}\r\n                <li>  Member member = new Member(\"홍길동\",\"활빈당\",20); </li>\r\n                <li>  byte[] serializedMember; </li>\r\n                <li>  String serializedMemberStr = \"\"; </li>\r\n                <li>  try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\"{\"}\r\n                  <li>  try (ObjectOutputStream oos = new ObjectOutputStream(baos)) {\"{\"}\r\n                    <li> oos.writeObject(member); </li>\r\n                    <li> serializedMember = baos.toByteArray(); </li>\r\n                    <li> serializedMemberStr = Base64.getEncoder().encodeToString(serializedMember); </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </li>\r\n              <li> return serializedMemberStr; </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n            <li>  </li> <br />\r\n            <h2 className='h2'> 📌 역직렬화 예시 </h2>\r\n            <div className=\"block4\">\r\n              <li> private static void deserialize(byte[] serializedMember) {\"{\"}\r\n                <li> try (ByteArrayInputStream bais = new ByteArrayInputStream(serializedMember)) {\"{\"}\r\n                  <li> try (ObjectInputStream ois = new ObjectInputStream(bais)) {\"{\"}\r\n                    <li> Object o = ois.readObject(); </li>\r\n                    <li> Member o1 = (Member) o; </li>\r\n                    <li> System.out.println(o1); </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Stream(중요, 나중에 꼭 정리하기) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 스트림은 배열 또는 컬렉션 인스턴스를 이용해서 사용 가능, 필터링하고 원하는 결과를 출력가능 </li>\r\n            <li> Java 8 </li>\r\n            <li> 쓰레드를 이용한 병렬처리도 가능 </li>\r\n            <li> 스트림 과정 : 매핑 - 필터링 - 결과만들고 - 결과반환 </li>\r\n            <li> <a href=\"https://jeong-pro.tistory.com/229\" target=\"_blank\" rel=\"noopener noreferrer\"> 스트림 공부 링크 </a> </li>\r\n\r\n            <h2 className='h2'> 📌 배열 스트림 </h2>\r\n            <li> {\"Stream<String> stream = Arrays.stream(arr)\"} </li>\r\n            <li> {\"Stream<String> streamOfArrayPart = Arrays.stream(arr,1,3)\"} </li>\r\n\r\n            <h2 className='h2'> 📌컬렉션 스트림  </h2>\r\n            <li> {\"public interface Collection<E> extends Iterable<E>\"} </li>\r\n            <li> {\"default Stream<E> stream() \"} </li>\r\n            <li> {\" return StreamSupport.strea(spliterator(),false);\"} </li>\r\n            <li> {\" \"}</li>\r\n            <li> {\" Stream<String> stream = list.stream(); \"}</li>\r\n            <li> {\" Stream<String> parallelStream = list.parallelStream(); \"}</li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Optional </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> T타입의 객체를 포장해주는 래퍼 클래스 </li>\r\n              <li> Null을 예외처리하지 않고 처리가 가능하다는 장점이 있다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 메소드 </h2>\r\n            <div className='block4'>\r\n              <li> opt.isEmpty() <small> 값이 존재하는지 boolean값 리턴  </small> </li>\r\n              <li> opt.orElseGet() <small> 저장된 값이 존재하면 값을 반환 값이 없으면 인수로 전달된\r\n                람다 표현식 결과값 반환 </small> </li>\r\n              <li> Optional.of() <small> # 저장된 값이 존재하면 입력된 값을 반환 없으면 인수로 전달된 예외를 발생 </small> </li>\r\n              <div className=\"block3\">\r\n                <li> Optional{'<String>'} opt = Optional.of(\"result\"); </li>\r\n              </div>\r\n              <li> Optional.ofNullable() <small> # value가 null인 경우 Optional 반환 </small> </li>\r\n              <div className=\"block3\">\r\n                <li> {' Optional<String> opt = Optional.ofNullable(객체); '} </li>\r\n                <li> 객체가 존재하지 않으면 return Optional.empty + 에러발생 </li>\r\n                <li> 객체가 존재하면 return Optional객체 </li>\r\n              </div>\r\n              <li> Optional.empty() </li>\r\n              <li> opt.isPresent()  <small> 객체가 존재하는지 여부 판단, 있으면 true </small> </li>\r\n              <li> Optional.ofNullable(객체).isPresent();  <small>  객체가 존재하는지 여부 판단, 있으면 true </small> </li>\r\n              <li> opt.orElse()  <small> 옵셔널 객체가 null이든 아니든 실행 기본값으로 제공할 객체를 지정 </small> </li>\r\n              <li> Optional.ofNullable(객체).orElse(객체,문자열); <small>  객체값이 Null일때 사용할 문자열이나 객체를 지정  </small> </li>\r\n              <li> opt.orElseGet()  <small>  옵셔널 객체가 null일 때만 실행 , 기본값으로 제공할 공급자함수 지정 </small> </li>\r\n              <li> opt.orElseThrow()  <small>  옵셔널 객체가 비어있으면 , 예외 공급자함수를 통해 예외 발생 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JavaBasic2;","import React from 'react';\r\n\r\nconst JavaModifier = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 제어자란? <a name=\"제어자란?\" style={{ visibility: \"hidden\" }}> 제어자란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 제어자의 종류 <a name=\"제어자의 종류\" style={{ visibility: \"hidden\" }}> 제어자의 종류 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ public </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 접근 제어자 : 같은 패키지, 다른 패키지 전부 허용 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ protected </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 접근 제어자 :  같은 패키지 안에서는 모두 접근 허용, 다른 패키지에서는 자식클래스일 때만 접근 허용 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ default </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 접근 제어자 : 같은 패키지 안에서만 접근 허용 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ private </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 접근 제어자 : 같은 클래스 안에서만 접근 허용 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ static </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> static 멤버변수 : 모든 인스턴스가 공통적으로 사용하는 값, 클래스가 메모리에 생성될 때 같이 생성\r\n                                            , static 멤버변수(클래스변수)는 인스턴스를 생성하지 않고서도 사용이 가능하다. </li>\r\n                                        <li> static 메소드 : 인스턴스를 생성하지 않고도 사용이 가능한 메소드 , static 메서드 내에서는\r\n                                            인스턴스의 멤버변수를 직접 사용을 할 수 없다. , 인스턴스 멤버변수를 사용하지 않는\r\n                                            메서드에는 static 사용을 하는 것을 고려해 봐야 한다. </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ final </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> final 클래스 : 변경할수 없고 확장할 수 없는 클래스 , 다른 클래스의 조상클래스가 될 수 없다. </li>\r\n                                        <li> final 메서드 : 오버라이딩으로 재정의 될 수 없다. </li>\r\n                                        <li> final 멤버변수, final 변수 : 값을 변경할 수 없는 상수로 변경 , 생성자를 통해 값을 넣어주어야\r\n                                            인스턴스마다 다른 값을 가지게 해줄 수 있다. </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ abstract </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> abstract 클래스 : 추상클래스로 정의, 인스턴스를 생성할 수 없다. 추상클래스도 클래스이므로\r\n                                            상속을 받으면 일부 메서드만 오버라이딩을 해서 사용이 가능하다는 장점이 있음 </li>\r\n                                        <li> abstract 메서드 : 인터페이스에서 메서드를 선언하는 것처럼 구현이 되있지는 않지만\r\n                                            상속을 받아서 구현을 할 수 있음 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ native </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ transient </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> private transient String 멤버변수; </li>\r\n                                        <li> 위와 같이 사용을 하면 직렬화를 하였을 때 , 직렬화 과정에서 예외로 처리\r\n                                            , 직렬화를 하고 다시 역직렬화를 하였을 때 필드는 남아있지만 멤버변수 값은 null로 처리된다. </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ synchronized </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ volatile </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ strictfp </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▷ 클래스, 메서드, 멤버변수, 지역변수</summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 클래스 : public , default, final, abstract </li>\r\n                                        <li> 메서드 : public , default, private, protected, final, abstract, static </li>\r\n                                        <li> 멤버변수 : public , default, private, protected, final, static  </li>\r\n                                        <li> 지역변수 : final </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 제어자 사용 주의 <a name=\"제어자 사용 주의\" style={{ visibility: \"hidden\" }}> 제어자 사용 주의 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 메서드에 static + abstract 사용 불가 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> abstract클래스는 직접적으로 객체가 될 수 없으므로 static메서드 또한\r\n                                        사용이 불가능하다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 클래스에 abstract + final 사용불가 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> abstract 클래스는 구현이 되어야 사용이 가능한데 final로 정의함으로써\r\n                                        사용이 불가능해진다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> abstract 메서드에 private 사용불가 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> abstract 메서드는 구현된 인스턴스에서 사용이 가능한데 private를 사용하면\r\n                                        자식 클래스에서 접근이 불가능하게 만들어서 사용할 수 없다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> private + final 같이 사용 불필요 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> private로 하나 final로 하나 자식클래스에서는 사용이 불가능하다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaModifier;","import React from 'react';\r\n\r\nconst JavaAnnotation = (props) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\" >\r\n        <div className=\"lblock\">\r\n          {/*  */}\r\n          <div className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\">  자바 어노테이션 종류\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <div className=\"sblock\">\r\n                <div className=\"sstitle\"> @Override </div>\r\n                <div className=\"mblock\">\r\n                  <li> 메서드 위에 선언하여 부모클래스로부터 상속받은 메소드라는 것을 표시 </li>\r\n                  <li> 상속받는 메소드가 존재하지 않으면 컴파일 에러를 발생한다. </li>\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"sstitle\"> @Deprecated </div>\r\n                <div className=\"mblock\">\r\n                  <li> 해당 메서드를 사용하지 않는다는 표시 </li>\r\n                  <li> 사용을 하게되면 컴파일 경고 표시 </li>\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"sstitle\"> @SuppressWarnings </div>\r\n                <div className=\"mblock\">\r\n                  <li> 선언된 위치에 컴파일 경고를 무시를 하게 한다. </li>\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"sstitle\"> @SafeVarargs </div>\r\n                <div className=\"mblock\">\r\n                  <li> 자바 7부터 지원 </li>\r\n                  <li> 제너릭 같은 가변인자의 매개변수를 사용할 때 경고를 무시 </li>\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"sstitle\"> @FunctionalInterface </div>\r\n                <div className=\"mblock\">\r\n                  <li> 자바 8부터 지원 </li>\r\n                  <li> 함수형 인터페이스를 지정 </li>\r\n                  <li> 메서드가 존재하지 않거나, 1개 이상의 메서드(default 메서드는 제외)가 존재할 경우 컴파일\r\n                    오류 발생 </li>\r\n                  <li> 자바 컴파일러가 컴파일할 때 오류를 검사 </li>\r\n                  <li> <h4> 함수형 인터페이스 사용법 </h4>\r\n                    <li> @FunctionalInterface </li>\r\n                    <li> interface I_name {'{'} # 함수형 인터페이스 선언 및 정의\r\n                      <li> public int M_name(int x, int y); </li>\r\n                    </li>\r\n                    <li> {'}'} </li> <br />\r\n\r\n                    <li> I_name I_instance = {' (x, y) -> x < y ? x : y; '} # 인터페이스 추상메소드 구현  </li>\r\n                    <li> I_name I_instance = {' (x, y) -> x+y '}  # 인터페이스 추상메소드 구현 </li>\r\n                    <li> System.out.println(I_instance.M_name(1, 1)); # 사용 </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"sstitle\">  </div>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n          <div className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\">  메타 어노테이션\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <div className=\"sblock\">\r\n                <div className=\"sstitle\"> 설명 </div>\r\n                <div className=\"mblock\">\r\n                  <li> JEE5 부터 추가된 요소 </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"sstitle\"> 메타 어노테이션 종류 </div>\r\n                <div className=\"mblock\">\r\n                  <li> <h3> @Retention : 자바 컴파일러가 어노테이션을 어떻게 다룰지 설정</h3>\r\n                    <div className=\"sblock\">\r\n                      <li> @Retention(RetentionPolicy.SOURCE)\r\n                        <li> 컴파일 전까지만 생존 </li>\r\n                      </li>\r\n                      <li> @Retention(RetentionPolicy.CLASS)\r\n                        <li> 컴파일러가 클래스를 참조할때 까지 생존 </li>\r\n                      </li>\r\n                      <li> @Retention(RetentionPolicy.RUNTIME)\r\n                        <li> 컴파일 이후에도 생존 , JVM에서 참조가능 </li>\r\n                      </li>\r\n                    </div>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li> <h3> @Target : 어노테이션을 적용할 위치를 선택 </h3>\r\n                    <div className=\"sblock\">\r\n                      <li> @Target(ElementType.PACKAGE)\r\n                        <li> 패키지 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.TYPE)\r\n                        <li> 타입 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.ANNOTATION_TYPE)\r\n                        <li> 어노테이션 타입 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.CONSTRUCTOR)\r\n                        <li> 생성자 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.FIELD)\r\n                        <li> 멤버 변수 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.LOCAL_VARIABLE)\r\n                        <li> 지역 변수 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.METHOD)\r\n                        <li> 메서드 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.PARAMETER)\r\n                        <li> 전달인자 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.TYPE_PARAMETER)\r\n                        <li> 전달인자 타입 선언 </li>\r\n                      </li>\r\n                      <li> @Target(ElementType.TYPE_USE)\r\n                        <li> 타입 선언 </li>\r\n                      </li>\r\n                    </div>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li> <h3> @Documented </h3>\r\n                    <div className=\"sblock\">\r\n                      <li> 어노테이션을 Javadoc에 포함 </li>\r\n                    </div>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li> <h3> @Inherited </h3>\r\n                    <div className=\"sblock\">\r\n                      <li> 어노테이션을 상속이 가능하게 만듬 </li>\r\n                    </div>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li> <h3> @Repeatable </h3>\r\n                    <div className=\"sblock\">\r\n                      <li> Java8 부터 지원 </li>\r\n                      <li> 연속적으로 어노테이션을 선언 가능하게 함 </li>\r\n                    </div>\r\n                  </li>\r\n                  {/*  */}\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n          <div className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\">  커스텀 어노테이션\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <div className=\"sblock\">\r\n                <div className=\"sstitle\"> 멤버 변수 </div>\r\n                <div className=\"mblock\">\r\n                  <li> <h3>  어노테이션 인터페이스 </h3>\r\n                    <li> @Target(ElementType.FIELD) </li>\r\n                    <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                    <li> public @interface CustomAnnotaionName {'{'}\r\n                      <li> int ElementName() default 0; # 정수형</li>\r\n                      <li> String ElementName1() default \"str\"; # 문자열</li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </li>\r\n                  <li> <h3>  커스텀 어노테이션을 사용할 클래스 </h3>\r\n                    <li> public class ClassName {'{'}\r\n                      <li> @CustomAnnotaionName(ElementName = 10) </li>\r\n                      <li> private int num1 </li> <br />\r\n                      <li> @CustomAnnotaionName  #디폴트값 0이 들어감 </li>\r\n                      <li> private int num2 </li>\r\n                      <li> @CustomAnnotaionName1(ElementName = \"str1\") </li>\r\n                      <li> private String str1 </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> @SuppressWarning <small> # JDK1.5 </small>\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 설명 </div>\r\n                <div className='mblock'>\r\n                  <li> 1. 컴파일러가 경고하는 내용을 제외할 때 사용 </li>\r\n                  <li> 2. 너무 많은 불필요한 경고를 줄일 때 사용한다. </li>\r\n                  <li> @SuppressWarnings(\"[all,cast,dep-ann,deprecation,fallthrough,...]\") <small> # 2개이상은 {'{\"\",\"\",...} 이와 같이 사용하면 된다'} </small>\r\n                    <li> all : 모든 경고 제외 </li>\r\n                    <li> cast : 캐스팅(형변환) 연산자 관련 제외 </li>\r\n                    <li> dep-ann : 사용하지 말아야 하는 주석 관련 경고 제외 </li>\r\n                    <li> deprecation : 사용하지 말아야 하는 메소드 경고 제외 </li>\r\n                    <li> fallthrough : switch에서 break 관련 경고 제외 </li>\r\n                    <li> finally : 반환하지 않는 finally 블럭 관련 경고 제외 </li>\r\n                    <li> null : null 관련 경고 제외 </li>\r\n                    <li> rawtypes : 제네릭을 사용하는 클래스의 매개변수가 불분명할때 경고 제외  </li>\r\n                    <li> unchecked : 검증되지 않은 연산자 경고 제외 </li>\r\n                    <li> unused : 사용하지 않는 코드 관련 경고 제외 </li>\r\n                    <li> boxing : boxing,unboxing 오퍼레이션과 관련된 경고를 제외 </li>\r\n                    <li> hiding : 변수를 숨기는 로컬과 관련된 경고 제외 </li>\r\n                    <li> incomplete-switch : switch 문에서 누락된 항목과 관련된 경고 제외 </li>\r\n                    <li> javadoc : javadoc 경고와 괸련된 경고 제외 </li>\r\n                    <li> nls : 비 nls문자열 리터럴과 관련된 경고 제외 </li>\r\n                    <li> resource : 닫기가 가능한 유형의 자원 사용 관련 경고 제외 </li>\r\n                    <li> restriction : 잘못된 문법이나 금지된 참조 사용법과 관련된 경고 제외 </li>\r\n                    <li> serial : 직렬화 가능 클래스에 누락된 serialVersionUID 필드와 관련되 경고 제외 </li>\r\n                    <li> <a href=\"#!\" target=\"_blank\" rel=\"noopener noreferrer\"></a> </li>\r\n                  </li>\r\n                </div>\r\n                <div className='sstitle'> 예시 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JavaAnnotation;","import React from 'react';\r\n\r\nconst PhpBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PhpBasic;","import React from 'react';\r\n\r\nconst NodejsBasic = (props) => {\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 설치 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                        <li> 장점 : </li>\r\n                        <li> 단점 : </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 제목 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                        <li> 장점 : </li>\r\n                        <li> 단점 : </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 제목 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                        <li> 장점 : </li>\r\n                        <li> 단점 : </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 제목 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                        <li> 장점 : </li>\r\n                        <li> 단점 : </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 제목 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                        <li> 장점 : </li>\r\n                        <li> 단점 : </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NodejsBasic;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst SpringError = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 에러 (어떤 방법으로 정리할지 고민) </summary>\r\n                        <div className='block2'>\r\n                            <h2 className=\"h2\"> 📌 HTTP 응답 상태 코드 </h2>\r\n                            <li> 200 : 정상적 수행  </li>\r\n                            <li> 201 : 클라이언트가 리소스 생성 요청, 리소스가 성공적으로 생성(Post) </li>\r\n                            <li> 301 : 클라이언트가 요청한 리소스에 대한 URI가 변경이 된 경우  </li>\r\n                            <li> 400 : 클라이언트의 요청이 부적절한 경우   </li>\r\n                            <li> 401 : 클라이언트가 인증되지 않을 때 보호된 리소스에 접근했을 때 발생하는 에러  </li>\r\n                            <li> 403 : 클라이언트가 응답하고 싶지 않은 리소스를 요청할 때 ( 권장x )  </li>\r\n                            <li> 405 : 클라이언트가 사용불가능한 Method를 이용해서 리소스를 요청할 때  </li>\r\n                            <li> 500 : 서버에 문제가 있을 경우 발생하는 코드  </li>\r\n\r\n                            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className=\"block3\">\r\n                                    <li> <h3 className=\"h3\"> 🎈 To display the conditions report re-run your application with 'debug' enabled </h3>\r\n                                        <li> {' 1. run > edit configuration '} </li>\r\n                                        <li> 2. enable debug output 체크해제 </li>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> 🎈 Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured </h3>\r\n                                        <li> spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver </li>\r\n                                        <li> {' spring.datasource.url=jdbc:mysql://localhost:3306/스키마이름?characterEncoding=UTF-8&serverTimezone=UTC '} </li>\r\n                                        <li> spring.datasource.username=DB유저이름 </li>\r\n                                        <li> spring.datasource.password=DB유저비번 </li>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> 🎈 detached entity passed to persist </h3>\r\n                                        <li> ManyToMany, ManyToOne 등에서 발생 </li>\r\n                                        <li> A와 B가 있을때 A의 a1,a2이 B의 b1과 관계가 있다면 a1이 저장이되면서 b1이 저장이되고\r\n                                            a2를 저장하게될때 b1이 다시 저장이 되어 b1 키가 충돌할 때 발생  </li>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> 🎈 </h3>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </li> <br />\r\n\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringError;","import React from 'react';\r\n\r\nconst SpringJpa = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JPA설명(정리x) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Java Persistence API </li>\r\n            <li> ORM : Object Relational Mapping ,  </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JPA 설명 (내용 보충 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> 1. Java Persistence Aplication , 자바 쪽의 ORM 표준 기술 , 자바에서 제공하는 API\r\n              <div className=\"block4\">\r\n                <h3 className=\"h3\"> 🎈 ORM : Object Relational Mapping , 객체 관계 매핑 </h3>\r\n                <li> ORM 프레임 워크가 자바 객체와 데이터베이스를 분리해서 사용하게 해준다. </li>\r\n                <li> ORM 프레임 워크가 SQL을 생성해서 DB에 객체를 저장해준다. </li>\r\n                <li> EJB(과거 자바 ORM) , Hibernate(JPA의 기반 ORM) , Mybatis </li>\r\n              </div>\r\n            </li>\r\n            <li> 2. DB SQL문을 작성하지 않고 JPA가 대신 SQL문을 만들어서 DB에 레코드를 넣어준다. </li>\r\n            <li> 3. JPA는 JDBC API를 이용하는데 개발자가 직접 사용하면 불편하다. (DB연결,쿼리작성, DB종료 등 DB와 관련된 불편) </li>\r\n            <li> 4. 영속성 컨텍스트를 이용한다.\r\n              <div className=\"block4\">\r\n                <h3 className=\"h3\"> 🎈 Persistence Context </h3>\r\n                <li> 0. 쓰기지연 SQL 공간 + 1차 캐시 공간(엔티티 저장 공간) </li>\r\n                <li> 1. Entity를 영구 저장하는 환경 </li>\r\n                <li> 2. Entity 매니저를 이용해서 Entity를 영속성컨텍스트에 저장하거나 조회한다.  </li>\r\n                <li> 3. 실제 DB에 저장되기 전에 보관된는 가상의 DB라고 생각하면 된다. </li>\r\n                <li> 4. 영속성 컨텍스트는 Entity를 식별자로 구분한다. ( 그러므로 식별자를 필수로 넣어주어야 한다.) </li>\r\n                <li> 5. 영속성 컨텍스트는 Entity의 동일성을 보장한다. ( DB에서 똑같은 레코드를 2번 조회하였을 때 똑같은 인스턴스로 인식\r\n                  , Mybatis에서는 이와 같이 하면 다르다고 인식하는것 같다.) </li>\r\n                <li> 6. 트랜잭션을 커밋할 때 실제 DB에 반영되는 flush()를 실행 </li>\r\n                <li> 7. 캐시 기능이 있어서 JPA는 1차캐시 공간에서 Entity를 먼저 조회하고 없으면 DB에서 조회한다 그리고 그 값을 1차캐시에 저장한다. ( em.find(ENTITY.class,\"식별자\") )  </li>\r\n                <li> 8. 지연 기능이 있어서 JPA는 트랜잭션 커밋 전까지 쿼리를 내부 쿼리 저장소에 모아두고 커밋할 때 실제 DB에 반영한다.\r\n                  <div className=\"block4\">\r\n                    <li> transaction.begin(); <small> 트랜잭션 시작 </small> </li>\r\n                    <li> transaction.commit(); <small> 트랜잭션 끝 </small> </li>\r\n                  </div>\r\n                </li>\r\n                <li> 9. 트랜잭션이 커밋 되기전에 먼저 flush()로 이전 스냅샷과 변경 Entity를 비교하고 쓰기 지연 저장소에 SQL을 보관하였다가 flush()를 하고\r\n                  DB 트랜잭션 커밋을 수행한다. </li>  <br />\r\n\r\n                <h3 className=\"h3\"> 🎈 Persistence Context의 Entity 상태 </h3>\r\n                <li> 1. 영속 : 영속성 컨텍스트에 Entity가 저장된 상태 ( em.persist(ENTITY명) ) </li>\r\n                <li> 2. 비영속 : 영속성 컨텍스트와 Entity가 상관이 없는 상태 </li>\r\n                <li> 3. 준영속 : 영속성 컨텍스트에서 잠깐 분리되어 있는 상태, 식별자는 존재 그러나 어떠한 행위도 할 수 없음 ( em.detach(ENTITY명) , em.clear() , em.close() ) </li>\r\n                <li> 4. 삭제 : 영속성 컨텍스트와 DB에서 삭제 ( em.remove(ENTITY명) )  </li>\r\n              </div>\r\n            </li>\r\n            <li> 5. JPA는 JDBC API를 사용해서 SQL을 이용해 DB의 데이터를 조회한다 </li>\r\n            <li> 6. 쿼리를 사용하는 방법은 JPQL, 네이티브 SQL, JDBC API, MyBatis , QuertDSL , JPA Criteria 등이 있다. </li>\r\n            <li> 7. JPA를 사용하면 특정 DB에 쿼리가 종속되지 않는다는 점이 있다. </li>\r\n            <li> 8. JPA에서는 DB의 레코드의 필드값을 EntityManager를 이용해서 1개만 수정하면\r\n              1개만 수정하는 것이 아니라 레코드 전체를 업데이트하는 쿼리를 작성해서 보낸다(기본) </li>\r\n\r\n            <h2 className=\"h2\"> 📌 JPA 실행과정(대략적인 설명, 완벽하지는 않음)  </h2>\r\n            <li> 1. 자바 Entity 클래스를 생성 </li>\r\n            <li> 2. Entity를 영속성 컨텍스트에 등록 </li>\r\n            <li> 3. Entity에 값을 넣어서 insert를 트랜잭션에 넣고 커밋을 실행 </li>\r\n            <li> 4. 영속성 컨테스트는 이전 스냅샷과 변경되는 Entity를 비교(flush)하고\r\n              SQL을 쓰기 지연 저장소에 보관하였다가 쿼리를 실행하여 실제 DB에 저장 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n            <li> 장점 :\r\n              <div className=\"block4\">\r\n                <li> 1. DB쿼리를 작성하지 않아도 된다는 점이 좋다. ( 생산성 증가 ) </li>\r\n                <li> 2. 개발자가 DB개발이 아닌 어플리케이션 개발에 집중을 할 수 있도록 도와준다. </li>\r\n                <li> 3. 쿼리를 직접 입력하지 않으니 쿼리 작성 실수가 줄어들고 , 객체와 메소드만 보아도 알 수 있어서 가독성이 좋아진다.  </li>\r\n                <li> 4. Mysql, OracleDB 등 여러 DB를 사용해도 기존 Entity객체를 변경할 필요가 없기 때문에 객체 재사용성도 좋다. </li>\r\n                <li> 5. 캐싱 기능이 존재하여 똑같은 쿼리를 기억하고 있다가 다시 생성하지 않고 재사용을 한다. </li>\r\n                <li> 6. 지연 기능이 존재하여 쿼리를 잠시 보관하고 있다가 나중에 한꺼번에 쿼리를 실행할 수 있다. </li>\r\n                <li> 7. 특정 DB에 쿼리가 종속되지 않아서 좋다. </li>\r\n              </div>\r\n            </li>\r\n            <li> 단점 :\r\n              <div className=\"block4\">\r\n                <li> 1. JPA 문법을 익히는데 시간이 걸린다. </li>\r\n                <li> 2. 실제 업무에서는 JPA만을 이용해서 코드를 작성하기 어렵다. (JPQL이라는 쿼리를 작성해서 사용하는 방법이 존재) </li>\r\n                <li> 3. JPA가 단순한 내용은 쉽지만 복잡한 쿼리 작성등 큰 프로젝트에서는 오히려 쿼리를 작성하는 것보다 어려울수 있따. </li>\r\n                <li> 4. 코드를 잘못 작성하면 속도  </li>\r\n                <li> 2.  </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JPA 문법(나중에 정리) </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <li>  </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <li> User user = userDAO.find(id); </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Spring Data JPA Repository 설명(정리 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 메서드 정의 </h2>\r\n            <li> 리턴타입 접두어|도입부By프로퍼티표현식|조건식|And,Or|프로퍼티표현식|조건식|정렬조건|매개변수 </li>\r\n            <div className=\"block4\">\r\n              <li> find, get, query. count </li>\r\n              <li> Distinct, First, Top </li>\r\n              <li> Persion, Address, ZipCode </li>\r\n              <li> IgnoreCase, Between, LessThan, GreaterThan, Like, Contains </li>\r\n              <li> OrderBy프로퍼티(Asc,Desc) </li>\r\n              <li> Pageable, Sort </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Spring Data JPA Repository 문법 </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <div className=\"block4\">\r\n              <li>  </li>\r\n              <li> </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <div className=\"block4\">\r\n              <li> 엔티티 한개를 조회 <small> null예외 발생하지않음, eager-loading, 파라미터는 null이 아니어야 한다. , EntityManager.find()를 호출  </small> </li>\r\n              <li className='command'> 엔티티객체 findOne(String fieldname)  </li>\r\n              <li> 엔티티를 프록시로 조회 <small> null예외 발생, lazy-loading, 파라미터는 null이 아니어야 한다. , EntityManager.getReference()를 호출</small> </li>\r\n              <li className='command'> 엔티티객체 getOne(String fieldname) </li>\r\n              <li> 1개의 조건을 만족하는 필드 조회 </li>\r\n              <li className='command'> 엔티티객체 findByFieldname(String fieldname) </li>\r\n              <li> 2개의 조건을 만족하는 필드 조회 </li>\r\n              <li className='command'> findByFieldname1AndFieldname2(String fieldname1, String fieldname2) </li>\r\n              <li> 2개중 1개의 조건을 만족하는 필드 조회 </li>\r\n              <li className='command'> findByFieldname1OrFieldname2(String fieldname1, String fieldname2) </li>\r\n              <li> 모든 필드 조회 </li>\r\n              <li className='command'> {\" List<엔티티객체> findAll() \"} </li>\r\n              <li> 중복제거해서 조회 </li>\r\n              <li className='command'> findDistinctByFieldname1 </li>\r\n              <li> 객체가 없어도 에러 발생하지 않음  </li>\r\n              <li className='command'> {\"  Optional<User> findByEmail(String email); \"} </li>\r\n              <li> 값을 조회해서 불린값으로 리턴 </li>\r\n              <li className='command'> Boolean existsByEmail(String email);  </li>\r\n              <li>  </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <div className=\"block4\">\r\n              <li> 업데이트는 sava() 함수를 사용하면 된다. </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <div className=\"block4\">\r\n              <li> </li>\r\n              <li> </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <div className=\"block4\">\r\n              <li> </li>\r\n              <li> </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <div className=\"block4\">\r\n              <li> </li>\r\n              <li> </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <div className=\"block4\">\r\n              <li> </li>\r\n              <li> </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <div className=\"block4\">\r\n              <li> </li>\r\n              <li> </li>\r\n            </div>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <div> ENTITY findByFieldname(String FIELDNAME) (대표예시)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME = ?1 </small> </li>\r\n            </div>\r\n\r\n            <div> {' List<ENTITY> findAll() '}\r\n              <li> <small> select m from ENTITY m; </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldname1AndFieldname2(String FIELDNAME1, String FIELDNAME2)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME1 = ?1 and m.FIELDNAME2 = ?2; </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldname1OrFieldname2(String FIELDNAME1, String FIELDNAME2)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME1 = ?1 or m.FIELDNAME2 = ?2; </small> </li>\r\n            </div>\r\n\r\n            <div> findDistinctByFieldname1\r\n              <li> <small> select m distinct from ENTITY m where m.FIELDNAME1 = ?1; </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldnameIs(String name)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME1 = ?1; </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldnameEquals(String name)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME1 = ?1; </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldnameBetween(num start, num end)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME between ?1 and ?2 </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldnameGreaterThan(String num)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME {'>'} ?1 </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldnameGreaterThanEqual(String num)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME {'>='} ?1 </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldnameLessThan(String num)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME {'<'} ?1</small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldnameLessThanEqual(String num)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME {'<='} ?1 </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldNameNotLike(String word);\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME not like '?1'  </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldNameLike(String word);\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME like '?1'  </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldNameStartingWith(String word);\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME like '%?1' </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldNameEndingWith(String word);\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME like '?1%' </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldNameContaining(String word);\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME like '%?1%' </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldname1ByFieldname2Desc(String FIELDNAME1)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME1 = ?1 order by m.FIELDNAME2 desc </small> </li>\r\n            </div>\r\n\r\n            <div> findByFieldname1ByFieldname2Asc(String FIELDNAME1)\r\n              <li> <small> select m from ENTITY m where m.FIELDNAME1 = ?1 order by m.FIELDNAME2 asc </small> </li>\r\n            </div>\r\n\r\n            <div> deleteById(String FIELDNAME)\r\n              <li> <small> delete from ENTITY where FIELDNAME = ?1  </small> </li>\r\n            </div>\r\n\r\n            <div> 1. 어노테이션 방식(Repository JPA 쿼리 메소드 위에)\r\n              <li> @Query(\"select m from Member m\") <small> # 사용자 쿼리 작성 </small> </li>\r\n            </div>\r\n\r\n            <div> 2. 순수 sql 쿼리(Repository JPA 사용자 쿼리 메소드 위에)\r\n              <li> @Query(value=\"select * from Member m\",nativeQuery = true) </li>\r\n            </div>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <li> <h3 className=\"h3\"> 🎈Repository 클래스 예시 </h3>\r\n                  <div className=\"block4\" style={{ listStyle: \"none\" }}>\r\n                    <li> @Repository </li>\r\n                    <li> public interface Repository명 extends JpaRepository{'<User,Long> {'}\r\n                      <li> <small> # ID타입 : Long, Integer, String 등이 있다.</small>  </li>\r\n                      <li> public User findByName(String name); </li> <br />\r\n\r\n                      <li> @Query(\"select m from User m where m.username = ?1\") </li>\r\n                      <li> public User findByUsername(String username) </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </div>\r\n                </li> <br />\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @JoinColumn, @JoinColumns, @JoinTable  </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 @JoinColumn 속성 </h2>\r\n            <li> name: 매핑할 FK <small> 참조할테이블명_참조테이블의PK </small> </li>\r\n            <li> referencedColumnName : 참조테이블의 기본키 컬럼명 </li>\r\n            <li> foreignKey :  </li>\r\n            <li> unique, nullable insertable updatable columnDefinition table </li>\r\n\r\n            <h2 className='h2'> 📌 @JoinColumns </h2>\r\n            <li> JoinColumn을 여러개 사용할 경우 사용방법 </li>\r\n            <li> @JoinColumns{\"({\"}\r\n              <li> @JoinColumn(), </li>\r\n              <li> @JoinColumn() </li>\r\n            </li>\r\n            <li> {\"})\"} </li>\r\n\r\n            <h2 className='h2'> 📌 @JoinTable </h2>\r\n            <li> 중간 테이블을 만듬, 한곳에서만 선언하면 다른 쪽에서는 mappedBy같이 추가적으로 정의할 필요가 없다. </li>\r\n            <li> @OneToMany에서 정의하고 반대 테이블에서 @ManyToOne 사용 , 반대의 경우 @OneToMany사용하지 않음  </li>\r\n            <li> @JoinTable(name=\"현재테이블_참조테이블\", joinColumns = @JoinColumn(name=\"현재테이블_PK\",\r\n              inverseJoinColumns = @JoinColumn(name=\"참조테이블_PK\"))) </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈 </h3>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @OneToOne </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className=\"h2\"> 📌 @OneToOne 속성 </h2>\r\n            <div className=\"block4\">\r\n              <li> optional=false(내부조인, 객체에 null이 들어갈수 있음) , optional=true(외부조인, 객체에 null이 들어갈 수 없음, default) </li>\r\n              <li> fetch=FetchType.EAGER (default값) : 엔티티 조회할 때 연관된 엔티티도 같이 조회, 객체가 계속 연결되어 있으면 연달아 조회를 함으로 좋지 않음,\r\n                반대로 한꺼번에 조회 함으로 네트워크 비용을 아낄 수 있다는 장점도 존재 </li>\r\n              <li> fetch=FetchType.LAZY : 엔티티를 나중에 조회 </li>\r\n              <li> cascade=CascadeType.[ALL,PERSIST,MERGE,REMOVE,REFRESH,DETACH]\r\n                <div className=\"block4\">\r\n                  <li> CascadeType.PERSIST : 엔티티를 저장하면, 필드에 있는 엔티티도 저장  <small> # 좀더 알아볼것 </small> </li>\r\n                  <li> CascadeType.MERGE : 엔티티를 합칠 때, 필드에 있는 엔티티도 합친다 <small> # </small> </li>\r\n                  <li> CascadeType.REFRESH : 엔티티를 수정할 때, 필드에 있는 엔티티도 수정 <small> # </small> </li>\r\n                  <li> CascadeType.REMOVE : 엔티티를 삭제할 때, 필드에 있는 엔티티도 삭제한다.  <small> # </small> </li>\r\n                  <li> CascadeType.DETACH : 엔티티를 detach할때 , 필드에 있는 엔티티도 detach를 한다. <small> # 영속성 컨텍스트에서 엔티티를 제거(엔티티 삭제가 아님) </small> </li>\r\n                  <li> CascadeType.ALL : 위에 있는 내용을 모두 적용 <small> # </small> </li> <br />\r\n                </div>\r\n              </li>\r\n              <li> orphanRemoval = [true, false] : true로 하면 엔티티의 연관관계가 끊어졌을때 끊어진 고아 엔티티를 삭제 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 Table1 </h3>\r\n                <div className='block4'>\r\n                  <li> @OneToOne </li>\r\n                  <li> @JoinColumn(name=\"참조할테이블명_컬럼명\") <small> FK필드로 다른테이블의 참조키 </small></li>\r\n                  <li> private Table2 table2  </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 Table2 </h3>\r\n                <div className='block4'>\r\n                  <li> @OneToOne(mappedBy=\"table2\") <small> 다른 테이블에 JoinColumn한 변수명을 적어주면된다. </small> </li>\r\n                  <li> private Table1 table1 </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @OneToMany </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 @OneToMany 속성 </h2>\r\n            <li> Many쪽에서 @JoinTable을 선언 </li>\r\n            <li> fetch=FetchType.EAGER : 엔티티 조회할 때 연관된 엔티티도 같이 조회, 객체가 계속 연결되어 있으면 연달아 조회를 함으로 좋지 않음,\r\n              반대로 한꺼번에 조회 함으로 네트워크 비용을 아낄 수 있다는 장점도 존재 </li>\r\n            <li> optional=false(외부조인, 객체에 null이 들어갈수 있음, default) , optional=true(외부조인, 객체에 null이 들어갈 수 없음) </li>\r\n            <li> fetch=FetchType.LAZY (default값) : 엔티티를 나중에 조회 </li>\r\n            <li> cascade=CascadeType.[ALL,PERSIST,MERGE,REMOVE,REFRESH,DETACH]\r\n              <li> CascadeType.PERSIST : 엔티티를 저장하면, 필드에 있는 엔티티도 저장  <small> # 좀더 알아볼것 </small> </li>\r\n              <li> CascadeType.MERGE : 엔티티를 합칠 때, 필드에 있는 엔티티도 합친다 <small> # </small> </li>\r\n              <li> CascadeType.REFRESH : 엔티티를 수정할 때, 필드에 있는 엔티티도 수정 <small> # </small> </li>\r\n              <li> CascadeType.REMOVE : 엔티티를 삭제할 때, 필드에 있는 엔티티도 삭제한다.  <small> # </small> </li>\r\n              <li> CascadeType.DETACH : 엔티티를 detach할때 , 필드에 있는 엔티티도 detach를 한다. <small> # 영속성 컨텍스트에서 엔티티를 제거(엔티티 삭제가 아님) </small> </li>\r\n              <li> CascadeType.ALL : 위에 있는 내용을 모두 적용 <small> # </small> </li> <br />\r\n            </li>\r\n            <li> orphanRemoval = [true, false] : true로 하면 엔티티의 연관관계가 끊어졌을때 끊어진 고아 엔티티를 삭제 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 Table1 </h3>\r\n                <div className='block4'>\r\n                  <li> @OneToMany </li>\r\n                  <li> @JoinColumn(name=\"참조할테이블명_컬럼명\") </li>\r\n                  <li> {\" private List<Team> team = new ArrayList<>(); \"} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 Table2 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @ManyToOne </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 @ManyToOne 속성 </h2>\r\n            <li> optional=false(내부조인, 객체에 null이 들어갈수 있음) , optional=true(외부조인, 객체에 null이 들어갈 수 없음, default) </li>\r\n            <li> fetch : FetchType.EAGER(default) <small> FetchType.EAGER, FetchType.LAZY </small> </li>\r\n            <li> cascade=CascadeType.[ALL,PERSIST,MERGE,REMOVE,REFRESH,DETACH]\r\n              <li> CascadeType.PERSIST : 엔티티를 저장하면, 필드에 있는 엔티티도 저장  <small> # 좀더 알아볼것 </small> </li>\r\n              <li> CascadeType.MERGE : 엔티티를 합칠 때, 필드에 있는 엔티티도 합친다 <small> # </small> </li>\r\n              <li> CascadeType.REFRESH : 엔티티를 수정할 때, 필드에 있는 엔티티도 수정 <small> # </small> </li>\r\n              <li> CascadeType.REMOVE : 엔티티를 삭제할 때, 필드에 있는 엔티티도 삭제한다.  <small> # </small> </li>\r\n              <li> CascadeType.DETACH : 엔티티를 detach할때 , 필드에 있는 엔티티도 detach를 한다. <small> # 영속성 컨텍스트에서 엔티티를 제거(엔티티 삭제가 아님) </small> </li>\r\n              <li> CascadeType.ALL : 위에 있는 내용을 모두 적용 <small> # </small> </li> <br />\r\n            </li>\r\n            <li> targetEntity : 연관된 엔티티의 타입 정보를 설정?? 뭐지? </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpringJpa;","import React from 'react';\r\n\r\nconst SpringBasic = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> --------------------------- </summary>\r\n          <div className='block2'>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 스프링 기초 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 스프링 버전 확인 :  <span className='command'> ./gradlew --version </span> </li>\r\n              <li> 스프링과 스프링 시큐리티 버전은 맞추어서 사용해야 한다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @Autowired </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 스프링 컨테이너에 등록되어 있는 빈 객체들을 자동으로 주입해주는 방식, 만약에 스프링 컨테이너에 빈 객체가\r\n              존재하지 않는다면 에러가 발생을 하게된다. 만약에 에러를 발생시키지 않게 하려면 @Autowired(required=false)를\r\n              사용하는 방법이 존재한다.  </li>\r\n            <li> @Autowired(required=false)를 사용하면 의존성주입은 안하고 인스턴스 만들어서 빈은 등록가능하다.???? </li>\r\n            <li> 생성자, Setter, 필드에서 사용 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 의존성 주입(Dependency Injection) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> 객체를 직접 만들지 않고 주입받아 사용하는 방법 </li>\r\n            <div className=\"block4\">\r\n              <li> private Dependency dependency = new Dependency(); <small> // 직접 만드는 방법 </small> </li>\r\n              <li> this.dependency = dependency; <small> // 매개 변수로 외부에서 주입받는 방법 </small> </li>\r\n            </div>\r\n\r\n            <h2 className=\"h2\"> 📌 1. 생성자(Constructor) 주입(스프링 팀에서 추천하는 방식) </h2>\r\n            <li> 1. 생성자로 객체를 생성하는 시점에 인자에 있는 Bean을 호출 </li>\r\n            <li> 2. Bean을 호출할 때(초기에 생성x) BeanFacotry에 Bean을 만들고 만든 Bean을 찾음 </li>\r\n            <li> 3. Bean을 찾았으므로 생성자 인자에 Bean을 주입 </li>\r\n            <div className=\"block4\">\r\n              <li> private Obj obj; </li>\r\n              <li> public void class(Obj obj) {\"{\"}\r\n                <li> this.obj = obj; </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n            <li> 생성자가 1개일 때 스프링에서 지원하는 방식, 위의 예시와 같다. </li>\r\n            <div className=\"block4\">\r\n              <li> <small> @Autowire를 안붙여도 스프링 4.3부터 생성자가 1개이면 알아서 지원을 해준다. @RequiredArgsConstructor 필요 </small> </li>\r\n              <li> private final Obj obj; </li>\r\n            </div>\r\n\r\n            <h2 className=\"h2\"> 📌 2. 수정자(Setter) 주입 </h2>\r\n            <li> 빈 객체를 찾거나 빈 팩토리에 등록한후에 주입하려는 매개변수에 넣을 인자를 찾거나 생성, 그리고 주입을 한다.  </li>\r\n            <div className=\"block4\">\r\n              <li> private Obj obj; </li>\r\n              <li> @Autowired </li>\r\n              <li> public void class(Obj obj) {\"{\"}\r\n                <li> this.obj = obj; </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n\r\n            <h2 className=\"h2\"> 📌 3. 필드(Field) 주입(어노테이션 사용) </h2>\r\n            <li> 빈을 먼저 생성하고 주입을 해준다.  </li>\r\n            <li> 편리하지만 값을 변경하거나 하는 등 유연하게 대처할 수가 없다는 단점이 있다. </li>\r\n            <li> (단점) A가 B를, B가 A를 참조하는 순환참조를 방지할 수가 없다. </li>\r\n            <div className=\"block\">\r\n              <li> @Autowired </li>\r\n              <li> private Obj obj; </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 스프링이란?</summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> <a href=\"https://spring.io/guides\" target=\"_blank\" rel=\"noopener noreferrer\"> 스프링부트 문서 </a> </li>\r\n            <li> 스프링은 Ioc기반의 프레임워크, 자바 플랫폼 프레임워크 </li>\r\n            <li> 의존성 주입(Denpendency Injection) 의존성 주입: 개발자가 아닌 컨테이너가 관리하는 빈 객체를 주입하는 방법 </li>\r\n            <li> POJO(Plain Old Java Object): 기본적인 기능만 가진 자바 객체 </li>\r\n            <li> 컨테이너: BeanFactory와 ApplicationContext 2개의 대표적인 컨테이너가 있다.컨테이너는\r\n              인스턴스의 주기와 추가적인 기능을 관리하는 역할을 한다. </li>\r\n\r\n            <h2 className=\"h2\"> 📌 컨테이너의 빈 객체 </h2>\r\n            <li> CGLIB라는 바이트코드 조작 라이브러리를 이용하여 Bean객체를 싱글턴패턴으로 유지하게 한다.\r\n              클래스를 복제?한 클래스객체를 따로 만들어서 컨테이너에서 만들어서 사용한다. 컨테이너에\r\n              Bean객체가 없으면 Bean객체를 생성하고 존재한다면 기존에 Bean객체를 반환해준다. </li>\r\n\r\n            <h2 className=\"h2\"> 📌 스프링의 일반적인 작동과정 </h2>\r\n            <li> 1. 클라이언트 요청 </li>\r\n            <li> 2. Dispatcher Servlet 접근 </li>\r\n            <li> 3. Handler Mapping 참조하여 Controller 연결 </li>\r\n            <li> 4. Mapping된 Controller에 서비스 로직에 따라 DAO,Entity등을 통해 DB에 접근  </li>\r\n            <li> 5. 모델과 뷰 객체를 담아 DispatcherServlet에 반환 </li>\r\n            <li> 6. ViewResolver를 통해 View와 연결되어 화면으로 출력 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @Bean이란(좀더 보충 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 스프링 IoC 컨테이너가 관리하는 객체를 말합니다.  </li>\r\n            <li> ApplicationContext, BeanFactory는 IoC 컨테이너 </li>\r\n            <li> ApplicationContext는 BeanFactory를 상속을 받는다. </li>\r\n            <li>  </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> POJO(Plain Old Java Object) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 POJO가 탄생한 이유 </h2>\r\n            <li> 자바를 개발할 때 과거에 개발자가 비즈니스로직 + 트랜잭션,보안,필터 등등을 구현해야\r\n              했다. 그러므로 너무 많은 부담을 지게 되었고 그 부담을 덜기 위하여 기업에서 개발하기 위한\r\n              서비스 EJB(Enterprise Java Beans)가 탄생하여 부담이 줄어들었다. 하지만 작은 서비스를 개발할때도\r\n              거대한 EJB를 상속받아 사용해야되는 불편함이 있었고 기능을 바꾸기 위해서는 전체적으로 코드를\r\n              수정해야되는 문제점이 발생하였다. EJB는 객체지향의 특징과 장점을 사용할 수 없었다. </li>\r\n            <li> POJO는 이러한 문제점에서 벗어나 객체지향에 집중하고, 클래스나 라이브러리에 종속되지 않아\r\n              원하는 대로 사용을 할 수 있게 되었다. </li>\r\n\r\n            <h2 className=\"h2\"> 📌 POJO 사용 이유와 장점 </h2>\r\n            <li> 특정 환경에 종속이 되지 않는다. </li>\r\n            <li> 객체지향(OOP)를 자유롭게 사용할 수 있다. </li>\r\n            <li> 로우레벨은 분리하면서 필요한 로직을 작성할 수 있다. </li>\r\n            <li> 테스트 작업 환경에 좋다. </li>\r\n            <li> EJB의 서비스와 기술은 그대로 사용하면서 자바 객체지향도 사용을 할 수 있어 좋다. </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 윈도우에 빌드하는 방법(조사 더 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> gradlew.bat?? build  </li>\r\n            <li> cd bulid</li>\r\n            <li> cd libs </li>\r\n            <li> ls -arlth </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 암호화(나중에 알아보기) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Bcrypt </h2>\r\n            <li> npm install bcrypt --save </li>\r\n            <li> <a href=\"https://velog.io/@jy777hi/Bcrypt-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EC%95%94%ED%98%B8%ED%99%94\"\r\n              target=\"_blank\" rel=\"noopener noreferrer\"> 참고 </a> </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 sha256 </h2>\r\n            <li> npm install js-sha256 </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpringBasic;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst SpringThymeleaf = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> thymeleaf란 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className=\"h2\"> 📌 설명 </h2>\r\n                            <li> thymeleaf 공식 사이트: https://www.thymeleaf.org/ </li>\r\n                            <li> <a href=\"https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#standard-expression-syntax\" target=\"_blank\">    thymeleaf 예제 튜토리얼 </a> </li>\r\n                            <li> 스프링부트 메뉴얼: https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/\r\n                                html/spring-boot-features.html#boot-features-spring-mvc-template-engines </li>\r\n                            <li> spring에서 추천하는 템플릿 엔진 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> thymeleaf 기본 코드 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n                            <li> 기본 형식\r\n                                <div className='block3'>\r\n                                    <ul style={{ listStyle: 'none' }}>\r\n                                        <li> <h3 className=\"h3\">  </h3>\r\n                                            <li> {'<!DOCTYPE html>'} </li>\r\n                                            <li> {'<html lang=\"UTF-8\" xmlns:th=\"http://www.thymeleaf.org\">'} </li>\r\n                                            <li> {'<head>'}\r\n                                                <li> {'\t<meta charset=\"UTF-8\">'} </li>\r\n                                                <li> {'\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">'} </li>\r\n                                                <li> {'\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">'} </li>\r\n                                                <li> {'\t<title> 제목 </title>'} </li>\r\n                                            </li>\r\n                                            <li> {'</head>'} </li>\r\n                                            <li> {'<body>'} </li>\r\n                                            <li> {'</body>'} </li>\r\n                                            <li> {'</html>'} </li>\r\n                                        </li> <br />\r\n                                    </ul>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> thymeleaf에 live server 적용하기 (FW.Intellij) </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className=\"h2\"> 📌 설명 </h2>\r\n                            <li> Gradle에 compileOnly \"org.springframework.boot:spring-boot-devtools\"  </li>\r\n                            <li> application.properties 나 application.yml에 아래코드 추가\r\n                                <div className=\"block3\">\r\n                                    <li> spring.devtools.livereload.enabled=true  </li>\r\n                                    <li> spring.resources.static-locations=file:src/main/resources/static/  </li>\r\n                                    <li> spring.thymeleaf.cache=false  </li>\r\n                                    <li> spring.thymeleaf.prefix=file:src/main/resources/templates/  </li>\r\n                                </div>\r\n                            </li>\r\n                            <li> Ctrl + Shift + A - regi 입력 Registry... -\r\n                                compiler.automake.allow.when.app.running 체크\r\n                            </li>\r\n                            <li> Ctrl + Alt + S - Build, Execution, Deployment - Compiler\r\n                                - Build project automatically 체크  </li>\r\n                            <li> <a href=\"https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei\"\r\n                                target=\"_blank\" rel=\"noopener noreferrer\"> Browser Extension인 Live Reload 설치 </a>  </li>\r\n                            <li> 마지막으로 주의 : 서버 배포시 라이브 서버 관련내용들은 반드시 삭제해야함  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> thymeleaf 문법 (아직 정리 필요) </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className=\"h2\"> 📌 기본 속성 (정리 필요) </h2>\r\n                            <li> {' ${변수명} '} # 변수를 출력 </li>\r\n                            <li> {' *{}'} # 선택 변수 표현식\r\n                                <div className='block3'>\r\n                                    <li> {'<div th:object=\"${user}\">'}\r\n                                        <li> {'<p th:text=\"*{name}\"> </p>'} </li>\r\n                                        <li> {'<p th:text=\"*{password}\"> </p>'} </li>\r\n                                    </li>\r\n                                    <li> {'</div>'} </li>\r\n                                </div>\r\n                            </li>\r\n                            <li> {' #{} '} # 메시지 표현식 </li>\r\n                            <li> {' @{} '} # URL 표현식 </li>\r\n                            <li> {' ~{} '} </li>\r\n                            <li> 삼항연산 : x = f() ? f() : g() 이거와 같은 식 x = f() ?: g() </li>\r\n                            <li> {'${param.name} '} <small> html에서 name=\"\"에 있는 변수를 가져와서 사용 가능 </small>  </li>\r\n\r\n                            <h2 className=\"h2\"> ✔ 설명 {'&'} 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <li> <h3 className=\"h3\"> th:text th:utext </h3>\r\n                                        <li>  th:text : 서버에서 객체에 html태그를 담아 보내면 객체를 텍스트로 인식해서 출력</li>\r\n                                        <li>  th:utext : 서버에서 객체에 html태그를 담아 보내면 객체를 html태그로 인식해서 출력</li>\r\n                                        <li> {' <div th:text=\"${객체명}\"> </div> '} </li>\r\n                                        <li> {' <div th:utext=\"${객체명}\"> </div> '} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <div th:text=\"${user.id}\"> </div> '} <small> # user라는 객체의 id 필드 출력 </small> </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:value (확인필요) </h3>\r\n                                        <li> th:value : input태그에 값을 넣어줄때 사용 , + 기호로 여러개를 넣어줄 수 있음 </li>\r\n                                        <li> {' <div th:value=\"${객체명}+'}'문자열넣기'{'+${객체명}\"> </div> '} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li>  </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:with (with를 이용하여 변수를 만들면 범위가 어디까지인지 확인할 것) </h3>\r\n                                        <li> 변수값으로 지정해서 사용 , 객체를 변수에 넣고 변수를 text방식으로 출력 </li>\r\n                                        <li> {' <div th:with=\"변수명=${객체명}\" th:text=\"${변수명}\"> </div> '} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <div th:with=\"name=${user.name}\" th:text=\"${name}\"> </div> '}  </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:switch , th:case (객체값이 존재하지 않는다면 에러가 나는지 안나는지 확인) </h3>\r\n                                        <li> switch - case 문 사용방법 </li>\r\n                                        <li> {' <div th:switch=\"${객체명}\"> </div> '}\r\n                                            <li> {' <div th:case=\"'}'조건값'{'\"> </div> '} </li>\r\n                                            <li> {' <div th:case=\"'}'객체명'{'\"> </div> '} </li>\r\n                                            <li> {' <div th:case=\"*\"> </div> '} # 나머지 모든 경우 </li>\r\n                                        </li>\r\n                                        <li> {'</div>'} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <div th:switch=\"${user.name}\"> </div> '}\r\n                                                <li> {' <div th:case=\"'}'mike'{'\"> 사용자는 mike 입니다. </div> '} </li>\r\n                                                <li> {' <div th:case=\"'}'sam'{'\"> 사용자는 sam 입니다.</div> '} </li>\r\n                                                <li> {' <div th:case=\"*\"> 사용자는 ???입니다. </div> '} # 나머지 모든 경우 </li>\r\n                                            </li>\r\n                                            <li> {'</div>'} </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:if (else 사용방법에 대해 테스트 해보기, 일단 추측으로 적어놓음) </h3>\r\n                                        <li> if,if else문 </li>\r\n                                        <li> {' <div th:if=\"${객체명}=='}'조건값'\"{' th:text=\"${객체명}\"> </div> '} </li>\r\n                                        <li> {' <div th:unless=\"${객체명}=='}'조건값'\"{' th:text=\"${객체명}\"> </div> '} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <div th:if=\"${user.name}=='}'mike'\"{' th:text=\"${mike}\"> </div> '} </li>\r\n                                            <li> {' <div th:unless=\"${user.name}=='}'sam'\"{' th:text=\"${sam}\"> </div> '} </li>\r\n                                            <li> {' <div th:unless=\"true\" th:text=\"${user.name}\"> </div> '} </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:each </h3>\r\n                                        <li> 리스트 객체를 받아와서 foreach문 처럼 처리 </li>\r\n                                        <li> {' <div th:each=\"사용할변수명:${리스트객체}\"> </div> '}\r\n                                            <li> {' <div th:text=\"${사용할변수명.리스트객체의멤버변수명}\"> </div> '} </li>\r\n                                        </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <div th:each=\"user:${users}\"> </div> '} <small> # {'List<User> users'} </small>\r\n                                                <li> {' <div th:text=\"${user.name}\"> </div> '} </li>\r\n                                            </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:action (context-path가 뭔지는 알았지만 나중에 테스트를 좀 해봐야할 것 같다.) </h3>\r\n                                        <li> th:action은 context-path를 생략할 수 있다 </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <form th:action =\"{@{/경로}}\"> </form> '} </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:href </h3>\r\n                                        <li> html의 a태그의 href 속성이다. </li>\r\n                                        <li> {' <a th:href=\"@{url주소나 경로}\"> </a> '} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <a th:href=\"@{http://www.naver.com}\"> </a> '} </li>\r\n                                            <li> {' <a th:href=\"@{/naver/news}\"> </a> '} </li>\r\n                                            <li> {' <a th:href=\"@{/naver/news(id=1,name='}'test'{')}\"> </a> '} </li>\r\n                                            <li> {' <a th:href=\"@{/naver/news(id=${user.id})}\"> </a> '} </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:attr (알아 볼것) </h3>\r\n                                        <li>  </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:object </h3>\r\n                                        <li> form 태그에서 submit으로 보낼때 객체로 설정 </li>\r\n                                        <li> 객체를 받아와서 뿌려줄수도 있고, 폼태그와 같이 객체를 담아서 다시 보낼수도 있다. </li>\r\n                                        <li> {'<form action=\"@{주소나 경로}\" th:object=\"${사용할객체명 혹은 값을 받은 객체명}\"> method=\"post\" '} </li>\r\n                                        <li> {' </form>'} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {'<form action=\"@{/userlogin}\" th:object=\"${user}\"> method=\"post\" '}\r\n                                                <li> {' <input type=\"text\" th:field=\"*{id}\" /> '} <small> # *은 상단에 보이는 객체의 필드라는 뜻 </small> </li>\r\n                                                <li> {' <input type=\"password\" th:field=\"*{password}\" /> '} <small> # {' *{password} 와 ${user.password} 같은의미 '} </small> </li>\r\n                                            </li>\r\n                                            <li> {' </form>'} </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:fragement th:insert th:replace (확인필요)  </h3>\r\n                                        <li> th:fragement : 공통으로 사용되는 html태그를 통째로 가져옴 </li>\r\n                                        <li> th:insert : th:fragement로 정의한 태그 덩어리를 지정한 태그 내부에 불러옴 </li>\r\n                                        <li> th:insert : th:fragement로 정의한 태그 덩어리를 지정한 태그를 제거하고 불러옴 </li>\r\n                                        <li> {' <div th:fragment=\"fragment참조이름\">  </div> '} </li> <small> # 선언한 div 태그 안에 태그들까지 전부 참조 </small>\r\n                                        <li> {' <div th:insert=\"~{/common :: fragment참조이름}\"> </div>'} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li>  <small> templates/common.html에 div 태그라고 가정 </small>\r\n                                                <li> {' <div th:fragment=\"fragment참조이름\"> <span> div태그 내부의 span태그도 참조됩니다. </span> </div> '} </li>\r\n                                            </li> <br />\r\n                                            <li> <small> common.html에 태그 불러오기  </small>\r\n                                                <li> {'<div th:insert=\"~{/common :: fragment참조이름}\"></div>'}  </li>\r\n                                                <li> {'<div th:replace=\"~{/common :: fragment참조이름}\"></div>'}  </li>\r\n                                            </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:classappend (사용방법 좀 더 알아보기) </h3>\r\n                                        <li> html 태그에 속성을 추가 할 수 있다. </li>\r\n                                        <li> {' <div th:classappend=\"'}'추가할 속성'{'\"> </div> '} </li>\r\n                                        <li> 추가할 속성 : 'disabled' ,  </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <div th:classappend=\"${currentPage} == 0 ? '}'disabled'{'\"> </div> '} </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                    <li> <h3 className=\"h3\"> th:errors (사용방법 좀 더 알아보기) </h3>\r\n                                        <li> 에러를 필드에 담아서 보내서 에러가 있는 객체가 있으면 에러 발생, 아마 get 파라미터에 error이 오는것으로 알고는 있음 </li>\r\n                                        <li> {' <div th:errors=\"${}\"> </div> '} </li>\r\n                                        <div className=\"block4\">\r\n                                            <li> {' <div th:errors=\"${user}\"> </div> '} </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> thymeleaf 와 spring security </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className=\"h2\"> 📌 thymeleaf sec 사용조건 </h2>\r\n                            <li> sec:를 사용하려면\r\n                                <div className=\"block3\">\r\n                                    <li> {'<html lang=\"UTF-8\" xmlns:th=\"http://www.thymeleaf.org\"  xmlns:sec=\"http://www.thymeleaf.org/extras/spring-security\">'} <small> # html 상단에 추가 </small> </li>\r\n                                    <li> implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5' <small> # build.gradle dependencies에 추가 </small> </li>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <h2 className=\"h2\"> ✔ 설명 {'&'} 예시</h2>\r\n                            <div className=\"block3\">\r\n\r\n                                <li> <h3 className=\"h3\"> sec:authorize (나중에 확인) </h3>\r\n                                    <li> 권한과 관련된 내용을 처리할 수 있다. </li>\r\n                                    <div className='block4'>\r\n                                        <li> {' <div sec:authorize=\"isAnonymous()\"> </div> '} </li>\r\n                                        <li> {' <div sec:authorize=\"isAuthenticated()\"> </div> '} </li>\r\n                                        <li> {' <div sec:authorize=\"!isAuthenticated()\"> </div> '} </li>\r\n                                        <li> {' <div sec:authorize=\"hasRole('}'ROLE_USER'{')\"> </div> '} </li>\r\n                                        <li> {' <div sec:authorize=\"!hasRole('}'ROLE_USER'{')\"> </div> '} </li>\r\n                                        <li> {' <div sec:authorize=\"hasAnyRole('}'ROLE_USER','ROLE_ADMIN'{')\"> </div> '} </li>\r\n                                    </div>\r\n                                </li> <br />\r\n\r\n                                <li> <h3 className=\"h3\"> sec:authentication (확인필요, jsp에서 사용되는 것이 spring에는 적용이 되지 않음 다시한번 확인 할것!!) </h3>\r\n                                    <li>  </li>\r\n                                    <li> {' <div class=\"nav-item\" sec:authorize=\"isAuthenticated()\"> '}\r\n                                        <li> {' <span sec:authentication=\"name\">  </span> '} <small> 사용자 접속 이름 </small> </li>\r\n                                        <li> {' <span sec:authentication property=\"principal\" var=\"\">  </span> '} </li>\r\n                                        <li> {' <span sec:authentication property=\"principal.authorities\" var=\"\">  </span> '} <small> # 사용자 권한 </small> </li>\r\n                                        <li> {' <span sec:authentication property=\"principal.username\" var=\"\">  </span> '} <small> #사용자 접속 이름 </small> </li>\r\n                                        <li> {' <span sec:authentication property=\"principal.password\" var=\"\">  </span> '} </li>\r\n                                        <li> {' <span sec:authentication property=\"principal.email\" var=\"\">  </span> '} </li>\r\n                                        <li> {' <span sec:authentication property=\"principal.enabled\" var=\"\">  </span> '} </li>\r\n                                        <li> {' <span sec:authentication property=\"principal.accountNonExpired\" var=\"\">  </span> '} </li>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> {' </div> '} </li>\r\n                                    <div className='block4'>\r\n                                        <li> </li>\r\n                                    </div>\r\n                                </li> <br />\r\n\r\n                                <li> <h3 className=\"h3\"> #authorization ( 나중에 더 알아보기 )</h3>\r\n                                    <li> sec:authentication에서 인증된 객체의 이름을 가져오려고 했으나 되지를 않아 방법을 찾던 도중 발견 </li>\r\n                                    <li> 시큐리티 메소드를 가져와서 사용하는 것 같아서 편리함 </li>\r\n                                    <li> 인증되지 않은 객체가 접근하면 에러를 발생시키므로 authorization.getAuthentication() != null로 먼저 확인하고 사용한다. </li>\r\n                                    <li> {' <div th:text=\"${#authorization.getAuthentication()}\"> </div> '} <small> # authorization 정보 출력 </small> </li>\r\n                                    <li> {' <div th:text=\"${#authorization.getAuthentication().getPrincipal()}\"> </div> '} <small> # 인증 객체 정보 출력 </small> </li>\r\n                                    <li> {' <div th:text=\"${#authorization.expression('}'isAuthenticated()'{')}\" }>  </div> '} <small> # true 출력 </small>  </li>\r\n                                    <div className='block4'>\r\n                                        <li> {' <div th:if=\"${#authorization.getAuthentication().getPrincipal().getUsername() == board.client.username} </div> '} </li>\r\n                                    </div>\r\n                                </li> <br />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringThymeleaf;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst SpringLombok = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n\r\n\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @Getter @Setter @Data @ToString </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 @Getter @Setter </h2>\r\n              <li> Model 관련 클래스 위에 선언 </li>\r\n              <li> Getter,Setter 메소드를 구현 </li>\r\n              <li> 기본적으로 public, @Setter(AccessLevel.[PRIVATE | PROTECTED ]) </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Data </h2>\r\n              <li> Model 관련 클래스 위에 선언 </li>\r\n              <li> @ToString + @EqualsAndHashCode + @Getter + @Setter + @RequiredArgsConstructor </li>\r\n              <li> 무거워서 사용을 권장하지 않음, @AllArgsConstructor동시에 사용하면 @RequiredArgsConstructor사용불가 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @ToString </h2>\r\n              <li> Model 관련 클래스 위에 선언 </li>\r\n              <li> ToString 메소드를 구현 </li>\r\n              <li> @ToString(exclude=\"password\") #password 필드를 toString메소드에서 제외시킨다. </li>\r\n\r\n              <h2 className=\"h2\"> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className=\"block3\">\r\n                  <li> <h3 className=\"h3\"> 🎈 @Getter @Setter </h3>\r\n                    <li > @Getter </li>\r\n                    <li > @Setter </li>\r\n                    <li> public class User {'{'}\r\n                      <li> private String id; </li>\r\n                    </li>\r\n                  </li> <br />\r\n\r\n                  <li> <h3 className=\"h3\"> 🎈 @Data </h3>\r\n                    <li > @Data </li>\r\n                    <li> public class User {'{'}\r\n                      <li> private String id; </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </li> <br />\r\n\r\n                  <li> <h3 className=\"h3\"> 🎈 @ToString </h3>\r\n                    <li > @ToString(exclude=\"password\") </li>\r\n                    <li> public class User {'{'}\r\n                      <li> private String id; </li>\r\n                      <li> private String password; </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @Entity @Table</summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 @Entity </h2>\r\n              <li> 클래스 위에 선언 </li>\r\n              <li> 엔티티로 사용한다고 선언 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Table </h2>\r\n              <li> 클래스 위에 선언 </li>\r\n              <li> DB의 테이블과 매핑되는 테이블이름을 지정할 수 있음 </li>\r\n              <li> @Table(name=\"테이블이름지정\")</li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @RequestParam @RequestBody @ModelAttribute @ReponseBody </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 @RequestParam </h2>\r\n              <li> HttpServletRequest 객체 역할 </li>\r\n              <li> 1개의 파라미터를 받아옴 </li>\r\n              <li> http에서 파라미터가 오지 않으면 400 Error 발생 </li>\r\n              <li> Controller메소드의 파라미터와 웹 요청 파라미터와 맵핑하는 용도 </li>\r\n              <li> @RequestParam(value=\"파라미터명\", required = false, defaultValue=\"디폴트값\") 타입 변수명 <small>  </small> </li>\r\n              <li> @RequestParam {'HashMap<타입,타입> map객체명'} </li>\r\n              <li>  </li> <br />\r\n\r\n              <h2 className=\"h2\"> 📌 @RequestBody </h2>\r\n              <li> Json 형태의 http body를 자바 객체 로 변환(Reflection 사용) </li>\r\n              <li> MessageConverter 나 MappingJackson2HttpMessageConverter 를 이용 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @ModelAttribute </h2>\r\n              <li> multipart/form-data 형태의 http body 내용과 파라미터를 setter를 통해 1대1 매핑 </li>\r\n              <li> 매핑 중에 타입일치 등 검증과정이 진행 </li>\r\n              <li> setter함수가 없으면 바인딩이 되지 않음 </li>\r\n              <li> @ModelAttribute(\"특정파라미터명\") 객체타입 변수명 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @ReponseBody </h2>\r\n              <li> http응답 데이터를 담은 공간 </li>\r\n\r\n              <h2 className=\"h2\"> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className=\"h3\"> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @PostMapping @GetMapping @RequestMapping @PathVariable </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 @PostMapping </h2>\r\n              <li> Post방식으로 요청을 받을 때 맵핑을 처리함 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @GetMapping </h2>\r\n              <li> Get방식으로 요청을 받을 때 맵핑을 처리함 </li>\r\n              <li> public String board(Model model) {'{'}\r\n                <li> board = boardRepository.findById(id).orElse(null);  </li>\r\n                <li> model.addAttribute(\"board\", board);  </li>\r\n                <li> return \"boardForm\";  </li>\r\n              </li>\r\n              <li> {'}'} </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @RequestMapping </h2>\r\n              <li> 어떤 Controller에 어떤 메소드를 처리할지 맵핑하는 용도 </li>\r\n              <li> Controller 상단에 선언 </li>\r\n              <li> @RequestMapping(\"/경로명\") </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @PathVariable </h2>\r\n              <li> 매핑경로에 있는 변수를 사용할 수 있게 해준다. </li>\r\n              <li> @GetMapiing(\"/aaa/{'{abc}'}\") </li>\r\n              <li> (@PathVariable(name=\"abc\") 타입 변수명) </li>\r\n\r\n\r\n\r\n              <h2 className=\"h2\"> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className=\"h3\"> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @Configuration @Service @Repository@Entity @Component </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 @Configuration </h2>\r\n              <li> Bean으로 등록하게 해주는 어노테이션 </li>\r\n              <li> 싱글톤이 되게 해준다. , CGLIB 바이트조작 라이브러리를 사용해서 임의의 클래스를 생성해서 사용하게 한다. </li>\r\n              <li> 스프링컨테이너에서 관리 가능 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Service </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Repository </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Controller </h2>\r\n              <li> Model 객체를 이용하여 데이터를 담고 view를 찾아 이동하는 역할 </li>\r\n\r\n\r\n              <h2 className=\"h2\"> 📌 @Entity </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Component </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className=\"h2\"> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className=\"h3\"> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @PageableDefault @SortDefault </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌  @PageableDefault </h2>\r\n              <li> 컨트롤러 클래스의 매핑 메소드에 변수에 선언 </li>\r\n              <li> @PageableDefault(size=1,sort=\"필드명\",direction = Sort.Direction.ASC) Pageable pageable </li>\r\n              <li> Page타입에는 pageNumber,pagesize,totalpage 등의 멤버변수가 존재한다. </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @SortDefault </h2>\r\n              <li> @PageableDefault는 1개의 조건만 정렬이 가능하지만 SortDefault는 여러개의 조건으로 정렬이 가능하다. </li>\r\n              <div className=\"block4\">\r\n                <p> {'   @SortDefault.SortDefaults({ '}\r\n                  <p> {' @SortDefault(sort = \"title\", direction = Sort.Direction.DESC), '} </p>\r\n                  <p> {' @SortDefault(sort = \"writer\", direction = Sort.Direction.DESC) '} </p>\r\n                </p>\r\n                <p> {' }) '} </p>\r\n              </div>\r\n\r\n              <h2 className=\"h2\"> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className=\"h3\"> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @Temporal @Transient @Enumerated </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 @Temporal </h2>\r\n              <li> 기본값은 timestamp  </li>\r\n              <li> @Temporal(TemporalType.DATE) : 년-월-일 </li>\r\n              <li> @Temporal(TemporalType.TIME) : 시:분:초 </li>\r\n              <li> @Temporal(TemporalType.TIMESTAMP) : timestamp 타입(date+time) </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Transient </h2>\r\n              <li> 테이블의 어떤 컬럼과 매핑하지 않을 것을 나타내는 어노테이션 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Eumerated </h2>\r\n              <li> @Eumerated([EnumType.ORDINAL , EnumType.STRING])\r\n                <small> # ENUM의 값과 매칭되는 값을 ORDINAL은 번호로 DB에 저장, STRING은 문자열로 DB에 저장 </small> </li>\r\n\r\n              <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n              <li> 장점 : </li>\r\n              <li> 단점 : </li>\r\n\r\n              <h2 className=\"h2\"> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className=\"h3\"> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @Slf4j @Log4j2 @Syncronized @Value @Delegate @Cleanup @EqualsAndHashCode\r\n              @PrePersist , @PreUpdate @DynamicInsert , @DynamicUpdate @Transactional @ControllerAdvice\r\n              @CommandMap @RequestPart @SessionAttribute(보류) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 설명 </h2>\r\n              <li> 1 </li>\r\n              <li> 2 </li>\r\n              <li> 3 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n              <li> 장점 : </li>\r\n              <li> 단점 : </li>\r\n\r\n              <h2 className=\"h2\"> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className=\"h3\"> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpringLombok;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  ${(props) => props.count === 4 ? \"grid-template-columns: repeat(4, 1fr);\"\r\n    : (\"grid-template-columns: repeat(\" + `${props.count}` + \", 1fr);\")}\r\n`;\r\n//grid-template-columns: repeat(4fr, 1fr);\r\n\r\nconst GridTableCountNRow100px = ({ children, count = 4 }) => {\r\n\r\n  return (\r\n    <Container count={count}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GridTableCountNRow100px;","import React from 'react';\r\nimport styled from 'styled-components';\r\nconst Container = styled.div`\r\n  background-color: #aeaeae;\r\n  border-radius: 10px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst GridColumn = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GridColumn;","import React from 'react';\r\nimport styled from 'styled-components';\r\nconst Container = styled.div`\r\nbackground-color: #909090;\r\nborder-radius: 10px;\r\npadding-left: 10px;\r\nword-break: keep-all;\r\n`;\r\n\r\nconst GridRow = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GridRow;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  background-color: #eaeaea;\r\n  border-radius: 10px;\r\n  padding-left: 10px;\r\n  word-break: keep-all;\r\n`;\r\n\r\nconst GridField = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GridField;","import React, { useEffect, useRef } from 'react';\r\nimport GridTableCountNRow100px from '../../Templates/Grid/GridTableCountNRow100px';\r\nimport GridColumn from '../../Templates/Grid/GridColumn';\r\nimport GridRow from '../../Templates/Grid/GridRow';\r\nimport GridField from '../../Templates/Grid/GridField';\r\n\r\nconst SpringModel = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Dao 설명 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Dao 예시 </summary>\r\n          <div className='block2'>\r\n\r\n            {/*<h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>*/}\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈  </h3>\r\n                <div className='block4'>\r\n                  <li> @Getter </li>\r\n                  <li> @Builder </li>\r\n                  <li> @Entity </li>\r\n                  <li> @Table(name=\"User\") <small> 데이터베이스 이름 명시 </small> </li>\r\n                  <li> public class UserDao {\"{\"}\r\n                    <li> @Id </li>\r\n                    <li> @GeneratedValue(strategy = GenerationType.IDENTITY) </li>\r\n                    <li> private Long id; </li>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @Id @Column @GeneratedValue </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 @Id </h2>\r\n            <div className=\"block4\">\r\n              <li> 식별자로 사용할 변수 위에 선언 </li>\r\n              <li> 엔티티 식별자로 사용, DB테이블의 PK로도 사용이 된다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 @Column </h2>\r\n            <div className=\"block4\">\r\n              <li> nullable = false 를 사용하면 엔티티 필드에는 들어감 (@Notnull 추천)   </li>\r\n              <h2 className='h2'> 📌 속성 </h2>\r\n              <li> @Column(name=\"이름\") </li>\r\n              <li> @Column(nullable = false) , false(null비허용), true(null허용,기본값) </li>\r\n              <li> @Column(unique=true) , unique 속성 설정 </li>\r\n              <li> @Column(length=10) , 길이 10글자까지 </li>\r\n              <li> @Column(columnDefinition=\"데이터타입 제약조건 '제약조건값'\") </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 @GeneratedValue </h2>\r\n            <li> PK값을 가진 변수위에 선언, PK의 값을 자동 생성하는 방법 </li>\r\n            <div className='block4'>\r\n              <li> @GenerateValue(strategy = GenerationType.[IDENTITY] : DB의 identity 컬럼을 이용 <small> mysql에서 사용, auto increment </small> </li>\r\n              <div className=\"block3\">\r\n                <li> transaction.commit()이 아니라 entityManager.persist() 사용할 때 insert 호출   </li>\r\n                <li> insert를 호출하고 바로 Id값을 받고 영속성 컨텍스트에 저장한다. </li>\r\n              </div>\r\n            </div>\r\n            <div className=\"block4\">\r\n              <li> @GenerateValue(strategy = GenerationType.[ATUO] : (persistence provider)가 특정 DB에 맞게 자동 선택(오라클은 sequence, mysql은 auto_increment) </li>\r\n            </div>\r\n            <div className=\"block4\">\r\n              <li> @GenerateValue(strategy = GenerationType.[TABLE] : 유일성이 보장된 데이터베이스 테이블을 이용 , @TableGenerator와 같이 사용 </li>\r\n              <div className=\"block3\">\r\n                <li> TableGenerator 필요 </li>\r\n                <li> 키를 생성하는 테이블을 만들어서 사용하여 모든 DB에 적용을 할 수 있다. </li>\r\n                <li> @TableGenerator(name=\"TEM_SEQ_GENERATOR\",table=\"TEAM_SEQUENCES\",pkColumnValue=\"TEAM_SEQ\",allocationSize=1) </li>\r\n              </div>\r\n            </div>\r\n            <div className=\"block4\">\r\n              <li> @GenerateValue(strategy = GenerationType.[SEQUENCE] : DB의 시퀸스 컬럼을 이용, 여러개의 데이터를 수정하거나 삽입하는 경우 사용 , Oracle에서 사용 </li>\r\n              <div className=\"block3\">\r\n                <li> @SequenceGenrator(name=\"TEAM_SEQ_GENERATOR\", sequenceName=\"TEAM_SEQ\"(매핑할 DB시퀸스 이름),\r\n                  initialValue=1(시작값), allocationSize=1(증가값))를 클래스에 선언 </li>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 유효성 관련 어노테이션 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 gradle 설정 </h2>\r\n            <div className='block4'>\r\n              <li> implementation 'org.springframework.boot:spring-boot-starter-validation' </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> @Builder.Default </li>\r\n              <li> @Positive @PositiveOrZero @Negative @NegativeOrZero </li>\r\n              <li> @Size(min=1,max=2) @Min(1) @Max(2) </li>\r\n              <li> @Null </li>\r\n              <li> @NotNull # Null 불가능 </li>\r\n              <li> @NotEmpty # Null, 빈문자열(\"\") 불가능 , \" \" 은 가능 </li>\r\n              <li> @NotBlank # Null, 빈문자열(\"\") , \" \" 모두 불가능</li>\r\n              <li> @Pattern(regex=\"이곳에 정규표현식 작성\") </li>\r\n              <li> @Future @FutureOrPresent @Past @PastOrPresent </li>\r\n              <li> @Email </li>\r\n              <li> @AssertTrue @AssertFalse # 값이 항상 true거나 false </li>\r\n              <li> @Digits(integer= 최대허용되는정수자릿수 , fraction = 최대허용되는소수자릿수 ) </li>\r\n              <li> @DecimalMax(value=) @DecimalMin(value=) </li>\r\n              <li> 어노테이션에 추가 속성 : message=\"에러 날 경우 메시지 표현\" </li>\r\n              <li> @Getter: getter 메소드 </li>\r\n              <li> @Setter: setter 메소드, 일반적으로 사용을 하지 않음 </li>\r\n              <li> @org.hibernate.annotations.DynamicUpdate : 엔티티에 선언하며 레코드를 전체 업데이트 하지않고\r\n                일부만 업데이트를 하게 해준다.  </li>\r\n              <li> @NamedQuery(name=\"ENTITY.Repository메소드명\",query=\"사용자정의쿼리작성\") </li>\r\n              <li> @Temporal(TemporalType.TIMESTAMP) # 자바의 날짜 타입 사용 </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @NoArgsConstructor </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 기본 생성자의 접근제어자 설정 </h2>\r\n            <li> public으로 해놓으면 좋지않음 </li>\r\n            <li> @NoArgsConstructor(force=true) <small> 초기값이 필요한 final 변수에 null,0 등 기본값을 초기화해준다. </small> </li>\r\n            <li> @NoArgsConstructor는 @NonNull을 무시 </li>\r\n            <li> @NoArgsConstructor(AccessLevel.PROTECTED) </li>\r\n            <li> @NoArgsConstructor(AccessLevel.PUBLIC) </li>\r\n            <li> @NoArgsConstructor(AccessLevel.PRIVATE) </li>\r\n            <li> 기본 생성자가 만들어지고 빌더 패턴이 작동 </li>\r\n            <li> @Builder를 사용하게 되면 기본생성자외에 다른 생성자가 없어서 에러가 발생한다. </li>\r\n            <div className=\"block4\">\r\n              <li> 1. @AllArgsConstructor을 같이 사용한다. </li>\r\n              <li> 2. @Builder를 생성자에 설정한다. </li>\r\n              <div className=\"block4\">\r\n                <li> @Builder </li>\r\n                <li> public 메소드(데이터타입 매개변수명) {\"{\"}\r\n                  <li> this.필드명 = 값; </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @AllArgsConstructor </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 모든 필드에 파라미터로 값을 넣는 생성자를 만들어준다. </li>\r\n            <li> public class User {'{'}\r\n              <li> private final String id; #생성자 필드에 포함</li> <br />\r\n              <li> @Nonnull private String id; #생성자 필드에 포함</li>\r\n              <li> private String id; #생성자 필드에 포함되지 않음</li>\r\n            </li>\r\n            <li> {'}'} </li> <br />\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @RequiredArgsConstructor </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> final 이나 @NonNull 필드만 파라미터로 받는 생성자 선언 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (spring, mysql, oracle, js) 데이터 비교 </summary>\r\n          <div className='block2'>\r\n            <div className=\"block4\">\r\n              <GridTableCountNRow100px count=\"5\">\r\n                <div> </div>\r\n                <GridColumn> 스프링 </GridColumn>\r\n                <GridColumn> mysql </GridColumn>\r\n                <GridColumn> oracle </GridColumn>\r\n                <GridColumn> 자바스크립트 </GridColumn>\r\n\r\n                <GridRow> 문자열 </GridRow>\r\n                <GridField> String </GridField>\r\n                <GridField> varchar(255) </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField> String </GridField>\r\n\r\n                <GridRow> 문자 </GridRow>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n\r\n                <GridRow> 날짜 </GridRow>\r\n                <GridField> LocalDate </GridField>\r\n                <GridField> date </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n\r\n                <GridRow> 날짜 </GridRow>\r\n                <GridField> LocalDateTime </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n\r\n                <GridRow> 큰 정수 </GridRow>\r\n                <GridField> Long </GridField>\r\n                <GridField> bigint </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n\r\n                <GridRow> 정수 </GridRow>\r\n                <GridField> Integer </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n\r\n                <GridRow> 참,거짓일때 </GridRow>\r\n                <GridField> Boolean </GridField>\r\n                <GridField> bit(1) </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n\r\n                <GridRow>  </GridRow>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n                <GridField>  </GridField>\r\n\r\n              </GridTableCountNRow100px>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @CreationTimestamp @UpdateTimestamp  </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> hibernate 어노테이션 </li>\r\n\r\n            <h2 className='h2'> 📌 @CreationTimestamp </h2>\r\n            <li> INSERT 쿼리가 발생할 때 현재의 시간을 넣어준다. </li>\r\n\r\n            <h2 className='h2'> 📌 @UpdateTimestamp </h2>\r\n            <li> UPDATE 쿼리가 발생할 때 현재의 시간을 넣어준다. </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>     @CreationTimestamp </li>\r\n                  <li>     @Column(name = \"created_at\") </li>\r\n                  <li>     private LocalDateTime createdAt; </li>\r\n                  <li>  </li>\r\n                  <li>     @Column(name = \"updated_at\") </li>\r\n                  <li>     @UpdateTimestamp </li>\r\n                  <li>     private LocalDateTime updatedAt; </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <br />\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 자바스크립트와 스프링 데이터 비교 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 자바스크립트 Axios 👉 스프링  </li>\r\n            <li> new Date() 👉 String <small> \"Thu Jan 06 2022 02:54:07 GMT+0900 (한국 표준시)\" </small>  </li>\r\n            <li> new Date() 👉 LocalDate ❌ </li>\r\n            <li> new Date() 👉 LocalTime ❌ </li>\r\n            <li> \"11.11.11\" 👉 LocalDate ❌ </li>\r\n            <li> \"[11.11.11]\" 👉 LocalDate ❌ </li>\r\n            <li> \"11:11:11\" 👉 LocalTime ❌ </li>\r\n            <li> \"2020-11-11 12:12:12\" 👉 @DateTimeFormat(pattern=\"yyyy-MM-dd'T'HH:mm:ss\") ❌ </li>\r\n            <li> \"2020-11-11 12:12:12\" 👉 @DateTimeFormat(pattern=\"yyyy-MM-ddTHH:mm:ss\") ❌ </li>\r\n            <li> \"2020-11-11 12:12:12\" 👉 @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") ✅\r\n              <small> 주의: 생성자,빌더,set으로 받아오는 매개변수에 선언해야한다. , @RequestBody에서 사용 </small> </li>\r\n            <li> \"2020-11-11 12:12:12\" 👉  </li>\r\n            <li> \"2020-11-11 12:12:12\" 👉  </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> serialVersionUID </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> private static final long serialVersionUID = 1L; </li>\r\n            <li> Version을 일치시켜주어 Serialize와 Deserialize를 맞춰준다. </li>\r\n            <li> 컴파일러가 계산한 값을 부여하는데 Serializable Class , Outer Class가 변경되면\r\n              serialVersionUID값이 변하게 된다. 값이 다르게 되면 InvalidClassExceptions가 발생한다 </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> DTO </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> Layer와 Layer사이에서 데이터를 교환하는 객체(DB Layer에서만 사용x)</li>\r\n            <li> 로직이 없는 순수한 객체, 생성자를 만드는데만 사용 </li>\r\n            <li> 로직을 가지지 않고 getter,setter 운반만 하는 역할 </li>\r\n            <li> 근데 setter를 사용하지 않고도 사용하는 경우가 많으므로 setter는 없애도 될것같다.  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <li> <h3 className=\"h3\"> 🎈 </h3>\r\n                  <li>  </li>\r\n                </li> <br />\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> ----------------------------------------------------- </summary>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> VO (내용 보충 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> Value Object </li>\r\n            <li> VO는 메모리 주소 참조와 관련이 있는데</li>\r\n            <li> equals() 와 hashcode() 메소드를 사용 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <li> <h3 className=\"h3\"> 🎈 </h3>\r\n                  <li>  </li>\r\n                </li> <br />\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JDBC API ( 나중에 천천히 정리 , 정리 x ) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> 직접 JDBC를 Connection으로 연결하고 쿼리를 작성해서 넣어주고 excute를 재주고 연결도 끊어주어야 하는 방법(불편) </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 코드 설명 </h2>\r\n            <li>  </li>\r\n            <li> sql = \"쿼리작성\"; </li>\r\n            <li> pstmt.executeUpdate(sql); </li>\r\n            <li> ResultSet rs = stmt.executeQuery(sql); <small> #  </small> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <li> <h3 className=\"h3\"> 🎈 </h3>\r\n                  <li>  </li>\r\n                </li> <br />\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JPQL </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> Java Persistence Query Language </li>\r\n            <li> DB쿼리가 아닌 객체지향 쿼리 </li>\r\n            <li> 특정 SQL에 의존하지 않는 쿼리 </li>\r\n            <li> SQL과 쿼리 구조는 비슷해서 사용하기 쉬움 </li>\r\n            <li> SQL쿼리와는 다르게 JPQL는 별칭을 필수로 사용함 </li>\r\n            <li> JPQL 실행 시 쿼리객체(TypedQuery , Query) 생성 필요 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 EntityManagerFactory </h2>\r\n            <li> 비용이 비싸서 어플리케이션에서 1개만 만들어서 사용 </li>\r\n            <li> 여러 스레드가 동시에 접근이 가능, 스레드끼리 공유가 가능 </li>\r\n            <li> 어플리케이션이 종료되기전에 닫아주어야 한다. </li>\r\n            <div className=\"block4\">\r\n              <li> EntityManagerFactory emf = Persistence.createEntityManagerFactory(\"jpabook\"); </li>\r\n            </div>\r\n\r\n            <h2 className=\"h2\"> 📌 EntityManager </h2>\r\n            <li> 여러 스레드가 동시에 접근이 불가능 </li>\r\n            <li> 스레드간 공유 불가능 </li>\r\n            <li> 사용자의 요청에 1개씩 만들어짐 </li>\r\n            <li> 만들어지는 비용이 비싸지는 않지만 닫아주어야 한다. </li>\r\n            <div className=\"block4\">\r\n              <li> EntityManager em = emf.createEntityManager(); </li>\r\n            </div>\r\n\r\n            <h2 className=\"h2\"> 📌 Persistence Context  </h2>\r\n            <li> Entity를 저장하는 환경 </li>\r\n            <li> 논리적인 개념에 가까움</li>\r\n            <li> Persistence Context에 EntityManager가 접근하여 Entity를 관리한다.  </li>\r\n            <div className=\"block4\">\r\n              <img alt=\"\" style={{ width: \"60%\" }} src={process.env.PUBLIC_URL + '/img/SpringModel/EntityManager.svg'} />\r\n              <li> em.persist(ENTITY_INSTANCE) <small> # 영속성 상태로 만듬 </small> </li>\r\n              <li> em.detach(ENTITY_INSTANCE) <small> # 영속상태를 준영속상태로 만듬 </small> </li>\r\n              <li> em.clear() <small> # Persistence Context 초기화 </small> </li>\r\n              <li> em.close() <small> # Persistence Context 닫음 </small> </li>\r\n              <li> em.merge() </li>\r\n              <li> em.remove(ENTITY_INSTANCE) <small> # 커밋을 해야 비영속 상태로 만듬 - flush() - DB에서 삭제 </small> </li>\r\n              <li> em.flush()\r\n                <div className=\"block4\">\r\n                  <p> em.setFlushMode(javax.persistence.FlushModeType.AUTO) <small> # 기본값, 커밋이나 쿼리 실행할 때 flush() </small> </p>\r\n                  <p> em.setFlushMode(javax.persistence.FlushModeType.COMMIT) <small> # 커밋할 때만 flush() </small> </p>\r\n                </div>\r\n              </li>\r\n              <li> em.find(ENTITY.class, ENTITY_INSTANCE.getId()); <small> # EntityManager에서 Entity의 식별자로 조회 </small> </li>\r\n              <li> EntityTransaction et = em.getTransaction(); <small> #  </small> </li>\r\n              <li> et.begin(); </li>\r\n              <li> et.commit(); </li>\r\n              <li> em.close() <small> # EntityManager를 종료해주어야 한다. </small> </li>\r\n              <li> em.createQuery()\r\n                <div className=\"block4\" style={{ listStyle: \"none\" }}>\r\n                  <li> TypedQuery{\"<ENTITY>\"} query = em.createQuery(\"JPQL_QUERY\", ENTITY.class); <small> # 반환 타입이 명확함, 1종류의 엔티티 타입을 반활할 때 </small> </li>\r\n                  <li> Query{\"<ENTITY>\"} query = em.createQuery(\"JPQL_QUERY\"); <small> # 여러 엔티티나 컬럼을 반환할 때 </small> </li>\r\n                  <li> List{'<ENTITY>'} resultList = query.getResultList(); <small> # 결과가 없으면 빈 컬렉션 반환 </small> </li>\r\n                  <li> ENTITY result = query.getSingleResult(); <small> # 결과가 없거나 결과가 2개이상이면 에러 발생 </small> </li>\r\n                </div>\r\n              </li>\r\n              <li> em.getTransaction().commit(); </li>\r\n            </div>\r\n\r\n\r\n            <h2 className=\"h2\"> 📌 Select </h2>\r\n            <li> SELECT m FROM User m WHERE m.name =: name <small> # name이라는 파라미터를 넣을 때 </small> </li>\r\n            <li> SELECT m FROM User m where m.name = ?1 <small> # 첫번째 파라미터에 name을 넣을 때 </small> </li>\r\n            <li> SELECT u.name FROM User u <small> # 프로젝션으로 반환값은 {'List<String> name'} 처럼 컬럼값을 반환한다. </small> </li>\r\n\r\n            <h2 className=\"h2\"> 📌 Insert </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className=\"h2\"> 📌  </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className=\"h2\"> 📌 Delete </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <li> <h3 className=\"h3\"> 🎈 </h3>\r\n                  <li>  </li>\r\n                </li> <br />\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> QueryDSL (설명x) </summary>\r\n          <div className='block2'>\r\n\r\n            {/*<h2 className=\"h2\"> 📌 설명 </h2> \r\n                         <li> 1 </li> \r\n                         <li> 2 </li> \r\n                         <li> 3 </li> \r\n                  \r\n                         <h2 className=\"h2\"> 📌 장점, 단점 </h2> \r\n                         <li> 장점 : </li> \r\n                         <li> 단점 : </li> \r\n                  \r\n                         <h2 className=\"h2\"> ✔ 예시 </h2> \r\n                         <li> 소제목 \r\n                             <div className='block3'> \r\n                                <h3 className=\"h3\"> 🎈 </h3> \r\n                                    <div className='block4'> \r\n                                    <li>  </li> \r\n                                    </div> \r\n                             </div> \r\n                         </li> */}\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Entity와 DB컬럼 타입 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> Long\r\n              <div className=\"block4\">\r\n                <p> 오라클 : NUMBER(19,0) </p>\r\n              </div>\r\n            </li> <br />\r\n            <li> Boolean\r\n              <div className=\"block4\">\r\n                <p> 오라클 : NUMBER(1,0) <small> # true=1 , false=0 </small> </p>\r\n              </div>\r\n            </li> <br />\r\n            <li> String\r\n              <div className=\"block4\">\r\n                <p> 오라클 : VARCHAR2(255 CHAR) </p>\r\n              </div>\r\n            </li> <br />\r\n            <li> Int\r\n              <div className=\"block4\">\r\n                <p> 오라클 : NUMBER(10,0) </p>\r\n              </div>\r\n            </li> <br />\r\n            <li> LocalDateTime <small> # Java8부터 , JPA버전이 API를 지원하는지 확인 </small>\r\n              <div className=\"block4\">\r\n                <p> 오라클 : TIMESTAMP(6)  <small> # 21/10/26 10:46:46.397863000 </small> </p>\r\n              </div>\r\n            </li> <br />\r\n            <li> LocalDate <small> #  </small>\r\n              <div className=\"block4\">\r\n                <p> 오라클 : TIMESTAMP(6) <small> # 21/10/26 </small> </p>\r\n              </div>\r\n            </li> <br />\r\n            <li> Date <small> # JDK1.0 시절에 사용하던 문자타입, 불편 </small>\r\n              <div className=\"block4\">\r\n                <p> 오라클 : TIMESTAMP(6) <small>  </small> </p>\r\n              </div>\r\n            </li> <br />\r\n            <li> Calender <small> # 비용이 비싸고, 이것도 불편  </small>\r\n              <div className=\"block4\">\r\n                <p>  </p>\r\n              </div>\r\n            </li> <br />\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @JoinTable @JoinColumn @ManyToOne @OneToOne @OneToMany @ManyToMany </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 @JoinTable 속성  </h2>\r\n            <li> 조인테이블을 만들어서 연관관계를 설정하는 방법 </li>\r\n            <li> name : </li>\r\n            <li> joinColumns : <small> # 현재 엔티티를 참조하는 외래키 </small> </li>\r\n            <li> inverseJoinColumns : <small> # 다른 엔티리를 참조하는 외래키 </small> </li>\r\n            <div className=\"block4\">\r\n              <li> @JoinTable(\r\n                <li> name=\"client_role\", <small> 매핑 테이블의 테이블명 </small> </li>\r\n                <li> joinColumns = @JoinColumn(name = \"client_id\"), <small> 현재 엔티티의 컬럼명(default: 엔티티명_필드명) ,client테이블의 id를 외래키로 하여 현재 엔티티를 참조 </small> </li>\r\n                <li> inverseJoinColumns = @JoinColumn(name = \"role_id\") <small> 참조 엔티티의 컬럼명(default: 엔티티명_필드명) ,role테이블의 id를 외래키로 하여 다른 엔티티를 참조 </small> </li>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className=\"h2\"> 📌 @JoinColumn 속성 </h2>\r\n            <li> 외래키 매핑할 때 사용 </li>\r\n            <li> name : 매핑할 외래키 명 , default = 필드명_참조테이블기본키컬럼명 <small> # name_refname </small> </li>\r\n            <li> referencedColumnName : 외래키가 참조하는 테이블의 컬럼명 </li>\r\n            <li> foreignKey(DDL) : 외래키 제약조건을 직접 작성, 테이블생성시에만 가능? </li>\r\n            <li> unique, nullable, insertable, updatable, columnDefinition, table </li>\r\n\r\n            <h2 className=\"h2\"> 📌 @ManyToOne 속성 </h2>\r\n            <li> Many쪽에서 @JoinTable을 선언 </li>\r\n            <li> optional=false (객체에 null이 들어갈수 있음, inner join) , optional=true(default값) (객체에 null이 들어갈 수 없음, outer join) </li>\r\n            <li> fetch=FetchType.EAGER (default값) : 엔티티 조회할 때 연관된 엔티티도 같이 조회, 객체가 계속 연결되어 있으면 연달아 조회를 함으로 좋지 않음,\r\n              반대로 한꺼번에 조회 함으로 네트워크 비용을 아낄 수 있다는 장점도 존재 </li>\r\n            <li> fetch=FetchType.LAZY : 엔티티를 나중에 조회 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 @ManyToOne 속성 </h2>\r\n            <li> Many쪽에서 @JoinTable을 선언 </li>\r\n            <li> optional=false (객체에 null이 들어갈수 있음, inner join) , optional=true(default값) (객체에 null이 들어갈 수 없음, outer join) </li>\r\n            <li> fetch=FetchType.EAGER (default값) : 엔티티 조회할 때 연관된 엔티티도 같이 조회, 객체가 계속 연결되어 있으면 연달아 조회를 함으로 좋지 않음,\r\n              반대로 한꺼번에 조회 함으로 네트워크 비용을 아낄 수 있다는 장점도 존재 </li>\r\n            <li> fetch=FetchType.LAZY : 엔티티를 나중에 조회 </li>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <h2 className=\"h2\"> 📌 @ManyToMany(mappedBy=\"\") 속성 </h2>\r\n            <li> mappedBy : 참조하고 있는 다른엔티티의 필드명을 적어서 매핑 </li>\r\n            <li> optional=false (외부조인) , optional=true (외부조인) </li>\r\n            <li> fetch=FetchType.EAGER : 엔티티 조회할 때 연관된 엔티티도 같이 조회, 객체가 계속 연결되어 있으면 연달아 조회를 함으로 좋지 않음,\r\n              반대로 한꺼번에 조회 함으로 네트워크 비용을 아낄 수 있다는 장점도 존재 </li>\r\n            <li> fetch=FetchType.LAZY (default값) : 엔티티를 나중에 조회 </li>\r\n            <li> cascade=CascadeType.[ALL,PERSIST,MERGE,REMOVE,REFRESH,DETACH]\r\n              <li> CascadeType.PERSIST : 엔티티를 저장하면, 필드에 있는 엔티티도 저장  <small> # 좀더 알아볼것 </small> </li>\r\n              <li> CascadeType.MERGE : 엔티티를 합칠 때, 필드에 있는 엔티티도 합친다 <small> # </small> </li>\r\n              <li> CascadeType.REFRESH : 엔티티를 수정할 때, 필드에 있는 엔티티도 수정 <small> # </small> </li>\r\n              <li> CascadeType.REMOVE : 엔티티를 삭제할 때, 필드에 있는 엔티티도 삭제한다.  <small> # </small> </li>\r\n              <li> CascadeType.DETACH : 엔티티를 detach할때 , 필드에 있는 엔티티도 detach를 한다. <small> # 영속성 컨텍스트에서 엔티티를 제거(엔티티 삭제가 아님) </small> </li>\r\n              <li> CascadeType.ALL : 위에 있는 내용을 모두 적용 <small> # </small> </li> <br />\r\n            </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className=\"h3\"> 🎈 Board </h3>\r\n                <div className='block4'>\r\n                  <li> @Table(name=\"board\") </li>\r\n                  <li> public class Board {'{'}\r\n                    <li>  @Id </li>\r\n                    <li>  @GeneratedValue(strategy = GenerationType.AUTO) </li>\r\n                    <li>  @Column(name=\"id\") </li>\r\n                    <li>  private Long id; </li>\r\n                    <li>  </li> <br />\r\n                    <li> @ManyToOne </li>\r\n                    <li> @JoinColumn(name=\"client_id\") <small> # 참조할테이블명_컬럼명 </small> </li>\r\n                    <li> private Client client; </li>\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                </div>\r\n                <h3 className=\"h3\"> 🎈 Client </h3>\r\n                <div className='block4'>\r\n                  <li> @Table(name=\"client\") </li>\r\n                  <li> public class Client {'{'}\r\n                    <li>  @Id </li>\r\n                    <li>  @GeneratedValue(strategy = GenerationType.AUTO) </li>\r\n                    <li>  private Long id; </li>\r\n                    <li>  </li> <br />\r\n\r\n                    <li> {'  @ManyToMany(fetch=FetchType.LAZY, cascade = { '}\r\n                      <li> {'CascadeType.PERSIST, '} </li>\r\n                      <li> {'CascadeType.MERGE '} </li>\r\n                    </li>\r\n                    <li> {'  }) '} </li>\r\n                    <li> {'  @JoinTable( '}\r\n                      <li> {'name=\"client_role\", '} </li>\r\n                      <li> {'joinColumns = @JoinColumn(name = \"client_id\"), '} </li>\r\n                      <li> {'inverseJoinColumns = @JoinColumn(name = \"role_id\")) '} </li>\r\n                    </li>\r\n                    <li> {'  private Set<Role> roles = new HashSet<Role>(); '} </li>\r\n                    <li>  </li> <br />\r\n\r\n                    <li> {'  @OneToMany(mappedBy=\"client\") '} </li>\r\n                    <li> {'  private Set<Board> boards = new HashSet<Board>(); '} </li>\r\n                    <li>  </li> <br />\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                </div>\r\n                <h3 className=\"h3\"> 🎈 Role </h3>\r\n                <div className='block4'>\r\n                  <li> @Id </li>\r\n                  <li> @GeneratedValue(strategy = GenerationType.AUTO) </li>\r\n                  <li> private Long id; </li>\r\n                  <li> private String name; </li>\r\n                  <li>  </li> <br />\r\n\r\n                  <li> {' @ManyToMany(mappedBy = \"roles\") '} </li>\r\n                  <li> {' private Set<Client> clients = new HashSet<Client>(); '} </li>\r\n                  <li>  </li> <br />\r\n\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @ManyToMany </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> 다대다 관계 매핑 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> Client와 Role을 다대다 매핑한 예시\r\n              <div className='block3'>\r\n                <h3 className=\"h3\"> 🎈 Client </h3>\r\n                <li> @Table(name=\"client\") </li>\r\n                <li> public class Client {'{'}\r\n                  <li>  </li> <br />\r\n                  <li> @Id </li>\r\n                  <li> @GeneratedValue(strategy = GenerationType.AUTO) </li>\r\n                  <li> private Long id; </li>\r\n                  <li> private String username; </li>\r\n                  <li> private String password; </li>\r\n                  <li> private Boolean enabled=true; </li> <br />\r\n                  <li> @ManyToMany(cascade = {'{'}\r\n                    <li> CascadeType.PERSIST, </li>\r\n                    <li> CascadeType.MERGE </li>\r\n                  </li>\r\n                  <li> {'})'} </li>\r\n                  <li> @JoinTable(\r\n                    <li> name=\"client_role\", <small> 매핑 테이블의 테이블명 </small> </li>\r\n                    <li> joinColumns = @JoinColumn(name = \"client_id\"), <small> client테이블의 id를 외래키로 하여 현재 엔티티를 참조 </small> </li>\r\n                    <li> inverseJoinColumns = @JoinColumn(name = \"role_id\")) <small> role테이블의 id를 외래키로 하여 다른 엔티티를 참조 </small> </li>\r\n                  </li>\r\n                  <li> private Set{'<Role>'} roles = new HashSet{'<Role>'}(); </li>\r\n                </li>\r\n                <li> {'}'} </li>\r\n                <h3 className=\"h3\"> 🎈 Role </h3>\r\n                <li> @Table(name=\"role\") </li>\r\n                <li> public class Role {'{'}\r\n                  <li>  </li> <br />\r\n                  <li> @Id </li>\r\n                  <li> @GeneratedValue(strategy = GenerationType.AUTO) </li>\r\n                  <li> private Long id; </li>\r\n                  <li> private String name=\"ROLE_USER\"; </li>\r\n                  <li>  </li> <br />\r\n                  <li> @ManyToMany(mappedBy=\"roles\") <small> Client(Entity)의 field roles를 참조하여 role_id 컬럼명에 Role 엔티티의 id를  매핑 </small> </li>\r\n                  <li> private Set{'<Client>'} clients = new HashSet{'<Client>'}(); </li>\r\n                </li>\r\n                <li> {'}'} </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @NamedEntityGraph @EntityGraph (좀더 알아볼것) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 @NamedEntityGraph 속성 </h2>\r\n            <li> 엔티티 클래스 위에 선언을 하여 사용 </li>\r\n            <li> 엔티티 그래프를 둘 이상 사용할 경우 사용 </li>\r\n            <li> name=\"엔티티클래스명.변수명\" <small> # 엔티티 그래프 이름을 정의 </small> </li>\r\n            <li> attributeNodes = @NamedAttributeNode(\"필드명\") <small> # 함께 조회할 속성 선택 </small> </li>\r\n            <li>  </li>\r\n            <h2 className=\"h2\"> 📌 @EntityGraph 속성 </h2>\r\n            <li> Repositoy클래스의 메소드 위에 선언하여 사용 </li>\r\n            <li> EntityGraph 로딩 정책을 가져와서 적용 </li>\r\n            <li> fetch가 lazy로 되어있어도 EntityGraph를 이용하면 같이 조회 가능 </li>\r\n            <li> @EntityGraph(value=\"엔티티클래스명.변수명\") </li>\r\n            <li> @EntityGraph(attributePaths={'{\"AttributeNode에 명시된 필드명\"}'}) </li>\r\n            <li> @EntityGraph(\"엔티티클래스명.변수명\") </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className=\"h3\"> 🎈 </h3>\r\n                <li> @EntityGraph(attributePaths = {'{\"엔티티필드명\"},'} type = EntityGraph.EntityGraphType.LOAD) </li>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpringModel;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst SpringYml = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> yml 설명(미완성) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 설명 </h2>\r\n              <li> 링크 : <a href=\"https://velog.io/@max9106/Spring-Boot-%EC%99%B8%EB%B6%80%EC%84%A4%EC%A0%95-uik69crax3\" target=\"_blank\"> 설정파일 우선순위 </a></li>\r\n              <li> 링크 : <a href=\"https://blog.voidmainvoid.net/40\" target=\"_blank\"> application.properties 설명, 너무많음.. </a></li>\r\n              <li> application.properties : 개발과 서버 두 환경에서 필요한 코드 작성 </li>\r\n              <li> application-dev.properties : 개발에 필요한 코드 작성 , spring.profiles.active=dev로 개발용 설정파일 사용 </li>\r\n              <li> application-prod.properties : 서버 운영에 필요한 코드 작성 , spring.profiles.active=prod로 서버 운영 설정파일 사용 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n              <li> 장점 : yml로 작성하면 개발자가 보기에 편하다. </li>\r\n              <li> 단점 : </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> yml 데이터 암호화 하기 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> jasypt 라이브러리 사용하기 </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> yml 코드 문법(진행중, 몇몇은 확인 필요) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 yml 코드 속성 </h2>\r\n              <li> id: ssssksss <small> # 변수명 = 변수값 </small> </li>\r\n              <li> {'${id}'} <small> # 변수값 사용하기 </small> </li>\r\n              <li> {'${random.int}'} <small> # 랜덤값 사용하기 </small> </li>\r\n\r\n              <h2 className=\"h2\"> ✔ 예시 </h2>\r\n              <li> application.yml\r\n                <div className='block3'>\r\n                  <ul style={{ listStyle: 'none' }}>\r\n                    <li> <h3 className=\"h3\"> Server </h3>\r\n                      <li> server:\r\n                        <li> address=localhost <small> # 서버 경로 설정 </small>\r\n                          <li> port=8080 <small> # 서버 포트 설정 </small> </li>\r\n                        </li>\r\n                      </li>\r\n                    </li> <br />\r\n\r\n                    <li> <h3 className=\"h3\"> DataSource (확인 필요한 부분 존재) </h3>\r\n                      <li> spring:\r\n                        <li>  datasource:\r\n                          <li> driver-class-name: org.h2.Driver <small># h2 DB</small> </li>\r\n                          <li> driver-class-name: oracle.jdbc.OracleDriver <small># 오라클,오라클 클라우드</small> </li>\r\n                          <li> driver-class-name: oracle.mysql.jdbc.Driver <small># 5.x 버전 이하 mysql</small> </li>\r\n                          <li> driver-class-name: oracle.mysql.cj.jdbc.Driver <small># 6.x 버전 이상 mysql</small> </li>  <br />\r\n                          <li> driver-class-name: org.mariadb.jdbc.Driver <small># mariadb </small> </li>  <br />\r\n                          <li> url: jdbc:h2:tcp//localhost/~/test <small># h2 확인 필요</small> </li>\r\n                          <li> url: jdbc:mariadb://localhost:3306/DB명 <small> mariadb 드라이버 </small> </li>\r\n                          <li> url: jdbc:mysql://localhost:3306/DB명?characterEncoding=UTF-8{'&'}serverTimezone=Asia/Seoul <small># mysql db 드라이버</small></li>\r\n                          <li> url: jdbc:oracle:thin:@localhost:1521:XE?characterEncoding=UTF-8{'&'}serverTimezone=Asia/Seoul <small># oracle db 드라이버</small></li>\r\n                          <li> url: jdbc:oracle:thin:@사용자_medium?TNS_ADMIN=전자지갑경로\r\n                            <li> <small> 전자지갑경로 : ./src/main/resources/전자지갑명 # 전자지갑을 src폴더에 넣은경우</small> </li>\r\n                          </li>\r\n                          <li>  </li> <br />\r\n                          <li> username: 사용자명 </li>\r\n                          <li> username: Admin <small> # 오라클 클라우드 무료 DB사용할 때 사용하는 사용자명</small> </li>\r\n                          <li> password:  </li>\r\n                        </li>\r\n                      </li>\r\n                    </li> <br />\r\n\r\n                    <li> <h3 className=\"h3\"> JPA (확인 필요한 부분 존재) </h3>\r\n                      <li> spring:\r\n                        <li>  jpa:\r\n                          <li> database-platform: org.hibernate.dialect.MySQL5InnoDBDialect <small> MySQL 5.5 - Dialect 설정 </small> </li>\r\n                          <li> database-platform: org.hibernate.dialect.MySQL57InnoDBDialect <small> MySQL 5.7 - Dialect 설정 </small> </li>\r\n                          <li> database-platform: org.hibernate.dialect.MySQL8Dialect <small> MySQL8 (2022.02.06 검증) </small> </li>\r\n                          <li> database-platform: org.hibernate.dialect.Oracle10gDialect <small> Oracle Dialect 설정 </small> </li>\r\n                          <li> show-sql: true  <small> # 콘솔에 JPA 실행 쿼리를 보여줌 </small>  </li>\r\n                          <li> generate-ddl: true <small># hibernate에서 @Entity가 붙은 클래스를 자동으로 ddl을 실행해서 table설정들을 자동으로 수행</small> </li>\r\n                          <li> properties:\r\n                            <li> hibernate: <small> # JPA프레임워크 hibernate 설정 </small>\r\n                              <li> format_sql: true <small># JPA실행쿼리를 가독성 있게 표현</small> </li>\r\n                              <li> show_sql: true <small>  </small> </li>\r\n                              <li> ddl-auto: none <small># 아무것도 하지 않는다</small>. </li>\r\n                              <li> ddl-auto: create <small># 세션 팩토리가 시작될 때마다 테이블을 drop하고 ddl을 실행한다. , 배포서버에서 사용x, 로컬용도</small> </li>\r\n                              <li> ddl-auto: create-drop <small># 세션 팩토리가 시작될 때마다 테이블을 drop하고 ddl을 실행한다. 그리고\r\n                                세션 팩토리가 종료될때 테이블을 drop한다.</small> </li>\r\n                              <li> ddl-auto: update <small># 변경 스키마을 저장한다. , 운영DB에서도 사용x , 개발 초기 테스트 단계 사용</small>  </li>\r\n                              <li> ddl-auto: validate <small># 변경된 스키마를 출력하고 프로그램 종료</small> </li>\r\n                              <li> use_sql_comments=true <small> # 주석 출력 </small> </li>\r\n                              <li> naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl <small> db의 속성 이름이 camel-case일 경우 설정이 필요, default는 snake-case </small> </li>\r\n                            </li>  <br />\r\n                          </li>\r\n                          <li> properties: <small> 확인 필요 </small>\r\n                            <li> hibernate:\r\n                              <li> jdbc:\r\n                                <li> batch_size: 10 </li>\r\n                              </li>\r\n                              <li> order_inserts: true </li>\r\n                              <li> order_updates: true </li>\r\n                            </li>\r\n                            <li>  </li>\r\n                          </li> <br />\r\n                          <li> open-in-view: false <small># Open Session In View</small> <a href=\"https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot\" target=\"_blank\" rel=\"noopener noreferrer\"> 참고 </a> </li>\r\n                          <li> <small> 웹 요청이 완료될 때까지 동일한 EntityManager를 갖도록 해줍니다., 성능과 확장에 좋지 않다고 하는데 정확하게는 아직 모름 </small> </li>\r\n                          <li>  </li>\r\n                        </li>\r\n                      </li>\r\n                    </li> <br />\r\n\r\n                    <li> <h3 className=\"h3\"> Logging (확인 필요한 부분 존재) </h3>\r\n                      <li> logging.level.org.hibernate=[error, warn, info, debug] <small> # sql쿼리문 레벨에 맞는 메시지 출력(default=info) </small> </li>\r\n                      <li> logging.level.패키지~.클래스=[error, warn, info, debug] <small> # 아래의 경로로 설정된 파일에 대해서 로그 레벨을 설정 </small> </li>\r\n                      <li> logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE <small> # sql 파라미터로 전달되는 값을 출력, trace등급의 메시지 출력 </small> </li>\r\n                      <li> logging.config=[설정파일.xml 등] <small> # 로그 설정 파일 위치 </small> </li>\r\n                      <li> logging.path=[경로] <small> # 로그 파일 위치 </small> </li>\r\n                      <li> logging.file.name=[../파일명].log <small> # 로그 파일 이름 </small> </li>\r\n                      <li> logging.file.max-size=100MB <small> # 로그 파일 용량 설정 </small> </li>\r\n                      <li> logging.pattern.rolling-file-name={'${LOG_FILE}.%d{yyyy-MM-dd}-%i.log'} <small> # 설정하지 않으면 .gz 포맷을 가짐 </small> </li>\r\n                      <li> logging.pattern.console= <small> # 어떤 로그메시도 출력하지 않음, 개발이 끝난뒤에 서버 운영할때 설정 </small> </li>\r\n                      <li> loggin.pattern.console <small> # 콘솔 로깅에 붙일 패턴 </small> </li>\r\n                      <li> loggin.pattern.file <small> # 파일 로깅에 붙일 패턴 </small> </li>\r\n                      <li> loggin.pattern.level <small> # 로그 레벨에 붙일 패턴 </small> </li> <br />\r\n\r\n                      <li> logging:\r\n                        <li> level:\r\n                          <li> org:\r\n                            <li> hibernate:\r\n                              <li> type:\r\n                                <li> descriptor:\r\n                                  <li> sql: trace <small> # 쿼리에서 ?에 어떤 값이 들어갔는지 알려준다. </small></li>\r\n                                </li>\r\n                              </li>\r\n                            </li>\r\n                          </li>\r\n                        </li>\r\n                      </li>\r\n                    </li> <br />\r\n\r\n                    <li> <h3 className=\"h3\"> Thymeleaf </h3>\r\n                      <li> spring.thymeleaf.cache=false <small> # 바꾼 데이터를 실시간 반영하기 위해서 설정 </small> </li>\r\n                      <li> spring.thymeleaf.prefix=classpath:/templates/ <small> # thymeleaf 참조 경로 설정 </small> </li>\r\n                      <li> spring.thymeleaf.suffix=.html <small> # return할 때 .html 생략가능 </small> </li>\r\n                    </li> <br />\r\n\r\n                    <li> <h3 className=\"h3\"> livereload </h3>\r\n                      <li> <small> # 1. build.gradle에 developmentOnly 'org.springframework.boot:spring-boot-devtools' 추가 </small> </li>\r\n                      <li> <small> # 2. Ctrl + Shift + A - regi 입력 Registry... - compiler.automake.allow.when.app.running 체크 </small> </li>\r\n                      <li> <small> # 3. Ctrl + Alt + S - Build, Execution, Deployment - Compiler - Build project automatically 체크 </small> </li>\r\n                      <li> <small> # 4. Browser Extension인 Live Reload 설치 </small> </li>\r\n                      <li> <small> # 5. 마지막으로 주의 : 서버 배포시 라이브 서버 관련내용들은 반드시 삭제해야함 </small> </li>\r\n                      <li> spring:\r\n                        <li>devtools:\r\n                          <li>  livereload:\r\n                            <li> enabled: true </li>\r\n                          </li>\r\n                        </li>\r\n                      </li>\r\n                      <li> spring.devtools.livereload.enabled=true <small> # 정적리소스에 변화가 있을 때 화면 렌더링 </small> </li>\r\n                    </li> <br />\r\n                    <li> <h3 className=\"h3\">  </h3>\r\n                      <li>  </li>\r\n                    </li> <br />\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Spring boot jpa 초기설정 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 mysql yml </h2>\r\n              <li> spring:\r\n                <li>datasource:\r\n                  <li> driver-class-name: com.mysql.jdbc.Driver <small> # 6.x 버전 이하 mysql </small> </li>\r\n                  <li> driver-class-name: com.mysql.cj.jdbc.Driver <small> # 6.x 버전 이상 mysql </small> </li>\r\n                  <li> url: jdbc:mysql://url주소:포트번호/데이터베이스이름?characterEncoding=UTF-8&serverTimezone=Asia/Seoul <small> # mysql db 드라이버 </small> </li>\r\n                  <li> username: mysql유저 <small> # root나 mysql 데이터베이스 사용자이름 </small> </li>\r\n                  <li> password: 비번 </li>\r\n                </li>\r\n                <li>jpa:\r\n                  <li> database-platform: org.hibernate.dialect.MySQL8Dialect <small> # MySQL Dialect 설정 </small> </li>\r\n                  <li> show-sql: true <small> # 콘솔창에 쿼리를 보여주는 설정 </small> </li>\r\n                  <li> format_sql: true <small> # 좀더 깔끔하게 보여준다. </small></li>\r\n                  <li> generate-ddl: true </li>\r\n                  <li> hibernate:\r\n                    <li> ddl-auto: create <small> # #개발 테스트시 사용(매번 테이블 재생성) </small> </li>\r\n                    <li> # ddl-auto: validate <small> # 서버 운영시 사용 </small> </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpringYml;","import React from 'react';\r\n\r\nconst SpringAPI = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶   API <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶   API <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> API 설정하기 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> application.yml </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 코드 작성 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringAPI;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst SpringOAuth2 = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> OAuth 2.0 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className=\"h2\"> 📌 OAuth 2.0의 정의 </h2>\r\n                            <li> 1. 외부 서비스에서도 인증과 권한을 얻고, 서비스의 API를 사용할 수 있게 해주는 것 </li>\r\n                            <li> 2. 산업 표준 프로토콜 , 인증 및 허가를 얻기 위한 프로토콜 </li>\r\n\r\n                            <h2 className=\"h2\"> 📌 OAuth 2.0의 배경 </h2>\r\n                            <li> 1. 아이디와 비밀번호는 제공하지 않으면서 인증과 권한을 부여하는 방식을 만들기 시작, twitter에서 OAuth 1.0버전을 탄생 </li>\r\n                            <li> 2. OAuth 1.0의 문제점 : 구현 복잡, 웹 이외의 어플리케이션 미지원, 암호화 번거로움, 인증토큰 만료되지 않음 </li>\r\n                            <li> 3. https 필수, 표준 프로세스로 만들어짐, 다양한 인증방식, 확장성과 단순화, 인증서버분리 등 2.0으로 발전 </li>\r\n\r\n                            <h2 className=\"h2\"> 📌 OAuth 2.0의 요소 </h2>\r\n                            <li> 1. client , 자원을 사용하는 어플리케이션 </li>\r\n                            <li> 2. resource owner : 사용자 </li>\r\n                            <li> 3. resource server(API Server) : 자원을 호스팅하는 서버 </li>\r\n                            <li> 4. authorization server : 사용자의 동의를 받아 권한을 부여하는 서버 </li>\r\n\r\n                            <h2 className=\"h2\"> 📌OAuth 2.0의 사용 과정(좀 더 알아볼것)  </h2>\r\n                            <ol>\r\n                                <li> 로그인 요청 </li>\r\n                                <li> 로그인 페이지 제공 </li>\r\n                                <li> 로그인 정보를 보내기 </li>\r\n                                <li> 인증 코드(Authoriation Code) 발급 </li>\r\n                                <li> Callback URL로 다시 바로 정보를 보냄(바로 보낼 수 있게 처리가 됨) </li>\r\n                                <li> Access Token 요청 </li>\r\n                                <li> Access Token 발급 </li>\r\n                                <li> 인증 완료, 로그인 성공 </li>\r\n                                <li> 서비스 요청 </li>\r\n                                <li> Access Token을 이용하여 검증하고 서비스를 제공하게 해준다. </li>\r\n                            </ol>\r\n\r\n                            <h2 className=\"h2\"> 📌 OAuth 2.0의 인증 종류(4가지) </h2>\r\n                            <div className='block4'>\r\n                                <h3 className=\"h3\"> 🎈 1. Authorization Code Grant </h3>\r\n                                <li> 권한 서버에서 인증하는 방식 , 클라이언트 - 리소스서버 사이의 존재 </li>\r\n                                <li> Access Token을 바로 클라이언트에 넘기지 않음 #???? </li>\r\n                                <li> 로그인시에 페이지 URL에 response_type=code 로 넘김 </li>\r\n\r\n                                <h3 className=\"h3\"> 🎈 2. Implicit Grant</h3>\r\n                                <li> 가장 많이 사용되는 방식 </li>\r\n                                <li> 권한 코드 없이 바로 Access Token 발급이 되어 보안에 취약 </li>\r\n                                <li> Public Client인 브라우저 기반의 어플리케이션이나 모바일 어플리케이션에서 이 방식을 사용하면 된다. #??? </li>\r\n                                <li> 주로 Read only 서비스에 사용 </li>\r\n                                <li> 로그인시에 페이지 URL에 response_type=token 로 넘김 </li>\r\n\r\n                                <h3 className=\"h3\"> 🎈 3. Resource Owner Password Credentials Grant </h3>\r\n                                <li> Clinet에 아이디,비번을 저장하고 아이디,비번으로 직접 access token을 받아오는 방식 </li>\r\n                                <li> 위험한 방식, 믿을 수 있는 API 서비스에서만 사용 </li>\r\n                                <li> 로그인시에 API에 POST로 grant_type=password 로 넘김 </li>\r\n\r\n                                <h3 className=\"h3\"> 🎈 4. Client Credentials Grant </h3>\r\n                                <li> 어플리케이션이 Confidential Client일 때 id,secret을 가지고 인증하는 방식 </li>\r\n                                <li> 로그인시에 API에 POST로 grant_type=client_credentials 로 넘김 </li>\r\n\r\n                            </div> <br />\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpringOAuth2;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst SpringController = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 파라미터 받기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 GET </h2>\r\n            <li> 파라미터와 1:1 매칭해서 받을수 있다.\r\n              <div className=\"block4\">\r\n                <li> 클라이언트에서 nickname 파라미터 전송 </li>\r\n                <li> public ResponseEntity nicknameDuplicateCheck(String nickname) </li>\r\n              </div>\r\n              <div className=\"block4\">\r\n                <li> 클라이언트에서 nickname,email 파라미터 전송 </li>\r\n                <li> nickname, email 멤버변수를 가진 DTO객체를 넣어주기 </li>\r\n                <li> public ResponseEntity nicknameDuplicateCheck(DTO dto) </li>\r\n              </div>\r\n              <div className=\"block4\">\r\n                <li> 클라이언트에서 nickname 파라미터 전송 </li>\r\n                <li> public 리턴타입 메소드(@RequestParam(\"nickname\") String nickname) </li>\r\n              </div>\r\n            </li>\r\n            <li> 여러개의 파라미터 처리방법\r\n              <div className=\"block4\">\r\n                <li> public 리턴타입 메소드(@RequestParam HashMap{\"<String,String>\"} paramMap) </li>\r\n                <li> paramMap.get(\"키\") </li>\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @Controller(미완성) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Spring 2.5에서 추가 </li>\r\n            <li> @Componenet 주석이 달려있음 </li>\r\n            <li> Model 객체를 이용하여 데이터를 담고 view를 찾아 이동하는 역할</li>\r\n            <li> Controller는 반환값이 text/html이다 </li>\r\n            <li></li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @RestController </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> @RestController = @Controller + @ResponseBody </li>\r\n            <li> Spring 4.0에서 추가 </li>\r\n            <li> 객체로 반환하고 JSON이나 XML형식으로 http에 담아서 응답 </li>\r\n            <li> @Controller와 다르게 요청을 하면 응답을 보내줌 </li>\r\n            <li> 매개변수에 @RequestBody를 사용하면 알아서 매핑을 해준다. </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈</h3>\r\n              <div className='block4'>\r\n                <li> {' @RestController '} </li>\r\n                <li> {' public class UserController { '}\r\n                  <li> {' @RequestMapping(value=\"/auth/signup\", method=RequestMethod.POST) '} </li>\r\n                  <li> {' public HashMap<String,Object> Signup(@RequestBody UserDto data) { '}\r\n                    <li> {' HashMap<String,Object> userDto = new HashMap<String,Object>(); '} </li>\r\n                  </li>\r\n                  <li> {' return userDto; '} </li>\r\n                  <li> {' } '} </li>\r\n                </li>\r\n                <li> {' } '} </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @RequestMapping - 컨트롤러 1차 경로(타입레벨) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 컨트롤러에서 설정하는 1차 경로(타입레벨)를 담당하고 나머지 메서드 레벨로 흘려보낸다. </li>\r\n            <li> 부모와 자식으로 상속을 하면 중복되어 쓰는것도 된다. (쓸일이 있을까 싶다..) </li>\r\n            <li></li>\r\n            <li></li>\r\n\r\n            <h2 className='h2'> 📌 사용 </h2>\r\n            <li> @RequestMapping(value=\"/경로\") </li>\r\n            <li> @RequestMapping(value=\"/경로.*\") </li>\r\n            <li> @RequestMapping(value=\"/경로/**\") </li>\r\n            <li> @RequestMapping(value=\"/경로/**/경로\") </li>\r\n            <li> @RequestMapping(value={'{\"/경로\",\"/경로1\"}'}) </li>\r\n            <li> @RequestMapping(value=\"/경로/{'{파라미터로사용할이름}'}\") </li>\r\n            <li> @RequestMapping(value=\"/경로\", method=RequestMethod.GET) </li>\r\n            <li> @RequestMapping(value=\"/경로\", method=RequestMethod.POST) </li>\r\n            <li> @RequestMapping(value=\"/경로\", params=\"키=값\") </li>\r\n            <li> @RequestMapping(value=\"/경로\", params=\"키!=값\") </li>\r\n            <li> @RequestMapping(value=\"/경로\", params=\"키\") </li>\r\n            <li> @RequestMapping(value=\"/경로\", params=\"!키\") </li>\r\n            <li> @RequestMapping(value=\"/경로\", headers=\"content-type=text/*\") </li>\r\n            <li> @RequestMapping(value=\"/경로\") </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @RequestBody(미완성) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> @RestController에서는 이미 포함됨 </li>\r\n            <li> \"2020-11-11 12:12:12\" 👉 @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") 처럼 날짜는 처리 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li></li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li></li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li></li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @RequestHeader </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 헤더로 들어온 값을 받는다. </li>\r\n            <li> 헤더로 들어온값이 없으면 에러가 발생한다. 그래서 required=false를 사용 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <div className=\"block4\">\r\n                    <li> @GetMapping(path = \"/\", headers = \"HEADER\") </li>\r\n                    <li> @RequestHeader HttpHeaders header </li>\r\n                    <li> @RequestHeader(\"HEADER\") String header </li>\r\n                  </div>\r\n                  <div className=\"block4\">\r\n                    <li> @RequestHeader(value=\"accessToken\",required = false,defaultValue = \"null\") String header </li>\r\n                    <li> @RequestHeader HttpHeaders header </li>\r\n                    <li> @RequestHeader(\"키\") String head</li>\r\n                    <li> {\" @RequestHeader Map<String,String> head \"} <small> head.get(\"카\"); </small> </li>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @ResponseBody </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> @ResponseBody로 String password로 받아왔는데 객체로 받아지는것 같다.. </li>\r\n            <li> @RequestBody와는 다르게 아래 둘다 사용가능\r\n              <div className=\"block\">\r\n                <li> @DateTimeFormat(pattern=\"yyyy-MM-dd'T'HH:mm:ss\") @DateTimeFormat(pattern=\"yyyy-MM-ddTHH:mm:ss\"), 둘중에 확인 안됨</li>\r\n                <li> @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") </li>\r\n              </div>\r\n            </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li></li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li></li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li></li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @RequestParam </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> url로 들어온 파라미터를 1:1로 매칭(Get에서만 사용) </li>\r\n            <li> 들어온 url에 파라미터가 없으면 에러가 발생, 아래 해결방법\r\n              <div className=\"block4\">\r\n                <li> @RequestParam(\"파라미터명\",required=false,defaultValue=\"파라미터가없으면들어가는값\") 타입 매개변수 </li>\r\n              </div>\r\n            </li>\r\n            <li> 여러개의 파라미터 처리방법\r\n              <div className=\"block4\">\r\n                <li> @RequestParam HashMap{\"<String,String>\"} paramMap </li>\r\n                <li> paramMap.get(\"키\") </li>\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {'@PostMapping(\"/post1\") '} </li>\r\n                  <li> {'public String LoginForm3(@RequestParam String data) { '}\r\n                    <li> {'System.out.println(\"테스트 성공\"); '} </li>\r\n                    <li> {'return \"login\"; '} </li>\r\n                  </li>\r\n                  <li> {'} '} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @PathVariable </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> url에 있는 값을 변수로 사용하기 </li>\r\n            <li> @PostMapping(\"api/user/{\"{number}\"}\") </li>\r\n            <li> public void 메소드명(@PathVariable(\"number\") 타입 파라미터명) </li>\r\n            <li> WAS에서는 URL에 특수문자(, , ` , .)가 들어가 있으면 인식을 하지 못한다..? </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> RequestEntity, ResponseEntity </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> HttpEntity를 상속받은 클래스 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 ResponseEntity 반환 </h2>\r\n            <li> {\" return new ResponseEntity<T>(T,responseHeaders,HttpStatus.상태값) \"} </li>\r\n            <li> {\" return new ResponseEntity<>(body,HttpStatus.상태값) \"} </li>\r\n            <li> return ResponseEntity.build() </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> <a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\" target=\"_blank\" rel=\"noopener noreferrer\"> 위키피디아 상태코드 </a> </li>\r\n            <li> return new ResponseEntity(HttpStatus.상태코드(OK)); </li>\r\n            <li> return new ResponseEntity(바디객체,헤더,HttpStatus.상태코드(OK)); </li>\r\n            <li>  </li> <br />\r\n            <li> 빌더패턴\r\n              <div className=\"block4\">\r\n                <li> return ResponseEntity.상태코드() </li>\r\n                <li> .headers(헤더객체) </li>\r\n                <li> .body(바디객체) </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> HttpEntity </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 스프링에서 제공하는 클래스 </li>\r\n            <li> HttpHeader와 HttpBody 포함하는 클래스 </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @DateTimeFormat(찾아보기) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> @DateTimeFormat(pattern = \"yyyy-MM-dd\") </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> @JsonFormat찾아보기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd\", timezone = \"Asia/Seoul\") </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 잠시 보류-------------------------------------- </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className=\"block3\">\r\n                <li> <h3 className=\"h3\"> 🎈 controller 예시 </h3>\r\n                  <li> @Controller </li>\r\n                  <li> @RequestMapping(\"/board\") <small> # 이 컨트롤러의 prefix 경로라고 생각하면된다. </small> </li>\r\n                  <li> public class BoardController {'{'}\r\n                    <li> </li> <br />\r\n                    <li> @Autowired </li>\r\n                    <li> private BoardReposiotry boardRepository </li>\r\n                    <li></li> <br />\r\n\r\n                    <li> <h4> 🔍 일반적인 GetMapping </h4> </li>\r\n                    <li> @GetMapping(\"/index\") </li>\r\n                    <li> public String getIndex() {'{'}\r\n                      <li> return \"index\"; </li>\r\n                    </li>\r\n                    <li> {'}'} </li> <br />\r\n\r\n\r\n                    <li> <h4> 🔍 PostMapping + validator </h4> </li>\r\n                    <li>@PostMapping(\"/doCreateUpdateBoard\")</li>\r\n                    <li> {' public String doCreateBoard( BoardEntity boardEntity, BindingResult bindingResult) { '}\r\n                      <li> boardValidator.validate(boardEntity, bindingResult); <small> bindingResult 객체가 error를 가질 수 있음 </small> </li> <br />\r\n\r\n                      <li> {' if(bindingResult.hasErrors()) { '}\r\n                        <li> return \"boardForm\";</li>\r\n                      </li>\r\n                      <li> {' } '} </li> <br />\r\n\r\n                      <li>boardRepository.save(boardEntity);</li>\r\n                      <li>return \"redirect:/boardMainpage\";</li>\r\n                    </li>\r\n                    <li> {' } '} </li>\r\n                    <li></li> <br />\r\n\r\n                    <li> <h4> 🔍 GetMapping + DB에서 데이터를 조회해서 board객체에 넣어주기</h4> </li>\r\n                    <li> @GetMapping(\"/boardView\") </li>\r\n                    <li> public String getBoardView(Model model, @RequestParam(required = false) Long no) {'{'}\r\n                      <li> Board board = boardRepository.findById(no).orElse(null); <small> # JPA 이용 </small> </li>\r\n                      <li> model.addAttribute(\"board\", board); </li>\r\n                      <li> return \"boardView\"; </li>\r\n                    </li>\r\n                    <li> {'}'} </li> <br />\r\n\r\n                    <li> <h4> 🔍 페이지 처리하기 </h4> </li>\r\n                    <li> @GetMapping(\"/boardMainpage\") </li>\r\n                    <li> public String getBoardMainpage(Model model, @PageableDefault(size = 2) Pageable pageable, @RequestParam(required = false, defaultValue = \"\") String searchText) {'{'}\r\n                      <li> {' Page<Board> board = boardRepository.findByBoardTitleContainingOrBoardContentContaining(searchText, searchText, pageable); '} </li>\r\n                      <li> int startPage = Math.max(1,board.getPageable().getPageNumber()-1); </li>\r\n                      <li> int endPage = Math.min(board.getTotalPages(),startPage+4); </li>\r\n                      <li> int currentPage = board.getPageable().getPageNumber(); </li> <br />\r\n                      <li> {' if(currentPage == endPage-2) { '}\r\n                        <li> {'startPage = Math.max(1,startPage-1); '} </li>\r\n                      </li>\r\n                      <li> {' } '} </li>\r\n                      <li> {' else if(currentPage == endPage-1) { '}\r\n                        <li> {'startPage = Math.max(1,startPage-2); '} </li>\r\n                      </li>\r\n                      <li> {' } '} </li>\r\n                      <li> {' if(board.getTotalPages() == 0) { '}\r\n                        <li> {'endPage = 1; '} </li>\r\n                      </li>\r\n                      <li> {' } '} </li>\r\n                      <li> model.addAttribute(\"startPage\",startPage); </li>\r\n                      <li> model.addAttribute(\"endPage\",endPage); </li>\r\n                      <li> model.addAttribute(\"currentPage\",currentPage); </li>\r\n                      <li> model.addAttribute(\"board\",board); </li>\r\n                      <li> return \"boardMainpage\"; </li>\r\n                    </li>\r\n                    <li> {'}'} </li> <br />\r\n\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n\r\n                </li> <br />\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Controller </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> MVC 패턴에서 Sevice와 View를 분리해서 이어주는 역할을 한다. </li>\r\n            <li> 사용자가 요청하는 경로를 처리하는 역할을 한다. </li>\r\n            <li> 어떤 service를 연결할지와 예외만 처리 </li>\r\n            <li> controller에서는 비즈니스 로직을 구현하는 것을 지양한다. </li>\r\n\r\n            <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n            <li> 장점 :\r\n              <li> 컨트롤러에 경로 설정들이 되어있으므로 개발할 때 찾기가 쉬움 </li>\r\n            </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> ApiController </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> api를 이용하여 컨트롤러를 사용한 방식 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 REST API란 </h2>\r\n            <li> 개발자들끼리 정해놓은 규칙이지 표준은 사용자들끼리 정한것이고 공식적인 표준은 없음 </li>\r\n            <li> 클라이언트와 서버, 애플리케이션과 애플리케이션이 서로 주고 받으려고 정의한 인터페이스 </li>\r\n            <li> 서버의 리소스에 접근을 가능하게 해준다.</li>\r\n            <li> 접근 권한이 있는 사람만 서버와 데이터베이스에 접근 가능</li>\r\n            <li> 모든 요청와 응답은 표준화되어 주고 받는다. </li>\r\n            <li> REST API란 HTTP URI로 리소스를 표현하고, 리소스에 대한 행위를 HTTP Method로 정의하는 방식</li>\r\n            <li> JSON, AJAX, XML 형식으로 보내는 방법</li>\r\n            <li> POST(생성), GET(조회), PUT(수정), DELETE(삭제) 로 표현 (표현 방법이 4가지라 한계점이 존재)</li>\r\n            <li> 서버-클라이언트 구조, Stateless , 캐시 사용, 계층방식, 인터페이스 일관성</li>\r\n            <li> REST API 설계 방법\r\n              <div className=\"block4\">\r\n                <ol>\r\n                  <li> /로 계층 구분</li>\r\n                  <li> 마지막에는 / 사용x</li>\r\n                  <li> - 사용 , _는 사용x</li>\r\n                  <li> url은 소문자로 작성</li>\r\n                  <li> 확장자는 uri에 포함하지 않는다.</li>\r\n                  <li> 동사보다는 명사로 사용</li>\r\n                  <li> URI에 post,get 과 같은 행위를 포함하지 않는다. </li>\r\n                </ol>\r\n              </div>\r\n            </li>\r\n\r\n            <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n            <li> 장점 :</li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 ( 전체적으로 수정 필요)</h2>\r\n            <li> apicontroller 예시\r\n              <div className='block3'>\r\n                <li> <h3 className=\"h3\"> 🎈API PUT 예시 </h3>\r\n                  <li> {' @PutMapping(\"/board/{id}\") '} </li>\r\n                  <li> {' Board replaceEmployee(@RequestBody Board newBoard, @PathVariable Long id) { '}\r\n                    <li> {' return boardRepository.findById(id).map(board -> { '}\r\n                      <li> {'board.setTitle(newBoard.getTitle()); '} </li>\r\n                      <li> {'board.setContent(newBoard.getContent()); '} </li>\r\n                      <li> {'return boardRepository.save(board); '} </li>\r\n                    </li>\r\n                    <li> {' }) '} </li>\r\n                    <li> {' .orElseGet(() -> { '}\r\n                      <li> {'newBoard.setId(id); '} </li>\r\n                      <li> {'return boardRepository.save(newBoard); '} </li>\r\n                    </li>\r\n                    <li> {' }); '} </li>\r\n                  </li>\r\n                  <li> {'} '} </li>\r\n                </li> <br />\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpringController;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst HtmlTest = (props) => {\r\n\r\n  return (\r\n\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] Spring Security 설명 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> 서버가 시작되면 Spring Security 초기화 및 보안 설정 발생 </li>\r\n            <li> 모든 요청이 인증이 되어야 자원에 접근이 가능 </li>\r\n            <li> form로그인 방식과 httpbasic로그인 방식을 제공한다. </li>\r\n            <li> 기본적인 로그인 페이지를 제공한다. </li>\r\n            <li> 기본 계정 user와 비번 제공 </li>\r\n            <li> application.properties에 설정이 가능하다. </li>\r\n            <li> 계정추가, 권한추가, DB연동등 하지 않으면 사용을 할 수 없게 만듬 </li>\r\n            <li> 사용자의 인증,권한,보안 처리를 간단하게 구현 </li>\r\n            <li> 인증방식 : credential방식(사용자명,비번) , 이중인증(개인정보인증+추가인증(OTP) , ) </li>\r\n            <li> 1. 스프링 시큐리티에서 인증이 된 객체인지 일단 확인한다. </li>\r\n            <li> 2. 인증이 된 객체라면 그 다음 어떤 경로에 접근 권한이 있는 객체인지를 확인한다. </li>\r\n            <li> 3. 권한이 있다면 동작을 할 수 있게 하고, 없다면 동작을 할 수 없게 막는다. </li>\r\n            <li> 필터 방식으로 작동 </li>\r\n            <h2 className=\"h2\"> 📌 관련 용어 </h2>\r\n            <li> Principal(접근주체): 보호된 대상에 접근하는 대상 </li>\r\n            <li> Credential(비밀번호): Resource에 접근하는 대상의 비밀번호 </li>\r\n            <li> Authentication(인증): 현재 유저가 누구인지 확인, 작업을 수행할 수 있는지 여부를 판단 </li>\r\n            <li> Authorize(인가): 현재 유저가 어떤 서비스,페이지에 접근할 수 있는 권한이 있는지 검사 </li>\r\n            <li> Authority(권한): 특정 작어에 수행 권한이 있는지 판단 (GUEST,USER,MEMBER,ADMIN)\r\n              <li> 웹 권한, 메소드호출, 도메인 인스턴스 </li>\r\n            </li>\r\n\r\n            <h2 className=\"h2\"> 📌 스프링 부트 시큐리티 추가 </h2>\r\n            <li> gradle\r\n              <li> implementation 'org.springframework.boot:spring-boot-starter-security' </li>\r\n              <li> implementation 'org.springframework.security:spring-security-test' </li>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [1] WebSecurityConfig 초기 보안 해제 예제 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 초기 보안 설정 끄기 </h3>\r\n                <div className='block4'>\r\n                  <li> @Configuration </li>\r\n                  <li> @EnableWebSecurity </li>\r\n                  <li> public class WebSecurityConfig extends WebSecurityConfigurerAdapter {\"{\"}\r\n                    <li>  </li>\r\n                    <li> @Override </li>\r\n                    <li> protected void configure (HttpSecurity http) throws Exception {\"{\"}\r\n                      <li> http.cors().disable()\r\n                        <li> .csrf().disable()</li>\r\n                        <li> .formLogin().disable() </li>\r\n                        <li> .headers().frameOptions().sameOrigin();  </li>\r\n                      </li>\r\n                    </li>\r\n                    <li>  {\"}\"} </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [2] WebMvcConfig - Cors문제  </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 디폴트 값 </h2>\r\n            <div className=\"block4\">\r\n              <li> allow all origins </li>\r\n              <li> allow \"simple\" methods GET,HEAD and POST </li>\r\n              <li> allow all headers </li>\r\n              <li> set max age to 1800 seconds </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 cors 관련 명령 </h2>\r\n            <div className=\"block4\">\r\n              <li> Access-Control-Allow-Origin : 요청하는 페이지의 출처 </li>\r\n              <li> Access-Control-Allow-Methods : 요청허용하는 메소드(default: get,post,head) </li>\r\n              <li> Access-Control-Max-Age : prefilght를 요청결과를 저장하는 시간 </li>\r\n              <li> Access-Control-Allow-Headers : 요청허용 하는 헤더 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n\r\n            <h2 className='h2'> 📌 메소드 위에 어노테이션을 선언 </h2>\r\n            <div className=\"block4\">\r\n              <li> 컨트롤러나 컨트롤러 메소드에 사용 </li>\r\n              <li> @CrossOrigin(\"*\") <small> # 모든 경로 허용</small> </li>\r\n              <li> @CrossOrigin(origins=\"*\", allowedHeaders=\"*\") <small> # 모든 경로 허용 </small> </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 클래스를 생성하여 처리() </h2>\r\n            <div className=\"block4\">\r\n              <li> @Configuration </li>\r\n              <li> public class WebConfig implements WebMvcConfigurer {'{'}\r\n                <li> @Override </li>\r\n                <li> public void addCorsMappings(CorsRegistry registry) {'{'}\r\n                  <li> registry.addMapping(\"/**\").allowCredentials(true)\r\n                    <li> .allowedOrigins(\"http://127.0.0.1:3000\"); <small> # 안된다면 localhost로 변경 </small></li>\r\n                  </li>\r\n                </li>\r\n                <li> {'}'} </li>\r\n              </li>\r\n              <li> {'}'} </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 모든 설정 예시 </h2>\r\n            <div className=\"block4\">\r\n              <li> @Configuration </li>\r\n              <li> public class WebConfig implements WebMvcConfigurer {'{'}\r\n                <li> private final long MAX_AGE_SECS = 3600; </li>\r\n                <li> @Override </li>\r\n                <li> public void addCorsMappings(CorsRegistry registry) {'{'}\r\n                  <li> registry.addMapping(\"/**\").allowCredentials(true)\r\n                    <li> .allowedOrigins(\"*\") //모두 허용 </li>\r\n                    <li> .allowedOrigins(\"http://localhost:3000\",\"http://localshot:3002);//여러개 적용가능 </li>\r\n                    <li> .allowedMethods(\"GET\",\"POST\",\"PUT\",\"PATCH\",\"DELETE\",\"OPTIONS\") //메소드 제한 가능 </li>\r\n                    <li> .allowedHeaders(\"*\") </li>\r\n                    <li> .allowCredentials(true) </li>\r\n                    <li> .allowedOriginPatterns(\"*\") // .allowCredentials(true) + .allowedOrigins(\"*\")  </li>\r\n                    <li> .maxAge(MAX_AGE_SECS); pre-flight Request 요청을 보관하는 시간 </li>\r\n                  </li>\r\n                </li>\r\n                <li> {'}'} </li>\r\n              </li>\r\n              <li> {'}'} </li>\r\n            </div>\r\n\r\n          </div>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> @Configuration </li>\r\n              <li> public class WebMvcConfig implements WebMvcConfigurer {\"{\"}\r\n                <li> @Override </li>\r\n                <li> public void addCorsMappings(CorsRegistry registry) {\"{\"}\r\n                  <li> registry.addMapping(\"/**\").allowCredentials(true) </li>\r\n                  <li> .allowedOrigins(\"http://localhost:3000/\"); </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n                {/*  */}\r\n                <li> @Override </li>\r\n                <li> public void addInterceptors(InterceptorRegistry registry) {\"{\"}\r\n                  <li>  registry.addInterceptor(new TestInterceptor())\r\n                    <li> .addPathPatterns(\"/*\") </li>\r\n                    <li> .excludePathPatterns(\"/test/**/\") </li>\r\n                    <li> .excludePathPatterns(\"/users/login\"); //로그인 쪽은 예외처리를 한다. </li>\r\n                  </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> BCryptPasswordEncoder </summary>\r\n          <div className='block2'>\r\n\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> BCryptPasswordEncoder는 솔트값이 랜덤으로 들어가서 매번 값이 달라 == 이나 equals를 사용하면 안된다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 메소드 </h2>\r\n            <div className='block4'>\r\n              <li> BCryptPasswordEncoder객체.encode() <small> 인코딩 </small> </li>\r\n              <li> BCryptPasswordEncoder객체.matches(암호화되지않은비번,암호화된비번) <small> 인코딩 </small> </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JWT Token </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 예외 </h2>\r\n            <li> UnsupportedJwtException : 형식이 틀릴때 </li>\r\n            <li> MalformedJwtException : JWT 구성이 틀릴때 </li>\r\n            <li> ExpiredJwtException : 토큰 유효기간 초과 </li>\r\n            <li> SignatureException : JWT의 서명을 확인 못했을 때 </li>\r\n            <li> IllegalArgumentException </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈 </h3>\r\n              <div className='block4'>\r\n                <li> public class JwtToken {\"{\"}\r\n                  <li> @Autowired  </li>\r\n                  <li> BCryptPasswordEncoder bCryptPasswordEncoder;  </li>\r\n                  <li>   </li>\r\n                  <li> public String createAccessToken() {\"{\"}\r\n                    <li> String jwtToken = Jwts.builder()  </li>\r\n                    <li> .setHeaderParam(\"typ\",\"JWT\") <small> //토큰의 종류 </small>  </li>\r\n                    <li> .setIssuer(\"\") <small> // 발급자이름 </small>  </li>\r\n                    <li> .setSubject(\"\") <small> //토큰 제목 </small>  </li>\r\n                    <li> .setAudience(\"\") <small> // 토큰 대상자 </small>  </li>\r\n                    <li> //.setExpiration(new Date(new Date().getTime() + Duration.ofMinutes(30).toMillis())) <small> // 토큰 만료 시간 </small>  </li>\r\n                    <li> //.setNotBefore() <small> // 토큰 활설 날짜 </small>  </li>\r\n                    <li> //.setIssuedAt(new Date()) <small> // 토큰 발급 시간 </small>  </li>\r\n                    <li> .setId(\"1\") <small> //토큰 식별자 ID </small>  </li>\r\n                    <li> //.claim(\"키\",\"값\") <small> //미등록 클레임 </small>  </li>\r\n                    <li> //.addClaims() <small> // 아직 모르겠음 </small>  </li>\r\n                    <li> //.setClaims() <small> // 아직 모르겠음 </small>  </li>\r\n                    <li> <small> // 해싱알고리즘, 시크릿키 설정 </small>  </li>\r\n                    <li> .signWith(SignatureAlgorithm.HS512, bCryptPasswordEncoder.encode(\"F00shlist@@\"))  </li>\r\n                    <li> .compact(); // 설정끝  </li>\r\n                    <li> return jwtToken;  </li>\r\n                  </li>\r\n                  <li>   {\"}\"}  </li>\r\n                </li>\r\n                <li> {\"}\"}  </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> WebSecurityConfig </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> security관련 설정을 하는 곳  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> public class WebSecurityConfig extends WebSecurityConfigurerAdapter {'{'}\r\n                    <li> </li> <br />\r\n                    <li> <h5> // 🎈 시큐리티 필터 체인 관련 설정, 리소스 접근 제외할 경로 설정  </h5></li>\r\n                    <li> @Override </li>\r\n                    <li> public void configure(WebSecurity web) throws Exception {'{'}\r\n                      <li> web.ignoring().antMatchers(\"/.css/**\",\"/.js/**\",\"/.img/**\",\"/.lib/**\");  </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                    <li> </li> <br />\r\n                    <li> <h5> // 🎈 인증, 로그인, 로그아웃 등 설정 , securityconfig 파일에 대부분 설정을 여기에서 한다. </h5> </li>\r\n                    <li> protected void configure(HttpSecurity http) throws Exception {'{'}\r\n                      <li> </li> <br />\r\n                      <li> http.csrf().disable() <small> # csrf(보안) 비활성화 </small> </li>\r\n                      <li> <h5> // 🔍 세션 관련 (좀더 알아 볼것) </h5> </li>\r\n                      <li> http.sessionManagement() <small> # 세션 관리 </small>\r\n                        <li> .maximumSessions(1) <small> # 최대 세션 갯수 </small> </li>\r\n                        <li> .maxSessionsPreventsLogin(true) </li>\r\n                        <li> .expiredUrl(\"/경로\") <small> # 세션이 만료되었을 경우 </small> </li>\r\n                        <li> .sessionRegistry(sessionRegistry) </li>\r\n                        <li> .sessionFixation().changeSessionId() </li>\r\n                        <li>.invalidSessionUrl(\"/경로\")</li>\r\n                        <li>  </li>\r\n                      </li> <br />\r\n\r\n                      <li> <h5> // 🔍 요청한 경로에 대해서 인증과 접근 권한이 있는지 설정하는 곳 </h5> </li>\r\n                      <li> http.authorizeRequests() <small> # 요청에 대한 권한 설정 </small>\r\n                        <li> .antMatchers(\"/경로\").authenticated() <small> # 인증된 사용자만 접근가능 </small> </li>\r\n                        <li> .antMatchers(\"/**\").permitAll() <small> # 모든 경로 인증없이 허용 </small> </li>\r\n                        <li> .antMatchers(HttpMethod.POST,\"/**\").permitAll() <small> # POST방식으로 접근할 때 모든 경로 인증없이 허용 </small> </li>\r\n                        <li> .antMatchers(\"/경로\").hasRole(\"[GUEST,USER,MEMER,ADMIN]\") <small> # 권한이 있어야 경로로 접속가능 </small> </li>\r\n                        <li> .antMatchers(\"/경로\").hasAnyRole(\"[GUEST,USER,MEMER,ADMIN]\") <small> # 권한 중 1개를 가지고있어야 접속가능 </small> </li>\r\n                        <li> .antMatchers(\"/경로\").hasAuthority(\"ROLE_[GUEST,USER,MEMER,ADMIN]\") <small> # 권한이 있어야 경로로 접속가능 </small> </li>\r\n                        <li> .antMatchers(\"/경로\").hasAnyAuthority(\"ROLE_[GUEST,USER,MEMER,ADMIN]\") <small> # 권한 중 1개를 가지고있어야 접속가능 </small> </li>\r\n                        <li> .antMatchers(\"/경로\").access(\"hasRole('ADMIN')\") <small> # SpEL 표현식 결과에 따라 접근 </small> </li>\r\n                        <li> .antMatchers(\"/경로\").hasIpAddress() <small> # 특정 IP 주소를 가지는 사용자만 접근 할 수 있다. </small> </li>\r\n                        <li> .antMatcher(\"/경로\").denyAll <small> # 모두 접근 불가 </small> </li>\r\n                        <li> .antMatcher(\"/경로\").anonymous() <small> # 인증이 없는 사용자 접근 가능 </small> </li>\r\n                        <li> .antMatcher(\"/경로\").isRememberMe() <small> # Remember-me기능으로 로그인한 사용자 접근 가능 </small> </li>\r\n                        <li> .antMatcher(\"/경로\").isAuthenticated() <small> # 인증된 사용자만 접근 가능 </small> </li>\r\n                        <li> .antMatcher(\"/경로\").isFullyAuthenticated() <small> # 익명의 사용자가 아니고 Remember-me로 로그인하지 않은 사용자 접근 가능 </small> </li>\r\n                        <li> .anyRequest().authenticated(); <small> # 이외에 다른 요청들은 모두 인증이 필요 </small> </li>\r\n                      </li>\r\n                      <li>  </li> <br />\r\n\r\n                      <li> <h5> // 🔍 spring security login관련 보안 설정이다. (완벽하게 어떤 과정을 거치는지는 공부를 더 해보아야 한다.) </h5> </li>\r\n                      <li> http.formLogin() <smll> # 로그인 설정 </smll>\r\n                        <li> .loginPage(\"/경로\")  <small> # 커스텀 로그인 페이지 경로와 로그인 인증 경로 등록, default=/login</small> </li>\r\n                        <li> .loginProcessingUrl(\"/do경로\") <small> # 로그인 처리할 경로, default=/login</small>   </li>\r\n                        <li> .defaultSuccessUrl(\"/경로\") <small> # 로그인이 성공할 경우 리다이렉트 주소, default=/ </small>  </li>\r\n                        <li> .usernameParameter(\"파라미터명\") <small> # 유저의 이름 파라미터 , default=username </small> </li>\r\n                        <li> .passwordParameter(\"파라미터명\") <small> # 유저의 비번 파라미터 , default=password </small> </li>\r\n                        <li> .successHandler(new SuccessHandler() {'{'} <small> # 로그인 성공시 내부 클래스를 이용해서 처리 메소드를 작성, 따로 클래스를 만들고 상속 후 메소드를 처리해도 된다. </small>\r\n                          <li> .failureUrl() <small> # default=/login?error  </small> </li>\r\n                          <li> @Override </li>\r\n                          <li> public void onAuthenticationSuccess(HttpServletRequest httpServletRequest, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {'{'}\r\n                            <li> response.sendRedirect(\"/\"); </li>\r\n                          </li>\r\n                          <li> {'}'} </li>\r\n                        </li>\r\n                        <li> {'})'} </li>\r\n                        <li> .failureHandler(new failureHandler() {'{'} <small> # 로그인 실패시 내부 클래스를 이용해서 처리 메소드를 작성, 따로 클래스를 만들고 상속 후 메소드를 처리해도 된다. </small>\r\n                          <li> @Override </li>\r\n                          <li> public void onAuthenticationSuccess(HttpServletRequest httpServletRequest, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {'{'}\r\n                            <li> response.sendRedirect(\"/\"); </li>\r\n                          </li>\r\n                          <li> {'}'} </li>\r\n                        </li>\r\n                        <li> {'})'} </li>\r\n                        <li> .permitAll(); <small> # 꼭 있어도 되는것은 아닌것으로 기억 </small> </li>\r\n                      </li>\r\n                      <li>  </li> <br />\r\n                      <li> <h5> // 🔍 spring security logout관련 보안 설정이다. </h5> </li>\r\n                      <li> http.logout() <small> # </small> 로그아웃 설정\r\n                        <li> .logoutUrl(\"/do경로\") <small> # 로그아웃을 요청할 경로  ,기본값은 (\"/logout\")</small>   </li>\r\n                        <li> .logoutRequestMatcher(new AntPathRequestMatcher(\"/logout\")) <small> # 로그아웃 경로를 지정합니다. </small>  </li>\r\n                        <li> .logoutSuccessUrl(\"/경로\") <small> # 로그아웃이 성공할 경우 이동할 경로 , 기본값은 (\"/login?logout\")? </small>  </li>\r\n                        <li> .invalidateHttpSession(true) <small> # 로그아웃 성공 시 세션을 제거 </small>  </li>\r\n                        <li> .deleteCookies(\"JSESSIONID\",\"SOME\",\"OTHER\",\"COOKIES\") <small> # 로그아웃시 쿠키 제거 </small> </li>\r\n                      </li>\r\n                      <li>  </li> <br />\r\n                      <li> <h5> // 🔍 아래는 나중에 정리 </h5> </li>\r\n                      <li> http.exceptionHandling() <small> # </small>\r\n                        <li> .accessDeniedPage(\"/경로\" 혹은 커스텀메소드) <small> # 권한이 없는 사용자가 접근하면 이동할 경로 지정 </small>  </li>\r\n                        <li> .authenticationEntryPoint(커스텀메소드) <small> # </small> </li>\r\n                      </li>\r\n                      <li> .and() </li>\r\n                      <li> .addFilter(커스텀필터메소드) <small> # 필터 구현체를 등록하여 필터 처리 </small>  </li>\r\n                      <li> .and() </li>\r\n                      <li> .oauth2Login() <small> # Oauth 로그인 설정 </small>\r\n                        <li> .loginPage(\"/loginForm\") <small> # </small> </li>\r\n                        <li> .userInfoEndpoint() <small> # </small> </li>\r\n                        <li> .userService(customOAuth2UserService); <small> # Oauth 로그인 커스텀 서비스 처리 설정 </small> </li>\r\n                      </li> <br />\r\n                      <li> // 🔍 rememberme 사용 ( 방법은 좀더 알아보기 ) </li>\r\n                      <li> http.rememberMe().tokenValiditySeconds(60 * 60 * 24); <small> # rememberMe 사용 ,html form에 remember-me라는 담아서 필드를 보내면된다. , default=2주 </small> </li>\r\n                    </li>\r\n                    <li> </li> <br />\r\n\r\n                    <li> // 아래는 security 인증을 처리하는 방식을 설정하는 2가지 방법이다. (~~방식 인증이라고 말한것은 대략 지어놓은 말이다.) </li>\r\n                    <li> <h5> 🎈 1. InMemory 방식 <small> # 안 써봐서 잘 모르지만 내부에 저장을 해놓고서 인증을 처리하는 방식으로 기억 </small> </h5> </li>\r\n                    <li>  @Bean </li>\r\n                    <li> \t@Override </li>\r\n                    <li> \tpublic UserDetailsService userDetailsService() {'{'}\r\n                      <li> \tUserDetails user = </li>\r\n                      <li> \tUser.withDefaultPasswordEncoder()\r\n                        <li>  .username(\"user\") </li>\r\n                        <li>  .password(\"password\") </li>\r\n                        <li>  .roles(\"USER\") </li>\r\n                        <li>  .build(); </li>\r\n                      </li>\r\n                      <li>  </li>\r\n                      <li> \t\treturn new InMemoryUserDetailsManager(user); </li>\r\n                    </li>\r\n                    <li> \t{'}'} </li> <br />\r\n\r\n                    <li> </li> <br />\r\n                    <li> <h5> 🎈 2. jdbcAuthentication() 방식 인증 <small> # security로 인증을 처리하는 방법 </small> </h5> </li>\r\n                    <li> @Autowired </li>\r\n                    <li> DataSource dataSource; </li> <br />\r\n                    <li> @Bean </li>\r\n                    <li> public BCryptPasswordEncoder bCryptPasswordEncoder() {'{'} return new BCryptPasswordEncoder(); {'}'} </li> <br />\r\n                    <li> public PasswordEncoder passEncoder() {'{'} return PasswordEncoderFactories.createDelegatingPasswordEncoder() {'}'}\r\n                      <small> # BCryptPasswordEncoder하고 다른점은 정보에 어떤 암호문을 사용헀는지가 추가된다. , 사용을 안해봐서 언제 사용하는지는 잘 모르겠다. </small>  </li>\r\n                    <br />\r\n                    <li> @Override </li>\r\n                    <li> protected void configure(AuthenticationManagerBuilder auth) throws Exception {'{'}\r\n                      <li> auth.jdbcAuthentication()\r\n                        <li> {' .dataSource(dataSource) '} </li>\r\n                        <li> {' .passwordEncoder(bCryptPasswordEncoder()) '} </li>\r\n                        <li> {' .usersByUsernameQuery(\"select username,password,enabled \" '}\r\n                          <li> {' + \"from client where username=?\") '} </li>\r\n                        </li>\r\n                        <li> {' .authoritiesByUsernameQuery(\"select c.username, r.name \" '}\r\n                          <li> {' + \"from client_role cr inner join client c on cr.client_id = c.id \" '} </li>\r\n                          <li> {' + \"inner join role r on cr.role_id = r.id \" '} </li>\r\n                          <li> {' + \"where c.username = ?\"); '} </li>\r\n                        </li>\r\n                      </li>\r\n                    </li>\r\n                    <li> \t{'}'} </li>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Spring Security 권한을 이용해서 Method 접근 설정 ( 정리 필요 ) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> 메소드를 호출할 때, security권한을 이용해서 접근 유무 설정가능 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> MethodSecurityConfig [Custom]\r\n              <div className=\"block3\">\r\n                <li> <h3 className=\"h3\">  </h3>\r\n                  <li> {' @Configuration '} </li>\r\n                  <li> {' @EnableGlobalMethodSecurity( '}\r\n                    <li> {' prePostEnabled = true, '} </li>\r\n                    <li> {' securedEnabled = true, '} </li>\r\n                    <li> {' jsr250Enabled = true) '} </li>\r\n                  </li>\r\n                  <li> {' public class MethodSecurityConfig extends GlobalMethodSecurityConfiguration { '} </li>\r\n                  <li> {' } '} </li>\r\n                </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Security FiletrChain (제대로 된 정리가 되있지 않음) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className=\"h2\"> 📌 필터 체인 종류 및 설명 </h2>\r\n            <li> <i> 1. ChannelProcessingFilter </i> </li>\r\n            <li> <i> 2. SecurityContextPersistenceFilter(필수) </i>\r\n              SecurityContextRepository에서 SecurityContext를 로드하고 저장하는 일을 담당 </li>\r\n            <li> <i> 3. ConcurrentSessionFilter </i> </li>\r\n            <li> <i> 4. HEADERS_FILTER </i> </li>\r\n            <li> <i> 5. CSRF_FILTER </i> </li>\r\n            <li> <i> 6. LogoutFilter(필수) </i>\r\n              로그아웃 URL로 지정된 가상URL에 대한 요청을 감시하고 매칭되는 요청이 있으면 사용자를\r\n              로그아웃시킴</li>\r\n            <li> <i> 7. UsernamePasswordAuthenticationFilter(필수) </i>\r\n              사용자명과 비밀번호로 이뤄진 폼기반 인증에 사용하는 가상 URL요청을 감시하고 요청이\r\n              있으면 사용자의 인증을 진행함</li>\r\n            <li> <i> 8. DefaultLoginPageGeneratingFilter </i> 폼기반 또는 OpenID 기반 인증에\r\n              사용하는 가상URL에 대한 요청을 감시하고 로그인 폼 기능을 수행하는데 필요한 HTML을 생성함</li>\r\n            <li> <i> 9. CasAuthenticationFilter </i> </li>\r\n            <li> <i> 10. BasicAuthenticationFilter(필수) </i> HTTP 기본 인증 헤더를 감시하고 이를 처리함 </li>\r\n            <li> <i> 11.RequestCacheAwareFilter </i> 로그인 성공 이후 인증 요청에 의해 가로채어진 사용자의\r\n              원래 요청을 재구성하는데 사용됨</li>\r\n            <li> <i> 12. SecurityContextHolderAwareRequestFilter </i> </li>\r\n            <li> <i> 13. JaasApiIntegrationFilter </i> </li>\r\n            <li> <i> 14. RememberMeAuthenticationFilter </i> </li>\r\n            <li> <i> 15. AnonymousAuthenticationFilter </i>\r\n              이 필터가 호출되는 시점까지 사용자가 아직 인증을 받지 못했다면 요청 관련 인증\r\n              토큰에서 사용자가 익명 사용자로 나타나게 됨</li>\r\n            <li> <i> 16. SessionManagementFilter </i>\r\n              인증된 주체를 바탕으로 세션 트래킹을 처리해 단일 주체와 관련한 모든 세션들이 트래킹되도록 도움</li>\r\n            <li> <i> 17. ExceptionTranslationFilter(필수) </i>\r\n              이 필터는 보호된 요청을 처리하는 동안 발생할 수 있는 기대한 예외의 기본\r\n              라우팅과 위임을 처리함</li>\r\n            <li> <i> 18. FilterSecurityInterceptor(필수) </i>\r\n              이 필터는 권한부여와 관련한 결정을 AccessDecisionManager에게 위임해 권한부여\r\n              결정 및 접근 제어 결정을 쉽게 만들어 줌</li>\r\n\r\n\r\n\r\n            <h2 className=\"h2\"> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className=\"h2\"> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className=\"block3\">\r\n                <li> <h3 className=\"h3\">  </h3>\r\n                  <li>  </li>\r\n                  <div className='block4'>\r\n                    <li> </li>\r\n                  </div>\r\n                </li> <br />\r\n                <li> <h3 className=\"h3\">  </h3>\r\n                  <li>  </li>\r\n                  <div className='block4'>\r\n                    <li> </li>\r\n                  </div>\r\n                </li> <br />\r\n\r\n\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HtmlTest;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst SpringValidator = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Validator </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 설명 </h2>\r\n              <li> 유효성 검사를 해주는 클래스 </li>\r\n              <li> <a href=\"https://beanvalidation.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Jakarta Bean Validation </a>\r\n                <a href=\"https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#validator-gettingstarted-createproject\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  Hibernate Validator </a>\r\n                <li> validator를 사용할 때는 ValidationUtils를 사용하는 방법과 사용하지 않는 2가지 방법이 있다. </li>\r\n                <li> 사용자의 정보를 검증하는 단계는 컨트롤러 즉 사용자의 정보를 처음에 받는 곳에서 처리를 해야한다. </li>\r\n              </li>\r\n              <li> <a href=\"https://docs.spring.io/spring-framework/docs/4.1.x/spring-framework-reference/html/validation.html\"\r\n                target=\"_blank\" rel=\"noopener noreferrer\"> 공식 문서 </a>\r\n                <li> Validator 인터페이스는 Errors객체를 사용하여 유효성 실패를 보고할 수 있다. </li>\r\n                <li> support메소드는 Validator가 제공된 클래스 객체를 유효 검사할 수 있는지 판단</li>\r\n                <li> validate메소드는 주어진 객체가 오류 객체인 경우 Error객체로 등록한다. </li>\r\n                <li> Validator 구현은 간단하고 , 스프링 프레임워크는 ValidationUtils 제공한다.\r\n                  하지만 스프링 Validation API를 사용하면 편리하다. </li>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Validator 클래스와 bindingResult 사용방법 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 Errors 인터페이스 속성 </h2>\r\n              <li> reject(String errorCode) # 모든 객체에 대해서 에러 코드를 추가 </li>\r\n              <li> reject(String errorCode, String defaultMessage) </li>\r\n              <li> reject(String errorCode, Object[] errorArgs, String defaultMessage) # errorArgs 에러 메세지를 전달함 </li>\r\n              <li> rejectValue(String field, String errorCode) # 필드에 대한 에러 코드 추가</li>\r\n              <li> rejectValue(String field, String errorCode, String defaultMessage) </li>\r\n              <li> rejectValue(String field, String errorCode, Object[] errorArgs, String defaultMessage) </li> <br />\r\n              <li> boolean hasError() # 에러 발생 여부 </li>\r\n              <li> int getErrorCount() # 에러 갯수 리턴 </li>\r\n              <li> boolean hasGlobalErrors() # reject() 에러 발생 여부 </li>\r\n              <li> int getGlobalErrorCount() # reject() 에러 갯수 리턴 </li>\r\n              <li> boolean hasFieldErrors() # rejectValue() 에러 발생 여부 </li>\r\n              <li> int getFieldErrorCount() # rejectValue() 에러 갯수 리턴 </li>\r\n              <li> boolean hasFieldErrors() # rejectValue() 를 사용한 특정 필드 에러 발생 여부 </li>\r\n              <li> int getFieldErrorCount(String field) # rejectValue() 를 사용한 특정 필드 에러 갯수 리턴 </li>\r\n              <li></li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li>\r\n                <h3 className='h3'> 🎈 Controller </h3>\r\n                <div className='block4'>\r\n                  <li> {' @RestController '} </li>\r\n                  <li> {' public class UserController { '}\r\n                    <li> {'@RequestMapping(value=\"/auth/signup\", method=RequestMethod.POST) '} </li>\r\n                    <li> {'public UserDto Signup(@RequestBody UserDto data,BindingResult bindingResult) { '}\r\n                      <li> {'new UserValidator().validate(data,bindingResult); '} </li>\r\n                      <li> {'System.out.println(bindingResult.getFieldError(\"uid\")); '} </li>\r\n                      <li> {'return data; '} </li>\r\n                    </li>\r\n                    <li> {'} '} </li>\r\n                  </li>\r\n                  <li> {' } '} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 커스텀 Validator 클래스</h3>\r\n                <div className='block4'>\r\n                  <li> Validator 인터페이스는 자바가 아닌 스프링을 사용해야한다!!!!!! </li>\r\n                  <li> @Component <small> 선언 안해도 사용은 가능해서 좀 더 알아봐야 할것 같다. </small> </li>\r\n                  <li> {' public class UserValidator implements Validator { '}\r\n                    <li> {' @Override '} </li>\r\n                    <li> {' public boolean supports(Class<?> clazz) { '}\r\n                      <li> {' return userDto.class.equals(clazz); '} </li>\r\n                    </li>\r\n                    <li> {' } '} </li>\r\n                    <li> {' @Override '} </li>\r\n                    <li> {' public void validate(Object target, Errors errors) { '}\r\n                      <li> {' UserDto userDto = (UserDto) target; '} </li>\r\n                      <li> {' if(userDto.getUid().length() > 5) { '}\r\n                        <li> {' errors.rejectValue(\"uid\",\"uid에 문제가 있다.\"); '} </li>\r\n                      </li>\r\n                      <li> {' } '} </li>\r\n                    </li>\r\n                    <li> {' } '} </li>\r\n                  </li>\r\n                  <li> {' } '} </li>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @Valid와 @Validate </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 @Valid </h2>\r\n              <li> Java 어노테이션 </li>\r\n              <li>  </li>\r\n\r\n              <h2 className='h2'> 📌 @Validate </h2>\r\n              <li> 스프링 어노테이션 </li>\r\n              <li> @Valid 기능을 포함 </li>\r\n              <li> 유효성 검사할 그룹을 따로 지정이 가능 </li>\r\n              <li>  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 유효성 검사에 사용하는 어노테이션 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className=\"h2\"> 📌 설명</h2>\r\n              <li> 스프링에서 사용 </li>\r\n              <li> hibernate 관련? </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @NonNull</h2>\r\n              <li> 변수 위에 선언 </li>\r\n              <li> Null을 허용하지 않음 </li>\r\n              <li> Null이면 NullPointerException발생 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Nullable </h2>\r\n              <li> 변수 위에 선언 </li>\r\n              <li> null을 허용 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @NotNull </h2>\r\n              <li> 변수 위에 선언 </li>\r\n              <li> Null만 허용하지 않음 </li>\r\n              <li> Null이면 NullPointerException발생 </li>\r\n              <li> DB에 SQL쿼리를 보내기전에 엔티티에 값이 잘못 들어가면 ConstraintViolationException예외 발생</li>\r\n              <li> SQL쿼리에는 not null 생성 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @NotEmpty </h2>\r\n              <li> 변수 위에 선언 </li>\r\n              <li> Null, 빈문자열(\"\") 불가능 , \" \" 은 가능 </li>\r\n              <li> 문자열 검증 용도 </li>\r\n              <li> String과 Collection 타입에만 적용이 가능하다고 한다. (boolean에는 @NotNull) </li>\r\n              <li> SQL쿼리에는 not null을 붙여주지 않음 </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @NotBlank </h2>\r\n              <li> 변수 위에 선언 </li>\r\n              <li> 문자열 검증 용도 </li>\r\n              <li> Null, 빈문자열(\"\") , \" \" 모두 불가능 </li>\r\n              <li> SQL쿼리에는 not null을 붙여주지 않음 </li>\r\n\r\n\r\n              <h2 className=\"h2\"> 📌 @Size </h2>\r\n              <li> 변수 위에 선언 </li>\r\n              <li> 최소 최대 지정 </li>\r\n              <li> 문자열, 배열등의 크기 판단 </li>\r\n              <li> Bean Validation annotation </li>\r\n              <div className=\"block4\">\r\n                <li> @Size(min=1, max=20, message=\"null에러\") </li>\r\n                <li> private String name; </li>\r\n              </div>\r\n\r\n              <h2 className=\"h2\"> 📌 @Min @Max </h2>\r\n              <li> 변수 위에 선언 </li>\r\n              <li> 최소 최대 지정 </li>\r\n              <div className=\"block4\">\r\n                <li> @Min(1) </li>\r\n                <li> @Max(20) </li>\r\n                <li> private String name; </li>\r\n              </div>\r\n\r\n              <h2 className=\"h2\"> 📌 @Length </h2>\r\n              <li> 변수 위에 선언 </li>\r\n              <li> 문자열의 길이 판단 </li>\r\n              <li> Hibernate-specific annotation </li>\r\n              <div className=\"block4\">\r\n                <li> @Length(min=5,max=10,message=\"\") </li>\r\n                <li> private String name; </li>\r\n              </div>\r\n\r\n              <h2 className=\"h2\"> 📌 @Past </h2>\r\n              <li> 과거 날짜 </li>\r\n              <li></li>\r\n\r\n              <h2 className=\"h2\"> 📌 @PastOrPresent </h2>\r\n              <li> @Past + 오늘 날짜 </li>\r\n              <li></li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Future </h2>\r\n              <li> 미래 날짜 </li>\r\n              <li></li>\r\n\r\n              <h2 className=\"h2\"> 📌 @FutureOrPresent </h2>\r\n              <li> @Future + 오늘 날짜 </li>\r\n              <li></li>\r\n\r\n              <h2 className=\"h2\"> 📌 @AssertTrue @AssertFalse </h2>\r\n              <li> 참,거짓 조건 설정 </li>\r\n              <li></li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Pattern </h2>\r\n              <li> 정규표현식 사용가능 </li>\r\n              <li> @Pattern(regexp=\"정규표현식\") </li>\r\n              <li>  </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Email </h2>\r\n              <li> null 허용(주의) </li>\r\n              <li>  </li>\r\n\r\n              <h2 className=\"h2\"> 📌 @Positive, @PositiveOrZero </h2>\r\n              <li> 양수로 제한 </li>\r\n              <li> 0이나 양수로 제한 </li>\r\n\r\n              <h2 className=\"h2\"> 📌@Negative, @NegativeOrZero </h2>\r\n              <li> 음수로 제한 </li>\r\n              <li> 0이나 음수로 제한 </li>\r\n\r\n              <h2 className=\"h2\"> 📌  </h2>\r\n              <li>  </li>\r\n\r\n              <h2 className=\"h2\"> 📌 </h2>\r\n              <li>  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary>@Valid 사용 예시 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li>\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 Controller </h3>\r\n                  <div className='block4'>\r\n                    <li> {'@RequestMapping(value=\"/auth/signup\", method=RequestMethod.POST) '} </li>\r\n                    <li> {'public HashMap<String,Object> Signup(@Valid @RequestBody UserDto data,BindingResult bindingResult) { '}\r\n                      <li> {'HashMap<String,Object> userDto = new HashMap<String,Object>(); '} </li>\r\n                      <li> {'System.out.println(bindingResult.getFieldErrorCount()); '} </li>\r\n                      <li> // bindingResult.getAllErrors() 에러 객체를 리스트로 받음 </li>\r\n                      <li> {' List<ObjectError> list = bindingResult.getAllErrors(); '} </li>\r\n                      <li> {' for(ObjectError e : list) { '}\r\n                        <li> {'  System.out.println(e.getDefaultMessage()); '} </li>\r\n                      </li>\r\n                      <li> {' } '} </li>\r\n                      <li> {'return userDto; '} </li>\r\n                    </li>\r\n                    <li> {'} '} </li>\r\n                  </div>\r\n                  <h3 className='h3'> 🎈 Entity나 Dto</h3>\r\n                  <div className='block4'>\r\n                    <li> {' public class UserDto { '}\r\n                      <li> {' private static final long serialVersionUID = 1L; '} </li>\r\n                      <li> {' private String uid; // 로컬 유저 식별자 '} </li>\r\n                      <li> {' @Size(min=1, max=5, message = \"글자크기 문제\") '} </li>\r\n                      <li> {' private String uaid; // 유저 api 식별자 '} </li>\r\n                      <li> {' private String nickname; // 유저 닉네임 '} </li>\r\n                      <li> {' private String email; // 유저 이메일 '} </li>\r\n                      <li> {' private String password; // 유저 비밀번호 '} </li>\r\n                    </li>\r\n                    <li> {' } '} </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        {/* 끝 */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpringValidator;","import React from 'react';\r\n\r\nconst SpringAop = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> AOP란 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> AOP(Aspect Oriented Programming): 관점 지향 프로그래밍,기존에 사용하던\r\n                            프로그래밍 방법은 객체지향 프로그래밍을 사용하지만 중복된 코드들이 많고\r\n                            확장,유지 보수를 떨어뜨린다.AOP에서는 핵심기능(서비스)와 공통기능(인증,필터 등)을\r\n                            분리하여 유지보수가 더 좋아지며 재활용성이 높아진다.\r\n                        </li>\r\n                        <li> 자바에서는 다중상속이 불가능하여 공통기능을 부여하기에 한계가 있다. </li>\r\n                        <li> 로그처리, 보안처리, DB 트랜잭션 처리 등 , 코드의 중복을 줄이고 로직을 분리 할 수 있음 </li>\r\n                        <li> 관정을 횡단으로 보는 횡단 관심 사항, Cross Cutting Concern(부가적인로직) , Core Concern(비즈니스로직) </li>\r\n                        <li> proxy 방법을 이용한다. client - proxy(공통기능) - target(핵심기능) </li>\r\n                        <li> /aop 폴더를 만들어서 사용 </li>\r\n                        <li> 스프링에서는 Proxy로 제공, Target이 이용되는 프록시는 런타임에 생성 </li>\r\n                        <li> 일반적으로 전처리 어드바이스를 행하지만 후처리 어드바이스도 가능 </li>\r\n\r\n                        <h2 className=\"h2\"> 📌 관련 용어 </h2>\r\n                        <li> Aspect : Advice + Pointcut , 싱글톤으로 존재 </li>\r\n                        <li> Advisor : Advice + Pointcut , 스프링AOP에서만 사용하는 용어 </li>\r\n                        <li> Weaving : Pointcut에 결정된 Target에 Advice를 삽입하는 과정  </li>\r\n                        <li>  </li> <br />\r\n                        <li> Target : 핵심기능, Pointcut에서 적용이 되는 대상  </li>\r\n                        <li> Advice : 부가기능(보안, 필터 등), Aspect 해야할 일 </li>\r\n                        <li> Join point : Advice가 적용될 지점(타겟이 구현한 메소드,필드,객체,생성자)  </li>\r\n                        <li> Pointcut : Advice를 적용할 Target메서드를 선별, execution으로 시작하고, signature를 이용, 정규표현식 </li>\r\n\r\n                        <h2 className=\"h2\"> 📌 관련 태그? 메소드? </h2>\r\n                        <li> aop:before : 메소드 실행전에 advice실행 </li>\r\n                        <li> aop:after-returning : 정상적으로 메소드 실행 후에 advice 실행  </li>\r\n                        <li> aop:after-throwing : 메소드 실행중 exception 발생시 advice 실행 </li>\r\n                        <li> aop:after : 메소드 실행중 exception이 발생해도 advice 실행 </li>\r\n                        <li> aop:around : 메소드 실행 전/후 및 exception 발생시 advice 실행 </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> AOP 예시 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 일반 메소드 </h3>\r\n                                <div className='block4'>\r\n                                    <li> @커스텀어노테이션 </li>\r\n                                    <li> public 메소드() {\"{\"}\r\n                                        <li> 메소드 내부 코드 작성 </li>\r\n                                    </li>\r\n                                    <li> {\"}\"} </li>\r\n                                </div>\r\n                                <h3 className='h3'> 🎈 @커스텀어노테이션 </h3>\r\n                                <div className='block4'>\r\n                                    <li> @Target (ElementType.METHOD) </li>\r\n                                    <li> @Retention(RetentionPolicy.RUNTIME) </li>\r\n                                    <li> public @Interface 커스텀어노테이션 {\"{\"}\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> {\"}\"} </li>\r\n                                </div>\r\n                                <h3 className='h3'> 🎈 Aspect 생성(스프링 AOP) </h3>\r\n                                <div className='block4'>\r\n                                    <li> @Component<small> // 빈으로 등록</small> </li>\r\n                                    <li> @Aspect </li>\r\n                                    <li> public class 클래스명 {\"{\"}\r\n                                        <li> Logger logger = LoggerFactory.getLogger(LogAspect.class); </li>\r\n                                        <li> @Around(\"execution(* 패키지명..*(..))\") <small> //타겟팅 지정 </small> </li>\r\n                                        <li> public Object 메소드명(ProceedingJoinPoint joinPoint) throw Throwable {\"{\"}\r\n                                            <li> StoepWatch stopWatch = new StopWatch(); </li>\r\n                                            <li> stopWatch.start(); </li>\r\n                                            <li> Object proceed = joinPotin.proceed(); </li>\r\n                                            <li> stopWatch.stop(); </li>\r\n                                            <li> logger.info(stopWatch.prettyPrint()); </li>\r\n                                            <li> return proceed; </li>\r\n                                        </li>\r\n                                        <li> {\"}\"} </li>\r\n                                    </li>\r\n                                    <li> {\"}\"} </li>\r\n                                </div>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> Spring AOP , AspectJ </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 Spring AOP </h2>\r\n                        <li> 간단한 AOP 제공 </li>\r\n                        <li> join point : 메서드 레벨만 지원 </li>\r\n                        <li> Weaving : 런타임 시에만 가능 </li>\r\n                        <li> 대상 : Spring Container Bean만 가능 </li>\r\n\r\n                        <h2 className='h2'> 📌 Aspect J </h2>\r\n                        <li> 완벽한 AOP 제공 </li>\r\n                        <li> join point : 생성자, 필드, 메서드 다양하게 지원 </li>\r\n                        <li> Weaving : 런타임 제공x, 컴파일, 포스트 컴파일, 로드 타임 제공 </li>\r\n                        <li> 대상 : 모든 자바 객체 가능 </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 스프링AOP 메소드 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 JointPoint 메소드 </h2>\r\n                        <li> getArgs() : 메서드 인자 반환 </li>\r\n                        <li> getThis() : 프록시 객체 반환 </li>\r\n                        <li> getTarget() : 대상 객체 반환 </li>\r\n                        <li> getSignature() : 어드바이즈,메서드 설명 반환 </li>\r\n                        <li> toString() : 어드바이즈,메서드 설명 출력 </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> @Aspect </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> Aop로 처리할 클래스 상단에 선언 </li>\r\n                        <li> 자동으로 빈으로 등록이되지 않음, 대신 @Component 사용 </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> @Around </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li>  </li>\r\n                        <li>  </li>\r\n                        <li>  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpringAop;","import React from 'react';\r\n\r\nconst SpringService = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> @Transactional </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> <a href=\"https://nesoy.github.io/articles/2019-05/Database-Transaction-isolation\" target=\"_blank\" rel=\"noopener noreferrer\"> 정리 내용 참고 </a> </li>\r\n                        <li> 트랜잭션은 DB의 상태를 변경하는 작업, 한번에 연산 처리가 필요 </li>\r\n                        <li> (begin, commit)을 자동실행, 예외발생시 rollback 처리 </li>\r\n                        <li> 메소드, 클래스, 인터페이스 위에 선언, 트랜잭션 기능을 가진 프록시 객체가 진행 </li>\r\n                        <li> @Transactional 은  </li>\r\n                        <li> @Transactional(rollbackFor = Exception.class) </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌 옵션 </h2>\r\n                        <li> isolation : 트랜잭션에서 일관성없는 데이터 허용 수준을 설정한다(이해가 안감) </li>\r\n                        <li> @Transactional(isolation=Isolation.DEFAULT) , 데이터베이스의 Isolation Level 사용 </li>\r\n                        <li> @Transactional(isolation=Isolation.READ_UNCOMMITED) , 데이터 변경해서 커밋을 하는 동안 다른사용자가 데이터 읽기 허용 </li>\r\n                        <li> @Transactional(isolation=Isolation.READ_COMMITED) , 데이터 변경해서 커밋을 하는 동안 다른사용자가 데이터 읽기 불가 </li>\r\n                        <li> @Transactional(isolation=Isolation.REPEATEABLE_READ) , 트랜잭션마다 ID를 부여하여 본인보다 작은 ID값만 읽게 허용  </li>\r\n                        <li> @Transactional(isolation=Isolation.SERIALIZABLE) , MVCC막고, Lock을 걸어서 막음 </li>\r\n                        <li> Dirty Read, Non-Repeatable Read, Phantom Read 가 위에서부터 3,2,1개씩 있고 마지막만 없음 </li>\r\n                        <li>  </li> <br />\r\n                        <li> propagation : 트랜잭션 동작 도중 다른 트랜잭션을 호출할 때, 어떻게 할 것인지 지정하는 옵션이다(이해가 안감) </li>\r\n                        <li> @Transactional(propagation=Propagation.REQUIRED), 진행중인 트랜잭션이 존재하면 속성을 그대로 따르고 , 없다면 생성 </li>\r\n                        <li> @Transactional(propagation=Propagation.REQUIRED_NEW), 진행중인 트랜잭션이 존재하면 잠시 중지하고, 트랜잭션을 새로 생성해서 먼저 실행  </li>\r\n                        <li> @Transactional(propagation=Propagation.SUPPORT), 진행중인 트랜잭션이 존재하면 속성을 그대로 따르고 , 없다면 설정x </li>\r\n                        <li> @Transactional(propagation=Propagation.NOT_SUPPORT), 진행중인 트랜잭션이 존재하면 잠시 중지하고 트랜잭션 없이 수행 </li>\r\n                        <li> @Transactional(propagation=Propagation.MANDATORY), 진행중인 트랜잭션이 존재하면 실행, 없으면 예외 발생 </li>\r\n                        <li> @Transactional(propagation=Propagation.NEVER), 트랜잭션이 없으면 진행, 있으면 에외 발생 </li>\r\n                        <li> @Transactional(propagation=Propagation.NESTED), 진행중인 트랜잭션이 있으면 중첩해서 실행, 없으면 REQUIRED와 동일 </li>\r\n                        <li>  </li> <br />\r\n                        <li> noRollbackFor : 특정 예외 발생 시 rollback하지 않는다. </li>\r\n                        <li> @Transactional(noRollbackFor=Exception.class) </li>\r\n                        <li>  </li> <br />\r\n                        <li> rollbackFor : 특정 예외 발생 시 rollback한다. </li>\r\n                        <li> @Transactional(rollbackFor=Exception.class) </li>\r\n                        <li>  </li> <br />\r\n                        <li> timeout : 지정시간내에 메소드 완료 안할시 rollback (-1은 사용안함 표시) </li>\r\n                        <li> @Transactional(timeout=1) </li>\r\n                        <li>  </li> <br />\r\n                        <li> readOnly : 읽기 전용 </li>\r\n                        <li> @Transactional(readonly = true) , insert/update/delete이면 예외 발생 </li>\r\n                        <li>  </li> <br />\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpringService;","import React from 'react';\r\n\r\nconst SpringJackson = (props) => {\r\n\r\n return (\r\n  <div className=\"common_style\">\r\n   <div className='block1'>\r\n    <details>\r\n     <summary> Jackson 이란? </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className='h2'> 📌 설명 </h2>\r\n      <li> Java Object {\" <---> \"} JSON 변환 </li>\r\n      <li> POJO 기반 자바 객체 JSON 변환 가능 </li>\r\n      <li> Node형태 처럼 데이터를 다룰수 있음 </li>\r\n      <li> 스트림 형식으로 데이터를 분석 및 생성 </li>\r\n\r\n      <h2 className='h2'> ✔ 예시 </h2>\r\n      <li>\r\n       <div className='block3'>\r\n        <h3 className='h3'> 🎈 </h3>\r\n        <div className='block4'>\r\n         <li>  </li>\r\n        </div>\r\n       </div>\r\n      </li>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n\r\n   <div className='block1'>\r\n    <details>\r\n     <summary> JSON Serialization </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className='h2'> 📌 설명 </h2>\r\n      <li> ObjectMapper </li>\r\n      <li> module </li>\r\n      <li> customSerializer </li>\r\n      <li> 객체맵퍼에 모듈을 등록, 모듈에 커스텀시리얼라이저를 등록 </li>\r\n\r\n      <h2 className='h2'> 📌 설명 </h2>\r\n      <li> ObjectMapper().registerModeul(모듈) </li>\r\n\r\n      <h2 className='h2'> ✔ 예시 </h2>\r\n      <li> 소제목\r\n       <div className='block3'>\r\n        <h3 className='h3'> 🎈 </h3>\r\n        <div className='block4'>\r\n         <li>  </li>\r\n        </div>\r\n       </div>\r\n      </li>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n\r\n   <div className='block1'>\r\n    <details>\r\n     <summary> 모듈 </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className='h2'> 📌 설명 </h2>\r\n      <li> JavaTimeModule() : </li>\r\n      <li>  </li>\r\n      <li>  </li>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n\r\n   <div className='block1'>\r\n    <details>\r\n     <summary> @Around </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className='h2'> 📌 설명 </h2>\r\n      <li> 대상 객체 메서드 전,후 예외 발생 시점에 공통 기능 수행 </li>\r\n      <li> 2 </li>\r\n      <li> 3 </li>\r\n\r\n      <h2 className='h2'> ✔ 예시 </h2>\r\n      <li> 소제목\r\n       <div className='block3'>\r\n        <h3 className='h3'> 🎈 </h3>\r\n        <div className='block4'>\r\n         <li>  </li>\r\n        </div>\r\n       </div>\r\n      </li>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default SpringJackson;","import React from 'react';\r\n\r\nconst SpringCommunication = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> RestTemplate - HTTP 통신(정리중) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> <a href=\"https://e2e2e2.tistory.com/15\" target=\"_blank\" rel=\"noopener noreferrer\"> 참고 링크 </a> </li>\r\n            <li> spring 4.x 부터 </li>\r\n            <li> http 요청 후 json,xml,string 응답 받을 수 있음 </li>\r\n            <li> restful 형식 지원 </li>\r\n            <li> Synchronous - Block  </li>\r\n            <li> 다른 httpClient로는 HttpURLConnection, HttpClient(HttpComponent), WebClient 등이 있다. </li>\r\n            <li> 커넥션 풀을 지원하지 않아서 호출할 때 마다 tcp connection을 만들어서 사용\r\n              그러므로 이 문제를 해결해야 한다.  </li>\r\n            <li> 기본적으로 URLConnection을 사용하는데 Apache에서 사용하는 HttpClient를 사용해서 커넥션 풀을 이용해본다. </li>\r\n            <li> uri를 String 타입과 URI 타입 둘다 사용 할 수 있다. </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 동작 과정 </h2>\r\n            <li> 1. RestAPI를 이용하기 위해 RestTemplate 메서드를 호출 </li>\r\n            <li> 2. MessageConverter를 이용해서 java object를 request body에 담을 Json등으로 변환 </li>\r\n            <li> 3. ClientHttpRequestFactory에서 ClientHttpRequest을 받아서 요청을 전달 </li>\r\n            <li> 4. ClientHttpRequest가 http요청을 수행 </li>\r\n            <li> 5. RestTemplate가 에러를 핸들링함 </li>\r\n            <li> 6. ClientHttpResponser에서 응답데이터를 가져온다. 에러가 있으면 Response ErrorHandler을 수행 </li>\r\n            <li> 7. MessageConverter를 이용해서 response body의 message를 자바 객체로 변환 </li>\r\n            <li> 8. 결과를 받아서 처리 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 RestTemplate 메소드 </h2>\r\n            <li> excute : Any , Request/Response 콜백을 수정 가능 </li>\r\n            <li> exchange : Any , HTTP 헤더를 새로 만들 수 있고, 어떤 HTTP 메소드도 사용가능하다.</li>\r\n            <li> getForObject(uri,자바객체.class) : GET , get 요청 보내고 매핑해서 자바 객체로 반환 </li>\r\n            <li> getForEntity : GET , get 요청 보내고 ResponseEntity로 반환 </li>\r\n            <li> <small> GET에 헤더를 추가하고 싶으면 exchange를 이용 </small> </li>\r\n            <li> postForLocation : POST , post 요청 보내고 헤더에 저장된 java.net.URI로 반환 </li>\r\n            <li> postForEntity : POST , post 요청 보내고 ResponseEntity로 반환 </li>\r\n            <li> postForObject : POST , post 요청 보내고 자바 객체로 반환 </li>\r\n            <li> put : PUT , URL 주소에 HTTP PUT 메소드를 실행한다. </li>\r\n            <li> delete : DELETE , URL 주소에 HTTP DELETE 메소드를 실행한다. </li>\r\n            <li> patchForObject : PATCH , URL 주소에 HTTP PATCH 메소드를 실행한다. </li>\r\n            <li> optionsForAllow : OPTIONS , URL 주소에서 지원하는 HTTP 메소드를 조회한다. </li>\r\n            <li> headForHeader : HEADER , 헤더의 모든 정보를 얻을 수 있으면 HTTP HEAD 메소드를 사용한다. </li>\r\n\r\n            <h2 className='h2'> 📌 ResponseEntity </h2>\r\n            <li> HttpEntity : HttpHeader, HttpBody를 포함하는 클래스 </li>\r\n            <li> ResponseEntity extends HttpEntity </li>\r\n            <li> ResponseEntity는 HttpStatue를 포함 </li>\r\n            <li> RequestEntity는 HttpMethod를 포함 </li>\r\n\r\n            <h2 className='h2'> 📌 UriComponentsBulider </h2>\r\n            <li> url과 파라미터를 조합해서 빌드를 가능하게 해준다. </li>\r\n            <li> UriComponents uriBuilder = UriComponentsBuilder.fromHttpUrl(url)\r\n              <li> .path(\"/\") </li>\r\n              <li> .queryParam(\"키\",\"값\") </li>\r\n              <li> .encode() //UTF-8 인코딩 처리, toUri()할때 사용 </li>\r\n              <li> .build() </li>\r\n            </li>\r\n            <li>  </li> <br />\r\n            <li> uriBuilder.toUri() </li>\r\n            <li> uriBuilder.toString() </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> RestTemplate restTemplate = new RestTemplate(); </li>\r\n            <li> restTemplate.getRequestFactory().getClass() </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 RestTemplate 커넥션 풀 설정하기 </h3>\r\n                <div className='block4'>\r\n                  <li> public RestTemplate restTemplate() {\"{\"}\r\n                    <li> HttpComponentsClientHttpRequestFactory factory = new HttpComponentsClientHttpRequestFactory(); </li>\r\n                    <li> factory.setReadTimeout(5000); </li>\r\n                    <li> factory.setConnectTimeout(3000); </li>\r\n                    <li> HttpClient httpClient = HttpClientBuilder.create()\r\n                      <li> .setMaxConnTotal(50) </li>\r\n                      <li> .setMaxConnPerRoute(20).build(); </li>\r\n                    </li>\r\n                    <li> factory.setHttpClient(httpClient); </li>\r\n                    <li> RestTemplate restTemplate = new RestTemplate(factory); </li>\r\n                    <li> return restTemplate; </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 GET - 자바 객체 반환 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 카카오 로그인 API 토큰 받기 </h3>\r\n                <div className='block4'>\r\n                  <li> String url = \"http://kauth.kakao.com/oauth/token\"; </li>\r\n                  <li> RestTemplate restTemplate = new RestTemplate(); </li>\r\n                  <li> // 헤더 설정 </li>\r\n                  <li> HttpHeaders headers = new HttpHeaders(); </li>\r\n                  <li> 1️⃣ headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED); </li>\r\n                  <li> 2️⃣ headers.add(\"Content-type\",\"application/x-www-form-urlencoded;charset=utf-8\"); </li>\r\n                  <li>  </li> <br />\r\n                  <li> //파라미터 설정 </li>\r\n                  <li>MultiValueMap{\"<String,String>\"} params = new LinkedMultiValueMap{\"<>\"}(); </li>\r\n                  <li>params.add(\"client_id\",\"카카오 REST API 키\"); </li>\r\n                  <li>params.add(\"grant_type\",\"authorization_code\"); </li>\r\n                  <li>params.add(\"redirect_uri\",\"http://localhost:3000/StoreReview-Frontend/homepage\");  </li>\r\n                  <li>params.add(\"code\",code(받아온인증코드)); </li>\r\n                  <li>  </li> <br />\r\n                  <li>\r\n                    <div className=\"block4\">\r\n                      <li> // 헤더와 body를 가진 httpEntity 생성  </li>\r\n                      <li> {\"HttpEntity<MultiValueMap<String,String>> kakaoRequest = new HttpEntity<>(params,headers);\"} </li>\r\n                      <li> // 스프링에서 RestTemplate를 이용해서 http 통신  </li>\r\n                      <li>RestTemplate restTemplate = new RestTemplate();</li>\r\n                      <li>ResponseEntity{\"<String>\"} res = restTemplate.exchange(\r\n                        <li> \"https://kauth.kakao.com/oauth/token\", </li>\r\n                        <li> HttpMethod.POST, </li>\r\n                        <li> kakaoRequest, </li>\r\n                        <li> String.class </li>\r\n                      </li>\r\n                      <li> ); </li>\r\n                    </div>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> URLConnection - HTTP 통신(미정리) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> HttpClient - HTTP 통신(미정리) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpringCommunication;\r\n\r\n","import React from 'react';\r\n\r\nconst SpringConverter = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> HttpMessageConverter(정리 중) </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 자바 객체를 요청과 응답 body로 변환할 때 사용 </li>\r\n                        <li> HttpMessage에서 Content-type을 명시하면 body타입 설정 </li>\r\n                        <li> 왠만하면 자동으로 등록되게 해준다. </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                        <li> 장점 : </li>\r\n                        <li> 단점 : </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpringConverter;","import React from 'react';\r\n\r\nconst SpringException = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 예외 처리 설명 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 모든 예외의 부모는 Exception이다. </li>\r\n                        <li> Exception은 Throwable을 상속한다. </li>\r\n                        <li> e.printStackTrace(); 메소드는 예외가 발생했을때 어디에서 발생했는지 알려준다. 기본적으로 작동 </li>\r\n\r\n                        <h2 className='h2'> 📌 예외가 발생하는 부분 </h2>\r\n                        <li> 1. Dispatcher Servlet 전 Filter에서 발생하는 예외 </li>\r\n                        <li> 2. Controller, Service, Repository 에서 발생하는 예외 - HandlerExceptionResolver를 이용\r\n                            <div className=\"block4\">\r\n                                <li> 스프링 컨트롤러 - @ExceptionHandler\r\n                                    <div className=\"block4\">\r\n                                        <li> {'     @ExceptionHandler(value = TestException.class) '} </li>\r\n                                        <li> {'     public String controllerExceptionHandler(Exception e) { '}\r\n                                            <li> {'         logger.error(e.getMessage()); '} </li>\r\n                                            <li> {'         return \"/error/404\"; '} </li>\r\n                                        </li>\r\n                                        <li> {'     } '} </li>\r\n                                    </div>\r\n                                </li>\r\n                                <li> 스프링 컨트롤러 - @RestControllerAdvice, @ControllerAdvice\r\n                                    <div className=\"block4\">\r\n                                        <li> 커스텀 Handler를 만들어서 사용 </li>\r\n                                    </div>\r\n                                </li>\r\n                                <li> 전역 처리 - @ControllerAdvice </li>\r\n                                <li> 메서드 단위 - try/catch </li>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> try-catch-throw (미정리) </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <div className='block4'>\r\n                                <li> try {\"{\"}\r\n                                    <li> 코드작성 </li>\r\n                                </li>\r\n                                <li> {\"} catch(Exception e) {\"}\r\n                                    <li> 내용 </li>\r\n                                </li>\r\n                                <li> {\"}finally{\"}\r\n                                    <li> 예외와 상관없이 무조건 실행 </li>\r\n                                </li>\r\n                                <li> {\"}\"} </li>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> throw </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 예외처리를 다른곳에서 처리하겠다는 의미 </li>\r\n\r\n                        <h2 className='h2'> 📌 강제로 예외발생시키기 </h2>\r\n                        <li> throw new 예외종류();  </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 사용예시 </h3>\r\n                                <div className='block4'>\r\n                                    <li> public void 메소드() throws 예외종류 {\"{\"}\r\n                                        <li> 코드 작성 </li>\r\n                                    </li>\r\n                                    <li> {\"}\"} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 예외 종류 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> ArithmeticException : 수학적인 문제 </li>\r\n                        <li> SignatureException : 받아온 서명 메시지에 문제가 있을경우 에러  </li>\r\n                        <li>  </li>\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> @ExceptionHandler </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> @Controller, @RestController에서 1개의 예외처리가능 </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li>  </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <div className='block4'>\r\n                                <li> @ExceptionHandler(예외.class) </li>\r\n                                <li> 메소드 </li>\r\n                                <li>  </li>\r\n                            </div>\r\n                        </li>\r\n\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> @ControllerAdvice </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li>  </li>\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> @RestControllerAdvice </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li>  </li>\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            {/* 끝 */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpringException;","import React from 'react';\r\n\r\nconst SpringTestCode = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 설명 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 통합 테스트 : 한번에 테스트를 진행해서 오래걸린다. </li>\r\n            <li> 단위 테스트 : 부분적으로 테스트 코드를 작동한다.\r\n              <div className=\"block4\">\r\n                <li> Fast : 빨라야 한다. </li>\r\n                <li> Independent : 독립적이어야 한다. </li>\r\n                <li> Repeatable : 같은 결과를 내야 한다. </li>\r\n                <li> Self-Validating : 테스트만으로 결과를 볼 수 있어야 한다. </li>\r\n                <li> Timely : 코드가 완성되기전에 테스트가 되야한다. </li>\r\n              </div>\r\n            </li>\r\n            <h2 className='h2'> 📌 테스트 코드 단축키 </h2>\r\n            <div className=\"block4\">\r\n              <li> 클래스명 위에 마우스 놓고 Alt + Enter </li>\r\n              <li> 테스트 메소드 생성? 테스트 코드에서 alt + insert </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 Live Templates를 이용하여 미리 코드 만들어놓기 </h2>\r\n            <div className=\"block4\">\r\n              <li> Ctrl+Alt+S - Editor - Live Templates - 우측상단 + 클릭, 자바공간에 넣어주어야한다. 아래보면 Change에서 자바클릭 그리고 위에 체크박스는\r\n                자바 안으로 드래그해서 옮기기 </li>\r\n              <div className=\"block3\">\r\n                <li> @Test </li>\r\n                <li> public void name() throws Exception {\"{\"}\r\n                  <li>     //given, 테스트코드에서 주어지는 값들 </li>\r\n                  <li>     //when, 값을 통해 조건을 주는 부분 </li>\r\n                  <li>     //then, 테스트를 하는 부분 </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n            </div>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 테스트 코드 작성 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 테스트코드에서는 순서를 보장하지 않아서 Clear를 해줘야 한다.\r\n              <div className=\"block4\">\r\n                <li> @AfterEach </li>\r\n                <li> public void afterEach() {\"{\"}\r\n                  <li> 이곳에 객체들이 저장되었으면 값을 비워주거나 하는 코드를 작성을 해야한다. </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n            </li>\r\n            <li> 메소드 위에 @Test를 붙인다. </li>\r\n            <li> Assertions.assertEquals(A,B) <small> A,B가 같으면 검증완료 </small> </li>\r\n            <li> Assertions.assertThat(A).isEqualTo(B) <small> A,B가 같으면 검증완료 </small> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 테스트 관련 어노테이션 1 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 @Test </h2>\r\n            <li> 테스트를 표현 </li>\r\n\r\n            <h2 className='h2'> 📌 @Before(Junit4) @BeforeEach(Junit5) </h2>\r\n            <li> 모든 메소드 시작전에 실행되야 하는 메소드 </li>\r\n\r\n            <h2 className='h2'> 📌 @After(Junit4) @AfterEach(Junit5) </h2>\r\n            <li> 모든 메소드 시작후에 실행되야 하는 메소드 </li>\r\n\r\n            <h2 className='h2'> 📌 @BeforeClass(Junit4) @BeforeAll(Junit5) </h2>\r\n            <li> 테스트 시작전에 실행되야 하는 메소드(static 처리) </li>\r\n\r\n            <h2 className='h2'> 📌 @AfterClass(Junit4) @AfterAll(Junit5) </h2>\r\n            <li> 테스트 시작후에 실행되야 하는 메소드(static 처리) </li>\r\n\r\n            <h2 className='h2'> 📌 @DisplayName , @DisplayNameGeneration </h2>\r\n            <li> @DisplayName(\"설명\") : 테스트코드의 이름을 설정 </li>\r\n            <li> @DisplayNameGeneration :  </li>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 테스트 관련 어노테이션 2 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 @SpringBootTest </h2>\r\n            <li> Test Application Context를 생성 </li>\r\n            <li> 어플리케이션의 모든 빈을 Ioc Container에 등록해서 느려짐 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 @RunWith(Junit4) @ExtendWith(Junit5) </h2>\r\n            <li> JUnit4에 @RunWith(MockitoJUnitRunner.class)가 JUnit5에서는 @ExtendWith(MockitoExtension.class)로 사용되고 있음 </li>\r\n            <li> Mock과 JUnit을 같이 사용할 때 사용된다. </li>\r\n\r\n            <h2 className='h2'> 📌 @WebMvcTest </h2>\r\n            <li> Controller와 관련된 빈들이 로드된다. </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 @Autowired about Mockbean </h2>\r\n            <li> API 테스트하는 용도인 MockMvc를 주입받아서 사용가능 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 @MockBean </h2>\r\n            <li> 테스트 클래스에서 주입받는 가짜 객체를 생성해줌  </li>\r\n            <li> 가짜 객체는 실제 작동하지 않음 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 @AutoConfigureMockMvc </h2>\r\n            <li> MockMvc의 의존성을 자동으로 주입해준다 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 @Import </h2>\r\n            <li> 클래스들을 Configuration으로 만들어줄수 있다. </li>\r\n\r\n            <h2 className='h2'> 📌 @TestMethodOrder</h2>\r\n            <li> Order를 붙여서 사용할 때 선언 </li>\r\n            <li> @TestMethodOrder(MethodOrderer.MethodName.class) : 메소드명으로 오름차순 </li>\r\n            <li> @TestMethodOrder(MethodOrderer.DisplayName.class) : DisplayName으로 오름차순 </li>\r\n            <li> @TestMethodOrder(MethodOrderer.OrderAnnotation.class) : Order으로 오름차순 </li>\r\n            <li> @TestMethodOrder(MethodOrderer.Random.class) : 랜덤으로 순서 </li>\r\n            <li> implements MethodOrderer을 해서 커스텀클래스를 만들고 사용할 수도 있다. </li>\r\n            <li> @TestMethodOrder(커스텀클래스명.class) : 커스텀한 방식대로 작동 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 @Order(숫자) </h2>\r\n            <li> 메소드 위에 선언 </li>\r\n\r\n            <h2 className='h2'> 📌 @AutoConfigureTestDatabase </h2>\r\n            <li> 진짜 데이터베이스를 이용해서 테스트 </li>\r\n\r\n\r\n            <h2 className='h2'> 📌 @Ignore(Junit4) @Disabled(Junit5) </h2>\r\n            <li> 실행되지 않아야 되는 메소드에 사용 </li>\r\n            <li> @EnableJUnit4MigrationSupport ????? </li>\r\n\r\n            <h2 className='h2'> 📌 @ </h2>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> assert 함수 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 assertEquals </h2>\r\n            <div className='block4'>\r\n              <li> assertEquals(A,B,ErrorMsg) : A와 B가 일치하는지 알려주는 메소드 </li>\r\n              <li> assertEquals(A,B,{\" new Supplier<String>() \"}) : A와 B가 일치하는지 알려주는 메소드 </li>\r\n              <li> assertEquals(A,B,{\" ()->'ErrorMsg' \"}) : A와 B가 일치하는지 알려주는 메소드 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 assertNotNull </h2>\r\n            <div className='block4'>\r\n              <li> 값이 null인지 확인 </li>\r\n              <li> assertNotNull(A) </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 assertTrue </h2>\r\n            <div className='block4'>\r\n              <li> 조건이 참인지 아닌지 확인 </li>\r\n              <li> assertTrue(조건) : 조건이 맞는지 확인 </li>\r\n              <li> assertTrue(조건,\"\") : 조건이 맞는지 확인 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 assertAll </h2>\r\n            <div className='block4'>\r\n              <li> assertAll( <small> 오류가 나도 assert함수 여러개 사용가능 </small>\r\n                <li> {\" ()-> assert함수, \"} </li>\r\n                <li> {\" ()-> assert함수 \"} </li>\r\n              </li>\r\n              <li> ) </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 assertThrows() </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 assertTimeout() </h2>\r\n            <div className='block4'>\r\n              <li> 특정 시간에 처리가 완료되는지 확인 </li>\r\n              <li> assertTimeout(Duration.ofMillis(100), {\" ()->{}; \"}) </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 assertThat() </h2>\r\n            <div className='block4'>\r\n              <li> AssertJ에서 사용 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 특정환경에서만 테스트 가능하게 해주는 메소드,어노테이션 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 assumeTrue </h2>\r\n            <div className='block4'>\r\n              <li> 특정 환경에서만 테스트를 실행 가능하게 해준다. </li>\r\n              <li> assumeTrue(\"LOCAL\".equalsIgnoreCase(A)) <small>  </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌assumingThat   </h2>\r\n            <div className='block4'>\r\n              <li> assumingThat(\"LOCAL\".equalsIgnoreCase(A)) <small>  </small> </li>\r\n              <li> assumingThat(\"TEST\".equalsIgnoreCase(A)) <small>  </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 @EnabledIfEnvironmentVariable </h2>\r\n            <div className='block4'>\r\n              <li> 특정 환경에서만 테스트 가능 </li>\r\n              <li> @EnabledIfEnvironmentVariable(named = \"\", matches = \"local\") </li>\r\n              <li> @EnabledIfEnvironmentVariable(named = \"\", matches = \"test\") </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 @EnabledOnOs, @EnabledOnJre </h2>\r\n            <div className='block4'>\r\n              <li> 운영체제나 버전에 따라서 테스트를 다르게 해줄 수 있다. </li>\r\n              <li> {\" @EnabledOnOs({OS.MAC, OS.LINUX}) \"} </li>\r\n              <li> {\" @EnabledOnJre({JRE.JAVA_8, JRE.JAVA_9, JRE.JAVA_10}) \"} </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 특정 그룹만 선택해서 테스트 진행하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 @Category(Junit4) @Tag(Junit5) </h2>\r\n            <div className='block4'>\r\n              <li> 메소드에 선언, 여러개의 태그 선언 가능 </li>\r\n              <li> @Tag(\"\") </li>\r\n              <li> Run - Edit configuration에서 Test Kind를 Tag로 변경해서 사용하면된다는데 나중에 다시 알아보기 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 관련 (정리x) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> @DataJpaTest </li>\r\n              <li> @Mock </li>\r\n              <li> @InjectMocks </li>\r\n              <li> @Transactional </li>\r\n              <li> @Rollback </li>\r\n              <li> @MockBean </li>\r\n              <li> Assertions.assertThat </li>\r\n              <li> assertThat </li>\r\n              <li> MockMvc </li>\r\n              <li> @ParameterizedTest </li>\r\n              <li> @RepeatedTest </li>\r\n              <li> @TestFactory </li>\r\n              <li> @Retention </li>\r\n              <div className=\"block3\">\r\n                <li> 언제까지 살아있을지를 정하는 어노테이션 </li>\r\n                <li> @Retention(RetentionPolicy.SOURCE) : 소스 코드까지 생존(컴파일 전) </li>\r\n                <li> @Retention(RetentionPolicy.CLASS) : 클래스 파일까지 생존 </li>\r\n                <li> @Retention(RetentionPolicy.RUNTIME) : 런타임까지 생존 </li>\r\n              </div>\r\n              <li> {\" @RepeatedTest(value = 10, name = 'displayName}, {currentRepetitions}/{totalRepetitions}' ) \"} </li>\r\n              <li> @ParameterizedTest </li>\r\n              <li> @ValueSource, @NullSource, @EmptySource, @NullAndEmptySource </li>\r\n              <li> @EnumSource, @MethodSource, @CsvSource, @CsvFileSource, @ArgumentSource </li>\r\n              <li> @ConverWith, @AggregateWith </li>\r\n              <li> @IndicativeSentencesGeneration, @Nested </li>\r\n              <li> @FastTest, @SlowTest </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Mockito </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 가짜 객체를 지원, 사용할 필요가 없다면 사용하지 않는 것을 추천 </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 어노테이션 </h2>\r\n            <div className='block4'>\r\n              <li> @Mock : Mock 객체를 반환 </li>\r\n              <li> @Spy : 실제 메소드로 동작되는 어노테이션 </li>\r\n              <li> @InjectMocks : @Mock와 @Spy로 만들어진 가짜 객체를 자동으로 주입해준다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Mock 객체 반환 </h2>\r\n            <div className='block4'>\r\n              <li> doReturn() : Mock 객체가 특정 값을 반환할 때 </li>\r\n              <li> doNothing() : Mock 객체가 아무것도 반환하지 않을 때 </li>\r\n              <li> doThrow() : Mock 객체가 예외를 발생시킬 때 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JUnit5 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 의존성 추가 </h2>\r\n            <div className='block4'>\r\n              <li> testRuntimeOnly(\"org.junit.platform:junit-platform-launcher:1.7.0\") </li>\r\n              <li> testImplementation('org.junit.jupiter:junit-jupiter:5.7.0') </li>\r\n              <li> testRuntimeOnly(\"org.junit.vintage:junit-vintage-engine:5.7.0\") </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> @ExtendWith를 사용하여 Mock과 같이 사용된다. </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <div className='block4'>\r\n              <li> 장점 : </li>\r\n              <li> 단점 : </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpringTestCode;","import React from 'react';\r\n\r\nconst SpringSecurityExCode1 = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"Spring Security ExCode1\">  Spring Security ExCode1 </a> </span>\r\n          <p> <small> 스프링 시큐리티 loginform 기능만 테스트하는 예제 </small> </p>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"spring initializr\"> spring initializr</a>  </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/SpringSecurityStart.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"WebSecurityConfig\"> WebSecurityConfig </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/WebSecurityConfig.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"UserController\"> UserController </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/UserController.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"><a name=\"login\"> login </a>  </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/login.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"loginsuccess\"> loginsuccess </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/loginsuccess.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"application.properties\"> application.properties </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/application.properties.png'} alt='' /> </p>\r\n          </span>\r\n        </span>\r\n        <span className=\"lblock\">\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"view.login\"> view.login </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/view.login.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"view.loginsuccess\"> view.loginsuccess </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode1/view.loginsuccess.png'} alt='' /> </p>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default SpringSecurityExCode1;\r\n\r\n","import React from 'react';\r\n\r\nconst SpringSecurityExCode2 = (props) => {\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"Spring Security ExCode1\">  Spring Security ExCode2 </a> </span>\r\n          <p> <small> 스프링 시큐리티 기능보다는 mysql에 데이터를 저장하고 로그인을 해보는 테스트 그리고 thymeleaf로 화면에 간단한 유저 정보 보여주기 </small> </p>\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> spring initializr\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/SpringSecurityStart.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> WebSecurityConfig\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/WebSecurityConfig.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> UserMvcConfig\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserMvcConfig.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> UserController\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserController.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> UserEntity\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserEntity.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> UserDto\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserDto.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> UserRepository\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/UserRepository.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> index\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/index.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> login\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/login.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> main\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/main.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> signup\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/signup.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> application.yml\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/application.yml.png'} alt='' /> </p>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n        </span>\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> 결과 </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"view.login\"> view.login </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/view.login.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"view.signup\"> view.signup </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/view.signup.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"dosignup\"> dosignup </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/dosignup.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"mysql\"> mysql </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/mysql.png'} alt='' /> </p>\r\n          </span>\r\n          <span className=\"mblock\">\r\n            <span className=\"stitle\"> <a name=\"dologin\"> dologin </a> </span>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode2/dologin.png'} alt='' /> </p>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default SpringSecurityExCode2;\r\n\r\n","import React from 'react';\r\n\r\nconst SpringSecurityExCode3 = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\" >\r\n        <ul>\r\n          <span className=\"lblock\">\r\n            <span className=\"mtitle\"> Spring Security Excode3 </span>\r\n            <small> JPA를 이용한 회원가입 , DB의 정보를 가지고 로그인을 해보고 인증과 권한 유무에 따라 특정 URL에 접속이 가능한지 불가능한지 테스트 하는 예제</small>\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> spring initializr\r\n                  <a name='spring initializr' style={{ visibility: 'hidden' }}> spring initializr </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/SpringSecurityStart.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> directory\r\n                  <a name='directory' style={{ visibility: 'hidden' }}> directory </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/directory.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> application.yml\r\n                  <a name='application.yml' style={{ visibility: 'hidden' }}> application.yml </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/application.yml.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> CustomUserDetails\r\n                  <a name='CustomUserDetails' style={{ visibility: 'hidden' }}> CustomUserDetails </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/CustomUserDetails.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> CustomUserDetailsService\r\n                  <a name='CustomUserDetailsService' style={{ visibility: 'hidden' }}> CustomUserDetailsService </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/CustomUserDetailsService.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> CustomWebMvcConfig\r\n                  <a name='CustomWebMvcConfig' style={{ visibility: 'hidden' }}> CustomWebMvcConfig </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/CustomWebMvcConfig.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> CustomWebSecurityConfig\r\n                  <a name='CustomWebSecurityConfig' style={{ visibility: 'hidden' }}> CustomWebSecurityConfig </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/CustomWebSecurityConfig.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> UserController\r\n                  <a name='UserController' style={{ visibility: 'hidden' }}> UserController </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/UserController.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> User\r\n                  <a name='User' style={{ visibility: 'hidden' }}> User </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/User.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> UserRepository\r\n                  <a name='UserRepository' style={{ visibility: 'hidden' }}> UserRepository </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/UserRepository.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> admin.html\r\n                  <a name='admin.html' style={{ visibility: 'hidden' }}> admin.html </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/admin.html.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> index.html\r\n                  <a name='index.html' style={{ visibility: 'hidden' }}> index.html </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/index.html.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> joinForm.html\r\n                  <a name='joinForm.html' style={{ visibility: 'hidden' }}> joinForm.html </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/joinForm.html.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> loginForm.html\r\n                  <a name='loginForm.html' style={{ visibility: 'hidden' }}> loginForm.html </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/loginForm.html.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> member.html\r\n                  <a name='member.html' style={{ visibility: 'hidden' }}> member.html </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/member.html.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> user.html\r\n                  <a name='user.html' style={{ visibility: 'hidden' }}> user.html </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/user.html.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> result\r\n                  <a name='result' style={{ visibility: 'hidden' }}> result </a> </summary>\r\n                <div className='sblock'>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/result1.png'} alt='' />\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/result2.png'} alt='' />\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/result3.png'} alt='' />\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/result4.png'} alt='' />\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n            {/* <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                            <img alt=\"\" src={process.env.PUBLIC_URL + '/img/SpringSecurityStudy/SpringSecurityExCode3/.png'} alt='' />\r\n                        </span> */}\r\n            {/*  */}\r\n          </span>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default SpringSecurityExCode3;","import React from 'react';\r\n\r\nconst SpringBasicEx1 = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 스프링 기본 세팅 예제 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <div className='block4'>\r\n              <li> 장점 : </li>\r\n              <li> 단점 : </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpringBasicEx1;","import React from 'react';\r\n\r\nconst JspServletBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <div className='lblock'>\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> JSP 탄생원리\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li> servlet으로 html을 표현하기 불편하여 탄생 # 비즈니스와 프레젠테이션 로직이 분리되지 않는 불편함 </li>\r\n                                    <li> servlet을 컴파일을 매번 해야되는 과정이 있었는데 사라짐 </li>\r\n                                    <li> 초기에는 비즈니스로직과 프레젠테이션 로직 분리가 어려움 </li>\r\n                                    <li> MVC 패턴 탄생해서 해결 </li>\r\n                                    <li> 더 나아가 AJAX,JS 등 여러 스크립트 기술이 등잘 </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> Servlet\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> Servlet API </div>\r\n                                <div className='mblock'>\r\n                                    <li> 모든 Servlet은 javax.servelt.Servlet 인터페이스를 구현해서 사용한다. </li>\r\n                                    <li> 대체적으로 HttpServlet 클래스를 상속해서 사용한다. # GenericServlet도 있음 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> Get,Post </div>\r\n                                <div className='mblock'>\r\n                                    <li> request.getParameter를 이용해서 get,post 파라미터를 받아온다 </li>\r\n                                    <li> GET,POST를 구분할 필요가 없으면 각각요청을 처리하는 방법의 코딩이 있다.  </li>\r\n                                    <li> GET는 공개되도 상관없는 정보, 페이지수,이미지 등등 , 최대 240byte  </li>\r\n                                    <li> POST는 사용자로부터 받는 정보로 보안이 필요한 정보 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> Jsp-Servlet 변환 과정\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li> JSP 파일 </li>\r\n                                    <li> 변환 </li>\r\n                                    <li> Java 파일 </li>\r\n                                    <li> 컴파일 </li>\r\n                                    <li> 클래스(servlet) 파일 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> Servlet 동작 과정\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 동작과정과 생명주기 </div>\r\n                                <div className='mblock'>\r\n                                    <li> init() : Servlet객체가 메모리에 처음 로드될 때 1번만 실행 # 처음생성 혹은 수정될 때\r\n                                        <li> Servlet 인스턴스 생성 </li>\r\n                                    </li>\r\n                                    <li> service() : Servlet객체가 요청될 때 마다 호출되는 메소드\r\n                                        <li> 인스턴스가 스레드 doGet(), doPost() 메소드 호출 </li>\r\n                                    </li>\r\n                                    <li> destroy() : Servlet객체가 소멸될 때 호출되는 메소드 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> Servlet 장단점\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 장점 </div>\r\n                                <div className='mblock'>\r\n                                    <li> Java API를 사용할 수 있음 </li>\r\n                                    <li> 쓰레드 기반 </li>\r\n                                    <li> 디자인 패턴을 이용한 프레젠테이션 로직과 비즈니스 로직이 분리 가능 </li>\r\n                                    <li> 로직의 분리로 프론트와 백엔드의 업무 분담이 좋아짐 </li>\r\n                                    <li> 기능확장과 유지보수가 좋아졌다. </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> 단점 </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> 클라이언트가 서버에 JSP 요청시 변환 과정\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li> 클라이언트가 서버에 JSP파일 요청 </li>\r\n                                    <li> Jsp - java - class 파일 변환 </li>\r\n                                    <li> class 파일 전송 </li>\r\n                                    <li> 만약 서버에서 JSP 수정 후 클라이언트가 JSP파일 요청하면 </li>\r\n                                    <li> 서버에서 기존 Class 파일과 수정한 Jsp파일의 시간을 비교하여 더 최신것을 기준으로\r\n                                        파일을 보냄 </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> 웹 어플리케이션 폴더 구조\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> src </div>\r\n                                <div className='mblock'>\r\n                                    <li> controller, model\r\n                                        <li> java,dao,service,vo,dto </li>\r\n                                    </li>\r\n                                    <li> common\r\n                                        <li> template </li>\r\n                                    </li>\r\n                                    <li> config\r\n                                        <li> properties </li>\r\n                                    </li>\r\n                                </div>\r\n                                <div className='sstitle'> webapps </div>\r\n                                <div className='mblock'>\r\n                                    <li> meta-inf\r\n                                        <li> context.xml </li>\r\n                                    </li>\r\n                                    <li> resources\r\n                                        <li> css,images,js </li>\r\n                                    </li>\r\n                                    <li> views\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> web-inf # 클라이언트는 접근 불가\r\n                                        <li> classes # servlet,java beans 등 여러클래스가 위치한 폴더 </li>\r\n                                        <li> lib # jar,jdbc등 파일이 위치하는 공간 </li>\r\n                                        <li> tld # 태그라이브러리 </li>\r\n                                        <li> web.xml # 설정,servlet정의,맵핑,파라미터 설정 등등 하는 공간 </li>\r\n                                    </li>\r\n                                    <li> index.jsp </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'>\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> Sevlet web.xml 설정\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> URL 맵핑을 하여 Servlet 클래스 실행 </div>\r\n                                <div className='mblock'>\r\n                                    <li> {'<servlet>'}\r\n                                        <li> {'<servlet-name>'} Servlet 이름(아래것과일치) {'</servlet-name>'}   </li>\r\n                                        <li> {'<servlet-class>'} 클래스 이름 {'</servlet-class>'} </li>\r\n                                    </li>\r\n                                    <li> {'</servlet>'} </li> <br />\r\n                                    <li> {'<servlet-mapping>'}\r\n                                        <li> {'<servlet-name>'} Servlet 이름(위의것과일치) {'</servlet-name>'}   </li>\r\n                                        <li> {'<url-pattern>'} /URL경로 {'</url-pattern>'} </li>\r\n                                    </li>\r\n                                    <li> {'</servlet-mapping>'} </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                </div>\r\n            </div>\r\n            {/*<span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSP커스텀태그\"> JSP 커스텀태그 </a> </span>\r\n                <a href=\"https://gangzzang.tistory.com/entry/JSP-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%83%9C%EA%B7%B8Custom-Tag\" target=\"_blank\"> 참고사이트</a>\r\n                <p> 1. WEB-INF - tags 폴더 - 태그파일명.tag파일 </p>\r\n                <p> 2. .tag에서 커스텀태그 정의 </p>\r\n                <span className=\"mblock\">\r\n                    <p> <i> &lt;%@tag language=\"java\" pageEncoding=\"UTF-8\" body-content=\"empty\"%&gt;</i> : 태그 파일의 정보 명시</p>\r\n                    <span className=\"sblock\">\r\n                        <p> <i> body-content = </i>  empty: 몸체가 없음 , scriptless: (스트립틀릿,스크립팅,선언문)은 올수없음, tagdependent: 태그를 몸체로 사용\r\n                            ,JSP: JSP에 들어가는 내용이면 모두 가능\r\n                        </p>\r\n                    </span>\r\n                    <p> <i> &lt;%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%&gt; </i>\r\n                        :  태그파일에서 사용할 태그라이브러리 명시</p>\r\n                    <p> <i> &lt;%@ tag import =\"java.util.Arraylist\" %&gt;</i> : 자바 클래스 임포트 </p>\r\n                    <p> <i> &lt;%@ attribute name=\"매개변수\"%&gt;</i> : JSP에서 매개변수로 받아와 {\"${매개변수}\"}와 같이 사용 </p>\r\n                    <p> 나머지는 HTML 코드 작성 </p>\r\n                </span>\r\n                <p> 3. JSP에서 커스텀태그 사용 </p>\r\n                <span className=\"mblock\">\r\n                    <p> &lt;%@ prefix=\"사용할커스텀태그이름 taglib tagdir=\"/WEB-INF/tags\"\"%&gt; </p>\r\n                    <p> &lt;사용할커스텀태그이름:태그파일명 매개변수=\"값\"/&gt; </p>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSP커스텀태그2 tld방식\">JSP커스텀태그2 tld방식 </a> </span>\r\n                <p> 1. WEB-INF - tld 폴더 - 태그파일명.tld파일 </p>\r\n                <p> 2. .tld에서 커스텀태그 참고 </p>\r\n                <span className=\"mblock\">\r\n                    <p> {\"<taglib>\"} </p>\r\n                    <p> {\"<tag>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<name>student</name>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<tag-class>패키지.TagHandler클래스</tag-class>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<body-content>scriptless</body-content>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"<attribute>\"} </p>\r\n                    <p> &nbsp;&nbsp;&nbsp;&nbsp;{\"<name>border</name>\"} </p>\r\n                    <p> &nbsp;&nbsp;&nbsp;&nbsp;{\"<required>true</required>\"} </p>\r\n                    <p> &nbsp;&nbsp;{\"</attribute>\"} </p>\r\n                    <p> {\"</tag>\"} </p>\r\n                    <p> {\"/taglib\"} </p>\r\n                </span>\r\n                <p> 3. jsp에서 커스텀태그 사용 </p>\r\n                <span className=\"mblock\">\r\n                    <p> <i> &lt;taglib uri=\"/WEB-INF/tld/stutag.tld\" prefix=\"mytag\"%&gt; </i>\r\n                        :  태그파일에서 사용할 태그라이브러리 명시</p>\r\n                    <p> <i> &lt;mytag:student border=\"10\"&gt;학생 목록&lt;/mytag:student&gt;</i> : 자바 클래스 임포트 </p>\r\n                </span>\r\n                <p> 4. .java 정의 </p>\r\n                <p> 파일명은 TagHandler 처럼 사용하는 것 같다</p>\r\n                <span className=\"mblock\">\r\n                    <p> SimpleTagSupport 클래스 상속</p>\r\n                    <p> public void doTag()에 정의하고 사용</p>\r\n                    <p> 추가 사용방법은 나중에 인터넷 참고 </p>\r\n                </span>\r\n            </span>*/}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JspServletBasic;","import React from 'react';\r\n\r\nconst JspServletBulletinBoard = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"lblock\">\r\n        <span className=\"mtitle\"> <a name=\"서블릿 실행하기\"> 1. MVC2 모델 설계 </a> </span>\r\n        <p> 게시판을 만들기 위하여 설계를 먼저 대략하고 진행 </p>\r\n        <span className=\"mblock\">\r\n          {/* <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/Servlet.png'} /> </p> */}\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JspServletBulletinBoard;","const JspServletJstl = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {/* <a href=\"https://gangzzang.tistory.com/entry/JSP-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%83%9C%EA%B7%B8Custom-Tag\" target=\"_blank\"> 참고사이트</a> */}\r\n            <span className=\"lblock\">\r\n                <p> <a href=\"https://velog.io/@ye050425/JSP-JSTL-%EC%A0%95%EB%A6%AC\" target=\"_blank\">참고사이트</a> </p>\r\n                <p> JSTL: 커스텀태그 기술을 이용해서 일반적으로 많이 사용되는 기능들을 표준화한것 </p>\r\n                <p> 접근 가능한 내장 객체 4종류 : application,session,request,page </p>\r\n                <span className=\"mtitle\"> <a name=\"JSTL core tag\">  1. JSTL core tag </a> </span>\r\n                <p> &lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt; </p>\r\n                <p> 변수지원, URL관리, 흐름 제어 등</p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:out\">  1. JSTL c:out </a> </span>\r\n                    <p> HTML 화면에 출력 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:out value=\"${\"{\"}출력할 내용{\"}\"}\" &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:if\">  2. JSTL c:if </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:if test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &lt; /c:if &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:choose,when,otherwise\">  3. JSTL c:choose,when,otherwise </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:choose &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:when test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:when &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:when test=\"${\"{\"}조건식{\"}\"}\" &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:when &gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; c:otherwise&gt;</p>\r\n                        <p> &nbsp;&nbsp;&lt; /c:otherwise &gt;</p>\r\n                        <p> &lt; /c:choose &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:foreach\">  4. JSTL c:foreach </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forEach var=\"i\" begin=\"1\" end=\"2\" step=\"1\" &gt;</p>\r\n                        <p> &lt; /c:forEach&gt;</p>\r\n                    </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forEach var=\"i\" items=\"${\"키\"}\" &gt;</p>\r\n                        <p> &lt; /c:forEach&gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:param\">  5. JSTL c:param </a> </span>\r\n                    <p> URL 매개변수를 추가 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:url value=\"/경로\" var=\"URL경로값(get방식으로출력)\" &gt;</p>\r\n                        <p> &lt; c:param name=\"키\" value=\"값\" / &gt;</p>\r\n                        <p> &lt; c:param name=\"키\" value=\"값\" / &gt;</p>\r\n                        <p> &lt; /c:url  &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:set\">  6. JSTL c:set </a> </span>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:set var=\"키\" scope=\"session\" value=\"${\"{\"}값{\"}\"}\" /&gt;</p>\r\n                        <p> &lt; c:out value=\"${\"{\"}키{\"}\"}\" /&gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:import\">  7. JSTL c:import </a> </span>\r\n                    <p> jsp에 inlcude와 비슷 </p>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:forTokens\">  8. JSTL c:forTokens </a> </span>\r\n                    <p> 문자열을 토큰으로 분리하여 사용, foreach와 비슷 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:forTokens items=\"문자열\" delims=\"구분문자\" var=\"키\"  &gt;</p>\r\n                        <p> &lt; /c:forTokens &gt;</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:catch\">  9. JSTL c:catch </a> </span>\r\n                    <p> 에러가 발생할 경우 예외처리 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:catch var=\"키\" &gt;</p>\r\n                        <p> &lt; /c:catch  &gt;</p>\r\n                        <p> c:if test=\"${\"{\"} 예외키 != null {\"}\"}\"</p>\r\n                    </span>\r\n                    <span className=\"stitle\"> <a name=\"JSTL c:redirect\">  10. JSTL c:redirect </a> </span>\r\n                    <p> 리다이렉트 처리 </p>\r\n                    <span className=\"sblock\">\r\n                        <p> &lt; c:redirect url=\"주소\" &gt;</p>\r\n                        <p> &lt; c:param name=\"\" &gt; 값 &lt; /c:param&gt; </p>\r\n                        <p> &lt; /c:redirect &gt;</p>\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL function tag\">  2. JSTL function tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL formatting tag \"> 3. JSTL formatting tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL XML tag \"> 4. JSTL XML tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            <span className=\"lblock\">\r\n                <span className=\"mtitle\"> <a name=\"JSTL SQL tag\"> 5. JSTL SQL tag </a> </span>\r\n                <p> </p>\r\n                <span className=\"mblock\">\r\n                    <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                    <span className=\"sblock\">\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JspServletJstl;","import React from 'react';\r\n\r\nconst Blank = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"\">  </a> </span>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"sblock\">\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </ >\r\n    );\r\n}\r\n\r\nexport default Blank;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst JspServletJdbc = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    <ul>\r\n                        <span className=\"mtitle\"> <a name=\"JDBC\">  JDBC </a> </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\"> JDBC 이클립스 초기 설정  </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <p>   1. jdbc 빌드 패스 추가 2.빨간줄 예외처리 </p>\r\n                                <li> String url = \"jdbc:oracle:thin:@localhost:1521/xepdb1\";</li>\r\n                                <li> String sql = \"SELECT * FROM MEMBER\";</li>\r\n                                <li> Class.forName(\"oracle.jdbc.driver.OracleDriver\"); //드라이버 클래스 호출</li>\r\n                                <li> Connection con = DriverManager.getConnection(url,\"TEST\",\"1234\"); //데이터 원본과 연결</li>\r\n                                <li> Statement st = con.createStatement(); /쿼리완성?, 질의문장을 담아 인자로 전달</li>\r\n                                <li> PreparedStatement st = con.prepareStatement(sql); //쿼리미완성? 위치값이 있을때? insert</li>\r\n                                <li> ResultSet cursor = st.executeQuery(sql); , st.Set자료형(콜럼,넣을값) , st.executeUpdate();</li>\r\n                                <li> //resultset은 그릇 , executeQuery : 래코드를 가리키는 커서</li>\r\n                                <li> //executeQuery는 selec에서 데이터타입 전달 , executeUpdate는 DML에서 int타입 전달 </li>\r\n                                <li> //오류가 날경우 SQL문법이 틀리거나, 패러미터 값이 틀리거나, 이클과SQL 인코딩 방식이 틀렸을때</li>\r\n                                <li> while(cursor.next()) {'String id = cursor.getString(“ID”);'}</li>\r\n                                <li> {'System.out.println(id);'}</li>\r\n                                <li> try-resouce문으로 처리하면 안적어도됨</li>\r\n                                <li> rs.close();</li>\r\n                                <li> st.close();</li>\r\n                                <li> con.close();</li>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"Connection Pool\"> Connection Pool </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> context.xml </span>\r\n                                <li>&lt;Context&gt;</li>\r\n                                <li>  &nbsp;&nbsp;&lt;Resource auth=\"Container\" type=\"javax.sql.DataSource\"</li>\r\n                                <li>  &nbsp;&nbsp;name=\"jdbc/orcl\"</li>\r\n                                <li>  &nbsp;&nbsp;url=\"jdbc:oracle:thin@localhost:1521:xe\"</li>\r\n                                <li>  &nbsp;&nbsp;usernamte=\"coin666\"</li>\r\n                                <li>  &nbsp;&nbsp;password=\"1234\"</li>\r\n                                <li>  &nbsp;&nbsp;maxActive=\"10\" maxIdle=\"5\"/&gt;</li>\r\n                                <li>&lt;/Context&gt;</li>\r\n                                <span className=\"sstitle\"> web.xml </span>\r\n                                <li>&lt;resource-ref&gt; </li>\r\n                                <li>&nbsp;&nbsp;&lt;ref-ref-name&gt;jdbc/orcl&lt;/res-ref-name&gt; </li>\r\n                                <li>&nbsp;&nbsp;&lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt; </li>\r\n                                <li>&nbsp;&nbsp;&lt;ref-auth&gt;Container&lt;/res-auth&gt; </li>\r\n                                <li>&lt;/resource-ref&gt;</li>\r\n                                {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n                            </span>\r\n                        </span>\r\n\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n\r\n                        {/* <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"\">   </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> </span>\r\n                            <span className=\"mblock\">\r\n\r\n                            </span>\r\n                        </span>\r\n                    </span> */}\r\n\r\n\r\n\r\n\r\n                    </ul>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default JspServletJdbc;\r\n","import React from 'react';\r\n\r\nconst JspServletInformation = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"Servlet이란\"> 1. Servlet이란</a> </span>\r\n          <p> 서블릿은 자바언어를 사용하여 클라이언트의 요청을 동적으로 처리하는 자바 클래스입니다. </p>\r\n          <p> 현재는 클라이언트의 요청을 받아 어떤 작업을 해야할지 관리해주는 Controller의 역할을 한다</p>\r\n          <p> CGI(Common GateWay Interface) 웹서버와 프로그램사이에서 주고 받는 방법, 구현된 언어와 체계가 다르기\r\n            때문에 맞추어주는 하나의 규약 , Servlet은 자바에서 사용되는 CGI이다 </p>\r\n          <p> 기존에 CGI는 멀티프로세스 방식으로 다수의 요청처리에 부하가 심하지만 Servlet은 멀티쓰레드\r\n            방식으로 부하가 덜하다.\r\n          </p>\r\n          <span className=\"mblock\">\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/Servlet.png'} /> </p>\r\n          </span>\r\n        </span>\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"Servlet Lifecycle\"> 2. Servlet Lifecycle</a> </span>\r\n          <p> 클라이언트가 요청을 하게 되면 서블릿의 생성에서 소멸되기 까지의 과정이다. </p>\r\n          <p> Init() , Service() , Destroy()  3가지의 메서드로 구성된다. </p>\r\n          <p> Init() : Servlet객체가 처음 생성될 때 실행된다 </p>\r\n          <p> Service() : 클라이언트가 Servlet을 요청할 때 마다 실행된다 </p>\r\n          <p> Destroy() : 서블릿객체가 소멸될 때는 더이상 사용하지 않을 때라고 되어있는데\r\n            서버가 종료되거나 기존에 있던 서블릿객체의 내용이 새로 갱신되었을 경우 </p>\r\n          <span className=\"mblock\">\r\n            <p> 1. 클라이언트 요청 </p>\r\n            <p> 2. 웹 컨테이너에서 클라이언트가 요청한 서블릿 객체가 있는지 확인 </p>\r\n            <p> 3. 없으면 서블릿 객체를 생성</p>\r\n            <p> 4. 서블릿 객체에 service()메소드를 실행 , 일반적으로 사용할 때는 HttpServlet클래스를\r\n              상속받기 때문에 요청된 방식에 따라 doGet(), doPost() 메소드로 사용한다\r\n            </p>\r\n            <p> 5. 그 다음 DAO,DB,JSP 등 다른 과정을 거치고 사용자에게 응답한다.</p>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/Servlet_Lifecycle.png'} /> </p>\r\n          </span>\r\n        </span>\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"Servlet 장점\"> 3. Servlet 장점 </a> </span>\r\n          <p> 1. 자바기반으로 Java API를 사용이 가능하다 </p>\r\n          <p> 2. 쓰레드를 이용하기 때문에 클라이언트의 요청에 대해 자원을 효율적으로 사용가능한다 </p>\r\n          <p> 다수의 클라이언트가 요청하면 서블릿 객체를 여러개를 만드는 것이 아니라 한개의 서블릿 객체만을 만들고\r\n            쓰레드를 이용하여 객체가 접근하므로 효율적으로 작동이 가능하다 </p>\r\n          <p> 3. 비즈니스 로직(서비스) 과 프레젠테이션(클라이언트가 보는 화면)의 분리가 가능하다 </p>\r\n          <p> 4. 업무분담이 좋아지고 , 유지보수가 수월하며 , 기능확장도 좋다  </p>\r\n          <p> 단점 : 서블릿에는 HTML 코드가 섞여있어 불편함 -&gt; JSP로 어느정도 해결</p>\r\n          <span className=\"mblock\">\r\n            <p>  </p>\r\n          </span>\r\n        </span>\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"JSP란\"> 4. JSP란 </a> </span>\r\n          <p> Java Servet Page로 자바환경에서 HTML을 처리  </p>\r\n          <p> JSP파일은 Servlet파일로 변환이 되어서 사용  </p>\r\n          <p> 과거의 서블릿은 HTML + Java 혼합, 보기도 불편하고,\r\n            로직도 작성하기 힘들고,\r\n            HTML코드 때문에 매번 컴파일 과정을 거쳐야함</p>\r\n          <p> HTML(프레젠테이션 로직,사용자가보는화면)은 JSP가 처리</p>\r\n          <p> Java(비즈니스 로직, 서비스처리 과정)은 Servlet가 처리</p>\r\n          <span className=\"mblock\">\r\n            <p>  </p>\r\n          </span>\r\n        </span>\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"JSP변환과정\"> 5. JSP변환과정 </a> </span>\r\n          <p> 1. 웹 컨이너가 Servlet객체가 있는지 판단(변환된 JSP객체) </p>\r\n          <p> 2. Jsp를 Java소스파일로 변환 </p>\r\n          <p> 3. Java소스파일을 컴파일 하여 Servlet클래스로 변환 </p>\r\n          <p> 4. Servlet클래스를 사용 </p>\r\n          <span className=\"mblock\">\r\n            <p> JSP 또한 서블릿이므로 LifeCycle을 가진다</p>\r\n            <p> JSP의 장점으로 JSP의 파일 내부의 값이 자동으로 변환이 된다 </p>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/JSP_Lifecycle.png'} /> </p>\r\n          </span>\r\n        </span>\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"서블릿컨테이너의역할\"> 6. 서블릿컨테이너의역할 </a> </span>\r\n          <p> 서블릿 컨테이너의 역할 </p>\r\n          <p> 1. 서블릿 생명주기 관리</p>\r\n          <p> 2. 웹 서버와의 통신 지원</p>\r\n          <p> 3. 멀티쓰레드 지원 및 관리</p>\r\n          <p> 4. xml 파일 등 관리 </p>\r\n          <span className=\"mblock\">\r\n            <p> 클라이언트가 요청할 때 서블릿컨테이너가 하는 역할</p>\r\n            <p> 아래의 순서는 약간 차이가 있을 수 있지만 과정은 아래와 같습니다</p>\r\n            <p> 1. HttpServletRequest객체, HttpServletResponse객체 생성</p>\r\n            <p> 2. 쓰레드 생성 </p>\r\n            <p> 3. 생성된 객체를 쓰레드에게 전달</p>\r\n            <p> 4. xml 파일을 참조하여 URL을 분석하고 어느 서블릿을 요청할지 찾음</p>\r\n            <p> 5. 사용자가 요청한 서블릿 호출</p>\r\n            <p> 6. 쓰레드가 서블릿에서 doGet(),doPost() 실행시켜 동적페이지를 Response()객체에 보관</p>\r\n            <p> 7. Responser() 객체를 HttpResponse()형태로 전환하고 쓰레드와 응답,요청 객체 소멸</p>\r\n            <p> 8. 클라이언트 응답을 보냄( WAS -&gt; 웹서버로 이동 )</p>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/ServletContainer.png'} /> </p>\r\n          </span>\r\n        </span>\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"JSP변환과정\"> 7. Servlet사용하기 </a> </span>\r\n          <p> 1. 웹 컨이너가 Servlet객체가 있는지 판단(변환된 JSP객체) </p>\r\n          <p> 2. Jsp를 Java소스파일로 변환 </p>\r\n          <p> 3. Java소스파일을 컴파일 하여 Servlet클래스로 변환 </p>\r\n          <p> 4. Servlet클래스를 사용 </p>\r\n          <span className=\"mblock\">\r\n            <p> JSP 또한 서블릿이므로 LifeCycle을 가진다</p>\r\n            <p> JSP의 장점으로 JSP의 파일 내부의 값이 자동으로 변환이 된다 </p>\r\n            <p> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/JSP_Lifecycle.png'} /> </p>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JspServletInformation;","import React from 'react';\r\n\r\nconst BackendBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"로그\"> 로그 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 로그를 사용하는 이유와 고려할 점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 1. 시스템 서비스 장애 , 동작 상태, 알람(시스템 로그) </li>\r\n                                <li> 2. 이벤트에 대한 유저 기록 수집(서비스 로그) </li>\r\n                                <li> 3. 필요한 정보를 편리하게 얻을 수 있다. </li>\r\n                                <li> 4. 로그를 남기지 않아서 필요한 정보를 얻지 못할 수 있다.  </li>\r\n                                <li> 5. 로그의 의미를 파악하기 어렵다.  </li>\r\n                                <li> 6. 로그 한줄에 여러 데이터가 있으므로 필요한 데이터를 수집하기 위해서는 가공처리가 필요하다.  </li>\r\n                                <li> 7. 로그를 수정하려고 한다면 그 전에 있었던 모든 로그데이터를 수정해야 하므로 비용이 많이 든다. </li>\r\n                                <li> 8. 로그로 데이터를 얻어야 한다면 추후에 사용을 할 수 있게 설계를 제대로 해야한다.\r\n                                    예를 들어 사용자가 페이지를 접속하고 다시 접속을 하면 왜 이사람이 접속을 했는지에 대해 생각을 해보고\r\n                                    어떤 데이터를 얻어야 할지에 대해 생각이 필요하다. </li>\r\n                                <li> 9. 로그데이터를 얻을 때 같은 객체에 대해서 일관성있는 항목 구성을 해야한다. </li>\r\n                                <li> 10. 로그의 데이터가 의도하지 않은 곳에서 들어오거나 다른 데이터가 들어오지 않는 믿을 수 있는 로그여야 한다.  </li>\r\n                                <li> 11. 로그 데이터를 수집하기 위해서 헷갈리지 않는 이름과 구체적으로 받아들일수 있는 이름을 사용해야 한다. </li>\r\n                                <li> 12. 항목이름, 이벤트 이름, 구성요소 등을 네이밍 컨벤션을 구분하여 작성한다. </li>\r\n                                <li> 13. 로그 데이터의 이름은 축약하지말고 구체적으로 작성 </li>\r\n                                <li> 14. 로그 데이터의 값이 비어있다면 명확하게  </li>\r\n                                <li> 15. 로그의 정적데이터가 많으면 메타데이터에 매핑하여 이용, 하지만 매번 참조해야 하므로 고민이 필요 </li>\r\n                                <li> 16. 메타데이터가 많아지면 보기 어려움, 자주 참조하는 로그 데이터들은 로그로 남기는 것을 추천 </li>\r\n                                <li> 17. 무분별한 로그데이터를 수집하는 것은 낭비가 심하므로 필요한 데이터만 수집해야 한다. </li>\r\n                                <li> 18. 점점 발전이 되가면서 로그의 품질에 대해서 생각을 해볼 필요성이 있다. </li>\r\n                                <li> 14.  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 로그 레벨 </span>\r\n                            <small> 로그 라이브러리나 시스템 마다 약간의 차이는 존재 할 수 있음 </small>\r\n                            <span className=\"mblock\">\r\n                                <small> 실제 운영할 때에는 error, warn, info 3개만 사용해서 모니터링 </small>\r\n                                <li> FATAL : 시스템에 치명적인 문제가 발생 </li>\r\n                                <li> ERROR : 프로그램 동작에 큰 문제가 발생한 경우 ,[DB사용금지, NPE] , 예상하지못한 오류 </li>\r\n                                <li> WARN : 프로그램이 진행은 가능하지만 주의를 주는 경우 , 명확한 문제와 잠재적인 문제로\r\n                                    나뉘어 진다. [데이터 사용불가, 캐쉬값 사용 | 개발모드로 프로그램 시작, 관리자 콘솔\r\n                                    비밀번호 보호되지 않고 접속 ] </li>\r\n                                <li> INFO : [시작, 종료, 서버연결 등] 중요한 메시지를 출력, 로그를 통해 내용을 파악할 때 일반적으로 사용 </li>\r\n                                <li> DEBUG : 개발자가 기록할만한 가지가 있는 종류의 정보를 남기기 위해 사용, 버그를 찾기 위해 출력 </li>\r\n                                <li> TRACE : 사소한 정보를 출력 </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 로깅 라이브러리 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> slf4j #logback을 사용하기 위한 인터페이스 </li>\r\n                                <li> logback #log4j보다 더 성능이 우수 </li>\r\n                                <li> log4j #일반적으로 많이 사용 </li>\r\n                                <li> nlog </li>\r\n                                <li> JCL #facade역할 다른 로깅 lib를 사용하게 하는 역할 </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 로그 시스템(로그 분석 도구) </span>\r\n                            <span className=\"mblock\">\r\n                                <li> Sentry </li>\r\n                                <li> ElasticSearch + Kibana + X-Pack #로그 수집, 저장, 분석, 알림까지 지원가능</li>\r\n                                <li> Splunk </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 로그 사용시 주의사항 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 1. 저장 용량 </li>\r\n                                <li> 2. 개인 정보 </li>\r\n                                <li> 3. 시스템 보안이나 시스템 계정 정보 </li>\r\n                                <li> 4. 생명주기 </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Dev Ops\"> Dev Ops </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <small> IT프로세스를 미세하게 조정하는 것을 지향하는 사고방식 </small>\r\n                            <span className=\"sstitle\"> Dev Ops Tools </span>\r\n                            <span className=\"mblock\">\r\n                                <li> Jenkins(젠킨스) :  </li>\r\n                                <li> Splunk(스플렁크) : </li>\r\n                                <li> Terraform(테라폼) : </li>\r\n                                <li> Nagios(나기오스) :  </li>\r\n                                <li> Grafana(그라파나) :  </li>\r\n                                <li> Prometheus(프로메테우스) :  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 중앙 집중식 인프라 구축 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> 1. 작업방식을 집중화 </li>\r\n                                <li> 2. 권한설정 이나 보안 </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\">  </span>\r\n                            <span className=\"mblock\">\r\n                                <li>  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"개발 방법론\"> 개발 방법론 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 애자일(Agile) 방법론 </span>\r\n                            <small> 계획을 여러번에 나누어서 하는 방법으로 클라이언트의 요구사항에 대처하기 쉽고 결과물을 바로 보여줄 수\r\n                                있다. 하지만 정해진 기간안에 해야하고 짧은 시간에 처리를 해야한다는 부담이 있다.  </small>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"sstitle\"> 백로그 </span>\r\n                                <span className=\"sblock\">\r\n                                    <li> 제품 백로그 : 사용자를 조사하여 구현해야 할 사항을 정의한 문서 , 제품책임자가 작성 <br />\r\n                                        Idea Time : 한 사람이 사용가능한 시간의 양 <br />\r\n                                        Calender Time : 작업 시간을 예상하여 측정하는 방식 </li>\r\n                                    <li> 스프린트 백로그 : 작업과 작업량을 기록? </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 스크럼 구성원 </span>\r\n                                <span className=\"sblock\">\r\n                                    <li> 제품책임자 : 클라이언트와 스크럼 팀 사이의 의견을 취합 ,  제품의 특성과 기능을 정의하여 백로그 작성, 출시일자와 내용 결정 </li>\r\n                                    <li> 스크럼 마스터 : 스크럼 팀장 , 스크럼 프로세스가 잘 진행되도록 한다.  </li>\r\n                                    <li> 이해관계자 : 제품에 관련되어 있으나 직접적으로 관여하지 않는 사람 </li>\r\n                                    <li> 스크럼 팀 : 개발자, 디자이너 등 , 제품의 생산을 맡음 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 스프린트 원칙 </span>\r\n                                <span className=\"sblock\">\r\n                                    <li> 요구사항을 변경하지 않는다. </li>\r\n                                    <li> 팀원들이 정보를 공유해야 한다. </li>\r\n                                    <li> 정해진 시간안에 끝내야 한다. </li>\r\n                                    <li> 규칙적이여야 한다. </li>\r\n                                    <li> 보통 2~4주 정도를 잡는다.  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 폭포수(waterfall) 방법론 </span>\r\n                            <small> 요구 - 설계 - 구현 - 테스트 - 출시 - (재요구 그러면 다시 처음으로) , 한번의 단계가 너무 길다는 단점 </small>\r\n                            <span className=\"mblock\">\r\n                                <li> 계획 - 디자인 - 설계 - 코딩 - 배포 순으로 이루어져 결과물까지 확인하기 오래걸린다. </li>\r\n                                <li> 구현시 설계가 달라지고 클라이언트의 대응에 반응하기 어려움 </li>\r\n                                <li> 예산 초과나 앞쪽에서 딜레이가 되면 뒤에 파트를 담당하는 사람들을 감당하기 어려움 </li>\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> Dev Ops 방법론 </span>\r\n                            <small> 개발,운영,검증을 하나로 통합하는 방법론 , 여러 부서가 하나의 부서처럼 움직이게 함, 자동화\r\n                                시스템이 해결을 해주는 방법론 </small>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"sblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> Dev Ops Tools </span>\r\n                                <span className=\"sblock\">\r\n                                    <li> Jenkins(젠킨스) :  </li>\r\n                                    <li> Splunk(스플렁크) : </li>\r\n                                    <li> Terraform(테라폼) : </li>\r\n                                    <li> Nagios(나기오스) :  </li>\r\n                                    <li> Grafana(그라파나) :  </li>\r\n                                    <li> Prometheus(프로메테우스) :  </li>\r\n                                </span>\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                    {/*  */}\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> Apache 와 Nginix\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> Apache </div>\r\n                                <div className='mblock'>\r\n                                    <div className='sstitle'> 설명 </div>\r\n                                    <div className='sblock'>\r\n                                        <li> MPM(Multi Processing Modeul) 방식으로 처리\r\n                                            <li> Prefork MPM\r\n                                                <li> 1개의 프로세를 자식 프로세스로 복제하여 1개의 쓰레드를 이용하여 사용 </li>\r\n                                                <li> 안정적이나 자원을 많이 잡아먹음 </li>\r\n                                            </li>\r\n                                            <li> Worker MPM\r\n                                                <li> 1개의 프로세를 자식 프로세스로 복제하여 여래개의 쓰레드를 이용하여 사용 </li>\r\n                                                <li> 자원 공유 </li>\r\n                                                <li>  </li>\r\n                                            </li>\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                    <div className='sstitle'> 장점 </div>\r\n                                    <div className='sblock'>\r\n                                        <li> 여러 운영체제 등에 호환이 좋음 </li>\r\n                                        <li> 모듈이 다양함 </li>\r\n                                        <li> 안정적이고 확장성이 좋음 </li>\r\n                                    </div>\r\n                                    <div className='sstitle'> 단점 </div>\r\n                                    <div className='sblock'>\r\n                                        <li> 프로세스나 스레드를 생성하여 처리하므로 요청이 많으면 처리 불가 </li>\r\n                                        <li> 동시에 몇만의 접속자가 들어온다면 자원을 사용하는 CPU,메모리 증가하여 대용량에는 한계 </li>\r\n                                        <li>  </li>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='sstitle'> Nginix </div>\r\n                                <div className='mblock'>\r\n                                    <div className='sstitle'> 설명 </div>\r\n                                    <div className='sblock'>\r\n                                        <li> 비동기식 이벤트 처리 중심의 아키텍처를 목표 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                    <div className='sstitle'> 장점 </div>\r\n                                    <div className='sblock'>\r\n                                        <li> 이벤트 처리 방식 </li>\r\n                                        <li> 비동기 방식 </li>\r\n                                        <li> 논블로킹 방식 </li>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                    <div className='sstitle'> 단점 </div>\r\n                                    <div className='sblock'>\r\n                                        <li> 동적인처리는 불가 </li>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> DB 처리\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 설명 </div>\r\n                                <div className='mblock'>\r\n                                    <li> DB에서 대용량 처리하는 방법\r\n                                        <li> batch processing (일괄 처리 방법)\r\n                                            <li> 쿼리들을 묶어서 처리하는 방법 , 쿼리를 1번씩 끊어서 처리하게 되면  </li>\r\n                                            <li> batch를 이용하여 한번에 처리할 수 있지만 너무 많으면 에러가 발생하므로 적절한 양의 쿼리가 중요 </li>\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> 예시 </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> 쓰레드, 싱글톤, 자원\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 설명 </div>\r\n                                <div className='mblock'>\r\n                                    <li> eager initialization(이른 초기화) : 인스턴스를 미리 생성해서 고유한 인스턴스를 만드는 방법\r\n                                        <li> private static final 객체 INSTANCE = new 객체(); </li>\r\n                                        <li class=\"col_be\"> 장점 : 싱글톤을 유지할 수 있다. </li>\r\n                                        <li class=\"col_r\"> 단점 : 미리 인스턴스를 생성하였는데 사용을 하지 않게되면 손해, 자원이 커서 리소스 비용이\r\n                                            크다면 더 손해 </li>\r\n                                    </li> <br />\r\n                                    <li> synchronized(동기화) : 동기화 처리를 하여서 처리를 하는 방법\r\n                                        <li class=\"col_be\"> 장점 : 싱글톤을 유지를 할 수 있음 </li>\r\n                                        <li class=\"col_r\"> 단점 : 동기화 처리를 함으로 처리속도에 문제 </li>\r\n                                    </li> <br />\r\n                                    <li> double checked locking : 인스턴스가 없는 경우에 우연히 겹쳐서 들어오면 synchronized로 처리를 해서 방지를 해주고\r\n                                        인스턴스가 이미 있다면 새로 만들지 않게하는 방법\r\n                                        <li class=\"col_be\">  </li>\r\n                                        <li class=\"col_r\">  </li>\r\n                                    </li> <br />\r\n                                    <li> static inner :\r\n                                        <li>  </li>\r\n                                        <li class=\"col_be\">  </li>\r\n                                        <li class=\"col_r\">  </li>\r\n                                        <div className=\"sblock\">\r\n                                            <li> public class 클래스  {'{'}\r\n\r\n                                                <li> private 클래스() {'{}'}</li> <br />\r\n                                                <li> private static class 내부클래스명 {'{'}\r\n                                                    <li> private static final 킄래스 INSTANCE = new 클래스(); </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li> <br />\r\n                                                <li> public static 클래스 메소드명() {'{'}\r\n                                                    <li> return 내부클래스명.INSTANCE; </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </li>\r\n                                            <li> {'}'} </li>\r\n                                        </div>\r\n                                    </li>\r\n                                </div>\r\n                                <div className='sstitle'> 예시 </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n\r\n                </span>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BackendBasic;","import React from 'react';\r\n\r\nconst BackendSolid = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ Solid 5대 원칙 <a name=\"Solid 5대 원칙\" style={{ visibility: \"hidden\" }}> Solid 5대 원칙 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 유지보수, 확장이 쉬운 소프트웨어를 만드는 방식 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> SRP(Single Responsibility Principle) , 단일 책임 원칙 </span>\r\n                                            <li> 모든 클래스는 하나의 책임만 가진다. , 여러기능을 가지는 것은 좋지 않음 </li>\r\n                                            <li> 한개의 관심사만을 갖는다. </li>\r\n                                            <li> 여러개의 기능이 모여 있을 경우 한개의 기능을 수정하였을 때 다른 기능까지 망가질 수 있음 </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> OCP(Open-Close Principle) , 개방 폐쇄 원칙 </span>\r\n                                            <li> 소프트웨어 개체는 확장에 개방적이고, 수정에 대해서는 폐쇄적이어야 함 </li>\r\n                                            <li> 개체 하나를 수정하였는데 그 개체와 관계된 개체들을 모두 수정하게 되는것을 잘못된 방식 </li>\r\n                                            <li> 추상화(인터페이스)를 이용하여 확장에는 개방적으로 접근할 수 있음 </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> LSP(Liskov Substitution Principle) , 리스코프 치환 원칙 </span>\r\n                                            <li> 참조되는 기반클래스는 파생클래스의 객체를 상세히 알지 못해도 사용할 수 있어야 한다. </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> DIP(Dependency Inversion Principle) , 의존 역전 원칙 </span>\r\n                                            <li> 상위 모듈이 하위 모듈에 의존해서는 안되는 방식 </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                        <span className=\"sblock\">\r\n                                            <span className=\"sstitle\"> ISP(Interface Segregation Principle) , 인터페이스 분리 원칙 </span>\r\n                                            <li> 역할을 하나의 인터페이스가 모두 담당하는 것이 아니라 역할을 여러 작은 단위의 인터페이스\r\n                                                로 분리하여 사용하는 방식 </li>\r\n                                            <li> 모두 추상화에 의존해야 한다. </li>\r\n                                        </span>\r\n                                        {/*  */}\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BackendSolid;","import React from 'react';\r\n\r\nconst BackendBrowserDevTool = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\" >\r\n        <ul>\r\n          <span className=\"lblock\">\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Elements 항목 <a name=\"Elements 항목\" style={{ visibility: \"hidden\" }}> Elements 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Console 항목 <a name=\"Console 항목\" style={{ visibility: \"hidden\" }}> Console 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Sources 항목 <a name=\"Sources 항목\" style={{ visibility: \"hidden\" }}> Sources 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Network 항목 <a name=\"Network 항목\" style={{ visibility: \"hidden\" }}> Network 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Headers </span>\r\n                  <span className=\"mblock\">\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ General </summary>\r\n                      <span className=\"sblock\">\r\n                        <li> Request URL : 사용자가 요청한 주소 </li>\r\n                        <li> Request Method: [GET, POST] #메소드 </li>\r\n                        <li> Status Code : [200,302]  </li>\r\n                        <li> Remote Address : ?? </li>\r\n                        <details>\r\n                          <summary> Referrer Policy :  전달되는 주소의 노출정도를 정책으로 정함  </summary>\r\n                          <small> HTTP referer : 하이퍼링크를 통해 다른 사이트로 이동시에 남는 흔적,\r\n                            다른 사이트로 이동하면 이전의 사이트의 주소를 전달 </small>\r\n                          <span className=\"mblock\">\r\n                            <small> {'<meta name=\"referrer\" content=\"\" /> '} </small>\r\n                            <span className=\"sstitle\"> content=\"no-referrer\" </span>\r\n                            <li> refere을 남기지 않음 </li>\r\n                            <span className=\"sstitle\"> content=\"unsafe-url\" </span>\r\n                            <li> 주소를 전체를 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"origin\" </span>\r\n                            <li> 주소 전체가 아닌 도메인 주소만을 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"no-referrer-when-downgrade\" </span>\r\n                            <li> 이동하는 주소가 https일 때 주소를 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"strict-origin\" </span>\r\n                            <li> 이동하는 주소가 https일 때 도메인 주소를 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"same-origin\" </span>\r\n                            <li> 같은 웹사이트 주소로 이동할 때만 주소를 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"origin-when-cross-origin\" </span>\r\n                            <li> 웹사이트가 같을 때는 전체주소, 다를 때는 도메인 주소만을 남김 </li>\r\n                            <span className=\"sstitle\"> content=\"strict-origin-when-cross-origin\" </span>\r\n                            <li> https를 사용하고 웹사이트가 같으면 전체주소, 다르면 도메인주소 그리고 http\r\n                              를 사용하면 웹사이트 주소를 남기지 않음 </li>\r\n                          </span>\r\n                        </details>\r\n                      </span>\r\n                    </details>\r\n                    {/*  */}\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ Response Headers </summary>\r\n                      <span className=\"sblock\">\r\n                        <li> ache-Control: no-cache, no-store, max-age=0, must-revalidate </li>\r\n                        <li> Connection: keep-alive </li>\r\n                        <li> Content-Length: 0 </li>\r\n                        <li> Date: Thu, 12 Aug 2021 15:46:38 GMT #날짜 </li>\r\n                        <li> Expires: 0 </li>\r\n                        <li> Keep-Alive: timeout=60  </li>\r\n                        <li> Location: http://localhost:8080/ </li>\r\n                        <li> Pragma: no-cache </li>\r\n                        <li> Set-Cookie: JSESSIONID=4D435E9D3AF6BCCAA188BE74B8D1167D; Path=/; HttpOnly </li>\r\n                        <li> X-Content-Type-Options: nosniff </li>\r\n                        <li> X-Frame-Options: DENY </li>\r\n                        <li> X-XSS-Protection: 1; mode=block </li>\r\n                      </span>\r\n                    </details>\r\n                    {/*  */}\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ Request Headers </summary>\r\n                      <span className=\"sblock\">\r\n                        <li> Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 </li>\r\n                        <li> Accept-Encoding: gzip, deflate, br </li>\r\n                        <li> Accept-Language: ko,en-US;q=0.9,en;q=0.8 </li>\r\n                        <li> Cache-Control: max-age=0 </li>\r\n                        <li> Connection: keep-alive </li>\r\n                        <li> Content-Length: 28 </li>\r\n                        <li> Content-Type: application/x-www-form-urlencoded </li>\r\n                        <li> Cookie: JSESSIONID=8853C84951CDCDE9026D41B7770FB10B </li>\r\n                        <li> Host: localhost:8080 </li>\r\n                        <li> Origin: http://localhost:8080 </li>\r\n                        <li> Referer: http://localhost:8080/loginForm </li>\r\n                        <li> Sec-Fetch-Dest: document </li>\r\n                        <li> Sec-Fetch-Mode: navigate </li>\r\n                        <li> Sec-Fetch-Site: same-origin </li>\r\n                        <li> Sec-Fetch-User: ?1 </li>\r\n                        <li> Sec-GPC: 1 </li>\r\n                        <li> Upgrade-Insecure-Requests: 1 </li>\r\n                        <li> User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36 </li>\r\n                      </span>\r\n                    </details>\r\n                    {/*  */}\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ Form Data </summary>\r\n                      <span className=\"sblock\">\r\n                        <li>  </li>\r\n                        <li>  </li>\r\n                      </span>\r\n                    </details>\r\n                    {/*  */}\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Preview </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Response </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Initiator </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Timing </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\"> Cookies </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n                {/*  */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Performance 항목 <a name=\"Performance 항목\" style={{ visibility: \"hidden\" }}> Performance 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Memory 항목 <a name=\"Memory 항목\" style={{ visibility: \"hidden\" }}> Memory 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Application 항목 <a name=\"Application 항목\" style={{ visibility: \"hidden\" }}> Application 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Security 항목 <a name=\"Security 항목\" style={{ visibility: \"hidden\" }}> Security 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ Lighthouse 항목 <a name=\"Lighthouse 항목\" style={{ visibility: \"hidden\" }}> Lighthouse 항목 </a> </summary>\r\n                <span className=\"sblock\">\r\n                  <span className=\"sstitle\">  </span>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </span>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n          </span>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BackendBrowserDevTool;","import React from 'react';\r\n\r\nconst BackendSCTCache = (props) => {\r\n return (\r\n  <>\r\n   <div className=\"common_style\">\r\n    <div className='block1'>\r\n     <details>\r\n      <summary> 토큰 </summary>\r\n      <div className='block2'>\r\n\r\n       <h2 className='h2'> 📌 JWT토큰 </h2>\r\n       <li> 헤더\r\n        <div className=\"block4\">\r\n         <li> \"alg\" : \"HS256\" 👉 알고리즘 설정 </li>\r\n         <li> \"typ\" : \"JWT\" 👉 토큰의 종류 </li>\r\n         <li>  </li>\r\n        </div>\r\n       </li>\r\n       <li> 페이로드\r\n        <div className=\"block4\">\r\n         <li> 1. 등록된 클레임\r\n          <div className=\"block4\">\r\n           <li> \"iss\" : \"발급자이름\" </li>\r\n           <li> \"sub\" : \"토큰 제목\" </li>\r\n           <li> \"aud\" : \"토큰 대상자\" </li>\r\n           <li> \"exp\" : \"토큰 만료 시간\" 👉 NumericDate 형식(13자리숫자) </li>\r\n           <li> \"nbf\" : \"토큰 활설 날짜\" 👉 </li>\r\n           <li> \"iat\" : \"토큰 발급 시간\"  👉 </li>\r\n           <li> \"jti\" : \"토큰 식별자 ID\" 👉 </li>\r\n          </div>\r\n         </li>\r\n         <li> 2. 공개 클레임\r\n          <div className=\"block4\">\r\n           <li> \"URI주소\" : \"값\" </li>\r\n          </div>\r\n         </li>\r\n         <li> 3. 비공개 클레임\r\n          <div className=\"block4\">\r\n           <li> \"키\" : \"값\" </li>\r\n          </div>\r\n         </li>\r\n        </div>\r\n       </li>\r\n       <li> 서명\r\n        <div className=\"block4\">\r\n         <li> (헤더+페이로드)를 Base64로 인코딩 </li>\r\n         <li> 인코딩한 값을 비밀키를 이용해서 헤더에서 정의한 알고리즘으로 암호화 </li>\r\n         <li> 암호화한 값을 다시 Base64로 인코딩 </li>\r\n        </div>\r\n       </li>\r\n\r\n      </div>\r\n     </details>\r\n    </div>\r\n   </div>\r\n\r\n  </>\r\n );\r\n}\r\n\r\nexport default BackendSCTCache;","import React from 'react';\r\n\r\nconst BackendCompilerInterpreter = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <div className=\"lblock\">\r\n\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> 컴파일 언어\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 설명 </div>\r\n                                <div className='mblock'>\r\n                                    <li> 대표적인 언어 : C , C++ , Java 등 </li>\r\n                                    <li> 소스코드 - 컴파일러 - 목적파일(오브젝트코드, .obj파일) - 링커(라이브러리 코드) - 실행파일(.exe) </li>\r\n                                    <li> 인터프리터에 비해 초반에는 느림 하지만 파일이 존재하므로 2번이상부터는 빠르다 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> 예시 </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> 인터프리터\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 설명 </div>\r\n                                <div className='mblock'>\r\n                                    <li> 대표적인 언어 : Python 등 </li>\r\n                                    <li> 소스코드 - 인터프리터 - 실행 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> 예시 </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BackendCompilerInterpreter;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst CodingConvention = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 네이밍 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1. 이름은 짧으면 좋다. 하지만 축약해서 사용을 해서 신입사원이 읽지 못한다면\r\n                                잘못된 네이밍이다. 그럴때는 그냥 단어가 길더라도 쓰느게 좋을 수 있다. </li>\r\n                            <li> 2. 단어 조합은 3개이하 정도가 적당한것 같다. 4개까지는 허용이 가능하지만\r\n                                5개는 다시 만들어야 할 것 같다.. </li>\r\n                            <li> 3. 좁은 범위에서 변수의 이름을 길게 할 필요는 없다. </li>\r\n                            <li> 4. 클래스는 CamelCase 모든 단어는 대문자, 변수나 메소드는 camelCase 첫단어는 소문자 </li>\r\n                            <li> 5.  </li>\r\n                            <li> 3.  </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li>  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 네이밍 - 변수, 상수 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 기본 설명 </h2>\r\n                            <li> 1. 변수의 첫글자는 소문자로 작성하고 camelCase를 사용한다. </li>\r\n                            <li> 2. 상수는 모두 대문자로 표기하고 \"_\"을 사용해서 단어를 구분한다. </li>\r\n\r\n                            <h2 className='h2'> 📌 단위, 크기를 뜻하는 변수 </h2>\r\n                            <li> 명확한 의미를 가진 네이밍을 써야한다. </li>\r\n                            <li>  </li>\r\n                            <div className=\"block4\">\r\n                                <li> length, number, size, time (x) </li>\r\n                                <li> userNameLength, boardContentSizeKB, maxFileTitleByte (o) </li>\r\n                            </div>\r\n\r\n                            <h2 className='h2'> 📌 어떠한 처리를 거쳐야 하는 변수 </h2>\r\n                            <li> password (x) </li>\r\n                            <li> plainPassword, encodePassword </li>\r\n\r\n                            <h2 className='h2'> 📌  </h2>\r\n                            <li>  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 네이밍 - 함수, 메소드 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 기능을 잘게 쪼개서 사용하는 것이 좋다. </li>\r\n                            <li> 이름은 동사에 어떠한 기능이 있는지 잘 알수 있는 단어이어야 한다. </li>\r\n\r\n                            <h2 className='h2'> 📌 컨트롤러 메소드 </h2>\r\n                            <li> 접미사를 사용 </li>\r\n                            <li> userAdd() </li>\r\n                            <li> userDetails() </li>\r\n                            <li> userList() </li>\r\n                            <li> userModify() </li>\r\n                            <li> userRemove() </li>\r\n                            <li> userDuplicateCheck() </li>\r\n\r\n                            <h2 className='h2'> 📌 서비스 메소드 </h2>\r\n                            <li> 접두사 사용 </li>\r\n                            <li> findUser() </li>\r\n                            <li> addUser() </li>\r\n                            <li> modifyUser() </li>\r\n                            <li> removeUser() </li>\r\n                            <li> saveUser() </li>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> 📌 서비스 메소드 </h2>\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 네이밍 - 클래스 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n                            <li> 2 </li>\r\n                            <li> 3 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 네이밍 - DB </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n                            <li> 2 </li>\r\n                            <li> 3 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 네이밍 - html,css,js </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> \"-\" 문자를 사용해서 단어를 구분짓는다. <small> # home-main </small> </li>\r\n                            <li> \"__\" 문자를 사용해서 하위 요소들을 작성하다 <small> # main__title </small> </li>\r\n                            <li> \"_\",\"--\"(2중택1) 수정이 가능한 단어를 적는다. <small> # main_red , main_blue </small> </li>\r\n                            <li> \"js-\",\"camelCase\" (2중택1) javascript와 관련있는 클래스라는 것을 표기한다. <small> # js-btn </small> </li>\r\n                            <li> 3 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 가독성을 높이는 방법 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1. 코드의 줄을 바꾸어서 동일하게 맞추어 준다. </li>\r\n                            <li> 2. 연산자를 많이 사용하는 것보다 함수를 만들어서 처리하는 것이 좋다. </li>\r\n                            <li> 3. 변수는 변수끼리 함수는 함수끼리 배치를 하는 것이 좋다. </li>\r\n                            <li> 4. 코드에도 글을 읽기 좋게 큰제목, 중간제목, 소제목이 있듯이 구분하여 작성하는 것이 좋다.\r\n                                모든 기준은 큰것에서 작은 순으로 작성하는 것이 좋다. </li>\r\n                            <li> 5. 사용자 경험처럼 개발자들의 자주 사용하는 경험들이 있다.\r\n                                <div className=\"block4\">\r\n                                    <li> isNotEmpty나 != 처럼 부정적인 것보다 isEmpty나 == 처럼 긍정적인 것을 사용 </li>\r\n                                    <li> {' if(num>2) '} 보다는 {' if(num<2) '} 이와 같이 사용한다.  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </li>\r\n                            <li> 6. 중복되는 변수나 중복되는 함수들은 하나로 만들어서 사용을 한다.  </li>\r\n                            <li> 7. 모든 기능을 잘게 쪼개서 사용을하고 보관해야 한다.  </li>\r\n                            <li> 8. 하나의 클래스,함수,변수 등에 여러개의 기능이나 의미를 가지고 있지 않아야 한다. </li>\r\n                            <li> 9. 컨트롤러에서는 서비스 호출과 예외처리만 한다.  </li>\r\n                            <li> 3  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CodingConvention;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst HtmlBasic = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> HTML 기본구조 </summary>\r\n            <div className='block2'>\r\n              <div className=\"block4\" style={{ listStyle: \"none\" }}>\r\n                <li> {'  <!DOCTYPE html>  '} </li>\r\n                <li> {'  <html>  '}\r\n                  <li> {'    <head>  '}\r\n                    <li> {'      <title> 제목 </title>  '} </li>\r\n                    <li> {'      <meta charset = \"utf-8\">  '} </li>\r\n                    <li> {'      <link rel=\"stylesheet\" href=\"css/styles.css\">  '} </li>\r\n                  </li>\r\n                  <li> {'    </head>     '} </li>\r\n                  <li> {'    <body>  '} </li>\r\n                  <li> {'    </body>  '} </li>\r\n                </li>\r\n                <li> {'  </html>  '} </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> HTML 주석 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 주석은 컴퓨터는 인식하지 못하고 사람만 인식이 가능한 설명문이다. </li>\r\n              <li> {' <!-- 여기는 주석을 적는 공간입니다 -->'} </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 특수문자 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> <a href=\"https://dev.w3.org/html5/html-author/charref\" target=\"_blank\"> Entity Code </a> </li>\r\n              <li> 아래 문자들은 HTML문법과 동일한 문자들이 있어서 사용하려면 겹쳐서 에러가 발생하게 된다 그래서 사용하려면 다른 문자의 결합으로 작성해야 한다.</li>\r\n              <li> &lt; , &gt; , &amp; , &quot; , &copy; , &nbsp; </li>\r\n              <div className=\"block4\" style={{ listStyle: \"none\" }}>\r\n                <li> &lt; : &amp;lt; , 좌측 화살표</li>\r\n                <li> &gt; : &amp;gt; , 우측 화살표</li>\r\n                <li> &amp; : &amp;amp; , and문자 </li>\r\n                <li> &quot; : &amp;quot; , 쌍따옴표</li>\r\n                <li> &copy; : &amp;copy; , 카피라이터 문자</li>\r\n                <li> &nbsp; : &amp;nbsp; , 띄어쓰기</li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> div태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> block이라는 속성만 가지며 아무런 특징이 없다. </li>\r\n              <li> block이란 가로 공간을 전부 차지하는 것이다. </li>\r\n              <li> 블록속성을 가지고 있어 빨갛게 길게 칠해지는것을 볼 수 있다.</li>\r\n              <li> &lt; div style=\"background-color:red\"&gt; &lt; /div &gt; </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 div 태그 예시 </h3>\r\n                  <div style={{ backgroundColor: 'red' }}> {' <div style=\"background-color:red\">  </div> '} </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> span태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> inline이라는 속성만 가지며 아무런 특징이 없다. </li>\r\n              <li> inline이란 글자가 있는 공간만 차지하는 것이다. </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 span 태그 예시 </h3>\r\n                  <span style={{ backgroundColor: 'red' }}> {' <span style=\"background-color:red\">  </span> '} </span>\r\n                </div>\r\n              </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> h태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. block 속성 </li>\r\n              <li> 2. 글자 크기에 맞추어 폰트의 크기가 정해져 있음 </li>\r\n              <li> 3. 글자 크기가 정해져 있으므로 css스타일로 폰트크기를 바꾸는 것을 권장하지 않음 </li>\r\n              <li> 4. h1태그 부터 h6태그 까지 존재함 </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 h 태그 예시 </h3>\r\n                  <h1 style={{ backgroundColor: 'red' }}> {' <h1 style=\"background-color:red\">  </h1> '} </h1>\r\n                  <h2 style={{ backgroundColor: 'red' }}> {' <h2 style=\"background-color:red\">  </h2> '} </h2>\r\n                  <h3 style={{ backgroundColor: 'red' }}> {' <h3 style=\"background-color:red\">  </h3> '} </h3>\r\n                  <h4 style={{ backgroundColor: 'red' }}> {' <h4 style=\"background-color:red\">  </h4> '} </h4>\r\n                  <h5 style={{ backgroundColor: 'red' }}> {' <h5 style=\"background-color:red\">  </h5> '} </h5>\r\n                  <h6 style={{ backgroundColor: 'red' }}> {' <h6 style=\"background-color:red\">  </h6> '} </h6>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> p태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. block 속성 </li>\r\n              <li> 2. 한 줄 띄어쓰기의 특성을 가짐 </li>\r\n              <li> 3. 문단 태그라고도 불리며 자주 사용되는 태그 </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 p태그 예시 </h3>\r\n                  <p style={{ backgroundColor: 'red' }}> {' <p style=\"background-color:red\">  </p> '} </p>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 글자 스타일 관련 태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. 인라인 속성 </li>\r\n              <li> 2. css스타일을 사용하지 않고도 사용됨 </li>\r\n              <li> 3. 솔직히 b, br태그 외에는 다른것은 가끔 사용하는것 같다</li>\r\n              <li> 4. css에서만 스타일을 적용해야 된다는 논쟁이 있는것으로 알고 있어서 저는 css에서만 스타일을 적용합니다</li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 글자 스타일 관련 태그 예시 </h3>\r\n                  <b> b태그 : 굵은 글씨 </b> <small> #시각적으로만 사용 </small>  <br />\r\n                  <strong> strong태그 : 굵은 글씨 </strong> <small> #스크린 리더로 읽게 되면 강조 </small><br />\r\n                  <i> i태그 : 이탤릭체 #시각적으로만 사용 </i> <br />\r\n                  <em> em태그 : 이탤릭체 글씨</em> <small> #스크린 리더로 읽게 되면 강조 </small> <br />\r\n                  <ins> ins태그 : 글씨아래 밑줄 </ins> <br />\r\n                  <del> del태그 : 중간에 줄</del> <br />\r\n                  <mark style={{ backgroundColor: 'skyblue' }}> mark태그 : 형광펜 </mark> <br />\r\n                  <sub> sub태그 : 아래 첨자</sub> <br />\r\n                  <sup> sup태그 : 위 첨자</sup> <br />\r\n                  <big> big태그 : 큰 글씨</big> <br />\r\n                  <small> small태그 : 작은 글씨 </small> <small> # 초록색 속성은 없음 </small> <br />\r\n                  br태그 : 띄어쓰기 태그({'<br/>'};) 태그가 1개임 <br />\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 시멘틱태그 ( 좀 더 정리할 것 ) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. block 속성 </li>\r\n              <li> 2. div태그와 동일하다 </li>\r\n              <li> 3. 사용하는 이유는 태그의 이름을 이용하여 시멘틱태그안에는 정해진 내용을 넣겠다라는 의미이다 </li>\r\n              <li> header : 상단 구역 </li>\r\n              <li> nav : 상단 구역에 메뉴 </li>\r\n              <li> section : 메인 영역 </li>\r\n              <li> aside : 사이드 영역 </li>\r\n              <li> article : 신문,기사,글 영역 </li>\r\n              <li> footer : 하단 구역, 저작권, 회사명, 주소, SNS 등등 </li>\r\n              <li> 시멘틱 태그가 몇개 더 있는것으로 기억하지만 일단 기억나는대로만 작성하였다. </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <li>  </li>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> a태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. inline 속성 </li>\r\n              <li> 2. 주소로 이동시켜는 태그 </li>\r\n              <li> 3. href속성이 있으면 클릭이 된다 </li>\r\n              <li> 4. 밑줄을 그어주는 속성이 존재한다.  </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 a 태그의 예시 </h3>\r\n                  <li> {' <a href=\"#\"> href=\"#\" 속성을 가진 a태그를 클릭하면 페이지 최상단으로 이동 </a> '} </li>\r\n                  <li> {' <a href=\"#\" style=\"text-decoration=none\"> a태그의 속성인 밑줄을 제거해준다. </a> '} </li>\r\n                  <li> {' <a href=\"https://www.naver.com/\"> 클릭하면 기본 탭창이 입력한 url 주소로 이동 </a> '} </li>\r\n                  <li> {' <a href=\"https://www.naver.com/\" target=\"_blank\"> 클릭하면 새 탭창을 열어서 입력한 url 주소로 이동 </a> '} </li>\r\n                  <li> 페이지 내부의 원하는 위치로 이동하는 방법(내부 하이퍼링킁)\r\n                    <div className=\"block4\">\r\n                      <li> {' <a name=\"top\"> 하이퍼링크 이동 목적지 </a> '} </li>\r\n                      <li> {' <a href=\"#top\"> 이동할 태그의 속성 name을 href의 넣는다. </a> '} </li>\r\n\r\n                      <a name=\"top\"> 내부 a태그 주소(하이퍼링크)로 이동 </a>\r\n                    </div>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> link태그 </summary>\r\n            <div className='block2'>\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. 비어있는 태그 </li>\r\n              <li> 2. 속성만 넣을 수 있음  </li>\r\n              <li> 3. 외부 소스를 불러주는 태그 </li>\r\n              <li> 4. HTML에서 css파일을 불러서 사용할 때 일반적으로 사용 </li>\r\n\r\n              <h2 className='h2'> 📌 속성 </h2>\r\n              <li> link태그는 head태그 안에 넣는다. </li>\r\n              <li> {' <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"> '} <small> # 외부 css파일을 불러오는 방법 </small>   </li>\r\n              <li> rel: 필수 속성으로, 현재 문서에 어떤 리소스 인지 알려준다 </li>\r\n              <li> type: 외부 리소스의 미디어 타입 </li>\r\n              <li> href: 외부 리소스의 URL </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> img태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. 이미지 태그 </li>\r\n              <li> 2. src 속성 : 이미지의 주소입력 , null값이면 에러발생  </li>\r\n              <li> 3. alt 속성 : 이미지의 설명 </li>\r\n              <li> {' img태그는 <img alt=\"\" src=\"URL주소 혹은 경로.확장자명(.jpg , .png)\" alt=\"이미지설명\" width=\"100px\"> '} </li>\r\n\r\n              <h2 className='h2'> 📌 이미지 태그 중간에 배치하는 방법1 </h2>\r\n              <li> display: block; </li>\r\n              <li> margin-left: auto; </li>\r\n              <li> margin-right: auto; </li>\r\n\r\n              <h2 className='h2'> 📌 이미지 태그 중간에 배치하는 방법2 </h2>\r\n              <li> 이미지 태그 상위 태그에 text-align: center </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 이미지 예시 </h3>\r\n                  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/mountain_and_sea.jpg'} alt=\"산과바다\" width=\"100px\" />\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> input태그 form태그 textarea태그 label태그 fieldset태그 legend태그</summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 input태그 설명 </h2>\r\n              <li> 사용자가 입력을 할 수 있는 태그 </li>\r\n              <li> 아이디,회원가입 등에서 사용하는 태그로 form태그 내부에 같이 사용된다.  </li>\r\n              <li> input태그는 type속성을 이용하여 여러가지의 데이터를 입력할 수 있다. </li>\r\n              <li> input태그의 대표적 속성 required, placeholder </li>\r\n              <li> required 속성을 사용한 input태그는 제출시 제출이 불가능 </li>\r\n              <li> placeholder 속성을 사용하면 무엇을 입력할지 설명을 넣을 수 있다. </li>\r\n\r\n\r\n              <h2 className='h2'> 📌 input태그 속성 </h2>\r\n              <li> {' <input type=\"number\"/> '} <small> # 텍스트를 숫자로 입력 </small> </li>\r\n              <li> {' <input type=\"password\"/> '} <small> # 텍스트 입력시 * 처리, 비밀번호를 입력할 때 사용 </small> </li>\r\n              <li> {' <input type=\"radio\" name=\"gender\" value=\"man\"/> '} <small> # radio는 남/녀 , 내국인/외국인 버튼 처럼 n중 택1을 할때 사용 </small> </li>\r\n              <li> {' <input type=\"radio\" name=\"gender\" value=\"woman\"/> '} <small> # radio는 남/녀 , 내국인/외국인 버튼 처럼 n중 택1을 할때 사용 </small> </li>\r\n              <li> {' <input type=\"checkbox\" name=\"hooby\" value=\"music\"/> 음악 '} <small> # name이라는 필드 배열이 만들어지는 것으로 기억</small> </li>\r\n              <li> {' <input type=\"checkbox\" name=\"hooby\" value=\"sport\"/> 운동 '} <small> # </small> </li>\r\n              <li> {' <input type=\"checkbox\" name=\"hooby\" value=\"game\"/> 게임'} <small> # </small> </li>\r\n              <li> {' <input type=\"text\" name=\"text\" placeholder=\"텍스트를 입력하세요\" /> '} <small> # 텍스트를 입력할 때 </small> </li>\r\n              <li> {' <input type=\"email\"/> '} <small> # 이메일 형식 자동 검사 </small> </li>\r\n              <li> {' <input type=\"url\"/> '} <small> # 유효한 url 주소인지 검사 </small> </li>\r\n              <li> {' <input type=\"tel\"/> '} <small> # 전화번호 입력 </small> </li>\r\n              <li> {' <input type=\"search\"/> '} <small> # 검색 </small> </li>\r\n              <li> {' <input type=\"range\" min=\"1\" max=\"2\" /> '} <small> # 범위 </small> </li>\r\n              <li> {' <input type=\"color\" value=\"#ffffff\"/> '} <small> #  </small> </li>\r\n              <li> {' <input type=\"keygen\"/> '} <small> # 암호화하여 서버로 전송(사용방법찾아보기) </small> </li>\r\n              <li> {' <input type=\"output\"/> '} <small> # 스크립트로 실행된 결과를 바로 보여줌 </small> </li>\r\n              <li> {' <input type=\"\"/> '} <small> #  </small> </li>\r\n              <li> {' <input type=\"\"/> '} <small> #  </small> </li>\r\n              <li> {' <input type=\"date\"/> '} <small> # 년월일 </small> </li>\r\n              <li> {' <input type=\"time\"/> '} <small> # [오전,오후] 24:60 </small> </li>\r\n              <li> {' <input type=\"datetime-local\"/> '} <small> # 년-월-일 [오전,오후] 24:60  </small> </li>\r\n              <li> {' <input type=\"month\"/> '} <small> # 년월 </small> </li>\r\n              <li> {' <input type=\"week\"/> '} <small> # 년, 몇번째 주 </small> </li>\r\n              <li> value(초깃값) , readonly(읽기전용), disabled(아무것도안됨,전송도안됨) </li>\r\n              <li> maxlenght(최대길이), size(input요소 크기 지정) </li>\r\n\r\n              <h2 className='h2'> 📌 form태그 설명 </h2>\r\n              <li> 프론트엔드에서 사용자가 입력을 하고 백엔드 서버에 데이터를 보낼 때 사용  </li>\r\n              <li> form으로 보내는 방식에는 get,post 방식 등이 있다. </li>\r\n              <li> form태그 안에 여러가지 input 태그가 존재한다. </li>\r\n              <li> form태그 자체로는 아무런 특성이 없다. </li>\r\n              <li> input태그에서 자주 사용되는 속성</li>\r\n              <li> GET방식은 빠르지만 보안이 좋지 않아 사생활 정보가 필요없을 때 사용, 검색 등</li>\r\n              <li> POST방식은 상대적으로 느리지만 보안이 좋아 사생활 정보가 필요할 때, 로그인,회원가입 등 </li>\r\n              <li> {'<form method=\"POST\"혹은\"GET\" action=\"양식을보낼주소\"> 이곳에 input태그들을 작성한다 </form> '} </li>\r\n\r\n              <h2 className='h2'> 📌 textarea태그 설명 </h2>\r\n              <li> 여러줄의 텍스트를 입력할 때 사용한다. </li>\r\n              <li> {' <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\"/> '} </li>\r\n              <li> {' <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\" disabled/> '} # 아무것도 할 수 없음</li>\r\n              <li> {' <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\" autofocus/> '} # 자동 포커싱 </li>\r\n              <li> {' <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\" maxlength/> '} </li>\r\n              <li> {' <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\" minlength/> '} </li>\r\n              <li> {' <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\" readonly/> '} # 클릭은 되나 입력불가 </li>\r\n              <li> {' <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\" required/> '} # 필수적으로 입력</li>\r\n              <li> {' <textarea cols=\"20\" rows=\"5\" style={{ resize: \"none\", border: \"none\", overflow: \"auto\" }} /> '} </li>\r\n              <div className=\"block4\">\r\n                <h3 className='h3'> 📌 textarea태그 css </h3>\r\n                <li> textarea {'{'}\r\n                  <li> resize: none; </li>\r\n                  <li> overflox : scroll; # 디폴트값, overflox-x는 먹히지 않음 </li>\r\n                </li>\r\n                <li> {'}'} </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 label태그 설명 </h2>\r\n              <li> label태그의 텍스트를 클릭하면 매핑되는 input태그에 focus를 줄수있다.  </li>\r\n              <li> {' <input type=\"radio\" name=\"gender\" id=\"gender\" value=\"man\"> '} </li>\r\n              <li> {' <label for=\"gender\"> 남 </label> <br> '} </li>\r\n\r\n              <h2 className='h2'> 📌 fieldset태그+legend태그 설명 </h2>\r\n              <li> form태그 내부에 사용하는 태그 </li>\r\n              <li> form태그의 범위를 볼 수 있고 테두리를 감싸 줌 </li>\r\n              <li> fieldset태그에서 제목을 담당 </li>\r\n              <div className=\"block4\" style={{ listStyle: \"none\" }} >\r\n                <li> {' <form> '}\r\n                  <li> {' <fieldset> '}\r\n                    <li> {' <legend> form제목 </legend> '} </li>\r\n                    <li> {' <input type=\"radio\" name=\"gender\" id=\"gender\" value=\"man\"> '} </li>\r\n                    <li> {' <label for=\"gender\"> 남 </label> <br> '} </li>\r\n                  </li>\r\n                  <li> {' </fieldset> '} </li>\r\n                </li>\r\n                <li> {' </form> '} </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌  </h2>\r\n              <li>  </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 input태그 form태그 textarea태그 예시 </h3>\r\n                  <li> 리액트라서 예시가 제대로 먹히지 않는것 같음 </li>\r\n                  <li> {'<form> method=\"GET\" action=\"#\">'}\r\n                    <li> {' <input type=\"text\" placeholder=\"아이디를 입력해주세요\" required /> '} </li>\r\n                    <li> {' <input type=\"password\" placeholder=\"비밀번호를 입력해주세요\" required /> '} </li>\r\n                    <li> {' <input type=\"text\" placeholder=\"오토포커스\" required autofocus / '} </li>\r\n                    <li> {' <input type=\"text\" value=\"1+1=2\" required /> '} </li>\r\n                    <li> {' <input type=\"text\" size=\"40\" placeholder=\"사이즈가 늘어남\" required /> '} </li>\r\n                    <li> {' <input type=\"text\" maxLength=\"30\" placeholder=\"글자수를 제한\" required /> '} </li>\r\n                    <li> {' <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\"/> '} </li>\r\n                    <li> {' <button type=\"submit\"> 제출 </button> '} </li>\r\n                  </li>\r\n                  <li> {'</form> '} </li>\r\n                  <div className=\"block4\">\r\n                    <form method=\"GET\" action=\"#\">\r\n                      <fieldset>\r\n                        <legend> 소제목 </legend>\r\n                        <li> <input type=\"text\" placeholder=\"아이디를 입력해주세요\" required /> </li>\r\n                        <li> <input type=\"password\" placeholder=\"비밀번호를 입력해주세요\" required /> </li>\r\n                        <li> <input type=\"text\" placeholder=\"오토포커스\" required autofocus /> </li>\r\n                        <li> <input type=\"text\" value=\"1+1=2\" required /> </li>\r\n                        <li> <input type=\"text\" size=\"40\" placeholder=\"사이즈가 늘어남\" required /> </li>\r\n                        <li> <input type=\"text\" maxLength=\"30\" placeholder=\"글자수를 제한\" required /> </li>\r\n                        <li> <textarea id=\"\" cols=\"10\" rows=\"10\" placeholder=\"내용을 입력하시오\" /> </li>\r\n                        <li> <button type=\"submit\"> 제출 </button>  </li>\r\n                      </fieldset>\r\n                    </form>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> select태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> form태그 내부에 사용가능 </li>\r\n              <li> 여러개의 값중에 선택을 할 수 있는 드롭 메뉴 </li>\r\n\r\n              <h2 className='h2'> 📌 속성 </h2>\r\n              <li> selected(처음 선택되어 있는 옵션) , disabled(옵션으로 선택 불가능) </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 select태그 예시  </h3>\r\n                  <li> {' <select name=\"area\"> '}\r\n                    <li> {'   <option value=\"\" selected disabled> </option> '} </li>\r\n                    <li> {'   <option value=\"국어\"> 국어 </option> '} </li>\r\n                    <li> {'   <option value=\"수학\"> 수학 </option> '} </li>\r\n                    <li> {'   <option value=\"영어\"> 영어 </option> '} </li>\r\n                    <li> {'  <optgroup label=\"제2외국어\"> '}\r\n                      <li> {'   <option value=\"중국어\"> 중국어 </option> '} </li>\r\n                      <li> {'   <option value=\"일본어\"> 일본어 </option> '} </li>\r\n                    </li>\r\n                    <li> {'  </optgroup> '} </li>\r\n                  </li>\r\n                  <li> {' </select> '} </li>\r\n                  <div className=\"block4\">\r\n                    <select name=\"area\">\r\n                      <option value=\"과목\" selected disabled> 과목 </option>\r\n                      <option value=\"국어\"> 국어 </option>\r\n                      <option value=\"수학\"> 수학 </option>\r\n                      <option value=\"영어\"> 영어 </option>\r\n                      <optgroup label=\"제2외국어\">\r\n                        <option value=\"중국어\"> 중국어 </option>\r\n                        <option value=\"일본어\"> 일본어 </option>\r\n                      </optgroup>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> list태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. 리스트 형식으로 나열될 때 사용  </li>\r\n              <li> 2. 실제로는 세로로 나열보다는 css를 이용하여 가로로 배열하는데 사용하는것 같다. </li>\r\n              <li> 3. 리스트 태그에는 순서가 있는(ul)태그와 순서가 없는(ol)태그가 있다. </li>\r\n              <li> 그냥 ul만 써도 충분한것 같다. </li>\r\n              <li> 4. 리스트태그는 왼쪽에 원판(disc) 원(circle) 등 list-style-type 속성을 가지고있다. </li>\r\n              <li> 왠만하면 그냥 list-style-type=\"none\" 으로 사용할 것 같다. </li>\r\n              <li> 5. 인라인 태그 요소 </li>\r\n\r\n              <h2 className='h2'> 📌 리스트 태그 종류 </h2>\r\n              <li>  ul + li : li태그에 점으로 구분 , 목록형 태그 </li>\r\n              <li>  ol + li : li태그에 숫자 순서로 구분 , 목록형 태그</li>\r\n              <li>  dl + dt + dd : 정의형 몰록 태그 </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 ul + li 태그 </h3>\r\n                  <li> {' <ul> '}\r\n                    <li> {' <li> '} ● 첫번째 {' </li> '} </li>\r\n                    <li> {' <li> '} ● 두번째 {' </li> '} </li>\r\n                  </li>\r\n                  <li> {' </ul> '} </li>\r\n                  <h3 className='h3'> 🎈 ol + li 태그 </h3>\r\n                  <li> {' <ol> '}\r\n                    <li> {' <li> '} 1. 첫번째 {' </li> '} </li>\r\n                    <li> {' <li> '} 2. 두번째 {' </li> '} </li>\r\n                  </li>\r\n                  <li> {' </ol> '} </li>\r\n                  <h3 className='h3'> 🎈 dl + dt + dd 태그 </h3>\r\n                  <li> {' <dl> '}\r\n                    <li> {' <dt> '} 정의 제목 {' </dt> '} </li>\r\n                    <li> {' <dd> '} 정의 설명 {' </dd> '} </li>\r\n                  </li>\r\n                  <li> {' </dl> '} </li>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> table태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 표를 만들 때 사용하는 태그 </li>\r\n              <li> 알고 있어야 되는 개념이지만 자주 사용되지 않아 그냥 기억만 하고 있다. </li>\r\n              <li> 테이블과 관련된 태그의 종류 및 속성 , 많지만 필요한것만 정리</li>\r\n\r\n              <h2 className='h2'> 📌 table 관련 태그 </h2>\r\n              <li> table(표) (th(표의제목) tr(가로줄) td(셸,한칸))\r\n                (colgroup col)(표의 길이나 색상등을 지정할 수 있음)\r\n                thead(테이블상단구역) tbody(테이블중간구역) tfoot(테이블하단구역) </li>\r\n              <li> colspan=\"2\"(셸의 가로줄을 합치는 갯수), rowspan=\"2\"(셸의 세로줄을 합치는갯수) </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <li> {' <table border=\"1\"> '}\r\n                    <li> {'  <colgroup> '}\r\n                      <li> {'  <col width=\"50px\" style=\"background:red\"/> '} </li>\r\n                      <li> {'  <col width=\"150px\" style=\"background:green\" /> '} </li>\r\n                      <li> {'  <col width=\"250px\" style=\"background:blue\" /> '} </li>\r\n                    </li>\r\n                    <li> {'  </colgroup> '} </li>\r\n                    <li> {'  <thead> '}\r\n                      <li> {'   <tr> '}\r\n                        <li> {'    <th colSpan=\"2\"> 제목 </th> '} </li>\r\n                        <li> {'    <th rowSpan=\"3\"> 번호번호번호 </th> '} </li>\r\n                      </li>\r\n                      <li> {'  </tr> '} </li>\r\n                    </li>\r\n                    <li> {'  </thead> '} </li>\r\n                    <li> {'   <tbody> '}\r\n                      <li> {'    <tr> '}\r\n                        <li> {'     <td> 1번 </td> '} </li>\r\n                        <li> {'     <td> 1 </td> '} </li>\r\n                        <li> {'     <td> 1 </td> '} </li>\r\n                      </li>\r\n                      <li> {'   </tr> '} </li>\r\n                    </li>\r\n                    <li> {'   </tbody> '} </li>\r\n                    <li> {'  <tfoot> '}\r\n                      <li> {'    <tr> '}\r\n                        <li> {'     <td> 2번 </td> '} </li>\r\n                        <li> {'     <td> 2 </td> '} </li>\r\n                        <li> {'     <td> 2 </td> '} </li>\r\n                      </li>\r\n                      <li> {'    </tr> '} </li>\r\n                    </li>\r\n                    <li> {'   </tfoot> '} </li>\r\n                  </li>\r\n                  <li> {' </table> '} </li> <br />\r\n\r\n                  <div className=\"block4\">\r\n                    <table border=\"1\">\r\n                      <colgroup>\r\n                        <col width=\"50px\" style={{ backgroundColor: \"red\" }} />\r\n                        <col width=\"150px\" style={{ backgroundColor: \"green\" }} />\r\n                        <col width=\"250px\" style={{ backgroundColor: \"blue\" }} />\r\n                      </colgroup>\r\n                      <thead>\r\n                        <tr>\r\n                          <th colSpan=\"2\"> 제목 </th>\r\n                          <th rowSpan=\"3\"> 번호번호번호 </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td> 1번 </td>\r\n                          <td> 1 </td>\r\n                          <td> 1 </td>\r\n                        </tr>\r\n                      </tbody>\r\n                      <tfoot>\r\n                        <tr>\r\n                          <td> 2번 </td>\r\n                          <td> 2 </td>\r\n                          <td> 2 </td>\r\n                        </tr>\r\n                      </tfoot>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> details태그 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1. block속성 </li>\r\n              <li> 2. 메뉴를 펼치고 접는 것을 하는 태그 </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 details태그 예시 </h3>\r\n                  <li> {' < details > '}\r\n                    <li> {'   <summary> 접고 펼칠때 보일 텍스트 </summary>'} </li>\r\n                    <li> {' <li> 내용 </li> '} </li>\r\n                    <li> {' <li> 내용 </li> '} </li>\r\n                  </li>\r\n                  <li> {' < /details > '} </li> <br />\r\n\r\n                  <div className=\"block4\">\r\n                    <details>\r\n                      <summary> 접고 펼칠때 보일 텍스트 </summary>\r\n                      <li> 내용 </li>\r\n                      <li> 내용 </li>\r\n                    </details>\r\n                  </div>\r\n\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 뷰포트(Viewport) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> {'<meta name=\"viewport\" content=\"widht=device-width,initial-scale=1,minimum-scale=1'}\r\n                {',maximum-scale=1, user-scalable=no'} </li>\r\n              <li> width : 뷰포트 너비 </li>\r\n              <li> height : 뷰포트 높이 </li>\r\n              <li> initial-scale : 초기배율 </li>\r\n              <li> minimum-scale: 최소 축소배율 설정(default=0.25) </li>\r\n              <li> maximum-scale: 최대 확대배율 설정(default=5.0) </li>\r\n              <li> user-scalable: 확대/축소 여부 설정 </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <li>  </li>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 파일 다운로드, 업로드 (다시 알아볼 것) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 파일 다운로드 경로에 공백은 제거됨 </li>\r\n              <li> accept 속성 : 허용하는 파일 유형을 나타내는 지정자\r\n                <li> accept=\".img , .doc , .jpg , .pdf , image/* , audio/* , video/*\" </li>\r\n              </li>\r\n              <li> mutiple 옵션속성 : 복수의 파일을 선택가능하게 함\r\n                <p> {' <input type=\"file\" id=\"file\" name=\"file\" accept=\"image/*\" multiple> </input> '} </p>\r\n              </li>\r\n\r\n              <h2 className='h2'> 📌 파일 다운로드 예시 </h2>\r\n              <div className=\"block4\" style={{ listStyle: \"none\" }}>\r\n                <li> {' <a href=\"파일 경로\" download=\"파일명.확장자\"> 파일 다운로드 </a> '} </li>\r\n                <li> {' <a href={process.env.PUBLIC_URL + \"파일경로\"} download=\"파일명.확장자\"> 파일 다운로드 </a> '} </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 파일 업로드 예시 </h2>\r\n              <div className=\"block4\" style={{ listStyle: \"none\" }}>\r\n                <li> {' <label for=\"forname\">  </label> '} </li>\r\n                <li> {' <form> '}\r\n                  <li> {' <input type=\"file\" name=\"filename\" id=\"forname\" accept=\"image/*\" /> '} </li>\r\n                </li>\r\n                <li> {' </form> '} </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈  </h3>\r\n                  <li>  </li>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <li>  </li>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> html 요소 Width, Height (나중에 좀 더 알아볼 것)  </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 Width </h2>\r\n              <li> ELEMENT.offsetWidth : element.width + padding + border + scrollbar (margin 제외) </li>\r\n              <li> ELEMENT.clientWidth : element.width + padding - scrollbar (margin, border 제외)  </li>\r\n              <li> ELEMENT.scrollWidth : element.width + padding - scrollbar, scrollbar로 감싸진 공간(margin, border 제외)  </li>\r\n              <li> ELEMENT.getBoundingClientRect() 속성 : (margin 제외) , 랜더링 크기에 비례해서 스케일을 키우면 갑이 변한다.\r\n                <div className=\"block4\">\r\n                  <li> x : 좌측 상단 x위치 </li>\r\n                  <li> y : 좌측 상단 y위치</li>\r\n                  <li> top : (margin-top) y위치 </li>\r\n                  <li> bottom : (margin-top + border + padding + element.height) y위치 </li>\r\n                  <li> left : (margin-left) x위치 </li>\r\n                  <li> right : (margin-left + border + padding + element.width) x위치</li>\r\n                  <li> width : border + padding + element.width </li>\r\n                  <li> height : border + padding + element.height </li>\r\n                </div>\r\n              </li>\r\n              <li> 1 </li>\r\n\r\n              <h2 className='h2'> 📌 Height </h2>\r\n              <li> ELEMENT.offsetHeight : element.height + padding + border + scrollbar (margin 제외) </li>\r\n              <li> ELEMENT.clientHeight : element.height + padding - scrollbar (margin, border 제외)  </li>\r\n              <li> ELEMENT.scrollHeight : element.height + padding - scrollbar, scrollbar로 감싸진 공간(margin, border 제외) </li>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1 </li>\r\n\r\n\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HtmlBasic;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst HtmlTest = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 제목 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n                            <li> 2 </li>\r\n                            <li> 3 </li>\r\n\r\n                            <h2> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className=\"block3\">\r\n                                    <li> <h3>  </h3>\r\n                                        <li>  </li>\r\n                                        <div className='block4'>\r\n                                            <li> </li>\r\n                                        </div>\r\n                                    </li> <br />\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HtmlTest;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst CssBasic = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> width(너비), height(높이) </summary>\r\n            <div className='block2'>\r\n              <h2 className='h2'> 📌 width(너비) 설명 </h2>\r\n              <li> inline css 스타일에는 적용이 되지 않는다. </li>\r\n\r\n              <h2 className='h2'> 📌 width(너비) css 스타일 </h2>\r\n                            // TODO: min-width 나중에 한번 알아볼 것 <br />\r\n              <li> min-width를 사용할 때 1px정도의 여백?이 발생하는 일이 있다 </li>\r\n              <li> min-width: 500px; <small> #박스의 최소 길이 설정  </small>  </li>\r\n              <li> max-width: 500px; <small> #박스의 최대 길이 설정  </small>  </li>\r\n              <li> min-width: 100%;  <small> #박스의 최소 길이 설정 , 부모요소를 기준 </small>  </li>\r\n              <li> max-width: 100%;  <small> #박스의 최대 길이 설정 , 부모요소를 기준 </small>  </li>\r\n              <li> width: 100px, 100% <small> # 너비 크기 설정 </small> </li>\r\n\r\n              <h2 className='h2'> 📌 height(높이) 설명 </h2>\r\n              <li> inlinecss 스타일에는 적용이 되지 않는다. </li>\r\n\r\n              <h2 className='h2'> 📌 height(높이) css 스타일 </h2>\r\n              <li> min-height: 500px; <small> #박스의 최소 길이 설정  </small>  </li>\r\n              <li> max-height: 500px; <small> #박스의 최대 길이 설정  </small>  </li>\r\n              <li> min-height: 100%;  <small> #박스의 최소 길이 설정 , 부모요소를 기준 </small>  </li>\r\n              <li> max-height: 100%;  <small> #박스의 최대 길이 설정 , 부모요소를 기준 </small>  </li>\r\n              <li> height: 100px, 100% <small> # 높이 길이 설정 </small> </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> border(테두리라인) border-radius(테두리 필렛) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 테두리의 스타일을 설정 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 - 테두리 선모양 </h2>\r\n              <li> border: 5px; <small> # [상하좌우], [ 세로 | 가로 ] , [ 위 | 가로 | 아래 ] , [ 위 | 우측 | 아래 | 좌측 ] </small> </li>\r\n              <li> border-style: none;  #선 제거 , 주변에 테두리가 존재하면 선을 그림 </li>\r\n              <li> border-style: hidden;  #선 숨김 , 주변에 테두리가 존재해도 선을 숨김</li>\r\n              <li> border-style: dotted;  #점선 , 점의 간격을 너비의 절반 </li>\r\n              <li> border-style: dashed;  #직사각형 모양 </li>\r\n              <li> border-style: solid;  #직선 </li>\r\n              <li> border-style: double;  #2줄 직선 </li>\r\n              <li> border-style: groove;  #테두리 파임 </li>\r\n              <li> border-style: ridge;  #테두리가 튀어나온 것처럼 </li>\r\n              <li> border-style: inset;  #요소가 파인것처럼 </li>\r\n              <li> border-style: outset;  #요소가 튀어나온것처럼 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 - 테두리 필렛 </h2>\r\n              <li> border-radius: 5px; <small> # [상하좌우], [ 세로 | 가로 ] , [ 위 | 가로 | 아래 ] , [ 위 | 우측 | 아래 | 좌측 ] </small> </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> margin(외부 간격), padding(내부 간격) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 margin(외부 간격) 설명 </h2>\r\n              <li> block요소에만 사용가능 </li>\r\n\r\n              <h2 className='h2'> 📌 padding(내부 간격) css 스타일 </h2>\r\n              <li> margin: 5px; <small> # [상하좌우], [ 세로 | 가로 ] , [ 위 | 가로 | 아래 ] , [ 위 | 우측 | 아래 | 좌측 ] </small> </li>\r\n              <li> margin-left: 5px; </li>\r\n              <li> margin-right: 5px; </li>\r\n              <li> margin-top: 5px; </li>\r\n              <li> margin-bottom: 5px; </li>\r\n\r\n              <h2 className='h2'> 📌 padding(내부 간격) 설명 </h2>\r\n              <li> block요소에만 사용가능 </li>\r\n\r\n              <h2 className='h2'> 📌 padding(내부 간격) css 스타일 </h2>\r\n              <li> padding: 5px; <small> # [상하좌우], [ 세로 | 가로 ] , [ 위 | 가로 | 아래 ] , [ 위 | 우측 | 아래 | 좌측 ] </small> </li>\r\n              <li> padding-left: 5px; </li>\r\n              <li> padding-right: 5px; </li>\r\n              <li> padding-top: 5px; </li>\r\n              <li> padding-bottom: 5px; </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> box-sizing(요소 크기 범위 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 요소 박스의 크기를 지정할때의 크기를 각각 따로 구분을 할지 안할지의 차이 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> box-sizing: border-box; #(요소+안쪽 여백+테두리) 크기, 일반적으로 많이 사용 </li>\r\n              <li> box-sizing: content-box; #요소 크기 + 안쪽 여백 크기 + 테두리 크기  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> overflow(흘러내림 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 블록 요소안의 컨텐츠가 블록보다 클 때 어떻게 텍스트를 보여줄지 처리하는 방법 </li>\r\n              <li> 2 </li>\r\n              <li> 3 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> overflow-x: <small> #가로만 처리</small> </li>\r\n              <li> overflow-y: <small> #세로만 처리</small> </li>\r\n              <li> overflow: visible;  <small> #블록 요소를 넘어서 보여준다.</small> </li>\r\n              <li> overflow: hidden; <small> #블록 요소보다 넘치는 부분은 숨긴다.</small> </li>\r\n              <li> overflow: clip; <small> #hidden과 비슷하지만 코드를 추가하여 어떠한 스크롤도 사용 불가</small> </li>\r\n              <li> overflow: scroll; <small> #블록요소 보다 크면 내부 스크롤을 생성한다.</small> </li>\r\n              <li> overflow: auto; <small> #알아서 처리(스크롤 바)</small> </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> text-overflow </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> overflow 속성과 white-space 속성을 같이 사용해야 된다. </li>\r\n              <li> text-overflow: ellipsis <small> # ...으로 처리한다. </small> </li>\r\n              <li> text-overflow: clip <small> # 잘라서 처리한다. </small> </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li> white-space: nowrap; </li>\r\n                    <li> overflow: hidden; </li>\r\n                    <li> text-overflow:ellipsis; </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> background(배경) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 배경을 어떻게 처리할지 선택하는 방법 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> background-repeat: no-repeat; <small> #반복하지 않음 </small> </li>\r\n              <li> background-repeat: repeat-x; <small> #가로 방향으로만 반복  </small> </li>\r\n              <li> background-repeat: repeat-y; <small> #세로 방향으로만 반복  </small> </li>\r\n              <li> background-repeat: repeat;   <small> #가로와 세로 모두 반복 </small> </li>\r\n              <li> background-repeat: space; <small> #반복할 수 있는 만큼 반복한 뒤, 남는 공간은 이미지 간의 여백으로 배분 </small> </li>\r\n              <li> background-repeat: round; <small> #반복할 수 있는 만큼 반복한 뒤, 남는 공간은 이미지 확대를 통해 배분   </small></li> <br />\r\n\r\n              <li> background-image: url(\"http:// ~~~~~.png\"); <small> # 이미지 불러오기 </small> </li>\r\n              <li> background-image: url(\"\"); <small> # 이미지 불러오기 </small> </li> <br />\r\n\r\n              <li> background-size: cover; <small> #이미지가 잘리지 않게 가로세로크기를 조정, 최대한 큰 크기의 이미지를 유지 </small>      </li>\r\n              <li> background-size: contain; <small> #요소 사이즈에 맞게 이미지의 크기를 조정  </small>       </li>\r\n              <li> background-size: auto; <small> #이미지의 원본크기를 유지 </small>       </li>\r\n              <li> background-size: 100%; </li>\r\n              <li> background-size: 200px 200px; </li> <br />\r\n\r\n              <li> background-position: top; </li>\r\n              <li> background-position: bottom; </li>\r\n              <li> background-position: left; </li>\r\n              <li> background-position: right; </li>\r\n              <li> background-position: center; </li>\r\n              <li> background-position: 50% 50%; #부모 요소의 가로 세로 비율 </li>\r\n              <li> background-position: right 50% bottom 50%;  </li> <br />\r\n\r\n              <li> 배경의 원점을 부모의 테두리,내부간격,컨텐츠에 맞출지를 정함 </li>\r\n              <li> background-origin: border-box; </li>\r\n              <li> background-origin: padding-box; </li>\r\n              <li> background-origin: content-box; </li> <br />\r\n\r\n              <li> background-color: #ffffff; #16진수로 RGB </li>\r\n              <li> background-color: red; #이름이 있는 색깔 </li>\r\n              <li> background-color: rgb(255,255,255); </li>\r\n              <li> background-color: rgba(255,255,255,0.5); # RGB + 명도 </li>\r\n              <li> background-color: hsl(50, 33%, 25%); # HSL(색조[0-360] ,채도(회색),명도)  </li> <br />\r\n\r\n              <li> 요소의 배경을 채우는 공간 설정 </li>\r\n              <li> background-clip: border-box; </li>\r\n              <li> background-clip: padding-box; </li>\r\n              <li> background-clip: content-box; <small> # padding 구역을 제외하고 배경색을 준다. </small> </li>\r\n              <li> background-clip: text; <small> #글자 뒤로 이미지를 보여줌 , color: transparent; -webkit-background-clip: text; </small>  </li> <br />\r\n\r\n              <li> 배경을 뷰포트와 요소 어디에 고정할지 선택, 뷰포트는 브라우저의 스크롤, 요소는 요소내부 스크롤 </li>\r\n              <li> background-attachment: scroll; #배경을 요소에 고정  </li>\r\n              <li> background-attachment: fixed; #배경을 뷰포트에 고정 </li>\r\n              <li> background-attachment: local; #배경을 콘텐츠에 고정</li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 선택자 ( 수정 필요 )  </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> .class{'{ }'} #클래스 , 아이디 선택자 보다 사용을 권장 </li>\r\n              <li> #id{'{ }'} #아이디 , 우선순위가 높음, 하지만 사용을 하는것이 좋지 않음 </li>\r\n              <li> 부모선택자 자식선택자{'{ }'} #자식 선택자, 공백으로 구분하며 부모아래의 모든 자식선택자에게 적용   </li>\r\n              <li> 부모선택자&gt;자식선택자{'{ }'} #직속 자식 선택자, 부모 아래 다른 선택자를 거치지 않은 선택자들에게 적용 </li>\r\n              <li> 선택자, 선택자{'{ }'} #복수 선택자, 한번에 여러개의 선택자에게 적용 </li>\r\n              <li> 선택자:[first-child,last-child,not(:lastchild), not(:first-child)]{'{ }'}, 여러개의 요소들중에 선택(가상클래스) </li>\r\n              <li> button:hover{'{ }'} #button 요소 위에 올라갈때  </li>\r\n              <li> :is(header,nav) button #header와nav태그 자식 버튼에 적용  </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> 3 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> vertical-align(수직정렬) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> inline 속성이나 table 셀에서 수직 정렬 , block요소는 되지 않음 </li>\r\n              <li> 대체적으로 이미지와 텍스트를 같은 위치에 배치하기 위해 사용된다.  </li>\r\n              <li> 텍스트에는 line-height를 주고 이미지에는 vertical-align 주고서 처리하면 거의 일치 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> vertical-align: baseline; </li>\r\n              <li> vertical-align: sub; </li>\r\n              <li> vertical-align: super; </li>\r\n              <li> vertical-align: text-top; </li>\r\n              <li> vertical-align: text-bottom; </li>\r\n              <li> vertical-align: middle; </li>\r\n              <li> vertical-align: top; # </li>\r\n              <li> vertical-align: bottom; </li>\r\n              <li> vertical-align: </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> float(띄워서배치) (정리필요)  </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> 3 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> position(요소위치) (정리 필요) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> position : static; #문서를 기준으로 배치? </li>\r\n              <li> position : relative; #본인 요소를 기준으로 배치 </li>\r\n              <li> position : absolute; #부모요소에 relative를 하고 사용하면 요소의 기준점에서 배치  </li>\r\n              <li> position : sticky; #스크롤 할 때 부모 요소의 끝까지 따라 움직인다.. </li>\r\n              <li> top: 10px; #요소를 上로 10px이동해서 배치</li>\r\n              <li> bottom: 10px; #요소를 下로 10px이동해서 배치</li>\r\n              <li> left: 10px; #요소를 左로 10px이동해서 배치</li>\r\n              <li> right: 10px; #요소를 右로 10px이동해서 배치</li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> text-decoration(텍스트장식) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> text-decoration : underline dotted red 4px; #4px의 빨간 점선 밑줄</li>\r\n              <li> text-decoration : red wavy underline; #꾸불꾸불한 밑줄 </li>\r\n              <li> text-decoration : overline; #글자 위줄에 밑줄</li>\r\n              <li> text-decoration : line-through; #글자 중앙에 밑줄</li>\r\n              <li> text-decoration : underline; #글자 아래에 밑줄</li>\r\n              <li> text-decoration : none; #밑줄을 사용하지 않음, a태그에 밑줄제거하는데 사용</li>\r\n              <li> text-decoration : blink; #브라우저에 따라 깜빡거림, 사용권장하지않음</li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> text-align(글자위치조정) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 부모 요소를 기준으로 위치를 잡음, block요소에 적용이 가능하고 정렬되는 것은 block요소안에 inline요소에적용이 가능하다. </li>\r\n              <li> block요소나 표에서 사용 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> text-align: left(default) </li>\r\n              <li> text-align: center</li>\r\n              <li> text-align: right</li>\r\n              <li> text-align: justify #가운데를 기준으로 좌우로 정렬</li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> box-shadow(그림자) ( 내용 추가 필요 ) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> box-shadow: x-position y-position blur spread color | inset  </li>\r\n              <li> blur : 값이 클수록 흐려짐 </li>\r\n              <li> spread : +(그림자확장), -(그림자축소) </li>\r\n              <li> inset : 요소 안에 그림자 생성 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> box-shadow: x만큼이동 | y만큼이동 | color; </li>\r\n              <li> box-shadow: x만큼이동 | y만큼이동 | blur-radius | color; </li>\r\n              <li> box-shadow: x만큼이동 | y만큼이동 | blur-radius | spread-radius | color; </li>\r\n              <li> box-shadow: inset | x만큼이동 | y만큼이동 | color; </li>\r\n              <li> box-shadow: 그림자1, 그림자2, ... </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> @support ( 내용 추가 필요 ) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 브라우저가 지원이 되면 css적용하는 방법 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> @supports(display:grid) {'{ css코드 }'} </li>\r\n              <li> @supports not (display:grid) {'{ css코드 }'} </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> snap-scroll (공부 필요) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 스크롤을 내리면 부드럽게 내려가는 것이 아니라 어떤 요소들에 걸리면서 내려감,\r\n                모바일? 느낌이 나게 해줌 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> 부모css에 scroll-snap-type: y mandatory; </li>\r\n              <li> 자식css에 scroll-snap-align: center; </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> aspect-ratio(화면 비율 조정) (공부 필요) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 화면 비율 조정, 이미지태그나 동영상태그에 적용 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> img {'{ aspect-ratio: 16/9; }'} </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> line-height(텍스트행사이의거리) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 선 상자의 높이를 설정 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li>  line-height: [normal , 3, 3em, 30%]; </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> list-style(목록태그설정) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 목록 태그에 적용되는 속성 , li태그에서 앞에 있는 아이콘을 설정 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> list-style: ; #이렇게 사용 </li>\r\n              <li> list-style-type: square; #사각형 </li>\r\n              <li> list-style-type: circle; #원형 </li>\r\n              <li> list-style-type: decimal; </li>\r\n              <li> list-style-type: georgian; </li>\r\n              <li> list-style-type: trad-chinese-informal; </li>\r\n              <li> list-style-type: kannada; </li>\r\n              <li> list-style-type: disc; </li>\r\n              <li> list-style-type: '-'; </li>\r\n              <li> list-style-type: \"\\1F44D\"; #이모티콘 엄지척 </li>\r\n              <li> list-style-type: none; #거의 없애는 것을 많이 사용 </li>\r\n              <li> list-style-image: url('../img/.png'); </li>\r\n              <li> list-style-position: inside; </li>\r\n              <li> list-style-position: outside; #우측에 배치 되는데 어떻게 사용할지는... </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> letter-spacing(글자사이간격조정) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 글자 가로 사이 간격 조정 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> letter-spacing: [normal , 1em , 1px, .1px , -1px] ; </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> white-space(공백문자처리) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 글자를 줄바꿈을 어떻게 할지 설정하는 속성 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> white-space: normal;  </li>\r\n              <li> white-space: nowrap; #공백유지x , 줄바꿈은 br태그에서만 일어남 </li>\r\n              <li> white-space: pre; #공백유지, 줄바꿈은 개행문자와 br태그에서만 일어남 </li>\r\n              <li> white-space: pre-wrap; #공백유지, 줄바꿈은 개행문자와 br태그에서만 일어나지만 너무 길면 줄을 바꾸어줌 </li>\r\n              <li> white-space: pre-line; #공백유지x, 줄바꿈은 개행문자와 br태그에서만 일어나지만 너무 길면 줄을 바꾸어줌</li>\r\n              <li> white-space: break-spaces; #pre-wrap과 유사, 공백유지, 공백을유지하면서도 줄바꿈 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> word-break(단어분리처리여부) (좀더 알아볼것) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> (중국 일본 한국 등)아시아권 글자에 허용 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> word-break: normal;  </li>\r\n              <li> word-break: break-all; #강제로 줄바꿈 </li>\r\n              <li> word-break: keep-all; #줄바꿀때 단어를 끊지 않음 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> word-wrap(요소를넘은글자처리여부) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> word-wrap: normal; </li>\r\n              <li> word-wrap: brea-word; #넘어가면 줄바꿈 </li>\r\n              <li> word-wrap: </li>\r\n              <li> word-wrap: </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> display(요소디스플레이속성) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> display속성에 따라 레이아웃(배치)를 하는 방법이 바뀜 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> display: inline; </li>\r\n              <li> display: block; </li>\r\n              <li> display: inline-block; </li>\r\n              <li> display: none; </li>\r\n              <li> display: visible; </li>\r\n              <li> display: flex; </li>\r\n              <li> display: hidden; </li>\r\n              <li> display:  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> transform(회전,크기,기울기,이동) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 요소를 회전,크기,기울기,이동 해주는 스타일 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> transform : rotate(0.5turn); #시계방향으로 회전</li>\r\n              <li> transform : rotate(1, 2.0, 3.0, 10deg);  </li>\r\n              <li> transform : rotateX(10deg); #x축으로 회전  </li>\r\n              <li> transform : rotateY(10deg); #y축으로 회전  </li>\r\n              <li> transform : rotateZ(10deg); #z축으로 회전  </li>\r\n              <li> transform : translate(10px, 10px); #x축,y축이동 </li>\r\n              <li> transform : translate3d(10px, 10px, 10px); #x축,y축,z축 이동  </li>\r\n              <li> transform : translateX(10px) #x축 이동 </li>\r\n              <li> transform : translateY(10px) #y축 이동 </li>\r\n              <li> transform : translateZ(10px) #z축 이동 </li>\r\n              <li> transform : scale(10, 0.1); #가로, 세로 확대 </li>\r\n              <li> transform : scale3d(2, 2, 2); #너비,깊이,높이 확대  </li>\r\n              <li> transform : scaleX(2); #너비 2배 확대  </li>\r\n              <li> transform : scaleY(2); #깊이 2배 확대  </li>\r\n              <li> transform : scaleZ(2); #높이 2배 확대  </li>\r\n              <li> transform : skew(30deg, 30deg);   </li>\r\n              <li> transform : skewX(30deg); #左上은 왼쪽으로, 右下을 오른쪽으로 기울어짐  </li>\r\n              <li> transform : skewY(30deg); #左上은 위쪽으로, 右下은 아래쪽으로 기울어짐  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> transition (애니메이션 효과) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 가만히 놔둔다고 작동이 되지는 않는다. hover 등 특수한 경우가 발생해야 된다. </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> transition [요소속성(background,border,all등등) property duration timing-function]\r\n              </li>\r\n              <li>  transition-delay   : 효과가 나타나기 전 시간</li>\r\n              <li> transition-duration  : 효과가 지속되는 시간(s,ms단위) </li>\r\n              <li> transition-property : 추가할 효과를 설정</li>\r\n              <li> transition-timine-function : 전환효과를 설정\r\n                <div className=\"block4\" style={{ listStyle: \"none\" }}>\r\n                  <li> transition-timine-function: linear 일정한 속도</li>\r\n                  <li> transition-timine-function: ease : 기본값 , 느리게 빠르게 마지막은 느리게 끝남 </li>\r\n                  <li> transition-timine-function: ease-in : 느리게시작 </li>\r\n                  <li> transition-timine-function: ease-out : 느리게 끝남</li>\r\n                  <li> transition-timine-function: ease-in-out : 느리게 시작해서 느리게 끝남 </li>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> gradient (2개 이상의 색을 배치하는 방법) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 예제 </h2>\r\n              <li> background: linear-gradient(90deg, #833ab4 33%, #fd1d1d 66%, #fcb045 100%); </li>\r\n              <li>  </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> linear-gradient(각도, color 10%, color 90% ...);\r\n                <li> 각도 = 45deg , 90deg </li>\r\n              </li>\r\n              <li> linear-gradient(회전, color 차지비율 ,color 차지비율 ...);\r\n                <li> 회전 = 0.25turn </li>\r\n              </li>\r\n              <li> linear-gradient(방향, color 차지비율 ,color 차지비율...);\r\n                <li> 방향 = [right | left | top | bottom | to 방향1 방향2 | to 방향1 ] </li>\r\n              </li>\r\n              <li> radial-gradient(모양 color, color);\r\n                <li> 필요할 때 검색해보기 </li>\r\n              </li>\r\n              <li> conic-gradient(모양 color, color);\r\n                <li> 필요할 때 검색해보기 </li>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> filter(필터효과) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> filter: url(\"filters.svg#filter-id\"); </li>\r\n              <li> filter: blur(10px); #픽셀로 흐리게 한다..</li>\r\n              <li> filter: brightness(0.5); #밝기</li>\r\n              <li> filter: contrast(100%); #대비</li>\r\n              <li> filter: drop-shadow(10px 10px 10px blue); </li>\r\n              <li> filter: grayscale(50%); #흑백</li>\r\n              <li> filter: hue-rotate(90deg); </li>\r\n              <li> filter: invert(10%); #반전</li>\r\n              <li> filter: opacity(10%); </li>\r\n              <li> filter: saturate(10%); </li>\r\n              <li> filter: sepia(10%); </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> variable(변수) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> --변수명:  ; #최소한 공백이라도 들어가여 변수 선언 </li>\r\n              <li> transform: rotate(--변수명,default값); #변수값 </li>\r\n              <li> transform: rotate(--변수명); #변수명 만 선언하고 변수값 삽입 가능 </li>\r\n              <small> {'style=\"--변수명:넣을값;'} #html에서 요소속성에 이렇게 정의하면 0이라는 값이 들어감 </small>\r\n              <li> calc(90deg * var(--i))과 같이 calc를 사용하여 값을 css 속성값에 넣어야 제대로 작동 </li>\r\n              <li> css변수에 값이 잘못들어갈경우 default 값이 들어간다. </li>\r\n              <li>  </li>\r\n              <li>  <p > 아래와 같이 변수를 정의하고 변수를 사용하는 방법 </p>\r\n                <li> {' :root { '} </li>\r\n                <li> {' --clr-color: 204, 100%, 30%; '} 또는 {' --clr-color: 204 100% 30%; '} </li>\r\n                <li> {' } '} </li>\r\n                <li> {' .class { '} </li>\r\n                <li> {' background: hsl(var(--clr-color), .95); '} 또는 {' background: hsl(var(--clr-color) / .95); '} </li>\r\n                <li> {' } '} </li>\r\n              </li>\r\n              <li>  </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> 3 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 미디어 쿼리 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 매체유형과 크기마다 반응하는 웹페이지를 만들 때 사용 </li>\r\n              <li> {'<link rel=\"\" media=\"screen and (max-width: 768px)\" href=\".css\" '} #조건에 맞으면 css 파일을 불러옴 </li>\r\n              <li> 매체 유형\r\n                <li> all, screen, tv, projection, handler(휴대용장치), speech(스크린리더), aural(화면을소리출력장치) </li>\r\n                <li> embossed(점자인쇄장치) , tty(디스플레이제한장치) , braille(점자표시장치) , width(웹페이지)  </li>\r\n                <li> height(웹페이지) , device-width , device-height, orientaion(기기화면방향, landscape, portrait)  </li>\r\n                <li> aspect-ratio(화면비율), device-aspect-ratio, color(기기의비트수?) , color-index(기기의색상수?)  </li>\r\n                <li> monochrome(흑백일때픽셀당비트수) , resolution(기기해상도) , scan(tv스캔방식), grid(기기 비트맵,그리드) </li>\r\n              </li>\r\n              <li> 화면크기\r\n                <li> 320 ~ 768 , 769 ~ 1024 , 1024 ~ </li>\r\n                <li>  </li>\r\n              </li>\r\n              <li> 논리 연산자\r\n                <li> @media only | not 미디어유형 and | , (조건문) {'{}'} </li>\r\n                <li> 논리연산자 : and, not, ,(or) , only(미디어쿼리지원하는브라우저만) </li>\r\n              </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> @media screen and (max-width: 768px){'{}'} #768px보다 화면이 작을때 적용 </li>\r\n              <li> @media screen and (min-width: 768px){'{}'} #768px보다 화면이 클때 적용 </li>\r\n              <li> @media screen (min-width:320px) and (max-width:768px){'{}'} #320~768px일때 적용 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 밴더 프리픽스(vender prefix) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <small> 크롬,사파리 </small>\r\n              <li> {' 속성: -webkit-스타일; '} </li>\r\n              <small> 파이어폭스 </small>\r\n              <li> {' 속성: -moz-transform: translate(90px,90px); '} </li>\r\n              <small> 오페라 </small>\r\n              <li> {' 속성: -o-linear-gradient(); '} </li>\r\n              <small> 익스플로러 </small>\r\n              <li> {' 속성: -ms-linear-gradient(); '} </li>\r\n              <small> 표준 </small>\r\n              <li> {' 속성: 스타일; '} </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> 3 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 기타 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> opactiry : 0.5; #요소의 명암을 조절 </li>\r\n              <li> content #html 코드 추가 </li>\r\n              <li> z-index #화면에 보일 때 우선순위 </li>\r\n              <li> font-variant #폰트의 특성 부여(첨자 등) </li>\r\n              <li> !important #우선순위 </li>\r\n              <li> text-indent:10px; #들여쓰기 </li>\r\n              <li> visibility: [visible, hidden, collapse] #레이아웃을 변경하지 않고 요소를 보이거나 숨김 </li>\r\n              <li> pointer-events: [none, auto, inherit] #이벤트 요소를 제어 </li>\r\n              <li> order : 플렉스 요소들의 순서를 설정 </li>\r\n              <li> :empty : 비어있는지 확인 </li>\r\n              <li> disabled : 사용못하게 막음 </li>\r\n\r\n              <h2 className='h2'> 📌 css 스타일 </h2>\r\n              <li> 3 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CssBasic;","import React from 'react';\r\n\r\nconst CssBasic2 = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> [1] FLEX </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> <a href=\"https://flexboxfroggy.com/#ko\" target=\"_blank\" rel=\"noopener noreferrer\"> flex코딩 게임 </a> </li>\r\n              <li> display: flex; </li>\r\n              <li> gap: 10px 5px; #flex요소들 사이에 간격을 조정할 수 있음 margin사용을 하지 않아도 됨 </li>\r\n\r\n              <h2 className='h2'> 📌 flex-wrap (정렬 라인 배치 설정) </h2>\r\n              <div className=\"block4\">\r\n\r\n                <li> flex-wrap : nowrap; <small> default, 여러 줄배치 </small> </li>\r\n                <li> flex-wrap : wrap; <small> # 1줄배치 </small> </li>\r\n                <li> flex-wrap : wrap-reverse; # 요소의 시작점과 끝점의 기준이 반대로 배치 , 좌측아래를 기준으로 배치되고\r\n                  행이 넘어가면 위로 배치 </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 flex-direction(정렬 배치 방식) </h2>\r\n              <div className=\"block4\">\r\n                <li> flex-direction: column; #플렉스요소들을 세로로 배치 </li>\r\n                <li> flex-direction: column-reverse; #플렉스요소들을 세로로 역순으로 배치 </li>\r\n                <li> flex-direction: row; #기본값??, 플렉스요소들을 가로로 배치 </li>\r\n                <li> flex-direction: row-reverse; #플렉스요소들을 가로로 역순으로 배치 </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 flex-flow(flex-wrap + flex-direction) </h2>\r\n              <div className=\"block4\">\r\n                <li> flex-flow : [ wrap | nowrap | wrap-reverse ] [ column | row | column-reverse | row-reverse ]; </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 align-content (줄 끼리의 간격) </h2>\r\n              <div className=\"block4\">\r\n                <li> flex박스나 grid에서 사용하는 배치 방법 , F,G의 줄끼리의 간격을 설정  </li>\r\n                <li> 1줄만 있으면 소용이 없음, flex-wrap: nowrap과 사용하면 무의미  </li>\r\n                <li> align-content: flex-start; <small> # 여러줄을 앞쪽에 붙여서 정렬 </small>  </li>\r\n                <li> align-content: flex-end;  <small> # 여러줄을 뒤쪽에 붙여서 정렬 </small></li>\r\n                <li> align-content: center; <small> # 여러줄을 가운데에 붙여서 정렬 </small></li>\r\n                <li> align-content: space-between; <small> # 양끝에 간격없이, 동일간격 </small>  </li>\r\n                <li> align-content: space-around; <small> # 양끝에 간격있고, 동일간격 </small>  </li>\r\n                <li> align-content: space-evenly; <small> # 양끝에서 부터 모든 간격 동일 </small>  </li>\r\n                <li> align-content: stretch; <small> # 컨테이너 전체를 n등분하여 배치 </small>  </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 justify-content (가로 1줄에서의 요소끼리의 간격) </h2>\r\n              <div className=\"block4\">\r\n                <li> flex-line을 기준으로 아이템을 정렬 </li>\r\n                <li> justify-content: center; <small> #요소를 중간에서부터 배치 </small>  </li>\r\n                <li> justify-content: flex-start,left; <small> #요소를 앞쪽에서부터 배치 </small>  </li>\r\n                <li> justify-content: flex-end,right; <small> #요소를 뒤쪽에서부터 배치 </small></li>\r\n                <li> justify-content: space-between; <small> # 양끝에 간격없이, 동일간격 </small> </li>\r\n                <li> justify-content: space-around; <small> # 양끝에 간격있고, 동일간격 </small> </li>\r\n                <li> justify-content: space-evenly; <small> # 양끝에서 부터 모든 간격 동일  </small> </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 align-items (세로 1줄에서의 요소끼리의 간격) </h2>\r\n              <div className=\"block4\">\r\n                <li> align-items: center; <small> #요소를 가운데에서부터 배치 </small> </li>\r\n                <li> align-items: flex-start; <small> #요소를 위쪽에서부터 배치 </small>  </li>\r\n                <li> align-items: flex-end;  <small> #요소를 아래쪽에서부터 배치 </small>  </li>\r\n                <li> align-items: baseline; <small> #요소를 컨테이너의 기준선(글자기준)에 배치 </small> </li>\r\n                <li> align-items: stretch; <small> #기본값, 컨테이너와 높이가 같게 변경뒤 배치 </small></li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 align-self (개별 align-items 설정) </h2>\r\n              <div className=\"block4\">\r\n                <li> 플렉스 요소에서 설정 , align-items보다 우선 순위 </li>\r\n                <li> align-self: center;</li>\r\n                <li> align-self: flex-start;</li>\r\n                <li> align-self: flex-end;  </li>\r\n                <li> align-self: baseline;  </li>\r\n                <li> align-self: stretch; <small> # default </small>  </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 flex요소 순서와 크기 </h2>\r\n              <div className=\"block4\">\r\n                <li> flex : flex-grow flex-shrink flex-basis 이와 같이 입력해서 사용 가능</li>\r\n                <li> order : 값# 플렉스요소들의 배열 순서를 바꿀 수 있음  </li>\r\n                <li> flex-grow : 플렉스요소 너비 증가 비율 </li>\r\n                <li> flex-shrink :  플렉스요소 너비 감소 비율 </li>\r\n                <li> flex-basis : 플렉스 요소를 길이를 지정 </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> [2] GRID </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> <a href=\"http://cssgridgarden.com/#ko\" target=\"_blank\" rel=\"noopener noreferrer\"> grid코딩 게임 </a> </li>\r\n\r\n              <h2 className='h2'> 📌 grid 사용 </h2>\r\n              <li> display: grid; </li>\r\n\r\n              <h2 className='h2'> 📌 grid 공간 나누기 </h2>\r\n              <li> grid-template: rows / columns <small> # [row,columns] ,    </small>  </li>\r\n              <li> grid-template-columns: 20% 20% 20% 20% 20%; </li>\r\n              <li> grid-template-columns: repeat(4, 1fr); <small> (반복횟수,간격) </small> </li>\r\n              <li> grid-template-columns: repeat(4, 1fr 5fr 10fr); </li>\r\n              <li> grid-template-rows: 20% 20% 20% 20% 20%; </li>\r\n              <li> grid-template-rows: 1fr 5fr; <small> # 공간 1칸을 1/6,5/6으로 쪼갠다 </small> </li>\r\n              <li> grid-template-rows: 100px repeat(2, 1fr 2fr) 100px; <small> # 100px 1fr 2fr 1fr 2fr 100px</small> </li>\r\n              <li> grid-auto-rows: 100px; </li>\r\n              <li> grid-auto-rows: minmax(50px, auto) <small> (최소크기, 최대크기) </small> </li>\r\n\r\n              <h2 className='h2'> 📌 grid 요소 위치 </h2>\r\n              <li> grid-column,grid-row 2개만 사용해도 충분하다.  </li>\r\n              <li> grid-column: n/m; <small> # 요소가 위치할 곳이 (n ~ m-1)번째 열 </small> </li>\r\n              <li> grid-area: n/m/o/p; <small> # 요소가 위치할 곳이 (m ~ p-1)번째 열, (n ~ o-1)번째 행 </small> </li>\r\n              <li> grid-row: n/m; <small> # 요소가 위치할 곳이 (n ~ m-1)번째 행 </small> </li>\r\n              <li> grid-column-start: n; <small> # 요소가 위치할 곳이 n번째 열 </small> </li>\r\n              <li> grid-column-start: n; grid-column-end: m; <small> # 요소가 위치할 곳이 (n ~ m-1)번째 열 </small> </li>\r\n              <li> grid-column-start: n; grid-column-end: span m; <small> # 요소가 위치할 곳이 n번째 열부터 m너비 </small> </li>\r\n              <li> grid-row-start: n; <small> # 요소가 위치할 곳이 n번째 행 </small> </li>\r\n              <li> grid-row-start: n; grid-row-end: m; <small> # 요소가 위치할 곳이 (n ~ m-1)번째 행 </small> </li>\r\n              <li> grid-row-start: n; grid-row-end: span m; <small> # 요소가 위치할 곳이 n번째 행부터 m너비 </small> </li>\r\n\r\n\r\n              <h2 className='h2'> 📌 grid 간격 </h2>\r\n              <li> grid-gap: 5px; </li>\r\n              <li> grid-column: 1/3 <small> 자식요소, 가로  </small> </li>\r\n              <li> grid-row: 1/3 <small> 자식요소, 세로  </small> </li>\r\n              <li> grid-area 2/2/3/4 <small> 자식요소, rowStart/columnStart/rowEnd/columnEnd  </small> </li>\r\n              <li> grid-area: 명칭; <small> 자식요소 </small> </li>\r\n              <li> grid-template-areas: <small> 점으로 공간차지 있는것을 표시, t대신에 grid-area요소 명칭 넣기 </small>\r\n                <li> \". t t .\" </li>\r\n                <li> \"t t t t\" </li>\r\n                <li> \"t t t t\" </li>\r\n                <li> \". t t .\" </li>\r\n              </li>\r\n\r\n              <h2 className='h2'> 📌 grid 요소 순위 </h2>\r\n              <li> order: 0 <small> # default=0 </small> </li>\r\n              <li>  </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li>\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li> display: grid; </li>\r\n                    <li> grid-template-columns: 1fr 1fr 1fr 1fr; </li>\r\n                    <li> grid-template-rows: 50px 50px; </li>\r\n                  </div>\r\n                  <div className='block4'>\r\n                    <li> display: grid; </li>\r\n                    <li> grid-template-columns: repeat(12, 1fr) </li>\r\n                  </div>\r\n                  <div className='block4'>\r\n                    <li> display: grid; </li>\r\n                    <li> grid-template-columns: repeat(4, 1fr 5fr 10fr); </li>\r\n                  </div>\r\n                  <div className='block4'>\r\n                    <li> display: grid; </li>\r\n                    <li> grid: '. . .'; </li>\r\n                    <li> gap: 16px; </li>\r\n                    <li> column-gap: 20%; </li>\r\n                  </div>\r\n                  <div className='block4'>\r\n                    <li> display: inline-grid; </li>\r\n                    <li>  </li>\r\n                  </div>\r\n                  <div className='block4'>\r\n                    <li> display: grid; </li>\r\n                    <li> grid-template-columns: repeat(4, 1fr); </li>\r\n                    <li> grid-auto-rows: 100px; </li>\r\n                  </div>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> [3] Font </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 폰트 사용 </h2>\r\n              <div className='block4'>\r\n                <li> App.css 처럼 최상단 파일에 아래와 같이 입력 </li>\r\n                <li> 사용하려는 css에 font-family: '폰트패밀리명'; 과 같이 입력해서 폰트 사용 </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 폰트 속성 </h2>\r\n              <div className='block4'>\r\n                <li> font-weight: 10; <small> 폰트굵기 설정 </small> </li>\r\n                <li> font-size: 10px, 1em, 1rem, 10%; <small> 폰트크기 설정 </small>  </li>\r\n                <li> color: red, #ffffff , rgba(255,255,255); <small> 폰트색깔 설정 </small> </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 폰트 확장자 </h2>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 URL </h2>\r\n              <div className='block4'>\r\n                <li> @font-face {\"{\"}\r\n                  <li> font-family: \"Cafe24Ssurround\"; </li>\r\n                  <li> src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2105_2@1.0/Cafe24Ssurround.woff\") format(\"woff\");</li>\r\n                  <li> font-weight: normal; </li>\r\n                  <li> font-style: normal; </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 로컬 </h2>\r\n              <div className='block4'>\r\n                <li> @font-face {\"{\"}\r\n                  <li> font-family: \"Cafe24Ssurround\"; </li>\r\n                  <li> src: url(\"../src/static/font/Cafe24Ssurround.woff\") format(\"woff\"); </li>\r\n                  <li> font-weight: normal; </li>\r\n                  <li> font-style: normal; </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/* 끝 */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CssBasic2;","import React from 'react';\r\n\r\nconst CssScss = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className=\"common_style\" >\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> scss란 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<li> 1 </li>\r\n\t\t\t\t\t\t\t<li> 2 </li>\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> Scss 문법 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩 주석 </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> /* */ 으로 사용하면된다. (Sass는 각 줄마다 *을 사용하고 *을 라인을 일치시켜주어야 한다.) </li>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩 데이터 타입 </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> Numbers, Strings, Colors, Booleans, Nulls </li>\r\n\t\t\t\t\t\t\t\t<li> Lists\r\n\t\t\t\t\t\t\t\t\t<p> (A,B,C) <small> # 이와같이 소괄호를 사용해서 묶음 </small> </p>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> Maps\r\n\t\t\t\t\t\t\t\t\t<p> (A:a, B:b, C:c) <small> # 이와 같이 소괄호에 Key-Value 형식을 사용한다. </small> </p>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩 변수 사용 </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> $VAR: red; </li>\r\n\t\t\t\t\t\t\t\t<li>  </li> <br />\r\n\r\n\t\t\t\t\t\t\t\t<li> .CLASSNAME {'{'}\r\n\t\t\t\t\t\t\t\t\t<li> width: 100%; </li>\r\n\t\t\t\t\t\t\t\t\t<li> div {'{'}\r\n\t\t\t\t\t\t\t\t\t\t<li> color: $VAR; </li>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩 중첩(Nesting) </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> .CLASSNAME {'{'}\r\n\t\t\t\t\t\t\t\t\t<li> width: 100%; </li>\r\n\t\t\t\t\t\t\t\t\t<li> div {'{'}\r\n\t\t\t\t\t\t\t\t\t\t<li> color: red; </li>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩 중첩 속성 </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> .CLASSNAME {'{'}\r\n\t\t\t\t\t\t\t\t\t<li> margin: {'{'} </li>\r\n\t\t\t\t\t\t\t\t\t<li> top: 10px; </li>\r\n\t\t\t\t\t\t\t\t\t<li> bottom: 10px; </li>\r\n\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩 상위선택자참조(Ampersand) | & </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t<li> .CLASSNAME {'{'}\r\n\t\t\t\t\t\t\t\t\t<li> width: 100%; </li>\r\n\t\t\t\t\t\t\t\t\t<li> &:hover {'{'} <small> # .CLASSNAME:hover 와 같은의미 </small>\r\n\t\t\t\t\t\t\t\t\t\t<li> color: red; </li>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩 중첩에서 벗어나는 방법 | @at-root </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t<li> .CLASSNAME {'{'}\r\n\t\t\t\t\t\t\t\t\t<li> width: 100%; </li>\r\n\t\t\t\t\t\t\t\t\t<li> @at-root .CLASSNAME1 {'{'} <small> # .CLASSNAME .CLASSNAME1 이 아니라 그냥 .CLASSNAME1이 된다. </small>\r\n\t\t\t\t\t\t\t\t\t\t<li> color: red; </li>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩  </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩  </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<li> 🚩  </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> scss 예시 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 scss 기본예시 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li> .CLASSNAME {'{'}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> width: 100px; </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> height: 100px; </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> p {'{'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> color: red; </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' &:last-child { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li> color: blue; </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t\t</div> <br />\r\n\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 scss 변수, 코드 재사용 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li> $VAR: 10px; </li>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li> <br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<li> @mixin FUNCNAME($VAR1) {'{'}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> width: $VAR1; </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> height: $VAR1; </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li> <br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<li> .CLASSNAME {'{'}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> @include FUNCNAME(100px); </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> margin: $VAR; <small> # margin: 10px;와 같음 </small> </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {'}'} </li>\r\n\t\t\t\t\t\t\t\t\t</div> <br />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CssScss;","import React from 'react';\r\n//import styled from 'styled-components';\r\n\r\nconst CssAnimation = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\" >\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 애니메이션 설명 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 한줄 코드 </h2>\r\n                        <li> animation: name | duration | timing-function | delay | iteration-count | direction | fill-mode | play-state ... </li>\r\n\r\n                        <h2 className='h2'> 📌 animation-name , 애니메이션 적용할 이름 </h2>\r\n                        <li> animation-name: 애니메이션이름; , 숫자,특수문자 시작 작동x </li>\r\n\r\n                        <h2 className='h2'> 📌 animation-duration , 애니메이션 1싸이클 주기설정 </h2>\r\n                        <li> animation-duration: 5s; </li>\r\n\r\n                        <h2 className='h2'> 📌 animation-delay , 애니메이션 초기 대기시간 </h2>\r\n                        <li> animation-delay: 0s; , 바로시작 </li>\r\n                        <li> animation-delay: 5s; , 5초뒤에 시작 </li>\r\n                        <li> animation-delay: 5ms; , 0.005초 뒤에 시작 </li>\r\n                        <li> animation-delay: -5s; , 5초뒤의 프레임부터 시작 </li>\r\n\r\n                        <h2 className='h2'> 📌 animation-iteration-count , 애니메이션 반복횟수 지정 </h2>\r\n                        <li> animation-iteration-count: 5; </li>\r\n                        <li> animation-iteration-count: infinite; </li>\r\n\r\n                        <h2 className='h2'> 📌 animation-direction , 애니메이션 종료후 방향 지정(여러번 반복할 때 사용) </h2>\r\n                        <li> animation-direction: normal; , 순방향</li>\r\n                        <li> animation-direction: alternate; , 순방향과 역방향을 번갈아가면서 진행(각각 횟수 포함)</li>\r\n                        <li> animation-direction: reverse; , 역방향 </li>\r\n                        <li> animation-direction: alternate-reverse , 역방향과 순방향을 번갈아가면서 진행 </li>\r\n\r\n                        <h2 className='h2'> 📌 animation-play-state ,  </h2>\r\n                        <li> animation-play-state: running , 재생 </li>\r\n                        <li> animation-play-state: paused , 정지 </li>\r\n\r\n                        <h2 className='h2'> 📌 animation-timing-function , 진행 가속도 설정 </h2>\r\n                        <li> animation-timing-function : linear , 속도 일정</li>\r\n                        <li> animation-timing-function : ease , 느리게 빨라졌다가 느리게 </li>\r\n                        <li> animation-timing-function : ease-in , 느리게 시작 </li>\r\n                        <li> animation-timing-function : ease-out , 느리게 끝남</li>\r\n                        <li> animation-timing-function : ease-in-out , 느리게 시작 빨라졌다가 다시 느리게 </li>\r\n                        <li> animation-timing-function : step-start , 마지막 프레임으로 이동 </li>\r\n                        <li> animation-timing-function : step-end , 첫프레임으로 이동 </li>\r\n                        <li> animation-timing-function : steps(정수,end) , 0~(끝-1) 정수값 단계로 진행되게 한다. </li>\r\n                        <li> animation-timing-function : steps(정수,start) , 1~끝 정수값 단계로 진행되게 한다. </li>\r\n                        <li> animation-timing-function : cubic-bezier(x1,y1,x2,y2) , 제어점 위치로 제어 </li>\r\n\r\n                        <h2 className='h2'> 📌 animation-fill-mode , 애니메이션 시작전이나 끝난 후 어떤 값 적용할지 </h2>\r\n                        <li> animation-fill-mode: none , 기존css스타일 유지 </li>\r\n                        <li> animation-fill-mode: forwards , 마지막 애니메이션 키프레임 css 스타일 유지 </li>\r\n                        <li> animation-fill-mode: backwards , 첫번째 애니메이션 키프레임 css 스타일 유지  </li>\r\n                        <li> animation-fill-mode: both , 시작전에는 첫 프레임, 끝난후 마지막 프레임 스타일 유지 </li>\r\n\r\n                        <h2 className='h2'> 📌 @Keyframes 애니메이션이름 </h2>\r\n                        <li> 0% ~ 100% </li>\r\n                        <li> from ~ to </li>\r\n                        <li> from ~ 0% ~ 50% ~ 100% ~ to </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 Object(태그,클래스,아이디) </h3>\r\n                                <div className='block4'>\r\n                                    <li> Object{\"{\"}\r\n                                        <li> animation-name: 애니메이션이름; </li>\r\n                                        <li> animation-duration: 5s; </li>\r\n                                        <li> animation-delay: 5s; </li>\r\n                                        <li> animation-duration: leaner; </li>\r\n                                        <li> animation-iteration-count: 5; </li>\r\n                                        <li> animation-direction: alternate; </li>\r\n                                        <li> animation-fill-mode: forwards; </li>\r\n                                    </li>\r\n                                    <li> {\"}\"} </li>\r\n                                </div>\r\n                            </div>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 Animation </h3>\r\n                                <div className='block4'>\r\n                                    <li> @Keyframes 애니메이션이름 {\"{\"}\r\n                                        <li> 0% {\"{\"}\r\n                                            <li> css코드 작성 </li>\r\n                                        </li>\r\n                                        <li> 100%{\"{\"}\r\n                                            <li> css코드 작성 </li>\r\n                                        </li>\r\n                                        <li> {\"}\"} </li>\r\n                                    </li>\r\n                                    <li> {\"}\"} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default CssAnimation;","import React from 'react';\r\n\r\nconst TCssUse = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 화면의 고정 높이 요소를 제외하고 나머지 100%화면 채우는 방법 </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 CSS </h2>\r\n            <li> height = calc(100vh - [고정높이]); </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 한줄(밑줄) 긋기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> {\" <hr size='3' color='[black,#aeaeae]' width='[10px,10%]' align='[left,rigth,center]' noshade  /> \"} </li>\r\n              <li> {' <hr size=\"3\" color=\"#aeaeae\" /> '} </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 드래그 못하게 막는 방법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 css에 작성 </h2>\r\n            <div className='block4'>\r\n              <li> -webkit-user-select:none;   </li>\r\n              <li> -moz-user-select:none; </li>\r\n              <li> -ms-user-select:none; </li>\r\n              <li> user-select:none; </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 부모보다 아래인 자식 요소에서 일부만 드래그 허용가능하게 하기 </h2>\r\n            <div className='block4'>\r\n              <li> -webkit-user-select:all;   </li>\r\n              <li> -moz-user-select:all; </li>\r\n              <li> -ms-user-select:all; </li>\r\n              <li> user-select:all; </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 부모보다 아래인 자식 요소에서 일부만 드래그 허용가능하게 하기, 텍스트만 허용 </h2>\r\n            <div className='block4'>\r\n              <li> -webkit-user-select:text;   </li>\r\n              <li> -moz-user-select:text; </li>\r\n              <li> -ms-user-select:text; </li>\r\n              <li> user-select:text; </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TCssUse;","import React from 'react';\r\nimport './CssBlurBusinessCard.css';\r\n\r\nconst CssBlurBusinessCard = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <div className=\"ex_container\">\r\n                    <div className=\"card\">\r\n                        {/* transform: rotate(calc(90deg * var(--i)));  */}\r\n                        <span> </span> {/* html 코드 : style=\"--i:0;\"*/}\r\n                        <span> </span>  {/* html 코드 : style=\"--i:0;\"*/}\r\n                        <span> </span>  {/* html 코드 : style=\"--i:0;\"*/}\r\n                        <span> </span>  {/* html 코드 : style=\"--i:0;\"*/}\r\n                        <div className=\"glass\">\r\n                            <h2> 이수경 <br /> <i> +82 010-7430-9809 </i> </h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"red\"> red </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CssBlurBusinessCard;","import React, { useEffect } from 'react';\r\nimport './CssTextAndVideo.css';\r\nconst CssTextAndVideo = (props) => {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = \"./CssTextAndVideo js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        }\r\n    }, [\"./CssTextAndVideo js\"]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <section className=\"MainContainer\" onMouseMove={(e) => {\r\n                    const dot = document.querySelector('.dot');\r\n                    dot.style.left = (e.clientX) + 'px';\r\n                    dot.style.top = e.clientY + 'px';\r\n                }}>\r\n                    <div className=\"dot\">\r\n                        123\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CssTextAndVideo;\r\n","import React from 'react';\r\n\r\nconst BootstrapBasic = (props) => {\r\n    return (\r\n        <div className=\"common_style\">\r\n\r\n\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> 설치 </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 react에 설치방법 </h2>\r\n                    <li> yarn add react-bootstrap bootstrap 혹은 npm install react-bootstrap bootstrap </li>\r\n                    <li> import 'bootstrap/dist/css/bootstrap.css' 를 최상단 컴포넌트인 index.js에 추가를 해준다. </li>\r\n                    <li> {' <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" '}\r\n                        {' integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"/> '}  </li>\r\n                    <li> 위의 코드를 index.html 의 head 부분안에 넣어준다.  </li>\r\n\r\n                    <h2 className='h2'> 📌 intellij gradle에서 사용 ( 기억이 잘 안나서 나중에 다시 사용할 때 추가하기) </h2>\r\n                    <li> {' <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU\" crossorigin=\"anonymous\"> '}\r\n                        head 태그 내부에 추가해주기 </li>\r\n\r\n                    <h2 className='h2'> 📌 js 추가 </h2>\r\n                    <li> {' <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" '}\r\n                        {' integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" '}\r\n                        {' crossorigin=\"anonymous\"></script> '} </li>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li>  </li>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> CONTAINERS </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> 1. 중앙 배치 </li>\r\n                    <li> 2. 중단점에서 알아서 크기 변경 </li>\r\n                    <li> 3. 인라인 속성 </li>\r\n                    <table border=\"1\" width=\"100%\" style={{ background: \"#ffffff\" }}>\r\n                        <colgroup>\r\n                            <col />\r\n                            <col style={{ background: \"#eaeaea\" }} />\r\n                            <col />\r\n                            <col style={{ background: \"#eaeaea\" }} />\r\n                            <col />\r\n                            <col style={{ background: \"#eaeaea\" }} />\r\n                            <col />\r\n                        </colgroup>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"1\">  </th>\r\n                                <th colSpan=\"1\"> {'<576px'} </th>\r\n                                <th colSpan=\"1\"> {'≥576px'} </th>\r\n                                <th colSpan=\"1\"> {'≥768px '} </th>\r\n                                <th colSpan=\"1\"> {'≥992px '} </th>\r\n                                <th colSpan=\"1\"> {'≥1200px '} </th>\r\n                                <th colSpan=\"1\"> {'≥1400px '} </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>.container</td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td>540px</td>\r\n                                <td>720px</td>\r\n                                <td>960px</td>\r\n                                <td>1140px</td>\r\n                                <td>1320px</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>.container-sm</td>\r\n                                <td> <b> 100% </b></td>\r\n\r\n                                <td>540px</td>\r\n                                <td>720px</td>\r\n                                <td>960px</td>\r\n                                <td>1140px</td>\r\n                                <td>1320px</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>.container-md</td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td>720px</td>\r\n                                <td>960px</td>\r\n                                <td>1140px</td>\r\n                                <td>1320px</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>.container-lg</td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td>960px</td>\r\n                                <td>1140px</td>\r\n                                <td>1320px</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>.container-xl</td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td>1140px</td>\r\n                                <td>1320px</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>.container-xxl</td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td>1320px</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>.container-fluid</td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                                <td> <b> 100% </b></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> NAV </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> .nav <small> # nav 컨테이너 </small> </li>\r\n                    <li> .nav nav-tabs <small> # nav 탭 컨테이너 </small> </li>\r\n                    <li> .nav  nav-pills <small> # nav 탭 컨테이너 </small> </li>\r\n                    <li> .nav  nav-pills  nav-fill <small> # nav 탭 컨테이너 </small> </li>\r\n                    <li> .nav-itme  </li>\r\n                    <li> .nav-link active <small> # 현재 요소 선택 </small> </li>\r\n                    <li> .nav-link disabled <small> # 현재 요소 비활성화 </small> </li>\r\n\r\n                    <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                    <li> 장점 : </li>\r\n                    <li> 단점 : </li>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <div className='block4'>\r\n                                <li>  </li>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> BORDER </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 border 방향 </h2>\r\n                    <li> .border : 전체 방향 </li>\r\n                    <li> .border-[top, end, bottom, start] : 상 우 하 좌  </li>\r\n\r\n                    <h2 className='h2'> 📌 border 색깔 </h2>\r\n                    <li> .border .border-[primary, secondary, success, danger, warning, info, light, dark, white] : 경계선의 색깔 선택</li>\r\n\r\n                    <h2 className='h2'> 📌 border 두께 </h2>\r\n                    <li> .border .border-[top, end, bottom, start]-[0~5] : 0이면 경계선을 제거 </li>\r\n\r\n                    <h2 className='h2'> 📌 border radius </h2>\r\n                    <li> .rounded-[0~3] </li>\r\n                    <li> .rounded-[top, end, bottom, start, circle, pill] : 상 우 하 좌 원형 양쪽원형 </li>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <div className='block4'>\r\n                                <li>  </li>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> BREAKPOINTS - 반응형 </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> 요소의 </li>\r\n                    <li> sm : 576이상 </li>\r\n                    <li> md : 768이상 </li>\r\n                    <li> lg : 992이상 </li>\r\n                    <li> xl : 1200이상 </li>\r\n                    <li> xxl : 1400이상 </li>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <div className='block4'>\r\n                                <li>  </li>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> ACCORDION </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> .accordion <small> # 아코디언 컨테이너 </small> </li>\r\n                    <li> .accordion-flush </li>\r\n                    <li> .accordion-item </li>\r\n                    <li> .accordion-header </li>\r\n                    <li> .accordion-button </li>\r\n                    <li> .accordion-body </li>\r\n                    <li> .accordion-collapse collapse </li>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <div className='block4'>\r\n                                <li> {' <div class=\"accordion\" id=\"accordionExample\"> '}\r\n                                    <li> {' <div class=\"accordion-item\"> '}\r\n                                        <li> {' <h2> '}\r\n                                            <li> {' <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapse-ex1\" '}\r\n                                                {' aria-expanded=\"true\" aria-controls=\"collapse-ex1\"> '} </li>\r\n                                            <li> {' 아코디언 1번 '} </li>\r\n                                            <li> {' </button> '} </li>\r\n                                        </li>\r\n                                        <li> {' </h2> '} </li>\r\n                                        <li> {' <div id=\"collapse-ex1\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\"> '}\r\n                                            <li> {' <div class=\"accordion-body\"> '}\r\n                                                <li> {' 텍스트 '} </li>\r\n                                            </li>\r\n                                            <li> {' </div> '} </li>\r\n                                        </li>\r\n                                        <li> {' </div> '} </li>\r\n                                    </li>\r\n                                    <li> {' </div> '} </li>\r\n                                </li>\r\n                                <li> {' </div> '} </li>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> COLLAPSE </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> .collapse : 내용을 숨김 </li>\r\n                    <li> .collapsing : 트랜지션 동안 적용? </li>\r\n\r\n                    <h2 className='h2'> 📌 collapse a  </h2>\r\n                    <li> data-bs-toggle=\"collapse\" : </li>\r\n                    <li> data-bs-target=\"#ID_NAME\" </li>\r\n\r\n                    <h2 className='h2'> 📌 collapse button  </h2>\r\n                    <li> data-bs-toggle=\"collapse\" </li>\r\n                    <li> data-bs-target=\"#ID_NAME\" </li>\r\n                    <li> data-bs-target=\".multi-collapse\" <small> # 여러개의 요소를 한번에 닫을 때 클래스 사용 </small> </li>\r\n\r\n                    <h2 className='h2'> 📌 collapse   </h2>\r\n                    <li>  </li>\r\n\r\n                    <h2 className='h2'> 📌 적용시킬 요소 </h2>\r\n                    <li> .collapse </li>\r\n                    <li> .collapse-horizontal <small> # 수평에서 나오게 하기 </small> </li>\r\n                    <li> id=\"ID_NAME\" </li>\r\n                    <li> class=\"multi-collapse\" <small> # 1개의 버튼으로 모두 닫을 요소 설정 </small> </li>\r\n                    <li> .show : 내용을 처음에 보여주는 설정 </li>\r\n\r\n                    <h2 className='h2'> 📌 collapse method </h2>\r\n                    <li> toggle </li>\r\n                    <li> show </li>\r\n                    <li> hide </li>\r\n                    <li> dispose </li>\r\n                    <li> getInstance </li>\r\n                    <li> getOrCreateInstance </li>\r\n\r\n                    <h2 className='h2'> 📌 collapse event </h2>\r\n                    <li> show.bs.collapse </li>\r\n                    <li> shown.bs.collapse </li>\r\n                    <li> hide.bs.collapse </li>\r\n                    <li> hidden.bs.collapse </li>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <div className='block4'>\r\n                                <li> {' <div> '}\r\n                                    <li> {' <button data-bs-toggle=\"collapse\" data-bs-target=\"#collapse-ex1\"> 버튼1 </button> '} </li>\r\n                                </li>\r\n                                <li> {' </div> '} </li>\r\n                                <li> {' <div> '}\r\n                                    <li> {' <p class=\"collapse show\" id=\"collapse-ex1\"> 테스트1 </p> '} </li>\r\n                                </li>\r\n                                <li> {' </div> '} </li>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> align-items </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> .align-items-start : </li>\r\n                    <li> .align-items-center : </li>\r\n                    <li> .align-items-end :  </li>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <div className='block4'>\r\n                                <li>  </li>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> button </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> bootstrap 버튼 예시\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 버튼 예시 </h3>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-primary\">Primary</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-secondary\">Secondary</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-success\">Success</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-danger\">Danger</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-warning\">Warning</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-info\">Info</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-light\">Light</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-dark\">Dark</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-link\">Link</button> '} </li> <br />\r\n\r\n                            <div className=\"block4\">\r\n                                <button type=\"button\" class=\"btn btn-primary\">Primary</button>\r\n                                <button type=\"button\" class=\"btn btn-secondary\">Secondary</button>\r\n                                <button type=\"button\" class=\"btn btn-success\">Success</button>\r\n                                <button type=\"button\" class=\"btn btn-danger\">Danger</button>\r\n                                <button type=\"button\" class=\"btn btn-warning\">Warning</button>\r\n                                <button type=\"button\" class=\"btn btn-info\">Info</button>\r\n                                <button type=\"button\" class=\"btn btn-light\">Light</button>\r\n                                <button type=\"button\" class=\"btn btn-dark\">Dark</button>\r\n                                <button type=\"button\" class=\"btn btn-link\">Link</button>\r\n                            </div> <br />\r\n                            <li> {' <a class=\"btn btn-primary\" href=\"#\" role=\"button\">Link</a> '} </li>\r\n                            <li> {' <button class=\"btn btn-primary\" type=\"submit\">Button</button> '} </li>\r\n                            <li> {' <input class=\"btn btn-primary\" type=\"button\" value=\"Input\"> '} </li>\r\n                            <li> {' <input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\"> '} </li>\r\n                            <li> {' <input class=\"btn btn-primary\" type=\"reset\" value=\"Reset\"> '} </li> <br />\r\n                            <div className=\"block4\">\r\n                                <a class=\"btn btn-primary\" href=\"#\" role=\"button\">Link</a>\r\n                                <button class=\"btn btn-primary\" type=\"submit\">Button</button>\r\n                                <input class=\"btn btn-primary\" type=\"button\" value=\"Input\" />\r\n                                <input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n                                <input class=\"btn btn-primary\" type=\"reset\" value=\"Reset\" />\r\n                            </div> <br />\r\n\r\n                            <li> {' <button type=\"button\" class=\"btn btn-outline-primary\">Primary</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-outline-secondary\">Secondary</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-outline-success\">Success</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-outline-danger\">Danger</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-outline-warning\">Warning</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-outline-info\">Info</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-outline-light\">Light</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-outline-dark\">Dark</button> '} </li> <br />\r\n                            <div className=\"block4\">\r\n                                <button type=\"button\" class=\"btn btn-outline-primary\">Primary</button>\r\n                                <button type=\"button\" class=\"btn btn-outline-secondary\">Secondary</button>\r\n                                <button type=\"button\" class=\"btn btn-outline-success\">Success</button>\r\n                                <button type=\"button\" class=\"btn btn-outline-danger\">Danger</button>\r\n                                <button type=\"button\" class=\"btn btn-outline-warning\">Warning</button>\r\n                                <button type=\"button\" class=\"btn btn-outline-info\">Info</button>\r\n                                <button type=\"button\" class=\"btn btn-outline-light\">Light</button>\r\n                                <button type=\"button\" class=\"btn btn-outline-dark\">Dark</button>\r\n                            </div> <br />\r\n\r\n                            <li> {' <button type=\"button\" class=\"btn btn-primary btn-lg\">Large button</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-secondary btn-lg\">Large button</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-primary btn-sm\">Small button</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-secondary btn-sm\">Small button</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-lg btn-primary\" disabled>Primary button</button> '} </li>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-secondary btn-lg\" disabled>Button</button> '} </li>\r\n                            <li> {' <a href=\"#\" class=\"btn btn-primary btn-lg disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">Primary link</a> '} </li>\r\n                            <li> {' <a href=\"#\" class=\"btn btn-secondary btn-lg disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">Link</a> '} </li> <br />\r\n                            <div className=\"block4\">\r\n                                <button type=\"button\" class=\"btn btn-primary btn-lg\">Large button</button>\r\n                                <button type=\"button\" class=\"btn btn-secondary btn-lg\">Large button</button>\r\n                                <button type=\"button\" class=\"btn btn-primary btn-sm\">Small button</button>\r\n                                <button type=\"button\" class=\"btn btn-secondary btn-sm\">Small button</button>\r\n                                <button type=\"button\" class=\"btn btn-lg btn-primary\" disabled>Primary button</button>\r\n                                <button type=\"button\" class=\"btn btn-secondary btn-lg\" disabled>Button</button>\r\n                                <a href=\"#\" class=\"btn btn-primary btn-lg disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">Primary link</a>\r\n                                <a href=\"#\" class=\"btn btn-secondary btn-lg disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">Link</a>\r\n                            </div> <br />\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> Form </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> 1 </li>\r\n                    <li> 2 </li>\r\n                    <li> 3 </li>\r\n\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li> {' <div class=\"mb-1\"> '}\r\n                                <li> {'  <label for=\"exampleFormControlInput1\" class=\"form-label\">Email address</label> '} </li>\r\n                                <li> {'  <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"default\" /> <br /> '} </li>\r\n                                <li> {'  <input type=\"email\" class=\"form-control form-control-lg\" id=\"exampleFormControlInput1\" placeholder=\"large\" /> <br /> '} </li>\r\n                                <li> {'  <input type=\"email\" class=\"form-control form-control-sm\" id=\"exampleFormControlInput1\" placeholder=\"small\" /> '} </li>\r\n                            </li>\r\n                            <li> {' </div> '} </li>\r\n                            <div className=\"block4\">\r\n                                <div class=\"mb-1\">\r\n                                    <label for=\"exampleFormControlInput1\" class=\"form-label\">Email address</label>\r\n                                    <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"default\" /> <br />\r\n                                    <input type=\"email\" class=\"form-control form-control-lg\" id=\"exampleFormControlInput1\" placeholder=\"large\" /> <br />\r\n                                    <input type=\"email\" class=\"form-control form-control-sm\" id=\"exampleFormControlInput1\" placeholder=\"small\" />\r\n                                </div>\r\n                            </div>\r\n                            <li> {'<div class=\"mb-3 row\"> '}\r\n                                <li> {'<label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Email</label> '} </li>\r\n                                <li> {'<div class=\"col-sm-10\"> '}\r\n                                    <li> {'<input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticEmail\" value=\"email@example.com\" /> '} </li>\r\n                                </li>\r\n                                <li> {'</div> '} </li>\r\n                            </li>\r\n                            <li> {'</div> '} </li>\r\n                            <div className=\"block4\">\r\n                                <div class=\"mb-3 row\">\r\n                                    <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Email</label>\r\n                                    <div class=\"col-sm-10\">\r\n                                        <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticEmail\" value=\"email@example.com\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <li> {'  <div class=\"mb-3 row\"> '}\r\n                                <li> {'<label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Password</label> '} </li>\r\n                                <li> {'<div class=\"col-sm-10\"> '}\r\n                                    <li> {' <input type=\"password\" class=\"form-control\" id=\"inputPassword\" /> '} </li>\r\n                                </li>\r\n                                <li> {'</div> '} </li>\r\n                            </li>\r\n                            <li> {'  </div> '} </li>\r\n                            <div className=\"block4\">\r\n                                <div class=\"mb-3 row\">\r\n                                    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Password</label>\r\n                                    <div class=\"col-sm-10\">\r\n                                        <input type=\"password\" class=\"form-control\" id=\"inputPassword\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> Margin, Padding, Spacing </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> 중심으로 배치되는 것은 block 요소일 때만 가능한것 같다 </li>\r\n\r\n                    <h2 className='h2'> 📌 속성 </h2>\r\n                    <li> @의 범위는 0~5 </li>\r\n                    <li> class=\"m-@\" <small> # margin: @px </small> </li>\r\n                    <li> class=\"p-@\" <small> # padding: @px </small> </li> <br />\r\n                    <li> class=\"mt-@ mb-@ ms-@ me-@\" <small> # margin-[top,bottom,left,right]: @px </small> </li>\r\n                    <li> class=\"pt-@ pb-@ ps-@ pe-@\" <small> # padding-[top,bottom,left,right]: @px </small> </li> <br />\r\n                    <li> class=\"mx-auto mx-@\" <small> #margin-[left and right]: @px  </small> </li>\r\n                    <li> class=\"px-auto px-@\" <small> #padding-[left and right]: @px  </small> </li> <br />\r\n                    <li> class=\"my-auto my-@\" <small> #margin-[top and bottom]: @px  </small> </li>\r\n                    <li> class=\"py-auto py-@\" <small> #padding-[top and bottom]: @px  </small> </li> <br />\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li>  </li>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary>  width, height </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 속성 </h2>\r\n                    <li> class=\"width: 25%\" , class=\"w-25\", class=\"w-auto\", style=\"width: 100px\" </li>\r\n                    <li> class=\"height: 25%\", class=\"h-25\", class=\"h-auto\", style=\"height: 100px\"  </li>\r\n                    <li> class=\"mw-100 mh-100 min-vw-100 min-vh-100 vw-100 vh-100\" <small> # 너비 높이 최대 최소 길이 지정 </small> </li>\r\n\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li> {' <div className=\"block4\"> '} </li>\r\n                            <li> {'     <div class=\"w-25 p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-25 p-1\"</div> '} </li>\r\n                            <li> {'     <div class=\"w-50 p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-50 p-1\"</div> '} </li>\r\n                            <li> {'     <div class=\"w-75 p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-75 p-1\"</div> '} </li>\r\n                            <li> {'     <div class=\"w-100 p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-100 p-1\"</div> '} </li>\r\n                            <li> {'     <div class=\"w-auto p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-auto p-1\"</div> '} </li>\r\n                            <li> {' </div> '} </li>\r\n                            <div className=\"block4\">\r\n                                <div class=\"w-25 p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-25 p-1\"</div>\r\n                                <div class=\"w-50 p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-50 p-1\"</div>\r\n                                <div class=\"w-75 p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-75 p-1\"</div>\r\n                                <div class=\"w-100 p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-100 p-1\"</div>\r\n                                <div class=\"w-auto p-1\" style={{ backgroundColor: \"#f00\" }}>class=\"w-auto p-1\"</div>\r\n                            </div>\r\n                            <li> {' <div style={{ height: \"300px\" }}> '} </li>\r\n                            <li> {'     <div class=\"h-25 d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"h-25\"</div> '} </li>\r\n                            <li> {'     <div class=\"h-50 d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"h-50\"</div> '} </li>\r\n                            <li> {'     <div class=\"h-75 d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"h-75\"</div> '} </li>\r\n                            <li> {'     <div class=\"h-100 d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"h-100\"</div> '} </li>\r\n                            <li> {'     <div class=\"h-auto d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"auto\"</div> '} </li>\r\n                            <li> {' </div> '} </li>\r\n                            <div className=\"block4\">\r\n                                <div style={{ height: \"300px\" }}>\r\n                                    <div class=\"h-25 d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"h-25\"</div>\r\n                                    <div class=\"h-50 d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"h-50\"</div>\r\n                                    <div class=\"h-75 d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"h-75\"</div>\r\n                                    <div class=\"h-100 d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"h-100\"</div>\r\n                                    <div class=\"h-auto d-inline-block width: 100px\" style={{ backgroundColor: \"#f00\" }}>class=\"auto\"</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> row, col 배치 </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 속성 </h2>\r\n                    <li> col은 12칸을 기준으로 한다. </li>\r\n                    <li> .row-@ <small> # 행으로 분할(세로배치) </small> </li>\r\n                    <li> .col-@ <small> # 열로 분할(가로배치) </small> </li>\r\n\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li>  </li>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> DISPLAY </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 속성 </h2>\r\n                    <li> .d-inline-block </li>\r\n                    <li> .d-block </li>\r\n                    <li> .d-inline </li>\r\n                    <li> .d-[BREAKPOINT]-[VALUE] </li>\r\n\r\n                    <h2 className='h2'> 📌 display hidden </h2>\r\n                    <li> .d-none <small> # all 숨김 </small> </li>\r\n                    <li> .d-sm-block  <small> # xs이상에서 숨김 </small> </li>\r\n                    <li> .d-md-block  <small> # sm이상에서 숨김 </small> </li>\r\n                    <li> .d-lg-block  <small> # md이상에서 숨김 </small> </li>\r\n                    <li> .d-xl-block  <small> # lg이상에서 숨김 </small> </li>\r\n                    <li> .d-xxl-block <small> # xl이상에서 숨김 </small> </li>\r\n\r\n                    <h2 className='h2'> 📌 display only hidden </h2>\r\n                    <li> .d-none <small> # all에서만 숨김 </small> </li>\r\n                    <li> .d-none .d-sm-block     <small> # xs에서만 숨김 </small> </li>\r\n                    <li> .d-sm-none .d-md-block  <small> # sm에서만 숨김 </small> </li>\r\n                    <li> .d-md-none .d-lg-block  <small> # md에서만 숨김 </small> </li>\r\n                    <li> .d-lg-none .d-xl-block  <small> # lg에서만 숨김 </small> </li>\r\n                    <li> .d-xl-none .d-xxl-block <small> # xl에서만 숨김 </small> </li>\r\n                    <li> .d-xxl-none <small> # xxl에서 숨김 </small> </li>\r\n\r\n                    <h2 className='h2'> 📌 display only visible </h2>\r\n                    <li> .d-block <small> # all 보임 </small> </li>\r\n                    <li> .d-block .d-sm-none <small> # xs에서만 보임 </small> </li>\r\n                    <li> .d-none .d-sm-block .d-md-none <small> # sm에서만 보임 </small> </li>\r\n                    <li> .d-none .d-md-block .d-lg-none <small> # md에서만 보임 </small> </li>\r\n                    <li> .d-none .d-lg-block .d-xl-none <small> # lg에서만 보임 </small> </li>\r\n                    <li> .d-none .d-xl-block .d-xxl-none <small> # xl에서만 보임 </small> </li>\r\n                    <li> .d-none .d-xxl-block <small> # xxl에서만 보임 </small> </li>\r\n\r\n                    <h2 className='h2'> 📌  </h2>\r\n                    <li>  </li>\r\n\r\n                    <h2 className='h2'> 📌  </h2>\r\n                    <li>  </li>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li>  </li>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> color </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li> 1{' <div class=\"p-3 mb-2 bg-primary text-white\">.bg-primary</div> '} </li>\r\n                            <li> 2{' <div class=\"p-3 mb-2 bg-secondary text-white\">.bg-secondary</div> '} </li>\r\n                            <li> 3{' <div class=\"p-3 mb-2 bg-success text-white\">.bg-success</div> '} </li>\r\n                            <li> 4{' <div class=\"p-3 mb-2 bg-danger text-white\">.bg-danger</div> '} </li>\r\n                            <li> 5{' <div class=\"p-3 mb-2 bg-warning text-dark\">.bg-warning</div> '} </li>\r\n                            <li> 6{' <div class=\"p-3 mb-2 bg-info text-white\">.bg-info</div> '} </li>\r\n                            <li> 7{' <div class=\"p-3 mb-2 bg-light text-dark\">.bg-light</div> '} </li>\r\n                            <li> 8{' <div class=\"p-3 mb-2 bg-dark text-white\">.bg-dark</div> '} </li>\r\n                            <li> 9{' <div class=\"p-3 mb-2 bg-white text-dark\">.bg-white</div> '} </li> <br />\r\n                            <div className=\"block4\">\r\n                                <div class=\"p-1 mb-2 bg-primary text-white\">1 .bg-primary</div>\r\n                                <div class=\"p-1 mb-2 bg-secondary text-white\">2 .bg-secondary</div>\r\n                                <div class=\"p-1 mb-2 bg-success text-white\">3 .bg-success</div>\r\n                                <div class=\"p-1 mb-2 bg-danger text-white\">4 .bg-danger</div>\r\n                                <div class=\"p-1 mb-2 bg-warning text-dark\">5 .bg-warning</div>\r\n                                <div class=\"p-1 mb-2 bg-info text-white\">6 .bg-info</div>\r\n                                <div class=\"p-1 mb-2 bg-light text-dark\">7 .bg-light</div>\r\n                                <div class=\"p-1 mb-2 bg-dark text-white\">8 .bg-dark</div>\r\n                                <div class=\"p-1 mb-2 bg-white text-dark\">9 .bg-white</div>\r\n                            </div> <br />\r\n\r\n                            <li>\r\n                                <li> 1{' <p class=\"text-primary\">.text-primary</p> '} </li>\r\n                                <li> 2{' <p class=\"text-secondary\">.text-secondary</p> '} </li>\r\n                                <li> 3{' <p class=\"text-success\">.text-success</p> '} </li>\r\n                                <li> 4{' <p class=\"text-danger\">.text-danger</p> '} </li>\r\n                                <li> 5{' <p class=\"text-warning bg-dark\">.text-warning</p> '} </li>\r\n                                <li> 6{' <p class=\"text-info bg-dark\">.text-info</p> '} </li>\r\n                                <li> 7{' <p class=\"text-light bg-dark\">.text-light</p> '} </li>\r\n                                <li> 8{' <p class=\"text-dark\">.text-dark</p> '} </li>\r\n                                <li> 9{' <p class=\"text-body\">.text-body</p> '} </li>\r\n                                <li> 10{' <p class=\"text-muted\">.text-muted</p> '} </li>\r\n                                <li> 11{' <p class=\"text-white bg-dark\">.text-white</p> '} </li>\r\n                                <li> 12{' <p class=\"text-black-50\">.text-black-50</p> '} </li>\r\n                                <li> 13{' <p class=\"text-white-50 bg-dark\">.text-white-50</p> '} </li>\r\n                            </li> <br />\r\n                            <div className=\"block4\">\r\n                                <li class=\"text-primary\">1 .text-primary</li>\r\n                                <li class=\"text-secondary\">2 .text-secondary</li>\r\n                                <li class=\"text-success\">3 .text-success</li>\r\n                                <li class=\"text-danger\">4 .text-danger</li>\r\n                                <li class=\"text-warning bg-dark\">5 .text-warning</li>\r\n                                <li class=\"text-info bg-dark\">6 .text-info</li>\r\n                                <li class=\"text-light bg-dark\">7.text-light</li>\r\n                                <li class=\"text-dark\">8 .text-dark</li>\r\n                                <li class=\"text-body\">9 .text-body</li>\r\n                                <li class=\"text-muted\">10 .text-muted</li>\r\n                                <li class=\"text-white bg-dark\">11 .text-white</li>\r\n                                <li class=\"text-black-50\">12 .text-black-50</li>\r\n                                <li class=\"text-white-50 bg-dark\">13 .text-white-50</li>\r\n                            </div> <br />\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> FLEX </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n\r\n\r\n                    <h2 className='h2'> 📌 flex display 설정 </h2>\r\n                    <div className=\"block4\">\r\n                        <li> .d-[sm,md,lg,xl,xxl]-flex <small> # flex block 컨테이너 설정 </small> </li>\r\n                        <li> .d-[sm,md,lg,xl,xxl]-inline-flex <small> # flex inline 컨테이너 설정 </small> </li>\r\n                    </div>\r\n\r\n\r\n                    <h2 className='h2'> 📌 flex-direction(정렬 배치 방식) </h2>\r\n                    <div className=\"block4\">\r\n                        <li> flex-[sm,md,lg,xl,xxl]-row <small> # 가로줄로 배치(default) </small> </li>\r\n                        <li> flex-[sm,md,lg,xl,xxl]-column <small> # 세로줄로 배치 </small> </li>\r\n                        <li> flex-[sm,md,lg,xl,xxl]-row-reverse <small> # 가로줄 역순으로 배치 </small> </li>\r\n                        <li> flex-[sm,md,lg,xl,xxl]-column-reverse <small> # 세로줄 역순으로 배치 </small> </li>\r\n                    </div>\r\n\r\n                    <h2 className='h2'> 📌 justify-content (1줄에서의 요소끼리의 간격) </h2>\r\n                    <div className=\"block4\">\r\n                        <li> flex-line을 기준으로 아이템을 정렬, flex-direction으로 세로줄로 변경되면 세로줄을 기준으로 배치 </li>\r\n                        <li> .justify-content-[sm,md,lg,xl,xxl]-start <small> #요소를 앞쪽에서부터 배치 </small> </li>\r\n                        <li> .justify-content-[sm,md,lg,xl,xxl]-end <small> #요소를 뒤쪽에서부터 배치 </small> </li>\r\n                        <li> .justify-content-[sm,md,lg,xl,xxl]-center <small> #요소를 중간에서부터 배치 </small> </li>\r\n                        <li> .justify-content-[sm,md,lg,xl,xxl]-between <small> # 양끝에 간격없이, 동일간격 </small> </li>\r\n                        <li> .justify-content-[sm,md,lg,xl,xxl]-around <small> # 양끝에 간격있고, 동일간격 </small> </li>\r\n                        <li> .justify-content-[sm,md,lg,xl,xxl]-evenly <small> # 양끝에서 부터 모든 간격 동일 </small> </li>\r\n                    </div>\r\n\r\n                    <h2 className='h2'> 📌 align-items (세로 1줄에서의 요소끼리의 간격) </h2>\r\n                    <div className=\"block4\">\r\n                        <li> .align-items-[sm,md,lg,xl,xxl]-center <small> #요소를 가운데에서부터 배치 </small> </li>\r\n                        <li> .align-items-[sm,md,lg,xl,xxl]-start <small> #요소를 위쪽에서부터 배치 </small>  </li>\r\n                        <li> .align-items-[sm,md,lg,xl,xxl]-end  <small> #요소를 아래쪽에서부터 배치 </small>  </li>\r\n                        <li> .align-items-[sm,md,lg,xl,xxl]-baseline <small> #요소를 컨테이너의 기준선(글자기준)에 배치 </small> </li>\r\n                        <li> .align-items-[sm,md,lg,xl,xxl]-stretch <small> #기본값, 컨테이너와 높이가 같게 변경뒤 배치 </small></li>\r\n                    </div>\r\n\r\n                    <h2 className='h2'> 📌 align-self (개별 align-items 설정) </h2>\r\n                    <div className=\"block4\">\r\n                        <li> 플렉스 요소에서 설정 , align-items보다 우선 순위 </li>\r\n                        <li> .align-self-[sm,md,lg,xl,xxl]-center <small> #  </small> </li>\r\n                        <li> .align-self-[sm,md,lg,xl,xxl]-flex-start <small> #  </small> </li>\r\n                        <li> .align-self-[sm,md,lg,xl,xxl]-flex-end <small> #  </small>  </li>\r\n                        <li> .align-self-[sm,md,lg,xl,xxl]-baseline <small> #  </small>  </li>\r\n                        <li> .align-self-[sm,md,lg,xl,xxl]-stretch <small> # default </small>  </li>\r\n                    </div>\r\n\r\n                    <h2 className='h2'> 📌 flex-fill </h2>\r\n                    <div className=\"block4\">\r\n                        <li> 사용 가능한 공간을 모두 차지하면서 컨테츠와 동일한 너비로 만든다고 하는데 잘 모르겠다. </li>\r\n                        <li> .flex-[sm,md,lg,xl,xxl]-fill <small> #  </small> </li>\r\n                    </div>\r\n\r\n                    <h2 className='h2'> 📌 align-content (줄 끼리의 간격) </h2>\r\n                    <div className=\"block4\">\r\n                        <li> flex박스나 grid에서 사용하는 배치 방법 , F,G의 줄끼리의 간격을 설정  </li>\r\n                        <li> 1줄만 있으면 소용이 없음, flex-wrap: nowrap과 사용하면 무의미  </li>\r\n                        <li> align-content-[sm,md,lg,xl,xxl]-start; <small> # 여러줄을 앞쪽에 붙여서 정렬 </small>  </li>\r\n                        <li> align-content-[sm,md,lg,xl,xxl]-end;  <small> # 여러줄을 뒤쪽에 붙여서 정렬 </small></li>\r\n                        <li> align-content-[sm,md,lg,xl,xxl]-center; <small> # 여러줄을 가운데에 붙여서 정렬 </small></li>\r\n                        <li> align-content-[sm,md,lg,xl,xxl]-between; <small> # 양끝에 간격없이, 동일간격 </small>  </li>\r\n                        <li> align-content-[sm,md,lg,xl,xxl]-around; <small> # 양끝에 간격있고, 동일간격 </small>  </li>\r\n                        <li> align-content-[sm,md,lg,xl,xxl]-evenly; <small> # 양끝에서 부터 모든 간격 동일 </small>  </li>\r\n                        <li> align-content-[sm,md,lg,xl,xxl]-stretch; <small> # 컨테이너 전체를 n등분하여 배치 </small>  </li>\r\n                    </div>\r\n\r\n                    <h2 className='h2'> 📌 flex-wrap (정렬 라인 배치 설정) </h2>\r\n                    <div className=\"block4\">\r\n                        <li> flex-[sm,md,lg,xl,xxl]-nowrap <small> # default, 1줄배치 </small> </li>\r\n                        <li> flex-[sm,md,lg,xl,xxl]-wrap <small> # 여러 줄배치 </small> </li>\r\n                        <li> flex-[sm,md,lg,xl,xxl]-reverse; <small> # 요소의 시작점과 끝점의 기준이 반대로 배치 , 좌측아래를 기준으로 배치되고\r\n                            행이 넘어가면 위로 배치 </small> </li>\r\n                    </div>\r\n\r\n                    <h2 className='h2'> 📌 flex-grow, flex-shrink </h2>\r\n                    <div className=\"block4\">\r\n                        <li> .flex-[sm,md,lg,xl,xxl]-grow-[0,1] <small> # 플렉스 요소 확장비율 </small> </li>\r\n                        <li> .flex-[sm,md,lg,xl,xxl]-shrink-[0,1] <small> # 플렉스 요소 축소비율 </small> </li>\r\n                    </div>\r\n\r\n\r\n                    <h2 className='h2'> 📌 order </h2>\r\n                    <div className=\"block4\">\r\n                        <li> .order-[sm,md,lg,xl,xxl]-[0~5] </li>\r\n                        <li> .order-[sm,md,lg,xl,xxl]-first </li>\r\n                        <li> .order-[sm,md,lg,xl,xxl]-last </li>\r\n                    </div>\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> flex </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 속성 </h2>\r\n                    <li> justify-content-[[],sm,md,lg,xl,xxl]-[start,end,center,between,around,evenly] <small>  </small> </li>\r\n                    <li> align-items-[start,end,center,baseline,stretch] <small>  </small> </li>\r\n                    <li> align-self-[[],sm,md,lg,xl,xxl]-[start,end,center,baseline,stretch] <small>  </small> </li>\r\n                    <li> flex-[grow,shrink]-[0,1] <small>  </small> </li>\r\n                    <li> me-auto<small> # me-auto는 첫번째 요소에 선언하고 선언한 요소를 왼쪽에 놓고 나머지는 오른쪽으로 보냄 </small> </li>\r\n                    <li> ms-auto<small> # ms-auto는 마지막 요소에 선언하고 선언한 요소를 우측에 놓고 나머지는 왼쪽으로 보냄 </small> </li>\r\n                    <li> mb-auto<small> # mb-auto는 제일 윗 요소에 선언하고 선언한 요소를 위에 놓고 나머지는 아래쪽으로 보냄 </small> </li>\r\n                    <li> mt-auto<small> # mt-auto는 제일 아랫 요소에 선언하고 선언한 요소를 아래에 놓고 나머지는 위쪽으로 보냄 </small> </li>\r\n                    <li> flex-[[],sm,md,lg,xl,xxl]-[nowrap,-wrap,wrap-reverse] <small> # </small> </li>\r\n                    <li> order-[[],sm,md,lg,xl,xxl]-[first,0,1,2,3,4,5,last] <small> # 순서 변경 </small> </li>\r\n                    <li> align-content-[[],sm,md,lg,xl,xxl]-[start,end,center,around,stretch] <small> # 내용 정렬 </small> </li>\r\n\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li> {'  <div class=\"d-flex bd-highlight mb-3\"> '}\r\n                                <li> {' <div class=\"me-auto p-2 bd-highlight\">Flex item<2/div> '} </li>\r\n                                <li> {' <div class=\"p-2 bd-highlight\">Flex item3</div> '} </li>\r\n                                <li> {' <div class=\"p-2 bd-highlight\">Flex item4</div> '} </li>\r\n                            </li>\r\n                            <li> {'  </div> '} </li>\r\n\r\n                            <li> {'  <div class=\"d-flex bd-highlight mb-3\"> '}\r\n                                <li> {'<div class=\"p-2 bd-highlight\">Flex item1</div> '} </li>\r\n                                <li> {'<div class=\"p-2 bd-highlight\">Flex item2</div> '} </li>\r\n                                <li> {'<div class=\"ms-auto p-2 bd-highlight\">Flex item3</div> '} </li>\r\n                            </li>\r\n                            <li> {'  </div> '} </li> <br />\r\n                            <div className=\"block4\">\r\n\r\n                                <div class=\"d-flex bd-highlight mb-3\">\r\n                                    <div class=\"me-auto p-2 bd-highlight\">Flex item2</div>\r\n                                    <div class=\"p-2 bd-highlight\">Flex item3</div>\r\n                                    <div class=\"p-2 bd-highlight\">Flex item4</div>\r\n                                </div>\r\n\r\n                                <div class=\"d-flex bd-highlight mb-3\">\r\n                                    <div class=\"p-2 bd-highlight\">Flex item1</div>\r\n                                    <div class=\"p-2 bd-highlight\">Flex item2</div>\r\n                                    <div class=\"ms-auto p-2 bd-highlight\">Flex item3</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <li> {'  <div class=\"d-flex align-items-start flex-column bd-highlight mb-3\" style={{ height: \"150px\" }}> '}\r\n                                <li> {' <div class=\"mb-auto p-2 bd-highlight\">Flex item1</div> '} </li>\r\n                                <li> {' <div class=\"p-2 bd-highlight\">Flex item2</div> '} </li>\r\n                                <li> {' <div class=\"p-2 bd-highlight\">Flex item3</div> '} </li>\r\n                            </li>\r\n                            <li> {'  </div> '} </li>\r\n                            <li> {'  '} </li>\r\n                            <li> {'  <div class=\"d-flex align-items-end flex-column bd-highlight mb-3\" style={{ height: \"150px\" }}> '}\r\n                                <li> {' <div class=\"p-2 bd-highlight\">Flex item4</div> '} </li>\r\n                                <li> {' <div class=\"p-2 bd-highlight\">Flex item5</div> '} </li>\r\n                                <li> {' <div class=\"mt-auto p-2 bd-highlight\">Flex item6</div> '} </li>\r\n                            </li>\r\n                            <li> {'  </div> '} </li> <br />\r\n\r\n                            <div className=\"block4\">\r\n                                <div class=\"d-flex align-items-start flex-column bd-highlight mb-3\" style={{ height: \"150px\" }}>\r\n                                    <div class=\"mb-auto p-2 bd-highlight\">Flex item1</div>\r\n                                    <div class=\"p-2 bd-highlight\">Flex item2</div>\r\n                                    <div class=\"p-2 bd-highlight\">Flex item3</div>\r\n                                </div>\r\n\r\n                                <div class=\"d-flex align-items-end flex-column bd-highlight mb-3\" style={{ height: \"150px\" }}>\r\n                                    <div class=\"p-2 bd-highlight\">Flex item4</div>\r\n                                    <div class=\"p-2 bd-highlight\">Flex item5</div>\r\n                                    <div class=\"mt-auto p-2 bd-highlight\">Flex item6</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> position </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> position-[static,relative,absolute,fixed,sticky] </li>\r\n                    <li> [top,start,bottom,end]-[0,50,100] <small> # top,left,bottom,right </small> </li>\r\n                    <li> translate-middle-[x,y] <small> # absolute에서 요소에 translate X,Y 50%를 준다 </small> </li>\r\n\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 </h3>\r\n                            <li> {'<div class=\"position-relative\" style={{ height: \"300px\" }}> '}\r\n                                <li> {'    <div class=\"position-absolute top-0 start-0\">1</div> '} </li>\r\n                                <li> {'    <div class=\"position-absolute top-0 end-0\">2</div> '} </li>\r\n                                <li> {'    <div class=\"position-absolute top-50 start-50\">3</div> '} </li>\r\n                                <li> {'    <div class=\"position-absolute bottom-50 end-50\">4</div> '} </li>\r\n                                <li> {'    <div class=\"position-absolute bottom-0 start-0\">5</div> '} </li>\r\n                                <li> {'    <div class=\"position-absolute bottom-0 end-0\">6</div> '} </li>\r\n                            </li>\r\n                            <li> {'</div> '} </li> <br />\r\n                            <div className=\"block4\">\r\n                                <div class=\"position-relative\" style={{ height: \"300px\" }}>\r\n                                    <div class=\"position-absolute top-0 start-0\">1</div>\r\n                                    <div class=\"position-absolute top-0 end-0\">2</div>\r\n                                    <div class=\"position-absolute top-50 start-50\">3</div>\r\n                                    <div class=\"position-absolute bottom-50 end-50\">4</div>\r\n                                    <div class=\"position-absolute bottom-0 start-0\">5</div>\r\n                                    <div class=\"position-absolute bottom-0 end-0\">6</div>\r\n                                </div>\r\n                            </div>\r\n                            <li> {' <button type=\"button\" class=\"btn btn-primary position-relative mx-5\"> '}\r\n                                <li> {'     Mails <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">+99 <span class=\"visually-hidden\">unread messages</span></span> '} </li>\r\n                            </li>\r\n                            <li> {' </button> '} </li> <br />\r\n                            <li> {' <button type=\"button\" class=\"btn btn-dark position-relative  mx-5\"> '}\r\n                                <li> {'     Marker <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"position-absolute top-100 start-50 translate-middle mt-1 bi bi-caret-down-fill\" fill=\"#212529\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" /></svg> '} </li>\r\n                            </li>\r\n                            <li> {' </button> '} </li> <br />\r\n                            <li> {' <button type=\"button\" class=\"btn btn-primary position-relative mx-5\"> '}\r\n                                <li> {'     Alerts <span class=\"position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-2\"><span class=\"visually-hidden\">unread messages</span></span> '} </li>\r\n                            </li>\r\n                            <li> {' </button> '} </li> <br />\r\n                            <li>  </li> <br />\r\n                            <div className=\"block4\">\r\n                                <button type=\"button\" class=\"btn btn-primary position-relative mx-5\">\r\n                                    Mails <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">+99 <span class=\"visually-hidden\">unread messages</span></span>\r\n                                </button>\r\n\r\n                                <button type=\"button\" class=\"btn btn-dark position-relative  mx-5\">\r\n                                    Marker <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"position-absolute top-100 start-50 translate-middle mt-1 bi bi-caret-down-fill\" fill=\"#212529\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" /></svg>\r\n                                </button>\r\n\r\n                                <button type=\"button\" class=\"btn btn-primary position-relative mx-5\">\r\n                                    Alerts <span class=\"position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-2\"><span class=\"visually-hidden\">unread messages</span></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n            <details>\r\n                <summary> progress , 막대 진행바 </summary>\r\n                <div className='block2'>\r\n\r\n                    <h2 className='h2'> 📌 설명 </h2>\r\n                    <li> 1. {' class=\"progress-bar\" role=\"progressbar\" style={{ width: \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\" '} </li>\r\n                    <li> 2.  class=\"progress-bar w-25\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\" </li>\r\n                    <li> 3. {' class=\"progress\" style={{ height: \"30px\" }} '} <small> # 막대 진행바의 높이는 이와 같이 사용하면 된다. </small>  </li> <br />\r\n                    <li> 4. 막대바에 색깔 넣는 방법 </li>\r\n                    <div className=\"block4\" style={{ listStyle: \"none\" }}>\r\n                        <li> {' <div class=\"progress-bar w-25 bg-primary\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> '} </li>\r\n                        <li> {' <div class=\"progress-bar w-25 bg-secondary\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> '} </li>\r\n                        <li> {' <div class=\"progress-bar w-25 bg-danger\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> '} </li>\r\n                    </div>\r\n                    <li> 5. class=\"progress-bar progress-bar-striped w-25 bg-danger\" role=\"progressbar\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\" </li>\r\n                    <li> 6. class=\"progress-bar progress-bar-striped progress-bar-animated w-75\" </li>\r\n\r\n\r\n                    <h2 className='h2'> ✔ 예시 </h2>\r\n                    <li> 소제목\r\n                        <div className='block3'>\r\n                            <h3 className='h3'> 🎈 react 기준이므로 style은 바꾸어야 한다. </h3>\r\n                            <li> {' <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"50%\" }} aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"75%\" }} aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar w-25\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\" style={{ height: \"30px\" }}> '}\r\n                                <li> {'   <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">3</div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar w-25 bg-primary\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">4</div> '} </li>\r\n                                <li> {'   <div class=\"progress-bar w-25 bg-secondary\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">4</div> '} </li>\r\n                                <li> {'   <div class=\"progress-bar w-25 bg-danger\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">4</div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar progress-bar-striped w-25 bg-danger\" role=\"progressbar\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">5</div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <li> {'     <div class=\"progress\"> '}\r\n                                <li> {'   <div class=\"progress-bar progress-bar-striped progress-bar-animated w-75\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 6 </div> '} </li>\r\n                            </li>\r\n                            <li> {'     </div> <br /> '} </li>\r\n                            <div className=\"block4\">\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                </div> <br />\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div>\r\n                                </div> <br />\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"50%\" }} aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div>\r\n                                </div> <br />\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"75%\" }} aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div>\r\n                                </div> <br />\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div>\r\n                                </div> <br />\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar w-25\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">1 2</div>\r\n                                </div> <br />\r\n                                <div class=\"progress\" style={{ height: \"30px\" }}>\r\n                                    <div class=\"progress-bar\" role=\"progressbar\" style={{ width: \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">3</div>\r\n                                </div> <br />\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar w-25 bg-primary\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">4</div>\r\n                                    <div class=\"progress-bar w-25 bg-secondary\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">4</div>\r\n                                    <div class=\"progress-bar w-25 bg-danger\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">4</div>\r\n                                </div> <br />\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar progress-bar-striped w-25 bg-danger\" role=\"progressbar\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">5</div>\r\n                                </div> <br />\r\n                                <div class=\"progress\">\r\n                                    <div class=\"progress-bar progress-bar-striped progress-bar-animated w-75\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 6 </div>\r\n                                </div> <br />\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                </div>\r\n            </details>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default BootstrapBasic;","import React from 'react';\r\n\r\nconst BootstrapTable = (props) => {\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 테이블 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> ✔ 기본 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈기본형식 </h3>\r\n                                <div className=\"block4\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">NO</th>\r\n                                                <th scope=\"col\">NAME</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th scope=\"row\">1</th>\r\n                                                <td>이름2</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className='block4'>\r\n                                    <li> {' <table class=\"table\"> '}\r\n                                        <li> {'   <thead> '}\r\n                                            <li> {'     <tr> '}\r\n                                                <li> {'       <th scope=\"col\">NO</th> '} </li>\r\n                                                <li> {'       <th scope=\"col\">NAME</th> '} </li>\r\n                                            </li>\r\n                                            <li> {'     </tr> '} </li>\r\n                                        </li>\r\n                                        <li> {'   </thead> '} </li>\r\n                                        <li> {'   <tbody> '}\r\n                                            <li> {'     <tr> '}\r\n                                                <li> {'       <th scope=\"row\">1</th> '} </li>\r\n                                                <li> {'       <td>이름2</td> '} </li>\r\n                                            </li>\r\n                                            <li> {'     </tr> '} </li>\r\n                                        </li>\r\n                                        <li> {'   </tbody> '} </li>\r\n                                    </li>\r\n                                    <li> {' </table> '} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                        <h2 className='h2'> 📌 테이블 배경색 </h2>\r\n                        <div className=\"block3\">\r\n                            <li> table,tr,td 태그에 선언  </li>\r\n                            <li> 1.  class=\"table-primary\" </li>\r\n                            <li> 2.  class=\"table-secondary\" </li>\r\n                            <li> 3.  class=\"table-success\" </li>\r\n                            <li> 4.  class=\"table-danger\" </li>\r\n                            <li> 5.  class=\"table-warning\" </li>\r\n                            <li> 6.  class=\"table-info\" </li>\r\n                            <li> 7.  class=\"table-light\" </li>\r\n                            <li> 8.  class=\"table-dark\" </li> <br />\r\n                            <details>\r\n                                <summary> 테이블 배경색 예시</summary>\r\n                                <div className=\"block4\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">NO</th>\r\n                                                <th scope=\"col\">NAME</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th scope=\"row\">1</th>\r\n                                                <td class=\"table-primary\">.table-primary</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td class=\"table-secondary\">.table-secondary</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td class=\"table-success\">.table-success</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">4</th>\r\n                                                <td class=\"table-danger\">.table-danger</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">5</th>\r\n                                                <td class=\"table-warning\">.table-warning</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">6</th>\r\n                                                <td class=\"table-info\">.table-info</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">7</th>\r\n                                                <td class=\"table-light\">.table-light</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">8</th>\r\n                                                <td class=\"table-dark\">.table-dark</td>\r\n                                            </tr>\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </details>\r\n                        </div>\r\n\r\n\r\n                        <h2 className='h2'> 📌 테이블 줄무늬 </h2>\r\n                        <div className=\"block3\">\r\n                            <li> table태그에 선언, 아래 태그 혼합 가능 </li>\r\n                            <li> class=\"table [table-striped] [table-dark, table-success]\" </li>\r\n                            <li> class=\"table table-hover\" </li>\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n\r\n                        <h2 className='h2'> 📌 일부 행이나 열에 강조표시 </h2>\r\n                        <li> tr이나 td태그에 선언해서 사용 </li>\r\n                        <li> class=\"table-active\" </li>\r\n\r\n                        <h2 className='h2'> 📌 테이블 border </h2>\r\n                        <li> class=\"table table-bordered\" </li>\r\n                        <li> class=\"table table-bordered border-primary <small> # border에서 색 효과를 준다. </small> </li>\r\n                        <li> class=\"table table-borderless\" <small> # 모든 선을 제거 </small> </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌 테이블 셀에 패딩 간격 줄이기 </h2>\r\n                        <li> class=\"table table-sm\" </li>\r\n\r\n                        <div className=\"block3\"> </div>\r\n                        <h2 className='h2'> 📌 테이블 셀의 줄의 위치 변경 </h2>\r\n                        <li> table-responsive에서만 사용되는 것인지는 모르지만 table,tr,td태그에 선언하여 사용(상속?이 되는것 같다) </li>\r\n                        <li> 셀에서의 내용들의 y축의 위치를 잡는 방법 </li>\r\n                        <li> class=\"align-middle\" </li>\r\n                        <li> class=\"align-bottom\" </li>\r\n                        <li> class=\"align-top\" </li>\r\n\r\n                        <h2 className='h2'> 📌 테이블 thead와 테이블 tfoot </h2>\r\n                        <div className=\"block3\">\r\n                            <li> thead class=\"table-light\" </li>\r\n                            <li> thead class=\"table-dark\" </li>\r\n                        </div>\r\n\r\n                        <h2 className='h2'> 📌 테이블 caption </h2>\r\n                        <div className=\"block3\">\r\n                            <li> table class=\"table caption-top\" <small> # caption을 상단으로, 기본값 하단 </small> </li>\r\n                        </div>\r\n\r\n                        <h2 className='h2'> 📌 테이블 responsive  </h2>\r\n                        <div className=\"block3\">\r\n                            <li> 테이블 태그의 부모 요소에 선언 </li>\r\n                            <li> class=\"table-responsive-[sm-md-lg-xl-xxl]\" </li>\r\n                        </div>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BootstrapTable;\r\n\r\n","import React from 'react';\r\n\r\nconst TypeScriptBasic = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] tsconfig.js </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 없어도 .ts파일 사용가능 </li>\r\n              <li> 한번에 여러개의 파일에 설정이 가능하므로 만들어서 사용 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설정 명령어 </h2>\r\n            <div className='block4'>\r\n              <li> <a href=\"https://velog.io/@sooran/tsconfig.json-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%95%8C%EA%B3%A0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\r\n              \" target=\"_blank\" rel=\"noopener noreferrer\"> 나중에 다시 참고 </a> </li>\r\n              <li> {\"{\"}\r\n                <li> \"compilerOptions\": {\"{\"}\r\n                  <li> \"baseUrl\": \"src\", </li>\r\n                  <li> \"paths\": {\"{\"}\r\n                    <li> \"app/*\" : [\"app/*\"], </li>\r\n                    <li> \"config/*\" : [\"config/*\"], </li>\r\n                    <li> \"lib/*\" : [\"lib/*\"], </li>\r\n                    <li> \"tests/*\" : [\"tests/*\"], </li>\r\n                  </li>\r\n                  <li> {\"},\"} </li>\r\n                  <li> \"target\": \"es5\", <small> es5로 컴파일 </small> </li>\r\n                  <li> \"module\": \"es2015\", <small> require문법(\"commonjs\"), import문법(\"es2015\",esnext\")을 사용할지 설정 </small> </li>\r\n                  <li> \"allowJs\": true, <small> js파일 ts에서 import로 사용가능 여부 </small> </li>\r\n                  <li> \"checkJs\": true, <small> js파일에서 에러체크 여부 </small> </li>\r\n                  <li> \"jsx\": \"preserve\", <small> tsx에서 jsx로 어떻게 컴파일할지, 'preserve', 'react-native', 'react' </small> </li>\r\n                  <li> \"declaration\": true, <small> 컴파일할 때 .d.ts파일도 자동생성 </small> </li>\r\n                  <li> \"removeComments\": true, <small> 컴파일시 주석제거 </small> </li>\r\n                  <li> \"strict\": true, <small> strict, noimplicit 등 관련모드 사용 </small> </li>\r\n                  <li> \"outFile\": \"./\", <small> 모든 ts파일을 js파일 1개로 컴파일, module: none,amd,system일때 사용가능 </small> </li>\r\n                  <li> \"outDir\": \"./\", <small> js파일 output 경로 </small> </li>\r\n                  <li> \"rootDir\": \"./\", <small> root경로 output 경로 설정 </small> </li>\r\n                  <li> \"emitDeclarationOnly\": true, </li>.\r\n                  <li> \"isolatedModules\": true, <small> 각각의 소스코드 파일을 모듈(import,export)로 만들게 강제한다. 안하면 에러발생?,\r\n                    babel같이 외부도구를 사용하면 true로 설정하는 것이 좋다. </small> </li>\r\n                  <li> \"noImplicitAny\": true, <small> any라는 타입이 발생할 경우 에러를 띄워준다. </small> </li>\r\n                  <li> \"strictNullChecks\": true, <small> null,undefined 타입에 조작하면 에러를 띄워준다. </small> </li>\r\n                  <li> \"strictFunctionTypes\": true, <small> 함수 파라미터 타입 강하게 검사 </small> </li>\r\n                  <li> \"noImplicitThis\": true, <small> this 키워드가 any일 경우 에러 발생 </small> </li>\r\n                  <li> \"alwaysStrict\": true, <small> 자바스크립트 use strict 모드 사용 </small> </li>\r\n                  <li> \"noUnusedLocals\": true, <small> 쓰지 않는 지역변수 있으면 에러 발생 </small> </li>\r\n                  <li> \"noUnusedParameters\": true, <small> 쓰지 않는 파라미터 있으면 에러 발생 </small> </li>\r\n                  <li> \"noImplicitReturns\": true, <small> 함수에 리턴이 없으면 에러 발생 </small> </li>\r\n                  <li> \"noFallthroughCasesInSwitch\": true, <small> 스위치 문에 이상이 있으면 에러 발생 </small> </li>\r\n                  <li> \"strictPropertyInitialization\": true <small> 클래스 구조체 타입 강하게 검사 </small> </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> {\"},\"} </li>\r\n                <li> \"files\": [\r\n                  <li> \"원하는파일.ts\", <small> 이와 같이 특정 파일에만 처리가능하다. </small> </li>\r\n                  <li> \"원하는파일.ts\"  </li>\r\n                </li>\r\n                <li> ] </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 설치 및 실행 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> npm i --save-dev install -g typescript </li>\r\n            <li> npm create react-app 프로젝트명 --template typescript </li>\r\n            <li> tsconfig.json\r\n              <div className=\"block4\">\r\n                <li> target : 컴파일 환경 설정(es5, es6) </li>\r\n                <li> module : 컴파일된 코드가 어떤 모듈을 사용하게 할지, 설정에 따라서\r\n                  컴파일된 코드가 변경이 된다. </li>\r\n                <li> strict : 모든 타입을 체킹한다. </li>\r\n                <li> 이외에도 여러가지 설정이 존재 </li>\r\n              </div>\r\n            </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 컴파일을 하게 되면 타입을 선언한 코드들은 전부 사라짐 </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 타입스크립트 기본 문법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 타입 </h2>\r\n            <div className=\"block4\">\r\n              <li> string </li>\r\n              <li> boolean </li>\r\n              <li> number[] </li>\r\n              <li> string[] </li>\r\n              <li> any 혹은 any[] </li>\r\n              <li> string | number </li>\r\n              <li> string | undefined </li>\r\n              <li> number | null </li>\r\n              <li> 특정 값 <small> # 이외의 값이 들어오면 에러 </small> </li>\r\n              <li> 'red' | 'yellow' | 'orange' </li>\r\n              <li> (x: number, y:number) : number </li>\r\n              <li> interface 인터페이스명 {\" { 키 : 타입, 키: 타입} \"} </li>\r\n              <li> readonly 타입 <small> # 읽기 전용 </small> </li>\r\n              <li> ReadonlyArray{\"<타입>\"} <small> # 읽기 전용 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> const 변수 : 타입 = \"값\"; </li>\r\n              <li> function(매개변수: 타입,매개변수: 타입):리턴타입 ; </li>\r\n              <li> const 배열명: 인터페이스명[]  </li>\r\n              <li> const tuple: [타입,타입]; , tuple=[타입값,타입값] </li>\r\n              <li> 단, tuple의 할당된 타입들은 push를 사용했을때 가능하다. </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 타입스크립트 React.FC 와 function 방식 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> props 타입을 제너릭으로 넣어서 사용가능 </li>\r\n            <li> defaultProps에 기본값을 넣어도 작동이 안됨, {\"{변수,mark='!'를 넣어주어야 한다.}\"} </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈 React.FC </h3>\r\n              <div className='block4'>\r\n                <li> interface 컴포넌트Props {\"{ param: 타입 }\"} </li>\r\n                <li> const 컴포넌트: React.FC{\"<컴포넌트Props> = ({param}) => { return }\"} </li>\r\n                <li>  </li>\r\n              </div>\r\n              <h3 className='h3'> 🎈 React.FC 말고 function방식 </h3>\r\n              <div className='block4'>\r\n                <li> interface 컴포넌트Props {\"{ param: 타입 }\"} </li>\r\n                <li> function 컴포넌트{\"{param}:컴포넌트Props\"} {\"{return}\"} </li>\r\n                <li> 컴포넌트.defaultProps = {\"{param: '!', }; \"} </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> HTMLInputElement </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 자바스크립트에서 사용하는 document.getElements 관련을 사용할 때 처리방법  </li>\r\n              <li> 변수로 한번 만들고 사용해야 하는데 아직 잘 몰르겠다. </li>\r\n              <li> let rememberCheckbox: any = document.getElementsByName(\"rememberCheckbox\") </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypeScriptBasic;","import React from 'react';\r\nimport GridTableCountNRow100px from '../../Templates/Grid/GridTableCountNRow100px';\r\nimport GridColumn from '../../Templates/Grid/GridColumn';\r\nimport GridRow from '../../Templates/Grid/GridRow';\r\nimport GridField from '../../Templates/Grid/GridField';\r\n\r\nconst JavaScriptBasic = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 자바스크립트란 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 호이스팅 : JS에서는 변수나 함수를 호출하는 코드보다 아래에 변수나 함수의 정의를\r\n                적어놓아도 JS엔진이 평가 단계에서 선언된 값을 찾아준다. </li>\r\n              <li> 스코프 체인 : 외부에서는 내부함수의 값에 접근 할 수 없다.(당연한 말이다.) </li>\r\n              <li> 메소드는 blocking 싱글 쓰레드로 작동이된다. </li>\r\n              <li> 변수나 메소드에 값을 아무것도 넣지 않으면 자바스크립트에서는\r\n                undefined가 default값으로 들어간다. </li>\r\n              <li> stack방식(선입후출)으로 함수를 호출한다. </li>\r\n\r\n              <h2 className='h2'> 📌 자바스크립트 엔진 </h2>\r\n              <li> Event Loop : Call Stack과 Task Queue가 비어있는지 여부를 확인하는 역할 </li>\r\n              <li> Call Stack : 실행된 코드들이 있는 공간, 함수를 호출하면 Stack에 저장된다. </li>\r\n              <li> Heap : 메모리가 할당이 되는 공간 </li>\r\n              <li> Web API : Ajax, Request HTTP 등 브라우저에서 사용할 수 있는 API </li>\r\n              <li> Task Queue : 비동기로 처리된 함수들의 Callback 함수들이 잠시 보관되는 공간 </li>\r\n\r\n\r\n              <h2 className='h2'> 📌 자바스크립트가 비동기로 작동되는 과정 </h2>\r\n              <li> - 동기 함수는 Execution Context를 생성해서 Stack에 Push한다. </li>\r\n              <li> 1. Execution Context를 생성 </li>\r\n              <li> 2. Stack에 함수가 모두 사용되면 Execution Context를 Pop시킨다. 이때를 Stack이 완전히 비어있다고 판단한다. </li>\r\n              <li> 3. setTimeout(), 이벤트 핸들러, Ajax, Request HTTP 등 Web API를 요청하면 Callback 함수를 같이 보낸다.  </li>\r\n              <li> 4. Web API가 완료가 되면 Task Queue에 Callback 함수를 Task Queue공간에 넣는다. </li>\r\n              <li> 5. JS Engine에 Event Loop가 Stack이 완전히 비어있는지 확인을 하고 비어있다면 Task Queue공간에 Callback함수가 있는지 판단을 하고\r\n                있다면 Stack공간으로 이동시킨다. </li>\r\n              <li>  </li>\r\n\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 모듈 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li>  </li>\r\n              <li> import <small> # 우선적으로 파싱이 된다. </small> </li>\r\n              <li> require() <small> # 런타임 중에 필요할때 로드된다. </small> </li>\r\n\r\n              <h2 className='h2'> 📌 장점, 단점 </h2>\r\n              <li> 장점 : </li>\r\n              <li> 단점 : </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 주석 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> // , /* */ </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> var, let, const </summary>\r\n            <div className='block2'>\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <div className='block4'>\r\n                <GridTableCountNRow100px>\r\n                  <div> </div>\r\n                  <GridColumn> var </GridColumn>\r\n                  <GridColumn> let </GridColumn>\r\n                  <GridColumn> const </GridColumn>\r\n\r\n                  <GridRow> 스크립트 선언 </GridRow>\r\n                  <GridField> Global </GridField>\r\n                  <GridField> Script </GridField>\r\n                  <GridField>  </GridField>\r\n\r\n                  <GridRow> 함수 내에서 스크립트 사용된 변수 재할당 </GridRow>\r\n                  <GridField> Global </GridField>\r\n                  <GridField> Script </GridField>\r\n                  <GridField>  </GridField>\r\n\r\n                  <GridRow> 함수 내에서 선언 </GridRow>\r\n                  <GridField> Local </GridField>\r\n                  <GridField> Local </GridField>\r\n                  <GridField>  </GridField>\r\n\r\n                  <GridRow> 블록,반복문 </GridRow>\r\n                  <GridField> Global </GridField>\r\n                  <GridField> Block </GridField>\r\n                  <GridField>  </GridField>\r\n\r\n                  <GridRow> 재선언 </GridRow>\r\n                  <GridField> 가능 </GridField>\r\n                  <GridField> 불가능 </GridField>\r\n                  <GridField> 불가능 </GridField>\r\n\r\n                  <GridRow> 재할당 <br /> <small> (값을다시넣어주기) </small> </GridRow>\r\n                  <GridField> 가능 </GridField>\r\n                  <GridField> 가능 </GridField>\r\n                  <GridField> 불가능 </GridField>\r\n                </GridTableCountNRow100px>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 호이스팅 </summary>\r\n            <div className='block2'>\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <div className='block4'>\r\n                <GridTableCountNRow100px count={6}>\r\n                  <div> </div>\r\n                  <GridColumn> var </GridColumn>\r\n                  <GridColumn> let </GridColumn>\r\n                  <GridColumn> const </GridColumn>\r\n                  <GridColumn> 함수선언식 <br /> <small> f()  </small></GridColumn>\r\n                  <GridColumn> 함수표현식 <br /> <small> var f=f() </small>  </GridColumn>\r\n\r\n                  <GridRow> 선언(탐색) </GridRow>\r\n                  <GridField> undefined </GridField>\r\n                  <GridField> 에러 </GridField>\r\n                  <GridField> 에러 </GridField>\r\n                  <GridField> 발생 </GridField>\r\n                  <GridField> 에러 </GridField>\r\n\r\n                  <GridRow> 초기화(공간확보) </GridRow>\r\n                  <GridField> undefined </GridField>\r\n                  <GridField> 에러 </GridField>\r\n                  <GridField> 에러 </GridField>\r\n                  <GridField>  </GridField>\r\n                  <GridField>  </GridField>\r\n\r\n                  <GridRow> 할당 </GridRow>\r\n                  <GridField> 참조값 </GridField>\r\n                  <GridField> 에러 </GridField>\r\n                  <GridField> 에러 </GridField>\r\n                  <GridField>  </GridField>\r\n                  <GridField>  </GridField>\r\n\r\n                </GridTableCountNRow100px>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 변수, 상수 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> var로 변수를 정의하는 것은 코드를 작성할 때 헷갈리게 만든다. </li>\r\n              <li> 이벤트로 var변수를 불러오면 반복문이 끝난결과의 값을 가져오기도 한다. </li>\r\n              <li> var로 선언한 변수를 let으로 다시 재선언하게되면 에러가 발생한다. </li>\r\n              <li> var x=0; <small> # 전역변수로 선언 </small> </li>\r\n              <li> let x=0; <small> # 지역변수 </small> </li>\r\n              <div className=\"block4\">\r\n                <li> let 변수명;  변수명 = 값; #var도 사용이 가능하지만 전역변수이므로 권장하지 않음 </li>\r\n                <li> let 변수명 = {'{\"key\":\"value\", \"key\":\"value\"};'} </li>\r\n              </div>\r\n              <li> const x=0; <small> # 상수 </small> </li>\r\n              <div className=\"block4\">\r\n                <li> const 상수명 = 값; </li>\r\n                <li> const 상수명 = true, false; </li>\r\n                <li> const 심볼명 = Symbol(\"문자열\"); #유일하고 변경 불가능한 기본값, 상수와는 또다름 , 독립적인값, 왜 필요한지느 모르겠음 </li>\r\n                <small> null,undefined일 경우 ?? 사용 , 매개변수로 받는 default연산자는 null에서는 null값을 출력하는 차이가 있음 </small>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 추가 상식 </h2>\r\n              <li> var로 선언한 변수는 호이스팅 되어 변수 공간이 생성, 단 값이 들어가지 않으면 undefined </li>\r\n              <li> let로 선언한 변수는 호이스팅이 되지 않아 let변수를 사용하게 호출하게 되면 ReferenceError 발생 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Scope </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 동일한 이름의 변수가 존재한다면 스코프의 범위가 더 좁은 변수의 값이 적용된다. </li>\r\n              <li> 정적 스코프 : 미리 정의된 범위, 초기에 설정해둔 변수나 함수 등 </li>\r\n              <li> 동적 스코프 : </li>\r\n              <li> 전역 스코프 : 전역 범위 </li>\r\n              <li> 지역 스코프 : 지역 범위 </li>\r\n              <li> 함수 스코프 : 함수안에서만 작동되는 범위 </li>\r\n              <li> 블럭 스코프 : const, let , {'{}괄호 안에 있으면 {}괄호가 스코프'} </li>\r\n\r\n\r\n              <h3 className=\"h3\"> 잘못된 예시 </h3>\r\n              <div className=\"block3\">\r\n                <li> 1. function에서의 var </li>\r\n                <div className=\"block4\">\r\n                  <li> {' function f1() { '}\r\n                    <li> {' \tvar var1 = \"test\"; '} </li>\r\n                  </li>\r\n                  <li> {' } '} </li>\r\n                  <li> ❌ {' console.log(var1); '} </li>\r\n                </div>\r\n                <li> var 과 let </li>\r\n                <div className=\"block4\">\r\n                  <li> let var1 = \"test1\"; </li>\r\n                  <li> ❌ var var1 = \"\"; <small> # Syntax Error 발생, let ↔ var로 재선언 불가능 </small> </li>\r\n                  <li> console.log(var1); </li>\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 데이터 타입 </summary>\r\n            <div className='block2'>\r\n\r\n\r\n\r\n              <h2 className='h2'> 📌 자바스크립트의 데이터 타입 </h2>\r\n              <div className=\"block4\">\r\n                <li> number </li>\r\n                <li> string </li>\r\n                <li> boolean </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 자바스크립트의 문자열 </h2>\r\n              <div className=\"block4\">\r\n                <li> \"\" <small> Double quotes </small> </li>\r\n                <li> '' <small> Single quotes </small> </li>\r\n                <li> \"i'm\" + 값 + \"years old\" </li>\r\n                <li> `` <small> Backtick </small> </li>\r\n                <li> `{\" i'm ${age} years old \"}` </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 원시타입 </h2>\r\n              <li> string, number, boolean, null, undefined, symbol, NaN 등 </li>\r\n\r\n              <h2 className='h2'> 📌 symbol </h2>\r\n              <li> 다른 값과 중복되지 않는 고유한 값 </li>\r\n              <li> symbol타입은 열거를 할 때 나열할 수 없다. </li>\r\n              <li> symbol타입으로 만들면 Unique해져서 ===연산자를 사용하여 똑같은 Symbol을 비교하여도 false </li>\r\n              <li> Symbol(\"test\")===Symbol(\"test\") <small> # false </small> </li>\r\n              <li> Symbol() 함수를 이용해서 생성 </li>\r\n              <li> 심볼 값은 문자열,숫자로는 변환되지 않고, boolean타입으로는 가능하다 </li>\r\n              <li> Symbol('내용').description <small> # 내용 출력 </small> </li>\r\n              <li> Symbol('내용').toString() <small> # Symbol('내용') 출력 </small> </li>\r\n              <li> Symbol.for('내용') <small> # 내용에 해당하는 symbol을 찾는다. </small> </li>\r\n              <li> Symbol.keyFor(Symbol.for('내용')) <small> # 내용을 출력 </small> </li>\r\n\r\n              <h2 className='h2'> 📌 객체타입 </h2>\r\n              <li> Call By Reference , 값을 heap 공간에 저장하고 그 주소를 참조하는 값을 갖는다. </li>\r\n              <li> Array, Map, Set, Date, RegExp, WeakMap, WeakSet 등 </li>\r\n              <div className=\"block4\">\r\n                <li> x = [1,2,3]; y = x; </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 자바스크립트는 타입이 고정이 되있지 않아서 원하는 값을 바로 넣어줄 수 있고 변경도\r\n                바로 가능하다.</li>\r\n              <div className=\"block4\">\r\n                <li> let a = 10; , a = \"문자열\"; (o) </li>\r\n              </div>\r\n              <li> 단 타입이 다른 값들끼리 연산이 되지는 않는다. </li>\r\n              <li> undefined는 타입이 정해지지 않은 것, 값을 넣지 않을 경우 </li>\r\n              <div className=\"block4\">\r\n                <li> var x; <small> # var x = undefined; </small> </li>\r\n              </div>\r\n              <li> null은 값이 정해지지 않은 경우, null을 넣어주어야함 </li>\r\n              <div className=\"block4\">\r\n                <li> var x = null; </li>\r\n              </div>\r\n              <li> NaN은 값이 표현될 수 없는 경우 <small> # 0을 나누거나 문자열과숫자의 연산 등 </small>\r\n\r\n              </li>\r\n              <div className=\"block4\">\r\n                <li> var x = 0/1;  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 데이터 변환 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> Number() : 문자를 숫자로 변환, 숫자가 아닌 객체타입!!! </li>\r\n              <div className=\"block4\">\r\n                <li> Number(\"10\" + \"5\") <small> # 105 </small> </li>\r\n                <li> Number(10 * \"55\") <small> # 550 </small> </li>\r\n                <li> Number(10 + \"55\") <small> # 1055 </small> </li>\r\n                <li> Number(true+true); <small> # 2 </small> </li>\r\n                <li> Number(arr객체); <small> # NaN </small> </li>\r\n              </div>\r\n              <li> toString() : 숫자나 불린등을 문자형으로 변환 </li>\r\n              <div className=\"block4\">\r\n                <li> x=[1,2,3]; y = x.toString(); <small> # \"1,2,3\" </small>  </li>\r\n                <li> x=true; y = x.toString(); <small> # \"true\" </small>  </li>\r\n                <li> ❌ undefined.toString(); null.toString() NaN.toString() <small> # 에러발생 </small> </li>\r\n              </div>\r\n              <li> Boolean() : 문자나 숫자등을 불린형으로 변환 </li>\r\n              <div className=\"block\">\r\n                <li> Boolean('false'), Boolean({'{}'}), Boolean([]), Boolean(1) <small> # true </small> </li>\r\n                <li> Boolean(''), Boolean(NaN), Boolean(null), Boolean(0), Boolean(undefined) <small> # false </small> </li>\r\n              </div>\r\n              <li> Object() : 모든 자료형을 객체형으로 변환 </li>\r\n              <li> parseInt(문자) : 문자형을 int형으로 변환 </li>\r\n              <li> parseFloat(문자) : 문자형을 float형으로 변환 </li>\r\n              <li> typeof(객체나 변수명 등) : 객체의 타입을 볼 수 있음 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 연산자 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 산술연산자 : + - * / % **  </li>\r\n              <div className=\"block4\">\r\n                <li> \"10\" + \"5\" <small> # 105 </small> </li>\r\n                <li> 10 * \"55\" <small> # 550 </small> </li>\r\n                <li> 10 + \"55\" <small> # 1055 </small> </li>\r\n                <li> true+true; <small> # 2 </small> </li>\r\n              </div>\r\n              <li> 비교연산자 : {'> < >= <= == === != !=='}  </li>\r\n              <li> 대입연산자 : =</li>\r\n              <li> 증감연산자 : ++변수 변수++ --변수 변수--</li>\r\n              <li> 논리연산자 : and({'&&'}) or({'||'}) not(!)  </li>\r\n              <li> 비트연산자 : {' & | ^ << >> '}  </li>\r\n              <li> 삼항연산자 : 변수 = 조건식 ? 참일때 리턴값 : 거짓일때 리턴값  </li>\r\n              <li> null병합연산자 : const 변수1 = 변수2 ?? 값(변수2의 값이 null,undefined일경우) </li>\r\n              <li> null병합연산자 : 변수나메소드 ?? 변수2 ?? 변수3 ?? \"비어있음\"  </li>\r\n              <li> delete연산자 : boolean값 반환, var,const,let은 지울수 없음 </li>\r\n              <li> spread operator 연산자 : ...을 사용하여 표현 , ES6 문법, 깊은복사로 사용가능(배열내부에 객체가 있으면 얕은복사), 파라미터로 사용하면\r\n                매개변수에 값을 배열처럼 넣어도 알아서 잘 들어간다(단, 마지막 파라미터로 존재해야 한다.)\r\n                <div className=\"block4\">\r\n                  <li> let arr1 = [1,2,3]; </li>\r\n                  <li> let arr2 = [...arr1,4,5,6]; </li>\r\n                  <li> console.log(arr2); <small> [1,2,3,4,5,6] </small> </li>\r\n                  <li> arr2 = arr1 <small> # 얕은 복사 </small> </li>\r\n                  <li> arr2 = [...arr1] <small> # 깊은 복사 </small> </li>\r\n                </div>\r\n              </li>\r\n\r\n              <h2 className='h2'> 📌 추가 상식 </h2>\r\n              <li> == : 값만 같으면 된다. </li>\r\n              <li> === : 값과 타입까지 같아야 한다. </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 조건문, 반복문 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 조건문 : if() , else if() , else </li>\r\n              <li> 조건문 : swithc(변수)( case 변수값1: 실행문장; break; .... default: 실행문장;) </li>\r\n              <li> 반복문 : while(조건) </li>\r\n              <li> 반복문 : for(초기값; 조건식; 증감식) </li>\r\n              <li> 반복문 : continue; #반복문 횟수는 완료되고 반복문의 조건으로 다시 실행  </li>\r\n              <li> for(let 임시변수 in 배열) : 배열의 키나 인덱스를 출력 </li>\r\n              <li> for(let 임시변수 of 배열) : 배열의 값을 출력 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 배열 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 배열 : 배열명 = [값1,값2, 값3]; </li>\r\n              <li> let 배열명 = new Array(값1, 값2, 값3) </li>\r\n              <li> let 배열명 = [\"문자열\",숫자,true] #배열에 여러가지 데이터 타입이 혼합되어 있어도 문제가 발생하지 않는다.`` </li>\r\n              <li> let 배열명; 배열[0] = 1; 배열[3] =2; #이와 같이 하여도 배열이 생성이 되고 나머지는 값이 빈 배열 만들어짐 </li>\r\n              <li> 배열[인덱스값] #배열 인덱싱 </li>\r\n              <li> 배열.length #배열 길이 </li>\r\n              <li> 배열.push(값) #원본 배열에 마지막에 요소 추가, 리턴값으로 배열의 길이를 출력한다. </li>\r\n              <li> 배열.shift() #배열에 첫번째값을 제거</li>\r\n              <li> 배열.pop() #배열 뒤쪽에 값을 제거</li>\r\n              <li> 배열1.concat(배열2) #2개의 배열을 합침 </li>\r\n              <li> 배열.join(\"요소사이에삽입할 문자열\") #배열 요소 사이에 원하는 문자를 삽입해서 문자열?로 리턴 </li>\r\n              <li> 배열.reverse() #배열을 역순으로 배치 </li>\r\n              <li> 배열.sort() #배열을 오름차순으로 정렬 </li>\r\n              <li> //TODO: 아래 내용 추가적으로 공부하기 </li>\r\n              <li> 배열.reduce((누산기?,y) {'=>'} console.log(x,y)); <small> # 리턴값을 주어야 누산기에 누적이 되고 값이 없으면 배열의 첫번째 요소가 누산기값이 된다. </small> </li>\r\n              <li> 배열반복문 : for(let i in 배열) #배열의 수만큼 반복을 한다. , i는 배열의 인덱스를 가리키는 값이라고 생각 </li>\r\n              <li> 배열반복문 : 배열.foreach(function(item, index, arr)) {'{ }'} #배열 요소의 갯수 만큼 반복 , item은 배열값 , arr은 자기자신의배열을 가져옴 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 문자열 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 메소드 </h2>\r\n              <li> 문자열객체.padStart(NUM) <small> # 전달된배열길이보다 NUM이 클때만 사용되고 왼쪽공간에 패딩이 (NUM-길이)만큼 생성된다.  </small> </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Function </summary>\r\n            <div className='block2'>\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> function 사용자정의함수명(매개변수) {'{  }'} #함수 정의(함수 선언식) , 함수 선언식으로 만들면 호이스팅(위치에 상관없이 함수가 에러발생하지 않음)됨 </li>\r\n              <li> const 함수명 = function(매개변수) {'{ }'} {'{  }'} #함수 정의 및 선언(함수 표현식) ,\r\n                함수표현식으로 작성하면 호이스팅이 되지 않음, 상단에 미리 선언 필요 </li>\r\n              <li> 함수명(); #함수 사용 </li>\r\n              <li> 자바스크립트에서는 함수도 객체여서 속성을 가질수 있다. FUNCTION.prop=\"123\"; 함수여도\r\n                문제가 없다는 소리이다. </li>\r\n\r\n              <h2 className='h2'> 📌 속성 </h2>\r\n              <li> arguments : 매개변수의 배열 </li>\r\n\r\n              <h2 className='h2'> 📌 메모라이제이션 함수 </h2>\r\n              <li> 로컬 캐쉬 기술 중 하나, 메모리에 특정정보를 기록하고 가져오는 방법 </li>\r\n              <li> 로컬캐쉬를 개선하는 것이 목적 </li>\r\n              <li> 불필요한 반복적인 계산을 피하려는 함수 </li>\r\n\r\n              <h2 className='h2'> 📌 제네레이터 함수 </h2>\r\n              <li> function* 함수명() {'{'}\r\n                <li> const abc = yield \"abc\"; <small> # yield로 추가 </small> </li>\r\n              </li>\r\n              <li> {'}'} </li> <br />\r\n              <li> const aaa = 함수명(); </li>\r\n              <li> aaa.next().value <small> # 순서대로 출력 </small> </li>\r\n\r\n              <h2 className='h2'> 📌 화살표 함수, 람다식 </h2>\r\n              <li> {' function [함수명]([매개변수]) => { //코드작성 } '} </li>\r\n              <li> 주의할 점 : 람다식에서 this를 사용하게 되면 window를 가리키게 된다. 이럴때는 .bind()를 사용해서\r\n                this가 window가 아닌 본인을 가리킨다는 것을 알려주어야 한다. </li>\r\n\r\n              <h2 className='h2'> 📌 FUNCTION.call(OBJECT,매개변수) </h2>\r\n              <li> OBJECT1.FUNCTION.call(OBJECT2)은 OBJECT2.FUNCTION()와 같다. </li>\r\n              <li> OBJECT2.FUNCTION()을 실행한다.  </li>\r\n\r\n              <h2 className='h2'> 📌 FUNCTION.apply(OBJECT,매개변수배열) </h2>\r\n              <li> OBJECT1.FUNCTION.apply(OBJECT2,매개변수배열)은 OBJECT2.FUNCTION(매개변수배열)와 같다. </li>\r\n              <li> OBJECT2.FUNCTION(매개변수배열)을 실행한다.  </li>\r\n              <li> .call()과 유사하만 매개변수를 유사배열로 만든다. </li>\r\n              <li> 배열이 아니므로 배열 메소드를 사용하면 에러가 발생한다. </li>\r\n\r\n              <h2 className='h2'> 📌 FUNCTION.bind(OBJECT,매개변수1...) </h2>\r\n              <li> let bind_object = OBJECT1.FUNCTION.bind(OBJECT2); <small> = OBJECT2.FUNCTION()를 반환 </small> </li>\r\n              <li> bind는 this가 가리키는 것을 바꾼다. </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 일반 함수 예시 </h3>\r\n                  <div className='block4'>\r\n                    <li> function f1(var, array, map) {'{'}\r\n                      <li> console.log(var); <small> # 일반변수 </small> </li>\r\n                      <li> console.log(array[0]); <small> # 배열 </small> </li>\r\n                      <li> console.log(map.key); <small> # Map객체 </small> </li>\r\n                    </li>\r\n                    <li> {'}'} </li> <br />\r\n\r\n                    <li> var add_value = function add(num1,num2) {'{ return num1+num2; }'} </li> <br />\r\n                  </div>\r\n                  <h3 className='h3'> 🎈 call, apply, bind 예시 </h3>\r\n                  <div className='block4'>\r\n                    <li> var obj1 = {'{'}\r\n                      <li> value: \"123\", </li>\r\n                      <li> name: \"obj1\", </li>\r\n                      <li> method1: function (x) {'{'}\r\n                        <li> console.log(this.value); </li>\r\n                        <li> console.log(this.name); </li>\r\n                        <li> console.log(x); </li>\r\n                      </li>\r\n                      <li>{'}'} </li>\r\n                    </li>\r\n                    <li>  {'}'}; </li>\r\n                    <li> var obj2 = {'{'}\r\n                      <li> value: \"456\", </li>\r\n                      <li> name: \"obj2\", </li>\r\n                    </li>\r\n                    <li>  {'}'}; </li>\r\n                    <li>  var obj_test = obj1.method1.bind(obj2, \"2\"); </li>\r\n                  </div>\r\n                  <div className=\"block4\">\r\n                    <li> {' { obj1.method1.call(obj2) }; '} <small> # </small> </li>\r\n                    <li> {' { obj1.method1.apply(obj2, [1, 2, 3, 4, 5, 6, 7, 8]) }; '} </li>\r\n                    <li> {' { obj_test() } '} </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> CLASS </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 클래스에 static으로 메소드를 선언하면 정적 메소드가 되어서 자식들은 상속받을수\r\n                없고 내부에서만 클래스 내부에서만? 사용가능\r\n              </li>\r\n              <li> 클래스의 인스턴스를 이용해서 메소드를 호출하면 TypeError가 발생한다. 그러므로\r\n                CLASS.prototype.METHOD 와 같이 클래스 프로토타입을 사용하여야 한다. </li>\r\n              <li> 부모클래스에 상속받은 파생클래스에서 this를 사용하기 위해서는 super() 메소드를 사용하여야 가능하다. </li>\r\n\r\n\r\n              <h2 className='h2'> 📌 래퍼클래스 </h2>\r\n              <li> String.raw`그대로출력되는코드` </li>\r\n              <li>  </li>\r\n\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li> class CLASS {'{'}\r\n                      <li> static METHOD(매개변수) {'{'}\r\n                        <li> //코드 작성  </li>\r\n                        <li> return 리턴값; </li>\r\n                      </li>\r\n                      <li> {'}'} </li>\r\n                      <li> constructor({'{'}매개변수='디폴트값'{'}'} = {'{}'}) {'{'}\r\n                        <li> this.멤버변수 = 매개변수; </li>\r\n                      </li>\r\n                      <li> {'}'} </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Map </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> ARRAY.map(callbackFunction(currentValue, currentIndex, array), thisArg); </li>\r\n              <li> 모든 배열에 함수를 실행하는 메소드 </li>\r\n              <li> 3 </li>\r\n\r\n              <h2 className='h2'> 📌 사용 방법 </h2>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li> 1. const Var = ARRAY.map((data) {\"=>\"} \"{'${data}'}\"); </li>\r\n              <li> 2. const Var = ARRAY.map((data,index) {\"=>\"} \"{'${data}'}\"); </li>\r\n              <li> 3. const Var = ARRAY.map(function(data) {'{'}\r\n                <li> return data; </li>\r\n              </li>\r\n              <li> {'}'}); </li>\r\n              <li> 4. const Var = ARRAY.map(FUNCTION); </li>\r\n              <li> 5. const Var = ARRAY.map((data) {\"=>\"} \"{'${data.id}'}\"); <small> # Array가 일반 배열이 아닌\r\n                Object객체일때 사용 </small> </li>\r\n              <li> 6. const Var = ARRAY.map((data) {\"=>\"} \"{'${data}'}\").reverse();  </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li>\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li> let list = [ 1, 2, 3, 4, 5 ]; </li> <br />\r\n                    <li> return (\r\n                      <li> {\" { \"}\r\n                        <li> {\"list.map(() => { \"}\r\n                          <li> {\"  return (<div>  </div>) \"} </li>\r\n                        </li>\r\n                        <li> {\"}) \"} </li>\r\n                      </li>\r\n                      <li> {\" } \"} </li>\r\n                    </li>\r\n                    <li> ); </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 프로토타입 (알아볼 것) </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 프로토타입(클래스라고 생각) : 만들어지면 Object 타입도 같이 상속을 받음 </li>\r\n              <li> function 프로토타입(멤버변수, 멤버변수, 멤버변수) {'{ this.변수 = 변수 ... }'} #프로토타입을 정의? </li>\r\n              <li> const 객체1 = Object.assign(객체2,객체3); , #객체2,3의 필드를 객체1에 넣어서 하나로 만듬 </li>\r\n              <li> const 객체1 = (...객체2,...객체3); , #객체2,3의 필드를 객체1에 넣어서 하나로 만듬(Spread Syntax) </li>\r\n              <li> const 프로토타입객체 = new 클래스?(1,2,3); </li>\r\n              <li> const 값 = 객체.필드?.(필드의필드); (Optional Chanining) </li>\r\n              <li> const {'{멤버변수1,멤버변수2} = 매개변수(객체) '} , #객체에 있는 멤버변수의 이름에 맞춰 멤버변수에 값이 들어간다. </li>\r\n              <li> 프로토타입객체.필드명 = 값; #자동으로 프로토타입객체에 필드와 값이 추가가 된다. </li>\r\n              <li> 프로토타입.prototype.필드명 = 값 #프로토타입에 필드를 추가하는 방법 </li>\r\n              <li> 프로토타입.prototype.메소드명 = function() {'{ 메소드내용 } '} #프로토 타입에 메소드 추가 생성 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 기본 객체 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 기본 객체 </h2>\r\n              <li> 1. 사용자가 만든 객체 </li>\r\n              <li> 2. new키워드를 사용하며 만든 객체 </li>\r\n              <li> 기본객체는 프로토타입을 가지지 않고 이외의 객체는 모두 프로토타입을 가진다. 그러므로\r\n                클래스 인스턴스를 만들어서 사용할 때 prototype속성을 이용하여 접근이 가능한것 같다. </li>\r\n\r\n              <h2 className='h2'> 📌 Object 객체 </h2>\r\n              <li> Object.defineProperty(객체명,\"KEY\",{'{value: 값}'}) <small> # 기존 객체에 있는 속성을 추가로 정의하거나 수정 가능 </small> </li>\r\n              <li> Object.keys(객체명) <small> # 객체가 가진 Key값들을 반환 </small> </li>\r\n              <li> Object.freeze(객체명); <small> # 객체에 속성을 추가,수정,삭제를 못하게 막는다. </small> </li>\r\n              <li> Object.isFrozen(객체명); <small> # 객체의 동결여부 </small> </li>\r\n              <li> Object.entries(객체명); <small> # 객체의 속성의 각각의 키와값들을 각각 배열로 만든다 </small> </li>\r\n              <li> Object. <small> #  </small> </li>\r\n              <li> Object. <small> #  </small> </li>\r\n\r\n              <h2 className='h2'> 📌  </h2>\r\n              <li>  </li>\r\n\r\n              <h2 className='h2'> 📌  </h2>\r\n              <li>  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Math객체 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> min() : 최솟값 리턴 </li>\r\n              <li> max() : 최대값 리턴</li>\r\n              <li> round() : 소수점 첫째자리 반올림 </li>\r\n              <li> floor() : 소수점 첫째자리 내림 </li>\r\n              <li> ceil() : 소수점 첫째자리 올림 </li>\r\n              <li> random() : 0~1 리턴 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> String 객체 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> length : 문자열 길이 </li>\r\n              <li> indexOf(문자열) : 매개변수가 처음으로 등장하는 위치를 리턴 </li>\r\n              <li> charAt(index) : 매개변수로 전달된 인덱스에 위치한 문자를 리턴  </li>\r\n              <li> includes(문자열) : 매개변수로 전달된 문자열이 포함되어 있는지 여부 Boolean 리턴 </li>\r\n              <li> substring(start_index,end_index) : 시작~종료 인덱스까지 문자열 추출 리턴 </li>\r\n              <li> substr(start_index,cout) : 시작인데스부터 원하는 갯수까지 문자열 추출 리턴 </li>\r\n              <li> split(구분자) : 문자열을 구분자 를 기준으로 추출해서 배열로 리턴 </li>\r\n              <li> replace() : 원본 문자열을 매개변수로 전달된 문자열로 변경 </li>\r\n              <li> trim() : 문자열의 앞뒤 공백을 제거 </li>\r\n              <li> toUpperCase() : 문자열을 모두 대문자로 변환 </li>\r\n              <li> toLowerCase() : 문자열을 모두 소문자로 변환 </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> window 객체 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 객체 = window.setTimeout(메소드명,ms); <small> # ms시간 뒤에 메소드 실행 </small> </li>\r\n              <li> clearTimeout(객체); #setTimeout 메소드를 취소시킴 </li>\r\n              <li> 객체 = window.setInterval(메소드명,ms); #ms시간 마다 메소드 실행 </li>\r\n\r\n              <h2 className='h2'> 📌 추가 상식 </h2>\r\n              <li> setTimeout의 콜백함수는 루프가 실행된 후에 호출된다. 그래서 반복문에 var변수를 사용하게 되면\r\n                마지막 반복문값만 호출이 된다. , let으로 반복문을 돌리면 문제가 없다. </li>\r\n              <li>  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 자바스크립트 html출력 </summary>\r\n            <div className='block2'>\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 자바스크립트 html출력 </li>\r\n              <li> document.write() #body에 출력 </li>\r\n              <li> console.log() #브라우저 콘솔창에 출력 </li>\r\n              <li> {'<script src=\"경로.js\"> </script> '} </li>\r\n              <li> 'use strict'; #strict mode를 사용, 문법적으로 맞게끔 설정 </li>\r\n              <li> alert() 또는 window.alert() : 사용자에게 메세지를 보여주고, 확인을 기다립니다. </li>\r\n              <li> confirm() 또는 window.confirm() : 사용자에게 메세지를 보여주고, 확인이나 취소를 누르면 그 결과를 불리언값으로 리턴합니다. </li>\r\n              <li> prompt() 또는 window.prompt() : 사용자에게 메세지를 보여주고, 사용자가 입력한 문자열을 리턴합니다. </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> JSON </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> jSON.stringify(json형태의 객체,REPLACER); <small> # </small>\r\n                <li> REPLACER = 함수, 배열, 배열의 일부 키값\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </li>\r\n              </li>\r\n              <li> 3 </li>\r\n\r\n              <h2 className='h2'> 📌 장점, 단점 </h2>\r\n              <li> 장점 : </li>\r\n              <li> 단점 : </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 </h3>\r\n                  <div className='block4'>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JavaScriptBasic;","import React from 'react';\r\n\r\nconst JavaScriptBasic2 = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] Date </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Date([1900년도 기준],[0~11],일,시,분,초,밀리초) </h2>\r\n            <div className='block4'>\r\n              <li> new Date() , Thu Oct MM YYYY HH:MM:SS GMT+0000  </li>\r\n              <li> Date(21,7,16) <small> 1921년 8월 16일 </small> </li>\r\n              <li> Date(2021,7,16) <small> 2021년 8월 16일 </small> </li>\r\n              <li> Date(2022,7,16,11,11) <small> 2022년 8월 16일 11:11:00 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Data객체.getFullYear() : 년 </h2>\r\n            <div className='block4'>\r\n              <li> new Date().getFullYear(); <small> 결과 : {new Date().getFullYear()} </small> </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Data객체.getMonth() : 현재 월 - 1 </h2>\r\n            <div className='block4'>\r\n              <li> new Date().getMonth(); <small> 결과 : {new Date().getMonth()} </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Data객체.getDate() : 일 </h2>\r\n            <div className='block4'>\r\n              <li> new Date().getDate(); <small> 결과 : {new Date().getDate()} </small>  </li>\r\n              <li> let preDay = new Date(현재년도,0~11,0).getDate()  <small> 저번달 마지막 날짜 구하기 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Data객체.getDay() : 요일, 0(일요일) ~ 6(토요일) </h2>\r\n            <div className='block4'>\r\n              <li> let preDayW = new Date(현재년도,0~11,0).getDay()  <small> 마지막 요일 구하기 </small>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Data객체.getHours() : 시 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Data객체.getMinutes() : 분 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Data객체.getSeconds() : 초 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Closure - <small> # 조금더 공부가 필요한 부분 </small> </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 클로져란? </h2>\r\n            <li> 외부 함수의 실행이 끝나도 외부 함수 안에 있는 변수를 사용할 수 있게 해준다. </li>\r\n            <li> 함수에서 리턴값안에 리턴값을 넣어서 외부에서 사용할 수 있게 해주는 방법이다. </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> JS에서는 함수를 함수에 대입할 수 있다. var f1 = function f2 {' { return function f3() { retrun 1; } } '} <small> var f1 = {' function f3() { retrun 1; } '} </small> </li>\r\n            <li> JS에서 함수1을 함수2에 대입했을 때 그때 당시의 함수1에 들어있는 지역변수 등의 환경을 기억해서 가지고 있는 함수2를 클로저라 한다. </li>\r\n            <h4 className=\"h4\"> 클로저 예시 </h4>\r\n            <div className=\"block4\">\r\n              <li> {' function f1(x,y) { '}\r\n                <li> {' \treturn function(z) { '}\r\n                  <li> {' \t\treturn x*y+z; '} </li>\r\n                </li>\r\n                <li> {' \t}; '} </li>\r\n              </li>\r\n              <li> {' } '} </li> <br />\r\n              <li> {' var f2 = f1(1,1); '} <small> # 클로저 , f2 = function(z) {' { return 1*1+z } '}; </small> </li>\r\n              <li> {' var f3 = f1(2,2); '} <small> # 클로저 , f3 = function(z) {' { return 2*2+z } '}; </small> </li>\r\n              <li> {' console.log(f2(1)); '} <small> # 1*1+1 </small>  </li>\r\n              <li> {' console.log(f3(1)); '} <small> # 2*2+2 </small>  </li>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Promise </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 비동기 처리에 사용되는 객체 </li>\r\n\r\n            <h2 className='h2'> 📌 사용 이유 </h2>\r\n            <li> 어떠한 일을 완료가 되기전에 진행하면 안되므로 완벽하게 끝나고 완료된 상태를 사용하기 위해서 </li>\r\n            <li> 콜백중첩을 방지 할 수 있다. </li>\r\n\r\n            <h2 className='h2'> 📌 Promise 상태 </h2>\r\n            <li> 1. pending : 초기상태나 완료전 상태 </li>\r\n            <li> 2. fulfilled : 성공적으로 완료한 상태 </li>\r\n            <li> 3. rejected : 실패한 상태 </li>\r\n\r\n            <h2 className='h2'> 📌 Promise 전부 완료후 실행 </h2>\r\n            <li> Promise.all([PROMISE1,PROMISE2,...]).then(FUNCTION) </li>\r\n\r\n            <h2 className='h2'> 📌 예외처리 </h2>\r\n            <li> .catch(e {'=>'} {'{'}\r\n              <li> console.log(e); </li>\r\n            </li>\r\n            <li> {')};'} </li>\r\n\r\n            <h2 className='h2'> 📌 Promise 체이닝 </h2>\r\n            <li> .then(FUCNTION)(return new Promise.then(FUCNTION){'{return new Promise 무한 반복 가능}'} ) </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 promise 예시 </h3>\r\n                <div className='block4'>\r\n                  <li> const PROMISE = function(param){'{'}\r\n                    <li> return new Promise(function(resolve,reject){'{'}\r\n                      <li> if(param) {'{ resolve(\"\"); }'}; </li>\r\n                      <li> else(param) {'{ reject(\"\"); }'}; </li>\r\n                    </li>\r\n                    <li> {'}'}); </li>\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                  <li>  </li> <br />\r\n                  <li> PROMISE(true).then(function(success){'{'}\r\n                    <li> console.log(\"success\"); </li>\r\n                  </li>\r\n                  <li> {'}'}, function(failure) {'{'}\r\n                    <li> console.log(\"failure\"); </li>\r\n                  </li>\r\n                  <li> {'});'} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> async/await </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 async 설명 </h2>\r\n            <li> async를 이용하여 함수를 async함수로 만들어준다. </li>\r\n            <li> async는 리턴값으로 Promise 객체를 리턴한다. </li>\r\n\r\n            <h2 className='h2'> 📌 예시 </h2>\r\n            <li> 아래와 같이 비동기함수를 만들면 fulfill상태가 되므로 .then을 붙여서 사용 </li>\r\n            <li> function FUNCTION() {' {return \"test\"}; '} <small> # 일반함수 </small> </li>\r\n            <li> async FUNCTION() {' {return \"test\"}; '} <small> # 비동기함수 </small> </li>\r\n            <li> async () {'=>'} {' {return \"test\"}; '} <small> # 비동기함수 </small> </li>\r\n\r\n            <h2 className='h2'> 📌 await </h2>\r\n            <li> await는 async함수 내에서만 사용가능하다. </li>\r\n            <li> promise에서 .then으로 처리하는 것을 await를 이용하여 처리가 가능하다. </li>\r\n            <li> 코드가 .then으로 쓰는것보다 보기 좋다. </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 예시 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JavaScriptBasic2;","import React from 'react';\r\n\r\nconst JavaScriptDocument = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"common_style\" >\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> DOM(Document Object Model) </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 브라우저가 html,css 파일들을 이해할 수 있게 만들어 놓은 구조 </li>\r\n\t\t\t\t\t\t\t\t<li> 요소,속성,텍스트를 객체로 만들어서 DOM Tree 구조로 만들어 놓는다.  </li>\r\n\t\t\t\t\t\t\t\t<li> DOM Tree에서 HTML의 root객체는 document이다. </li>\r\n\t\t\t\t\t\t\t\t<li> 요소,속성(어튜리뷰트),텍스트는 모두 노드 단위로 구분되어 있어서\r\n\t\t\t\t\t\t\t\t\tJS(DOM API를 사용)를 사용해서 메모리를 변경할 수 있는것이다. </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 노드의 종류 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 🔸 문서(document) 노드 : HTML의 root 노드, 아래 3가지 노드에 접근하려면 document노드로 부터 시작된다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 요소(element) 노드 : 일반적으로 html에서 알고 있는 태그를 뜻한다.(div,span,p 등등) </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 속성(attribute) 노드 : html태그 내부에 있는 class,id,onclick 등등, 태그가 가지고 있는 속성을 뜻한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 텍스트(text) 노드 : 태그가 가지고 있는 텍스트 값을 뜻하는데 \"{' <div> 텍스트는 나야나 </div> '}\"를 예시를 들면 텍스트노드는 \"텍스트는 나야나\"라고 보면된다.\r\n\t\t\t\t\t\t\t\t\t텍스트 노드는 자식노드를 가질 수 없고 최하단 노드이다. </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 DOM 요소 컬렉션 종류 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 컬렌션내부의 값이 바뀌면 실시간으로 DOM트리에 반영해서 반복문을 사용할 때 주의 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 HTMLCollection </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 NodeList </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 classList </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> Document Property </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 anchors - document에 있는 name속성을 가진 요소 노드를 찾는다. </h2>\r\n\t\t\t\t\t\t\t<li> document.anchors : document에서 a태그에 name속성을 가진 요소들을 HTML_COLLECTION으로 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.anchors[INDEX] : HTML_COLLECTION에서 인덱스에 맞는 요소 노드를 반환, 존재하지 않으면 null반환 </li>\r\n\t\t\t\t\t\t\t<li> document.anchors.item(INDEX) : HTML_COLLECTION에서 인덱스에 맞는 요소 노드를 반환, 존재하지 않으면 null반환 </li>\r\n\t\t\t\t\t\t\t<li> document.anchors.namedItem(ID) : HTML_COLLECTION에서 특정 ID를 가진 요소 노드를 반환, 존재하지 않으면 null반환  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 document내부의 HTML태그 관련 속성  </h2>\r\n\t\t\t\t\t\t\t<li> document.doctype : document의 doctype을 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.documentElement : document의 html 노드를 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.body : document의 body 노드를 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.title : document의 title 노드를 반환  </li>\r\n\t\t\t\t\t\t\t<li> document.scripts.length : 스크립트의 갯수를 반환하는데 코드가 사용되는 위치에 따라 갯수가 달라진다. </li>\r\n\t\t\t\t\t\t\t<li> document.referrer : document의 referrer을 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.links[.length] : document의 link(a)태그 컬렉션을 반환 , 단 href속성을 가지고 있어야 한다. </li>\r\n\t\t\t\t\t\t\t<li> document.embeds[.length] : document의 embed태그 컬렉션을 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.forms[.length] : document의 form태그 컬렉션을 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.head : document의 form태그 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.images[.length] : document의 image태그 컬렉션을 반환 </li>\r\n\t\t\t\t\t\t\t<li> 1 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 Element </h2>\r\n\t\t\t\t\t\t\t<li> document.createElement(\"HTML_TAG\") : document에 요소 노드를 생성한다. </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 document의 내부 정보 </h2>\r\n\t\t\t\t\t\t\t<li> document.cookie : document의 cookie를 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.characterSet : document의 문자 인코딩을 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.inputEncoding : document의 parsing될때의 문자 인코딩 값을 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.defaultView : document의 window객체 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.implementation : // TODO: 확인 필요, 무슨 말인지 모르겠음 </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 document의 상태 </h2>\r\n\t\t\t\t\t\t\t<li> document.readyState : document의 loading 상태를 반환, [uninitialized, loading, interactive, complete] </li>\r\n\t\t\t\t\t\t\t<li> document.fullscreenElement : document가 전체화면이면 요소반환 아니면 null반환, 다른메소드\r\n\t\t\t\t\t\t\t\t(requestFullscreen(), exitFullscreen())와 같이 사용 브라우저 버전 확인 필요 </li>\r\n\t\t\t\t\t\t\t<li> document.fullscreenEnabled() : 전체 화면이 가능한지를 판단 </li>\r\n\t\t\t\t\t\t\t<li> document.lastModified : document가 마지막으로 수정된 날짜를 반환 <small> # 11/13/2021 05:58:54 </small> </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 document관련 주소 </h2>\r\n\t\t\t\t\t\t\t<li> document.baseURI : HTML document의 base URI를 반환 <small> # html head태그 제일 위쪽에 base태그를 선언해서 사용 </small> </li>\r\n\t\t\t\t\t\t\t<li> document.documentURI : HTML document의 URI를 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.URL : HTML document의 URL을 반환 </li>\r\n\t\t\t\t\t\t\t<li> document.domain : 문서를 로드한 domain을 반환 <small> # // TODO: 나중에 써봐야할 속성 </small> </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 designMode </h2>\r\n\t\t\t\t\t\t\t<li> document.designMode = \"on\"; : document 전체를 editable하게 만든다.(default=\"off\") <small> # 전체 쓰기 가능은.. 쓸일이 없을것 같다. </small> </li>\r\n\t\t\t\t\t\t\t<li> document.execCommand(\"\") : 선택 영역에 입력 인자를 받은 명령을 통해서 스타일 등을 바꾸어준다. , 브라우저 버전들을 확인해볼것 </li>\r\n\t\t\t\t\t\t\t// TODO: 이거는 쓸 내용이 많으니 최대한 빨리 정리 필요 그리고 이 명령은 텍스트 편집기를 만드는데 사용을 한다.\r\n\t\t\t\t\t\t\t<li> 1 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 기타 - 잘안사용하는 것들 기록 </h2>\r\n\t\t\t\t\t\t\t<li> document.documentMode : document를 렌더링한 브라우저 모드를 알려주는데 IE만 지원을 한다.. <small> # 그냥 사용하기는 그렇다.. </small> </li>\r\n\t\t\t\t\t\t\t<li> document.strictErrorChecking : 모든 브라우저가 지원을 하지 않아 공부하지 않음 </li>\r\n\t\t\t\t\t\t\t<li> document.renameNode : 모든 브라우저가 지원을 하지 않아 공부하지 않음 </li>\r\n\t\t\t\t\t\t\t<li> document.normalizeDocument() : 모든 브라우저가 지원을 하지 않아 공부하지 않음 </li>\r\n\t\t\t\t\t\t\t<li> document.domConfig : 구식 </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> Document Method </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 normalize() </h2>\r\n\t\t\t\t\t\t\t<li> 🔸 document.normalize() : 이웃해 있는 텍스트 노드를 모두 합쳐서 하나의 텍스트 노드로 만듬\r\n\t\t\t\t\t\t\t\t<small> # createTextNode를 사용하면 텍스트 노드가 2개로 분리가 된다.\r\n\t\t\t\t\t\t\t\t\t만약에 합치지 않고 결과만 얻고 싶다면 wholeText을 사용하면 된다. </small> </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 hasFocus() </h2>\r\n\t\t\t\t\t\t\t<li> document.hasFocus() : document가 focus가 되어있는지 판단 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 importNode() </h2>\r\n\t\t\t\t\t\t\t<li> document.importNode(OTHER_DOCUMENT_NODE, [true,false]) : 다른 document에서 node를 가져온다. true이면 자식노드까지 모드 가져옴 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌  </h2>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> activeElement - focus된 요소를 반환 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<li> var a = document.activeElement  </li>\r\n\t\t\t\t\t\t\t<li> document에서 focus된 요소를 반환해준다.  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 activeElement 예시 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <body> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t<button onclick=\"f1()\">클릭</button> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t<p id=\"f1\"></p> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </body> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <script> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tfunction f1() { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tvar x = document.activeElement.tagName; '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tdocument.getElementById(\"f1\").innerHTML = x; '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t} '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </script> '} </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> addEventListener(), removeEventListener() - 요소에 이벤트를 추가하고 삭제하는 방법 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 document.addEventListener </h2>\r\n\t\t\t\t\t\t\t<li> document.addEventListener(EVENT,FUNCTION,[useCapture]); </li>\r\n\t\t\t\t\t\t\t<li> EVENT : 작동할 이벤트 종류 </li>\r\n\t\t\t\t\t\t\t<li> FUNCTION : 이벤트 함수 종류 </li>\r\n\t\t\t\t\t\t\t<li> userCapture : 디폴트는 false, 무엇인지는 나중에 다시 알아보기 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 document.removeEventListener </h2>\r\n\t\t\t\t\t\t\t<li> document.removeEventListener(EVENT,FUNCTION,[useCapture]); </li>\r\n\t\t\t\t\t\t\t<li> EVENT : 작동할 이벤트 종류 </li>\r\n\t\t\t\t\t\t\t<li> FUNCTION : 이벤트 함수 종류 </li>\r\n\t\t\t\t\t\t\t<li> userCapture : 디폴트는 false, 무엇인지는 나중에 다시 알아보기 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <body> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t<button id=\"addBtn\"> add </button> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t<button id=\"removeBtn\"> remove </button> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </body> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <script> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tvar addBtn = document.getElementById(\"addBtn\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tvar createfunc = function () { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\talert(\"!!!!!\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t}; '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \taddBtn.addEventListener(\"click\", createfunc); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {'  '} </li> <br />\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tvar removeBtn = document.getElementById(\"removeBtn\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tremoveBtn.addEventListener(\"click\", function () { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\taddBtn.removeEventListener(\"click\", createfunc); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t}); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </script> '} </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> createDocumentFragment() - DOM Fragment, 비어있는 노드 임시 공간 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 document.createDocumentFragment() </h2>\r\n\t\t\t\t\t\t\t<li> var d = document.createDocumentFragment() </li>\r\n\t\t\t\t\t\t\t<li> 문서의 일부를 추출하거나 일부 내용을 변경,추가,삭제 후 문서에 다시 삽입해서 사용을 할 수 있다. </li>\r\n\t\t\t\t\t\t\t<li> 비어있는 노드라고 생각하면 되고 parentNode는 존재하지 않는다. 대신 자손 노드를 생성해서 사용하면 된다. </li>\r\n\t\t\t\t\t\t\t<li> fragment 노드를 다른 노드에 추가하거나 삽입을 하면 fragment 노드는 초기화가 된다. </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 예시 </h2>\r\n\t\t\t\t\t\t\t<li> var d = document.createDocumentFragment() : fragment 노드 생성 </li>\r\n\t\t\t\t\t\t\t<li> d.appendChild(NODE) : fragment 노드에 노드를 넣는 방법 </li>\r\n\t\t\t\t\t\t\t<li> ELEMENT_NODE.appendChild(d) : 요소 노드 자식으로 fragment 노드 삽입 </li>\r\n\t\t\t\t\t\t\t<li> NODE.appendChild(d) : 이미 존재하는 노드에 삽입을 하면 기존 노드는 사라지고 fragment 노드 바뀐다. </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> open(), close() </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<li> 출력스트림을 open() 문서를 작성하고 close()로 닫으면 문서를 지운다.  </li>\r\n\t\t\t\t\t\t\t<li> window.open()을 사용하면 새로운 창으로 바꿔서 문서를 작성할 수 있다. </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 장점, 단점 </h2>\r\n\t\t\t\t\t\t\t<li> 장점 : </li>\r\n\t\t\t\t\t\t\t<li> 단점 : </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default JavaScriptDocument;","import React from 'react';\r\n\r\nconst JavaScriptElement = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className=\"common_style\" >\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 요소 노드 조회 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 요소 노드 조회 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.getElementById(\"ID\") : 해당되는 아이디를 가진 요소 노드를 선택  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.getElementsByTagName(\"HTML_TAG\") :  해당되는 HTML태그 요소 노드를 모두 선택 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.getElementsByName(\"NAME\") : 해당되는 name속성을 가진 요소 노드를 모두 선택</li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.getElementsByClassName(\"CLASSNAME\") : 해당되는 클래스 이름을 가진 요소 노드를 모두 선택 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 HTML_COLLECTION_NODE.item(n) : n번째 요소 노드를 반환 </li>\r\n\t\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t\t<li> 노드 상태 변경이 바로 되므로 반복문 사용할 때 주의(while,for역방향,배열로변경,querySelectorAll사용) </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.querySelector([HTML선택자, CSS선택자]) : 선택자에 해당되는 제일 첫번째 요소 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.querySelectorAll([HTML선택자, CSS선택자]) : 선택자에 해당되는 요소를 모두 선택 </li>\r\n\t\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t\t<li> document.querySelectorAll(\"#ID_NAME\") <small> # querySelectorAll(\"#div1\") </small> </li>\r\n\t\t\t\t\t\t\t\t\t<li> document.querySelectorAll(\".CLASS_NAME\") <small> # querySelectorAll(\".btn1\") </small> </li>\r\n\t\t\t\t\t\t\t\t\t<li> document.querySelectorAll(\"HTML_TAG_NAME\") <small> # querySelectorAll(\"div\") </small> </li>\r\n\t\t\t\t\t\t\t\t\t<li> document.querySelectorAll(\"HTML_TAG.CLASSNAME\") <small> # querySelectorAll(\"div.btn1\") </small> </li>\r\n\t\t\t\t\t\t\t\t\t<li> document.querySelectorAll(\"CSS.SELECTOR\") <small> # querySelectorAll(\"ul{'>'}li:last-child\") </small> </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.documentElement : HTML태그 요소 노드  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.ownerDocument : 루트 요소 반환 </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 요소 노드 부모,형제,자식 조회 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 요소 노드의 부모,형제,자식 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.parentNode : 부모 노드  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.parentElement : 부모 노드가 요소 노드일 때만 부모노드 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.firstChild : 1번째 자식 요소 반환</li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.lastChild : 마지막 자식 요소 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.firstElementChild : 1번째 자식 요소 노드 반환</li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.lastElementChild : 마지막 자식 요소 노드 반환</li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.hasChildNodes() : 자식 노드 여부 판단, return boolean </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.childNodes : 자식 요소 노드 리스트 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.children : 자식 노드 중 ELEMENT_NODE TYPE만 컬렉션으로 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.previousSibling : 이전 형제 노드</li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.previousElementSibling : 이전 형제 요소 노드</li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.nextSibling : 다음 형제 노드 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.nextElementSibling : 다음 형제 요소 노드 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.childElementCount : 자식 요소 노드만 카운트 값 리턴  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.childNodes : 자식 노드 리스트 리턴 <small> # #text 노드(주석 노드?)의 정확한 의미는 잘 모르겠다. </small>  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.children : 자식 요소 노드만 리스트로 리턴  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 여러 노드 생성,추가,삭제 등 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 여러 노드 생성,추가,삭제 등 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 🔸 var ELEMENT_NODE = document.createElement(\"HTML_TAG\"); : document에 요소 노드 생성 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 var TEXT_NODE = document.createTextNode(\"TEXT\"); : 텍스트 노드 생성 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.appendChild(NODE); : 요소 노드의 마지막에 자식노드로 추가  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.removeChild(NODE) : 요소 노드의 자식 노드를 제거  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.replaceChild(OLD_NODE, NEW_NODE) : 요소 노드의 자식 노드를 대체함  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.remove() : 요소 노드 제거  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.cloneNode(true) : 요소 노드를 복사 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE1.insertBefore(ELEMENT_NODE2,ELEMENT_NODE3) : NODE1의 자식 NODE3의 앞쪽에 새로운 NODE2를 추가한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 HTML_COLLECTION.length : 컬렉션에 있는 노드의 갯수를 반환   </li>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 여러 노드의 값 생성,복사,추가,삭제 등 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 ELEMENT_NODE  </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 🔸 HTML_COLLECTION.namedItem(\"NAME 이나 ID\") : HTML콜렉션에서 name이나id를 찾아서 요소를 반환한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.nodeValue : undefined </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ATTRIBUTE_NODE.nodeValue : 속성 노드 속성값을 반환? 하거나 수정 <small> //TODO: 속성을 어떻게 처리해야할지 찾아봐야겠다. </small> </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 TEXT_NODE.nodeValue : 텍스트 노드 문자열을 반환 하거나 수정 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 NODE.nodeName : (요소,속성 등등) 노드의 이름을 반환 <small> # tagName과는 다르게 태그를 반환하는 것이 아님 </small> </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 NODE.typename : 노드의 타입을 매핑 값으로 반환(1:요소노드, 2:속성 노드, 3:텍스트 노드, 8:주석 노드) </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.id : 요소 노드의 아이디 속성 값 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.TEXT_NODE.wholeText : createTextNode를 사용해서 노드를 추가하면 각각 분리가 되는데 결과 값으로 이웃한 텍스트 노드를\r\n\t\t\t\t\t\t\t\t\t합쳐서 보여준다.  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 NODE.textContent : 해당 요소 노드와 자식 노드의 텍스트를 포함한 모든 텍스트 출력, display:none도 출력 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.innerText : 해당 요소 노드와 자식 노드의 텍스트를 포함한 모든 텍스트 출력, display:none도 출력, 개행 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.innerHTML : 지정 요소 노드를 제외한 내부의 내용 모두를 HTML 마크업 텍스트로 출력 </li>\r\n\t\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t\t<li> 1. XSS공격에 취약 HTML에 몰래 코드를 추가할 수 있음 <small> # {' document.getElementById(\"test\").innerHTML = \"<p> 나는 해커다 </p>\"; '} </small> </li>\r\n\t\t\t\t\t\t\t\t\t<li> 2. 내용을 덮어쓰고 HTML을 재파싱함(비효율) </li>\r\n\t\t\t\t\t\t\t\t\t<li> 3. DOM 객체에 접근해서 사용하는 방법보다는 빠르고 편하지만 위의 2가지 문제로 비추천한다. </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.outerText : 해당 요소 노드와 자식 노드의 텍스트를 포함한 모든 텍스트 출력, 개행 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.outerHTML : 지정 요소 노드를 포함한 내용 모두를 HTML 마크업 텍스트로 출력 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.insertAdjacentElement(POSITION, TEXT) : 요소를 특정 요소의 위치에 추가한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.insertAdjacentText(POSITION, TEXT) : Text형식을 특정 요소의 위치에 추가한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.insertAdjacentHTML(POSITION, TEXT) : HTML형식을 특정 요소의 위치에 추가한다. </li>\r\n\t\t\t\t\t\t\t\t<li> <small> # POSITION = beforebegin(요소전), afterbegin(요소첫번째자식보다앞), beforeend(요소마지막자식보다뒤), afterend(요소보다뒤) </small> </li>\r\n\t\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t\t<li> 1. innertHTML과는 다르게 덮어쓰기를 하지않고 파싱을해서 POSITION 위치에 추가를 해준다. </li>\r\n\t\t\t\t\t\t\t\t\t<li> 2. innertHTML과 마찬가지로 XSS 공격에 취약하므로 사용해 주의해야 한다. </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<li> 🔸 NodeList.ClassList (미정리) </li>\r\n\t\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t\t<li> NodeList.ClassList.add() </li>\r\n\t\t\t\t\t\t\t\t\t<li> NodeList.ClassList.remove() </li>\r\n\t\t\t\t\t\t\t\t\t<li> NodeList.ClassList.item </li>\r\n\t\t\t\t\t\t\t\t\t<li> NodeList.ClassList.toggle </li>\r\n\t\t\t\t\t\t\t\t\t<li> NodeList.ClassList.contains </li>\r\n\t\t\t\t\t\t\t\t\t<li> NodeList.ClassList.replace(\"OLD_VALUE\",\"NEW_VALUE\") </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 요소 속성  </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.hasAttribute(\"ATTRIRUBTE\"): 요소가 속성을 가지고 있는지 여부, return boolean </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.getAttribute(\"ATTRIBUTE\") : 요소노드의 해당 속성 값 반환, return string </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.getAttributeNode(\"ATTRIBUTE\") : 속성 노드를 가져온다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.setAttribute(\"ATTRIBUTE\",\"VALUE\") : 요소에 속성,속성 값 추가, createAttribute로 만들지 않아도 속성 추가 가능 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.setAttributeNode(ATTRIBUTE_NODE) : 요소에 속성노드를 추가 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.createAttribute(\"ATTRIBUTE\") : document에 속성을 생성, setAttribute를 사용을 권함 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.createComment(\"COMMENT\") : document에 주석 노드를 생성 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.removeAttribute(\"ATTRIBUTE\") : 요소에 속성 제거 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.removeAttributeNode(ATTRIBUTE_NODE) : 요소에 속성 제거, 그리고 속성 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.classList : 요소의 클래스 속성 값들을 리스트로 반환  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.className : 요소의 클래스 속성 값들을 문자열?로 리턴  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.closest(\"CSS_SELECTOR\") : 요소 노드가 속성을 가지고 있는지 판단, 있으면 노드를리턴 없으면 null  </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.contentEditable=\"true\" : 요소 노드에 텍스트를 입력할 수 있게 한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.isContentEditable : 요소 노드가 contentEditable=\"true\"인지 boolean값 리턴 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.dir=[\"ltr\",\"rtl\",\"auto\"] : 요소 노드에 dir을 설정 <small> # //TODO: dir을 잘 몰라서 일단 패스.. </small> </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.id : 요소 노드의 id값을 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.lang : 요소 노드의 lang속성 값을 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.firstElementChild : 요소 노드의 첫번째 자식 요소 노드 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.lastElementChild : 요소 노드의 마지막 자식 요소 노드 반환 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.matches(\"CSS_SELECTOR\") : id,class 처럼 css선택자가 요소 노드의 속성으로 존재하면 true, 없으면 false</li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 document.documentElement.namespaceURI : namespace의 값을 반환한다. <small> # \"http://www.w3.org/1999/xhtml\"  </small> </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.tabIndex = \"VALUE\" : TabIndex 속성을 지정하는 건데, 탭 순서가 꼬일수 있으므로 사용을 안하는 것 같다. </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.title : title 속성 </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 요소 노드 스타일 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 요소 css스타일 설정 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> ELEMENT_NODE.style.CSS_STYLE = \"STYLE_VALUE\"; <small> # 요소에 스타일을 바꾸는 방법 </small> </li>\r\n\t\t\t\t\t\t\t\t<li> window.getComputedStyle(ELEMENT_NODE,null).getPropertyValue(\"STYLE\") <small> # 요소의 스타일 값을 가져오는 방법 </small>  </li>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 요소 css 스타일 조회 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.clientWidth : 요소 노드의 너비 <small> # width+padding </small> </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.clientHeight : 요소 노드의 높이 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.clientLeft : 요소 노드의 테두리 좌측 너비 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.clientTop : 요소 노드의 테두리 상단 너비 </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.offsetWidth : 요소 노드의 너비 <small> # width+padding+border </small> </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.offsetHeight : 요소 노드의 높이 <small> # width+padding+border </small> </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.offsetLeft </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.offsetTop </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.scrollHeight </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.scrollWidth </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.scrollLeft </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.scrollTop </li>\r\n\t\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE. </li>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 요소 메소드 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.focus() : 요소 노드에 focus를 준다. </li>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.blur() : 요소 노드에 focus를 해제한다. </li>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE1.compareDocumentPosition(ELEMENT_NODE2) : 2개의 요소 노드를 비교하여 리턴 값을 반환  </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> 주의 : 리턴 값은 해당되는 값들이 모두 더해져서 나온다. </li>\r\n\t\t\t\t\t\t\t\t<li> return 1 : NODE1과 NODE2가 같은 문서가 아닐 때 <small> # 해보지는 않음 </small> </li>\r\n\t\t\t\t\t\t\t\t<li> return 2 : NODE1이 NODE2보다 뒤쪽에 위치할 때 </li>\r\n\t\t\t\t\t\t\t\t<li> return 4 : NODE1이 NODE2보다 앞쪽에 위치할 때</li>\r\n\t\t\t\t\t\t\t\t<li> return 8 : NODE1의 부모(상위) 노드가 NODE2일 때 </li>\r\n\t\t\t\t\t\t\t\t<li> return 16: NODE1의 자식(하위) 노드가 NODE2일 때 </li>\r\n\t\t\t\t\t\t\t\t<li> return 32: NODE1과 NODE2가 관계가 없거나, 같은 요소 노드의 속성 노드일 때 <small> # 잘모르겠음 </small> </li>\r\n\t\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t\t<summary> 예시 </summary>\r\n\t\t\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t\t\t<li>  {' <body> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \t<div id=\"n1\" value=\"123\"> '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>  {' \t\t<button value=\"버튼1\" id=\"n2\"> 버튼1 </button> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>  {' \t\t<button value=\"버튼2\" id=\"n3\"> 버튼2 </button> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \t</div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>  {' </body> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li>  {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li>  {' <script> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \tvar n1 = document.getElementById(\"n1\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \tvar n2 = document.getElementById(\"n2\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \tvar n3 = document.getElementById(\"n3\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \tvar a2 = n3.compareDocumentPosition(n2); // 2 = 2(after) '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \tvar a4 = n2.compareDocumentPosition(n3); // 4 = 4(before) '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \tvar a8 = n2.compareDocumentPosition(n1); // 10 = 8(parent) + 2(after)  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \tvar a16 = n1.compareDocumentPosition(n2); // 20 = 16(child) + 4(before) '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {' \tconsole.log(a2, a4, a8, a16); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>  {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>  {' </script> '} </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE1.contains(ELEMENT_NODE2) : NODE1에 NODE2가 포함이 되었는지 boolean값 반환 </li>\r\n\t\t\t\t\t\t\t<li> 🔸 DOCUMENT_NODE.requestFullscreen() , DOCUMENT_NODE.exitFullscreen() : 웹 페이지 화면 최대화,이전 크기로 만들기 </li>\r\n\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t<li> DOCUMENT_NODE = document.documentElement; </li>\r\n\t\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t\t<li> if (DOCUMENT_NODE.requestFullscreen) DOCUMENT_NODE.requestFullscreen(); </li>\r\n\t\t\t\t\t\t\t\t\t<li> if (DOCUMENT_NODE.webkitRequestFullscreen) DOCUMENT_NODE.webkitRequestFullscreen(); <small> # safari </small> </li>\r\n\t\t\t\t\t\t\t\t\t<li> if (DOCUMENT_NODE.msRequestFullscreen) DOCUMENT_NODE.msRequestFullscreen(); <small> # IE 11 </small> </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t\t<li> if(document.requestFullscreen) document.exitFullscreen(); </li>\r\n\t\t\t\t\t\t\t\t\t<li> if(document.webkitExitFullscreen) document.webkitExitFullscreen(); <small> # safari </small> </li>\r\n\t\t\t\t\t\t\t\t\t<li> if(document.msExitFullscreen) document.msExitFullscreen(); <small> # IE 11 </small> </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.getBoundingClientRect().[left,top,width,height] : viewport에서 요소의 상대적인 위치와 너비,높이를 알 수 있다. </li>\r\n\t\t\t\t\t\t\t<li> 🔸 document.documentElement.isDefaultNamespace(\"NAMESPACE\") : 디폴트 namespace(xml에서 사용)가 맞는지 여부, boolean값 리턴 </li>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE1.isEqualNode(ELEMENT_NODE2) : NODE1이 NODE2와 같은지 여부, boolean값 리턴 </li>\r\n\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t<li> 1. 노드 타입이 같아야 한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 2. 노드 name,value,namespaceURI, prefix, localname 이 같아야 한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 3. 같은 childNode 이어야 한다. </li>\r\n\t\t\t\t\t\t\t\t<li> 4. 같은 속성, 속성 값이어야 한다. </li>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE1.isSameNode(ELEMENT_NODE2) : NODE1 과 NODE2가 완전 일치해야한다. </li>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.isSupported(\"\",\"\") : 지원되는 버전이면 true반환이라는데, 현재는 사용을 안하는 추세라서 패스~ </li>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE.normalize() : 이웃해 있는 텍스트 노드를 모두 합쳐서 하나의 텍스트 노드로 만듬 <small> # createTextNode를 사용하면\r\n\t\t\t\t\t\t\t\t텍스트 노드가 2개로 분리가 된다. 만약에 합치지 않고 결과만 얻고 싶다면 wholeText을 사용하면 된다. </small> </li>\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary> 예시 </summary>\r\n\t\t\t\t\t\t\t\t<div className=\"block3\">\r\n\t\t\t\t\t\t\t\t\t<li> {' <body> '}\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \t<div id=\"test\"> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t<div id=\"test1\"> 1 </div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \t</div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \t<button id=\"btn\"> createTextNode(\" hello \") </button> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \t<button id=\"btn1\"> normalize() </button> '} </li>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li> {' </body> '} </li>\r\n\t\t\t\t\t\t\t\t\t<li> {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t<li> {' <script> '}\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \tvar test = document.getElementById(\"test\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \tvar test1 = document.getElementById(\"test1\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \tdocument.getElementById(\"btn\").addEventListener(\"click\", () => { '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tvar x = document.createTextNode(\" hello \"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\ttest1.appendChild(x); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tconsole.log(test1); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tconsole.log(test1.childNodes[0].wholeText); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tconsole.log(test1.childNodes.length); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \t}) '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \tdocument.getElementById(\"btn1\").addEventListener(\"click\", () => { '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\ttest1.normalize(); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tconsole.log(test1); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tconsole.log(test1.childNodes.length); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' \t}) '} </li>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li> {' </script> '} </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t\t<li> 🔸 ELEMENT_NODE. </li>\r\n\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 장점, 단점 </h2>\r\n\t\t\t\t\t\t\t<li> 장점 : </li>\r\n\t\t\t\t\t\t\t<li> 단점 : </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> EventListener - 요소 노드에 이벤트를 추가,삭제 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<li> [document, ELEMENT_NODE].addEventListener(\"EVENT\",FUNCTION) : 문서나 요소 노드에 이벤트를 추가하는 방법 </li>\r\n\t\t\t\t\t\t\t<li> 2 </li>\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 장점, 단점 </h2>\r\n\t\t\t\t\t\t\t<li> 장점 : </li>\r\n\t\t\t\t\t\t\t<li> 단점 : </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> aptNode, importNode, cloneNode - 다른 문서에서 노드를 가져오거나 복사 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<li> document.adoptNode(ELEMENT_NODE) : 문서 노드에 다른 문서에서 가져온 노드를 추가한다? </li>\r\n\t\t\t\t\t\t\t<li> 2 </li>\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 장점, 단점 </h2>\r\n\t\t\t\t\t\t\t<li> 장점 : </li>\r\n\t\t\t\t\t\t\t<li> 단점 : </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 노드 이벤트 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 마우스 이벤트 </h2>\r\n\t\t\t\t\t\t\t<li> ELEMENT_NODE.click() : 요소 노드를 클릭한다. </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 장점, 단점 </h2>\r\n\t\t\t\t\t\t\t<li> 장점 : </li>\r\n\t\t\t\t\t\t\t<li> 단점 : </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary>  </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<li> 1 </li>\r\n\t\t\t\t\t\t\t<li> 2 </li>\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 장점, 단점 </h2>\r\n\t\t\t\t\t\t\t<li> 장점 : </li>\r\n\t\t\t\t\t\t\t<li> 단점 : </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default JavaScriptElement;","import React from 'react';\r\n\r\nconst JavaScriptEvent = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"common_style\" >\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 이벤트 설명 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 JS Event를 사용하는 방법 3가지 </h2>\r\n\t\t\t\t\t\t\t<li> 1. html에 event메소드를 붙여 사용 </li>\r\n\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t<li> {' <button onclick=()=>{alert(\"hi\")}> 버튼 </button> '} </li>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<li> 2. JS애 .on 메소드?를 이용해서 사용 </li>\r\n\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t<li> {' ELEMENT.onclick = ()=> { alert(\"hi\") } '} </li>\r\n\t\t\t\t\t\t\t\t<li> {' ELEMENT.onclick = FUNCTION; '} </li>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<li> 3. addEventListener를 이용해서 사용 </li>\r\n\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t<li> {' ELEMENT.addEventListener(EVENT,()=>{alert(\"hi\")}) '} </li>\r\n\t\t\t\t\t\t\t\t<li> {' ELEMENT.addEventListener(EVENT,FUNCTION) '} </li>\r\n\t\t\t\t\t\t\t\t<li> {' ELEMENT.addEventListener(EVENT,FUNCTION,true) '} <small> # 이벤트 캡처링 </small> </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 JS 이벤트 전달단계 </h2>\r\n\t\t\t\t\t\t\t<li> 조상요소에서 Capturing가 시작되어 target요소(이벤트발생요소)까지 갔다가 그때 부터\r\n\t\t\t\t\t\t\t\tbubbling이 발생하여 조상요소까지 도달한다. </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 전파를 차단하는 방법 4가지(사용 비추천, 페이지에서 사용자 행동패턴 분석가능) </h2>\r\n\t\t\t\t\t\t\t<li> event.preventDefault() : 현재 이벤트의 기본 동작 중지  </li>\r\n\t\t\t\t\t\t\t<li> event.stopPropagation() : 현재 이벤트가 상위로 전파되지 못하도록 막음 </li>\r\n\t\t\t\t\t\t\t<li> event.stopImmediatePropagation() : 현재 이벤트가 상위로 전파되지 못하도록 막음 {'&'} 현재 다른 이벤트도 모두 중지 </li>\r\n\t\t\t\t\t\t\t<li> return false  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 속성 및 메소드 </h2>\r\n\t\t\t\t\t\t\t<li> defaultPrevented : preventDefault()가 이벤트에서 호출되었는지를 반환 </li>\r\n\t\t\t\t\t\t\t<li> target : 이벤트를 발생시킨 요소 반환 </li>\r\n\t\t\t\t\t\t\t<li> currentTarget : 이벤트의 부모 요소를 반환 </li>\r\n\t\t\t\t\t\t\t<li> type : 이벤트 이름 반환 </li>\r\n\t\t\t\t\t\t\t<li> view :  </li>\r\n\t\t\t\t\t\t\t<li> document.createEvent(\"EVENT_TYPE\") : 이벤트 개체를 생성, 딱히 사용할 필요가 있는지 몰라서 일단 넘어간다...  </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 Event Bubbling </h2>\r\n\t\t\t\t\t\t\t<li> 하위 태그에서 상위 태그로 이벤트를 발생시키는 것 </li>\r\n\t\t\t\t\t\t\t<li> 자바스크립트는 이벤트가 발생한 요소부터 상위 요소들로 거슬러 올라가 이벤트를 전파시킨다. </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 Event Capture </h2>\r\n\t\t\t\t\t\t\t<li> 하위 태그에서 상위 태그로 이벤트를 발생시키는 것 </li>\r\n\t\t\t\t\t\t\t<li> 자바스크립트는 이벤트가 발생한 요소부터 상위 요소들로 거슬러 올라가 이벤트를 전파시킨다. </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시(예시 나중에 수정할 것) </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <body> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t<h2> 이벤트 버블링 </h2> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t<span class=\"span1\"> span1 '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t<span class=\"span2\"> span2 '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t\t<span class=\"span3\"> span3 </span> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t</span> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t</span> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t<h2> 이벤트 캡처 </h2> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t<div class=\"div1\"> div1 '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t<div class=\"div2\"> div2 '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t\t<div class=\"div3\"> div3 </div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t</div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t</div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </body> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <script> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tvar elements1 = document.querySelectorAll(\"span\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \telements1.forEach((x) => { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tx.addEventListener(\"click\", () => { alert(x.className); }) '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t}) '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tvar divs = document.querySelectorAll(\"div\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tdivs.forEach(function (div) { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\tdiv.addEventListener(\"click\", logEvent, { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t\tcapture: true // default 값은 false입니다. '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\t}); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t}); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {'  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \tfunction logEvent(event) { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' \t\talert(event.currentTarget.className); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' \t} '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </script> '} </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 마우스 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 마우스 이벤트 </h2>\r\n\t\t\t\t\t\t\t<li> click : 요소에 마우스를 클릭하고 떼었을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> dbclick : 요소에 마우스를 더블클릭하였을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> mousedown : 요소에 안에서 마우스를 클릭하였을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> mouseup : 요소에 마우스 클릭을 떼었을 때 </li>\r\n\t\t\t\t\t\t\t<li> mouseover : 요소에 마우스를 올려놓았을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> mouseout : 요소에서 마우스가 벗어났을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> mousemove : 요소 위에서 마우스를 움직였을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> contextmenu : 요소에서 마우스 우측클릭 메뉴가 나올때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> mousewheel : 마우스 휠을 사용할 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> scroll : 스크롤바를 움직였을 때 이벤트 발생  </li>\r\n\t\t\t\t\t\t\t<li> wheel : 마우스 휠을 움직일 때 이벤트 발생 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 속성 및 메소드 </h2>\r\n\t\t\t\t\t\t\t<li> event.which : 마우스 어떤 버튼이 눌렸는지 </li>\r\n\t\t\t\t\t\t\t<li> event.deltaX : 마우스 휠의 x축(가로) 스크롤 양 반환 , ???</li>\r\n\t\t\t\t\t\t\t<li> event.deltaY : 마우스 휠의 y축(세로) 스크롤 양 반환 , ???</li>\r\n\t\t\t\t\t\t\t<li> event.deltaZ : 마우스 휠의 z축 스크롤 양 반환 , ???</li>\r\n\t\t\t\t\t\t\t<li> event.detail : 마우스 클릭 횟수 반환 </li>\r\n\t\t\t\t\t\t\t<li> relatedTarget : 마우스,포커스 이벤트를 트리거한 요소와 관련된 요소를 반환합니다. </li>\r\n\t\t\t\t\t\t\t<li> MovementX :  mousemove 이벤트의 마지막 가로 좌표 반환 </li>\r\n\t\t\t\t\t\t\t<li> MovementY :  mousemove 이벤트의 마지막 세로 좌표 반환 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 키보드, 스크롤, 터치 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 설명 </h2>\r\n\t\t\t\t\t\t\t<li> 이벤트 : MouserEvent,  </li>\r\n\t\t\t\t\t\t\t<li> keydown : 요소(input)위에서 키보드를 눌렀을 때 이벤트 발생 <small> # 어떤 요소에서 되는지는 확인이 필요 </small> </li>\r\n\t\t\t\t\t\t\t<li> keypress : 요소를 눌렀을 때 이벤트 발생(누르고 있으면 계속 이벤트 발생) , 방향키 등 입력이 되지 않는\r\n\t\t\t\t\t\t\t\t키보드의 입력에는 이벤트가 발생하지 않는다. </li>\r\n\t\t\t\t\t\t\t<li> keyup : 요소(input)위에서 키보드를 눌렀다가 떼었을 때 이벤트 발생 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 속성 및 메소드 </h2>\r\n\t\t\t\t\t\t\t<li> event.altKey : 마우스,키보드 이벤트에서 Alt 키가 눌렸는지 여부 반환 </li>\r\n\t\t\t\t\t\t\t<li> event.ctrlKey : 마우스,키보드 이벤트에서 Ctrl 키가 눌렸는지 여부 반환 </li>\r\n\t\t\t\t\t\t\t<li> event.shiftKey : 마우스,키보드 이벤트에서 shift 키가 눌렸는지 여부 반환 </li>\r\n\t\t\t\t\t\t\t<li> event.button : 마우스가 눌렸으면 0반환 , 아니면 undefined </li>\r\n\t\t\t\t\t\t\t<li> event.buttons : 마우스가 어떤 버튼이 눌렸는지 반환 좌측0,우측2,스크롤4 , 아니면 undefined , 작동하는 것에 대해서는\r\n\t\t\t\t\t\t\t\t좀더 알아볼 필요가 있다. </li>\r\n\r\n\t\t\t\t\t\t\t<li> event.cancelable : 취소 가능한 이벤트인지 여부 , 어떻게 사용하는지 모르겠다. </li>\r\n\t\t\t\t\t\t\t<li> offsetX : 이벤트가 발생하는 요소를 기준 </li>\r\n\t\t\t\t\t\t\t<li> offsetY : 이벤트가 발생하는 요소를 기준 </li>\r\n\t\t\t\t\t\t\t<li> pageX : 전체 문서를 기준 </li>\r\n\t\t\t\t\t\t\t<li> pageY : 전체 문서를 기준 </li>\r\n\t\t\t\t\t\t\t<li> screenX : 사용자 모니터 좌측 상단 기준 </li>\r\n\t\t\t\t\t\t\t<li> screenY : 사용자 모니터 좌측 상단 기준 </li>\r\n\t\t\t\t\t\t\t<li> event.clientX : 브라우저에서 사용자에게 보이는 화면 기준 </li>\r\n\t\t\t\t\t\t\t<li> event.clientY : 브라우저에서 사용자에게 보이는 화면 기준 </li>\r\n\t\t\t\t\t\t\t<li> event.code : 키보드로 입력한 키 코드 반환 </li>\r\n\t\t\t\t\t\t\t<li> event.composed : 이벤트가 작성되었는지 여부 반환, 무슨 의미인지 모르겠다. </li>\r\n\t\t\t\t\t\t\t<li> event.deltaMode : 델타 값을 반환 , ??? </li>\r\n\t\t\t\t\t\t\t<li> isComposing : 이벤트 상태인지 아닌지 여부 판단 </li>\r\n\t\t\t\t\t\t\t<li> event.key : 이벤트가 보여주는 키의 값 반환 </li>\r\n\t\t\t\t\t\t\t<li> event.keyCode : 키보드 이벤트에서 유니코드 문자나 유니코드 키코드를 반환 </li>\r\n\t\t\t\t\t\t\t<li> event.location : 키보드의 키의 위치?구역? 을 0~4로 반환 ( 0: standard key, 1: left key, 2: right key, 3: keypad ) </li>\r\n\t\t\t\t\t\t\t<li> metakey : metakey가 눌렸을 때의 여부 반환, 메타키가 특정키보드나 운영체제에 있나보다(Mac,MIT기계 등등) </li>\r\n\t\t\t\t\t\t\t<li> region :  </li>\r\n\t\t\t\t\t\t\t<li> repeat : 키보드가 반복적으로 눌렸는지 판단 여부 </li>\r\n\t\t\t\t\t\t\t<li> targetTouches : 현재 대상 요소에서 터치 이벤트가 발생한 모든 터치 객체 목록 반환 </li>\r\n\t\t\t\t\t\t\t<li> touches : 표면에 접촉하고 있는 모든 터치 객체 목록 반환 </li>\r\n\t\t\t\t\t\t\t<li> getModifierState([Alt,AltGraph,Control,Meta,Shift,CapsLock,NumLock,ScrollLock]) : 특정 키가 활성화 되었는지 판단 여부  </li>\r\n\t\t\t\t\t\t\t<li> event.inputType : input태그에 키보드로 입력했을 때 어떤 행동을 취했는지를 알려줌 </li>\r\n\t\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t\t<summary> inputType 행동 목록 </summary>\r\n\t\t\t\t\t\t\t\t<div className=\"bloack4\">\r\n\t\t\t\t\t\t\t\t\t<li> \"insertText\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertReplacementText\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertLineBreak\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertParagraph\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertOrderedList\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertUnorderedList\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertHorizontalRule\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertFromYank\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertFromDrop\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertFromPaste\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertTranspose\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertCompositionText\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertFromComposition\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"insertLink\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteByComposition\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteCompositionText\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteWordBackward\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteWordForward\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteSoftLineBackward\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteSoftLineForward\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteEntireSoftLine\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteHardLineBackward\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteHardLineForward\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteByDrag\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteByCut\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteByContent\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteContentBackward\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"deleteContentForward\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"historyUndo\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"historyRedo\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatBold\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatItalic\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatUnderline\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatStrikethrough\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatSuperscript\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatSubscript\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatJustifyFull\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatJustifyCenter\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatJustifyRight\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatJustifyLeft\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatIndent\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatOutdent\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatRemove\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatSetBlockTextDirection\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatSetInlineTextDirection\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatBackColor\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatFontColor\" </li>\r\n\t\t\t\t\t\t\t\t\t<li> \"formatFontName\" </li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</details>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 폼, 포커스 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 설명 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t<li> 이벤트 : ClipboardEvent, FocusEvent,  </li>\r\n\t\t\t\t\t\t\t\t<li> focus : 요소에 포커스가 되었을 때 이벤트 발생 <small> # 포커스가 되려는 요소에 이벤트가 바인딩이 되있어야 작동하는것 같다. </small> </li>\r\n\t\t\t\t\t\t\t\t<li> focusin : 요소에 포커스가 집중되었을 때 이벤트 발생  </li>\r\n\t\t\t\t\t\t\t\t<li> focusout : 요소가 포커스에서 벗어날 때 이벤트 발생  </li>\r\n\t\t\t\t\t\t\t\t<li> blur : 요소에 포커스가 없어졌을 때 이벤트 발생 <small> # 포커스가 되려는 요소에 이벤트가 바인딩이 되있어야 작동하는것 같다. </small> </li>\r\n\t\t\t\t\t\t\t\t<li> change : 요소에 값이 변경 되었을 때 이벤트 발생 <small> # input(type=text,radio,checkbox), textarea, select,  더 찾아보는중 </small> </li>\r\n\t\t\t\t\t\t\t\t<li> cut : 폼 필드의 요소에 텍스트를 잘라낼 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> copy : 폼 필드의 요소에 텍스트를 복사할 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> paste : 폼 필드의 요소에 텍스트를 붙여넣기할 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> submit : submit 버튼을 눌렀을 때 이벤트 발생 <small> # form태그에 이벤트가 바인딩 되어있어야 작동을 하는 것 같다. </small> </li>\r\n\t\t\t\t\t\t\t\t<li> reset : reset 버튼을 눌렀을 때 이벤트 발생 <small> # type=\"reset\" 해봤는데 작동이 안됨, 나중에 찾아보기 </small> </li>\r\n\t\t\t\t\t\t\t\t<li> select : input이나 textarea 요소 안의 텍스트를 드래그하여 선택했을 때 이벤트 발생  </li>\r\n\t\t\t\t\t\t\t\t<li> input : input태그 내부에 입력할 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> search : input:search에 입력하고 Enter를 눌렀을 때 이벤트가 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> show : 메뉴 태그와 관련이 있는데  나중에 알아보기  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 속성 및 메소드 </h2>\r\n\t\t\t\t\t\t\t<li> clipboardData : 클립보드 객체 반환 , 어떻게 쓰는지 모르겠다. </li>\r\n\t\t\t\t\t\t\t<li> data : input이벤트를 사용할 때 사용되기는 하는데 용도는 나중에 알아봐야겠다. </li>\r\n\t\t\t\t\t\t\t<li> dataTransfer : 드래그,드롭,삽입,삭제 데이터 포함 객체 반환, 나중에 알아보기 </li>\r\n\t\t\t\t\t\t\t<li> getTargetRanges() : 삽입/삭제 영향을 받을 대상 범위를 포함하는 배열을 반환합니다. </li>\r\n\t\t\t\t\t\t\t<li>   </li>\r\n\t\t\t\t\t\t\t<li>   </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 예시\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <body>  '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' <form action=\"\" id=\"form\">  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"text\" id=\"input\"> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input id=\"test1\" type=\"text\" />  <br />'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"reset\">  <br />'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"submit\">  <br />'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"text\" placeholder=\"change\" />  <br />'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"text\" placeholder=\"blur\" id=\"blur\" />  <br />'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"text\" placeholder=\"focus\" id=\"focus\" />  <br />'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"text\" placeholder=\"focusin\" id=\"focusin\" /> <br />'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"text\" placeholder=\"focusout\" id=\"focusout\" /> <br />'} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"text\" placeholder=\"select\" id=\"select\" /> <br /> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <input type=\"text\" id=\"invalid\" required> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <button type=\"submit\"> 제출 </button> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' </form>  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </body>  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <script>  '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' var focus = () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"focus\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"focus\").removeEventListener(\"focus\", focus);  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' };  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' var focusin = () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"focusin\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"focusin\").removeEventListener(\"focusin\", focusin);  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' };  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' var select = () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"select\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"select\").removeEventListener(\"select\", select);  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' };  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"focus\").addEventListener(\"focus\", focus);  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"focusin\").addEventListener(\"focusin\", focusin); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"focusout\").addEventListener(\"focusout\", () => { '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"focusout\"); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"blur\").addEventListener(\"blur\", () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"blur\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' });  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"form\").addEventListener(\"change\", () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"change\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' });  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"test1\").addEventListener(\"cut\", () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"cut\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' });  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"test1\").addEventListener(\"copy\", () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"copy\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' });  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"test1\").addEventListener(\"paste\", () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"paste\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' });  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"form\").addEventListener(\"reset\", () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"reset\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' });  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"form\").addEventListener(\"submit\", () => {  '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' alert(\"submit\");  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' });  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"select\").addEventListener(\"select\", select);  '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"input\").addEventListener(\"input\", () => { alert(\"input\") }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"invalid\").addEventListener(\"invalid\", () => { alert(\"invalid\") }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </script>  '} </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 페이지, 로딩, 스토리지 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 설명 </h2>\r\n\t\t\t\t\t\t\t<div className=\"block4\">\r\n\t\t\t\t\t\t\t\t<li> 이벤트 : UIEvent,  </li>\r\n\t\t\t\t\t\t\t\t<li> load : 페이지의 로딩이 완료되었을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> loadeddata : </li>\r\n\t\t\t\t\t\t\t\t<li> loadedmetadata : </li>\r\n\t\t\t\t\t\t\t\t<li> loadstart :  </li>\r\n\t\t\t\t\t\t\t\t<li> unload : 페이지가 다른 곳으로 이동될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> abort : 이미지의 로딩이 중단되었을 때 이벤트 발생</li>\r\n\t\t\t\t\t\t\t\t<li> resize : 요소에 사이즈가 변경되었을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> afterprint : 페이지 인쇄가 시작되거나 인쇄창이 닫힐 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> beforeprint : 페이지가 인쇄될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> beforeunload : 문서가 호출되기 전에 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> storage : 웹 저장소가 업데이트 될 때 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> storageArea : 영향을 받는 스토리지 개체를 나타내는 개체를 반환합니다. </li>\r\n\t\t\t\t\t\t\t\t<li> error : 외부 파일 로드하는중에 에러가 생기면 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> fullscreenchange : 전체 화면 모드 표시될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> fullscreenerror : 전체 화면 모드로 표시가 될 수 없으면 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> hashchange : URL 앵커 부분에 변경이 있을 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> pagehide : 사용자가 페이지에서 벗어날 때 </li>\r\n\t\t\t\t\t\t\t\t<li> pageshow : 사용자가 페이지로 이동할 때 </li>\r\n\t\t\t\t\t\t\t\t<li> popstate : 윈도우 히스토리가 변경될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> resize : 문서 뷰의 크기가 변경될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t\t<li> state : 기록 항목의 복사본을 포함하는 개체를 반환합니다. </li>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 속성 및 메소드 </h2>\r\n\t\t\t\t\t\t\t<li> persisted : 웹 페이지가 브라우저에 의해 캐시되었는지 여부를 반환합니다. </li>\r\n\t\t\t\t\t\t\t<li> url :  </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 미디어 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 설명 </h2>\r\n\t\t\t\t\t\t\t<li> canplay : 미디어가 재생될 정도가 될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> pause : 사용자가 미디어를 일시중지 시킬 때 발생 </li>\r\n\t\t\t\t\t\t\t<li> play : 미디어가 플레이 중일 떄 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> playing : 미디어가 버퍼링 때문에 일시중지 될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> seeked : 사용자가 미디어 이벤트의 새 위치로 이동, 건너뛰기를 마칠 때 </li>\r\n\t\t\t\t\t\t\t<li> seeking : 사용자가 미디어 이벤트의 새 위치로 이동, 건너뛰기를 시작할 때 </li>\r\n\t\t\t\t\t\t\t<li> stalled : 미디어 데이터를 가져오려다 데이터를 사용할 수 없을 떄 발생 </li>\r\n\t\t\t\t\t\t\t<li> canplaythrough :  </li>\r\n\t\t\t\t\t\t\t<li> durationchange :  </li>\r\n\t\t\t\t\t\t\t<li> timeupdate :  </li>\r\n\t\t\t\t\t\t\t<li> suspend : 브라우저가 미디어 데이터를 가져오지 않을 때 발생 </li>\r\n\t\t\t\t\t\t\t<li> ended : 미디어 마지막에 도착하면 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> progress : 브라우저가 미디어 데이터를 가져오거나 다운중일때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> ratechange : 미디어의 재생속도가 변경될 떄 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> volumechange : 미디어의 볼륨이 변경되면 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> waiting :  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 속성 및 메소드 </h2>\r\n\t\t\t\t\t\t\t<li> onemptied : 잘못된 일이 발생하여 미디어 파일을 사용할 수 없는 경우(예상치 않게 연결이 끊기는 경우) 이벤트가 발생합니다.  </li>\r\n\t\t\t\t\t\t\t<li>   </li>\r\n\t\t\t\t\t\t\t<li>   </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 애니메이션, 트랜지션 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 설명 </h2>\r\n\t\t\t\t\t\t\t<li> 이벤트 : AnimationEvent </li>\r\n\t\t\t\t\t\t\t<li> animationend : 애니메이션이 끝날 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> animationiteration : 애니메이션이 반복될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> animationstart : 애니메이션 시작될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 속성 및 메소드 </h2>\r\n\t\t\t\t\t\t\t<li> animationName : 애니메이션 이름 반환  </li>\r\n\t\t\t\t\t\t\t<li> elapsedTime : 애니메이션,트랜지션 실행시간(초) 반환  </li>\r\n\t\t\t\t\t\t\t<li> propertyName : 애니메이션 또는 전환과 관련된 CSS 속성의 이름을 반환합니다. </li>\r\n\t\t\t\t\t\t\t<li> pseudoElement : 애니메이션 또는 전환의 유사 요소의 이름을 반환합니다.  </li>\r\n\t\t\t\t\t\t\t<li> transitionend : CSS 전환이 완료 될 때 이벤트 발생  </li>\r\n\t\t\t\t\t\t\t<li>   </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 드래그 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 설명 </h2>\r\n\t\t\t\t\t\t\t<li> 이벤트 : DragEvent,  </li>\r\n\t\t\t\t\t\t\t<li> 태그에 draggable=\"true\"를 주어야 작동?이 되는것 같다. (그러면 드래그가 안되는데... 나중에 필요할때 찾아봐야겠다.) </li>\r\n\t\t\t\t\t\t\t<li> drag : 드래그하면 이벤트 발생  </li>\r\n\t\t\t\t\t\t\t<li> dragend : 드래그 끝나면 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> dragenter : 드래그 한 요소가 이벤트 요소 내부에 들어갈 때 발생 </li>\r\n\t\t\t\t\t\t\t<li> dragleave : 드래그 한 요소가 이벤트 요소 내부에 들어갔다가 나올 때 발생 </li>\r\n\t\t\t\t\t\t\t<li> dragover : 드래그 한 요소가 이벤트 요소 내부에 들어갔다가 나올 때 발생 </li>\r\n\t\t\t\t\t\t\t<li> dragstart : 요소를 드래그 할 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> drop : 드래그 한 요소가 이벤트 요소 내부에 들어갈 때 이벤트 발생(사용 실패... 나중에 찾아보기) </li>\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <body> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' <div> '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <p id=\"drag\" draggable=\"true\"> drag </p> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <p id=\"dragend\" draggable=\"true\"> dragend </p> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <div id=\"dragenter\" draggable=\"true\" style=\"width: 500px; height:200px; border:solid black 1px;\"> dragenter </div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <div id=\"dragleave\" draggable=\"true\" style=\"width: 500px; height:200px; border:solid black 1px;\"> dragleave </div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <div id=\"dragover\" draggable=\"true\" style=\"width: 500px; height:200px; border:solid black 1px;\"> dragover </div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li> {' <div id=\"dragstart\" draggable=\"true\"> dragstart </div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' </div> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </body> '} </li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' <script> '}\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"drag\").addEventListener(\"drag\", () => { alert(\"drag\"); }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"dragend\").addEventListener(\"dragend\", () => { alert(\"dragend\"); }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"dragenter\").addEventListener(\"dragenter\", () => { alert(\"dragenter\"); }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"dragleave\").addEventListener(\"dragleave\", () => { alert(\"dragleave\"); }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"dragover\").addEventListener(\"dragover\", () => { alert(\"dragover\"); }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li> {' document.getElementById(\"dragstart\").addEventListener(\"dragstart\", () => { alert(\"dragstart\"); }); '} </li>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li> {' </script> '} </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 메시지, 연결 상태  </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 설명 </h2>\r\n\t\t\t\t\t\t\t<li> message :  </li>\r\n\t\t\t\t\t\t\t<li> offline : 브라우저가 오프라인일 때 </li>\r\n\t\t\t\t\t\t\t<li> online :  브라우저가 온라인일 때 </li>\r\n\t\t\t\t\t\t\t<li> open </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 장점, 단점 </h2>\r\n\t\t\t\t\t\t\t<li> 장점 : </li>\r\n\t\t\t\t\t\t\t<li> 단점 : </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 기타 </summary>\r\n\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 이벤트 설명 </h2>\r\n\t\t\t\t\t\t\t<li> toggle : details태그 열거나 닫을때 이벤트가 발생  </li>\r\n\t\t\t\t\t\t\t<li> touchcancel : 터치가 끝나면 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> touchend : 화면에서 터치를 땔 때 발생 </li>\r\n\t\t\t\t\t\t\t<li> touchmove : 화면을 터치 후 이동하면 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li> touchstart : 화면을 터치하면 이벤트가 발생 </li>\r\n\t\t\t\t\t\t\t<li> transitionend : css가 완료될 때 이벤트 발생 </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 속성 및 메소드 </h2>\r\n\t\t\t\t\t\t\t<li> bubbles : 버블링 이벤트 여부 반환  </li>\r\n\t\t\t\t\t\t\t<li> cancelable :   </li>\r\n\t\t\t\t\t\t\t<li> event.charCode : 입력을 하면 유니(아스키?) 코드 문자 반환 </li>\r\n\t\t\t\t\t\t\t<li> changeTouches : 이전 터치와 현재 터치 사이에 상태가 변경된 객체의 목록 반환  </li>\r\n\t\t\t\t\t\t\t<li> createEvent() : 이벤트를 생성  </li>\r\n\t\t\t\t\t\t\t<li> event.currentTarget: 현재 이벤트를 실행한 요소 반환 </li>\r\n\t\t\t\t\t\t\t<li> eventPhase : 현재 평가중인 이벤트 흐름의 단계를 나타내는 숫자를 반환, 무슨소리인지 모르겠음 </li>\r\n\t\t\t\t\t\t\t<li> isTrusted : 이벤트가 신뢰 여부 반환? </li>\r\n\t\t\t\t\t\t\t<li> lengthComputable : 진행 길이를 계산할 수 있는지 여부를 반환합니다. </li>\r\n\t\t\t\t\t\t\t<li> loaded : 로드된 작업량을 반환합니다. </li>\r\n\t\t\t\t\t\t\t<li> newValue :  </li>\r\n\t\t\t\t\t\t\t<li> oldValue :  </li>\r\n\t\t\t\t\t\t\t<li> newURL :  </li>\r\n\t\t\t\t\t\t\t<li> oldURL :   </li>\r\n\t\t\t\t\t\t\t<li> timeStamp : 이벤트가 작성된 시간(밀리초) </li>\r\n\t\t\t\t\t\t\t<li> total : 로드할 총 작업량 반환 </li>\r\n\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t<li>  </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default JavaScriptEvent;","import React from 'react';\r\n\r\nconst Blank = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className=\"common_style\" >\r\n\r\n\t\t\t\t<div className='block1'>\r\n\t\t\t\t\t<details>\r\n\t\t\t\t\t\t<summary> 제목 </summary>\r\n\t\t\t\t\t\t<div className='block2'>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 설명 </h2>\r\n\t\t\t\t\t\t\t<li> 1 </li>\r\n\t\t\t\t\t\t\t<li> 2 </li>\r\n\t\t\t\t\t\t\t<li> 3 </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> 📌 장점, 단점 </h2>\r\n\t\t\t\t\t\t\t<li> 장점 : </li>\r\n\t\t\t\t\t\t\t<li> 단점 : </li>\r\n\r\n\t\t\t\t\t\t\t<h2 className='h2'> ✔ 예시 </h2>\r\n\t\t\t\t\t\t\t<li> 소제목\r\n\t\t\t\t\t\t\t\t<div className='block3'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='h3'> 🎈 </h3>\r\n\t\t\t\t\t\t\t\t\t<div className='block4'>\r\n\t\t\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</details>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Blank;","import React from 'react';\r\n\r\nconst JavaScriptAjax = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> Ajax </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> Asynchronous JavaScript And Xml </li>\r\n                            <li> 비동기식 자바스크립트 xml </li>\r\n                            <li> 웹페이지를 재로딩 하지 않고 화면의 객체를 움직일 수 있다. </li>\r\n                            <li> 클라이언트가 서버와 작은양의 데이터를 교환 </li>\r\n                            <li> 사용예시 : 키워드 검색,  </li>\r\n                            <li> 메소드를 ajax에 넣어서 보내도 인식을 하지 못한다. </li>\r\n                            <li>  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> ajax 관련 속성과 사용방법 예시 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> <a href=\"https://api.jquery.com/jQuery.ajax/\" target=\"_blank\" rel=\"noopener noreferrer\"> ajax 문서 참조 </a> </li>\r\n                            <li> type: [GET,POST,DELETE,PUT] <small> # 통신타입을 설정 </small> </li>\r\n                            <li> url : /main/test1 <small> # 서버에 요청할 주소 </small> </li>\r\n                            <li> data: <small> # 서버에 보낼 데이터 </small>   </li>\r\n                            <li> dataType : [xml,html,json,jsonp,script,text] <small> # 보낼 데이터 타입, 적지 않는다면 자동으로 판단 </small> </li>\r\n                            <li> async : [true,false] <small> # 동기(false), 비동기(true) 처리 여부 </small> </li>\r\n                            <li> statusCode : <small> #  </small> </li>\r\n                            <li> jsonp : <small> # jsonp를 사용할 때 파라미터명 설정 </small> </li>\r\n                            <li> contentType : [application/json, text/plain, text/html] <small> # 서버로 요청할 데이터 방식 설정 </small> </li>\r\n                            <li> timeout : <small> # http 요청에 대한 제한시간 지정 (ms) </small> </li>\r\n                            <li> headers :  </li>\r\n                            <li> success : <small> # 요청에 성공하였을 때 어떻게 처리할지 설정 </small> </li>\r\n                            <li> error : <small> # 응답에 실패했을 때 처리하는 방법 설정 </small> </li>\r\n                            <li> complete : <small> # 모든작업을 처리한 후 처리 설정 </small>  </li>\r\n                            <li> beforeSend : <small> # ajax요청을 하기전에 실행하는 콜백함수 </small>  </li>\r\n                            <li>  </li>\r\n                            <li>  </li> <br />\r\n\r\n                            <li> .done(함수) <small> # 요청 성공 시 호출되는 함수 </small> </li>\r\n                            <li> .fail(함수) <small> # 요청 실패 시 호출되는 함수 </small> </li>\r\n                            <li> .always(함수) <small> # 항상 호출되는 함수 </small> </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li> 경우에 따라 약간의 차이는 있을 수 있으므로 안된다면 다시 찾아보기 </li> <br />\r\n                                        <li> {'     <script src=\"//code.jquery.com/jquery-3.2.1.min.js\"> </script> '} </li>\r\n                                        <li> {'  '} </li> <br />\r\n                                        <li> {' <script> '}\r\n                                            <li> {' function deleteBoard(id) { '}\r\n                                                <li> {' $.ajax({ '}\r\n                                                    <li> {' url: \"/api/board/remove/\" + id, '} </li>\r\n                                                    <li> {' type: \"DELETE\", '} </li>\r\n                                                    <li> {' success: function (results) { '}\r\n                                                        <li> {' console.log(\"results\", results); '} </li>\r\n                                                        <li> {' alert(\"삭제되었습니다.\"); '} </li>\r\n                                                        <li> {' location.href = \"/board/boardMainpage\"; '} </li>\r\n                                                    </li>\r\n                                                    <li> {' }, '} </li>\r\n                                                    <li> {' error: function (data) { '}\r\n                                                        <li> {' alert(\"에러 발생. \" + data); '} </li>\r\n                                                    </li>\r\n                                                    <li> {' } '} </li>\r\n                                                </li>\r\n                                                <li> {' }) '} </li>\r\n                                            </li>\r\n                                            <li> {' } '} </li>\r\n                                        </li>\r\n                                        <li> {' </script> '} </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaScriptAjax;","import React from 'react';\r\n\r\nconst JavaScriptAttribute = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 자바스크립트 요소 속성 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 속성 타입 반환 </h2>\r\n                            <li> ELEMENT.attributes[0] : 요소의 0번째 속성 타입 반환 </li>\r\n                            <li> ELEMENT.attributes.item(0) : 요소의 0번째 속성 타입 반환 </li>\r\n                            <li> ELEMENT.attributes.getNamedItem(\"ATTRIBUTE_NAME\") : 요소에서 선택한 속성이름의 속성 타입 반환 </li>\r\n\r\n                            <h2 className='h2'> 📌 속성 이름 반환 </h2>\r\n                            <li> ELEMENT.attributes[0].name : 요소의 0번째 속성 이름 반환 </li>\r\n                            <li> ELEMENT.attributes.item(0).name : 요소의 0번째 속성 이름 반환 </li>\r\n                            <li> ELEMENT.attributes.item(0).nodeName : 요소의 0번째 속성 이름 반환 </li>\r\n\r\n                            <h2 className='h2'> 📌 속성 값 이름 반환 </h2>\r\n                            <li> ELEMENT.attributes[0].value : 요소의 0번째 속성 값 이름 반환 </li>\r\n                            <li> ELEMENT.attributes.item(0).value : 요소의 0번째 속성 값 이름 반환 </li>\r\n\r\n                            <h2 className='h2'> 📌 기타 </h2>\r\n                            <li> ELEMENT.attributes.length : 요소의 속성 갯수 반환 </li>\r\n                            <li> ELEMENT.removeNamedItem(\"ATTRIBUTE_NAME\"); </li>\r\n\r\n                            <h2 className='h2'> 📌 요소에 속성과 값을 추가하는 방법 </h2>\r\n                            <li> var x = document.createAttribute(\"ATTRIBUTE_NAME\"); </li>\r\n                            <li> x.value = \"ATTRIBUTE_VALUE\"; </li>\r\n                            <li> ELEMENT.attributes.setNamedItem(x); </li>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> 📌  </h2>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaScriptAttribute;","import React from 'react';\r\n\r\nconst JavaScriptLocation = (props) => {\r\n    return (\r\n        <div className=\"common_style\" >\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> Location Property </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 속성 </h2>\r\n                        <li> document.location.hash : URL의 앵커 부분을 #기호를 이용하여 설정하거나 반환 및 설정 </li>\r\n                        <li> location.host : URL의 호스트 이름과 포트를 설정 하거나 반환 및 설정 </li>\r\n                        <li> location.hostname : URL의 호스트 이름 반환 및 설정 </li>\r\n                        <li> document.location.href : 전체 URL 반환 및 설정 </li>\r\n                        <li> location.origin : URL의 프로토콜, 호스트이름, 포트 번호 반환 </li>\r\n                        <li> location.pathname : URL의 경로 이름 반환 및 설정 </li>\r\n                        <li> location.port : URL의 포트 번호 반환 및 설정 </li>\r\n                        <li> location.protocol : URL의 프로토콜 반환 및 설정 </li>\r\n                        <li> location.search : URL의 쿼리스트링 반환 및 설정 </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n                        <li>  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> Location Method </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 메소드 </h2>\r\n                        <li> location.assign(\"URL\") : 새로운 문서를 로드 </li>\r\n                        <li> location.replace(\"URL\") : 현재 문서의 URL을 제거하고 새로운 문서를 로드, 뒤로가기를 사용할 수 없다. </li>\r\n                        <li> location.reload(\"URL\") : 현재 문서를 리로드 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> {' <body> '}\r\n                                        <li> {' <button onClick=assign()> assign </button> '} </li>\r\n                                        <li> {' <button onClick=replace()> replace </button> '} </li>\r\n                                        <li> {' <button onClick=reload()> reload </button> '} </li>\r\n                                        <li> {'  '} </li>\r\n                                        <li> {' <script> '}\r\n                                            <li> {' function assign() { '}\r\n                                                <li> {' location.assign(\"https://www.naver.com\"); '} </li>\r\n                                            </li>\r\n                                            <li> {' } '} </li>\r\n                                            <li> {' function freplace() { '}\r\n                                                <li> {' location.replace(\"https://www.naver.com\"); '} </li>\r\n                                            </li>\r\n                                            <li> {' } '} </li>\r\n                                            <li> {' function reload() { '}\r\n                                                <li> {' location.reload(); '} </li>\r\n                                            </li>\r\n                                            <li> {' } '} </li>\r\n                                        </li>\r\n                                        <li> {' </script> '} </li>\r\n                                    </li>\r\n                                    <li> {' </body> '} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> history(정리 필요) </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li>  </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌 함수 </h2>\r\n                        <li> window.history.back() </li>\r\n                        <li> window.history.pushState(null,null,\"/경로\") </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            {/* 끝 */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JavaScriptLocation;","import React from 'react';\r\n\r\nconst JavaScriptStyle = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 제목 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n                            <li> 2 </li>\r\n                            <li> 3 </li>\r\n\r\n                            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 제목 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n                            <li> 2 </li>\r\n                            <li> 3 </li>\r\n\r\n                            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaScriptStyle;","import React from 'react';\r\n\r\nconst JavaScriptWindow = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> Window Method </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 open() , close() </h2>\r\n                            <li> window.open() : 새로운 창을 열때 사용, 팝업창을 만들 때 대체적으로 사용 </li>\r\n                            <div className=\"block3\">\r\n                                <li> window.open(\"\", \"MsgWindow\", \"width=200, height=100\") : 이와 같이 표 </li>\r\n                            </div>\r\n                            <li> window.close() : 새로 열은 창을 닫을때 사용 </li>\r\n\r\n                            <h2 className='h2'> 📌 write(), writeln() </h2>\r\n                            <li> HTML document에 text를 작성한다. </li>\r\n                            <li> document가 완전히 로드된후에 메소드를 사용하게 되면 기존에 있던 모든 내용을 삭제한다. </li>\r\n                            <li> write(), writeln()은 줄바꿈의 차이이다. </li>\r\n                            <li> window.open() 이후에 HTML 마크업 언어를 메소드를 이용해서 넣어줄 수도 있다.  </li>\r\n                            <div className=\"block3\">\r\n                                <li> {' document.open(); '} </li>\r\n                                <li> {' document.write(\"<h1>Hello World</h1>\"); '} </li>\r\n                                <li> {' document.close(); '} </li>\r\n                            </div>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> Window Property </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 속성 </h2>\r\n                            <li> window.location : </li>\r\n\r\n                            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaScriptWindow;","import React from 'react';\r\n\r\nconst JavaScriptTable = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 테이블에 행 추가하는 방법 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> var TABLE_ROW = TABLE_ELEMENT.insertRow([n]) : 테이블 요소에 n번째에 행 추가, n이 없으면 마지막 행에 추가 </li>\r\n                            <li> var TABLE_CELL = TABLE_ROW.insertCell(n) : row에 n번째 열을 추가 </li>\r\n                            <li> TABLE_CELL = VALUE : 테이블 열 요소에 값 넣기 </li>\r\n                            <li> TABLE_ELEMENT.deleteRow(n) : n번째 행을 삭제, -1이면 마지막 행을 삭제  </li>\r\n\r\n                            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaScriptTable;","import React from 'react';\r\n\r\nconst JavaScriptScroll = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 스크롤 제일 밑으로 내리는 방법 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> ELEMENT_NODE.scrollTop = ELEMENT_NODE.scrollHeight; </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JavaScriptScroll;","import React from 'react';\r\n\r\nconst ReactBasic = (props) => {\r\n\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] React 초기시작 </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 자바스크립트 </h2>\r\n            <div className=\"block4\">\r\n              {/*<li> Node.js 설치를하고 cmd에서 설치되었는지 확인, node -v , npm -v </li>*/}\r\n              <li> cd 프로젝트설치할폴더경로 </li>\r\n              <li> npm create react-app 프로젝트명 <small> 폴더의이름은 모두 소문자할것!! </small> </li>\r\n              <li> cd 리액트폴더명 </li>\r\n              <li> npm start <small> 잘 작동되면 성공 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 타입스크립트 </h2>\r\n            <div className=\"block4\">\r\n              <li> cd 프로젝트설치할폴더경로 </li>\r\n              <li> npm i --save-dev install -g typescript </li>\r\n              <li> npm create react-app 프로젝트명 --template typescript </li>\r\n              <li> cd 리액트폴더명 </li>\r\n              <li> npm start <small> 잘 작동되면 성공 </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [1] Babel 설정 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 자바스크립트 트랜스파일러 </li>\r\n              <li> 다양한 버전과 환경에서 실행되는 자바스크립트를 예전 버전의 문법으로 사용할 수 있게 바꾸어준다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 자바스크립트 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n\r\n            <h2 className='h2'> 📌 타입스크립트 바벨 패키지 </h2>\r\n            <div className='block4'>\r\n              <li> @babel/preset-env : ECMA 2015로 변환할 떄 사용 </li>\r\n              <li> @babel/preset-react, @babel/preset-typescript : 리액트,타입스크립트 문법을 자바스크립트로 변경해주는 플러그인 </li>\r\n              <li> @babel/cli : 커맨드 명령어로 babel을 사용할 때 필요  </li>\r\n              <li> @babel/core : babel을 사용할 때 항상 필요 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 타입스크립트 </h2>\r\n            <div className='block4'>\r\n              <li> npm i babel-loader @babel/preset-env @babel/preset-react @babel/preset-typescript </li>\r\n              <li> npm i --save-dev @babel/core @babel/cli </li>\r\n              <li> <h3> .babelrc 파일 생성 </h3> </li>\r\n              <div className=\"block3\">\r\n                <li> {\"{\"}\r\n                  <li> \"presets\": [\r\n                    <li> \"@babel/preset-typescript\", </li>\r\n                    <li> \"@babel/preset-react\", </li>\r\n                    <li> \"@babel/preset-env\" </li>\r\n                  </li>\r\n                  <li> ] </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n              <li>  </li>\r\n            </div>\r\n            <li> <h3> tsconfig.json 파일 생성 </h3> </li>\r\n            <div className=\"block3\">\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [2] webpack </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 자바스크립트 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 자바스크립트 </h2>\r\n            <div className='block4'>\r\n              <li> npm install --save-dev webpack webpack-dev-server webpack-cli@3  </li>\r\n              <li> <h3> webpack.config.js </h3> </li>\r\n              <div className=\"block3\">\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [3] 환경변수 관리 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <div className='block4'>\r\n              <li> npm install cross-env </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 package.json </h2>\r\n            <div className='block4'>\r\n              <li> 아래와 같이 수정 </li>\r\n              <li> \"start\": \"cross-env PHASE=local webpack-dev-server --config ./configs/webpack.config.js --mode development\", </li>\r\n              <li> \"debug\": \"cross-env PHASE=debug webpack-dev-server --config ./configs/webpack.config.js\" </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [4] CORS </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 에러 </h2>\r\n            <div className=\"block4\">\r\n              <li> (1) The request client is not a secure context and the resource is in more-private address space `local </li>\r\n              <div className=\"block3\">\r\n                <li> origin 보다 더 낮은 수준의 네트워크로 보낼경우 발생, 클라우드 서버에서 로컬 스프링으로 보내서 발생하였음 </li>\r\n                <li> 해결방법(크롬,네이버웨일) : chrome://flags/#block-insecure-private-network-requests 가서 disable <small> 작동은 확인 </small> </li>\r\n                <li>  </li>\r\n              </div>\r\n              <li> (2) </li>\r\n              <div className=\"block3\">\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 1번 해결방법 </h2>\r\n            <div className=\"block4\">\r\n              <li> pakage.json에 \"proxy\": \"http://localhost:8080\" 이와 같이 추가한다. </li>\r\n              <li> 위와 같이 설정하면 다른 곳에서는 어떻게 받아오지? (의문해결아직안됨) </li>\r\n              {/*<li> 스프링에서 api를 받으려면 스프링에서도 cors정책을 해결해주어야 한다. </li>*/}\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 3번 해결방법 </h2>\r\n            <div className=\"block4\">\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 3번 해결방법 </h2>\r\n            <li> npm i http-proxy-middleware </li>\r\n            <li> src/setupProxy.js 만들기 </li>\r\n            <div className=\"block4\">\r\n              <li> {\" const { createProxyMiddleware } = require('http-proxy-middleware'); \"} </li>\r\n              <li> {\"  \"} </li> <br />\r\n              <li> {\" module.exports = function (app) { \"}\r\n                <li> {\" app.use( \"}\r\n                  <li> {\" createProxyMiddleware('/v1', { \"}\r\n                    <li> {\" target: 'https://openapi.naver.com', \"} </li>\r\n                    <li> {\" changeOrigin: true \"} </li>\r\n                  </li>\r\n                  <li> {\" }) \"} </li>\r\n                </li>\r\n                <li> {\" ) \"} </li>\r\n              </li>\r\n              <li> {\" }; \"} </li>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 리액트 깃허브 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 리액트 파일을 깃허브에 올리기 </h2>\r\n            <div className=\"block3\">\r\n              <li> github에 가서 저장소를 하나 만들기 (read.me 파일없이만들기)</li>\r\n              <li> 만든 상태로 창을 가만히 놔두기( 복붙할 내용이 존재함)</li>\r\n              <li> 리액트로 돌아와서 npm install gh-pages --save-dev 입력 </li>\r\n              <li> 리액트 폴더에 pakage.json 파일을 열어서 아래와 같이 넣어주기</li>\r\n              <li> 위쪽에 name위에 \"homepage\": \"http://깃허브유저명.github.io/저장소이름\"</li>\r\n              <li> \"scripts: 부분 안에 \"predeploy\": \"npm run build\",  \"deploy\": \"gh-pages -d build\",</li>\r\n              <li className=\"col_r\"> 터미널 창에 git init 입력 (깃폴더 생성됨)</li>\r\n              <li> 깃허브 창에서 git remote ~ 부분을 복붙해서 붙여넣기 </li>\r\n              <li className=\"col_r\"> npm run deploy <small> build 하는 과정 </small> </li>\r\n              <li className=\"col_r\">  git add . <small> 깃허브에 올릴 깃을 만드는 과정? </small> </li>\r\n              <li className=\"col_r\">  git commit -m \"커밋내용\" <small>커밋</small> </li>\r\n              <li className=\"col_r\">  git push -u origin master <small> 깃허브에 master 브랜치에 push </small> </li>\r\n              <li> 다음부터는 7,9~12 번만 반복하여서 사용</li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 리액트 깃허브 에러 </h2>\r\n            <div className=\"block3\">\r\n              <li> LF will be replaced by CRLF in.gitignore. The file will have its original line endings in your working directory </li>\r\n              <li> 해석: LF가 CRLF도 대체 될거다.파일은 당신의 작업 디렉토리 끝에 줄에 있다.</li>\r\n              <li>LF(Line-Feed) Mac,Linux \\n, CR(Carriage-Return) Mac \\r, CRLF(Carriage-Return+Line-Feed) Windows,DOS \\r\\n  </li>\r\n              <li> 경고가 발생한 이유: Git이 OS마다 줄바꿈 문자열이 달라서 뭘 사용할지 몰라서 </li>\r\n              <li> 해결방안: Window, DOS에서는 git config--global core.autocrlf true </li>\r\n              <li> 해결방안: Linux, MAC에서는 git config--global core.autocrlf input </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> react port 변경 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1. PORT=[포트] npm start <small> # 실행 한번만 변경 </small> </li>\r\n            <li> 2. pakage.json\r\n              <li> \"scripts\": {'{'}\r\n                <li> \"start\": \"set PORT=[포트] && react-scripts start\" <small> # 추가 </small> </li>\r\n              </li>\r\n              <li> {'}'} </li>\r\n            </li>\r\n            <li> 3. .env파일을 만들어서 <small> # 환경변수 처리해주는 파일 </small>\r\n              <li> PORT=[포트] </li>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Class, Function, Hooks </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Class </h2>\r\n            <div className=\"block4\">\r\n              <li> 상태, 라이프 사이클 기능 사용 가능 </li>\r\n              <li> 메서드를 정의 할 수 있다. </li>\r\n              <li> 상태는 객체형식, 초기값 선언하고 setState함수 사용가능 </li>\r\n              <li>  </li>\r\n            </div>\r\n            <div className='block4'>\r\n              <li> 클래스 컴포넌트 기본 형식\r\n                <div className=\"block3\">\r\n                  <li> {\" import React, {Component} from 'react'; \"} </li>\r\n                  <li> Class App extends Component {\"{\"}\r\n                    <li> render() {\"{\"}\r\n                      <li> const test=1; </li>\r\n                      <li> {\" return <> </> \"} </li>\r\n                    </li>\r\n                    <li> {\"}\"} </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li> export default App; </li>\r\n                </div>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Function </h2>\r\n            <div className='block4'>\r\n              <li> 함수형 컴포넌트 기본 형식\r\n                <div className=\"block3\">\r\n                  <li> import React from 'react';  </li>\r\n                  <li> function App() {\"{\"}\r\n                    <li> const test=1; </li>\r\n                    <li> {\" return <> </> \"} </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li> export default App; </li>\r\n                </div>\r\n              </li>\r\n              <li> 상태와 라이프 사이클을 사용 못함(훅으로 해결가능) </li>\r\n              <li> useState를 이용하여 상태값 재정의 가능 </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Hooks </h2>\r\n            <div className='block4'>\r\n              <li> react 16.8버전에 추가되었다고 한다. </li>\r\n              <li> 클래스 컴포넌트에서 사용할 수 있는 기술을 사용할 수 있게 해준다. </li>\r\n              <li> 생명주기, 상태값관리 등을 함수형 컴포넌트에서 사용하게 해준다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 리액트 기초 설명 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> 자바스크립트만 이용하여 작동을 하려면 많은 이벤트 처리와 DOM에 접근이 필요하다.\r\n                그렇게 되면 복잡해지고 속도가 느려질수도 있다. 그래서 나온 것들인 Angular, React, Vue 등이 있다.  </li>\r\n              <li> 1. React는 프레임워크가 아닌 JavaScript를 이용한 라이브러리이다. </li>\r\n              <li> 2. React는 실제 DOM을 이용하지 않고 가상 DOM을 사용 </li>\r\n              <li> 3. React는 컴포넌트 단위로 구분해서 사용하여 UI를 만들기 유용하다. </li>\r\n              <li> 4. Facebook에서 만든 오픈 소스 자바스크립트 UI라이브러리 </li>\r\n              <li> 5. SSR과 CSR을 2개다 지원한다. </li>\r\n              <li> 6. React DOM 파일이 실제 DOM에 랜더링을 시킨다 <small> # // TODO: 무슨말인지 좀더 자세히 알아볼 것 </small> </li>\r\n              <li> 7. Babel : 자바스크립트 컴파일러 ( ES6 {'->'} ES5 로 바꾸어 준다.) <small> # // TODO: Babel에 대해서 좀더 자세히 알아볼 것 </small> </li>\r\n              <li> 8. React 컴포넌트는 소문자가 아닌 대문자로 시작하여 HTML태그와 구분을 한다. </li>\r\n              <li> 9. JSX(Javascript XML)파일은 JavaScript에서 HTML형식을 사용할 수 있게해준다.(Babel이 JSX Loader를 사용해서 JSX를 native JavaScript로 변환) </li>\r\n              <li> 10. React는 SPA(Single Page Application)이므로 한번에 모든 페이지를 불러오면 딜레이가 생겨 렌더링을 부분적으로 일어나게 만들어야 한다. </li>\r\n              <li> 11. JSX 코드는 무조건 태그로 감싼 컨테이너 형태로 작동이 된다.  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Module </h2>\r\n            <div className=\"block4\">\r\n              <li> import React from 'react'; <small> #  jsx문법 사용 모듈 </small></li>\r\n              <li> import ReactDOM from 'react-dom'; <small> #  브라우저, 서버사이드용 렌더링 메소드 지원,\r\n                React앱 진입점에서 최초 렌더링 하기 위해서 사용 </small></li>\r\n              <li> import COMPONENT from './경로'; <small> #  컴포넌트를 가져오는 방법</small> </li>\r\n              <li> import reportWebVitals from './reportWebVitals'; <small> # React 성능을 측정하기 위한 것 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Babel </h2>\r\n            <li> 자바스크립트 컴파일러 </li>\r\n            <li> ES6 {'->'} ES5로 변환시켜준다. </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React props </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 컴포넌트에 속성을 추가해서 파라미터를 주고 받는 방법 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 함수형 컴포넌트 </h3>\r\n                <div className='block4'>\r\n                  <li> function 컴포넌트명({\"{파라미터}\"} 혹은 props) {\"{\"}\r\n                    <li> {\"{파라미터}\"} <small> # 조회 </small> </li>\r\n                    <li> </li> <br />\r\n                    <li> props </li>\r\n                    <li> props.파라미터 </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li>  </li> <br />\r\n                  <li> 컴포넌트명.defaultProps= {\"{\"}\r\n                    <li> 파라미터: \"초기값\" </li>\r\n                  </li>\r\n                  <li> {\"};\"} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Maps </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 배열에서 1개씩 조회하는 방법 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> const 배열 = [\r\n                    <li> {\"{\"}\r\n                      <li> 키: 값, </li>\r\n                      <li> 키: 값, </li>\r\n                    </li>\r\n                    <li> {\"}\"}, </li>\r\n                    <li> {\"{\"}\r\n                      <li> 키: 값, </li>\r\n                      <li> 키: 값, </li>\r\n                    </li>\r\n                    <li> {\"}\"}, </li>\r\n                  </li>\r\n                  <li> ] </li>\r\n                  <li>  </li> <br />\r\n                  <li> {\" {배열.map( (사용할매개변수명) => ( \"}\r\n                    <li> {\" <컴포넌트 속성={사용할매개변수명} /> \"} </li>\r\n                  </li>\r\n                  <li> {\" ))} \"} </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈 정적인 배열 사용방법 </h3>\r\n              <div className='block4'>\r\n                <li> {\" let [list, setList] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]); \"} </li>\r\n                <li> {\" const mapTest = list.map((i) => <TodoItem> {i} </TodoItem>); \"} </li>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <h3 className='h3'> 🎈 동적인 배열 사용방법 </h3>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Immer </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 문제는 처리량이 많을수록 느려진다는 단점이 존재 </li>\r\n            <li> npm i immer </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> import produce from 'immer'; </li>\r\n            <li> produce(수정할고싶은state,처리할함수) </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Spring과 연동 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명(아래 상단 npm 3개는 확인이 필요) </h2>\r\n            <li> 폴더명은 frontend로 만들어 줍니다. </li>\r\n            <li> CRA를 하고 npm start를 합니다.(테스트) </li>\r\n            <li> npm install </li>\r\n            <li> npm run-script build </li>\r\n            <li> npm run eject </li>\r\n            <li> 스프링 build.gradle에 아래 코드 붙여넣기\r\n              <div className=\"block4\">\r\n                <li> {\" def frontendDir = '$projectDir/frontend' \"} </li>\r\n                <li> {\"  \"} </li> <br />\r\n                <li> {\" sourceSets { \"}\r\n                  <li> {\" \tmain { \"}\r\n                    <li> {\" \t\tresources { \"}\r\n                      <li> {\" \t\t\tsrcDirs = ['$projectDir/src/main/resources'] \"} </li>\r\n                    </li>\r\n                    <li> {\" \t\t} \"} </li>\r\n                  </li>\r\n                  <li> {\" \t} \"} </li>\r\n                </li>\r\n                <li> {\" } \"} </li>\r\n                <li> {\"  \"} </li>\r\n                <li> {\" processResources { \"}\r\n                  <li> {\" \tdependsOn 'copyReactBuildFiles' \"} </li>\r\n                </li>\r\n                <li> {\" } \"} </li>\r\n                <li> {\"  \"} </li>\r\n                <li> {\" task installReact(type: Exec) { \"}\r\n                  <li> {\" \tworkingDir '$frontendDir' \"} </li>\r\n                  <li> {\" \tinputs.dir '$frontendDir' \"} </li>\r\n                  <li> {\" \tgroup = BasePlugin.BUILD_GROUP \"} </li>\r\n                  <li> {\" \tif (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) \"} </li>\r\n                  <li> {\" \t{ \"}\r\n                    <li> {\" \t\tcommandLine 'npm.cmd', 'audit', 'fix' \"} </li>\r\n                    <li> {\" \t\tcommandLine 'npm.cmd', 'install' \"} </li>\r\n                  </li>\r\n                  <li> {\" \t} else { \"}\r\n                    <li> {\" \t\tcommandLine 'npm', 'audit', 'fix' \"} </li>\r\n                    <li> {\" \t\tcommandLine 'npm', 'install' \"} </li>\r\n                  </li>\r\n                  <li> {\" \t} \"} </li>\r\n                </li>\r\n                <li> {\" } \"} </li>\r\n                <li> {\"  \"} </li> <br />\r\n                <li> {\" task buildReact(type: Exec) { \"}\r\n                  <li> {\" \tdependsOn 'installReact' \"} </li>\r\n                  <li> {\" \tworkingDir '$frontendDir' \"} </li>\r\n                  <li> {\" \tinputs.dir '$frontendDir' \"} </li>\r\n                  <li> {\" \tgroup = BasePlugin.BUILD_GROUP \"} </li>\r\n                  <li> {\" \tif (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) { \"}\r\n                    <li> {\" \t\tcommandLine 'npm.cmd', 'run-script', 'build' \"} </li>\r\n                  </li>\r\n                  <li> {\" \t} else { \"}\r\n                    <li> {\" \t\tcommandLine 'npm', 'run-script', 'build' \"} </li>\r\n                  </li>\r\n                  <li> {\" \t} \"} </li>\r\n                </li>\r\n                <li> {\" } \"} </li>\r\n                <li> {\"  \"} </li>\r\n                <li> {\" task copyReactBuildFiles(type: Copy) { \"}\r\n                  <li> {\" \tdependsOn 'buildReact' \"} </li>\r\n                  <li> {\" \tfrom '$frontendDir/build' \"} </li>\r\n                  <li> {\" \tinto '$projectDir/src/main/resources/static' \"} </li>\r\n                </li>\r\n                <li> {\" } \"} </li>\r\n              </div>\r\n            </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> ================  아래에는 싹다 정리 안한거 ======================= </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> native JavaScript </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> JSX를 사용하지 않고서 컴포넌트를 만드는 방법 </li>\r\n            <li> JavaScript로만 React를 구현할 수 있지만 굳이 그럴필요는 없을 것 같다. </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 컴포넌트 처럼 사용하면 된다.\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 정의 </h3>\r\n                <div className='block4'>\r\n                  <li> var c = React.createElement; </li>\r\n                  <li> c = (\"div\",null,\"hello world\"); </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 사용 </h3>\r\n                <div className='block4'>\r\n                  <li> {' {c} '} <small> # hello world 출력 </small> </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Directory(정리 보류) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> src폴더 : 사용할 코드들을 저장할 장소 </li>\r\n            <li> public폴더 : static 자원을 모아놓을 공간(img 등) </li>\r\n            <li> index.js : virtual dom을 랜더링하는 파일 (index.html에서 변경해서 사용이 가능하지만 굳이 그럴필요는 없을 것 같다.) </li>\r\n            <li> App.js : 처음에 있는 컴포넌트 지우고 새로운 컴포넌트를 만들어서 사용해도 문제가 없다. </li>\r\n            <li> package-json : 설치하는 모듈, 스크립트 등이 설정되있는 파일 <small> // TODO: # 정확히는 안 들여보아서 나중에 보아야 겠다. </small> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> src/components: 컴포넌트들이 위치하는 디렉토리입니다. </li>\r\n            <li> src/pages: 각 라우트들이 위치하는 디렉토리 입니다. </li>\r\n            <li> src/client: 브라우저 측에서 사용할 최상위 컴포넌트 입니다. 우리가 추후 서버사이드 렌더링을 구현 할 것이기\r\n              때문에 디렉토리를 따로 구분하였습니다. (서버사이드 렌더링을 할 때에는 서버 전용 라우터를 써야합니다.) 여기서 라우터를 설정합니다. </li>\r\n            <li> src/server: 서버측에서 사용 할 리액트 관련 코드를 여기에 넣습니다. </li>\r\n            <li> src/shared: 서버와 클라이언트에서 공용으로 사용되는 컴포넌트 App.js 가 여기에 위치합니다. </li>\r\n            <li> src/lib: 나중에 웹 연동을 구현 할 때 사용 할 API와 코드스플리팅 할 때 필요한 코드가 여기에 위치합니다. </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Class Component </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> state관리와 라이프 사이클의 사용때문에 기존에 사용 </li>\r\n            <li> 코드가 길고 복잡  </li>\r\n            <li> 부분적인 재사용이 어려움  </li>\r\n            <li> 3 </li>\r\n          </div>\r\n\r\n          <h2 className='h2'> ✔ 예시 </h2>\r\n          <li> 소제목\r\n            <div className='block3'>\r\n              <h3 className='h3'> 🎈 </h3>\r\n              <div className='block4'>\r\n                <li> {' import React, {Component} from \"react\"; '} </li> <br />\r\n                <li> class App extends React,Component {'{'}\r\n                  <li> render() {'{'}\r\n                    <li> return(\r\n                      <li> {' <div> </div>'} </li>\r\n                    </li>\r\n                    <li> ); </li>\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                </li>\r\n                <li> {'}'} </li>\r\n                <li> export default App; </li>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Class - React Context (미완성) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 하위 컴포넌트에 state값을 props를 이용하지 않고 주기 </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> {' <컨텍스트명.Provider value=\"\"> '}\r\n                <li>  </li>\r\n              </li>\r\n              <li> {' <컨텍스트명.Provider> '} </li>\r\n              <li>  </li> <br />\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <div className=\"block3\">\r\n              <h3 className='h3'> 🎈 class App </h3>\r\n              <div className=\"block4\">\r\n                <li> const 컨텍스트명 = React.createContext(''); </li>\r\n                <li> class App extends React.Component {'{'}\r\n                  <li> render() {'{'}\r\n                    <li> return (\r\n                      <li> {' <컨텍스트명.Provider value=\"\"> '}\r\n                        <li> {' <컴포넌트/> '} </li>\r\n                      </li>\r\n                      <li> {' <컨텍스트명.Provider> '} </li>\r\n                    </li>\r\n                    <li> ); </li>\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                </li>\r\n                <li> {'}'} </li>\r\n              </div>\r\n              <li>  </li> <br />\r\n              <h3 className='h3'> 🎈 컴포넌트 </h3>\r\n              <div className=\"block4\">\r\n                <li> class 컴포넌트명 extends React.Component {'{'}\r\n                  <li> static contextType = 컨텍스트명; </li>\r\n                  <li> render() {'{'}\r\n                    <li> return {' <컴포넌트1 theme={this.context} />; '} </li>\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                </li>\r\n                <li> {'}'} </li>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Redux - library </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <li> npm i react-redux redux </li>\r\n            <li> yarn add redux react-redux redux-devtools-extension redux-logger </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 상위 디렉토리에서 1단계 하위디렉토리가 아닌 몇 단계 디렉토리에 state값을 줄 수 있음 </li>\r\n            <li> 바뀌는 값들을 버전을 관리하는 것처럼 볼 수 있음 </li>\r\n            <li> action, component, reducer, store 폴더로 구성\r\n              <li> action : store에 직접 접근 , 컴포넌트에서 바로 store로 접근 불가능\r\n                <li> 모든 액션 객체는 type이라는 값을 가져야 한다. </li>\r\n                <li>  </li>\r\n              </li>\r\n              <li> store : state를 모아놓은 공간</li>\r\n              <li> reducer : 문지기 역할\r\n                <li> old state + action = new state를 하는 과정 </li>\r\n                <li> {' const [<상태 객체>, <dispatch 함수>] = useReducer(<reducer 함수>, <초기 상태>, <초기 함수>) '} </li>\r\n                <li> state와 action객체를 인자로 받아서 new state 객체를 반환하는 함수 </li>\r\n                <li> reducer함수는 old state와 action객체를 인자로 받아서 new state를 반환하는 함수 </li>\r\n                <li> dispatch 함수는 컴포넌트에서 action객체를 받아 reducer함수에 넘김 </li>\r\n                <li> action객체는 type(어떤 행동인지) + data(행동과 관련되 데이터) </li>\r\n                <li> {' component(old state) -> action -> dispatch -> reducer -> component(new state) '} </li>\r\n              </li>\r\n              <li> component :  </li>\r\n            </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Event </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Mouse </h2>\r\n            <li> onClick </li>\r\n            <li> onContentMenu </li>\r\n            <li> onDoubleClick </li>\r\n            <li> onDrag </li>\r\n            <li> onDragEnd </li>\r\n            <li> onDragEnter </li>\r\n            <li> onDragExit </li>\r\n            <li> onDragLeave </li>\r\n            <li> onDragOver </li>\r\n            <li> onDragStart </li>\r\n            <li> onDrop </li>\r\n            <li> onMouseDown </li>\r\n            <li> onMouseEnter </li>\r\n            <li> onMouseLeave </li>\r\n            <li> onMouseMove </li>\r\n            <li> onMouseOut </li>\r\n            <li> onMouseOver </li>\r\n            <li> onMouseUp </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li> onFocus </li>\r\n            <li> onBlur </li>\r\n            <li> onChange </li>\r\n            <li> onInput </li>\r\n            <li> onInvalid </li>\r\n            <li> onRest </li>\r\n            <li> onSubmit </li>\r\n            <li> onError </li>\r\n            <li> onLoad </li>\r\n            <li>  </li>\r\n\r\n\r\n            <h2 className='h2'> 📌 포인터 이벤트 </h2>\r\n            <li> onPointerDown onPointerMove onPointerUp onPointerCancel onGotPointerCapture\r\n              onLostPointerCapture onPointerEnter onPointerLeave onPointerOver onPointerOut </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li> onSelect onTouchCancel onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted\r\n              onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay\r\n              onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend\r\n              onTimeUpdate onVolumeChange onWaiting onLoad onError onAnimationStart onAnimationEnd onAnimationIteration onTransitionEnd onToggle\r\n            </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Css </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {' import React from \"react\"; '} </li>\r\n                  <li> {' import \"./style.css\"; '}  </li> <br />\r\n                  <li> const App = () {'=> {'}\r\n                    <li> return(\r\n                      <li> {'<> '}\r\n                        <li> {' <button> 버튼 </button> '} </li>\r\n                      </li>\r\n                      <li> {'</> '} </li>\r\n                    </li>\r\n                    <li> ); </li>\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                  <li> export default App; </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className=\"block4\">\r\n                  <li> {' import React from \"react\"; '} </li> <br />\r\n                  <li> const App = () {'=> {'}\r\n                    <li> {' const 스타일명 = { '}\r\n                      <li> width: 100px, </li>\r\n                      <li> height: 100px </li>\r\n                    </li>\r\n                    <li> {' }; '} </li>\r\n                    <li> return(\r\n                      <li> {'<> '}\r\n                        <li> {' <button style={스타일명}> 버튼 </button> '} </li>\r\n                        <li> {' <button style={{height: \"100px\"}}> 버튼 </button> '} </li>\r\n                      </li>\r\n                      <li> {'</> '} </li>\r\n                    </li>\r\n                    <li> ); </li>\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                  <li> export default App; </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactBasic;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst ReactJavascript = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 외부에 자바스크립트 파일을 생성하고 react 태그 내부에서 함수 실행하기  </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2> 📌 test.js </h2>\r\n                            <li> {' export function f1() { '}\r\n                                <li> {' \talert(\"test\"); '} </li>\r\n                            </li>\r\n                            <li> {' } '} </li>\r\n\r\n                            <h2> 📌 react.jsx </h2>\r\n                            <li> import * as Test1 from './test.js'; </li>\r\n                            <li> {' const Test = (props) => { '}\r\n                                <li> return (\r\n                                    <li> {' <button onClick={() => Test1.f1()} style={{ width: \"200px\" }}> 123 </button> '} </li>\r\n                                </li>\r\n                                <li> ) </li>\r\n                            </li>\r\n                            <li> {'}'} </li>\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 자바스크립트 파일 만들고 jsx에서 사용하기 </summary>\r\n                        <div className='block2'>\r\n                            <h2> 📌 설명 </h2>\r\n                            <div className=\"block4\">\r\n                                <li> JSX파일에서 import '경로/자바스크립트.js'; 를 사용해서 불러오면 된다. </li>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReactJavascript;","import React from 'react';\r\n\r\nconst ReactHooks = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Hooks - useState </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 컴포넌트에서 동적인 상태값을 이용할 때 사용  </li>\r\n                        <li> const [state값,setState값] = useState(0); <small> 첫번쨰 값은 저장 변수, 두번쨰 값은 갱신함수 </small>  </li>\r\n                        <li> set상태값 이 변하게 되면 하위 컴포넌트까지 re-rendering이 된다.  </li>\r\n                        <li> set상태 함수는 비동기로 동작 , 아래와 같은경우 1번만 증가\r\n                            <li>  set상태값(상태값+1) </li>\r\n                            <li>  set상태값(상태값+1) </li>\r\n                            <li>  아래와 같이 사용하면 문제 해결 </li>\r\n                            <li>  set상태값({'prev상태값 => prev상태값 + 1'}) </li>\r\n                            <li>  set상태값({'prev상태값 => prev상태값 + 1'}) </li>\r\n                        </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 1. 버튼을 누르면 값이 증가하는 상황 </h3>\r\n                                <div className='block4'>\r\n                                    <li> {' import React from \"react\"; '} </li> <br />\r\n                                    <li> const App = () {'=> {'}\r\n                                        <li> const [count,setCount] = useState(0); </li>\r\n                                        <li> return(\r\n                                            <li> {'<> '}\r\n                                                <li> {'<button onClick={()=>setCount(count+1)}> +1증가 버튼 </button>'} </li>\r\n                                                <li> {'카운트 : {count}'} </li>\r\n                                            </li>\r\n                                            <li> {'</> '} </li>\r\n                                        </li>\r\n                                        <li> ); </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                    <li> export default App; </li>\r\n                                </div>\r\n                                <h3 className='h3'> 🎈 2. 배열로 받아와서 값을 덮어쓰기하는것 같은데.. </h3>\r\n                                <div className=\"block4\">\r\n                                    <li> {' import React from \"react\"; '} </li> <br />\r\n                                    <li> const App = () {'=> {'}\r\n                                        <li> {' const [inputs,setInputs] = useState({ '}\r\n                                            <li> input1: '', </li>\r\n                                            <li> input2: ''  </li>\r\n                                        </li>\r\n                                        <li> {' }); '} </li> <br />\r\n                                        <li> {' const {input1, input2} = inputs; '} <small> # inputs 상태값을 변수로 만듬 </small> </li> <br />\r\n                                        <li> {' const onChange = (e) => { '}\r\n                                            <li> {' const { name , value } = e.target; '}\r\n                                            </li>\r\n                                            <li> {'setInputs({ '}\r\n                                                <li> ...inputs, </li>\r\n                                                <li> [name]: value </li>\r\n                                            </li>\r\n                                            <li> {''} </li>\r\n                                            <li> {'});'} </li>\r\n                                        </li>\r\n                                        <li> {' }; '} </li> <br />\r\n                                        <li> {' const onReset = () => { '}\r\n                                            <li> {'setInputs({ '}\r\n                                                <li> input1: '', </li>\r\n                                                <li> input2: '', </li>\r\n                                            </li>\r\n                                            <li> {'})'} </li>\r\n                                        </li>\r\n                                        <li> {' }; '} </li> <br />\r\n                                        <li> return(\r\n                                            <li> {'<> '}\r\n                                                <li> {' <input name=\"input1\" onChange={onChange} value={input1} />  '} </li>\r\n                                                <li> {' <input name=\"input2\" onChange={onChange} value={input2} />  '} </li>\r\n                                                <li> {' <button onClick={onReset} > 초기화 </button> '} </li>\r\n                                                <li> {' <div>  {input1} : {input2} </div> '} </li>\r\n                                            </li>\r\n                                            <li> {'</> '} </li>\r\n                                        </li>\r\n                                        <li> ); </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                    <li> export default App; </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Hooks - useContext </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> props를 전역적으로 사용가능하게 해준다. </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 기본 컴포넌트 </h3>\r\n                                <div className='block4'>\r\n                                    <h4 className='h4'> 🎈 1. Context 컴포넌트를 만든다. </h4>\r\n                                    <li> export const ABContext = createContext {\" ({ \"}\r\n                                        <li> a: \"\", </li>\r\n                                        <li> {\" b: ()=>{}, \"} </li>\r\n                                    </li>\r\n                                    <li> {\"});\"} </li>\r\n                                    <h4 className='h4'> 🎈 2. 컴포넌트로 감싼다. </h4>\r\n                                    <li> const 컴포넌트 = (){\"=> {\"}\r\n                                        <li> {\" const value = useMemo(()=> ({a,b}),[a,b]); \"} <small> 안해주면 이 데이터를 사용하는\r\n                                            컴포넌트가 모두 렌더링이 된다고 한다. </small> </li>\r\n                                        <li> {\" <ABContext.Provider value={{a,b}}> \"}\r\n                                            <li> 컴포넌트 작성~~ </li>\r\n                                        </li>\r\n                                        <li> {\" </ABContext.Provider> \"} </li>\r\n                                    </li>\r\n                                    <li> {\" } \"} </li>\r\n                                    <li> export default 컴포넌트; </li>\r\n                                </div>\r\n                                <h3 className='h3'> 🎈 3. 불러온다 (다른파일)  </h3>\r\n                                <div className='block4'>\r\n                                    <li> {\" import { ABContext } from './'; \"} </li>\r\n                                    <li> const 컴포넌트 = (){\"=> {\"}\r\n                                        <li> {\" const { a,b } = useContext(ABContext); \"} </li>\r\n                                    </li>\r\n                                    <li> {\" } \"} </li>\r\n                                    <li> export default 컴포넌트; </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Hooks - useEffect </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 랜더링이 될 때마다 실행이 된다. 단, []안에 들어가는 의존성 값에 따라 달라진다. </li>\r\n                        <li> react가 화면을 다 보여주고 나서 실행(에러 발생이 덜 날듯) </li>\r\n                        <li> return을 반환해서 종료도 가능하다. </li>\r\n                        <li> useEffect 내부에 addEventListener를 넣고 setState로 렌더링을 발생시키고 return으로 이벤트를 삭제해주면\r\n                            초기의 useEffect로 다시 만들수 있음 </li>\r\n                        <li> useEffect [상태값 등]배열에 값이 변할 때 마다 렌더링을 하게 해준다. 만약에 비워두면\r\n                            처음에 렌더링 될 때만 실행되고 이후에는 실행되지 않는다.  </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 useEffect(함수,렌더링 의존할 값) </h3>\r\n                                <div className='block4'>\r\n                                    <li> {'import React, { useState, useEffect } from \"react\"; '} </li> <br />\r\n                                    <li> {'const [num,setNum] = useState(0); '} </li>\r\n                                    <li> </li> <br />\r\n                                    <li> {' useEffect(()=>{ '}\r\n                                        <li> {' console.log(\"test useeffct\"); '} </li>\r\n                                        <li> {' return() => { '} </li>\r\n                                        <li> {'   console.log(\"test end useeffct\"); '} </li>\r\n                                        <li> {' }; '} </li>\r\n                                    </li>\r\n                                    <li> {'},[num]);'} </li>\r\n                                    <li> </li> <br />\r\n                                    <li> const App = () {'=> {'}\r\n                                        <li>  </li>\r\n                                        <li> return(\r\n                                            <li> {'<> '}\r\n                                                <li> {' <p> 숫자 : {num} </p> '} </li>\r\n                                                <li> {' <button onClick={()=>{setNum(prevNum => prevNum + 1)}}> 1 </button> '} </li>\r\n                                            </li>\r\n                                            <li> {'</> '} </li>\r\n                                        </li>\r\n                                        <li> ); </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                    <li> export default App; </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> Functional Component </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> {' import React from \"react\"; '} </li> <br />\r\n                                    <li> function App() {'{'}\r\n                                        <li> return(\r\n                                            <li> {' <div> </div>'} </li>\r\n                                        </li>\r\n                                        <li> ); </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                    <li> export default App; </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Hooks -  useRef </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 특정 DOM을 선택할 때 사용 </li>\r\n                        <li> input이나 textarea 등에 focus() 를 할 때 사용 </li>\r\n                        <li> 득정 DOM의 스크롤 위치를 가져올 때 </li>\r\n                        <li> 외부 라이브러리를 사용할 때   </li>\r\n                        <li> Ref의 사용은 최대한 안하는 것이 좋다. </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> {' import React, {useRef } from \"react\"; '} </li> <br />\r\n                                    <li> const App = () {'=> {'}\r\n                                        <li> const inputRef = useRef(); </li>\r\n                                        <li> return(\r\n                                            <li> {'<> '}\r\n                                                <li> {' <input ref={inputRef} /> '} </li>\r\n                                                <li> {' <button onClick={()=> {inputRef.current.focus() }}> 버튼1 </button> '} </li>\r\n                                                <li> {' <button onClick={()=> {inputRef.current.value=\"123\"; }}> 버튼2 </button> '} </li>\r\n                                            </li>\r\n                                            <li> {'</> '} </li>\r\n                                        </li>\r\n                                        <li> ); </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                    <li> export default App; </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> useCallback(정리 필요) </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 함수를 재사용가능하게 해준다. </li>\r\n                        <li>  </li>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> const 함수 = userCallback({\"()=>{\"}\r\n                                        <li>  </li>\r\n                                    </li>\r\n                                    <li> {\"},[상태]);\"} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Hooks Event </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            {/* 끝 */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactHooks;","import React from 'react';\r\n\r\nconst ReactClass = (props) => {\r\n\r\n    'use strict';\r\n\r\n    var a = React.createElement(\r\n        \"div\",\r\n        null,\r\n        \"Welcome to\",\r\n        React.createElement(\r\n            \"b\",\r\n            null,\r\n            \"React.js CodeLab\"\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Class Components </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1. 클래스명은 대문자로 시작 </li>\r\n                        <li> 2. React.Component로 상속받아야 한다. </li>\r\n                        <li> 3. render()를 사용해서 렌더링을 해야한다. </li>\r\n                        <li> 4. 컴포넌트를 사용하는 방법은 대문자로 시작하는 태그를 사용해야 한다. </li>\r\n                        <li> 5. 컴포넌트를 사용하기 위해서는 꼭 1개의 태그로 코드를 감싸주어야 한다. </li>\r\n                        <li>  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Class Component 기본 형태 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> Class COMPONENT extends React.Component {'{'}\r\n                                        <li> render() {' { '}\r\n                                            <li> return (\r\n                                                <li> {'<div>'}\r\n                                                    <li> <small> # 이곳에 코드 작성 </small> </li>\r\n                                                </li>\r\n                                                <li> {'</div>'} </li>\r\n                                            </li>\r\n                                            <li> ); </li>\r\n                                        </li>\r\n                                        <li> {'}'} </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Class Component Props, defaultProps, propTypes </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> Props : 상위 컴포넌트에서 1단계 아래인 하위 컴포넌트에만 데이터를 넘겨줄 때 사용한다. </li>\r\n                        <li> 만약에 어떤 컴포넌트에서 100번째 자식 컴포넌트에 Props를 보낸다고 한다면 미친짓일 것이다. 해결 방안으로는 Redux나 Recoil을 검색 </li>\r\n                        <li> defaultProps : Props에 default 값을 설정할 수도 있다. </li>\r\n                        <li> propTypes : Props에 default 값을 설정할 수도 있다. , 콘솔창에 경고가 발생한다. </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 상위 컴포넌트 </h3>\r\n                                <div className='block4'>\r\n                                    <li> Class PARENT_COMPONENT extends React.Component {'{'}\r\n                                        <li> render() {' { '}\r\n                                            <li> return (\r\n                                                <li> {'<div>'}\r\n                                                    <li> {' <Child name=\"children\">  </Child> '} </li>\r\n                                                </li>\r\n                                                <li> {'</div>'} </li>\r\n                                            </li>\r\n                                            <li> ); </li>\r\n                                        </li>\r\n                                        <li> {'}'} </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li> <br />\r\n\r\n                                    <li> <small> // default 값을 설정 </small> </li>\r\n                                    <li> PARENT_COMPONENT.defaultProps = {'{'}\r\n                                        <li> value: 123 </li>\r\n                                    </li>\r\n                                    <li> {'};'} </li> <br />\r\n\r\n                                    <li> <small> // 데이터 타입을 설정 </small> </li>\r\n                                    <li> PARENT_COMPONENT.propTypes = {'{'}\r\n                                        <li> name: React.PropTypes.string, </li>\r\n                                        <li> value : React.PropType.number </li>\r\n                                        <li> @ : React.PropTypes.any.isRequired <small> # 어떤 타입이든 상관 없지만, 필수로 입력해야한다. </small> </li>\r\n                                    </li>\r\n                                    <li> {'};'} </li>\r\n                                </div>\r\n                                <h3 className='h3'> 🎈 하위 컴포넌트 </h3>\r\n                                <div className='block4'>\r\n                                    <li> Class CHILD_COMPONENT extends React.Component {'{'}\r\n                                        <li> render() {' { '}\r\n                                            <li> return (\r\n                                                <li> {'<div>'}\r\n                                                    <li> {' {this.props.name} '} <small> # children 출력  </small> </li>\r\n                                                    <li> {' {this.props.value} '} <small> # 123 출력  </small> </li>\r\n                                                </li>\r\n                                                <li> {'</div>'} </li>\r\n                                            </li>\r\n                                            <li> ); </li>\r\n                                        </li>\r\n                                        <li> {'}'} </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React Class Component State </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 값이 동적으로 변하는 데이터 </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> Class COMPONENT extends React.Component {'{'}\r\n                                        <li> constructor(props) {'{'}\r\n                                            <li> <small> super(props)는 부모 생성자 메소드를 실행시키는 것이고\r\n                                                , 실행을 시켜야 this.state를 사용할 수 있다. // TODO: 좀더 공부가 필요 </small> </li>\r\n                                            <li> super(props); </li>\r\n                                            <li> this.state = {'{'}\r\n                                                <li> value: 0 </li>\r\n                                            </li>\r\n                                            <li> <small> .bind(this) 의미는 render()의 this와 같다는 의미 </small> </li>\r\n                                            <li> this.btnClick = this.btnClick.bind(this); </li>\r\n                                            <li> {'}'} </li>\r\n                                        </li>\r\n                                        <li> {'}'} </li> <br />\r\n\r\n                                        <li> btnClick() {'{'}\r\n                                            <li> this.setState{'({'}\r\n                                                <li> value: this.state.value + 1 </li>\r\n                                            </li>\r\n                                            <li> {'})'} </li>\r\n                                        </li>\r\n                                        <li> {'}'} </li> <br />\r\n\r\n                                        <li> render() {' { '}\r\n                                            <li> return (\r\n                                                <li> {'<div>'}\r\n                                                    <li> {' {this.state.value} '} <small> # 버튼을 누를때 마다 1씩 증가 </small> </li>\r\n                                                    <li> {' <button onClick={this.btnClick}> 버튼 </button> '}   </li>\r\n                                                </li>\r\n                                                <li> {'</div>'} </li>\r\n                                            </li>\r\n                                            <li> ); </li>\r\n                                        </li>\r\n                                        <li> {'}'} </li>\r\n                                    </li> <br />\r\n\r\n                                    <li> {'}'} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactClass;","import React from 'react';\r\n\r\nconst ReactAnimation = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> React-reveal 모듈 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설치 </h2>\r\n                        <li> npm install react-reveal --save </li>\r\n                        <li> yarn add react-reveal </li>\r\n\r\n                        <h2 className='h2'> 📌 Zoom </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactAnimation;","import React from 'react';\r\n\r\nconst ReactRouter = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> react-router-dom version 5 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 React Router 설치 </h2>\r\n            <li> npm install react-router-dom </li>\r\n            <li> yarn add react-router-dom </li>\r\n\r\n            <h2 className='h2'> ✔ React Router 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> import React, {'{ Component }'} from 'react'; </li>\r\n                  <li> import {'{ BrowserRouter, Route, Switch, Link }'} from 'react-router-dom'; </li>\r\n                  <li> import Home from './inc/home.js' </li>\r\n                  <li> import Home1 from './inc/Home1.js' </li> <br />\r\n                  <li> const App = () {'=> {'}\r\n                    <li> return(\r\n                      <li> {' <div className=\"App\">'}\r\n                        <li> {' <BrowserRouter> '}\r\n                          <li> {'<p> <Link to=\"/\">Home</Link> </p>'} </li>\r\n                          <li> {'<p> <Link to=\"/home1\">Home1</Link> </p>'} </li>\r\n                          <li> {' <Switch> '}\r\n                            <li> {' <Route path=\"/\" exact component={Home}></Route> '} </li>\r\n                            <li> {' <Route path=\"/home1\" component={Home1}></Route> '} </li>\r\n                          </li>\r\n                          <li> {' </Switch> '} </li>\r\n                        </li>\r\n                        <li> {' </BrowserRouter> '} </li>\r\n                      </li>\r\n                      <li> {'     </div> '} </li>\r\n                    </li>\r\n                    <li> ); </li>\r\n                  </li>\r\n                  <li> {'}'} </li>\r\n                  <li> export default App; </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> react-router-dom history(정리 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { useHistory } from 'react-router-dom'; \"} </li>\r\n                  <li> history = useHistory(); </li>\r\n                  <li> 메소드() {\"{\"}\r\n                    <li> this.history.push(\"/경로\"); </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (v6) react-router-dom </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <li> npm install react-router-dom --save </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Link는 a태그의 속성을 가지고 있다. (css에서 a태그로 인식) </li>\r\n            <li> Route 컴포넌트를 이용하면 props 속성으로 match,location,history 3개를 같이 보내준다. </li>\r\n            <li> Route path 속성에 \"\":속성명\"을 넣어 주면 경로가 변경</li>\r\n            <li> useParams()를 사용하면 경로에 있는 변수들을 가져올 수 있다. </li>\r\n\r\n            <h2 className='h2'> ✔ react-router-dom version 6 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 react-router-dom version 6 예시 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { BrowserRouter, Route, Routes, Link, useParams } from 'react-router-dom'; \"} </li>\r\n                  <li> </li> <br />\r\n                  <li> const a = useParams(); </li>\r\n                  <li> console.log(a);  </li>\r\n                  <li> </li> <br />\r\n                  <li> return (\r\n                    <li> {' <BrowserRouter> '} <small> 어플리케이션에서 오직 1개만 존재 </small>\r\n                      <li> {' <Link to=\"/경로> 경로클릭 </Link>  '} </li>\r\n                      <li>  </li> <br />\r\n                      <li> {' <Routes> '} <small> Route를 사용하기 위해서는 무조건 감싸주어야 한다. </small>\r\n                        <li> {' <Route path=\"/경로/:속성명\" element={<컴포넌트/>} />'} </li>\r\n                        <li> {' <Route path=\"/경로1\" element={<컴포넌트1/>} />'} <small> 1개의 컴포넌트에 다중경로 설정 여러번 쓰기 </small> </li>\r\n                        <li> {' <Route path=\"/\" element={<컴포넌트1/>} />'} <small> 1개의 컴포넌트에 다중경로 설정 여러번 쓰기 </small> </li>\r\n                        <li> {' <Route path=\"/경로/*\" element={<컴포넌트2/>} />'} <small> 와일드카드를 사용한 depth 경로 구성 </small>\r\n                          <div className=\"block4\">\r\n                            <li> <small> 컴포넌트2.js </small> </li>\r\n                            <li> {' <Routes> '}\r\n                              <li> {' <Route path=\"경로\" element={<컴포넌트2-1/>} />'} <small> 경로에 '/'를 붙이지 않아야 한다. </small> </li>\r\n                            </li>\r\n                            <li> {' </Routes> '} </li>\r\n                          </div>\r\n                        </li>\r\n                      </li>\r\n                      <li> {' </Routes> '} </li>\r\n                    </li>\r\n                    <li> {' </BrowserRouter> '} </li>\r\n                  </li>\r\n                  <li> ); </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (v6) BrowserRouter HashRouter MemoryRouter NativeRouter StaticRouter</summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 HashRouter </h2>\r\n            <div className='block4'>\r\n              <li> 현재 사용하지 않음 </li>\r\n              <li> 경로에 #이 붙는다. </li>\r\n              <li> SEO가 읽지 못한다. </li>\r\n              <li> 해시 히스토리가 지원되지 않는다. </li>\r\n              <li> 서버에서 해시 URL을 읽을수 없다. </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 BrowserRouter </h2>\r\n            <div className='block4'>\r\n              <li> Link와 같이 사용된다. </li>\r\n              <li> 새로고침하면 에러가 발생한다. </li>\r\n              <li> 컴포넌트 매핑을 사용한다. </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (v6) react-router history </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> props로 받아서 처리 </li>\r\n              <li> 페이지를 동적으로 이동하는 방법 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { createBrowserHistory } from 'history'; \"} </li>\r\n                  <li> const history = createBrowserHistory(); </li>\r\n                  <li> {\" <Router history={history} \"} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 예시1 </h3>\r\n                <div className='block4'>\r\n                  <li> move() {\"{\"}\r\n                    <li> this.props.history.push(\"/경로\") </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (v6) Navigate </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 페이지를 이동시켜준다. </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import {Navigate} from 'react-router-dom'; \"} </li>\r\n                  <li> {\" const [test, setTest] = React.useState(false); \"} </li>\r\n                  <li> {\" const Test = () => { \"}\r\n                    <li> {\" setTest(true); \"} </li>\r\n                  </li>\r\n                  <li> {\" } \"} </li>\r\n                  <li> {\" return ( \"}\r\n                    <li> {\" <> \"}\r\n                      <li> {\" <button onClick={Test}> 버튼 </button> \"} </li>\r\n                      <li> {\" { \"}\r\n                        <li> {\" test && <Navigate to='/' replace={true}/> \"} </li>\r\n                      </li>\r\n                      <li> {\" } \"} </li>\r\n                    </li>\r\n                    <li> {\" </> \"} </li>\r\n                  </li>\r\n                  <li> {\" ); \"} </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (v6) useNavigate() </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 현재페이지에서 뒤로가기, 이동가능 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { useNavigate } from 'react-router-dom'; \"} </li>\r\n                  <li> {\" const navigate = useNavigate(); \"} </li>\r\n                  <li> {\" const num = 1; \"} </li>\r\n                  <li> {\" const Test = () => { \"}\r\n                    <li> {\" navigate('/'); //경로로 이동 \"} </li>\r\n                    <li> {\" navigate(-1); //back \"} </li>\r\n                    <li> {\" navigate(-2); //go?? \"} </li>\r\n                    <li> {\" navigate(`/user/${num}`); \"} </li>\r\n                  </li>\r\n                  <li> {\" } \"} </li>\r\n                  <li> {\" return ( \"}\r\n                    <li> {\" <> \"}\r\n                      <li> {\" <button onClick={Test}> 버튼 </button> \"} </li>\r\n                    </li>\r\n                    <li> {\" </> \"} </li>\r\n                  </li>\r\n                  <li> {\" ); \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (v6) Outlet </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 부모 요소에 경로를 선언하고 사용이 가능하게 하는것 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 App.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" <Route path='/a' element={<A />}> \"}\r\n                    <li> {\"   <Route path='b' element={<B />} /> \"} </li>\r\n                    <li> {\"   <Route path='c' element={<C />} /> \"} </li>\r\n                  </li>\r\n                  <li> {\" </Route> \"} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 A.js  </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { Outlet } from 'react-router-dom'; \"} </li>\r\n                  <li> return( {\"<>\"}\r\n                  </li>\r\n                  <li> {\" <Outlet /> \"} </li>\r\n                  <li> {\"</>\"}); </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (v6) useLocation() </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 현재 경로를 알 수 있다. </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { useLocation } from 'react-router-dom'; \"} </li>\r\n                  <li> {\" \tconst location = useLocation(); \"} </li>\r\n                  <li> {\" \tconst Test = () => { \"}\r\n                    <li> {\" \t\tconsole.log(location.hash); // '' \"} </li>\r\n                    <li> {\" \t\tconsole.log(location.key); // 11y106f0 \"} </li>\r\n                    <li> {\" \t\tconsole.log(location.pathname); //user-details , 경로가 나온다. \"} </li>\r\n                    <li> {\" \t\tconsole.log(location.search); // '' \"} </li>\r\n                    <li> {\" \t\tconsole.log(location.state); //null \"} </li>\r\n                  </li>\r\n                  <li> {\" \t} \"} </li>\r\n                  <li> {\" \treturn ( \"}\r\n                    <li> {\" \t\t<> \"}\r\n                      <li> {\" \t\t\t<button onClick={Test}> 버튼 </button> \"} </li>\r\n                    </li>\r\n                    <li> {\" \t\t</> \"} </li>\r\n                  </li>\r\n                  <li> {\" \t); \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> (v6) useParams() </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 App.js  </h3>\r\n                <div className='block4'>\r\n                  <li> {\" <Route path='/user-details/:num' element={<UserDetailsPage />} /> \"} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 경로입력  </h3>\r\n                <div className='block4'>\r\n                  <li> http://localhost:3000/user-details/123 </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 UserDetailsPage.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" \tconst { num } = useParams(); \"} </li>\r\n                  <li> {\" \treturn ( \"}\r\n                    <li> {\" \t\t<> \"}\r\n                      <li> {\" \t\t\t{num} \"} </li>\r\n                      <li> {\" \t\t\t<button onClick={Test}> 버튼 </button> \"} </li>\r\n                    </li>\r\n                    <li> {\" \t\t</> \"} </li>\r\n                  </li>\r\n                  <li> {\" \t); \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactRouter;","import React from 'react';\r\n\r\nconst ReactRedux = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Redux란 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 공식문서 사이트 </h2>\r\n            <li> <a href=\"https://react-redux.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\"> react redux </a> </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1. 상태를 1곳에서 관리할 수 있어 상태의 변경이나 추적이 용이하다. </li>\r\n            <li> 2. store 폴더에 state를 넣고 관리한다. </li>\r\n            <li> 3. Action Dispatch(함수) Store View </li>\r\n            <li> 4. store는 1개만 만든다.(여러개의 스토어 사용 지양) </li>\r\n            <li> 5. 기존의 상태값들은 건드리지 않고 새로운 상태를 만들어서 업데이트를 해준다. </li>\r\n            <li> 6. 똑같은 값일 때 인풋과 아웃풋은 같아야 한다. </li>\r\n            <li> 7. ACTION_TYPE은 대문자로 적는다. </li>\r\n            <li> 8. Ducks패턴(액션,액션함수,리듀서 등을 하나의 파일에서 관리하는 패턴)\r\n              <div className=\"block4\">\r\n                <li> reducer 는 export default로 내보낸다. </li>\r\n                <li> action 은 export로 내보낸다. </li>\r\n              </div>\r\n            </li>\r\n            <li>  </li> <br />\r\n            <li> 자꾸에러가 나서 아래와 같이 설치 된다는 보장은 없음.. </li>\r\n            <li> npm i -D @babel/core @babel/preset-env @babel/preset-react babel-loader @babel/plugin-proposal-class-properties </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 해석 </h2>\r\n            <li> Store = createStore(리듀서) </li>\r\n            <li> Store.dispatch(액션함수) {\"<-\"} 디스패치함수() {\"<-\"} 사용자이벤트 </li>\r\n            <h2 className='h2'> 📌 리덕스 작동 과정 </h2>\r\n            <li> component - dispatch - action - handle - reducer - update - store - subscribe </li>\r\n            <li> 컴포넌트에서 값이 변동 </li>\r\n            <li> action을 dispatch로 작동 </li>\r\n            <li> action이 reducer를 작동 </li>\r\n            <li> reducer가 액션에 맞는 값을 store에 저장 </li>\r\n            <li> store에 저장된 값을 컴포넌트에 반영 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> redux 설치 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> npm i redux react-redux redux-logger </li>\r\n            <li> npm i -D redux-devtools <small> # (개발단계에서사용)크롬 익스텐션과 연동하려고 설치  </small> </li>\r\n\r\n            <h2 className='h2'> 📌 추가 설치 </h2>\r\n            <li> redux-devtools-extension으로 크롬 확장 프로그램 redux dev tools에서 redux추적 가능 </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> redux 기본 테스트 예시 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 store/index.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { createStore } from 'redux'; \"} </li>\r\n                  <li> {\" import rootReducer from './reducer'; \"} </li>\r\n                  <li> {\" const store = createStore(rootReducer); \"} </li>\r\n                  <li> {\" export default store; \"} </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 store/reducer.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { combineReducers } from 'redux'; \"} </li>\r\n                  <li> {\" import reducerName from './auth/reducers'; \"} </li>\r\n                  <li> {\" const rootReducer = combineReducers({ \"}\r\n                    <li> {\"auth: authReducer \"} </li>\r\n                  </li>\r\n                  <li> {\" }); \"} </li>\r\n                  <li> {\" export default rootReducer; \"} </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 store/auth/index.js </h3>\r\n                <div className='block4'>\r\n                  <li> export * from \"./actions\" </li>\r\n                  <li> export * from \"./reducers\" </li>\r\n                  <li> export * from \"./types\" </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 store/auth/action.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { IS_LOGIN } from './types'; \"} </li>\r\n                  <li> {\" export const isLogin = (payload) => { \"}\r\n                    <li> {\"return { \"}\r\n                      <li> {\"  type: IS_LOGIN, \"} </li>\r\n                      <li> {\"  payload: payload \"} </li>\r\n                    </li>\r\n                    <li> {\"} \"} </li>\r\n                  </li>\r\n                  <li> {\" }; \"} </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 store/auth/reducer.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { IS_LOGIN } from './types'; \"} </li>\r\n                  <li> {\" const initialState = { \"}\r\n                    <li> {\"isLogin: false \"} </li>\r\n                  </li>\r\n                  <li> {\" }; \"} </li>\r\n                  <li> {\" const authReducer = (state = initialState, action) => { \"}\r\n                    <li> {\"switch (action.type) { \"}\r\n                      <li> {\"  case IS_LOGIN: \"} </li>\r\n                      <li> {\" return { \"}\r\n                        <li> {\"...state, \"} </li>\r\n                        <li> {\"isLogin: action.payload \"} </li>\r\n                      </li>\r\n                      <li> {\" } \"} </li>\r\n                      <li> {\"  default: \"}\r\n                        <li> {\" return state; \"} </li>\r\n                      </li>\r\n                    </li>\r\n                    <li> {\"} \"} </li>\r\n                  </li>\r\n                  <li> {\" }; \"} </li>\r\n                  <li> {\" export default authReducer; \"} </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 store/auth/type.js </h3>\r\n                <div className='block4'>\r\n                  <li> export const Action_Type = \"Action_Type\"; </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 index.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { BrowserRouter } from 'react-router-dom'; \"} </li>\r\n                  <li> {\" import { Provider } from 'react-redux'; \"} </li>\r\n                  <li> {\" import store from './store/index'; \"} </li>\r\n                  <li> {\" import history from './util/history'; \"} </li>\r\n                  <li> {\" <Provider store={store}> \"}\r\n                    <li> {\"<BrowserRouter history={history}> \"}\r\n                      <li> {\"  <App /> \"} </li>\r\n                    </li>\r\n                    <li> {\"</BrowserRouter> \"} </li>\r\n                  </li>\r\n                  <li> {\" </Provider> \"} </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 적용할.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { isLogin } from '../store/auth/actions'; \"} </li>\r\n                  <li> {\" import { useDispatch } from 'react-redux'; \"} </li>\r\n                  <li> const dispatch = useDispatch();</li>\r\n                  <li> dispatch(isLogin(true)); <small> import로 액션함수 불러오기 </small> </li>\r\n                  <li> {/* //dispatch({ type: \"IS_LOGIN\", payload: true }); */} <small> 이렇게도 가능 </small> </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> redux 예시 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 index.js </h3>\r\n                <div className='block4'>\r\n                  <li> const redux = require('redux'); </li>\r\n                  <li> const createStore = redux.crateStore; </li>\r\n                  <li> const ADD_TYPE = \"ADD_TYPE\"; </li>\r\n                  <li> // action은 타입을 가진 Object를 반환 </li>\r\n                  <li> const addAction = () {\"=> {\"}\r\n                    <li> return {\"{\"}\r\n                      <li> type : ADD_TYPE </li>\r\n                    </li>\r\n                    <li> {\"}\"} </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li> <br />\r\n                  <li> const initialState = {\"{\"}\r\n                    <li> defaultState = 300 </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li> const reducer = (state=initialState, action) {\"=> {\"}\r\n                    <li> switch(action.type) {\"{\"}\r\n                      <li> case ADD_TYPE:\r\n                        <li> return {\"{\"}\r\n                          <li> ...state, </li>\r\n                          <li> defaultState = state.defaultState + 1 </li>\r\n                        </li>\r\n                        <li> {\"}\"} </li>\r\n                        <li> default: return state; </li>\r\n                      </li>\r\n                    </li>\r\n                    <li> {\"}\"} </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li>  </li> <br />\r\n                  <li> const store = createStore(reducer); </li>\r\n                  <li> store.dispatch(addAction()); </li>\r\n                  <li> store.subscribe((){\"=>{\"})\r\n                    <li> console.log(store.getState()); </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li> store.dispatch(addAction()); </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 리덕스 함수 - useSelector </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 useSelector </h2>\r\n            <div className='block4'>\r\n              <li> 리액트에서 리덕스 상태를 조회할때 사용 </li>\r\n              <li> 상태를 조회해서 상태가 변하지 않으면 리렌더링을 하지 않음 </li>\r\n              <li> useSelector의 2번째 인자는 equalityFn으로 이전값과 같으면 true, 다른면 false(리렌더링) </li>\r\n              <li> 2번째 인자로 shallowEqual을 사용하면 객체 내부에 제일 첫번째로 겉에 있는 값들만 검사한다. </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> const test = useSelector(state {\"=>\"} state.test); </li>\r\n              <li> {\" const {test1,test2} = useSelector(state => ({ test1: state.test1, test2: state.test2 })); \"}\r\n                <small> 이와 같은 방법을 사용하면 배먼 새로운 객체를 만들어서 무조건 리렌더링이 된다. </small>\r\n                <div className=\"block4\">\r\n                  <li> 해결방법1 </li>\r\n                  <li> {\" const {test1,test2} = useSelector(state => ({ test1: state.test1, test2: state.test2 }),shallowEqual); \"}  </li>\r\n                  <li> 해결방법2 </li>\r\n                  <li> useSelector를 여러번 사용한다. </li>\r\n                </div>\r\n              </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 3. 액션 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 상태값이 어떤 상황에 따라 값이 변하게 하는 방식 </li>\r\n            <li> type은 필수로 1개 있어야 한다. </li>\r\n            <li> 액션을 함수로 만들어서 다른 파일에 보관하고 불러와서 사용하나. </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 createAction </h2>\r\n            <li> 액션을 간단하게 만들어준다. </li>\r\n            <li> {\" import {createAction } from 'redux-actions';\"} </li>\r\n            <div className=\"block4\">\r\n              <li> {\" export const increment = (index: string) => ({ \"}\r\n                <li> {\"  type: INCREMENT, \"} </li>\r\n                <li> {\"  value: index \"} </li>\r\n              </li>\r\n              <li> {\" }); \"} </li>\r\n              <li> increment(3); </li>\r\n            </div>\r\n            <div className=\"block4\">\r\n              <li> export const setAction = createAction(SET_ACTION,{\"({index,index1,index2})=>({index,index1,index2})\"}); <small> 여러개 넣는 방법 </small> </li>\r\n              <li> setAction({\"{index:5,index1:5,index2:5}\"}); <small> 여러개 넣는 방법 </small> </li>\r\n              <li> setAction(); </li>\r\n            </div>\r\n            <li>  </li>\r\n            <li>  </li>\r\n            <h2 className='h2'> 📌 handleActions </h2>\r\n            <li> {\" import { handleActions } from 'redux-actions';\"} </li>\r\n            <li> const reducer = handleAction({\"{\"}\r\n              <li> {\" INCREMENT: (state, action) => ({ \"}\r\n                <li> counter: state.counter + action.payload </li>\r\n              </li>\r\n              <li> {\"  }), \"} </li>\r\n            </li>\r\n            <li> {\"}, {counter: 0});\"} </li>\r\n            <h2 className='h2'> 📌 액션 구성 </h2>\r\n            <div className=\"block4\">\r\n              <li> type: \"액션명\" </li>\r\n              <li> data: {\"{\"}\r\n                <li> 키 : 값, </li>\r\n                <li> 키 : 값, </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 액션을 함수로 만들기 </h2>\r\n            <div className=\"block4\">\r\n              <li> export function Action(data) {\"{\"}\r\n                <li> return {\"{\"}\r\n                  <li> type: \"액션명\" </li>\r\n                  <li> data: {\"{\"}\r\n                    <li> 키 : 값, </li>\r\n                    <li> data </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </li>\r\n                <li> {\"};\"} </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈 </h3>\r\n              <div className='block4'>\r\n                <li> const CHANGE_INPUT_EXAM = \"CHANGE_INPUT_EXAM\"; </li>\r\n                <li> {\" export const setInputExam = (input: string) => ({ \"}\r\n                  <li> {\" \ttype: CHANGE_INPUT_EXAM, \"} </li>\r\n                  <li> {\" \tpayload: input \"} </li>\r\n                </li>\r\n                <li> {\" }); \"} </li>\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 4. 리듀서 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 액션값을 받아서 이전 상태값과 액션을 발생시키는 함수 </li>\r\n            <li> 마지막 default: 에는 에러 처리 구문을 넣는다고 한다. </li>\r\n            <li> 여러개의 리듀서를 하나로 합친 루트 리듀서가 있다.  </li>\r\n            <h2 className='h2'> 📌 리듀서 구성 </h2>\r\n            <div className=\"block4\">\r\n              <li> type 커스텀액션타입명 = | {\" ReturnType<typeof 액션함수명> | ReturnType<typeof 액션함수명>; \"} </li>\r\n              <li> interface StateInterface {\" { 상태: 타입; 상태: 타입; } \"} </li>\r\n              <li> const initialState: StateInterface = {\" {상태: '타입에맞는초기값', 상태: '타입에맞는초기값'}; \"} </li>\r\n              <li> function reducer(state: StateInterface =initialState, action: 커스텀액션타입명) {\"{\"}\r\n                <li> switch(action.type) {\"{\"}\r\n                  <li> case 'TYPE명1':\r\n                    <li> return {\" { ...state, 상태: action.액션함수내의키명(출력은 상태와 같아야한다?) }; \"}; </li>\r\n                  </li>\r\n                  <li> case 'TYPE명2':\r\n                    <li> return {\" { ...state, abc: action.output(abc) }; \"}; <small> 액션함수 내부에 output: abc </small>  </li>\r\n                  </li>\r\n                  <li> default:\r\n                    <li> return 상태값반환; </li>\r\n                  </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 루트 리듀서  </h2>\r\n            <div className=\"block4\">\r\n              <li> {\" import { combineReducers } from 'redux'; \"} </li>\r\n              <li> {\" import {리듀서1} from './경로'; \"} </li>\r\n              <li> {\" import {리듀서2} from './경로'; \"} </li>\r\n              <li> {\" const rootReducer = combineReducers({ \"}\r\n                <li> {\"별칭: 리듀서1, \"} </li>\r\n                <li> {\"별칭: 리듀서2, \"} </li>\r\n              </li>\r\n              <li> {\" }); \"} </li>\r\n              <li> {\" export default rootReducer; \"} </li>\r\n              <li> {\" export type RootState = ReturnType<typeof rootReducer>; \"}\r\n                <small> 이 타입은 추후 우리가 컨테이너 컴포넌트를 만들게 될 때 스토어에서\r\n                  관리하고 있는 상태를 조회하기 위해서\r\n                  useSelector를 사용 할 때 필요로 합니다. (타입스크립트에서 필요) </small> </li>\r\n            </div>\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 미들 웨어 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 클로저를 이용한 구조로 작동 </li>\r\n            <li> 클로저로 store,next를 외부에서 접근할 수 없고 오로지 action으로만 제어 가능한 구조 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 미들웨어 구조 </h2>\r\n            <div className=\"block4\">\r\n              <li> {\" const middleware1 = store = next = action =>{ \"}\r\n                <li> {\"return next(action); \"} </li>\r\n              </li>\r\n              <li> {\" } \"} </li>\r\n            </div>\r\n            <div className=\"block4\">\r\n              <li> {\" const middleware1 = store =>{ \"}\r\n                <li> {\"return next=>{ \"}\r\n                  <li> {\" return action=>{ \"}\r\n                    <li> {\"return next(action); \"} </li>\r\n                  </li>\r\n                  <li> {\" } \"} </li>\r\n                </li>\r\n                <li> {\"} \"} </li>\r\n              </li>\r\n              <li> {\" } \"} </li>\r\n            </div>\r\n\r\n\r\n            <h2 className='h2'> 📌 applyMiddleware </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 5. 스토어 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1개의 어플리케이션에 1개의 스토어를 만든다. </li>\r\n            <li> 스토어에는 현재 앱의 상태와, 리듀서 그리고 내장함수가 있다. </li>\r\n            <li>  </li>\r\n            <h2 className='h2'> 📌 스토어 구성 </h2>\r\n            <li>  </li>\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import {createStore} from 'redux' \"} </li>\r\n                  <li> const 스토어 = createStore(리듀서) </li>\r\n                  <li> const state = 스토어.getState(); </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 2. 디스패치 그리고 사용 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 스토어의 내장함수 중 하나 </li>\r\n            <li> 디스패치가 상태 이벤트를 감지하는 역할을 한다고 보면된다. </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 디스패치 구성 </h2>\r\n            <li> {\" () => { \"}\r\n              <li> {\"return { \"}\r\n                <li> {\"  type: “액션명”; \"} </li>\r\n              </li>\r\n              <li> {\"} \"} </li>\r\n            </li>\r\n            <li> {\" } \"} </li>\r\n\r\n            <h2 className='h2'> 📌 디스패치 구조 </h2>\r\n            <li> store.dispatch(액션함수() </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { useDispatch, useSelector } from 'react-redux'; \"} </li>\r\n                  <li> {\" import { 액션함수, RootState } from '../../store'; \"} </li>\r\n                  <li> {\" interface I컴포넌트Props { \"} </li>\r\n                  <li> {\" } \"} </li>\r\n                  <li> {\" const 컴포넌트명: React.FunctionComponent<I컴포넌트Props> = ()  => {\"}\r\n                    <li> const dispatch = useDispatch(); </li>\r\n                    <li> {\" const 이벤트핸들러메소드 = (e: any) => dispatch(액션함수(e.target.value)); \"} </li>\r\n                    <li>  </li> <br />\r\n                    <li> {\" const { 상태 } = useSelector((state: RootState)) => ({ \"} <small> {\" export type RootState = ReturnType<typeof rootReducer>; \"} </small>\r\n                      <li> {\" 상태: state.루트리듀서내부의리듀스.상태 \"} </li>\r\n                    </li>\r\n                    <li> {\"}));\"} </li>\r\n                  </li>\r\n                  <li> {\"};\"} </li>\r\n                  <li> export default 컴포넌트명 </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 구독 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 스토어의 내장 함수중 하나 </li>\r\n            <li> 함수 형태의 값을 파라미터로 받아옴 </li>\r\n            <li> 구독 함수에 특정 함수를 전달해주면, 액션이 디스패치 될때 전달해준 함수가 호출되게 한다. </li>\r\n            <li> store.dispatch(액션함수()); 를 호출할 때마다 스토어에서 만든 함수가 호출된다. </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> const unsubscribe = store.subscribe(스토어에서 만든 함수){\"=>{\"}\r\n                    <li> console.log(store.getState()); </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 커넥터 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Provider 컴포넌트 하위에 있는 컴포넌트가 Store에 접근할 수 있게 해준다. </li>\r\n            <li>  </li>\r\n            <h2 className='h2'> 📌 mapStateToProps </h2>\r\n            <li> store가 업데이트 될 때 자동으로 호출하게 한다. , null이나 undefined를 주면 자동으로 호출이 되지 않는다.(아직 모르겠음) </li>\r\n            <li> connect()의 첫번째 인자로 사용 </li>\r\n            <div className=\"block4\">\r\n              <li> const mapStateToProps = (state, 객체) {\" => ({ \"}\r\n                <li> todo: state.todos <small> , 1번 방법(위에 매개변수에서 객체 제거) </small> </li>\r\n                <li> todo: state.todos[객체.키] <small> , 2번 방법 </small> </li>\r\n              </li>\r\n              <li> {\" }) \"} </li>\r\n              <li> export default connect(mapStateToProps)(컴포넌트명) </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 mapDispatchToProps </h2>\r\n            <li> store에 접근한 컴포넌트가 store의 상태를 바꾸기 위해 dispatch를 사용할 수 있게 해준다. </li>\r\n            <li> connect()의 두번째 인자로 사용 </li>\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { connect } from 'react-redux' \"} </li>\r\n                  <li> 컴포넌트 만들어서 사용 </li>\r\n                  <li> export default connect()(컴포넌트명); </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 카운터 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 프리젠테이셔널 컴포넌트 </li>\r\n            <li> 리덕스 스토어에 직접 접근하지 않고 필요한 값만 받아와서 사용하는 컴포넌트 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 Counter.js - 보조(실제 보여지는 화면) </h3>\r\n                <div className='block4'>\r\n                  <li> const 컴포넌트 = () {\" => { param1,param2,param3 } {\"}\r\n                    <li>  </li>\r\n                    <li> return ({\"<>\"}\r\n                      <li> {\"<button onClick={param1}>버튼</button>\"} </li>\r\n                      <li> {\"<button onClick={param2}>버튼</button>\"} </li>\r\n                      <li> {\"<button onClick={param3}>버튼</button>\"} </li>\r\n                    </li>\r\n                    <li> {\"</> );\"} </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li> export default 컴포넌트 </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 컨테이너.js - 실제 사용 </h3>\r\n                <div className='block4'>\r\n                  <li> const {\"{상태,상태}\"}= useSelector(state {\" => ({ \"})  <small> , useSelector은 스토어의 상태를 조회하는 hook  </small>\r\n                    <li> 상태 : state.값 </li>\r\n                    <li> 상태 : state.값 </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li> const dispatch = useDispatch(); <small> 스토어의 dispatch함수를 사용하게 해주는 hook, store.dispatch </small> </li>\r\n                  <li> const 디스패치함수1 = () {\" => dispatch(액션함수1()) \"} </li>\r\n                  <li> const 디스패치함수2 = () {\" => dispatch(액션함수2()) \"} </li>\r\n                  <li> const 디스패치함수3 = () {\" => dispatch(액션함수3()) \"} </li>\r\n                  <li> return (\r\n                    <li> {\"<Counter>\"}\r\n                      <li> {\"param1 = {디스패치함수1}\"} </li>\r\n                      <li> {\"param2 = {디스패치함수2}\"} </li>\r\n                      <li> {\"param3 = {디스패치함수3}\"} </li>\r\n                    </li>\r\n                    <li> {\"</Counter> );\"} </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Redux Provider , Provider </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 리덕스를 사용할 공간을 설정 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\"<Provider store={store}>\"}\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li> {\"</Provider>\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Redux+Persist (좀 더 알아보기) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <div className='block4'>\r\n              <li> 장점 : 캐시를 이용하여 상태를 유지하기 쉬워진다. </li>\r\n              <li> 단점 : 캐시에 모든 상태값들이 저장되므로 불필요한 메모리들이 낭비가 된다. </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactRedux;","import React from 'react';\r\n\r\nconst ReactReduxSaga = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> redux-saga  </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설치 </h2>\r\n                        <li> npm install redux-saga @types/redux-saga </li>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> <a href=\"https://redux-advanced.vlpt.us/2/05.html\" target=\"_blank\" rel=\"noopener noreferrer\"> 참고 </a> </li>\r\n                        <li> 비동기작업같이 순수하지 않은 작업들을 처리하기 위한 리덕스 미들웨어 입니다. </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈  </h3>\r\n                                <div className='block4'>\r\n                                    <li> {\" import { createStore, applyMiddleware } from 'redux'; \"} </li>\r\n                                    <li> {\" import rootReducer from '../reducers'; \"} </li>\r\n                                    <li> {\" import createSagaMiddleware from 'redux-saga'; \"} </li>\r\n                                    <li> {\" import rootSaga from '../sagas'; \"} </li>\r\n                                    <li> {\" const sagaMiddleware = createSagaMiddleware(); \"} </li>\r\n                                    <li> {\" const configureStore = () => { \"}\r\n                                        <li> {\"   const store = createStore(rootReducer, applyMiddleware(sagaMiddleware)); \"} </li>\r\n                                        <li> {\"   sagaMiddleware.run(rootSaga); \"} </li>\r\n                                        <li> {\"   return store; \"} </li>\r\n                                    </li>\r\n                                    <li> {\" }; \"} </li>\r\n                                    <li> {\" export default configureStore; \"} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> createSagaMiddleware() </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 사가 미들웨어를 생성하는 함수 </li>\r\n                        <li> 만들어서 createStore함수의 2번째 인자의 applyMiddleware에 넣어서 사용한다. </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> import createSagaMiddleware from 'redux-saga'; </li>\r\n                                    <li> import rootSaga from '../sagas'; </li>\r\n                                    <li> const sagaMiddleware = createSagaMiddleware(); </li>\r\n                                    <li> {\" const configureStore = () => { \"}\r\n                                        <li> const store = createStore(rootReducer, applyMiddleware(sagaMiddleware)); </li>\r\n                                        <li> sagaMiddleware.run(rootSaga); </li>\r\n                                        <li> return store; </li>\r\n                                    </li>\r\n                                    <li> {\"};\"} </li>\r\n                                    <li> export default configureStore; </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> rootSaga 생성 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> {\" export function* rootSaga() { \"}\r\n                                        <li> {\"   yield all([counterSaga()]); \"} </li>\r\n                                    </li>\r\n                                    <li> {\" } \"} </li>\r\n                                </div>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> {\" import { all, fork } from 'redux-saga/effects'; \"} </li>\r\n                                    <li> {\" import {authSaga} from './auth'; \"} </li>\r\n                                    <li> {\" import {placeSaga} from './place'; \"} </li>\r\n                                    <li> {\" export default function* rootSaga() { \"}\r\n                                        <li> {\"   yield all([ \"}\r\n                                            <li> {\"     fork(authSaga), \"} </li>\r\n                                            <li> {\"     fork(placeSaga) \"} </li>\r\n                                        </li>\r\n                                        <li> {\"   ]); \"} </li>\r\n                                    </li>\r\n                                    <li> {\" } \"} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 커스텀 saga 생성 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> put : 새로운 액션을 dispatch 한다. </li>\r\n                        <li> delay : 작업을 지연시킨다.  </li>\r\n                        <li> takeEvery: 액션을 모니터링해서, 발생하면 특정 함수를 실행시킨다. </li>\r\n                        <li> createAction : 액션을 생성자로 일일히 귀찮게 만들지 않고 간단하게 만들어주는 함수 </li>\r\n                        <li> handleActions :  </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li> {\" import { delay } from 'redux-saga'; \"} </li>\r\n                                    <li> {\" import { put, takeEvery } from 'redux-saga/effects'; \"} </li>\r\n                                    <li> {\" import { handleActions, createAction } from 'redux-actions'; \"} </li>\r\n                                    <li> const INCREMENT = 'INCREMENT'; </li>\r\n                                    <li> export const increment = createAction(INCREMENT); </li>\r\n                                    <li> {\" function* incrementAsyncSaga() { \"}\r\n                                        <li> {\"   yield delay(1000); \"} </li>\r\n                                        <li> {\"   yield put(increment()); \"} </li>\r\n                                    </li>\r\n                                    <li> {\" } \"} </li>\r\n                                    <li> {\" export function* counterSaga() { \"}\r\n                                        <li> {\"   yield takeEvery(INCREMENT_ASYNC, incrementAsyncSaga); \"} </li>\r\n                                    </li>\r\n                                    <li> {\" } \"} </li>\r\n                                    <li> {\" export default handleActions( \"}\r\n                                        <li> {\"   { \"}\r\n                                            <li> {\"     [INCREMENT]: (state, action) => state + 1, \"} </li>\r\n                                        </li>\r\n                                        <li> {\"   }, \"} </li>\r\n                                        <li> {\"   1 \"} </li>\r\n                                    </li>\r\n                                    <li> {\" ); \"} </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> createAction, handleActions </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 createAction </h2>\r\n                        <li> 액션을 생성자로 일일히 귀찮게 만들지 않고 간단하게 만들어주는 함수 </li>\r\n                        <li> 기존 방법\r\n                            <div className=\"block4\">\r\n                                <li> {\" export const increment = (index) => ({ \"}\r\n                                    <li> {\"     type: types.INCREMENT, \"} </li>\r\n                                    <li> {\"     index \"} </li>\r\n                                </li>\r\n                                <li> {\" }); \"} </li>\r\n                            </div>\r\n                        </li>\r\n                        <li> createAction 함수 사용\r\n                            <div className=\"block4\">\r\n                                <li> export const increment = createAction(types.INCREMENT); </li>\r\n                                <li> {\" 사용할 때는 increment({상태: 상태값, 상태: 상태값}) \"}\r\n                                    <small> 이와 같이 사용하면 알아서 들어간다. , 단 무슨 값이 들어가야하는지 모름으로 주석을 달아주어야 한다. </small> </li>\r\n                            </div>\r\n                        </li>\r\n\r\n                        <h2 className='h2'> 📌 handleActions(아직 모르겠다.) </h2>\r\n                        <li> 리듀서에서 액션을 switch문을 이용해서 처리하는 것을 대신해주는 함수 </li>\r\n                        <div className=\"block4\">\r\n                            <li> export default handleActions {\"({\"}\r\n                                <li> [액션명]: (state, action) {\"=> {\"}\r\n                                    <li> const 상태 = state.get(\"상태키\"); </li>\r\n                                    <li> return state.set('상태키',상태.push(??) </li>\r\n                                    <li> return state.set('상태키',상태.pop() </li>\r\n                                    <li> return state.set('상태키',상태.update(??) </li>\r\n                                    <li> )) </li>\r\n                                </li>\r\n                                <li> {\"}, \"} </li>\r\n                            </li>\r\n                            <li> {\"}, initialState); \"} </li>\r\n                        </div>\r\n                        <li>  </li>\r\n\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li>\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            {/* 끝 */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactReduxSaga;","import React from 'react';\r\n\r\nconst ReactModal = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> react-modal 라이브러리 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <li> npm install react-modal </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 속성 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> {\" <Modal isOpen={참,거짓 스테이트 넣어주기} onRequestClose={() => setModalOpen(false)}> \"} <small> 바깥(오버레이)이나 ESC를 누르면 모달창이 꺼짐 </small> </li>\r\n              <li> {\" <Modal isOpen={참,거짓 스테이트 넣어주기} shouldCloseOnOverlayClick={참,거짓} \"} <small> 바깥(오버레이)이나 누르면 모달창이 꺼지는 속성 제거 </small> </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈  </h3>\r\n                <div className='block4'>\r\n                  <li> import Modal from 'react-modal'; </li>\r\n                  <li> {\" import React, { useState } from 'react'; \"} </li>\r\n                  <li>  </li> <br />\r\n                  <li> const [modalOpen, setModalOpen] = useState(false); </li>\r\n                  <li>  </li> <br />\r\n                  <li> return (\r\n                    <li> {\" <button onClick={() => setModalOpen(true)}> 팝업창 열기 </button> \"} </li>\r\n                    <li> {\" <Modal isOpen={modalOpen}\"}\r\n                      <li> {\" <button onClick={() => setModalOpen(false)}> 팝업창 닫기 </button> \"} </li>\r\n                    </li>\r\n                    <li> {\" </Modal> \"} </li>\r\n                  </li>\r\n                  <li> ); </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Portal(보류) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <li> npm install --save react react-dom </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import {createPortal} from 'react-dom' \"} </li>\r\n                  <li>  </li> <br />\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactModal;","import React from 'react';\r\n\r\nconst ReactStyledComponent = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] styled-components 설치 </summary>\r\n          <div className='block2'>\r\n\r\n            <li> cd 설치할폴더경로 </li>\r\n            <li> npm create react-app 프로젝트명 --template typescript </li>\r\n            <li> cd 프로젝트명 </li>\r\n            <li> npm run start <small> 시작이 되는지 테스트 해보기 </small> </li>\r\n            <li> npm i --save-dev install -g typescript </li>\r\n            <li> npm install -D gh-pages </li>\r\n            <li> npm install --save-dev styled-components @types/styled-components babel-plugin-styled-components cross-env</li>\r\n            <div className=\"block3\">\r\n              <li> styled-components <small> 스타일컴포넌트 설치 </small> </li>\r\n              <li> @types/styled-components <small> 타입스크립트를 사용하기 위한 설정 </small> </li>\r\n              <li> babel-plugin-styled-components <small> 디버그 할 때 랜덤 해쉬값이 생성되는데 접두사를 설정할 수 있음 </small> </li>\r\n              <li> 바벨 플러그인에 추가 <small> \"plugins\": [\"babel-plugin-styled-components\"] </small> </li>\r\n              <li> cross-env <small> 윈도우와 맥에서 동일한 명령어로 환경 변수를 설정하기 위해 사용 </small> </li>\r\n            </div>\r\n            <div className=\"block3\">\r\n              <li> <h3> package.json </h3> </li>\r\n              <li> \"scripts\": {\"{\"}\r\n                <li>   \"start\": \"cross-env NODE_ENV=development webpack-dev-server --open\", </li>\r\n                <li>   \"prebuild\": \"rimraf dist\", </li>\r\n                <li>   \"build\": \"cross-env NODE_ENV=production webpack --progress\" </li>\r\n              </li>\r\n              <li> {\"}\"}, </li>\r\n            </div>\r\n            <li> <h3> webpack.config.js </h3> </li>\r\n            <div className=\"block3\">\r\n              <li> module.exports = {\"{\"}\r\n                <li> mode: process.env.NODE_ENV, </li>\r\n              </li>\r\n              <li> {\"};\"} </li>\r\n            </div>\r\n            <li> <h3> .babelrc </h3> </li>\r\n            <div className=\"block3\">\r\n              <li> \"env\":{\"{\"}\r\n                <li> \"development\": {\"{\"} <small> 환경변수를 development에서 production으로 바꾸면 사람이 알아보기 어려워짐 </small>\r\n                  <li> \"plugins\": [\"babel-plugin-styled-components\"] </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components 기본사용방법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> import styled from 'styled-components'; </li>\r\n              <li> const 컴포넌트명 = styled.태그명`\r\n                <li> width: 100px; </li>\r\n                <li> css스타일 코드 작성 </li>\r\n              </li>\r\n              <li> `;` </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components 미디어 쿼리 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> const 스타일 = styled.div`\r\n                <li>  </li>\r\n                <li> @media only screen and (max-width: 768px) {\"{\"}\r\n                  <li>  </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </li>\r\n              <li> ``; </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components 전역 스타일 설정하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 GlobalStyle.js </h3>\r\n                <div className='block4'>\r\n                  <li> import {\"{createGlobalStyle\"} from \"styled-components\"; </li>\r\n                  <li> import reset from 'styled-reset'; </li>\r\n                  <li> export const GlobalStyle = createGlobalStyle`\r\n                    <li> {\"${reset}\"} </li>\r\n                    <li> 스타일 css작성하기 </li>\r\n                  </li>\r\n                  <li> `; </li>\r\n                </div>\r\n              </div>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 App.js </h3>\r\n                <div className='block4'>\r\n                  <li> import {\"{ GlobalStyle }\"} from /경로 </li>\r\n                  <li> {\"<App>\"}\r\n                    <li> {\"<GlobalStyle/>\"} </li>\r\n                  </li>\r\n                  <li> {\"</App>\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <h3 className='h3'> 🎈 조상 컴포넌트에서 아래로 스타일 주기 </h3>\r\n            <div className='block4'>\r\n              <li> {\" import { createGlobalStyle } from 'styled-components'; \"} </li>\r\n              <li>  </li> <br />\r\n              <li> const 컴포넌트명 = createGlobalStyle`\r\n                <li> *{\" {  \"}\r\n                  <li> css스타일 코드 작성 </li>\r\n                </li>\r\n                <li> {\" } \"} </li>\r\n              </li>\r\n              <li> `; </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components 상속하기,가져오기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈 컴포넌트B에 컴포넌트A를 상속한 후 추가 CSS주기 </h3>\r\n              <div className='block4'>\r\n                <li> const 컴포넌트A = styled.div`\r\n                  <li> width: 100px; </li>\r\n                  <li> css스타일 코드 작성 </li>\r\n                </li>\r\n                <li> `; </li>\r\n              </div>\r\n              <div className='block4'>\r\n                <li> const 컴포넌트B = styled(컴포넌트A)`\r\n                  <li> width: 100px; </li>\r\n                  <li> css스타일 코드 작성 </li>\r\n                </li>\r\n                <li> `; </li>\r\n              </div>\r\n              <h3 className='h3'> 🎈 컴포넌트B에 컴포넌트A를 CSS스타일 가져오기 </h3>\r\n              <div className='block4'>\r\n                <li> const 컴포넌트A = styled.div`\r\n                  <li> width: 100px; </li>\r\n                  <li> css스타일 코드 작성 </li>\r\n                </li>\r\n                <li> `; </li>\r\n              </div>\r\n              <div className='block4'>\r\n                <li> const 컴포넌트B = styled(컴포넌트A.withComponent(\"태그\"))`\r\n                  <li> 추가적으로 css 스타일 코드 작성 </li>\r\n                </li>\r\n                <li> `; </li>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components css 이벤트 사용  </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> const 컴포넌트명 = styled.div`\r\n                    <li> css스타일 코드 작성 </li>\r\n                    <li> &:hover {\"{\"}\r\n                      <li> css스타일 코드 작성 </li>\r\n                    </li>\r\n                    <li> {\"}\"} </li>\r\n                  </li>\r\n                  <li> `; </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components css 스타일 컴포넌트 만들기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈 </h3>\r\n              <div className='block4'>\r\n                <li> import {\"{css}\"} from 'styled-components'; <small> # import 필요 </small> </li>\r\n                <li>  </li> <br />\r\n                <li> const 컴포넌트명 = css`\r\n                  <li> width: 100px; </li>\r\n                  <li> css스타일 코드 작성 </li>\r\n                </li>\r\n                <li> `; </li>\r\n                <li>  </li> <br />\r\n                <li> 다른 컴포넌트 css스타일 안에 {\"${스타일 컴포넌트}\"} 넣으면 적용이 된다.  </li>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components props 이용하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <h3 className='h3'> 🎈 </h3>\r\n              <div className='block4'>\r\n                <li> const 컴포넌트명 = styled.컴포넌트`\r\n                  <li> width: 100px; </li>\r\n                  <li> css스타일 코드 작성 </li>\r\n                  <li> {\" ${(props) => (props.props속성명 ? css속성을가진컴포넌트 : css속성을가진컴포넌트) }\"} </li>\r\n                  <li> {\" ${(props) => (props.props속성명 || css속성을가진컴포넌트) }\"} </li>\r\n                  <li> css스타일: {\" ${(props) => (props.props속성명 || css스타일) }\"} </li>\r\n                  <li>  </li> <br />\r\n\r\n                  <li> color: {'${(props) => props.color || \"red\" }; '} </li>\r\n                  <small> props로 color값을 받아오면 받아온 색을 아니면 정해놓은 색을 사용 </small> <br />\r\n                  <li> {' ${(props) => props.color && css` '}\r\n                    <li> color: white; </li>\r\n                    <li> background: white; </li>\r\n                  </li>\r\n                </li>\r\n                <li> `; </li>\r\n                <li> {\" ${props => { \"}\r\n                  <li> {\" if (props.애니메이션명) { \"}\r\n                    <li> {\"return css` \"}\r\n                      <li> css스타일 코드 작성 </li>\r\n                    </li>\r\n                    <li> {\"`; \"} </li>\r\n                    <li> {\" } \"} </li>\r\n                  </li>\r\n                </li>\r\n                <li> {\"}} \"} </li>\r\n\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components html태그 속성 이용하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" const InputText = styled.input.attrs({ \"}\r\n                    <li> {\"   type: 'text', \"} </li>\r\n                    <li> {\"   placeholder: props => props.placeholder || 'Please fill', \"} </li>\r\n                  </li>\r\n                  <li> {\" })` \"}\r\n                    <li> {\"   padding: 6px 12px;  \"} </li>\r\n                  </li>\r\n                  <li> {\" `; \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components animation </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" const rotation = keyframes` \"}\r\n                    <li> {\" from{ \"}\r\n                      <li> {\"transform: rotate(0deg); \"} </li>\r\n                    </li>\r\n                    <li> {\" } \"} </li>\r\n                    <li> {\" to{ \"}\r\n                      <li> {\"transform: rotate(360deg); \"} </li>\r\n                    </li>\r\n                    <li> {\" } \"} </li>\r\n                  </li>\r\n                  <li> {\"  `; \"} </li>\r\n                  <li>  </li> <br />\r\n                  <li> {\"  ${props => { \"}\r\n                    <li> {\" if (props.rotateAni) { \"}\r\n                      <li> {\" return css` \"}\r\n                        <li> {\"animation: ${rotation} ${props.duration}s linear infinite; \"} </li>\r\n                      </li>\r\n                      <li> {\" `; \"} </li>\r\n                    </li>\r\n                    <li> {\" } \"} </li>\r\n                  </li>\r\n                  <li> {\"  }} \"} </li>\r\n                  <li>  </li> <br />\r\n                  <li> {\"  <Button color='red' rotateAni duration={2}> \"}\r\n                    <li> {\" 버튼2 \"} </li>\r\n                  </li>\r\n                  <li> {\"  </Button> \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Router Dom의 Link태그에 스타일 주기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> const LinkStyle = styled(Link)` </li>\r\n              <li> 스타일 작성 </li>\r\n              <li> `; </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components 태그에 커스텀 속성 주기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> const 컴포넌므여 = styled.태그명.속성명({\"{\"}\r\n                    <li> 속성: 값, </li>\r\n                    {\"})\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components 중첩 적용 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> const 부모컴포넌트명 = styled.태그명`\r\n                    <li> css스타일 </li>\r\n                    <li> {\"${자식컴포넌트명} {\"}\r\n                      <li> css스타일 </li>\r\n                    </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li> ` </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components Mixin </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> const 컴포넌트명 = (param1,param2=\"디폴트값\") {\" => css` \"}\r\n                    <li> css스타일 작성 </li>\r\n                    <li> width: {\" ${param1 * 2}px; \"} </li>\r\n                  </li>\r\n                  <li> `; </li>\r\n                  <li>  </li> <br />\r\n                  <li> 다른 컴포넌트 css스타일에서 {\" ${컴포넌트(param1,param2)}; \"} 와 같이 사용 </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components ThemeProvider(정리완료) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 정해진 스타일 규격을 만들 수 있다. </li>\r\n            <li> Context API와 같이 동작 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈theme.js 커스텀 컴포넌트  </h3>\r\n                <div className='block4'>\r\n                  <li> {\" const calcRem = (size) => `${size / 16}rem` \"} </li>\r\n                  <li> const fontSizes = {\"{\"}\r\n                    <li> small: calcRem(14); </li>\r\n                    <li> base: calcRem(16); </li>\r\n                  </li>\r\n                  <li> {\"};\"} </li>\r\n                  <li> const theme {\"{\"}\r\n                    <li> fontSizes, </li>\r\n                    <li> 위와 같이 추가로 생성해서 만들면된다. </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                  <li> export default theme; </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 app.js 같은 최상단 렌더링 구역 </h3>\r\n                <div className='block4'>\r\n                  <li> {\"<ThemeProvider theme={theme컴포넌트}>\"}\r\n                    <li> 최상단 렌더링 </li>\r\n                  </li>\r\n                  <li> {\"</ThemeProvider>\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components createGlobalStyle(정리완료) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 전역적인 스타일을 설정해놓는 컴포넌트 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 GlobalStyle.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import { createGlobalStyle } from 'styled-components'; \"} </li>\r\n                  <li> const GlobalStyle = createGlobalStyle`\r\n                    <li> css코드 작성 </li>\r\n                  </li>\r\n                  <li> `; </li>\r\n                  <li> export default GlobalStyle; </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 app.js </h3>\r\n                <div className='block4'>\r\n                  <li> {\"<>\"} </li>\r\n                  <li> {\" <GlobalStyle/> \"} </li>\r\n                  <li> 코드작성 </li>\r\n                  <li> {\"</>\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> styled-components theme(나중에 찾아보기) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactStyledComponent;","import React from 'react';\r\n\r\nconst ReactFetchAPI = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> fetch api 사용방법 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <div className=\"block4\">\r\n                            <li> useEffect(() {'=> {'}\r\n                                <li> fetch(\"http://127.0.0.1:8080/hello\") </li>\r\n                                <li> .then(response {'=> {'}\r\n                                    <li> if (!response.ok) {\"{\"}\r\n                                        <li> throw Error(\"비어있어\"); </li>\r\n                                    </li>\r\n                                    <li> {\"}\"} </li>\r\n                                    <li> return response.json(); </li>\r\n                                </li>\r\n                                <li> {\"}\"}) </li>\r\n                                <li> .then(message {'=> {'}\r\n                                    <li> setMessage(message); </li>\r\n                                </li>\r\n                                <li> {'}'}) </li>\r\n                                <li> .catch(err {\"=> {\"}\r\n                                    <li> setMessage(\"비어있어\"); </li>\r\n                                </li>\r\n                                <li> {\"}\"}) </li>\r\n                            </li>\r\n                            <li> {\"}\"}, []) </li>\r\n                        </div>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactFetchAPI;","import React from 'react';\r\n\r\nconst ReactAxios = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> React Axios 란? </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <li> npm i axios </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Promise API를 사용하는 비동기 통신 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios Create </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> axios 인스턴스 를 만드는 방법이다 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 Axios Crate 선언 </h3>\r\n                <div className='block4'>\r\n                  <li> import axios from \"axios\" </li>\r\n                  <li>  </li> <br />\r\n                  <li> const API = axios.create({\"{\"}\r\n                    <li> baseURL: \"http://localhost:8080\", </li>\r\n                    <li> headers: {\"{\"}\r\n                      <li> \"Content-Type\": \"application/json\", </li>\r\n                    </li>\r\n                    <li> {\"},\"} </li>\r\n                    <li> withCredentials: true, </li>\r\n                  </li>\r\n                  <li> {\"});\"} </li>\r\n                  <li> export default API; </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 Axios Crate 사용 </h3>\r\n                <div className='block4'>\r\n                  <li> import API from \"경로\" </li>\r\n                  <li>  </li> <br />\r\n                  <li> const login = async(code) {\"=> {\"}\r\n                    <li> const {\"{data}\"} = await API.post(\r\n                      <li> \"/경로\", </li>\r\n                      <li> JSON.stringify(code) </li>\r\n                    </li>\r\n                    <li> ); </li>\r\n                    <li> return data; </li>\r\n                  </li>\r\n                  <li> {\"};\"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios Get </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 🎈 설명 </h2>\r\n            <li> 1번 방법 :axios.get(url,[,config]) </li>\r\n            <li> 2번 방법\r\n              <div className=\"block4\">\r\n                <li> {\" axios({ \"}\r\n                  <li> {\"   method:'get', \"} </li>\r\n                  <li> {\"   url:'', \"} </li>\r\n                  <li> {\"   responseType:'stream' \"} </li>\r\n                </li>\r\n                <li> {\" }) \"} </li>\r\n              </div>\r\n            </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 예시1 </h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li></li> <br />\r\n                  <li> axios.get(\"url경로\"); </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 예시2 </h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li></li> <br />\r\n                  <li> {' axios.get(\"url경로\").then((response)=>{ '}\r\n                    <li> console.log(response.data); </li>\r\n                  </li>\r\n                  <li> {' }).catch((Error)=>{ '}\r\n                    <li> console.log(Error); </li>\r\n                  </li>\r\n                  <li> {' }) '} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 예시3 </h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li></li> <br />\r\n                  <li> {\" const response = await axios.get('/v1/search/local.json'\"}\r\n                    <li> {\" , { \"}\r\n                      <li> {\" params 혹은 data: { \"}\r\n                        <li> query: word, </li>\r\n                        <li> display: 1 </li>\r\n                      </li>\r\n                      <li> {\" }, \"} </li>\r\n                      <li> {\" headers: { \"}\r\n                        <li> {\" 'X-Naver-Client-Id': 사용자ID, \"} </li>\r\n                        <li> {\" 'X-Naver-Client-Secret': 사용자비번 \"} </li>\r\n                      </li>\r\n                      <li> {\" } \"} </li>\r\n                    </li>\r\n                  </li>\r\n                  <li> {\" }); \"} </li>\r\n                  <li> {\" const res = { response }; \"} </li>\r\n                  <li> {\" console.log(res); \"} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 예시4 - 스프링 RestController에 보내는 예제(테스트확인) </h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li></li> <br />\r\n                  <li> {\" const testAxios2 = async () => { \"}\r\n                    <li> {\" await axios( \"}\r\n                      <li> {\" { \"}\r\n                        <li> {\" url: '/api/get2', \"} </li>\r\n                        <li> {\" method: 'GET', \"} </li>\r\n                        <li> {\" data: { \"}\r\n                          <li> {\" id: 1, name: 'aaa222' \"} </li>\r\n                        </li>\r\n                        <li> {\" }, \"} </li>\r\n                        <li> {\" baseURL: 'http://localhost:8080', \"} </li>\r\n                        <li> {\" withCredentials: true, \"} </li>\r\n                      </li>\r\n                      <li> {\" } \"} </li>\r\n                    </li>\r\n                    <li> {\" ).then(function (response) { \"}\r\n                      <li> {\" console.log('응답 왔음'); \"} </li>\r\n                    </li>\r\n                    <li> {\" }).catch(function (error) { \"}\r\n                      <li> {\" console.log(error); \"} </li>\r\n                    </li>\r\n                    <li> {\" }); \"} </li>\r\n                  </li>\r\n                  <li> {\" } \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios Post </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 🎈 설명 </h2>\r\n            <li> 1번 방법 </li>\r\n            <div className=\"block4\">\r\n              <li> {' axios.post(\"url주소\",{ '}\r\n                <li> {' data객체 '} </li>\r\n              </li>\r\n              <li> {' },[,config]) '} </li>\r\n            </div>\r\n            <li> 2번 방법 </li>\r\n            <div className=\"block4\">\r\n              <li> {\" axios({ \"}\r\n                <li> {\"   method:'post', \"} </li>\r\n                <li> key: \"값\", </li>\r\n              </li>\r\n              <li> {\" }); \"} </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 예시1</h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li> </li> <br />\r\n                  <li> axios.post(\"url경로\",{'{'})\r\n                    <li> key: \"값\", </li>\r\n                  </li>\r\n                  <li> {'});'} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 예시2 </h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li> </li> <br />\r\n                  <li> {' axios.post(\"url경로\").then((response)=>{ '}\r\n                    <li> console.log(response.data); </li>\r\n                  </li>\r\n                  <li> {' }).catch((Error)=>{ '}\r\n                    <li> console.log(Error); </li>\r\n                  </li>\r\n                  <li> {' }) '} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 예시3 - form 데이터 전송(Content-Type: multipart/form-data) </h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li> </li> <br />\r\n                  <li>{\" const testAxios4 = async () => { \"}\r\n                    <li>{\" const frm = new FormData(); \"}  </li>\r\n                    <li>{\" frm.append('data', '123'); \"}  </li>\r\n                    <li>{\" frm.append( \"}\r\n                      <li>{\" 'data1', ['123', '456', '789'] \"}  </li>\r\n                    </li>\r\n                    <li> frm.append('id', 1);  </li>\r\n                    <li> frm.append('name', \"name\");  </li>\r\n                    <li>{\" ); \"}  </li>\r\n                    <li>{\" await axios.post(`http://localhost:8080/api/post2`, frm) \"}\r\n                      <li>{\" .then(response => { \"}\r\n                        <li>{\" console.log('data', JSON.stringify(response, null, 2)); \"}  </li>\r\n                      </li>\r\n                      <li>{\" }).catch(error => { \"}\r\n                        <li>{\" console.log(error); \"}  </li>\r\n                      </li>\r\n                      <li>{\" }); \"}  </li>\r\n                    </li>\r\n                  </li>\r\n                  <li>{\" } \"}  </li>\r\n                  <li>  </li> <br />\r\n                  <li> 스프링에선 매개변수로(String data1)으로 했을 때 데이터 받아짐 </li>\r\n                  <li> 스프링에서 매개변수로(User user)이고 user.id,user.name일 때 id,name으로 보내면 받아짐 </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 예시4 - Content-Type: application/json(검증완료) </h3>\r\n                <div className='block4'>\r\n                  <li> {\" axios({ \"}\r\n                    <li> {\" url: '/auth/signup', \"} </li>\r\n                    <li> {\" method: 'POST', \"} </li>\r\n                    <li> {\" data: { \"}\r\n                      <li> {\" nickname: '12345678', \"} </li>\r\n                      <li> {\" email: 'example@test.com', \"} </li>\r\n                      <li> {\" password: '12345678' \"} </li>\r\n                      <li> {\" } \"} </li>\r\n                    </li>\r\n                    <li> {\" }) \"} </li>\r\n                  </li>\r\n                  <li> {\" .then(response => { \"}\r\n                    <li> {\" console.log(response.data); \"} </li>\r\n                  </li>\r\n                  <li> {\" }).catch(error => { \"}\r\n                    <li> {\" console.log(error); \"} </li>\r\n                  </li>\r\n                  <li> {\" }); \"} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 예시5- Content-Type: application/json(검증완료)  </h3>\r\n                <div className='block4'>\r\n                  <li> const initValues = </li>\r\n                  <li> [\r\n                    <li> {\"{\"}\r\n                      <li> accessToken: \"\", </li>\r\n                      <li> refreshToken: \"\", </li>\r\n                      <li> msg: \"123\", </li>\r\n                      <li> statusCode: \"\", </li>\r\n                      <li> successFlag: false </li>\r\n                    </li>\r\n                    <li> {\"}\"}, </li>\r\n                  </li>\r\n                  <li> ] </li>\r\n                  <li> {\" const [userData, setUserData] = useState(initValues); \"} </li>\r\n                  <li> {\" const navigate = useNavigate(); \"} </li>\r\n                  <li> {\" const handleSubmit = () => { \"}\r\n                    <li> {\" axios({ \"}\r\n                      <li> {\" url: 'http://localhost:8080/auth/signin', \"} </li>\r\n                      <li> {\" method: 'POST', \"} </li>\r\n                      <li> {\" data: { \"}\r\n                        <li> {\" email: 'example@test.com', \"} </li>\r\n                        <li> {\" password: '12345678' \"} </li>\r\n                      </li>\r\n                      <li> {\" } \"} </li>\r\n                    </li>\r\n                    <li> {\" }) \"} </li>\r\n                    <li> {\" .then(response => { \"}\r\n                      <li> {\" console.log(response); \"} </li>\r\n                      <li> {\" const { accessToken, refreshToken } = response.data; \"} </li>\r\n                      <li> {\" localStorage.setItem('accessToken', accessToken); \"} </li>\r\n                      <li> {\" localStorage.setItem('refreshToken', refreshToken); \"} </li>\r\n                      <li> {\" window.confirm('성공이다'); \"} </li>\r\n                      <li> {\" navigate('/login1'); \"} </li>\r\n                    </li>\r\n                    <li> {\" }).catch(error => { \"}\r\n                      <li> {\" console.log(error); \"} </li>\r\n                    </li>\r\n                    <li> {\" }); \"} </li>\r\n                  </li>\r\n                  <li> {\" } \"} </li>\r\n                  <li>  </li> <br />\r\n                  <li> {\" {[userData].map(test => { \"}\r\n                    <li> {\" return (<div key='accessToken'> {test.msg} </div>); \"} </li>\r\n                  </li>\r\n                  <li> {\" })} \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios Delete </summary>\r\n          <div className='block2'>\r\n            <h2 className=\"h2\"> 🎈 설명 </h2>\r\n            <li> axios.delete(URL,[,config]); </li>\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈</h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li></li> <br />\r\n                  <li> {' axios.delete(\"url경로\").then((response)=>{ '}\r\n                    <li> console.log(response.data); </li>\r\n                  </li>\r\n                  <li> {' }).catch((Error)=>{ '}\r\n                    <li> console.log(Error); </li>\r\n                  </li>\r\n                  <li> {' }) '} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios Put </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> axios.put(url[, data[, config]]) </li>\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios Header </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 받는곳에서는 헤더의 키값(Authorization)을 이용하여 받으면된다. </li>\r\n            <li> 1번 방법 </li>\r\n            <div className=\"block4\">\r\n              <li> axios.head(url[, config]) </li>\r\n            </div>\r\n            <li> 2번 방법 </li>\r\n            <div className=\"block4\">\r\n              <li> {\" headers: { \"}\r\n                <li> {\" Authorization: `${accessToken}` \"} </li>\r\n              </li>\r\n              <li> {\" } \"} </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" const accessToken = localStorage.getItem('accessToken'); \"} </li>\r\n                  <li> {\" axios({ \"}\r\n                    <li> {\" url: 'http://localhost:8080/auth/signin', \"} </li>\r\n                    <li> {\" method: 'POST', \"} </li>\r\n                    <li> {\" data: { \"}\r\n                      <li> {\" email: 'example@test.com', \"} </li>\r\n                      <li> {\" password: '12345678'; \"} </li>\r\n                    </li>\r\n                    <li> {\" }, \"} </li>\r\n                    <li> {\" headers: { \"}\r\n                      <li> {\" Authorization: `${accessToken}` \"} </li>\r\n                    </li>\r\n                    <li> {\" } \"} </li>\r\n                  </li>\r\n                  <li> {\" }) \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios Config </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> axios.defaults.baseURL = 'https://www.example.com'; </li>\r\n              <li> axios.defaults.headers.common['Authorization'] = 토큰; <small> 기본으로 설정 </small> </li>\r\n              <li> axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'; <small> post의 컨텐트 타입을 설정 </small> </li>\r\n              <li> 커스텀axios객체.defaults.headers.common['Authorization'] = AUTH_TOKEN; </li>\r\n              <li> 커스텀axios객체.defaults.timeout = ms단위; <small> 처리하는데 시간이 ms만큼 걸리면 아웃 </small> </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios 서버 응답 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> data: 서버에서 보내준 데이터 </li>\r\n            <li> status: 서버에서 보내준 HTTP 상태 코드 </li>\r\n            <li> statusText: 서버에서 보내준 HTTP 상태 메시지 </li>\r\n            <li> headers : 서버에서 보내준 헤더 </li>\r\n            <li> config : axios가 요청했을때 설정값을 보내준다? </li>\r\n            <li> request: ? </li>\r\n            <li> params: 키:값 <small> URL 매개변수 </small> </li>\r\n            <li> withCredentials: false <small> cross-site Access-Control </small> </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios 동시에 작업(필요할때 알아보기) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> axios.all(iterable) </li>\r\n            <li> axios.spread(callback) </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios에서 토큰 값 처리하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> npm i jsonwebtoken </li>\r\n              <li> npm install jwt-simple <small> 아직 잘 모름으로 설치x </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 axios response </h3>\r\n                <div className='block4'>\r\n                  <li> console.log(jwt.decode(res.data.accessToken)); </li>\r\n                  <li> const jwtExp = jwt.decode(res.data.accessToken).exp; </li>\r\n                  <li> console.log(Unix_timestamp(jwtExp)); </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 function Unix_timestamp </h3>\r\n                <div className='block4'>\r\n                  <li> {' function Unix_timestamp(t) { '}\r\n                    <li> {'   var date = new Date(t * 1000); '} </li>\r\n                    <li> {'   var year = date.getFullYear(); '} </li>\r\n                    <li> {'   var month = \"0\" + (date.getMonth() + 1); '} </li>\r\n                    <li> {'   var day = \"0\" + date.getDate(); '} </li>\r\n                    <li> {'   var hour = \"0\" + date.getHours(); '} </li>\r\n                    <li> {'   var minute = \"0\" + date.getMinutes(); '} </li>\r\n                    <li> {'   var second = \"0\" + date.getSeconds(); '} </li>\r\n                    <li> {'   return year + \"-\" + month.substr(-2) + \"-\" + day.substr(-2) + \" \" + hour.substr(-2) + \":\" + minute.substr(-2) + \":\" + second.substr(-2); '} </li>\r\n                  </li>\r\n                  <li> {' } '} </li>\r\n                </div>\r\n                <h3 className='h3'> 🎈 아래도 방법 </h3>\r\n                <div className='block4'>\r\n                  <li> console.log(JSON.parse(window.atob(res.data.accessToken.split(\".\")[1])).exp); </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Axios Interceptor </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> import axios from 'axios'; </li>\r\n                  <li> {' const AxiosInstance = axios.create({ '}\r\n                    <li> {'   baseURL: \"http://localhost:8080\", '} </li>\r\n                    <li> {'   //timeout: 1000, '} </li>\r\n                    <li> {'   headers: { '}\r\n                      <li> {'     \"Content-Type\": \"application/json\", '} </li>\r\n                      <li> {'     \"Access-Control-Allow-Origin\": \"*\" '} </li>\r\n                    </li>\r\n                    <li> {'   }, '} </li>\r\n                    <li> {'   //withCredentials: true, '} </li>\r\n                  </li>\r\n                  <li> {' }); '} </li>\r\n                  <li>  </li> <br />\r\n                  <li> {\" // 요청 인터셉터 추가 \"} </li>\r\n                  <li> {\" AxiosInstance.interceptors.request.use( \"}\r\n                    <li> {\"   function (config) { \"}\r\n                      <li> {\"     // 요청을 보내기 전에 수행할 일 \"} </li>\r\n                      <li> {\"     // ... \"} </li>\r\n                      <li> {\"     return config; \"} </li>\r\n                    </li>\r\n                    <li> {\"   }, \"} </li>\r\n                    <li> {\"   function (error) { \"}\r\n                      <li> {\"     // 오류 요청을 보내기전 수행할 일 \"} </li>\r\n                      <li> {\"     // ... \"} </li>\r\n                      <li> {\"     return Promise.reject(error); \"} </li>\r\n                    </li>\r\n                  </li>\r\n                  <li> {\"   }); \"} </li>\r\n                  <li>  </li> <br />\r\n                  <li> {\" // 응답 인터셉터 추가 \"} </li>\r\n                  <li> {\" AxiosInstance.interceptors.response.use( \"}\r\n                    <li> {\"   function (response) { \"}\r\n                      <li> {\"     // 응답 데이터를 가공 \"} </li>\r\n                      <li> {\"     // ... \"} </li>\r\n                      <li> {\"     return response; \"} </li>\r\n                    </li>\r\n                    <li> {\"   }, \"} </li>\r\n                    <li> {\"   function (error) { \"}\r\n                      <li> {\"     // 오류 응답을 처리 \"} </li>\r\n                      <li> {\"     // ... \"} </li>\r\n                      <li> {\"     return Promise.reject(error); \"} </li>\r\n                    </li>\r\n                  </li>\r\n                  <li> {\"   }); \"} </li>\r\n                  <li> // 인터셉터 제거하는 방법 </li>\r\n                  <li> AxiosInstance.interceptors.request.eject(myInterceptor); </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactAxios;","import React from 'react';\r\n\r\nconst ReactAjax = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 제목 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1 </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                        <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                        <li> 장점 : </li>\r\n                        <li> 단점 : </li>\r\n\r\n                        <h2 className='h2'> ✔ 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className='h3'> 🎈 </h3>\r\n                                <div className='block4'>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactAjax;","import React from 'react';\r\n\r\nconst ReactBabel = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] 바벨 디렉토리 구조 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> build </li>\r\n              <li> src </li>\r\n              <li> .babelrc <small> babel 설정 파일 </small> </li>\r\n              <li> .package.json <small> package 관리 파일 </small> </li>\r\n              <li> .tsconfig.json <small> typescript 설정 파일 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <div className='block4'>\r\n              <li> 장점 : </li>\r\n              <li> 단점 : </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactBabel;","import React from 'react';\r\n\r\nconst FrontendBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 보안 관련 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 노드에 값을 추가하는 방법 3가지 - innerHTML, DOM, insertAdjacentHTML </h2>\r\n                            <li> innerHTML : XSS 보안공격에 취약 </li>\r\n                            <li> DOM :  </li>\r\n                            <li> insertAdjacentHTML : XSS 보안공격에 취약 </li>\r\n\r\n                            <h2 className='h2'> 📌  </h2>\r\n                            <li>  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> JS 관련 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 이벤트 버블링과 이벤트 캡처 </h2>\r\n                            <li> 이벤트 버블링 : 특정 요소에서 이벤트가 발생하였을 때 상위 요소들로 이벤트를 전달하는 방법 </li>\r\n                            <li> 버블링 사용 이유 1 : 버블링은 DOM으로 추가할 때 추가한 요소에도 이벤트를 주기 위해 사용 </li>\r\n                            <div className=\"block3\">\r\n                                <div className=\"block4\">\r\n                                    <h4 className=\"h4\"> 기존에 버튼 요소 2개가 있고, 버튼 요소를 추가로 1개를 넣었을 때 이벤트가 작동되지 않는 예시 </h4>\r\n                                    <li> {' <body> '}\r\n                                        <li> {' <div id=\"btn_container\"> '}\r\n                                            <li> {' <button> 버튼1 </button> '} </li>\r\n                                            <li> {' <button> 버튼2 </button> '} </li>\r\n                                        </li>\r\n                                        <li> {' </div> '} </li>\r\n                                    </li>\r\n                                    <li> {' </body> '} </li>\r\n                                    <li> {'  '} </li>\r\n                                    <li> {' <script> '}\r\n                                        <li> {' var buttons = document.querySelectorAll(\"button\"); '} </li>\r\n                                        <li> {' buttons.forEach((x) => { '}\r\n                                            <li> {' x.addEventListener(\"click\", () => { '}\r\n                                                <li> {' alert(x.innerText); '} </li>\r\n                                            </li>\r\n                                            <li> {' }); '} </li>\r\n                                        </li>\r\n                                        <li> {' }); '} </li>\r\n                                        <li> {'  '} </li>\r\n                                        <li> {' var btn_container = document.getElementById(\"btn_container\"); '} </li>\r\n                                        <li> {' var doc = document.createElement(\"button\"); '} </li>\r\n                                        <li> {' doc.appendChild(document.createTextNode(\"버튼3\")); '} </li>\r\n                                        <li> {' btn_container.appendChild(doc); '} </li>\r\n                                    </li>\r\n                                    <li> {' </script> '} </li>\r\n                                </div>\r\n                                <div className=\"block4\">\r\n                                    <h4 className=\"h4\"> 위의 예시 때문에 버블링을 사용하는 이유 </h4>\r\n                                    <li> {' <body> '}\r\n                                        <li> {' <div id=\"btn_container\"> '}\r\n                                            <li> {' <button value=\"버튼1\"> 버튼1 </button> '} </li>\r\n                                            <li> {' <button value=\"버튼2\"> 버튼2 </button> '} </li>\r\n                                        </li>\r\n                                        <li> {' </div> '} </li>\r\n                                    </li>\r\n                                    <li> {' </body> '} </li>\r\n                                    <li> {'  '} </li>\r\n                                    <li> {' <script> '}\r\n                                        <li> {' var btn_container = document.getElementById(\"btn_container\"); '} </li>\r\n                                        <li> {' btn_container.addEventListener(\"click\", (e) => { '}\r\n                                            <li> {' alert(e.target.value); '} </li>\r\n                                        </li>\r\n                                        <li> {' }); '} </li>\r\n                                        <li> {'  '} </li>\r\n                                        <li> {' var doc = document.createElement(\"button\"); '} </li>\r\n                                        <li> {' doc.appendChild(document.createTextNode(\"버튼3\")); '} </li>\r\n                                        <li> {' doc.setAttribute(\"value\", \"버튼3\"); '} </li>\r\n                                        <li> {' btn_container.appendChild(doc); '} </li>\r\n                                    </li>\r\n                                    <li> {' </script> '} </li>\r\n                                </div>\r\n                            </div>\r\n                            <li> 이벤트 캡처 : 이벤트 버블링과 반대로 하위 요소로 이동하면서 이벤트가 전달되는 방법 </li>\r\n\r\n                            <h2 className='h2'> 📌  </h2>\r\n                            <li>  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> Cors </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 Cors의 종류 </h2>\r\n                            <li> Simple Request </li>\r\n                            <li> Preflight Request </li>\r\n                            <li> Credential Request </li>\r\n                            <li> Non-Credential Request </li>\r\n\r\n                            <h2 className='h2'> 📌 1. Simple Request </h2>\r\n                            <li> GET,HEAD,POST 중 하나 </li>\r\n                            <li> POST일 때는 application/x-www-form-urlencoded, multipart\r\n                                /form-data, text/plain 중 하나 </li>\r\n                            <li> 커스텀 헤더 전송x </li>\r\n\r\n                            <h2 className='h2'> 📌 2. Preflight Request </h2>\r\n                            <li> 예비로 먼저 보내보고 그다음 통신하는 방법 </li>\r\n                            <li> Simple Request의 조건 외에서 가능 </li>\r\n\r\n                            <h2 className='h2'> 📌 3. Credential Request </h2>\r\n                            <li> HTTP Cookie와 HTTP Authentication을 알 수 있음 </li>\r\n                            <li> @.withCredentials = true <small> # 이와 같이 요청전에 지정 필요 </small> </li>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> 📌 4. Non-Credential Request </h2>\r\n                            <li> @.withCredentials = false , 원래 디폴트 값 </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n\r\n                <div className=\"lblock\">\r\n                    {/*  */}\r\n                    <div className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 검색 엔진 최적화(SEO) <a name=\"검색 엔진 최적화(SEO)\" style={{ visibility: \"hidden\" }}> 검색 엔진 최적화(SEO) </a> </summary>\r\n                            <div className=\"sblock\">\r\n                                {/* \r\n                                테크니컬 SEO , 콘텐츠 SEO , 자체 평가 알고리즘, 크롤링 , 인덱싱\r\n                            */}\r\n                                <div className=\"sstitle\"> 키워드 관리 </div>\r\n                                <div className=\"mblock\">\r\n                                    <li> 특정 키워드의 위치나 갯수가 SEO 평가 알고리즘에서 중요한 부분 </li>\r\n                                    <li> 검색이 잘 되지만 경쟁사와 겹치지 않는 키워드 그리고 롱테일(3개의 이상 단어 조합)을 사용하여\r\n                                        노출 효과를 올린다. </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                {/*  */}\r\n                                <div className=\"sstitle\"> title </div>\r\n                                <div className=\"mblock\">\r\n                                    <li> 검색엔진의 제목 부분에 표시 될 수 있는 정보 </li>\r\n                                    <li> 다른 경쟁사와 독창적이며 명확한 키워드가 필요 </li>\r\n                                    <li> 사이트 내부 페이지 마다 구별 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                {/*  */}\r\n                                <div className=\"sstitle\"> URL </div>\r\n                                <div className=\"mblock\">\r\n                                    <li> 컨텐츠와 연관된 단어가 들어가는 것이 좋고, 매개변수가 들어가 있는 것은 좋지 않음 </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                {/*  */}\r\n                                <div className=\"sstitle\"> canonical 태그 </div>\r\n                                <div className=\"mblock\">\r\n                                    <li> rel=\"canonical\" 를 html 링크태그에 추가해서 사용 , head태그 내부에 위치 </li>\r\n                                    <li> 검색엔진 크롤러에게 대표 URL이 무엇인지 명시하는 역할 </li>\r\n                                    <li> 중복되는 콘텐츠 페이지가 있어서 패널티를 받아야 하지만 캐노니컬을 사용하여 방지를 할 수 있다. </li>\r\n                                    <li> 웹, 모바일을 구분하여 도메인을 나눠놓을경우 점수가 분산이 되고 패널티도 받을 수 있는 것을 방지 </li>\r\n                                    <li> + ref=\"nofollow\" 페이지의 인지도를 링크된 페이지로 전달하지 말라는 속성 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                {/*  */}\r\n                                <div className=\"sstitle\">  </div>\r\n                                <div className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </div>\r\n                                {/*  */}\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ robot.txt <a name=\"robot.txt\" style={{ visibility: \"hidden\" }}> robot.txt </a> </summary>\r\n                            <div className=\"sblock\">\r\n                                <div className=\"sstitle\"> 사이트 위치 안내, 크롤러가 웹페이지의 정보를 수집하는 것을 차단 </div>\r\n                                <div className=\"mblock\">\r\n                                    <li> 정보 수집을 차단하는 이유는 검색 엔진의 평가에 부정적인 영향을 끼칠 수 가 있음\r\n                                        중복된 컨텐츠를 크롤러가 부정적으로 판단하여 SEO에서의 평가가 낮아짐\r\n                                    </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 브라우저의 랜더링 과정 <a name=\"브라우저의 랜더링 과정\" style={{ visibility: \"hidden\" }}> 브라우저의 랜더링 과정 </a> </summary>\r\n                            <div className=\"sblock\">\r\n                                <div className=\"sstitle\"> 렌더링 : 브라우저의 화면에 표시해주는 역할 </div>\r\n                                <div className=\"mblock\">\r\n                                    <ol>\r\n                                        <li> 브라우저가 렌더링할 문서(html,css)를 나누어서 읽음  </li>\r\n                                        <li> 브라우저가 문서를 파싱(분석하고 변환)을 함  </li>\r\n                                        <li> html은 DOM tree 구조로 변환하고 css는 CSSOM tree 구조로 변환 </li>\r\n                                        <li> 렌더 트리 구축 : 생성된 DOM tree와 CSSOM tree를 Attachment 과정을 통해 Render tree(텍스트와 스타일로 구성된트리)로 만든다. </li>\r\n                                        <small> display:none 속성은 Render tree에 포함되지 않는다. </small>\r\n                                        <li> 렌더 트리 배치(Layout,Reflow) : 각 노드들의 위치와 크기를 계산하고 px단위로 변환 </li>\r\n                                        <li> 렌더 트리 그리기(Paint) : 브라우저 실제 화면에 그림 </li>\r\n                                        <small> 복잡한 스타일(그라데이션, 그림자효과)은 시간이 오래 걸림 </small>\r\n                                        <li> 렌더링 최적화 : 특정 액션이나 이벤트에 따라 요소 값이 변하면 영향을 받는 모든 노드들은\r\n                                            렌더 트리 배치 과정(Reflow)을 다시 수행하고 다시 화면에 그려준다.(Repaint) </li>\r\n                                        <div className=\"sblock\">\r\n                                            <ul>\r\n                                                <div className=\"sstitle\"> 렌더링 일어나는 경우 </div>\r\n                                                <li> 페이지 초기 렌더링 시 </li>\r\n                                                <li> 브라우저 뷰포트 변경될 때 </li>\r\n                                                <li> 노드가 추가되거나 제거 될 때 </li>\r\n                                                <li> 요소의 위치나 크기가 변경 될 때 </li>\r\n                                                <li> 폰트 변경이나 이미지 크기가 변경 될 때 </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"sblock\">\r\n                                            <ul>\r\n                                                <div className=\"sstitle\"> 렌더링을 최소화 하는 방법</div>\r\n                                                <small> Reflow가 발생하면 Repaint 무조건 발생 </small>\r\n                                                <li> Reflow 속성 </li>\r\n                                                <div className=\"mblock\">\r\n                                                    <li> position, width, height, left, top, right, bottom, margin, padding, border,\r\n                                                        border-width, clear, display, float, font-family, font-size, font-weight,\r\n                                                        line-height, min-height, overflow, text-align, vertical-align, white-space... </li>\r\n                                                </div>\r\n                                                <li> Repaint 속성 </li>\r\n                                                <div className=\"mblock\">\r\n                                                    <li> background, background-image, background-position, background-repeat,\r\n                                                        background-size, border-radius, border-style, box-shadow, color, line-style,\r\n                                                        outline, outline-color, outline-style, outline-width, text-decoration,\r\n                                                        visibilty... </li>\r\n                                                </div>\r\n                                                <li> 레이아웃의 변화가 많은 요소는 absolute, fixed를 사용하여 주변 노드들의 영향을 최소화하여\r\n                                                    렌더링을 비교적 덜 발생하게 만든다. </li>\r\n                                                <li> 애니메이션에서 이동 거리를 작게 여러번 움직이면 부드럽지만 성능이 안좋아지고\r\n                                                    이동 거리를 크게 몇번에 움직이면 덜 부드럽지만 성능이 개선된다.  </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n                    <div className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ HTML, CSS 좋은 습관 <a name=\"HTML, CSS 좋은 습관\" style={{ visibility: \"hidden\" }}> HTML, CSS 좋은 습관 </a> </summary>\r\n                            <div className=\"sblock\">\r\n                                <div className=\"sstitle\"> CSS를 잘 사용하는 방법 </div>\r\n                                <div className=\"mblock\">\r\n                                    <ol>\r\n                                        <li> * 와일드 카드안에 margin, box-sizing 정도만 사용한다. (왠만하면 사용x)  </li>\r\n                                        <li> 각 스타일 마다 기본 속성을 파괴하지 않는다.  </li>\r\n                                        <small> h1태그의 글자크기 변경x, div태그의 속성을 block으로 변경x </small>\r\n                                        <li> 시멘틱 태그를 사용하기 </li>\r\n                                        <small> - 개발자가 유지보수하기 좋고, 가독성이 올라간다.  </small> <br />\r\n                                        <small> - SEO가 판단하기 좋다 </small> <br />\r\n                                        <small> - 스크린 리더 활용에 좋다고 한다. </small> <br />\r\n                                        <li> h1,h2 태그를 잘 작성하는 것은 SEO의 판단에 좋은 영향을 준다. </li>\r\n                                        <li> 사람들이 많이 사용하는 css라이브러리, 애니메이션 라이브러리를 사용해서 통일성을 줄것 </li>\r\n                                        <small> 슬라이더, 아코디언, 체크박스, 인풋, 네비게이션 바 </small>\r\n                                        <li> img 태그에 width를 변경하는 것이 아니라 figure 태그 등으로 감싸고 그 사이즈에 맞게 디자인 하기 </li>\r\n                                        <small> img태그를 사용하는 것 보다 div태그에 background-image를 사용해주는 것을 추천  </small>\r\n                                        <li> !important 사용 자제하기, 나중되면 !important 끼리 충돌하게 되면... 전체적으로 수정을 해야 할 수도 있다. </li>\r\n                                        <li> before, after 사용하기 </li>\r\n                                        <li> flex , grid 사용하기 </li>\r\n                                        <li> 인터렉션 효과 사용하기 </li>\r\n                                        <li> 전처리도구(SASS, SCSS, Less , Stylus) 사용하기  </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </ol>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n                    {/*  */}\r\n\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> GET, POST\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> get </div>\r\n                                <div className='mblock'>\r\n                                    <li> 1. URL주소 뒤에 ?Name=Value 와 같이 변수명=값으로 사용한다. (쿼리스트링) </li>\r\n                                    <li> 2. get요청은 캐시를 사용할 수 있다. </li>\r\n                                    <li> 3. get은 브라우저 히스토리에 남는다. </li>\r\n                                    <li> 4. get의 쿼리스트링은 길이의 제한이 있다. </li>\r\n                                    <li> 5. get에는 사용자의 정보와 관련된 내용을 보내면 안된다. 그래서 게시판,웹툰등의 페이지 위치를 보낸다. </li>\r\n                                    <li> 6.  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> post </div>\r\n                                <div className='mblock'>\r\n                                    <li> 1. 클라이언트가 서버에 요청을 보내 데이터를 저장하거나 업데이트 할 때 사용 </li>\r\n                                    <li> 2. 로그인이나 회원가입등 외부의 사람들은 보이지 않게하면서 중요한 정보들을 보낼 때 사용 </li>\r\n                                    <li> 3. http body의 부분에 내용을 담아서 보낸다.( body의 타입은 content-type의 의해서 결정) </li>\r\n                                    <li> 4. 용량이 큰 데이터를 보낼경우 get방식이 아닌 post방식을 사용한다. </li>\r\n                                    <li> 5. post는 캐시를 사용할수 없고 브라우저 히스토리에도 남지 않는다. </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FrontendBasic;","import React from 'react';\r\n\r\nconst FrontBrowserDevTool = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Elements 항목 <a name=\"Elements 항목\" style={{ visibility: \"hidden\" }}> Elements 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Console 항목 <a name=\"Console 항목\" style={{ visibility: \"hidden\" }}> Console 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Sources 항목 <a name=\"Sources 항목\" style={{ visibility: \"hidden\" }}> Sources 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Network 항목 <a name=\"Network 항목\" style={{ visibility: \"hidden\" }}> Network 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Performance 항목 <a name=\"Performance 항목\" style={{ visibility: \"hidden\" }}> Performance 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Memory 항목 <a name=\"Memory 항목\" style={{ visibility: \"hidden\" }}> Memory 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Application 항목 <a name=\"Application 항목\" style={{ visibility: \"hidden\" }}> Application 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Security 항목 <a name=\"Security 항목\" style={{ visibility: \"hidden\" }}> Security 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Lighthouse 항목 <a name=\"Lighthouse 항목\" style={{ visibility: \"hidden\" }}> Lighthouse 항목 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FrontBrowserDevTool;","import React from 'react';\r\n\r\nconst FrontendRegex = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 정규 표현식 문법(정리중) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 🎈 범위\r\n              <div className=\"block4\">\r\n                <li> [a-z] : 소문자 </li>\r\n                <li> [A-Z] : 대문자 </li>\r\n                <li> [0-9] : 숫자 </li>\r\n                <li> [ㄱ-힣] : 한글 </li>\r\n                <li> [~`!@#$%\\^&*()-+=] : 특수문자 </li>\r\n                <li> [커스텀글자조합] : 특정글자들을 지정 가능 <small> [abc] : a,b,c중에 한글자 일치 </small> </li>\r\n                <li> [a-zA-Z0-9] : 이와같이 여러개의 조합가능 </li>\r\n                <li> [^0-9] : 패턴 문자들을 제외한 나머지 <small> a[^0-9] = ab ac a@ aㄱ </small> </li>\r\n                <li> {\" 패턴{n} \"} : 패턴과 일치하는 문자의 갯수가 n개  </li>\r\n                <li> {\" 패턴{n,} \"} : 패턴과 일치하는 문자의 갯수가 n개 이상  </li>\r\n                <li> {\" 패턴{n,m} \"} : 패턴과 일치하는 문자의 갯수가 n개 이상 m개 이하  </li>\r\n                <li> () : 하나로 묶어준다. </li>\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n            <li> 🎈 메타문자(이미 정해놓은 문자 규칙)\r\n              <div className=\"block4\">\r\n                <li> \\v \\n \\f \\r \\t [\\b] : 수직 탭, 개행, 폼 피드, 캐리지 리턴, 탭, 백스페이스 </li>\r\n                <li> \\d \\D \\w \\W : [0-9] [^0-9] [a-zA-Z0-9_] [^a-zA-Z0-9_]  </li>\r\n                <li> \\s \\S : [\\f\\n\\r\\t\\v] [^\\f\\n\\r\\t\\v] </li>\r\n                <li> \\x \\o : 16진수일치 8진수일치 </li>\r\n              </div>\r\n            </li>\r\n            <li> 🎈 부호\r\n              <div className=\"block4\">\r\n                <li> . : 어떠한 문자 1개가 들어갈 수 있다는 것을 의미합니다. 연달아서 .. 으로도 사용가능합니다.\r\n                  또한 공백도 인식합니다. .이라는 문자를 표현하고 싶다면 \\. 을 사용합니다.\r\n                  <small> x. = xa ab xb x@ </small> </li>\r\n                <li> + : 1개이상의 문자를 탐색 <small> a[0-9]+ : a0 a123 a는 안됨 , 1개이상의 숫자만 오면 만족 </small> </li>\r\n                <li> * : 0개이상의 문자를 탐색 <small> a[0-9]* : a a0 a1  </small> </li>\r\n                <li> ? : 0~1개일때 일치 <small> a[0-9]? : a a0 a9 </small> </li>\r\n                <li> ^ : 문장의 제일 처음에 오면 문자열의 시작에 특정 문자가 오게지정 가능 <small> ^[0-9] , 반드시 문자첫글자는 0~9로 시작한다 </small> </li>\r\n                <li> [^패턴] : 패턴과 일치하는 문자들을 제외한경우 일치 <small>  </small> </li>\r\n                <li> +? *? {\"{n,}?\"} : 가장 최소 단위로 일치하는 값들을 찾게하는 기호(게으른 수량자) <small> [a-zA-Z]{\"{2,4}?\"} , 2글자가 일치하는게 우선순위를 가짐 </small> </li>\r\n                <li> \\숫자 : 하위 표현식으로 묶어서 임시 버퍼에 저장된 값을 불러온다. 임시 버퍼에 저장된값은\r\n                  앞에서 사용한값을 그대로 불러온다.(역참조)\r\n                  <small> ([a-z])\\1 = [a-z][a-z] = aa bb ab틀림 </small> </li>\r\n                <li> <small> 아래 ?를 사용하는 정규표현식은 그냥 칸막이 같은 역할을 한다고 보면된다. </small> </li>\r\n                <li> ?=패턴 : (뒤쪽에서사용)찾는 조건에서 패턴을 제외한고 찾는다. <small> .*(?=@) , @기호가 나오기전까지 모든 문자를 일치시킨다.. </small> </li>\r\n                <li> (?!) : (뒤쪽에서사용)패턴으로 끝나는 값들을 포함해서 찾는다. <small>  </small> </li>\r\n                <li> {\" ?<=패턴 \"} : (앞쪽에서사용)찾기전에 패턴으로 시작되는 값을 찾고 시작한다. <small> (?=@).* , @기호가 나온 이후에 모든 문자를 일치시킨다. </small> </li>\r\n                <li> {\" (?<!패턴) \"} : (앞쪽에서사용)패턴으로 시작되는 값들은 제외하고 검색한다. <small>  </small> </li>\r\n              </div>\r\n            </li>\r\n\r\n            <li>  r : 문자열 그대로 출력 , str = r\"123\\n\" </li>\r\n            <li> /g : 문자열내에서 모든 패턴 검색 </li>\r\n            <li> /i : 대소문자 식별x </li>\r\n            <li> /m : 다중 라인의 문자열에서도 검색 </li>\r\n            <li> $ : 문자열의 끝을 표시 </li>\r\n            <li> \\b : 단어의 경계 , test\\b는 test1,test2 불가능 </li>\r\n            <li> \\B : 단어가 공백이 아닌것으로 표시 , test\\B는 test1,test2 가능  </li>\r\n            <li> \\ : 문자그대로를 표시해주는 기능  </li>\r\n            <li> | :  test|code , test와 code둘다 가능  </li>\r\n            <li> x(?=y) , y조건에 만족하는 값만 x에 대응  </li>\r\n            <li> x(?!y) , x뒤에 y가 없을경우 허용  </li>\r\n            <li> (?=.*조건글자넣기{\"{a,b}\"}) , 조건글자 a~b자리  </li>\r\n            <li>   </li>\r\n\r\n            <h2 className='h2'> 📌 자바스크립트 정규표현식 사용 </h2>\r\n            <li> 정규표현식.test(값); , boolean값으로 출력 </li>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 정규표현식 예시 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 이메일 </h2>\r\n            <li> {\" /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i \"} </li>\r\n            <li> {\" /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/ \"} </li>\r\n            <li> {\"^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,6}$\"} , </li>\r\n\r\n            <h2 className='h2'> 📌 전화 </h2>\r\n            <li> {\" /^\\d{3}-\\d{3,4}-\\d{4}$/ \"} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 휴대폰 </h2>\r\n            <li> {\" /^01([0|1|6|7|8|9]?)-?([0-9]{3,4})-?([0-9]{4})$/ \"} </li>\r\n            <li> {\" /^(010|011|016|017|018|019)-\\d{3,4}-\\d{4}$/u \"} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 URL </h2>\r\n            <li> {\" ^(https?):\\/\\/([^:\\/\\s]+)(:([^\\/]*))?((\\/[^\\s/\\/]+)*)?\\/?([^#\\s\\?]*)(\\?([^#\\s]*))?(#(\\w*))?$ \"} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 단어 </h2>\r\n            <li> /단어/g </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 단어 제외 </h2>\r\n            <li> {\" \\b(?!\\bto\\b)\\w+\\b \"} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 우편번호 </h2>\r\n            <li> {\" /^\\d{3}-?\\d{3}$/u \"} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 아이디 </h2>\r\n            <li> {\" /^[a-zA-Z]\\w{2,7}$/u \"} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 주민등록번호 </h2>\r\n            <li> {\" /^\\d{2}[0-1]\\d[0-3]\\d-?[1-6]\\d{6}$/u \"} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 패스워드 </h2>\r\n            <li> {\" ^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$ \"} , 8자리숫1문1특1</li>\r\n            <li> {\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"} , 8자리대1소1숫1</li>\r\n            <li> {\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,}\"} , 8자리대1소1숫1특1 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 IP주소 </h2>\r\n            <li> {\"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\"} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrontendRegex;","import React from 'react';\r\n\r\nconst FrontendBuildName = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 제목 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n                            <li> 2 </li>\r\n                            <li> 3 </li>\r\n\r\n                            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 제목 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n                            <li> 2 </li>\r\n                            <li> 3 </li>\r\n\r\n                            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FrontendBuildName;","import React from 'react';\r\n\r\nconst FrontendHttp = (props) => {\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> General Header </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 요청/응답에 대한 일반적인 정보를 담은 헤더 </li>\r\n\r\n                        <h2 className='h2'> 📌 Date </h2>\r\n                        <li> 현재시간을 알려준다. </li>\r\n\r\n                        <h2 className='h2'> 📌 Pragma </h2>\r\n                        <li> 캐시제어 , HTTP/1.0 버전에서 사용했던것 </li>\r\n\r\n                        <h2 className='h2'> 📌 Cache-Control </h2>\r\n                        <li> 캐시제어 </li>\r\n                        <li> 옵션\r\n                            <div className=\"block4\">\r\n                                <li> no-store : 캐시 저장 사용안함 </li>\r\n                                <li> no-cache : 유효한 캐시인지 서버에 매번 확인 </li>\r\n                                <li> must-revalidate : 만료된 캐시이면 서버에 확인하겠다. </li>\r\n                                <li> public : 공유 캐시공간에 저장 허용 </li>\r\n                                <li> private : 브라우저 같은 사용자 환경에 저장 </li>\r\n                                <li> max-age : 캐시의 유효시간 </li>\r\n                            </div>\r\n                        </li>\r\n\r\n                        <h2 className='h2'> 📌 Transfer-Encoding </h2>\r\n                        <li> body 내용 압축 방식 지정 </li>\r\n                        <li> 옵션\r\n                            <div className=\"block4\">\r\n                                <li> chunked 이면 분할해서 데이터를 받아온다. </li>\r\n                            </div>\r\n                        </li>\r\n\r\n                        <h2 className='h2'> 📌 Upgrade </h2>\r\n                        <li> 프로토콜 변경시 사용, HTTP/2.0 </li>\r\n\r\n                        <h2 className='h2'> 📌 Via </h2>\r\n                        <li> 프록시(중간) 서버 이름, 버전, 호스트명 </li>\r\n\r\n                        <h2 className='h2'> 📌 Content-Encoding </h2>\r\n                        <li> 본문 리소스 압축 방식 </li>\r\n\r\n                        <h2 className='h2'> 📌 Content-type </h2>\r\n                        <li> 본문 타입 , application/json </li>\r\n\r\n                        <h2 className='h2'> 📌 Content-Length </h2>\r\n                        <li> 본문 길이 </li>\r\n\r\n                        <h2 className='h2'> 📌 Content-language </h2>\r\n                        <li> 본문 언어 </li>\r\n\r\n                        <h2 className='h2'> 📌 Expires </h2>\r\n                        <li> 만료 날짜 </li>\r\n\r\n                        <h2 className='h2'> 📌 Allow </h2>\r\n                        <li> 사용 가능한 메소드 방식, GET,POST </li>\r\n\r\n                        <h2 className='h2'> 📌 Last-Modified </h2>\r\n                        <li> 최근 수정 날짜 </li>\r\n\r\n                        <h2 className='h2'> 📌 ETag </h2>\r\n                        <li> 캐시가 최신버전인지 알기 위한 식별자 </li>\r\n\r\n                        <h2 className='h2'> 📌 Connection </h2>\r\n                        <li> 서버와 클라이언트 연결 방식, keep-alive </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> Request/Response Header(정리중) </summary>\r\n                    <div className='block2'>\r\n                        <a href=\"https://hazel-developer.tistory.com/145\" target=\"_blank\" rel=\"noopener noreferrer\"> 헤더 정리 참고 </a>\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> Entity Header(정리중) </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> HTTP Body(정리중) </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                        <h2 className='h2'> 📌  </h2>\r\n                        <li>  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> http상태코드(미정리) </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> <a href=\"https://www.whatap.io/ko/blog/40/\" target=\"_blank\" rel=\"noopener noreferrer\"> http 상태 코드 </a> </li>\r\n                        <li> 2 </li>\r\n                        <li> 3 </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n            {/* 끝 */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FrontendHttp;","import React from 'react';\r\n\r\nconst FrontendPrettier = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> [0] prettier 설치 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li> Ctrl + , </li>\r\n                <li> editor format on save 입력 </li>\r\n                <li> Editor: Format On Save 체크 </li>\r\n                <li> editor Default Formatter 입력 </li>\r\n                <li> Editor: Default Formatter를 esbenp.prettier-vscode로 변경 <small> 이렇게 보이지 않아서 아래와 같이 사용 </small> </li>\r\n                <li> Editor: Default Formatter를 Prettier-Code formatter 로 변경 <small> 혹시나 몰라서 User, Workspace 둘다 바꾸어주었다. </small> </li>\r\n                <li> Eslint Format: Enable 입력 후 체크해제 <small> ESLint와의 충돌 방지 </small> </li>\r\n                <li> ctrl + shift + p </li>\r\n                <li> format document with </li>\r\n                <li> config default formatter </li>\r\n                <li> prettier 선택 </li>\r\n                <li> .prettierrc.js 파일 생성 <small> 주석을 사용하기 위해서 </small> </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 저장시 자동 포맷팅 </h2>\r\n              <div className='block4'>\r\n                <li> ctrl + , </li>\r\n                <li> eslint Code Action On Save: Mode 입력 , all </li>\r\n                <li> format on save 입력 , 체크 </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> [1] Prettier 명령어 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 .prettierrc.js </h2>\r\n              <div className='block4'>\r\n                <li> module.exports = {\"{\"}\r\n                  <li> singleQuote: true, <small> 문자열은 홀따옴표 </small> </li>\r\n                  <li> semi: true, <small> 마지막 세미콜론 사용 </small> </li>\r\n                  <li> useTabs: false, <small> 탭 사용금지 스페이스로 대체 </small> </li>\r\n                  <li> tabWidth: 2, <small> 들여쓰기 너비 2칸 </small> </li>\r\n                  <li> trailingComma: \"all\", <small> 키:값 뒤에 항상 콤마 사용 </small> </li>\r\n                  <li> printWidth: 80, <small> 코드 한줄 최대 80 </small> </li>\r\n                  <li> arrowParens: \"avoid\", <small> 화살표 함수 사용할 때 파라미터 1개이면 괄호 생략가능 </small> </li>\r\n                  <li> endOfLine: \"auto\", <small> delete cr에러 해결 </small> </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> {\"};\"} </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/* 끝 */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FrontendPrettier;","import React from 'react';\r\n\r\nconst DBOracleBasic = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> 시퀸스(정리 필요) </summary>\r\n            <div className='block2'>\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <div className='block4'>\r\n                <li> 자동으로 증가하는 번호를 반환해주는 데이터베이스 객체 </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <h2 className='h2'> 📌 Create </h2>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li> </li>\r\n              </div>\r\n              <h2 className='h2'> 📌 Read </h2>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li> </li>\r\n              </div>\r\n              <h2 className='h2'> 📌 Update </h2>\r\n              <li> </li>\r\n              <li> </li>\r\n              <h2 className='h2'> 📌 Delete </h2>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li> </li>\r\n              </div>\r\n              <h2 className='h2'> 📌 authority Create </h2>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li> </li>\r\n              </div>\r\n              <h2 className='h2'> 📌 authority Read </h2>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li> </li>\r\n              </div>\r\n              <h2 className='h2'> 📌 authority Update </h2>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li> </li>\r\n              </div>\r\n              <h2 className='h2'> 📌 authority Delete </h2>\r\n              <li> </li>\r\n              <div className='block4'>\r\n                <li>  </li>\r\n                <li> </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <span className=\"lblock\">\r\n          <span className=\"mtitle\"> <a name=\"OracleDB Study\">  OracleDB Study  </a> </span>\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> OracleDB 설명\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 기본 용어 </div>\r\n                <div className='mblock'>\r\n                  <li> 스키마 : 사용자가 생성한 객체(테이블,인덱스,프로시저,뷰 등), DBMS마다 차이가 있음 </li>\r\n                  <li> 테이블 : DB데이터(레코드)를 정렬하여 보관하고 있는 단위 , 테이블을 컬럼(필드)과 레코드로 구성되어있다. </li>\r\n                  <li> 레코드 : 한 객체에 대한 정보, 테이블에 가로줄 , ex) 한명의 유저의 아이디,비밀번호,이메일 등을 가지고 있는 단위 </li>\r\n                  <li> 컬럼,필드 : 객체에 있는 속성들을 정의하는 단위, ex) 컬럼 종류 : 아이디, 비밀번호, 이메일, 부서, 나이 등등 </li>\r\n                </div>\r\n                <div className='sstitle'> 실행 순서 </div>\r\n                <div className='mblock'>\r\n                  <li> FROM - ON - JOIN - WHERE - GROUP BY , HAVING, SELECT, ORDER BY </li>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className='sstitle'> 기타 지식 </div>\r\n                <div className='mblock'>\r\n                  <li> 오라클에는 boolean 값이 없다. </li>\r\n                  <li> 외래키에는 식별과 비식별이라는 2가지의 외래키가 있는데 식별은 부모 필드의 조건(unique 등)을 가져오는 것이고\r\n                    비식별은 부모필드의 조건은 가져오지 않고 값만 가져오는 것이다. </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> OracleDB 시작, 설정\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> oracledb 열기 </div>\r\n                <div className='mblock'>\r\n                  <li> cmd창 - sql plus 사용자명/비밀번호  </li>\r\n                  <li>   </li>\r\n                  <li>   </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> oracledb 사용자 비번 까먹었을 때 </div>\r\n                <div className='mblock'>\r\n                  <li> cmd창 - sqlplus - sys as sysdba - 비번없이 엔터  </li>\r\n                  <li> show user;  </li>\r\n                  <li> alter user sys identified by 1234;  </li>\r\n                  <li> conn sys/1234 as sysdba;  </li>\r\n                  <li>   </li>\r\n                </div>\r\n\r\n                <div className='sstitle'>  </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'>  </div>\r\n                <div className='mblock'>\r\n                  <li> </li>\r\n                  <li> </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 주석 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> USE, SHOW, DESC, CONN\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n\r\n                <div className='sstitle'> USE </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> SHOW </div>\r\n                <div className='mblock'>\r\n                  <li> SHOW USER; # 사용자 조회 </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> DESC </div>\r\n                <div className='mblock'>\r\n                  <li> DESC 테이블명; # 테이블 컬럼 조회 </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> CONN </div>\r\n                <div className='mblock'>\r\n                  <li> CONN c##유저명/비밀번호; # 접속 유저 변경 </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'>  </div>\r\n                <div className='mblock'>\r\n                  <li> </li>\r\n                  <li> </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> 필드 타입\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 설명 </div>\r\n                <div className='mblock'>\r\n                  <li> 오라클에는 boolean타입이 없다. PL/SQL문 사용해야함 </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 숫자 </div>\r\n                <div className='mblock'>\r\n                  <li> NUMBER(P,S) : 가변 숫자 (P: 1-38 , S:-84 - 127) , 최대 22byte </li>\r\n                  <li> FLOAT(P) : 실수 (P: 1-128) , 최대 22byte </li>\r\n                  <li> BINARY_FLOAT : 32비트 부동소수점 , 최대 4byte </li>\r\n                  <li> BINARY_DOUBLE : 32비트 부동소수점 , 최대 8byte </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 문자 </div>\r\n                <div className='mblock'>\r\n                  <li> CHAR() : 고정길이, 최대 2000Byte </li>\r\n                  <li> VARCHAR2() : 가변길이, 최대 4000Byte </li>\r\n                  <li> NCHAR() : 고정길이 유니코드, 최대 2000Byte </li>\r\n                  <li> NVARCHAR() : 가변길이 유니코드, 최대 2000Byte </li>\r\n                  <li> LONG : 가변길이 , 최대 2GB </li>\r\n                  <li> CLOB : 텍스트 , 최대 4GB </li>\r\n                  <li> NCLOB : 유니코드 , 최대 4GB </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 날짜,시간 </div>\r\n                <div className='mblock'>\r\n                  <li> DATE :  </li>\r\n                  <li> TIMESTAMP :  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> 제약 조건\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 종류 </div>\r\n                <div className='mblock'>\r\n                  <li> PRIMARY KEY  <small> # 중복허용x + NULL허용x </small>  </li>\r\n                  <li> FOREGIN KEY # 왜래키 </li>\r\n                  <li> NOT NULL # NULL허용x </li>\r\n                  <li> DEFAULT 초기값 # 초기값을 설정\r\n                    <li> DEFAULT 0  </li>\r\n                    <li> DEFAULT 'M'  </li>\r\n                  </li>\r\n                  <li> UNIQUE # 중복허용x </li>\r\n                  <li> CHECK # 특정 조건에 맞는 데이터만 허용\r\n                    <li> CHECK ( age {'>'} 0) </li>\r\n                    <li> CHECK ( gender in ('M','F')) </li>\r\n                  </li>\r\n                  <li> INDEX # 인덱스를 지정할 때 사용 </li>\r\n                  <li> ON DELETE CASCADE <small> 부모가 지워질때 같이 지워지게함, 외래키? 에 사용 </small> </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> 연산자\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 산술 연산자 </div>\r\n                <div className='mblock'>\r\n                  <li> </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 대입 연산자 </div>\r\n                <div className='mblock'>\r\n                  <li> </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 비교 연산자 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 논리 연산자 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 비트 연산자 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 조건 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> 패턴 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'>  </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> DML : SELECT, INSERT, UPDATE, DELETE\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 설명 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> SELECT </div>\r\n                <div className='mblock'>\r\n                  <li> SELECT * FROM ALL_users; # 모든 유저 조회 </li>\r\n                  <li> SELECT 유저명 FROM ALL_users; # 특정 유저 조회 </li>\r\n                  <li> SELECT * FROM DBA_users; # 모든 DB(스키마) 조회 </li>\r\n                  <li> SELECT * FROM 테이블명; # 모든 테이블 조회 </li>\r\n                  <li> SELECT [컬럼명1,컬럼명2] FROM 테이블명; # 특정 테이블 조회 </li>\r\n                  <li> SELECT tname FROM tab; # 사용자들의 테이블 목록 조회 </li>\r\n                  <li> SELECT username FROM DBA_USERS; # </li>\r\n                  <li> SELECT username FROM ALL_USERS; # 모든 사용자의 이름 조회 </li>\r\n                  <li> SELECT * FROM DBA_SYS_PRIVX WHERE GRANTEE='사용자명'; # 시스템 권한 조회 </li>\r\n                  <li> SELECT * FROM DBA_SYS_PRIVS WHERE GRANTEE='사용자명'; # 롤에 부여된 시스템 권한 조회</li>\r\n                  <li> SELECT * FROM DBA_ROLE_PRIVX WHERE GRANTEE='사용자명'; </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> INSERT </div>\r\n                <div className='mblock'>\r\n                  <li> INSERT INTO 테이블명 VALUES(필드값1, 필드값2, ...); # 필드명 순서에 맞게 입력값 필요 </li>\r\n                  <li> INSERT INTO 테이블명(필드명2, 필드명1, ...) VALUES(필드값2, 필드값1, ...); </li>\r\n                  <li> INSERT INTO 테이블명 (SELECT * FROM 다른테이블) # 스키마가 동일해야 가능 </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> UPDATE </div>\r\n                <div className='mblock'>\r\n                  <li> UPDATE 테이블명 SET 필드명=필드값 WHERE 조건; </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> DELETE </div>\r\n                <div className='mblock'>\r\n                  <li> DELETE FROM 테이블명 WHERE 조건; </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> DDL : CREATE, DROP, ALTER\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 설명 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> CREATE </div>\r\n                <div className='mblock'>\r\n                  <li> CREATE TABLE 테이블명(필드명 타입 조건) # 테이블 생성 </li>\r\n                  <li> CREATE TABLE 테이블명 AS 서브쿼리; </li>\r\n                  <li> CREATE OR REPLACE TABLE 테이블명(필드); # DB사용자 권한은 유지하면서 테이블 재생성 </li>\r\n                  <li> CREATE USER 사용자명 IDENTIFIED BY 비밀번호; # 사용자 생성 </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> DROP </div>\r\n                <div className='mblock'>\r\n                  <li> DROP USER c##사용자명; # 사용자 삭제 </li>\r\n                  <li> DROP TABLE 테이블명; # 테이블에 레코드가 존재하면 지워지지 않음 </li>\r\n                  <li> DROP TABLE 테이블명 CASCADE CONSTRAINTS PURGE; # 테이블 강제 삭제, 레코드 유무 상관없음 </li>\r\n                  <li> DROP TABLE 테이블명 CASCADE CONSTRAINTS; <small> # 테이블의 제약조건을 제거한다. , 외래키에 의해 참조된  </small> </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> ALTER </div>\r\n                <div className='mblock'>\r\n                  <li> ALTER USER c##사용자명 IDENTIFIED BY 변경할비밀번호; # 사용자 비번 변경 </li>\r\n                  <li> ALTER TABLE 테이블명 MODIFY(필드명 타입, 바꿀필드명 타입); # 테이블 타입 변경 </li>\r\n                  <li> ALTER TABLE 테이블명 ADD(필드명 타입); # 테이블 필드 추가 </li>\r\n                  <li> ALTER TABLE 테이블명 DROP(필드명1, 필드명2); # 테이블 필드 삭제 </li>\r\n                  <li> ALTER TABLE 테이블명 RENAME TO 변경할테이블명; # 테이블의 이름 변경 </li>\r\n                  <li> ALTER TABLE 테이블명 add 제약조건(필드명); </li>\r\n                  <li> ALTER TABLE 테이블명 add constraint 제약조건명 제약조건(필드명); <small> # 제약조건명을 사용하는 것이 추후에 좋다고 생각한다. </small>\r\n                    <div className=\"sblock\">\r\n                      <li> ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명_PK PRIMARY KEY(필드명); </li>\r\n                      <li> ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 FOREIGN(외래키로사용할필드명) REFERENCES PARENT (부모테이블의기본필드명) ON DELETE CASCADE;  </li>\r\n                      <li> ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 UNIQUE(필드명); </li>\r\n                      <li> ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 CHECK(필드명 BETWEEN 값 AND 값) </li>\r\n                      <li>  </li>\r\n                    </div>\r\n                  </li>\r\n                  <li> ALTER TABLE 테이블명 modify 필드명 not null; # not null만 제약조건 추가방법이 다름 </li>\r\n                  <li> ALTER TABLE 테이블명 drop 제약조건 # 제약조건 삭제 </li>\r\n                  <li> ALTER TABLE 테이블명 drop constraint 제약조건명 # not null은 이렇게만 삭제가능 </li>\r\n                  <li> ALTER TABLE 테이블명 disable constraint 제약조건명; # 제약조건 비활성화 </li>\r\n                  <li> ALTER TABLE 테이블명 enable constraint 제약조건명; # 제약조건 활성화 </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> RENAME </div>\r\n                <div className='mblock'>\r\n                  <li> </li>\r\n                  <li> </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> TRUNCATE </div>\r\n                <div className='mblock'>\r\n                  <li> TRUNCATE TABLE 테이블명; # 테이블의 모든 레코드 삭제 </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> DCL : GRANT, REVOKE\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 설명 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> GRANT </div>\r\n                <div className='mblock'>\r\n                  <li> GRANT CONNECT,RESOURCE,DBA,CREATE TABLE TO c##사용자명 WITH ADMIN OPTION;\r\n                    # 권한을 받는 계정이 다른 계정에게도 부여할 수 있는 권한 옵션 </li>\r\n                  <li> GRANT CONNECT TO c##사용자명; # 연결 권한 </li>\r\n                  <li> GRANT RESOURCE TO c##사용자명; # </li>\r\n                  <li> GRANT CREATE VIEW TO c##사용자명; # 뷰 생성 권한 </li>\r\n                  <li> GRANT CREATE PROCEDURE TO c##사용자명; # 프로시저 생성 권한 </li>\r\n                  <li> GRANT CREATE SEQUENCE TO c##사용자명; # 시퀸스 생성 권한 </li>\r\n                  <li> GRANT CREATE ANY TABLE TO c##사용자명; # 모든 유저 테이블 생성 권한</li>\r\n                  <li> GRANT CREATE session TO c##사용자명; # 데이터 베이스 접속 권한 </li>\r\n                  <li> GRANT CREATE table TO c##사용자명; # 테이블 생성 권한 </li>\r\n                  <li> GRANT CREATE USER TO c##사용자명; # 유저 생성 권한 </li>\r\n                  <li> GRANT SELECT ANY TABLE TO c##사용자명; # 모든 유저 테이블 조회 권한 </li>\r\n                  <li> GRANT ALTER USER TO c##사용자명; </li>\r\n                  <li> GRANT DROP USER TO c##사용자명; </li>\r\n                  <li> GRANT CREATE SESSION TO c##사용자명; # DB 접속 권한 </li>\r\n                  <li> GRANT ALTER SESSION TO c##사용자명; </li>\r\n                  <li> GRANT  </li>\r\n                  <li> GRANT DBA TO c##사용자명; </li>\r\n                  <li> GRANT SYSDBA TO c##사용자명; # 데이터 베이스 최고 권한 </li>\r\n                  <li> GRANT SYSOPER TO c##사용자명; # 데이터 베이스 관리 최고 권한 </li>\r\n                  <li> GRANT 권한명 TO 롤명; </li>\r\n                  <li> GRANT 롤명 TO 사용자명; </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> REVOKE </div>\r\n                <div className='mblock'>\r\n                  <li> REVOKE CONNECT FROM c##사용자명; # 사용자 연결 끊기 </li>\r\n                  <li> REVOKE 권한 on 테이블명 FROM c##사용자명; </li>\r\n                  <li> REVOKE 권한 FROM c##사용자명; # 사용자에게서 권한을 뺏음 </li>\r\n                  <li> REVOKE sys명령 on 테이블명 FROM c##사용자명; </li>\r\n                  <li> REVOKE SQL on 테이블명 FROM c##사용자명; </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> TCL : COMMIT, ROLLBACK, SAVEPOINT\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 설명 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> COMMIT </div>\r\n                <div className='mblock'>\r\n                  <li> COMMIT; </li>\r\n                  <li> SET AUTOCOMMIT ON; # 자동으로 커밋을 시켜줌 </li>\r\n                  <li> SET AUTOCOMMIT OFF; # 자동으로 커밋 사용 x</li>\r\n                  <li> SHOW AUTOCOMMIT; # 현재 오토커밋을 사용하는지 조회 </li>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className='sstitle'> ROLLBACK </div>\r\n                <div className='mblock'>\r\n                  <li> ROLLBACK; # 이전 커밋으로 복구 </li>\r\n                  <li> ROLLBACK TO SAVEPOINT 롤백세이브명; # 세이브 포인트로 이동 </li>\r\n                  <li> SAVAPOINT 롤백세이브명; # 세이브 포인트 지점을 지정 </li>\r\n                  <li> SELECT * FROM 테이블명 AS OF TIMESTAMP(SYSTIMESTAMP - INTERVAL '시간(숫자)' MINUTE)\r\n                    # 몇분 이전의 데이터를 조회 </li>\r\n                  <li> SELECT * FROM 테이블명 AS OF TIMESTAMP(TO_DATE('2000-00-00 00:00:00', 'YYYY-MM-DD HH24:MI:SS'))\r\n                    # 원하는 시점 이전의 데이터를 조회 </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> JOIN\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> INNER JOIN - 교집합 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> LEFT JOIN , RIGHT JOIN </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> UNION </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n                <div className='sstitle'> Subquerry </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> 인덱스\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 설명 </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className='sstitle'>  </div>\r\n                <div className='mblock'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> OracleDB 함수\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'>  </div>\r\n                <div className=\"mblock\">\r\n                  <div className=\"sstitle\"> 그룹 함수 </div>\r\n                  <li> SUM() , AVG() , COUNT() , MAX() , MIN() </li>\r\n                  <li> STDDEV()(=표준편차) , VARIANCE()(=분산)  </li>\r\n                  <li> GROUP BY 필드 HAVING 조건 </li>\r\n                  <div className=\"sstitle\"> 단일 함수 </div>\r\n                  <li>  </li>\r\n                  <div className=\"sstitle\"> 일반 함수 </div>\r\n                  <li> NVL(NOT NULL일때,NULL일때) </li>\r\n                  <li> NVL2(@,@ = NOT NULL일때, @ = NULL일때) , 삼항연산느낌</li>\r\n                  <li> DECODE(필드,데이터값,'@',데이터값,'@',.기본결과) , 스위치문이라고 생각</li>\r\n                  <li> CASE WHEN 조건1 then 데이터값1 WHEN 조건2 then 데이터값2 end 별명? from 테이블; </li>\r\n                  <div className=\"sstitle\"> 변환 함수 </div>\r\n                  <li> TO_CHAR(숫자-&gt;문자), TO_DATE(문자-&gt;숫자) , TO_NUMBER(문자-&gt;숫자) </li>\r\n                  <li> YYYY,YY,MM,MON,DD,DAY,DY,AM,PM,HH,HH12,HH24,MI,SS,A.M,P.M </li>\r\n                  <li> TO_CHAR(필드,'$999,999,999') , 제일 앞에 $붙이고 3자리마다 쉼표를 붙임 </li>\r\n                  <div className=\"sstitle\"> 날짜 함수 </div>\r\n                  <li> SYSDATE(현재날짜), MONTHS_BETWEEN(@1,@2) , ADD_MONTHS(필드,개월수), NEXT_DAY </li>\r\n                  <li> ROUND, TRUNC, LAST_DAY(달의마지막날짜반환), EXTRACT([YEAR,MONTH,DAY,HOUR,MINUTE,SECOND] FROM 날짜) </li>\r\n                  <div className=\"sstitle\"> 숫자 함수 </div>\r\n                  <li> ABS, COS, EXP, FLOOR, LOG, POWER(m,n), SIN, TAN, ROUND </li>\r\n                  <li> TRUNC(자릿수 버림), MOD(나머지), SIGN(n) -1,0,1 </li>\r\n                  <div className=\"sstitle\"> 문자 함수 </div>\r\n                  <li> LOWER, UPPER, INITCAP(첫대문자) ,CONCAT(열연결), SUBSTR,SUBSTRB(@,시작위치,추출갯수) </li>\r\n                  <li> LENGTH, LENGTHB, INSTR, INSTRB(@,찾는글자,시작위치,몇번쨰), LPAD,RPAD(@,자릿수,채워넣을기호) </li>\r\n                  <li> CONVERT, CHR(@-&gt;아스키코드) , ASCII(아스키코드-&gt;문자) , REPLACE ,TRIM(@,FROM 필드)</li>\r\n                  <li> TRIM([LEADING|TRAILING|BOTH],['@',from 필드]) </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> Where,On,Like,Between,As,Distinct\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> Where </div>\r\n                <div className='mblock'>\r\n                  <li> 와일드카드 : %(어떠한 문자든 검색) , _(자릿수 검색) </li>\r\n                  <li> WHERE 필드명 LIKE 'MI%' , 대문자 MI로 시작하는 필드값 비교 </li>\r\n                  <li> WHERE 필드명 LIKE '%KE' , 대문자 KE로 끝나는 필드값 검색 </li>\r\n                  <li> WHERE 필드명 LIKE '%IK%', 대문자 IK를 포함하는 필드값 검색 </li>\r\n                  <li> WHERE 필드명 (UPPER)LIKE (UPPER)'%IK%', IK를 포함하는 필드값 검색 </li>\r\n                  <li> WHERE 필드명 (LOWER)LIKE (LOWER)'%IK%', IK를 포함하는 필드값 검색 </li>\r\n                  <li> WHERE 필드명 LIKE '%IK%' OR 필드명 LIKE '%OH%', IK혹은 OH를 포함하는 필드값 검색 </li>\r\n                  <li> WHERE REGEXP _LIKE(필드명, 'MIKE|JOHN') , IK혹은 OH를 포함하는 필드값 검색 </li>\r\n                  <li> WHERE 필드명 NOT LIKE '%IK%', IK를 포함하지않는 필드값 검색 </li>\r\n                  <li> WHERE 필드명 LIKE 'MIK_' , MIK + 1글자 를 가진 필드값을 검색 </li>\r\n                  <li> WHERE 필드명 LIKE '%K_' , %K + 1글자 K라는글자뒤에 1글자가 포함된 필드값 검색 </li>\r\n                  <li> WHERE 필드명 LIKE '%\\_%' ESCAPE '\\' , 언더바문자(_)를 포함하는 필드값 검색 , \\문자말고도 아무런 문자 사용이 가능하다. 동일하게만 설정해주면 가능하다 </li> <br />\r\n                  <li> ON 테이블1.필드 = 테이블2.필드 WHERE 테이블1.필드 {'>'} 1000; # where보다 on이 먼저 실행된다. </li>\r\n                  <li> ON 테이블1.필드 = 테이블2.필드 AND 테이블1.필드 {'>'} 1000; </li> <br />\r\n                  <li> BETWEEN 시작범위 AND 종료범위 </li> <br />\r\n                  <li> SELECT 필드명 AS 필드별칭명 FROM 테이블명 # 출력이 될 때 필드자리에 sal로 표현이 된다. </li>\r\n                  <li> SELECT 필드명 FROM 테이블 DISTINCT; </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> In,Order By,Group By, Having\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> IN </div>\r\n                <div className='mblock'>\r\n                  <li> SELECT * FROM 테이블명 WHERE 필드명 IN (user,manager)  </li>\r\n                  <li> SELECT * FROM 테이블명 WHERE 필드명 NOT IN 'M'  </li>\r\n                </div>\r\n                <div className='sstitle'> Order By </div>\r\n                <div className='mblock'>\r\n                  <li> SELECT * FROM 테이블명 Order By 필드명 DESC; # 내림차순 </li>\r\n                  <li> SELECT * FROM 테이블명 Order By 필드명 ASC; # 오름차순 </li>\r\n                  <li> SELECT * FROM 테이블명 Order By 필드명1 ASC, 필드명2 DESC;\r\n                    # 필드명1을 정렬하고 같은 값이면 우선순위로 필드명2를 기준으로 정렬 </li>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className='sstitle'> Group By </div>\r\n                <div className='mblock'>\r\n                  <li> SELECT class, SUM(score) FROM student GROUP BY class; # 학급별로 시험의 합계를 볼 수 있음</li>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className='sstitle'> Having </div>\r\n                <div className='mblock'>\r\n                  <li> GROUP BY와 함께 사용, WHERE처럼 GROUP BY에 조건을 줄 수 있음 </li>\r\n                  <li> SELECT class, SUM(score) FROM student GROUP BY class HAVING SUM(score) {'>'} 1000;\r\n                    # 학년에 총 점수가 1000이 넘는 것만 조회 </li>\r\n                  <li> SELECT count(*), sum(salary) FROM employees GROUP BY dept_no HAVING count(*) {'>'} 2;\r\n                    # 부서에 2명이상일 경우</li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n\r\n        </span>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> ========================== </summary>\r\n          </details>\r\n        </div>\r\n\r\n        <span className=\"lblock\">\r\n\r\n          <ul>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"계층형 쿼리\"> 계층형 쿼리  </a> </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> hierarchical(하이커리) </span>\r\n                <li> <small> 계층형 구조, 오라클 8버전 이상 지원 </small> </li>\r\n                <li> NODE : 항목 한개 , ROOT : 최상단 노드 , PARENT : 상위 노드 </li>\r\n                <li> CHILD : 하위 노드 , LEAF : 최하단 노드   </li>\r\n                <li> LEVEL :  어떤 단계에 있는지 보여주는 필드 , SELECT LEVEL ~ </li>\r\n                <li> START WITH 최상위노드조건: 최상위 루트노드를 지정 </li>\r\n                <li> CONNECT BY PRIOR 자식노드 = 부모노드 : 부모와 자식노드를 연결 </li>\r\n                <span className=\"sstitle\"> 일반적인 예시 </span>\r\n                <li> SELECT LEVEL, ename, empno, mgr FROM emp START WITH mgr IS null CONNECT BY\r\n                  PRIOR empno = mge  </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Sequence\">  Sequence </a> </span>\r\n\r\n              <li><small> Unique값을 생성해주는 Oracle객체 </small>    </li>\r\n              <li><small> 자동으로 증가하는 필드 생성가능 </small>   </li>\r\n              <li><small> 시퀸스는 테이블과 독립적으로 작용하며 여러 테이블에 사용이 가능한다. </small>    </li>\r\n\r\n              <span className=\"sblock\">\r\n                <small> 한번에 속성값을 포함하여 한줄로 코딩</small>\r\n\r\n                <span className=\"sstitle\"> 시퀸스 생성 </span>\r\n                <li>  CREATE SEAUENCE 시퀸스명 </li>\r\n                <span className=\"sstitle\"> 시퀸스 시작값 지정 </span>\r\n                <li>  START WITH 시작값(숫자) </li>\r\n                <span className=\"sstitle\"> 시퀸스 증가값 지정  </span>\r\n                <li>  INCREMENT BY 증가값(숫자) </li>\r\n                <span className=\"sstitle\"> 시퀸스 최댓값 지정 </span>\r\n                <li>  MAXVALUE 최대값(숫자) </li>\r\n                <span className=\"sstitle\"> 시퀸스 최솟값 지정 </span>\r\n                <li>  MINVALUE 최솟값(default=20,숫자) </li>\r\n                <span className=\"sstitle\"> CACHE 사용여부 </span>\r\n                <li> NOCACHE / CACHE 캐시수(숫자) </li>\r\n                <span className=\"sstitle\"> 최댓값 도달시 시작값부터 다시 반복 설정 </span>\r\n                <li> NOCYCLE / CYCLE , 캐시를 사용하여 미리 값을 할당해 놓으면 속도가 빠르며, 동시 사용자가 많으면 유리하다고 한다.\r\n                  그렇다면 반대는?</li>\r\n                <span className=\"sstitle\"> 요청 순서대로 값을 생성할지 여부 </span>\r\n                <li> NOORDER / ORDER , 요청순서로 값을 생성하여 순서를 보장하지만 시스템의 부하가 약간 있음</li>\r\n\r\n              </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> 시퀸스 수정 </span>\r\n                <li> ALTER SEQUENCE 시퀸스명 수정할내용과값( ex) INCREMENT BY 1) </li>\r\n                <span className=\"sstitle\"> 시퀸스 삭제 </span>\r\n                <li> DROP SEQUENCE 시퀸스명 </li>\r\n                <span className=\"sstitle\"> 시퀸스 관련 변수 </span>\r\n                <li> 시퀸스명.CURRVAL , 현재값 반환 </li>\r\n                <li> 시퀸스명.NEXTVAL , 시퀸스 다음값 반환 </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n\r\n              </span>\r\n              <span className=\"stitle\"> 시퀸스 사용 </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> NEXTVAL </span>\r\n                <li> 시퀸스명.NEXTVAL , 시퀸스에 필드값을 넣을 때 자동으로 값이 증가한다. </li>\r\n                <span className=\"sstitle\"> CURRVAL </span>\r\n                <li> SELECT 시퀸스명.CURRVAL FROM dual , 현재 시퀸스 순번을 가져온다. NEXTVAL을 한번 실행한\r\n                  쿼리에서 사용이 가능하다고 한다. </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"날짜,시간\"> 날짜,시간 </a> </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 날짜 사용 방법 </span>\r\n                <li> TO_DATE('2021-07-18','YYYY-MM-DD') </li>\r\n                <li> TO_DATE('11:11:11','HH24:MI:SS') </li>\r\n                <li> TO_DATE('2021-07-18 11:11:11','YYYY-MM-DD HH24:MI:SS') </li>\r\n                <span className=\"sstitle\"> 조건절에서 날짜 사용 방법 </span>\r\n                <li> WHERE hiredate &gt; '2021/01/01'; </li>\r\n                <li> WHERE hiredate &gt; TO_DATE(210101); </li>\r\n                <li> WHERE hiredate &gt; TO_DATE('20210101','YYYYMMDD'); </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n              </span>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 날짜 차이 계산 </span>\r\n                <small> ROUND나 TRUNC 함수를 이용하여 초단위를 처리 </small>\r\n                <span className=\"sstitle\"> 시간 차이 계산 </span>\r\n                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 </li>\r\n                <li> TO_DATE(HH24:MI) - TO_DATE(HH24:MI) * 24 </li>\r\n                <li> ROUND(TO_DATE(HH24:MI) - TO_DATE(HH24:MI) * 24,2) </li>\r\n                <span className=\"sstitle\"> 분 차이 계산 </span>\r\n                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 * 60 </li>\r\n                <span className=\"sstitle\"> 초 차이 계산 </span>\r\n                <li> TO_DATE(YYYY-MM-DD HH:MI:SS) - TO_DATE(YYYY-MM-DD HH:MI:SS) * 24 * 60 * 60</li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n\r\n\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Join\">  Join </a> </span>\r\n              <small> JOIN을 하기위해서는 레코드의 수를 고려하여야 한다. </small>\r\n              <small> JOIN의 종류 : Inner, Outer, Cross, Self, Anti, Semi, ANSI(표준) </small>\r\n              <small> JOIN을 사용할 때는 필드을 적을 때 테이블1.필드 , 테이블2.필드 이런식으로 테이블을 명시해 주어야 한다. </small>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"stitle\"> inner join,equal join </span>\r\n                <span className=\"sstitle\"> 2개의 테이블에서 공통 필드이 있을 때(Inner JOIN) </span>\r\n                <li> SELECT 필드... FROM 테이블1,테이블2 WHERE 테이블1.필드=테이블2.필드; </li>\r\n                <li> SELECT 필드... FROM 테이블1 INNER JOIN 테이블2 ON 테이블1.필드 = 테이블2.필드; </li>\r\n                <li> SELECT 필드... FROM 테이블1,테이블2 WHERE 테이블1.필드=테이블2.필드 AND 테이블1.필드='ABC'; </li>\r\n                <li> SELECT 필드... FROM 테이블1 A,테이블2 B WHERE A.필드=B.필드; , 별칭사용</li>\r\n                <span className=\"sstitle\"> ANSI 표준 (Inner)JOIN </span>\r\n                <li> SELECT 필드... FROM 테이블1 JOIN 테이블2 ON 테이블1.필드=테이블2.필드 </li>\r\n                <li> SELECT 필드... FROM 테이블1 JOIN 테이블2 ON 테이블1.필드=테이블2.필드 AND 테이블1.필드='ABC' </li>\r\n                <li> SELECT 필드... FROM 테이블1 JOIN 테이블2 ON 테이블1.필드=테이블2.필드 WHERE 테이블1.필드='ABC' </li>\r\n                <li> SELECT 필드... FROM 테이블1 JOIN 테이블2 USING 공통필드 , ANSI </li>\r\n                <li> SELECT 필드... FROM 테이블1 NATURAL 테이블2 WHERE = 'ABC'; , 2개의 테이블의 공통필드을 알아서 뽑음 , ANSI </li>\r\n                <span className=\"sstitle\"> 2개의 테이블에서 범위 관련 컴럼으로 JOIN </span>\r\n                <li> SELECT 필드.. FROM 테이블1,테이블2 WHERE 테이블1.필드 BETWEEN 테이블2.필드명 AND 테이블2.필드명 </li>\r\n                <span className=\"sstitle\"> 1개의 테이블 JOIN </span>\r\n                <li> SELECT 필드 FROM 테이블1 별칭1,테이블1 별칭2 WHERE 조건 </li>\r\n                <span className=\"sstitle\"> 3개의 테이블 JOIN</span>\r\n                <li> SELECT * FROM 테이블1 A , 테이블2 B , 테이블3 C WHERE A.필드=B.필드 AND A.필드=C.필드 </li>\r\n                <li> SELECT * FROM 테이블1 A JOIN 테이블2 B ON A.필드=B.필드 JOIN 테이블3 C ON A.필드=C.필드 </li>\r\n                <span className=\"stitle\"> outer join </span>\r\n                <span className=\"sstitle\"> 2개의 테이블 필드 균형맞춰서 (OUTER)JOIN </span>\r\n                <li> <small> INNER과 OUTER JOIN을 동시에 사용하면 에러 발생 </small> </li>\r\n                <li> <small> 조건에서 모든 필드(테이블x) 조건에 +를 붙여주어야 결과값이 제대로 나온다. </small> </li>\r\n                <li> <small> OR 연산자와는 같이 사용 불가 , 서브쿼리와 같이 사용불가 </small> </li>\r\n                <li> <small> 1개의 테이블을 기준으로 잡고 다른 여러개의 테이블에(+) JOIN을 사용해야한다. , 포괄적인 JOIN(x) </small> </li>\r\n                <li> SELECT 필드 FROM 테이블1,테이블2 WHERE 테이블1.필드(+) = 테이블2.필드 AND 테이블1.필드(+)&gt;100, 데이터가 없을 것 같은 쪽에 +기호 사용</li>\r\n                <li> SELECT * FROM 테이블1 [LEFT|RIGHT,FULL] OUTER JOIN 테이블2 , ANSI 방식 , 우측테이블이 없다면 LEFT사용 </li>\r\n                <li> SELECT * FROM 테이블 A, 테이블 B, 테이블 C WHERE A.필드 = B.필드(+) AND A.필드 = C.필드(+) </li>\r\n                <span className=\"stitle\"> cross join </span>\r\n                <span className=\"sstitle\"> Cross JOIN 사용방법 </span>\r\n                <li> <small> 메모리를 많이 잡아 먹어 거의 사용하지 않음, 행*행 만큼의 갯수가 나옴 </small> </li>\r\n                <li> SELECT A.필드1 A.필드2 B.필드1 FROM 테이블 A, 테이블 B </li>\r\n                <span className=\"stitle\"> self join </span>\r\n                <span className=\"sstitle\"> SELF JOIN 사용방법 </span>\r\n                <li> <small> 같은 테이블을 별칭을 2개를 두어서 사용하는 방법 </small>  </li>\r\n                <li> <small> 상사와의 관게, 매니저와 직원의 관계, 조직도와 부서 등을 볼때 사용하면 될것 같다 </small>  </li>\r\n                <li> SELECT A.필드 B.필드 FROM 테이블1 A, 테이블1 B WHERE A.필드=B.필드 </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n                {/* <li> 테이블에서 왼쪽 조인 관리자(매니저) 출력 매니저 아이디 없으면 배제 하향식, 급여는 역순 </li> */}\r\n                {/* SELECT * FROM employee A join employee B WHERE manager_id IS NOT NULL ORDER BY salary DESC  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Regular Expression\"> Regular Expression </a> </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> REGEXP_LIKE (필드,'패턴[조건]') </span>\r\n                <li> WHERE REGEXP_LIKE (DEPT, '경영[^2]팀') , 경영 2팀을 제외한 </li>\r\n                <li> WHERE REGEXP_LIKE (DEPT, '경영[1팀2팀]') , 경영1팀 혹은 경영2팀을 포함하는 </li>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> REGEXP_SUBSTR (필드,'패턴[조건]') </span>\r\n                <li> SELECT REGEXP_SUBSTR(EMAIL,'[^@]+') FROM 테이블 , 이메일에서 아이디만 추출 </li>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Subquerry\">  Subquerry </a> </span>\r\n              <small> 메인쿼리의 일부분을 추출함 </small>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 단일행 서브쿼리 </span>\r\n                <li> =, &lt;= , &gt;=, &lt; , &gt; </li>\r\n                <span className=\"sstitle\"> 다중행 서브쿼리 </span>\r\n                <li> IN , ANY , SOME , ALL , EXIST </li>\r\n                <span className=\"sstitle\"> 서브쿼리 사용방법 </span>\r\n                <li> SELECT * FROM emp WHERE salary &lt; (SELECT ROUND(AVG(salary)) FROM emp); </li>\r\n                <li> SELECT * FROM emp WHERE IN(서브쿼리); </li>\r\n                <li> SELECT * FROM emp WHERE salary &lt; ALL(서브쿼리); </li>\r\n                <li> <small> 모든 조건을 만족해야함 </small> </li>\r\n                <li> SELECT * FROM emp WHERE salary &lt; ANY(서브쿼리); </li>\r\n                <li> <small> 단 1개의 조건만 만족을 해도 된다. </small> </li>\r\n                <span className=\"sstitle\"> 서브쿼리로 테이블 생성 </span>\r\n                <li> CREATE TABLE 테이블 AS (SELECT * from 테이블 WHERE salary &lt; 1000)  </li>\r\n                <li> CREATE TABLE 테이블 AS (SELECT * FROM 테이블 WHERE 1=0;) , 테이블의 필드만 복사  </li>\r\n                <span className=\"sstitle\"> 서브쿼리를 이용하여 다른 테이블에 레코드 넣기 </span>\r\n                <li> INSERT INTO 테이블 (SELECT * FROM 테이블) </li>\r\n                <span className=\"sstitle\"> 서브쿼리로 테이블 레코드 수정하기 </span>\r\n                <li> UPDATE 테이블 SET 필드=(서브쿼리) WHERE 조건 </li>\r\n                <li> UPDATE 테이블 SET (필드1,필드2) = (필드2개인 서브쿼리) WHERE 조건 </li>\r\n                <span className=\"sstitle\"> 서브쿼리 조건에 맞는 데이터 삭제 </span>\r\n                <li> DELETE FROM 테이블 WHERE 필드-(서브쿼리) </li>\r\n                {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"View\"> View  </a> </span>\r\n              <small> 테이블의 일부를 뽑아서 사용 , 테이블계의 함수라고 생각하면 편함 , 삽입,삭제,갱신에는 제약이 있음 </small>\r\n              <small> 뷰 처리과정 : 뷰조회 - 뷰권한확인 - 테이블조회쿼리반환 - 테이블조회 - 결과출력 </small>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 뷰 생성하기 </span>\r\n                <li> CREATE [OR REPLACE] [FORCE|NOFORCE] VIEW [스키마.]뷰명 AS 서브쿼리 [WITH CHECK OPTION] [WITH READ ONLY]; </li>\r\n                <li> [FORCE] : 테이블존재하지않아도 생성 </li>\r\n                <li>[NOFORCE] : 뷰가 이미 존재하면  생성X </li>\r\n                <li> [WITH CHECK OPTION] : 뷰 내에서만 UPDATE,INSERT </li>\r\n                <li>[WITH READ ONLY] : SELECT만 가능 </li>\r\n                <span className=\"sstitle\"> 뷰 삭제 </span>\r\n                <li> DROP VIEW 뷰명 [ CASCADE CONSTRAINTS PURGE ]; </li>\r\n                <span className=\"sstitle\"> 뷰 사용 불가능한 경우 </span>\r\n                <li> NOTNULL 필드이 있는 경우 </li>\r\n                <li> 가상필드이 존재하면 INSERT , UPDATE 사용 불가 </li>\r\n                <li> DISTINCT인 경우 DML명령 사용불가 </li>\r\n                <li> 그룹함수나 GROUP BY 포함한 경우에도 DML명령 사용불가  </li>\r\n                <span className=\"sstitle\">  </span>\r\n                <li>  </li>\r\n\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Role\"> Role  </a> </span>\r\n              <small> 권한들을 보관할 수 있는 리스트 , DB사용자에게 줄 권한들을 미리 정해놓을 수 있음  </small>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 롤 생성 </span>\r\n                <li> CREATE ROLE 롤명  </li>\r\n                <span className=\"sstitle\"> 롤 제거 </span>\r\n                <li> DROP ROLE 롤명 </li>\r\n                <span className=\"sstitle\"> 롤 권한 추가 </span>\r\n                <li> GRANT UPDATE ON 권한 TO 롤명; </li>\r\n                <span className=\"sstitle\"> 롤 권한 삭제 </span>\r\n                <li> GRANT DELETE ON 권한 TO 롤명; </li>\r\n                <span className=\"sstitle\"> 롤 권한 조회 </span>\r\n                <li> GRANT SELECT ON 권한 TO 롤명; </li>\r\n                {/* <span className=\"sstitle\"> </span>\r\n                                <li>  </li> */}\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"Procedure\"> Procedure </a> </span>\r\n              <li> <small> 동작을 일괄적으로 처리하는 데 사용, SQL을 프로시저로 만들어서 일괄적으로 처리 가능 </small></li>\r\n              <li> <small> 특정한 로직만 처리하고 반환은 하지 않음 </small></li>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 프로시저 생성  </span>\r\n                <li> <small> CREATE OR REPLACE [PROCEDURE,VIEW,FUNCTION 등] 프로시저명( 변수명 IN 데이터타입, ... )\r\n                  [RETURN 데이터타입 , FUNCTION일때 사용] IS [추가적인변수선언]\r\n                  BEGIN 동작쿼리 END [파라미터명];</small>  </li>\r\n                <li> CREATE OR REPLACE PROCEDURE procedure_company( c_name IN VARCHAR2, c_age IN NUMBER)\r\n                  IS c_dept := '회계'; BEGIN INSERT INTO (name,age,dept) VALUES (c_name,c_age,c_dept);\r\n                  COMMIT; END procedure_company; </li>\r\n                <span className=\"sstitle\"> 프로시저 실행 </span>\r\n                <li> <small> EXEC 프로시저명(변수값,변수값); </small> </li>\r\n                <li> EXEC procedure_company('홍길동',100); </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"PL/SQL\"> PL/SQL </a> </span>\r\n              <li> <a href=\"https://m.blog.daum.net/wetet/1746\" target='_blank'> 참고 </a> </li>\r\n              <li> <small> SQL을 확장한 형태 , 오라클에 내장된 프로시저 언어 , 제어문,반목문 지원 </small> </li>\r\n              <li className=\"col_r\"> 내용이 너무 많아서 나중에 공부</li>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> PL/SQL 구조 </span>\r\n                <li> DECLARE(선언) : BEGIN에서 참조할 변수,상수,커서 등을 포함 </li>\r\n                <li> BEGIN(실행) : SQL문과 block내에서 데이터 처리르 위한 PL/SQL을 포함 </li>\r\n                <span className=\"mblock\">\r\n                  <li> <small> IF 조건문 사용 </small> </li>\r\n                  <li> IF 조건 THEN 코드;</li>\r\n                  <li> ELSIF 조건 THEN 코드;</li>\r\n                  <li> ELSE 코드; </li>\r\n                  <li> END IF; </li>\r\n                  <li> RETURN 변수; , 조건문에서 변경된 값을 변수에 반환 </li>\r\n                  <li> <small> CASE 조건문 사용 </small> </li>\r\n                  <li> SELECT </li>\r\n                  <li> CASE WHEN 조건 THEN '값' </li>\r\n                  <li> ELSE '값' </li>\r\n                  <li> END  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                <li> EXCEPTION(예외처리) : 에러가 발샐할 경우 수행하는 곳 </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> 명령어 </span>\r\n                <li> ACCEPT : 유저에게 입력받아 지정한 변수에 저장 </li>\r\n                <li> VARIABLE : </li>\r\n                <li> PRINT : </li>\r\n                <li> EXECUTE : PL/SQL문을 실행 </li>\r\n                <li>  </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n\r\n            <div className='mblock'>\r\n              <details>\r\n                <summary className='stitle'> 오라클데이터 타입과 자바 데이터 타입\r\n                  <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                <div className='sblock'>\r\n                  <div className='sstitle'> 비교 </div>\r\n                  <div className='mblock'>\r\n                    <li> Oracle : Java </li>\r\n                    <li> char(),varchar() : String </li>\r\n                    <li> number : String,int,double </li>\r\n                    <li> Date,Timestamp : java.sql.Date, String, java.sql.Time java.sql.Timestamp </li>\r\n                    <li> CLOB : String </li>\r\n                    <li> BLOB : String </li>\r\n                    <li>  </li>\r\n                  </div>\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/*  */}\r\n\r\n            <span className=\"mblock\">\r\n              <span className=\"stitle\"> <a name=\"기타\">  기타 </a> </span>\r\n              <span className=\"sblock\">\r\n\r\n                <span className=\"sstitle\"> cmd창에서 간격 조절 </span>\r\n                <li> SET LINESIZE 문자수; </li>\r\n                <li> SET PAGESIZE 라인수; </li>\r\n                <li> COL 필드명 FOR a출력자리공간(숫자로 a뒤에 입력); </li>\r\n                <span className=\"sstitle\"> SELECT로 출력할 때 문자열 적어서 출력하는 방법 </span>\r\n                <li> SELECT 필드 ||'문자열'|| 필드 ~~~; </li>\r\n                <span className=\"sstitle\"> 비어있는 테이블 </span>\r\n                <li> SELECT 필드,계산값 등 FROM dual; </li>\r\n                <span className=\"sstitle\"> </span>\r\n                <li>  </li>\r\n\r\n              </span>\r\n            </span>\r\n          </ul>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default DBOracleBasic;\r\n","import React from 'react';\r\n\r\nconst DBMySQLBasic = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 기초 지식 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 DELETE, TRUNCATE, DROP의 차이 </h2>\r\n            <li> DELETE : 데이터 지워짐, 공간 그대로, 되돌릴수 있음, flush privileges 필요 </li>\r\n            <li> TRUNCATE : 데이터 지워짐, 공간 지워짐, 인덱스 지워짐, 되돌릴수 없음, 테이블은 생존 </li>\r\n            <li> DROP : 테이블 전체를 지워버림, 되돌릴 수 없음 , 실무에서는 위험할듯 싶다. </li>\r\n            <li> 완전 삭제순 DROP {\">\"} TRUNCATE {\">\"} DELETE </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li> * : 전체 </li>\r\n            <li> % : 외부에서 접속 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 데이터베이스와 스키마 차이 </h2>\r\n            <li> mysql에서는 데이터베이스와 스키마가 같은 의미이다. </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 기본 세팅 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> create database DB명; </li>\r\n              <li> show variables like 'validate_password%';</li>\r\n              <li> set global validate_password.policy=LOW; </li>\r\n              <li> create user '사용자명'@'%' identified by '유저비밀번호'; </li>\r\n              <li> grant all privileges on *.* to '사용자명'@'%'; </li>\r\n              <li> flush privileges; </li>\r\n              <li>  </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 에러 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li> 1819 (HY000): Your password does not satisfy the current policy requirements\r\n                <div className=\"block3\">\r\n                  <li> 현재 비밀번호 권한 정책에 맞지 않음, 낮추거나 비번을 바꾸거나 </li>\r\n                  <li> show variables like 'validate_password%'; <small> 현재 패스워드 설정 보기 </small> </li>\r\n                  <li> LOW : Length </li>\r\n                  <li> MEDIUM : Length, 숫자, 대문자, 소문자, 특수문자 </li>\r\n                  <li> STRONG : dictionary file 이용 </li>\r\n                  <li> set global validate_password.policy=[LOW MEDIUM STRONG]; <small> 버전에 따라서 _ _이거나 _ .차이가 발생하는듯 싶다. </small> </li>\r\n                </div>\r\n              </li>\r\n              <li> 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)\r\n                <div className=\"block3\">\r\n                  <li> 비번이 틀리거나 원격접속 설정을 막았을때 발생 </li>\r\n                  <li> mysql -u root -p 입력 </li>\r\n                  <li> (실패) 엔터 </li>\r\n                  <li> (실패) cat /var/log/mysqld.log | grep 'temporary password' </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"block3\">\r\n                  <li>  </li>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"block3\">\r\n                  <li>  </li>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"block3\">\r\n                  <li>  </li>\r\n                </div>\r\n              </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 데이터 타입(정리중) </summary>\r\n\r\n          <h2 className='h2'> 📌 숫자 </h2>\r\n          <li> TINYINT (1바이트) </li>\r\n          <li> SMALLINT (2바이트) </li>\r\n          <li> MEDIUMINT (3바이트) </li>\r\n          <li> INT (4바이트) </li>\r\n          <li> BIGINT (8바이트) </li>\r\n          <li> DECIMAL(정수+소수점자릿수,소수점자릿수) # 정수+소수점자릿수는 최대 65 </li>\r\n          <li> FLOAT(0~24) # float 실수 </li>\r\n          <li> FLOAT(25~53) # double 실수 </li>\r\n          <li> FLOAT(정수+소수점자릿수,소수점자릿수) # 자릿수가 넘으면 자동 반올림</li>\r\n          <li> BIT(1~64) # 자릿수보다 적게 입력하면 앞쪽에 0을 추가해줌\r\n            <li> 정확하지는 않지만 값을 넣을 때 b'숫자' 와 같이 넣는것 같다.(나중에 확인 필요) </li>\r\n          </li>\r\n\r\n          <h2 className='h2'> 📌 문자 </h2>\r\n          <li> CHAR(0~255) # 자릿수 값보다 작으면 뒤쪽을 공백으로 메움 </li>\r\n          <li> VARCHAR(0~65535) #  </li>\r\n          <li> BINARY() #바이너리 형태 </li>\r\n          <li> VARBINARY() #바이너리 형태 </li>\r\n          <li> TINYBLOB,BLOB,MEDIUMBLOB,LONGBLOB # 대소문자 구분x  </li>\r\n          <li> TINYTEXT,TEXT,MEDIUMTEXT,LONGTEXT # 문자열 , 기본값을 가질수 없음 , 대소문자를 구분 </li>\r\n          <li> ENUM('데이터값1','데이터값2',...) # 65536개의 데이터 집합</li>\r\n          <li>  </li>\r\n\r\n          <h2 className='h2'> 📌 날짜, 시간 </h2>\r\n          <li> DATE # 'YYYY-MM-DD' </li>\r\n          <li> DATETIME # 'YYYY-MM-DD HH:MM:SS' </li>\r\n          <li> TIMESTAMP #  </li>\r\n          <li> TIME # 'HH:MM:SS' , 'HHH:MM:SS' </li>\r\n          <li> YEAR # 4자리숫자나문자 : 1901~2155  </li>\r\n          <li>  </li>\r\n          <li>  </li>\r\n\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 권한(정리중) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 유저들 접근 권한 조회 </h2>\r\n            <li> select user,select_priv from mysql.user; <small> # select 수행 권한 </small> </li>\r\n            <li> select user,insert_priv from mysql.user; <small> # insert 수행 권한 </small> </li>\r\n            <li> select user,update_priv from mysql.user; <small> # update 수행 권한 </small> </li>\r\n            <li> select user,delete_priv from mysql.user; <small> # delete 수행 권한 </small> </li>\r\n            <li> select user,create_priv from mysql.user; <small> # create 수행 권한 </small> </li>\r\n            <li> select user,drop_priv from mysql.user; <small> #  drop 수행 권한 </small> </li>\r\n            <li> select user,reload_priv from mysql.user; <small> # reload 수행 권한 </small> </li>\r\n            <li> select user,shutdown_priv from mysql.user; <small> # shutdown 수행 권한 </small> </li>\r\n            <li> select user,process_priv from mysql.user; <small> # process 관리 권한 </small> </li>\r\n            <li> select user,grant_priv from mysql.user; <small> # 자신의 권한 위임 권한 </small> </li>\r\n            {/*<li> select user,references_priv from mysql.user; <small> #  수행 권한 </small> </li>*/}\r\n            <li> select user,index_priv from mysql.user; <small> #  index 수행 권한 </small> </li>\r\n            <li> select user,alter_priv from mysql.user; <small> #  alter 수행 권한 </small> </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 데이터베이스 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 접속 </h2>\r\n            <li> cmd창 열기  </li>\r\n            <li> mysql -u root -p비밀번호 <small> mysql 로그인</small> </li>\r\n            <li> show variables like \"%version%\" <small> mysql 관련정보 </small> </li>\r\n            <li> select version(); <small> mysql 버전 확인 </small>\r\n              <li> mysql workbench에서 버전 확인 하는 방법 </li>\r\n              <li> Edit - Preferences - Modeling - MySQL - 버전확인   </li>\r\n            </li>\r\n            <li> exit # mysql 버전 확인 </li>\r\n\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <li> create database DB명;  </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <li> SHOW DATABASES; <small> // 데이터베이스 전체 조회, 대문자 중요 </small> </li>\r\n            <li> SELECT DATABASE(); <small> // 현재 사용중인 데이터베이스 조회, 대문자 중요 </small> </li>\r\n            <li> select host,user from user; <small> use mysql, 사용자 조회 </small> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <li> 🎈 데이터베이스 이름 변경하는 방법 , mysql에서 exit로 나간후 사용\r\n              <div className=\"block4\">\r\n                <li> mysqldump -u root -p 기존DB명 {\">\"} 기존DB명.sql </li>\r\n                <li> mysqldump -u root -p --routines 기존DB명 {\">\"} 기존DB명.sql </li>\r\n                <li> mysql -u root -p -e \"CREATE DATABASE 새DB명\" </li>\r\n                <li> mysql -u root -p 새DB명 {\"<\"} 기존DB명.sql </li>\r\n                <li> mysql -u root -p -e \"DROP DATABASE 기존DB명\" </li>\r\n              </div>\r\n            </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <li> DROP DATABASE 삭제할DB명; <small> 데이터베이스 삭제 </small> </li>\r\n            <li> DROP DATABASE IF EXISTS DB명; <small> 데이터베이스가 있으면 삭제, 오류 발생하지 않음 </small> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 etc </h2>\r\n            <li> USE 데이터베이스명 <small> 현재 데이터베이스 변경 </small> </li>\r\n            <li> ALTER DATABASE DB명 CHARACTER SET=문자집합명 COLLATE=콜레이션명\r\n              <div className='block4'>\r\n                <li> 문자집합명 : utf8(1~3바이트) , euckr(1~2바이트) # 문자 인코딩 방식 </li>\r\n                <li> 콜레이션명 : utf8_bin , utf8_general_ci(디폴트값) , euckr_bin , euckr_korean_ci # 문자 비교 방식 </li>\r\n              </div>\r\n            </li>\r\n            <li> </li>\r\n\r\n\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <li>  </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 사용자 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <li> create user 사용자명; <small> 유저 생성 </small> </li>\r\n            <li> create user '유저명'@'[localhost IP주소 %]' identified by '유저비밀번호'; <small> 유저 생성 </small> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <li> select user, host from mysql.user; <small> mysql 데이터베이스에 있는 사용자와 호스트 조회 </small></li>\r\n            <li> show grants for '사용자명'; <small> 사용자 권한 조회 </small> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <div className=\"block4\">\r\n              <li> 🎈 사용자 비밀번호 변경 </li>\r\n              <div className=\"block4\">\r\n                <li> use mysql; </li>\r\n                <li> (mysql 5.x) update user set password=PASSWORD('변경할새로운비밀번호') where user='사용자명' </li>\r\n                <li> (mysql 8.x) alter user '유저명'@'%' identified with mysql_native_password by '변경할비번'; </li>\r\n                <li> flush privileges; </li>\r\n              </div>\r\n              <li> 🎈 root 비밀번호 변경 </li>\r\n              <div className=\"block4\">\r\n                <li> update mysql.user set authentication_string=null where User='root'; </li>\r\n                <li> flush privileges; </li>\r\n                <li> exit; </li>\r\n                <li> mysql -u root </li>\r\n                <li> alter user 'root'@'localhost' identified with caching_sha2_password by '새로운비밀번호입력'; </li>\r\n                <li> flush privileges; </li>\r\n              </div>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <li> 🎈 사용자 삭제1\r\n              <li> drop user 유저명; </li>\r\n              <li> DROP USER '사용자명'@'localhost'; </li>\r\n            </li>\r\n            <li> 🎈 사용자 삭제2\r\n              <li> delete from user where user='삭제할유저명' </li>\r\n              <li> flush privileges; </li>\r\n            </li>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <li> grant [all 권한명] privileges on 데이터베이스명.[* 테이블명] to '유저명'@'[localhost IP주소 %]'; <small> 사용자에게 권한주기 </small></li>\r\n            <li> grant all privileges on 데이터베이스명.[* 테이블명] to '유저명'@'[localhost IP주소 %]'\r\n              identified by '유저비밀번호'; <small> 사용자 생성+권한 주기 </small></li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <li> select host,user from user; <small> use mysql, 사용자 조회 </small> </li>\r\n            <li> show grants for 유저명@[localhost IP주소 %] <small> 유저 권한 조회 </small> </li>\r\n            <li> SELECT user(); <small> # 현재 사용자 확인 </small> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <li> revoke [all 권한명] privileges on DB명.[* 테이블명] from 유저명.[localhost IP주소 %]; </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 테이블 </summary>\r\n          <div className='block2'>\r\n\r\n\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <li> 🎈 테이블 생성\r\n              <li> CREATE TABLE 테이블명 (\r\n                <li> 컬럼명1 컬럼타입, </li>\r\n                <li> 컬럼명2 컬럼타입 NOT NULL, </li>\r\n                <li> 컬럼명3 컬럼타입 UNIQUE, </li>\r\n                <li> 컬럼명4 컬럼타입 PRIMARY KEY, </li>\r\n                <li> 컬럼명5 컬럼타입 FOREIGN KEY, </li>\r\n                <li> 컬럼명6 컬럼타입 DEFAULT=기본값, </li>\r\n                <li> [CONSTRAINT 제약조건명] 제약조건 컬럼명1, </li>\r\n                <li> [CONSTRAINT 제약조건명] FOREIGN KEY 컬럼명2 REFERENCES 참조테이블명(참조컬럼명)\r\n                  ON UPDATE 옵션 ON DELETE 옵션\r\n                  <div className=\"block4\">\r\n                    <li> ON UPDATE 옵션 :  참조되는 테이블이 데이터가 수정될 때 , 참조하는 테이블을 어떻게 할것인지   </li>\r\n                    <li> ON DELETE 옵션 :  참조되는 테이블이 데이터가 삭제될 때 , 참조하는 테이블을 어떻게 할것인지   </li>\r\n                    <div className=\"block4\">\r\n                      <li> 옵션\r\n                        <li> CASCADE : 참조되는 테이블에서 데이터를 삭제,수정하면 참조하는 테이블 데이터 같이 삭제,수정</li>\r\n                        <li> SET NULL : 참조되는 테이블에서 데이터를 삭제,수정하면 참조하는 테이블 데이터 NULL</li>\r\n                        <li> NO ACTION : 참조되는 테이블에서 데이터를 삭제,수정하면 참조하는 테이블 데이터 변경 x</li>\r\n                        <li> SET DEFAULT : 참조되는 테이블에서 데이터를 삭제,수정하면 참조하는 테이블 데이터 필드 기본값으로 설정 </li>\r\n                        <li> RESTRICT :  참조하는 테이블에서 데이터가 남아있으면, 참조되는 테이블의 데이터 삭제,수정 불가능 </li>\r\n                      </li>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </li>\r\n              <li> ) </li>\r\n            </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <li> SHOW TABLES; <small> 사용중인 데이터베이스에 있는 모든 테이블 조회 </small> </li>\r\n            <li> SHOW CREATE TABLE 테이블명 <small> 테이블 생성 쿼리 조회 </small> </li>\r\n            <li> DESC 테이블명; <small> 테이블 조회 </small> </li>\r\n            <li> select [* 컬럼명 컬럼명1,컬럼명2,...] from 테이블명;  </li>\r\n            <li> SELECT 별칭1.컬럼명1, 별칭2.컬럼명1 FROM 테이블1 AS 별칭1, 테이블2 AS 별칭2 </li>\r\n            <li> select [* 컬럼명] from 테이블명 ORDER BY 컬럼 ASC; <small> 오름차순 </small> </li>\r\n            <li> select [* 컬럼명] from 테이블명 ORDER BY [컬럼 컬럼1,컬럼2,...]; <small> 오름차순 </small> </li>\r\n            <li> select [* 컬럼명] from 테이블명 ORDER BY 컬럼 DESC; <small> 내림차순 </small> </li>\r\n            <li> select 컬럼명1,컬럼명2 from 테이블명 ORDER BY 컬럼명1 DESC, 컬럼명2 ASC; <small> 컬럼명1 내림차순, 컬럼명2 오름차순 </small> </li>\r\n            <li> select [* 컬럼명] from 테이블명 WHERE [조건식, 컬럼명=\"값\"]; </li>\r\n            <li> SELECT * FROM 테이블명 WHERE 컬럼명1 {'>'} 10 AND 컬럼명1 {'<'} 30 </li>\r\n            <li> SELECT * FROM 테이블명 WHERE 컬럼명1 {'>'} 10 OR 컬럼명2 {'>'} 10 </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <li> DROP TABLE 테이블명 <small> 테이블 삭제, 테이블 내부 전부 삭제 </small> </li>\r\n            <li> DROP TABLE IF EXISTS 테이블명 <small> 테이블이 있으면 삭제, 오류 발생하지 않음 </small> </li>\r\n            <li>  </li>\r\n\r\n\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <li> grant select on 데이터베이스명.* to 유저명@[localhost IP주소 %]; <small> 테이블 조회 권한 부여 </small> </li>\r\n            <li> grant insert on 데이터베이스명.* to 유저명@[localhost IP주소 %]; <small> 테이블 삽입 권한 부여 </small> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <li>  </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <li> TRUNCATE TABLE 테이블명 <small> 테이블의 구조는 남기고 테이블 내부의 데이터만을 삭제 </small>  </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 프로시저 </summary>\r\n          <div className='block2'>\r\n\r\n\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <li>  </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <li> UPDATE mysql.proc SET db=기존DB명 WHERE db=새로운DB명 <small> 프로시저 새로운 DB로 이동 </small> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <li>  </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 뷰 </summary>\r\n          <div className='block2'>\r\n\r\n\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <li>  </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <li>  </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 컬럼 </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <li>  </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 필드 </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 Create </h2>\r\n            <li> ALTER TABLE 테이블명 ADD 필드명 필드타입 제약조건 <small>  테이블에 필드를 추가</small> </li>\r\n            <li> ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 FOREIGN KEY 필드명 REFERENCES 테이블명 필드명 <small>  </small></li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Update </h2>\r\n            <li> ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 제약조건 필드명 <small> 테이블 기존필드에 제약조건을 추가 </small> </li>\r\n            <li> ALTER TABLE 테이블명 MODIFY COLUMN 필드명 필드타입 제약조건 <small> 테이블에 있는 기존 필드타입을 변경 </small></li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 Delete </h2>\r\n            <li> ALTER TABLE 테이블명 DROP 필드명 <small> 테이블에 필드를 삭제 </small> </li>\r\n            <li> ALTER TABLE 테이블명 DROP INDEX 제약조건명 <small> 제약조건명을 찾아서 삭제 </small> </li>\r\n            <li> ALTER TABLE 테이블명 DROP FOREIGN KEY 제약조건명 <small> 제약조건명으로 외래키를 삭제 </small></li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Create </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Read </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Update </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n            <h2 className='h2'> 📌 authority Delete </h2>\r\n            <li> </li>\r\n            <li> </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 권한명 - 옵션 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> all </li>\r\n            <li> select </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <span className=\"lblock\">\r\n\r\n        <span className=\"mtitle\"> <a name=\"MySQL Study\">  MySQL Study  </a> </span>\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> MySQL 시작, 설정\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n\r\n              <div className='sstitle'> 문자집합(Character Set)과 콜레이션(Collation) </div>\r\n              <div className='mblock'>\r\n                <li> 문자집합은 문자가 인코딩 되는 방식이고 콜레이션은 몇몇 데이터 타입에 대하여 어떻게 문자를\r\n                  비교할 것인지를 설정하는 방법(대소문자구분)이다. </li>\r\n                <li> MySQL 서버와 클라이언트가 서로 데이터를 주고 받는 데이터의 값을 설정 가능하다.\r\n                  그래서 글자가 깨지는 현상이 발생한다면 한번 생각을 고려해볼 필요가 있다. </li>\r\n                <li> 서버 - DB - 테이블 - 필드(컬럼) 이렇게 4가지의 단계를 고려해 볼 수 있다. </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li> </li>\r\n                <li> </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> 주석 </div>\r\n              <div className='mblock'>\r\n                <li> # : 한줄 주석 </li>\r\n                <li> -- : 한줄 주석 </li>\r\n                <li> /* */ : 여러줄 주석 </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> 제약 조건\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'>  종류 </div>\r\n              <div className='mblock'>\r\n                <li> NOT NULL # 데이터의 값이 비어있는 것을 허용하지 않음 </li>\r\n                <li> UNIQUE # 중복을 허용하지 않음 </li>\r\n                <li> PRIMARY KEY # NOT NULL + UNIQUE </li>\r\n                <li> FOREIGN KEY # 외래키, 다른 테이블 참조값으로 사용\r\n                  <li> FOREIGN KEY 필드명 REFERENCES 테이블명 필드명 </li>\r\n                </li>\r\n                <li> DEFAULT # 필드의 기본 값을 설정 </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> 연산자\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 산술 연산자 </div>\r\n              <div className='mblock'>\r\n                <li> + - * / # 사칙연산 </li>\r\n                <li> DIV # 몫 , 나머지는 버림 </li>\r\n                <li> % , MOD # 나머지 </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> 대입 연산자 </div>\r\n              <div className='mblock'>\r\n                <li> = # 대입 연산 , UPDATE나 SET에서는 대입 연산 </li>\r\n                <li> = # 비교 연산 , 이외에는 비교 연산 </li>\r\n                <li> := # 대입 연산  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> 비교 연산자 </div>\r\n              <div className='mblock'>\r\n                <li> = , != , {'<>'} #비교연산 </li>\r\n                <li> {' < <= > >=  '} </li>\r\n                <li> {' <=> '} # 양쪽 모두 NULL이면 참을 반환, 하나만 NULL이면 거짓 </li>\r\n                <li> A IS B # A가 B와 같으면 참 </li>\r\n                <li> A IS NOT B # A가 B와 같지 않으면 참 </li>\r\n                <li> A IS NULL # A가 NULL이면 참 </li>\r\n                <li> A IS NOT NULL # A가 NULL이 아니면 참 </li>\r\n                <li> BETWEEN A AND B # A 와 B 사이일 때 </li>\r\n                <li> NOT BETWEEN A AND B # A 와 B 사이가 아닐 때 </li>\r\n                <li> A IN(데이터값 리스트) # A가 데이터값 리스트에 존재하면 참 </li>\r\n                <li> A NOT IN(데이터값 리스트) # 데이터값 리스트에 존재하지 않으면 참 </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> 논리 연산자 </div>\r\n              <div className='mblock'>\r\n                <li> AND , {'&&'} </li>\r\n                <li> OR , {'||'} </li>\r\n                <li> XOR </li>\r\n                <li> NOT , ! </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> 비트 연산자 </div>\r\n              <div className='mblock'>\r\n                <li> {'&'} # and\r\n                  <li> b'1111' {'&'} b'1010' </li>\r\n                </li>\r\n                <li> {'|'} # or </li>\r\n                <li> {'^'} # xor </li>\r\n                <li> {'~'} # not </li>\r\n                <li> {'<<'} # left shift </li>\r\n                <li> {'>>'} # right shift </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> 조건 </div>\r\n              <div className='mblock'>\r\n                <li> SELECT CASE A\r\n                  <li> WHEN B THEN '리턴값1' # A가 B와 일치하면 리턴값1 리턴</li>\r\n                  <li> WHEN C THEN '리턴값2' # A가 C와 일치하면 리턴값2 리턴</li>\r\n                  <li> ELSE '리턴값3' # A가 아무것도 일치하지 않으면 리턴값3 리턴 , ELSE값이 없으면 NULL반환 </li>\r\n                </li>\r\n                <li> END; </li> <br />\r\n\r\n                <li> IF(조건,참값,거짓값) # </li>\r\n                <li> IFNULL(인수1,인수2) #1번째 인수가 NULL이 아니면 1번째 인수 반환, NULL이면 2번째 인수 반환  </li>\r\n                <li> NULLIF(인수1,인수2) #인수1,인수2가 같으면 NULL반환, 인수1,인수2가 같지 않으면 인수1 반환 </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> 패턴 </div>\r\n              <div className='mblock'>\r\n                <li> WHERE 필드명 LIKE '%A' </li>\r\n                <li> WHERE 필드명 LIKE '%A%' </li>\r\n                <li> WHERE 필드명 LIKE 'A%' </li>\r\n                <li> WHERE 필드명 LIKE '_A' </li>\r\n                <li> WHERE 필드명 LIKE '_A_' </li>\r\n                <li> WHERE 필드명 LIKE 'A_' </li>\r\n                <div className='sstitle'> 패턴 와일드카드 </div>\r\n                <div className='sblock'>\r\n                  <li> % : 0개 이상의 문자 </li>\r\n                  <li> _ : 1개 문자를 대체 (어떤 문자든 가능)  </li>\r\n                </div>\r\n                <li> WHERE 필드명 REGEXP '정규표현식문자열'; </li>\r\n                <li> WHERE 필드명 NOT REGEXP '정규표현식문자열'; </li>\r\n                <li> . : 1개의 문자 대체, \\n문자는 제외 </li>\r\n                <li> * : 0번 이상의 문자 패턴 반복 </li>\r\n                <li> + : 1번 이상의 문자 패턴 반목 </li>\r\n                <li> ^ : 문자열 첫 시작을 뜻함 </li>\r\n                <li> $ : 문자열 끝을 의미 </li>\r\n                <li> | : 선택을 의미 </li>\r\n                <li> [문자] : 어떠한 문자를 의미 </li>\r\n                <li> [^문자] : 어떠한 문자를 제외한 것을 의미 </li>\r\n                <li> {'{n}'} : 반복 횟수를 지정 </li>\r\n                <li> {'{a,b}'} : 반복 최소,최대 횟수를 지정 </li>\r\n              </div>\r\n\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> USE, SHOW, DESC, SET\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n\r\n\r\n              <div className='sstitle'> SHOW </div>\r\n              <div className='mblock'>\r\n                <li> show variables like 'validate_password%'; <small> # 비밀번호 정책 보기 </small> </li>\r\n                <li> show variables; # 환경변수 보기 </li>\r\n                <li> show variables like 'char%'; # 서버에 사용되는 문자셋 조회 </li>\r\n                <li> show table status from DB명 like '테이블명%'; #테이블에 사용되는 문자셋 조회  </li>\r\n\r\n                <li> show create table 테이블명; # 테이블 생성정보 조회, 문자셋도 조회 가능</li>\r\n                <li> show grants for 유저명@ </li>\r\n                <li> show columns from user; <small> # 사용자들의 컬럼 조회 </small> </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> DESC </div>\r\n              <div className='mblock'>\r\n                <li> desc user; # user 테이블 조회 </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> SET </div>\r\n              <div className='mblock'>\r\n                <li> SET global validate_password[_policy .policy]=[LOW,MIDIUM,STRONG] <small> # policy부분 문법 확인해보기 </small> </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> DML : SELECT, INSERT, UPDATE, DELETE\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li> Data Manipulation Language </li>\r\n                <li> DB 테이블의 데이터를 조회, 삽입, 수정, 삭제하는 명령어 </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> INSERT </div>\r\n              <div className='mblock'>\r\n                <li> INSERT INTO 테이블명 (필드명2,필드명1.필드명3) VALUES('문자열값1','문자열값2',정수값3) # 테이블에 필드 순서 상관없이\r\n                  데이터 값을 넣어 레코드 추가 </li>\r\n                <li> INSERT INTO 테이블명 VALUES('문자열값1','문자열값2',정수값3) # 테이블에 필드순서대로 데이터 값을 넣어 레코드 추가\r\n                  <div className='sblock'>\r\n                    <li> DEFAULT, AUTO_INCREMENT 제약조건은 필드값 생략가능 </li>\r\n                  </div>\r\n                </li>\r\n                <li> USE DB명; # 사용자 추가하기\r\n                  <li> INSERT INTO USER (HOST,USER,PASSWORD) VALUES ('접근권한('localhost','%'),'사용자명',password('비밀번호')); </li>\r\n                  <li> FLSUH PRIVILEGES; </li>\r\n                </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> UPDATE </div>\r\n              <div className='mblock'>\r\n                <li> UPDATE 테이블명 SET 필드명1=데이터값1, 필드명2=데이터값2 WHERE 필드명=데이터값; # 테이블의\r\n                  조건에 맞는 데이터값을 수정 </li>\r\n                <li> UPDATE 테이블명 SET 필드명=데이터값; #필드의 모든 데이터값을 변경 </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> DELETE </div>\r\n              <div className='mblock'>\r\n                <li> DELETE FROM 테이블명 WHERE 필드명=데이터값; # 조건에 맞는 레코드 삭제 </li>\r\n                <li> DELETE FROM 테이블명; # 테이블 내부의 레코드 값만을 삭제 , 테이블 구조는 남아있음 </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> DDL : CREATE, DROP, ALTER\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li> Data Definition Language </li>\r\n                <li> DB 테이블을 생성, 변경, 삭제, 이름 변경을 DB 테이블 구조와 관련된 명령어 </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> DCL : GRANT, REVOKE\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li> Data Control Language </li>\r\n                <li> DB에 접근 권한을 주거나 회수하는 명령어 </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> GRANT </div>\r\n              <div className='mblock'>\r\n                <li> <span className=\"col_r\"> flush privileges; # GRANT 권한 후 적용 </span>  </li>\r\n                <li> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;\r\n                  <div className='sblock'>\r\n                    <li> 에러 : ERROR 1410 (42000): You are not allowed to create a user with GRANT </li>\r\n                    <li> create user 'root'@'%' [identified by 'abcd']; </li>\r\n                    <li> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION; </li>\r\n                    <li> 이렇게 하고나서 권한 주고 다시 삭제를 해야한다. </li>\r\n                    <li> revoke all on *.* from root@'%'; </li>\r\n                    <li> drop user 'root'@'%'; </li>\r\n                    <li> flush privileges; </li>\r\n                  </div>\r\n                </li>\r\n                <li> GRANT ALL PRIVILEGS ON DB명.테이블명 to '사용자명'@'localhost'; </li>\r\n                <li> GRANT ALL PRIVILEGS ON *.* to '사용자명'@'%'; </li>\r\n                <li> GRANT ALL PRIVILEGS ON *.* to '사용자명'@'특정IP주소'; </li>\r\n                <li> GRANT SELECT ON DB명.테이블명 to '사용자명'@'localhost';  </li>\r\n                <li> GRANT UPDATE(컬럼명1,컬럼명2) ON DB명.테이블명 to '사용자명'@'localhost'; </li>\r\n                <li> GRANT ALL PRIVILEGS ON *.* TO '사용자명'@'localhost' IDENTIFIED BY '비밀번호'; # 사용자 생성과 권한 주기</li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> REVOKE </div>\r\n              <div className='mblock'>\r\n                <li> REVOKE ALL ON DB명.* FROM '사용자명'@'localhost'; </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> TCL : COMMIT, ROLLBACK, SAVEPOINT\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li> Transaction Control Language </li>\r\n                <li> DML 명령어에 사용된 결과를 트랜잭션 단위로 제어하는 명령어 </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> COMMIT </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> ROLLBACK </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> SAVEPOINT </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> JOIN\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> INNER JOIN - 교집합 </div>\r\n              <div className='mblock'>\r\n                <li> 2개의 테이블에서 일치하는 레코드를 출력 </li>\r\n                <div className=\"sstitle\"> 표준 SQL 방식 </div>\r\n                <li> SELECT * FROM 테이블명1 INNER JOIN 테이블명2 ON 테이블명1.필드명 = 테이블명2.필드명; </li>\r\n                <li> SELECT * FROM 테이블명1 JOIN 테이블명2 ON 테이블명1.필드명 = 테이블명2.필드명; </li>\r\n                <div className=\"sstitle\"> MySQL 허용 방식 </div>\r\n                <li> SELECT * FROM 테이블명1,테이블명2 WHERE 테이블명1.필드명 = 테이블명2.필드명; </li>\r\n                <li> SELECT * FROM 테이블명1 AS a, 테이블명2 AS b WHERE a.필드명 = b.필드명; </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> LEFT JOIN , RIGHT JOIN </div>\r\n              <div className='mblock'>\r\n                <li> 2개의 테이블에서 일치하는 레코드를 출력 + 일치하지 않는 테이블1의 레코드도 출력  </li>\r\n                <li> SELECT * FROM 테이블명1 LEFT JOIN 테이블명2 ON 조건 </li>\r\n                <li> SELECT * FROM 테이블명1 LEFT JOIN 테이블명2 ON 조건 WHERE 테이블1조건 </li>\r\n                <li> 2개의 테이블에서 일치하는 레코드를 출력 + 일치하지 않는 테이블2의 레코드도 출력  </li>\r\n                <li> SELECT * FROM 테이블명1 RIGHT JOIN 테이블명2 ON 조건 </li>\r\n                <li> SELECT * FROM 테이블명1 RIGHT JOIN 테이블명2 ON 조건 WHERE 테이블1조건 </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> UNION </div>\r\n              <div className='mblock'>\r\n                <li> SELECT FROM 테이블명1 UNION SELECT FROM 테이블명2 # 2개의 테이블의 필드 갯수,타입,순서까지 일치해야함 , 중복 레코드 제거 </li>\r\n                <li> SELECT FROM 테이블명1 UNION ALL SELECT FROM 테이블명2 # 2개의 테이블의 필드 갯수,타입,순서까지 일치해야함, 중복 레코드 허용</li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <div className='sstitle'> Subquerry </div>\r\n              <div className='mblock'>\r\n                <li> 외부 쿼리(메인쿼리) 조건에 서크쿼리(SELECT문)를 넣음 </li>\r\n                <li> SELECT * FROM 테이블명 WHERE 필드명 IN ( SELECT문(서브쿼리) ) </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> 인덱스\r\n              <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li> 검색이 자주 사용되는 테이블에서 사용하면 좋다. </li>\r\n                <li> 필드 값 설명\r\n                  <div className='sblock'>\r\n                    <li> 1. Table : 테이블 이름 </li>\r\n                    <li> 2. Non_unique : 중복된 값 저장 가능 1, 아니면 0 </li>\r\n                    <li> 3. Key_name : 인덱스의 이름을 표시 , PRIMARY KEY값이면 RPIMARY 표시 </li>\r\n                    <li> 4. Seq_in_index : 인덱스에서의 해당 필드의 순서를 표시함. </li>\r\n                    <li> 5. Column_name : 필드명 </li>\r\n                    <li> 6. Collation : 정렬되는 방법 </li>\r\n                    <li> 7. Cardinality : 인덱스에 저장된 유일한 값들의 수를 표시함?? </li>\r\n                    <li> 8. Sub_part : 접두어 표시 ?? </li>\r\n                    <li> 9. Packed : 키가 압축되는 방법 표시 ?? </li>\r\n                    <li> 10. Null : NULL 저장가능 YES , 불가능하면 '' 공백표시 </li>\r\n                    <li> 11. Index_type : 인덱스에 사용되는 메소드 ??? </li>\r\n                    <li> 12. Comment : 그냥 인덱스 관련 주석 ?? </li>\r\n                    <li> 13. Index_comment : 기타 정보 표시 ?? </li>\r\n                    <li>  </li>\r\n                  </div>\r\n                </li>\r\n              </div>\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li> CREATE INDEX 인덱스명 ON 테이블명 (필드명1,필드명2) </li>\r\n                <li> CREATE INDEX 인덱스명 ON 테이블명 (필드명1 DESC) </li>\r\n                <li> CREATE INDEX 인덱스명 ON 테이블명 (필드명1 ASCC) </li>\r\n                <li> SHOW INDEX FROM 테이블명 </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\nexport default DBMySQLBasic;\r\n","import React from 'react';\r\n\r\nconst DBNamingConvention = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> DB 네이밍 컨벤션 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> 1. userId ❌ , user_id ✅ , _를 사용해서 이름을 짓는다. </li>\r\n                        <li> 2. dept_no가 아닌 department_no 처럼 축약하지 말고 사용할 것 </li>\r\n                        <li> 3. SELECT user.id FROM user; , 코드작동은 상관없지만 문법은 대문자 사용해볼것 </li>\r\n                        <li> 4. users 보다는 단수인 user 사용할 것 </li>\r\n                        <li> 5. PK 추천은 table명_id , 꼭 이렇게 할 필요는 없음 </li>\r\n                        <li> 6. FK는 참조table명_컬럼명, user_id </li>\r\n                        <li> 7. 테이블명을 prefix와 suffix를 사용하는 경우가 있는데 사용X, (user_TB , user_VM) </li>\r\n                        <li> 8. 컬럼에는 대문자를 사용하지 말것 </li>\r\n                        <li> 9. index는 user_ix_컬럼명1_컬럼명2...   </li>\r\n                        <li> 9. constraint는 제약조건테이블명_조건  </li>\r\n                        <li> 10. 데이터타입을 이름으로 사용하지 않는다. </li>\r\n                        <li> 11. 약어를 사용한다면 공통적으로 사용되는 약어를 사용해야한다. </li>\r\n                        <li> 12. 예약어를 사용하지 않는다. (user,table 등등) </li>\r\n                        <li> 13.  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 회사 관련 네이밍 </summary>\r\n                    <div className='block2'>\r\n                        <h2 className='h2'> 📌 컬럼 예시 </h2>\r\n                        <li> employee_no,empno : 직원 번호 </li>\r\n                        <li> employee_name, ename : 직원 이름 </li>\r\n                        <li> employee_email : 직원 이메일 </li>\r\n                        <li> employee_addr1 : 직원 주소 </li>\r\n                        <li> employee_addr2 : 직원 예비 주소 </li>\r\n                        <li> employee_location : 직원 근무지역 </li>\r\n                        <li> employee_phone : 직원 휴대폰 번호 </li>\r\n                        <li> last_name : 성 </li>\r\n                        <li> first_name : 이름 </li>\r\n                        <li> job : 직위 </li>\r\n                        <li> hiredate : 입사일 </li>\r\n                        <li> salary, sal : 월급 </li>\r\n                        <li> commision , comm : 커미션(수수료) , nvl함수와 같이 사용 </li>\r\n                        <li> commision_percent , comm_pct : 커미션(수수료) 퍼센트  </li>\r\n                        <li> department_no ,deptno : 부서 번호 </li>\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default DBNamingConvention;\r\n","import React from 'react';\r\n\r\nconst DBMariaBasic = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ GRANT(권한) <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> GRANT ALL PRIVILEGES ON DB명.* TO 유저명@localhost IDENTIFIED BY '비번'; </span>\r\n                                    <li> 유저에게 DB명의 모든 테이블 권한을 준다. </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ Database <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> show databases; </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\"> create database DB명; </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶  <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶  <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶  <small>  </small>\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DBMariaBasic;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst DBError = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> 오라클 DB 에러\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <li>  <div className=\"sstitle\"> ORA-12560: TNS:프로토콜 어댑터 오류 </div>\r\n                                        <div className=\"mblock\">\r\n                                            <li> 설명 : 오라클 DB에 접속이 불가능할 경우 </li>\r\n                                            <li> 해결 : 프로세스를 재시작하면 된다.  </li>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li> <div className=\"sstitle\"> ORA-28009: SYS(SYSDBA 또는 SYSOPER)로 접속해야 합니다. </div>\r\n                                        <div className=\"mblock\">\r\n                                            <li> 설명 : 사용자명을 sys로 로그인을 하면 안되는 경우 </li>\r\n                                            <li> 해결 : sys as sysdba를 사용해서 로그인을 해야한다. </li>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li> <div className=\"sstitle\"> ORA-00988: 비밀번호가 틀립니다. </div>\r\n                                        <div className=\"mblock\">\r\n                                            <li> 설명 : 비밀번호 입력이 틀린 경우 </li>\r\n                                            <li> 해결 : 비밀번호가 틀렸거나 혹은 \"\"로 비밀번호를 감싸주지 않을 경우 발생 </li>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li> <div className=\"sstitle\"> ORA-65096: 공통 사용자 또는 롤 이름이 부적합합니다. </div>\r\n                                        <div className=\"mblock\">\r\n                                            <li> 설명 : 사용자명이 틀린 경우 </li>\r\n                                            <li> 해결 : 오라클 c12부터 사용자명에 c##을 앞에 붙여서 사용을 해야한다. </li>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li> <div className=\"sstitle\"> ORA-00903: 테이블명이 부적합합니다 </div>\r\n                                        <div className=\"mblock\">\r\n                                            <li> 설명 : 오라클에서 예약어로 user 를 사용?하고 있어서 DB를 생성하는데 생성이 안된 케이스 </li>\r\n                                            <li> 해결 : 이름을 바꾸면 된다..</li>\r\n                                        </div>\r\n                                    </li>\r\n\r\n                                    <li> <div className=\"sstitle\"> ORA-00923: FROM 키워드가 필요한 위치에 없습니다 </div>\r\n                                        <div className=\"mblock\">\r\n                                            <li> 설명 : sql문을 잘못 작성하여서 from 키워드 인식 위치를 잘못판단해서 발생하는 에러 </li>\r\n                                            <li> 해결 : sql문 from 앞쪽을 보면 틀린 문법이 존재할 것이다. </li>\r\n                                        </div>\r\n                                    </li>\r\n\r\n                                    <li> <div className=\"sstitle\">  </div>\r\n                                        <div className=\"mblock\">\r\n                                            <li> 설명 : </li>\r\n                                            <li> 해결 : </li>\r\n                                        </div>\r\n                                    </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> MySQL DB 에러\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DBError;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst DBTable = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <div className='mblock'>\r\n                            <details>\r\n                                <summary className='stitle'> 게시판 테이블\r\n                                    <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                                <div className='sblock'>\r\n                                    <div className='sstitle'> 게시판 테이블(오라클) </div>\r\n                                    <div className='mblock'>\r\n                                        <li> CREATE TABLE board (\r\n                                            <li> board_no number generated always as identity primary key, </li>\r\n                                            <li> board_title varchar(180) not null, </li>\r\n                                            <li> board_content varchar(4000) not null, </li>\r\n                                            <li> board_writer varchar(30) not null,  </li>\r\n                                            <li> board_credate date default sysdate,  </li>\r\n                                            <li> board_upddate date default sysdate,  </li>\r\n                                            <li> board_viewcnt number default 0,  </li>\r\n                                            <li> board_goodcnt number default 0,  </li>\r\n                                            <li> board_badcnt number default 0,  </li>\r\n                                            <li> board_reportcount number default 0,  </li>\r\n                                            <li> board_state number default 1  </li>\r\n                                        </li>\r\n                                        <li> ); </li>\r\n                                    </div>\r\n                                </div>\r\n                            </details>\r\n                        </div>\r\n                        {/*  */}\r\n                        <div className='mblock'>\r\n                            <details>\r\n                                <summary className='stitle'> 고객 테이블\r\n                                    <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                                <div className='sblock'>\r\n                                    <div className='sstitle'>  </div>\r\n                                    <div className='mblock'>\r\n                                        <li> CREATE TABLE user (\r\n                                            <li> user_no number generated always as identity primary key, </li>\r\n                                            <li> user_name varchar(30) not null, </li>\r\n                                            <li> user_birth date not null, </li>\r\n                                            <li> user_gender varchar(3) not null, </li>\r\n                                            <li> user_id varchar(60) not null, </li>\r\n                                            <li> user_password varchar(120) not null, </li>\r\n                                            <li> user_email varchar(120) not null, </li>\r\n                                            <li> user_address varchar(120) not null, </li>\r\n                                            <li> user_phone varchar(11) not null, </li>\r\n                                            <li> user_rank number default 1, </li>\r\n                                            <li> user_state number default 1, </li>\r\n                                            <li> user_logincnt number default 0 </li>\r\n                                        </li>\r\n                                        <li> ); </li>\r\n                                    </div>\r\n                                </div>\r\n                            </details>\r\n                        </div>\r\n                        {/*  */}\r\n                        <div className='mblock'>\r\n                            <details>\r\n                                <summary className='stitle'> 고객 테이블\r\n                                    <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                                <div className='sblock'>\r\n                                    <div className='sstitle'>  </div>\r\n                                    <div className='mblock'>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </details>\r\n                        </div>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DBTable;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst DBErd = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <div className=\"lblock\">\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'>\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 설명 </div>\r\n                                <div className='mblock'>\r\n                                    <li> Entity Relationship Diagram </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> 기호 및 표기법 </div>\r\n                                <div className='mblock'>\r\n                                    <li> | : 1개와 연결 </li>\r\n                                    <li> ⪪ : 여러개와 연결  </li>\r\n                                    <li> ○ : 0개 </li>\r\n                                    <li>  </li>\r\n                                    <li> 실선 : 부모 테이블의 기본키를 자식테이블이 사용하는 경우 </li>\r\n                                    <li> 점선 : 부모 테이블의 기본키를 자식테이블이 사용하지 않는 경우 </li>\r\n                                    <li> 직사각형 : Entity </li>\r\n                                    <li> 타원 : Attribute </li>\r\n                                    <li> 마름모 : Relationship </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> 예시 </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DBErd;","import React from 'react';\r\n\r\nconst DPMvc2 = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVC2란? <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model + View + Controller으로 역할을 나누어서 코드를 설계하는 방식 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 역할을 분리하여 코드를 작성하면 유지보수, 개발효율, 개발자가 보기에 쉬워진다. </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVC2 구조 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Model </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 데이터를 담당하는 역할, DB와의 상호작용, 비즈니스 로직의 처리되는 데이터 등을 담당  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Controller </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Model 과 View를 이어주는 역할, View에서 어떤 명령을 하면 Controller에서 실행할 비즈니스 로직을 Model쪽에서 담당하게 함\r\n                                    </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> View </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자에게 보여주는 화면, UI를 담당 , 사용자 인터페이스 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVC2의 장단점 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 장점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_be\"> MVC2로 역할을 분담하여 처리를 하기 때문에 유지보수나 개발효율이 좋다. </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_r\"> 대규모 MVC2를 처리하기에는 복잡하고 Controller에 비중이 커지고 , 복잡해지기 때문에\r\n                                        큰 규모에서는 어울리지 않음 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DPMvc2;","import React from 'react';\r\n\r\nconst DPMvp = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVP란? <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model + View + Presenter로 이루어진 패턴 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 안드로이드 프로젝트에서 사용을 하는 패턴인 것 같음.. </li>\r\n                                    <li> MVC와의 차이는 View에게 표시할 방법을 주는 것이 아니라 데이터 만을 View에게 준다? </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVP 구조 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 어플리케이션에서 사용되는 데이터와 데이터를 처리하는 곳 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> View </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자의 화면 , UI를 처리하는 부분 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> Presenter </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> View에서 요청한 정보를 받아서 Model을 가공하여 다시 VIew에 전달해 주는 부분 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVP 장단점 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 장점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_be\"> 유닛 테스트로 활용 시 테스트 화면만 그려서 할 수 있다는 장점 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_r\"> 화면을 생성시 View , Model, Presenter, Interface 를 생성해야함 </li>\r\n                                    <li className=\"col_r\"> 프로젝트의 크기가 커지면 Presenter가 감당해야할 부분이 많아짐 </li>\r\n                                    <li className=\"col_r\">  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DPMvp;","import React from 'react';\r\n\r\nconst DPMvvm = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVVM란? <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model + View + ViewModel로 이루어진 패턴 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVVM 구조 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Model </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  어플리케이션에서 사용되는 데이터와 데이터를 처리하는 곳 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> View </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자의 화면 , UI를 처리하는 부분 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> ViewModel </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> View가 사용할 메서드와 필드를 구현하고 View에게 상태 변화를 알리는 부분 </li>\r\n                                    <li> View에서 2개의 모델에서의 데이터가 필요하다고 하면 2개의 데이터를 받아서 View에서\r\n                                        처리하는 것이 아니라 ViewModel에서 처리를 하고 View에게 보내준다.  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MVVM 장단점 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 장점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_be\">  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> 단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_r\"> 앱이 커지면 데이터 바인딩을 하는데 많은 메모리를 사용해야 한다. </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DPMvvm;","import React from 'react';\r\n\r\nconst DPGof = (props) => {\r\n    return (\r\n        <div className=\"common_style\">\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 디자인 패턴 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 생성 패턴(5가지) </h2>\r\n                        <li> 싱글톤 패턴(Singleton) </li>\r\n                        <div className=\"block4\">\r\n                            <li> 사용 예시 : 설정파일, 다크모드,  </li>\r\n                            <li> 인스턴스를 오직 1개만 생성(불필요한 자원의 낭비를 줄일수 있음) </li>\r\n                            <li> 멀티쓰레드 환경에서는 잘 생성할 필요가 있음 </li>\r\n                            <li> Synchronized, eagar initialization, DCL, Enum </li>\r\n                        </div>\r\n                        <li> 빌더 패턴(Builder) </li>\r\n                        <div className=\"block4\">\r\n                            <li> 객체를 생성할 때 매개변수의 순서,갯수 등을 고려하지 않게 만들어주는 패턴 </li>\r\n                            <li> (param1,param2,param3)를 객체.param2(2).param1(1).param3(3).build(); </li>\r\n                        </div>\r\n                        <li> 프로토타입(Prototype) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 추상 팩토리(Abstract Factory) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 팩토리 메소드(Factory Method) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n\r\n                        <h2 className='h2'> 📌 구조 패턴(7가지) </h2>\r\n                        <li> 어댑터 패턴(Adapter) </li>\r\n                        <div className=\"block4\">\r\n                            <li> 어댑터란 A와 C가 바로 연결되지 않는데 A와 C사이에 B를 넣어서 연결해주는것 </li>\r\n                            <li> 인터페이스를 이용해서 만들어준다. </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 브리지 패턴(Bridege) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 컴포지트 패턴(Composite) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 데코레이터 패턴(Decorator) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 파사드 패턴(Facade) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 플라이웨이트 패턴(Flyweight) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 프록시 패턴(Proxy) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <h2 className='h2'> 📌 행동 패턴(10가지) </h2>\r\n                        <li> 책임 연쇄 패턴(Chain or Responsibility) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 커맨드 패턴(Command) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 인터프리터 패턴(Interpreter) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 이터레이터 패턴(Iterator) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 중재자 패턴(Mediator) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 메멘토 패턴(Memento) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 옵저버 패턴(Observer) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 상태 패턴(State) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 스트래터지, 전략 패턴(Strategy) </li>\r\n                        <div className=\"block4\">\r\n                            <li> 인스턴스1, 인터페이스1+클래스여러개상속 </li>\r\n                            <li> 인스턴스의 멤버변수에 캐스팅을 해서 생성자를 바꾸고 메소드를 실행한다. </li>\r\n                            <li> ex) 사람에게 오른손(인터페이스)을 주고 오른손에 들 수 있는 물건들을\r\n                                전부 오른손에 상속시킵니다. </li>\r\n                            <li> 사용할 때는 생성자만 코드에 추가하면 되고, 새로운 물건이 늘어나면\r\n                                인터페이스를 상속만 하면되니 참 쉽네 </li>\r\n                        </div>\r\n                        <li> 템플릿 메소드 패턴(Template Methods) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n                        <li> 방문자 패턴(Visitor) </li>\r\n                        <div className=\"block4\">\r\n                            <li>  </li>\r\n                            <li>  </li>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DPGof;","import React from 'react';\r\n\r\nconst SecurityBasic = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 보안 용어 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 CORS(Cross Origin Resource Sharing) </h2>\r\n                            <li> 최신 브라우저들은 자바스크립트 코드 XMLHttpRequest를 사용하여 현재 사이트에서 다른 사이트의 데이터를 가져오는 것을 막음   </li>\r\n                            <li> Fetch API도 마찬가지 </li>\r\n                            <li> CORS 헤더를 설정하여 응답가능 </li>\r\n\r\n                            <h2 className='h2'> 📌 XSS(Cross Site Scripting) </h2>\r\n                            <li> 악성 자바스크립트를 이용한 사용자들의 쿠키를 탈취하거나 자바스크립트 코드를 발생시킬 수 있음 </li>\r\n                            <li> 최신 브라우저는 CORS 정책에 의해 막혀있거나 쿠키는 HttpOnly를 설정하여 막을 수 있음 </li>\r\n                            <li> 글쓰기 화면에서 제목이나 내용에 스크립트를 작성하여 서버로 보내면 서버에서는 DB에 그대로 저장할 수도 있음 </li>\r\n                            <li> URL에 스크립트를 심어서 보낼수도 있음 </li>\r\n\r\n                            <h2 className='h2'> 📌 CSRF(Cross Site Request Forgery) </h2>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> 📌  </h2>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> 📌  </h2>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> 📌  </h2>\r\n                            <li>  </li>\r\n\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 보안 참고 사이트 <a name=\"보안 참고 사이트\" style={{ visibility: \"hidden\" }}> 보안 참고 사이트 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> <a href=\"https://www.boho.or.kr/main.do\" target=\"_blank\"> KISA인터넷 보호나라 </a> </li>\r\n                                    <small> 가이드 및 메뉴얼 - 기술점 취약점 분석 평가 방법 상세가이드 참고 </small>\r\n                                    <li> <a href=\"https://www.boho.or.kr/main.do\" target=\"_blank\">  </a> </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityBasic;","import React from 'react';\r\n\r\nconst SecurityJwt = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JWT <a name=\"JWT\" style={{ visibility: \"hidden\" }}> JWT </a> </summary>\r\n                            <small> JSON 객체로 만들어진 토큰 , 웹표준(RFC 7519) </small> <br />\r\n                            <a href=\"https://jwt.io/\" target=\"_blank\"> https://jwt.io/ </a> #jwt 토큰 만들어주는 곳\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> JWT가 만들어진 이유 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JWT 토큰 구성 = Header + Payload + Signature  <a name=\"JWT 토큰 구성 = Header + Payload + Signature\" style={{ visibility: \"hidden\" }}> JWT 토큰 구성 = Header + Payload + Signature </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Header </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> \"alg\" , \"typ\"  #해시알고리즘(SHA256,HMAC,RSA)과 타입(JWT)을 명시 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Payload </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 사용자의 정보나 추가 데이터에 대한 설명 </li>\r\n                                    <li> registered , private, public 클레임들이 존재 </li>\r\n                                    <li> registered claim : iss(토큰발행자) , exp(토큰만료시간) , sub(토큰제목) , aud(토큰대상자) ,\r\n                                        nbf(토큰활성날짜) , jti(고유식별자) </li>\r\n                                    <li> private claim : 서버와 클라이언트 협의 간의 사용되는 클레임 </li>\r\n                                    <li> public claim : 사용자 정의 클레임 </li>\r\n                                    <small> {'{'} </small> <br />\r\n                                    <small> \"iss\": \"http://naver.com\", </small> <br />\r\n                                    <small> \"aud\": \"https://user.com\", </small> <br />\r\n                                    <small> \"exp\": \"1234567890\", </small> <br />\r\n                                    <small>  </small> <br />\r\n                                    <small> {'}'} </small> <br />\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Signature </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 시크릿 키를 포함하여 암호화 되어 있음 </li>\r\n                                    <li> {' HMACSHA256( '} </li>\r\n                                    <li className=\"tab_4\"> {' base64UrlEncode(header) + \".\" + '} </li>\r\n                                    <li className=\"tab_4\"> {' base64UrlEncode(payload). '} </li>\r\n                                    <li className=\"tab_4\"> {' secret) '} </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JWT 토큰 작동 방식 <a name=\"JWT 토큰 작동 방식\" style={{ visibility: \"hidden\" }}> JWT 토큰 작동 방식 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <ol>\r\n                                    <li> 사용자가 로그인 정보 입력 </li>\r\n                                    <li> 서버에 로그인 정보를 보냄 </li>\r\n                                    <li> 서버는 로그인 정보를 받아서 사용자의 고유 ID 값을 설정하고 Payload에 기타 정보를 넣고\r\n                                        JWT토큰의 유효기간을 설정하고 Secret Key로 암호화하고 토큰을 발급 </li>\r\n                                    <small> JWT토큰은 static변수(바로사용)와 local stroage에 저장, 로그아웃시 local stroage에서 삭제  </small>\r\n                                    <li> 클라이언트는 서버에 요청할 때 Authorization header나 URL에 JWT토큰을 담아서 전달 </li>\r\n                                    <li> 서버는 JWT Signature을 Secret Key로 복호화해서 사용자 정보와 유효기간을 확인  </li>\r\n                                    <li> Payload에서 사용자의 정보에 맞는 데이터를 가져온다.  </li>\r\n                                </ol>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ JWT의 장단점 <a name=\"JWT의 장단점\" style={{ visibility: \"hidden\" }}> JWT의 장단점 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 장점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 서버에 인증 저장소를 만들어 둘 필요가 없어 서버 자원과 비용을 절감 , 트래픽 부담이 적음 </li>\r\n                                    <li> 수평 스케일이 용이? , 디버깅 및 관리가 용이? </li>\r\n                                    <li> REST 서비스로 제공이 가능? </li>\r\n                                    <li> 정보가 조작이 되었는지 검증을 함으로써 안정성이 보장 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 토큰이 클라이언트에게 있으므로 DB에서 클라이언트 정보를 바꾸어도 토큰까지 바꿀 수는 없음 </li>\r\n                                    <li> 필드가 많이 추가되면 토큰의 크기가 커질 수 있음 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityJwt;","import React from 'react';\r\n\r\nconst SecurityHmac = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ HMAC 알고리즘이란? <a name=\"HMAC 알고리즘이란?\" style={{ visibility: \"hidden\" }}> HMAC 알고리즘이란? </a> </summary>\r\n                            <small> Keyed-Hash Message Authentication Code , Key를 조합하여 Hash함수를 구하는 방식 </small> <br />\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> MAC 정의 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 데이터를 보내는 사람과 받는 사람만이 공유하고 있는 Key와 Message를 혼합하여 Hash 값을 만드는 것 </li>\r\n                                    <small> 메시지가 훼손 되었는지 여부를 확인 , MAC특성상 역산이 불가능 하므로,  </small>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityHmac;","import React from 'react';\r\n\r\nconst SecurityHash = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Hash란? <a name=\"Hash란?\" style={{ visibility: \"hidden\" }}> Hash란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> Hash의 정의 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 단방향 암호화 기법, 임의의 크기를 가진 데이터(Key)를 고정된 크기의 데이터(value)로 바꾸는 것 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Hasing의 정의 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 키에 대한 해시값을 구하는 과정 , 이때 사용하는 알고리즘을 해시 알고리즘(해시함수)라고 한다. </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Hash 함수의 특징 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 해시함수는 원래 패스워드 저장용도가 아닌 짧은 시간에 데이터를 검색하기 위해 설계됨 </li>\r\n                                    <li> 빠른 처리 속도를 가지고 있음 </li>\r\n                                    <li className=\"col_r\"> 빠른 처리속도를 가지고 있지만 특정 장비를 이용하여 더 빠르게 처리하여\r\n                                        다이제스트를 만들어 대입하여 해킹을 시도가 가능 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 좋은 Hash함수란? </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 해시값들이 많이 충돌하지 않고, 계산이 복잡하지 않는 함수 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Hash 값 충돌을 방지하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Chaining : 키값을 링크드 리스트 형태로 연결하여 사용 , 키값이 많이 중복되면 비효율 </li>\r\n                                    <li> Open Addressing : 모든 데이터를 테이블에 저장하는 방법 , 테이블의 크기가 커지면 장점이 사라짐? </li>\r\n                                    <li> Linear Probing : 충돌이 발생하면 다음 인덱스에 데이터를 저장하는 방식 </li>\r\n                                    <li> Quadratic Probing : 충돌시 제곱만큼 이동(효율적) </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 사용하면 안되는 해쉬 함수 종류 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> MD5 , SHA-1 HAS-180  #보안이 뚤림 </li>\r\n                                    <li> SHA-256 , SHA-512 권고  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 단뱡향 해시 함수 <a name=\"단뱡향 해시 함수\" style={{ visibility: \"hidden\" }}> 단뱡향 해시 함수 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 단방향 해시 함수 강화하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 스트레칭 : 복잡한 연산을 수만번이상 반복하는 방법, 다이제스트를 만드는 시간을 길게 하는방법, 사용자는\r\n                                        로그인 하는데 1초이상이 걸려도 크게 불편함을 느끼지 않는다. </li>\r\n                                    <li> 솔트 : 32비트 이상의 문자열로 사용자마다 값이 다르며, 비밀번호 앞뒤에 Salt(아무 문자열,아이디 등)\r\n                                        를 붙여서 다이제스트(해쉬함수를 사용한 값)를 생성한다. </li>\r\n                                    <li> - 패스워드 처럼 문자의 수와 종류가 제한된 경우 추측이 가능해져 솔트를 사용하면 좋다. </li>\r\n                                    <li> 직접 만들는 것은 위험함으로 검증된 암호화 시스템을 사용할 것  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Adaptive Key Derivation Functions </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 솔트 + 스트레칭을 반복하고 이외에도 입력 갑을 추가하여 보안의 강도를 높이는 방법 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> PBKDF2 </span>\r\n                                <small> Password-Based Key Derivation Function </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> 솔트를 적용한 후에 해시 함수의 반복 회수를 임의로 선택 가능 </li>\r\n                                    <li> DIGEST = PBKDF2(PRF, Password, Salt , c, DLen) #난수 , 패스퉈드, 솔트, iteration반복수, 원하는다이제스트길이 </li>\r\n                                    <li> 미국 정부 시스템에서도 다이제스트를 생성할 때 사용 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> bcrypt </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 패스워드 저장을 목적으로 설계 </li>\r\n                                    <li> workfactor 파라미터는 한개의 다이제스트를 생성하는데 처리 과정을 몇 번이나 수행을 할지 선택 </li>\r\n                                    <li> BCrypt.hashpw(password, BCrypt.gensalt(11)); #default salt 값은 10번 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> scrypt </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityHash;","import React from 'react';\r\n\r\nconst SecurityEncryption = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 암호란? <a name=\"암호\" style={{ visibility: \"hidden\" }}> 암호 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 평문을 암호문으로 만들거나 암호문을 평문으로 만드는것 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 평문 : 사람이 해독 가능한 텍스트 형태 </li>\r\n                                    <li> 암호문 : 사람이 해독 불가능한 텍스트 형태 </li>\r\n                                    <li> 암호화(Encryption) : 평문을 암호문으로 변환 </li>\r\n                                    <li> 복호화(Decryption) : 암호문을 평문으로 변환 </li>\r\n                                    <li> 단방향 암호화 : 암호화 후에 복호화가 불가능하다. , 암호문으로 평문을 구할 수 없음  </li>\r\n                                    <small> DB에 사용자 비밀번호를 저장하는 방식, 개발자도 볼 수 없음 </small>\r\n                                    <li> 양방향 암호화 : 암호화, 복호화 둘 다 가능하다. </li>\r\n                                    <li> - 대칭키 : 데이터 통신 </li>\r\n                                    <li> - 공개키 : 인증 </li>\r\n                                    <li> 레인보우 테이블 : 여러 평문을 암호화시켜 놓은 다이제스트 목록 , 해커들이 미리\r\n                                        만들어놓고 대입해서 과거에는 레인보우 공격을 하였음 </li>\r\n                                    <li> 다이제스트 : 평문을 암호화 시켜놓은 비밀번호 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityEncryption;","import React from 'react';\r\n\r\nconst SecurityHackingAttack = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 브루트 포스 공격 <a name=\"브루트 포스 공격\" style={{ visibility: \"hidden\" }}> 브루트 포스 공격 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 무차별 대입 공격 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 일일히 무작위로 대입을 해서 비밀번호를 알아내는 방법 , 요즘 시대에는 성공하기 힘듬 </li>\r\n                                    <li> 사용자가 자주 사용하는 비밀번호들을 리스트로 만들어서 대입을 해보는 방법 , 공격이 성공하기 좋음 </li>\r\n                                    <small> password dictionary file 구글에 검색하면 비밀번호 리스트가 나온다 </small>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 세션 하이재킹 공격 <a name=\"세션 하이재킹 공격\" style={{ visibility: \"hidden\" }}> 세션 하이재킹 공격 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 다른 사람의 세션을 가로채서 인증 별도의 인증 작업 없이 통신을 게속 하는 것 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> OTP , Challenge/Response 기법 무력화 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> TCP Connection Hijacking </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> TCP연결을 가로채는 방법 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Sequence Number Prediction Hijacking </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> TCP를 연결하는 과정에서 서버가 일정한 규칙을 가지고서 설정을 하게되면\r\n                                        추론을 하여 알아내는 방법 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 서비스 거부 공격(Dos) <a name=\"서비스 거부 공격(Dos)\" style={{ visibility: \"hidden\" }}> 서비스 거부 공격(Dos) </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 합법적인 사용자가 서비스를 이용하지 못하게 방해하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 막대한 트래픽을 발생시켜 과부하를 준다. </li>\r\n                                    <li> 악의적인 요청을 보내 리소스가 오작동을 일으키게 하여 정지시키는 방법 </li>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Buffer Overflow Attack(Dos) <a name=\"Buffer Overflow Attack\" style={{ visibility: \"hidden\" }}> Buffer Overflow Attack </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 개발자들이 설계한 시스템 처리 능력보다 더 많은 트래픽을 보내서 마비시킴 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ ICMP Flood Attack , Smurf Attack, the ping of death(Dos) <a name=\"ICMP Flood Attack\" style={{ visibility: \"hidden\" }}> ICMP Flood Attack </a> </summary>\r\n                            <small> ICMP(Internet Control Messsage Protocol) </small>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 네트워크의 브로드캐스트 주소를 통해 모든 컴퓨터로 패킷을 보내는 공격 방식 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Ping Flooding : 막대한 양의 ICMP 에코 요청 패킷을 보내는 방법 , 상대 네트워크 대역폭보다 더 많은 양을 보내면 과부하 시킬 수 있음 </li>\r\n                                    <li> Ping of Death : 사아대 시스템의 취약점이 있으면 변형된 패킷을 보내서 시스템을 비정상적으로 만드는 방법 </li>\r\n                                    <li> 일반적인 정상 패킷은 56바이트,84바이트(+IP) 이다. 시스템에 인식할 수 있는 패킷의 데이터 크기를 넘어서 버퍼 오버플로우를 발생시켜 시스템을\r\n                                        비정상적으로 작동시키게 하고 악성코드를 주입한다. </li>\r\n                                    <li> SYN Flooding : 막대한 양의 TCP SYN 패킷을 보내 시스템을 마비시키는 공격, 3Way Handshake에서 SYN을 요청하는것을 이용하는 방식인데\r\n                                        해커는 사용자의 SYN패킷을 탈취해서 IP주소를 알아내고 사용자의 IP주소를 이용해서 서버에 계속 요청을 보내면\r\n                                        서버에서는 SYN을 받았으니 SYN+ACK요청을 사용자IP주소로 보내게 되지만 응답이 되돌아오지 않고 프로세스를 생성하고 기다린다.\r\n                                        그러므로 막대한양의 요청을 보내 프로세스를 늘려 다른 사용자는 이용할 수 없게 만드는 방법이다. </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ (DDos) <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 많은 장치들이 여러곳에서 한 리소스를 타깃으로 잡고 공격을 하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 무작위 스캔 공격 <a name=\"무작위 스캔 공격\" style={{ visibility: \"hidden\" }}> 무작위 스캔 공격 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 여러 컴퓨터를 탐색하여 열려있는 포트, 서비스, OS버전 등 취약한 정보를 가져온다. </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 해킹 공격을 하기전에 사전 답사를 하는 행동 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> ARP Scan </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> ARP 프로토콜을 이용한 탐샌 방법 ,  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> ICMP Scan </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> TCP/UDP Scan </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> Stealth Scan </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityHackingAttack;","import React from 'react';\r\n\r\nconst SecurityIpSpoofing = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ IP Spoofing란? <a name=\"IP Spoofing란?\" style={{ visibility: \"hidden\" }}> IP Spoofing란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 송신자의 ID를 숨기거나, 다른 컴퓨터 시스템으로 가장하는 방법,\r\n                                    소스 주소가 수정된 IP패킷을 생성하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecurityIpSpoofing;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst NetworkBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 네크워크란? </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 노드(네트워크에 속한 컴퓨터,통신장비)와 노드간에 통신망을 통하여 DATA를 주고 받는 방식, 환경 </li>\r\n                            <li> 파일공유, 스트리밍, 여러 PC에서 1대의 프린터 사용, 온라인 게임 등등 네트워크를 사용한다. </li>\r\n                            <li> 3 </li>\r\n\r\n                            <h2 className='h2'> 📌 네트워크 분류(크기) </h2>\r\n                            <li> PAN(Personal Area Network) : 가장 작은 규모 네트워크 #블루투스 , IEE 802.15 </li>\r\n                            <li> LAN(Local Area Network) : 단거리 전송 방식, 지역 네트워크, IEE 802.11 #집(공유기), 강의실, 사무실 등 한 공간정도 </li>\r\n                            <li> MAN(Metropolitan Area Network) : 도시 영역 네트워크 , IEE 802.16  </li>\r\n                            <li> WAN(Widw Area Network) : 광대역 네트워크 , 802.20 # 지역, 지방, 나라, 대륙  </li>\r\n                            <li> VLAN  </li>\r\n                            <li> CAN </li>\r\n                            <li> PAN </li>\r\n\r\n                            <h2 className='h2'> 📌 LAN 네트워크 분류(모양) , 토폴로지(Topology) </h2>\r\n                            <li> Mesh : 여러 노드들끼리 그물처럼 연결 </li>\r\n                            <li> 혼합형 : 실제 인터넷은 여러 모양의 방식으로 연결되어 있음 </li>\r\n                            <li> Bus : 단일 케이블에 네트워크의 모든 컴퓨터를 연결, 버스 끝에는 Terminator를 달아 신호 반사 방지 </li>\r\n                            <div className=\"block4\">\r\n                                <li> 트래픽 제어 간단, 비용 적음, 확장이 쉬움 </li>\r\n                                <li> 노드수가 증가하면 충돌하여 통신효율 절감, 문제 발생하면 찾기 힘듬, 고장나면 전체 다운 </li>\r\n                            </div>\r\n                            <li > Ring : 고리 구조의 형태 </li>\r\n                            <div className=\"block4\">\r\n                                <li > 데이터 안정적 전송,  </li>\r\n                                <li> 한 노드가 고장나면 전체 고장, 네트워크 확장,변경 어려움 </li>\r\n                            </div>\r\n                            <li > Star : 허브나 스위치를 통해 중앙 집중 형태로 연결 </li>\r\n                            <div className=\"block4\">\r\n                                <li > 중앙 집중식 관리 가능, 확장과 관리가 편함 , 일부 오류가 발생하여도 나머지는 정상작동 # 가정집 공유기 </li>\r\n                                <li> 노드 수가 증가하면 패킷 충돌이 증가 하여 효율 하락, 허브나 스위치 고장 전체 다운 </li>\r\n                            </div>\r\n\r\n                            <h2 className='h2'> 📌 네트워크 통신 방식 </h2>\r\n                            <li> 1:1(유니 캐스트) : # 1:1 통신 </li>\r\n                            <li> 1:N(멀티 캐스트) : 한번에 데이터를 여러대에 송신하지만 수신하는 곳에서 원하는 것만 수신 가능 ( ex) IPTV 채널 ) </li>\r\n                            <li> 1:모두(브로드 캐스트) : 한번에 데이터를 같은 대역에 있는 여러기기에 송신하지만 수신하는 곳에서는 거부하는 권한이 없음, 차단은 가능 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 인터넷 관련 용어 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 인터넷이란? </h2>\r\n                            <li> 여러가지 데이터를 공유할 수 있는 통신망 , 여러가지 통신망 중 가장 큰 통신망 </li>\r\n\r\n                            <h2 className='h2'> 📌 WWW란 </h2>\r\n                            <li> 인터넷을 통해서 웹과 관련된 데이터를 공유하는 것 </li>\r\n\r\n                            <h2 className='h2'> 📌 프로토콜(protocol)이란? </h2>\r\n                            <li> 통신하는 기기들 간의 통신 규약(규칙) </li>\r\n                            <li> 세분화와 재합성 , 캡슐화, 연결제어, 오류제어, 흐름제어, 동기화, 순서결정, 주소설정, 다중화, 전송서비스 </li>\r\n                            <li> 오류제어 : 통신이 문제가 발생하면 프로토콜을 보고 알 수 있음 </li>\r\n                            <li> 흐름제어 : 데이터 전달 과정에 대한 흐름을 알 수 있음 </li>\r\n\r\n                            <h2 className='h2'> 📌 프로토콜 종류 </h2>\r\n                            <li> 가까운 곳 : Ethernet #MAC 주소 </li>\r\n                            <li> 멀리있는 곳 : ICMP , IPv4 , IPv6 , ARP #IP주소 </li>\r\n                            <li> 특정 프로그램 통신 : TCP , UDP #포트번호 </li>\r\n\r\n                            <h2 className='h2'> 📌  </h2>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> Mac,Ip,Port </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 MAC </h2>\r\n                            <li> 공유기에 여러대의 컴퓨터와 휴대폰 등이 연결되어 있다고 하면\r\n                                컴퓨터는(0001) , 휴대폰(0002) 을 구분하여 더 빠르게 통신한다. 만약에 같은 종류의 컴퓨터라면\r\n                                같은 MAC주소를 가지고 있을수도있다. <br /> ※ MAC주소가 fff.fff.fff.fff로 수신되면 무조건 열어본다. </li>\r\n\r\n                            <h2 className='h2'> 📌 IP </h2>\r\n                            <li> MAC주소가 같을경우 IP주소를 이용하여서 구분한다. IP주소는 컴퓨터의 종류가 같아도 각기 다른 IP주소를 가지고 있다.\r\n                                <br /> ※IP주소가 255.255.255.255로 수신되면 무조건 열어본다. </li>\r\n\r\n                            <h2 className='h2'> 📌 PORT </h2>\r\n                            <li> PORT번호는 프린터,마우스 등과 브라우저에서 여러개의 창(블로그,뉴스,유튜브 등)을 열었을때 구분을 해주는 번호이다.\r\n                                <br /> ※0~65536까지 가능하지만 0~1023의 포트번호는 이미 정해져 있으므로 건들지 않는다. ex) 80은 웹페이지를 뜻하는 포트번호이다. </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> IPv4 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2> 📌 설명 </h2>\r\n                            <li> 네트워크에서 컴퓨터 장치들이 서로 통신하는데 사용하기 위한 네트워크 주소  </li>\r\n                            <li> 최근에는 일반적으로 IP주소만으로 구성되어있지 않고 IP+S/M으로 구성이 되어있다.  </li>\r\n                            <li> 네트워크 장비에 IP를 줄때는 IP + S/M 으로 주는데 192.168.2.0/28 과 같이 주면 서브넷마스크 28개를 지정 했으므로 1개의 네트워크의 호스트 대역을 16개의 크기로 할당을 하겠다라는 것을 알 수 있음\r\n                                <div className=\"block4\">\r\n                                    <p> 192.168.2.0/28 </p>\r\n                                    <p> 10000000.10101000.00000010.00000000 / 11111111.11111111.11111111.11110000 </p>\r\n                                    <p> 네트워크 주소 갯수는 255*255*255*16 </p>\r\n                                    <p> 호스트 주소 갯수는 16 </p>\r\n                                </div>\r\n                            </li>\r\n                            <li> 32bit 이진수로 된 네트워크 주소 </li>\r\n                            <li> 사람이 볼때는 십진수인 255.255.255.255로 표현됨 </li>\r\n                            <li> 2^32개 = 40억 개의 정도의 주소가 존재 </li>\r\n                            <li> 현재는 A,B,C,D,E클래스로 구분해서 사용하지 않음, 현재는 IPv4주소가 부족해서 IPv6로 옮겨야 하지만\r\n                                장비 변경, 코드 변경 등등 엄청난 문제가 발생할 것으로 예상된다. </li>\r\n\r\n                            <h2> 📌 용어 </h2>\r\n                            <li> 옥텟(Octet) : IP주소의 8bit단위를 뜻하는 용어로 IPv4는 4개의 옥텟으로 구성되어있다. </li>\r\n                            <li> 서브넷 마스크 : IP주소를 네트워크 주소와 호스트주소로 구분해준다.(매핑을 해서 구분을 시켜주는 용도) </li>\r\n                            <li> Broadcast : 네트워크 주소 안에 모든 호스팅 주소를 가리킴 <small> # 아파트 1동의 모든 집에 방송하는 것을 생각하면 된다. </small>  </li>\r\n\r\n                            <h2> 📌 IP에 대해 기본적으로 알아야할 사실 </h2>\r\n                            <li> 특정 IP주소는 정해진 기능이 존재한다. </li>\r\n                            <li> 127.0.0.0 ~ 127.255.255.254 (자기자신을 가리키는 IP , loopback IP) </li>\r\n                            <li> 0.0.0.0 ( 읽어보아도 100% 이해가 되지 않으므로 패스.. )\r\n                                <div className=\"block4\">\r\n                                    <p> 1. 컴퓨터에서는 TCP/IP에 연결되어 있지 않으면 일반적으로 0.0.0.0 주소로 되어있고, 컴퓨터 IP주소를 0.0.0.0주소로 변경을 하게되면 모든 IP주소 차단기능 역할.  </p>\r\n                                    <p> 2. 서버에서는 로컬 호스팅의 모든 IP를 의미한다는 것 같음 </p>\r\n                                </div>\r\n                            </li>\r\n                            <li> @.255.255.255  </li>\r\n                            <li>  </li>\r\n\r\n                            <h2> 📌 A 클래스 </h2>\r\n                            <li> 1xxxxxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx </li>\r\n                            <li> 서브넷 마스크 주소 : 255.0.0.0 </li>\r\n                            <li> IP 주소 : 128.0.0.0 ~ 255.255.255.255 </li>\r\n                            <li> IP 주소는 1개의 네트워크 옥텟 + 3개의 호스트 옥텟으로 구성 </li>\r\n                            <li> A클래스의 사설 IP : 10.0.0.0 ~ 10.255.255.255 </li>\r\n                            <li> ?.255.255.255 <small> # ?로 시작되는 네트워크 주소의 모든 호스트를 가리키는 방법(broadcast) </small> </li>\r\n                            <li>  </li>\r\n\r\n                            <h2> 📌 B 클래스 </h2>\r\n                            <li> 10xxxxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx </li>\r\n                            <li> 서브넷 마스크 주소 : 255.255.0.0 </li>\r\n                            <li> IP 주소 : 128.0.0.0 ~ 191.255.255.255 </li>\r\n                            <li> IP 주소는 2개의 네트워크 옥텟 + 2개의 호스트 옥텟으로 구성 </li>\r\n                            <li> B클래스의 사설 IP : 172.16.0.0 ~ 172.31.255.255 </li>\r\n                            <li> B클래스의 할당 불가 IP : 169.254.0.0 ~ 169.254.255.255 </li>\r\n                            <li>  </li>\r\n\r\n                            <h2> 📌 C 클래스 </h2>\r\n                            <li> 110xxxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx  </li>\r\n                            <li> 서브넷 마스크 주소 : 255.255.255.0 </li>\r\n                            <li> IP 주소 : 192.0.0.0 ~ 223.255.255.255 </li>\r\n                            <li> IP 주소는 3개의 네트워크 옥텟 + 1개의 호스트 옥텟으로 구성 </li>\r\n                            <li> C클래스의 사설 IP : 192.168.0.0 ~ 192.168.255.255 </li>\r\n\r\n                            <h2> 📌 D 클래스 </h2>\r\n                            <li> 1110xxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx  </li>\r\n                            <li> 서브넷 마스크 주소 : 255.0.0.0 </li>\r\n                            <li> IP 주소 : 224.0.0.0 ~ 239.255.255.255 </li>\r\n                            <li> IP 주소는 1개의 네트워크 옥텟 + 3개의 호스트 옥텟으로 구성 </li>\r\n                            <li> 멀티캐스트 용도로 사용 </li>\r\n\r\n                            <h2> 📌 E 클래스 </h2>\r\n                            <li> 1111xxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx  </li>\r\n                            <li> 서브넷 마스크 주소 : 255.0.0.0 </li>\r\n                            <li> IP 주소 : 240.0.0.0 ~ 255.255.255.255 </li>\r\n                            <li> IP 주소는 1개의 네트워크 옥텟 + 3개의 호스트 옥텟으로 구성 </li>\r\n                            <li> 연구용, 기타 목적으로 사용 </li>\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> Subnetting </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 호스트 주소를 나누어서 다수의 네트워크로 분리하여 관리하는 방법 </li>\r\n                            <li> 회사의 부서가 다르고 인원이 다르면 IP의 호스트 주소를 쪼개서어 분배하여 사용할 수 있다. </li>\r\n                            <li> ex) 50명의 회사 부서가 있다면 서브넷마스크는 255.255.255.192 를 주면 64개의 대역 4개로 나뉘고 3개를 제외한 각 대역당 61개를 사용할 수 있다. </li>\r\n                            <li> ex) A부서 50 , B부서 5 , C부서 60 이면 , 네트워크를 192.168.2.1/26 192.168.2.64/27 192.168.2.96/29 이렇게 3개로 분리해서 줄 수 있다. </li>\r\n\r\n                            <h2 className='h2'> 📌 사용 이유 </h2>\r\n                            <li> IP주소 자원을 효율적으로 사용가능 </li>\r\n                            <li> 네트워크의 브로드캐스트의 크기를 줄여서 트래픽을 낮출수 있음 </li>\r\n                            <li> 네트워크를 분리하여 보안성을 높일 수 있음 </li>\r\n\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> TCP/IP 와 UDP/IP </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 TCP/IP </h2>\r\n                            <li> 기기과 기기간의 신뢰성있는 데이터를 주고 받기 위한 방식, IP는 기기의 주소 , TCP는 프로토콜 </li>\r\n\r\n                            <h2 className='h2'> 📌 TCP/IP 구조 </h2>\r\n                            <li>  </li>\r\n\r\n                            <h2 className='h2'> 📌 UDP/IP 프로토콜 </h2>\r\n                            <li> 사용자 데이터그램 프로토콜(User Datagram Protocol, UDP) </li>\r\n                            <li>기기과 기기간의 신뢰성을 보장하지 않는 데이터를 주고 받는 방식, IP는 기기의 주소 , UDP는 프로토콜   </li>\r\n\r\n                            <h2 className='h2'> 📌 UDP/IP 구조 </h2>\r\n                            <li>  </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 3Way Handshake </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n                            <li> 2 </li>\r\n                            <li> 3 </li>\r\n\r\n                            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n                            <li> 장점 : </li>\r\n                            <li> 단점 : </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> 4Way Handshake </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 세션을 종료하기 위해 수행하는 과정  </li>\r\n\r\n                            <h2 className='h2'> 📌 순서 </h2>\r\n                            <li> 1. 클라이언트 → 서버 <br /> 초기에 클라이언트는 ESTABLISHE 상태 , FIN플래그 발송 , 클라이언트는 FIN-WAIT1 상태 </li>\r\n                            <li> 2. 서버 → 클라이언트 <br /> ACK 발송 , 서버는 서버 통신이 끝날때 까지 기다리는 TIME_WAIT 상태 </li>\r\n                            <li> 2-1. → 클라이언트 <br /> 클라이언트는 FIN-WAIT2 상태 </li>\r\n                            <li> 3. 서버 → 클라이언트 <br /> 서버가 통신이 끝나면 FIN 플래그를 발송 , 서버는 LAST-ACK 상태 </li> <br />\r\n                            <li> 4. 클라이언트 → 서버 <br /> 클라이언트는 TIME-WAIT 상태 , ACK 발송  </li>\r\n                            <li> 5.  → 서버 <br /> CLOSED 상태  </li> <br />\r\n                            <li> ※ TIME-WAIT 상태 : 서버에서 뒤늦게 온 패킷 놓치지 않고 받기 위해 (default 240second) 동안 세션을 남기고 기다리는 행위  </li>\r\n\r\n                            <h2 className='h2'> ✔ 예시 </h2>\r\n                            <li> 소제목\r\n                                <div className='block3'>\r\n                                    <h3 className='h3'> 🎈 </h3>\r\n                                    <div className='block4'>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkBasic;","import React from 'react';\r\n\r\nconst NetworkCommand = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 관련 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> ipconfig </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> netstat </span>\r\n                                <small> network statistics </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> 전송 제어 프로토콜, 라우팅 테이블, 수많은 네트워크 인터페이스, 네트워크 프로토콜 통계를 위한 네트워크 연결을 보여주는 명령 도구  </li>\r\n                                    <li> 1. 프로토콜 : 사용한 프로토콜 </li>\r\n                                    <li> 2. 로컬주소 : 사용자 컴퓨터의 IP / 호스트 이름과 포트번호 </li>\r\n                                    <li> 3. 외부주소 : 사용자 컴퓨터에 접속되어 있는 IP / 호스트이름과 포트번호 </li>\r\n                                    <li className=\"sblock\">  <span className=\"sstitle\"> 4. 상태 : 연결상태 </span>\r\n                                        <li> LISTENING : 서비스 대기중 </li>\r\n                                        <li> ESTABLISHED : 다른PC와 연결된 상태 </li>\r\n                                        <li> SVN_SENT : 클라이언트가 SYN요청후 대기상태 </li>\r\n                                        <li> SYN_RECV : 서버가 SYN+ACK발신 후 ACK 수신 대기 상태 </li>\r\n                                        <li> TIME_WAIT : 연결 종료하고 일정시간 열린 상태 </li>\r\n                                        <li> CLOSE_WAIT : 원격 연결 요청을 받은 상태이며 , 연결 종료를 기다리는 상태 </li>\r\n                                        <li> LAST_ACK : 연결이 종료되었고, 승인을 기다리는 상태 </li>\r\n                                        <li> CLOSED : 연결 종료 </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\">  <span className=\"sstitle\"> 명령어 옵션(Window) </span>\r\n                                        <li> netstat -? 로 사용(?에 대입) </li>\r\n                                        <li> -a : 모든 연결 및 수신 대기 포트를 표시합니다. </li>\r\n                                        <li> -a | find \"찾을내용\" : 찾는 내용을 보여줌 </li>\r\n                                        <li> -b : 현재 연결이 어떤 프로그램을 사용하는지 표시 <small> 권한이 없다고 하면 관리자 권한으로 실행 , 시간이 약간 걸림 </small>  </li>\r\n                                        <li> -e : 이더넷 통계를 표시 </li>\r\n                                        <li> -f : 외부 주소의 FQDN(정규화된 도메인 이름)을 표시합니다. , 시간이 약간 걸림 </li>\r\n                                        <li> -n : 주소 및 포트 번호를 숫자 형식으로 표시합니다. </li>\r\n                                        <li> -o : 각 연결의 소유자 프로세스 ID를 표시합니다. </li>\r\n                                        <li> -p 프로토콜 : 모든 연결, 수신 대기 포트 및 바인딩된 비수신 대기 TCP 포트를 표시합니다. </li>\r\n                                        <li> -r : 라우팅 테이블을 표시합니다. </li>\r\n                                        <li> -s : 프로토콜별 통계를 표시합니다. </li>\r\n                                        <li> -t : 현재 연결 오프로드 상태를 표시합니다. </li>\r\n                                        <li> -x : NetworkDirect 연결, 수신기 및 공유 끝점을 표시합니다. </li>\r\n                                        <li> -y : 모든 연결에 대한 TCP 연결 템플릿을 표시합니다. </li>\r\n                                        <li> -an : 네트워크의 연결상태를 알아보는 옵션 , -a + -n 을 합친 명령어 </li>\r\n                                        <li>  :  </li>\r\n                                    </li>\r\n                                    <li className=\"sblock\">  <span className=\"sstitle\"> 명령어 옵션(Rinux) </span>\r\n                                        <li>  :  </li>\r\n                                    </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkCommand;","import React from 'react';\r\n\r\nconst NetworkArpprotocol = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ ARP 프로토콜이란? <a name=\"ARP 프로토콜이란?\" style={{ visibility: \"hidden\" }}> ARP 프로토콜이란? </a> </summary>\r\n              <small> Address Resolution Protocol </small>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> IP주소를 이용하여 MAC주소를 알아내는 프로토콜 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 실제 IP, MAC주소를 이용하여 전송할 위치를 사용하기 때문에 MAC주소가 필요 </li>\r\n                  <li> 3계층 IP주소를 2계층 MAC주소와 이어주는 프로토콜 </li>\r\n                  <li> IPv4에서만 사용, IPv6에서는 NDP를 사용 </li>\r\n                  <li> 24bit(제조업체 식별 정보) + 24bit(NIC제조업체에서 정한 시리얼 넘버) , aa:bb:cc:dd:ee:ff </li>\r\n                  <li> 반대로 MAC주소로 IP주소를 알아오는 RARP라는 프로토콜도 있음 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ ARP 작동원리 <a name=\"ARP 작동원리\" style={{ visibility: \"hidden\" }}> ARP 작동원리 </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 같은 네트워크 일때 </span>\r\n                <span className=\"mblock\">\r\n                  <ol>\r\n                    <li> A에서 모든 단말기로 ARP요청을 같은 도메인 영역에 있는 브로드캐스트방식으로 보낸다. </li>\r\n                    <li> ARP Request패킷을 받은 다른 단말기 들은 본인의 IP주소가 맞는지 패킷에서 확인한다. </li>\r\n                    <li> 아니라면 무시하고 맞는다면 ARP Reply패킷을 만들어 응답을 한다. </li>\r\n                    <li> A단말기는 일치하는 단말기의 MAC주소를 기억한다. </li>\r\n                    <li>  </li>\r\n                  </ol>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 다른 네트워크 일때 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ ARP 패킷 구조 <a name=\"ARP 패킷 구조\" style={{ visibility: \"hidden\" }}> ARP 패킷 구조 </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <table border=\"1\" width=\"380\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th colSpan=\"2\"> Hardware Type(16) </th>\r\n                        <th colSpan=\"1\"> Protocol Type(16) </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"1\"> Hardware Address Len(8) </th>\r\n                        <th colSpan=\"1\"> Protocol Address Len(8) </th>\r\n                        <th colSpan=\"1\"> Operation Code(16) </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"3\"> Source Hardware Address() </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"3\"> Source Protocol Address() </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"3\"> Destination Hardware Address() </th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan=\"3\"> Destination Protocol Address() </th>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  {/*  */}\r\n                  <span className=\"sstitle\">  </span>\r\n                  <li> Hardware Type : 네트워크의 유형, 이더넷 통신시 값은 항상 1 </li>\r\n                  <li> Protocol Type : 매핑 대상의 프로토콜 주소 유형, IPv4=0x0800</li>\r\n                  <li> Hardware Address Len : MAC주소의 길이 , 이더넷 통신시 6</li>\r\n                  <li> Protocol Address Len : 프로토콜 주소의 길이 , 이더넷일때 4 </li>\r\n                  <li> Operation Code : ARP의 동작을 나타냄 <br /> [ARP Request , ARP Reply , RARP Request , RARP Reply]=1,2,3,4</li>\r\n                  <li> Source Hardware Address : 송신자의 MAC주소 </li>\r\n                  <li> Source Protocol Address : 송신자의 IP 주소 </li>\r\n                  <li> Destination Hardware Address : 수신자의 MAC주소 , ARP Request일때 0 </li>\r\n                  <li> Destination Protocol Address : 수신자의 IP주소 </li>\r\n                  {/*  */}\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NetworkArpprotocol;","import React from 'react';\r\n\r\nconst NetworkOSI7Layer = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ OSI 7 Layer <a name=\"OSI 7 Layer\" style={{ visibility: \"hidden\" }}> OSI 7 Layer  </a> </summary>\r\n                            <small> Open Systems Interconnection Reference Model , 프로토콜 디자인과 통신을 계층별로 나누어 설명하는 것 </small>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 7 계층 , Application 응용 계층<a name=\"7 계층 , Application 응용 계층\" style={{ visibility: \"hidden\" }}> 7 계층 , Application 응용 계층 </a> </summary>\r\n                                    <small> 편지지 위에다가 글을 작성 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 인터페이스와 네트워크 서비스를 제공 #브라우저  </li>\r\n                                        <li> 사용자가 데이터를 생성하는 계층 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 6 계층 , Presentation 표현 계층 <a name=\"6 계층 , Presentation 표현 계층\" style={{ visibility: \"hidden\" }}> 6 계층 , Presentation 표현 계층 </a> </summary>\r\n                                    <small> 작성한 편지지를 편지봉투에 넣음  </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 사용자가 입력한 데이터를 컴퓨터가 알 수 있게 해주는 확장자나 (html,css등)표현 방식을 알려주는 계층 </li>\r\n                                        <li> 암호화와 압축화를 지원하는 계층 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 5 계층 Session , 세션 계층 <a name=\"5 계층 Session , 세션 계층\" style={{ visibility: \"hidden\" }}> 5 계층 Session , 세션 계층 </a> </summary>\r\n                                    <span> 우체국이 하는지 안하는지 판단 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 네트워크 간에 연결을 하거나 끊거나, 유지 , 상태를 담당 </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 4 계층 Transport , 전송 계층 <a name=\"4 계층 Transport , 전송 계층\" style={{ visibility: \"hidden\" }}> 4 계층 Transport , 전송 계층 </a> </summary>\r\n                                    <small> 빠른편지인지 일반편지인지 설정, 어느 나라로 보낼것인지 설정(이해하는 언어가 다름)  </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 데이터의 전송방식을 설정(TCP, UDP)  </li>\r\n                                        <li> 서비스의 포트번호를 구별 : HTTP(80) , Telnet(23) , FTP(20,21)  </li>\r\n                                        <li> 장비 : L4 스위치 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 3 계층 Network , 네트워크 계층 <a name=\"3 계층 Network , 네트워크 계층\" style={{ visibility: \"hidden\" }}> 3 계층 Network , 네트워크 계층 </a> </summary>\r\n                                    <small> 편지가 도착할 목적지를 적음 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 논리적인 주소를 기반으로 출발지에서 목적지까지 경로를 설정하는 계층, 대표적으로 IP주소 </li>\r\n                                        <li> 장비 : 라우터, L3 스위치 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 2 계층 DataLink , 데이터 링크 계층 <a name=\"2 계층 DataLink , 데이터 링크 계층\" style={{ visibility: \"hidden\" }}> 2 계층 DataLink , 데이터 링크 계층 </a> </summary>\r\n                                    <small> 편지가 이동되는 운송수단 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> MAC주소를 이용, 즉 노드와 노드의 전송 형태(기기마다 고유한 주소가 존재) </li>\r\n                                        <li> 1계층에서 보내는 방식에 따라서 달라짐 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 1 계층 Physical , 물리 계층 <a name=\"1 계층 Physical , 물리 계층\" style={{ visibility: \"hidden\" }}> 1 계층 Physical , 물리 계층 </a> </summary>\r\n                                    <small> 편지가 실제 이동 되는 구간 </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 2계층까지 만들어진 데이터를 이진수로 변환하여 실질적으로 이동되는 계층 </li>\r\n                                        <li> 장비 : 케이블, 커넥터, 리피터 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkOSI7Layer;","import React from 'react';\r\n\r\nconst NetworkThreeWayHandshake = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 3Way Handshake란? <a name=\"3Way Handshake란?\" style={{ visibility: \"hidden\" }}> 3Way Handshake란? </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 서버와 클라이언트가 서로 데이터를 전송할 수 있는 준비환경이 되었다는 것을 확인하는 방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> TCP 통신을 할 때 프로세스와 프로세스를 연결하기 위해 수행하는 과정, TCP연결 초기화 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 3Way Handshake 실행 과정 <a name=\"3Way Handshake 실행 과정\" style={{ visibility: \"hidden\" }}> 3Way Handshake 실행 과정 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 1. 클라이언트 → 서버 <br /> 클라이언트는 SYN 패킷 발송하고 SYN/ACK를 기다리는 SYN_SENT 상태로 변경 </li>\r\n                                    <li> 1-1.  → 서버 <br /> 서버는 초기에 LISTEN 상태, 클라이언트에게 SYN 요청을 받음 , SYN flag 설정을 바꿈  </li>\r\n                                    <li> 2. 서버 → 클라이언트 <br /> ACK와 SYN 발송, 서버는 SYN_RECEIVED 상태 </li>\r\n                                    <li> 3. 클라이언트 → 서버 <br /> 클라이언트 ACK 발송 , 클라이언트 ESTABLISHED 상태 </li> <br />\r\n                                    <li> 3-1. → 서버 <br /> 서버는 ESTABLISHE 상태 </li> <br />\r\n                                    <li> TCP :  </li>\r\n                                    <li> SYN(Synchronize Sequence Numbers) : 접속 요청 패킷 </li>\r\n                                    <li> ACK(Acknowledgment) : </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkThreeWayHandshake;","import React from 'react';\r\n\r\nconst NetworkDevice = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkDevice;","import React from 'react';\r\n\r\nconst NetworkWireshark = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wireshark 설치 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wireshark란? <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 패킷을 수집해주는 tool </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wireshark 보는법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> No </span>\r\n                                <small> 패킷을 수집한 순서 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Time </span>\r\n                                <small> 패킷이 수집된 시간 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Source </span>\r\n                                <small> 패킷을 보낸 주소 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Destination </span>\r\n                                <small> 패킷 도착 주소 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li> </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Protocol </span>\r\n                                <small> 프로토콜 정보 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Length </span>\r\n                                <small> 패킷의 길이 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> Info </span>\r\n                                <small> 패킷 정보 </small>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 원하는 패킷만 보는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> wireshark상단에 검색을 하면 원하는 내용만 필터로 걸러서 볼 수 있다. </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ Wireshark 설정 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ TCP 프로토콜 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NetworkWireshark;","import React from 'react';\r\n\r\nconst NetworkProtocol = (props) => {\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ DNS <a name=\"DNS\" style={{ visibility: \"hidden\" }}> DNS </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> 도메인 주소를 IP주소로 변경해주는 곳 </li>\r\n                <li> 어플리케이션 계층 </li>\r\n                <li> 포트 : UDP/53(일반) , TCP/53(512B 이상, 존영역? 전달하는 경우) </li>\r\n                <li> 도메인 구조\r\n                  <span className=\"mblock\">\r\n                    <li> [ .kr .jp .cn | .net .com ... ] </li>\r\n                    <li> [ .co .go .or |  도메인 ] </li>\r\n                    <li> [ 도메인 | ] </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> DNS 역할\r\n                  <span className=\"mblock\">\r\n                    <li> 호스트 도메인은 여러 도메인 별칭을 가질 수 있다. </li>\r\n                    <li> 하나의 같은 도메인에 대해 여러 IP가 사용이 가능해 번갈아가면서 부하를 분산 시켜 줄 수 있다. </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> DNS 과정\r\n                  <span className=\"mblock\">\r\n                    <li> 1. 클라이언트가 로컬 DNS에 도메인 주소를 요청한다. </li>\r\n                    <li> 2. 로컬 DNS가 루트 DNS에 요청한 도메인 주소를 물어본다. </li>\r\n                    <li> 3. 루트 DNS가 com을 인식하면 최상위 도메인 DNS서버IP를 로컬DNS에 알려준다. </li>\r\n                    <li> 4. 로컬 DNS가 최상위 도메인 DNS서버에 주소를 요청한다. </li>\r\n                    <li> 5. 최상위 도메인 DNS서버가 naver를 보고 책임 DNS서버IP를 로컬 DNS서버에 알려준다. </li>\r\n                    <li> 6. 로컬 DNS서버가 책임 DNS서버에게 도메인 주소를 물어본다. </li>\r\n                    <li> 7. 책임 DNS서버가 처음 요청한 도메인 IP를 로컬 DNS서버에 알려준다. </li>\r\n                    <li> 8. 로컬 DNS서버가 클라이언트에게 처음 요청한 도메인 IP를 알려준다. </li>\r\n                    <li> 9. 로컬 DNS서버가 요청한 도메인 주소를 기억하고 있는다.(DNS캐싱) </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> 도메인 자원 레코드\r\n                  <span className=\"mblock\">\r\n                    <li> DNS 요청은 하나이상의 레코드를 가진 메세지로 응답 </li>\r\n                    <li> 1. 호스트이름 , 호스트이름IP , A </li>\r\n                    <li> 2. 도메인 주소 , 책임 DNS 서버 주소 , NS  </li>\r\n                    <li> 3. 별칭 호스트 이름, 정식 호스트이름 , CNAME </li>\r\n                    <li> 4. 별칭 호스트 이름, 정식 메일서버이름, MX </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"stitle\"> 원격 접속 </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ SSH - 원격 접속 터미널 <a name=\"SSH\" style={{ visibility: \"hidden\" }}> SSH </a> </summary>\r\n              <small> Secure Shell </small>\r\n              <span className=\"sblock\">\r\n                <li> 보안을 중요시한 프로토콜 , 정보가 암호화 되어 전송이 된다.</li>\r\n                <li> 원격 접속을 하는 이유는 호스팅업체나 클라우드 서버를 사용할 때 그 장소에 갈 수는 없기 때문 </li>\r\n                <li> public key 와 private key를 이용한다.  </li>\r\n                <li> 포트 : 22번 </li>\r\n                <li>  </li>\r\n                {/*  */}\r\n                <li> SSH 과정\r\n                  <span className=\"mblock\">\r\n                    <li> 1. 클라이언트에서 ssh-keygen으로 공개키와 비밀키를 생성 </li>\r\n                    <li> 2. 클라이언트의 공개 키를 원격 서버에 전송 </li>\r\n                    <li> 3. 클라이언트가 서버에 접속을 요청하면 서버에서는 임의의 문자열을 생성하고, 이 문자열을\r\n                      클라이언트의 공개 키로 암호화 해서 클라이언트에게 전송 </li>\r\n                    <li> 4. 클라이언트는 서버에서 받은 문자열을 개인키로 복호화한다. </li>\r\n                    <li> 5. 이제부터는 원격서버와 클라이언트가 동일한 문자열을 이용하여 해시값을 구하고 해시값을 비교\r\n                      해서 인증을 한다. </li>\r\n                    <li> 6. 인증이 성공하면 접속가능 </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> 클라이언트에서 ssh로 접속 방법\r\n                  <span className=\"mblock\">\r\n                    <li> $ ssh UserName@HostName </li>\r\n                    <li> $ ssh -p 포트번호 UserName@HostName , #포트번호를 따로 지정하는 방법 </li>\r\n                    <li> $ ssh-keygen , #공개키 생성 </li>\r\n                    <li> $ cat ~/.ssh/id_rsa.pub , #공개키 확인 하는 방법 </li>\r\n                    <li> $ ssh -L port1:host_name:port2 server_name , #서버에 설치된 서버의 포트와 연결 , (Local Port Forwarding) </li>\r\n                    <li> $ ssh -R port1:host_name:port2 server_name , #서버에 설치된 서버의 포트와 연결 , (Remote Port Forwarding) </li>\r\n                    <li> $  </li>\r\n                    <li> $  </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ Rlogin - 원격 접속 터미널 <a name=\"Rlogin\" style={{ visibility: \"hidden\" }}> Rlogin </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ Telnet - 원격 접속 터미널<a name=\"Telnet\" style={{ visibility: \"hidden\" }}> Telnet </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ FTP - 파일을 교환하기 위한 프로토콜 <a name=\"FTP\" style={{ visibility: \"hidden\" }}> FTP </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> 인터넷상의 컴퓨터 간에 파일을 교환하기 위한 표준 프로토콜 </li>\r\n                <li> 포트 : TCP 20,21 </li>\r\n                <li> 21번 포트는 제어연결로 사용 , 클라이언트와 서버의 응답과 명령에 사용 , FTP세션 동안 연결 유지 </li>\r\n                <li> 20번 포트는 데이터연결로 사용, 파일이 전송에 사용, 파일 전송이 끝나면 연결 종료 </li>\r\n                <li>  </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"sstitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <li> </li>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NetworkProtocol;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Backtracking = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Backtracking;","import React from 'react';\r\n\r\nconst Algorithm_Divide_Conquer = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Divide_Conquer;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Dynamic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Dynamic;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Graph = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ BFS 알고리즘(너비 우선탐색) </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 루트 노드에서 시작해서 인접한 노드를 탐색하여 전체 그래프를 탐색하는 방법 </li>\r\n                                        <li> 최단 거리를 구하는 알고리즘 </li>\r\n                                        <li> Queue 구조를 이용 </li>\r\n                                        <li> 간선의 가중치가 모두 1일때 사용 가능  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 장단점 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li className=\"col_be\"> 장점\r\n                                            <li> 노드의 수가 적고 깊이가 얕으면 빠르게 동작할 수 있음 </li>\r\n                                            <li> DFS보다 빠름 , 단 너무 깊다면 DFS를 사용하는 것이 좋음 </li>\r\n                                            <li> 최단경로를 반드시 찾음 </li>\r\n                                            <li> 모든 정점을 방문할 때, 최단거리 문제를 구할 때 </li>\r\n                                        </li>\r\n                                        <li className=\"col_r\"> 단점\r\n                                            <li> DFS는 재귀를 사용하여 저장공간이 적지만 BFS는 저장 공간이 많이 필요 </li>\r\n                                            <li> 노드의 수가 늘어나면 탐색해야하는 노드가 많아져 않좋음 </li>\r\n                                            <li>  </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 그래프 구현 방법 2가지 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 2차원 배열(인접행렬) , 시간복잡도: O(N<sup>2</sup>) </li>\r\n                                        <li> 링크드리스트, 어레이리스트(인접리스트) , 시간복잡도: O(N+E) </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 예시 코드 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶ JAVA </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li> <span className=\"sstitle\"> 인접 행렬(2차원배열) 예시 </span> </li>\r\n                                                <li> {'queue<int> q;'} </li>\r\n                                                <li> check[1] = true; q.push(1); </li>\r\n                                                <li> while (!q.empty()) {'{'}\r\n                                                    <li> int x = q.front(); q.pop(); </li>\r\n                                                    <li> for (int i=1; i{'<='}n; i++) {'{'}\r\n                                                        <li> if (a[x][i] == 1 {'&&'} check[i] == false) {'{'}\r\n                                                            <li> check[i] = true; </li>\r\n                                                            <li> q.push(i); </li>\r\n                                                        </li>\r\n                                                        <li> {'}'} </li>\r\n                                                    </li>\r\n                                                    <li> {'}'} </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶ C </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li> <span className=\"sstitle\"> 인접 행렬(2차원배열) 예시 </span> </li>\r\n                                                <li> static void bfs(int node) {'{'}\r\n                                                    <li> BFS_isVisit[node] = true; </li>\r\n                                                    <li> BFS_visitArray.add(node); </li>\r\n                                                    <li> for(int i=0; i{'<='}nodeNum; i++)\r\n                                                        <li> if( graph[node][i] == 1 {'&&'} BFS_visitArray[i] == false\r\n                                                            {'&&'} queue.contains(i)==false) {'{'}\r\n                                                            <li> queue.add(i); </li>\r\n                                                        </li>\r\n                                                        <li> {'}'} </li>\r\n                                                    </li>\r\n                                                    <li> {'}'} </li>\r\n                                                    <li> if(!queue.isEmpty())\r\n                                                        <li> bfs(queue.poll()); </li>\r\n                                                    </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </span>\r\n                                            {/*  */}\r\n                                            <span className=\"sblock\">\r\n                                                <li> <span className=\"sstitle\"> 인접 리스트(링크드,어레이리스트) 예시 </span> </li>\r\n                                                <li> static void bfs(int node) {'{'}\r\n                                                    <li> BFS_isVisit[node] = true; </li>\r\n                                                    <li> BFS_visitArray.add(node); </li>\r\n                                                    <li> for(int i=0; i{'<'} graph[node].size() ; i++) {'{'}\r\n                                                        <li> int adjNode = graph[node].get(i); </li>\r\n                                                        <li> if(BFS_isVisit[adjNode] == false {'&&'} queue.contains(adjNode) == false ) {'{'}\r\n                                                            <li> queue.add(adjNode); </li>\r\n                                                        </li>\r\n                                                        <li> {'}'} </li>\r\n                                                    </li>\r\n                                                    <li> {'}'} </li>\r\n                                                    <li> if(!queue.isEmpty())\r\n                                                        <li> bfs(queue.poll()); </li>\r\n                                                    </li>\r\n                                                </li>\r\n                                                <li> {'}'} </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶ Python </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                        <details>\r\n                                            <summary className=\"sstitle\"> ▶  </summary>\r\n                                            <span className=\"sblock\">\r\n                                                <li>  </li>\r\n                                            </span>\r\n                                        </details>\r\n                                        {/*  */}\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ DFS 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 다익스트라(최단경로) 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 프라임 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 크루수 칼 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 알고리즘 </summary>\r\n                                <span className=\"sblock\">\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Graph;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Greedy = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 그리디 알고리즘\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 순간 최적의 선택을 하여 문제를 풀어나가는 방식 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Greedy;","import React from 'react';\r\n\r\nconst Algorithm_Hash = (props) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Hash;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Recursive = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Recursive;","import React from 'react';\r\n\r\nconst Algorithm_Search = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Search;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Algorithm_Sort = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <span className=\"stitle\"> <a name=\"정렬 알고리즘\"> 정렬 알고리즘 </a> </span>\r\n                            <span className=\"sblock\">\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 선형 정렬(linear sort) </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 처음부터 끝까지 순서대로 확인해서 정렬</li>\r\n                                        <li> 장점: 어디서든 사용이 가능하다. </li>\r\n                                        <li> 단점: 상대적으로 시간이 오래 걸린다. </li>\r\n                                        <li> 시간 복잡도: O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 이진 정렬(binary sort) </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 남은 값들 중에 중간값을 찾아 제외하는 방법 </li>\r\n                                        <li> 장점: ^2 만큼 순서가 줄어든다. </li>\r\n                                        <li> 단점: 배열이 크기순으로 정렬이 되어있어야 가능하다. </li>\r\n                                        <li> 시간 복잡도: O(n<sup></sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 선택 정렬(selection sort)  </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 자신보다 뒤에 요소를 탐색하고 자신보다 작으면 바꾸는 방법 </li>\r\n                                        <li> 장점: 구현이 쉬움 </li>\r\n                                        <li> 단점: 비효율적  </li>\r\n                                        <li> 시간 복잡도: O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 삽입 정렬(insertion sort)  (상활에 따라 추천)</summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 자신 이전의 모든요소를 탐색하고 비교하여 자신의 위치를 찾아 삽입하는 방법 </li>\r\n                                        <li> 장점: 상황에 따라 O(N)의 속도를 가진다. </li>\r\n                                        <li> 단점: 상황에 따라 O(N<sup>2</sup>)을 가지므로 일반적으로 사용되면 안된다. </li>\r\n                                        <li> 시간 복잡도: O(n<sup></sup>) ~ O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 버블 정렬(bubble sort) </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 인접한 인덱스를 비교하면서 정렬하는 방법 </li>\r\n                                        <li> 장점: 구현이 쉽다. </li>\r\n                                        <li> 단점: 비효율적이다. </li>\r\n                                        <li> 시간 복잡도: O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 퀵 정렬(quick sort) </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 피벗을 이용해서 두 부분을 나누고 정렬 하는 방법 </li>\r\n                                        <li> 장점: 효율적인 편 </li>\r\n                                        <li> 단점: 피벗의 위치에 따라 비효율적일 수도 있다. </li>\r\n                                        <li> 시간 복잡도: O(NlogN) ~ O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 힙 정렬(heap sort) (추천)</summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 이진트리구조? </li>\r\n                                        <li> 장점: 효율적인 편  </li>\r\n                                        <li> 단점:  </li>\r\n                                        <li> 시간 복잡도: O(NlogN)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 합병 정렬(merge sort) (추천)</summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 리스트를 모두 분할한 후에 병합을 하는 방법 </li>\r\n                                        <li> 장점: 효율적인 편 </li>\r\n                                        <li> 단점: 추가적인 메모리 공간 필요 </li>\r\n                                        <li> 시간 복잡도: O(NlogN)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 쉘 정렬 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법:  </li>\r\n                                        <li> 장점: 삽입정렬 보다 상황에 따라 빠르다. </li>\r\n                                        <li> 단점: 성능 차이가 심하다. </li>\r\n                                        <li> 시간 복잡도: O(n) ~ O(n<sup>1.3,1.5</sup>) ~  O(n<sup>2</sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 기수 정렬 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법:  </li>\r\n                                        <li> 장점: 속도가 매우 빠름 </li>\r\n                                        <li> 단점: 메모리가 많이 필요, 데이터 타입 일정, 구현 조건이 많음 </li>\r\n                                        <li> 시간 복잡도: O(n<sup></sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                                <details>\r\n                                    <summary className=\"sstitle\"> ▶ 카운팅 정렬 </summary>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 방법: 원소가 카운팅된 빈 배열을 만들고 그곳에 배열을 정렬하는 방법  </li>\r\n                                        <li> 장점: 속도가 매우 빠름 </li>\r\n                                        <li> 단점: 메모리 공간이 필요, 메모리 낭비가 심할 수도 있음 </li>\r\n                                        <li> 시간 복잡도: O(n<sup></sup>)</li>\r\n                                        <li> 예시코드: </li>\r\n                                        <span className=\"sblock\">\r\n                                            <li>  </li>\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </span>\r\n                                </details>\r\n                                {/*  */}\r\n                            </span>\r\n                        </span>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"sstitle\"> ▶  </summary>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"sstitle\"> ▶  </summary>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                        <details>\r\n                            <summary className=\"sstitle\"> ▶  </summary>\r\n                            <span className=\"mblock\">\r\n                                <span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Sort;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Algorithm_Basic = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ LRU 캐시 알고리즘\r\n                                    <a name=\"LRU 캐시 알고리즘\" style={{ visibility: \"hidden\" }}> LRU 캐시 알고리즘 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> Least Recently User Algorithm </li>\r\n                                        <li> 캐시 알고리즘 중 1종류 </li>\r\n                                        <li> 캐시상에서 최근에 사용된 적이 없거나 , 데이터를 갱신 시켜줄 때 사용 </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Algorithm_Basic;","import React from 'react';\r\n\r\nconst ApiNaver = (props) => {\r\n return (\r\n  <div className=\"common_style\">\r\n   <div className='block1'>\r\n    <details>\r\n     <summary> 네이버 map api 시작 </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className='h2'> 📌 설명 </h2>\r\n      <li> https://www.ncloud.com/?language=ko-KR </li>\r\n      <li> 우측 상단에 콘솔로 들어간다. </li>\r\n      <li> 좌측에 product &amp; services 클릭하면 결제 등록하라는 내용이 작은 글씨로 보일것이다. 그거 하고 다시 해서 결제까지 완료하기 </li>\r\n      <li> 홈 메뉴로 가서 우측상단에 메뉴 - 서비스 - Aplication Service - Maps - 이용 신청하기  </li>\r\n      <li> Web 서비스 URL은 http://localhost:3000 와 같이 코드를 작성해서 사용할 URL 등록 </li>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n\r\n   <div className='block1'>\r\n    <details>\r\n     <summary> 네이버 지도 React에서 기본 예제 사용 </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className='h2'> 📌 설명 </h2>\r\n      <li> 1. index.html에 {'<script type=\"text/javascript\" src=\"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=지도어플리케이션ID넣기\"></script>'} </li>\r\n      <li> 2. 네이버 지도 어플리케이션에서 http://localhost:3000 넣기 </li>\r\n\r\n      <h2 className='h2'> 📌 예제 코드 </h2>\r\n      <div className=\"block4\">\r\n       <li> {'const { naver } = window;'} </li>\r\n       <li>  </li> <br />\r\n       <li> {' useEffect(() => { '}\r\n        <li> {' let mapContainer = document.getElementById(\"map\") '} </li>\r\n        <li> {'  '} </li> <br />\r\n        <li> {' let mapOption = { '}\r\n         <li> {' center: new naver.maps.LatLng(37.3595704, 127.105399), '} </li>\r\n         <li> {' zoom: 10 '} </li>\r\n        </li>\r\n        <li> {' } '} </li>\r\n        <li> const map = new naver.maps.Map(mapContainer, mapOption); </li>\r\n       </li>\r\n       <li> {'}, [])'} </li>\r\n       <li>  </li> <br />\r\n       <li> {' return ( '}\r\n        <li> {' <> '}\r\n         <li> {' <div id=\"map\" style={{ width: \"300px\", height: \"300px\" }}> </div> '} </li>\r\n        </li>\r\n        <li> {' </> '} </li>\r\n       </li>\r\n       <li> {' ) '} </li>\r\n      </div>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n\r\n   <div className='block1'>\r\n    <details>\r\n     <summary>  네이버 검색 API React 예제 </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className='h2'> 📌 포스트맨을 이용한 테스트 </h2>\r\n      <li> 내 어플리케이션에 등록하기 </li>\r\n      <li> 포스트맨을 켜서 GET에 https://openapi.naver.com/v1/search/movie.json?query=\"아이언맨\" 넣기 </li>\r\n      <li> Headers로 변경하고 key와 value에 [X-Naver-Client-Id,어플리케이션 Clinet-Id] , [X-Naver-Client-Secret,어플리케이션 Client-Secret] </li>\r\n\r\n      <h2 className='h2'> 📌 react 예시 </h2>\r\n      <li> naver 검색 api를 사용하려면 cors문제를 해결해야한다.  </li>\r\n      <div className=\"block4\">\r\n       <li> import axios from 'axios'; </li>\r\n       <li>  </li> <br />\r\n       <li> {\"const TestSearchAPI = () => {\"}\r\n        <li> const [stores, setStores] = useState([]); </li>\r\n        <li> const [loading, setLoading] = useState(null); </li>\r\n        <li> const [error, setError] = useState(null); </li>\r\n        <li> const [word, setWord] = useState('기본'); </li>\r\n        <li> const ClientId = '사용자ID'; </li>\r\n        <li> const ClientSecret = '사용자Secret'; </li>\r\n        <li> {\" const changeText = (e) => { \"}\r\n         <li> {\" console.log(e.target.value); \"} </li>\r\n         <li> {\" setWord(e.target.value); \"} </li>\r\n        </li>\r\n        <li> {\" } \"} </li>\r\n        <li>  </li> <br />\r\n        <li> {\" const fetchStores = async () => { \"}\r\n         <li> {\" try { \"}\r\n          <li> {\" setStores(null); \"} </li>\r\n          <li> {\" setError(null); \"} </li>\r\n          <li> {\" setLoading(true); \"} </li>\r\n          <li> {\" const response = await axios.get('/v1/search/local.json' \"}\r\n           <li> {\" , { \"}\r\n            <li> {\" params: { \"}\r\n             <li> {\" query: word, \"} </li>\r\n             <li> {\" display: 1 \"} </li>\r\n            </li>\r\n            <li> {\" }, \"} </li>\r\n            <li> {\" headers: { \"}\r\n             <li> {\" 'X-Naver-Client-Id': ClientId, \"} </li>\r\n             <li> {\" 'X-Naver-Client-Secret': ClientSecret \"} </li>\r\n            </li>\r\n            <li> {\" } \"} </li>\r\n           </li>\r\n          </li>\r\n          <li> {\" }); \"} </li>\r\n          <li> {\" const res = { response }; \"} </li>\r\n          <li> {\" console.log(res); \"} </li>\r\n          <li> {\" setStores(res.response.data.items); \"} </li>\r\n         </li>\r\n         <li> {\" } \"} </li>\r\n         <li> {\" catch (e) { \"}\r\n          <li> {\" setError(e); \"} </li>\r\n         </li>\r\n         <li> {\" } \"} </li>\r\n         <li> {\" setLoading(false); \"} </li>\r\n        </li>\r\n        <li> {\" } \"} </li>\r\n        <li> {\" useEffect(() => { \"}\r\n         <li> {\" fetchStores() \"} </li>\r\n        </li>\r\n        <li> {\" }, []); \"} </li>\r\n        <li> {\" if (loading) return < div > 로딩 </div> \"} </li>\r\n        <li> {\" if (error) return <div> 에러 </div> \"} </li>\r\n        <li> {\" if (!stores) return <div> 아무것도 없는데? </div>; \"} </li>\r\n        <li> {\" return ( \"} </li>\r\n        <li> {\" <> \"}\r\n         <li> {\" {stores.map(store => ( \"}\r\n          <li> {\" <Container key={store.address}> \"}\r\n           <li> {\" <div> 가게 주소 : {store.address} </div> \"} </li>\r\n           <li> {\" <div> 가게 카테고리 : {store.category} </div> \"} </li>\r\n           <li> {\" <div> 가게 설명 : {store.descriptions} </div> \"} </li>\r\n           <li> {\" <div> 가게 링크 : {store.link} </div> \"} </li>\r\n           <li> {\" <div> 맵x 좌표 : {store.mapx} </div> \"} </li>\r\n           <li> {\" <div> 맵y 좌표 : {store.mapy} </div> \"} </li>\r\n           <li> {\" <div> 길주소 : {store.roadAddress} </div> \"} </li>\r\n           <li> {\" <div> 가게명 : {store.title} </div> \"} </li>\r\n          </li>\r\n          <li> {\" </Container> \"} </li>\r\n         </li>\r\n         <li> {\" ))} \"} </li>\r\n         <li> {\" <input \"}\r\n          <li> {\" type='text' onChange={changeText} \"} </li>\r\n         </li>\r\n         <li> {\" /> \"} </li>\r\n         <li> {\" <button onClick={fetchStores}> 불러오기</button> \"} </li>\r\n        </li>\r\n        <li> {\" </> \"} </li>\r\n        <li> {\" ) \"} </li>\r\n       </li>\r\n       <li> {\"}\"} </li>\r\n       <li> export default TestSearchAPI; </li>\r\n      </div>\r\n\r\n      <h2 className='h2'> 📌  </h2>\r\n      <li>  </li>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n\r\n\r\n   <div className='block1'>\r\n    <details>\r\n     <summary> 네이버 로그인 API </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className=\"h2\"> 📌 Naver API 설정하기 </h2>\r\n      <li> <a href=\"https://developers.naver.com/main/\" target=\"_blank\" rel=\"noopener noreferrer\"> 네이버 개발자 센터 </a> </li>\r\n      <li> <a href=\"https://developers.naver.com/docs/login/api/api.md\" target=\"_blank\" rel=\"noopener noreferrer\"> 네이버 API 문서 </a> </li>\r\n      <li> 상단 메뉴 Application 클릭 </li>\r\n      <li> 애플리케이션 등록 </li>\r\n      <li> 애플리케이션 이름 : 아무거나 </li>\r\n      <li> 사용 API : 네아로 , 필요한거 체크 </li>\r\n      <li> 환경 추가 : PC 웹 , 서비스 URL을 사용할것입력 , 콜백 URL을 아무거나입력  </li>\r\n\r\n      <h2 className=\"h2\"> ✔ 스프링 예시 </h2>\r\n      <li> 소제목\r\n       <div className='block3'>\r\n        <h3 className=\"h3\"> 🎈 application.yml </h3>\r\n        <li> security:\r\n         <li> oauth2:\r\n          <li> client:\r\n           <li> registration:\r\n            <li> naver:\r\n             <li> client-id: 클라이언트 ID </li>\r\n             <li> client-secret: 클라이언트 보안 비밀번호 </li>\r\n             <li> scope:\r\n              <li> - email </li>\r\n              <li> - pulic_profile </li>\r\n             </li>\r\n             <li> client-name: Naver </li>\r\n             <li> authorization-grant-type: [authorization_code,refresh_token,delete] #발급,갱신,삭제 </li>\r\n             <li> redirect-uri: 네이버아이디로 로그인 Callback URL  #html 로그인폼에서 사용하는 경로 </li>\r\n            </li>\r\n           </li>\r\n           <li> provider:\r\n            <li> naver:\r\n             <li> authorization-uri: https://nid.naver.com/ouath2.0/authorize <small> # 네이버 로그인창이 뜨게 만듬 </small> </li>\r\n             <li> token-uri: https://nid.naver.com/oauth2.0/toke <small> # 토큰을 받기 위해 사용</small> </li>\r\n             <li> user-info-uri: https://openapi.naver.com/v1/nid/me <small> # 프로필 API를 호출할 때 사용 </small> </li>\r\n             <li> user-name-attribute: response <small> # 응답을 받을 때</small> </li>\r\n            </li>\r\n           </li>\r\n          </li>\r\n         </li>\r\n        </li> <br />\r\n\r\n        <li> <h3 className=\"h3\"> 🎈 html </h3>\r\n         <li> {'<a href=\"네이버아이디로 로그인 Callback URL 경로\"> 네이버 로그인 </a>'} </li>\r\n         <small> 네이버는 경로를 본인이 적기 때문에 경로 설정을 잘 해주어야 한다. #localhost:8080 은 빼고 사용 </small>\r\n        </li> <br />\r\n\r\n        <li> <h3 className=\"h3\"> 🎈 CustomOAuth2UserService </h3>\r\n         <li> @Service public class CustomOAuth2UserService extends DefaultOAuth2UserService {'{'}\r\n          <li> @Override public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException\r\n           <li> System.out.println(\"1: \"+ userRequest); </li>\r\n           <li> System.out.println(\"2: \"+userRequest.getAccessToken().getTokenValue()); </li>\r\n           <li> System.out.println(\"3: \"+userRequest.getAdditionalParameters()); </li>\r\n           <li> System.out.println(\"4: \"+userRequest.getClientRegistration()); //유저의 아이디 등등 </li>\r\n           <li> System.out.println(\"5: \"+super.loadUser(userRequest).getAttributes()); </li>\r\n           <li> return super.loadUser(userRequest);  </li>\r\n          </li>\r\n         </li>\r\n         <li> {'}'} </li>\r\n        </li>\r\n\r\n        <li> <h3 className=\"h3\"> 🎈 CustomWebSecurityConfig </h3>\r\n         <li> @EnableWebSecurity </li>\r\n         <li> @Configuration  </li>\r\n         <li> public class CustomWebSecurityConfig extends WebSecurityConfigurerAdapter {'{'}\r\n          <li> @Override </li>\r\n          <li> protected void configure(HttpSecurity http) throws Exception {'{'}\r\n           <li> .oauth2Login() </li>\r\n           <li> .loginPage(\"/loginForm\")  </li>\r\n           <li> .userInfoEndpoint()  </li>\r\n           <li> .userService(customOAuth2UserService); //로그인 후에 처리할 서비스 작성 </li>\r\n          </li>\r\n          <li> {'}'} </li>\r\n         </li>\r\n         <li> {'}'} </li>\r\n        </li>\r\n\r\n\r\n       </div>\r\n      </li>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default ApiNaver;","import React from 'react';\r\n\r\nconst ApiGoogle = (props) => {\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 구글 로그인 API </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className=\"h2\"> 📌 Google API 설정하기 </h2>\r\n                        <li> 1. <a href=\"https://console.cloud.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> Google API 설정하기 </a> </li>\r\n                        <li> 2. 좌측 메뉴 API 및 서비스 클릭 </li>\r\n                        <li> 3. 상단에 육각형 모양 3개를 클릭해서 새프로젝트 생성  </li>\r\n                        <li> 4. 좌측 메뉴에 \"OAuth 동의 화면\" 클릭하고 User Type 체크하기  </li>\r\n                        <li> 5. 그다음 화면에서 앱 이름만 적기(test-oauth)  </li>\r\n                        <li> 6. 좌측 메뉴 \"사용자 인증 정보\" - \"사용자 인증 정보 만들기\" 클릭 - OAuth 클라이언트 ID 클릭\r\n                            - 애플리케이션 유형에서 웹 어플리케이션 선택 - 이름* 바꾸기(test-oauth) -\r\n                            승인된 리디렉션 URI 추가(http://localhost:8080/login/oauth2/code/google) </li>\r\n\r\n                        <h2 className=\"h2\"> ✔ 스프링 예시 </h2>\r\n                        <li>\r\n                            <div className='block3' style={{ listStyle: \"none\" }}>\r\n                                <h3 className=\"h3\"> 🎈 application.yml </h3>\r\n                                <li> security:\r\n                                    <li> oauth2:\r\n                                        <li> client:\r\n                                            <li> registration:\r\n                                                <li> google:\r\n                                                    <li> client-id: 클라이언트 ID </li>\r\n                                                    <li> client-secret: 클라이언트 보안 비밀번호 </li>\r\n                                                    <li> scope:\r\n                                                        <li> - email </li>\r\n                                                        <li> - profile </li>\r\n                                                    </li>\r\n                                                </li>\r\n                                            </li>\r\n                                        </li>\r\n                                    </li>\r\n                                </li> <br />\r\n\r\n                                <h3 className=\"h3\"> 🎈 html 코드 </h3>\r\n                                <li> {'<a href=\"/oauth2/authorization/google\"> 구글 로그인 </a>'}\r\n                                    <small> oauth2를 사용할 경우 경로가 정해져 있으므로 변경하지 않고 그대로 사용 </small> </li>\r\n                                <li> </li> <br />\r\n\r\n                                <h3 className=\"h3\"> 🎈 CustomOAuth2UserService </h3>\r\n                                <li> @Service public class CustomOAuth2UserService extends DefaultOAuth2UserService {'{'}\r\n                                    <li> @Override public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException {'{'}\r\n                                        <li> System.out.println(\"1: \"+ userRequest); </li>\r\n                                        <li> System.out.println(\"2: \"+userRequest.getAccessToken().getTokenValue()); </li>\r\n                                        <li> System.out.println(\"3: \"+userRequest.getAdditionalParameters()); </li>\r\n                                        <li> System.out.println(\"4: \"+userRequest.getClientRegistration()); //유저의 아이디 등등 </li>\r\n                                        <li> System.out.println(\"5: \"+super.loadUser(userRequest).getAttributes()); </li>\r\n                                        <li> return super.loadUser(userRequest);  </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                </li>\r\n                                <li> {'}'} </li>\r\n                                <li> </li> <br />\r\n\r\n                                <h3 className=\"h3\"> 🎈 CustomWebSecurityConfig </h3>\r\n                                <li> @EnableWebSecurity @Configuration public class CustomWebSecurityConfig extends WebSecurityConfigurerAdapter {'{'}\r\n                                    <li> @Override protected void configure(HttpSecurity http) throws Exception {'{'}\r\n                                        <li> .oauth2Login() </li>\r\n                                        <li> .loginPage(\"/loginForm\")  </li>\r\n                                        <li> .userInfoEndpoint()  </li>\r\n                                        <li> .userService(customOAuth2UserService); //로그인 후에 처리할 서비스 작성 </li>\r\n                                    </li>\r\n                                    <li> {'}'} </li>\r\n                                </li>\r\n                                <li> {'}'} </li>\r\n                                <li> </li> <br />\r\n\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ApiGoogle;","import React from 'react';\r\n\r\nconst ApiKakao = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 카카오 로그인 API </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Kakao Login API - React </h2>\r\n            <li> <a href=\"https://developers.kakao.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              카카오 개발자 플랫폼\r\n            </a> </li>\r\n            <li> 로그인 해서 어플리케이션 추가하기 </li>\r\n            <li> {' \"https://kauth.kakao.com/oauth/authorize?client_id={REST_API_KEY}&redirect_uri={REDIRECT_URI}&response_type=code\" '}\r\n              <li> REST_API_KEY 에는 내 어플리케이션 - 앱설정 - 요약정보 - REST API 키 </li>\r\n              <li> REDIRECT_URI 에는 내 어플리케이션 - 제품 설정 - 카카오 로그인 - Redirect URI <small> # 로그인 한 뒤에 이 주소로 돌아옴</small> </li>\r\n              <li> 내 어플리케이션 - 제품 설정 - 활성화 - ON </li>\r\n              <li> 내 어플리케이션 - 앱설정 - 플랫폼 - Web - 서비스 Redirect URI 추가 </li>\r\n            </li>\r\n            <h3 className='h3'> 🎈 KakaoLoginUrl.js </h3>\r\n            <div className='block4'>\r\n              <li> {' const CLIENT_ID = \"REST_API_KEY 넣어주기\"; '} </li>\r\n              <li> {' const REDIRECT_URI = \"http://localhost:3000\"; '} </li>\r\n              <li> {' export const KAKAO_AUTH_URL = `https://kauth.kakao.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=code`; '} </li>\r\n            </div>\r\n            <h3 className='h3'> 🎈 LoginAPIs.js </h3>\r\n            <div className='block4'>\r\n              <li> {' import { KAKAO_AUTH_URL } from \"KakaoLoginUrl.js 파일 경로\"; '} </li>\r\n              <li>  </li> <br />\r\n              <li> {' const LoginApis = () => { '}\r\n                <li> return (\r\n                  <li> {' <a href={KAKAO_AUTH_URL} > '}\r\n                    <li> {' <img alt=\"\" src={kakaoimg} ></img> '} </li>\r\n                    <li> {' <span>카카오계정 로그인</span> '} </li>\r\n                  </li>\r\n                  <li> {' </a> '} </li>\r\n                  <li> ); </li>\r\n                </li>\r\n                <li> {'};'} </li>\r\n              </li>\r\n              <li> export default LoginApis; </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 카카오 맵 API </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> html 파일에 코드 넣어주기 </li>\r\n            <li> {' <script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=JavaScript 키&libraries=services\"> </script> '} </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 리액트 타입스크립트 테스트 예시 </h3>\r\n                <div className='block4'>\r\n                  <li> {\" import styled from 'styled-components'; \"} </li>\r\n                  <li> {\" const MapContainer = styled.div` \"}\r\n                    <li> {\" \twidth: 500px; \"} </li>\r\n                    <li> {\" \theight: 500px; \"} </li>\r\n                  </li>\r\n                  <li> {\" `; \"} </li>\r\n                  <li> {\" declare global { \"}\r\n                    <li> {\" \tinterface Window { \"}\r\n                      <li> {\" \t\tkakao: any; \"} </li>\r\n                    </li>\r\n                    <li> {\" \t} \"} </li>\r\n                  </li>\r\n                  <li> {\" } \"} </li>\r\n                  <li> {\" interface ISubPageProps { } \"} </li>\r\n                  <li> {\" const SubPage: React.FunctionComponent<ISubPageProps> = (props) => { \"}\r\n                    <li> {\" \tReact.useEffect(() => { \"}\r\n                      <li> {\" \t\tconst options = {  \"}\r\n                        <li> {\" \t\t\tcenter: new window.kakao.maps.LatLng(33.450701, 126.570667),  \"} </li>\r\n                        <li> {\" \t\t\tlevel: 3 \"} </li>\r\n                      </li>\r\n                      <li> {\" \t\t}; \"} </li>\r\n                      <li> {\" \t\tconst container = document.getElementById('map'); \"} </li>\r\n                      <li> {\" \t\tconst map: any = new window.kakao.maps.Map(container, options); \"} </li>\r\n                    </li>\r\n                    <li> {\" \t}, []); \"} </li>\r\n                    <li> {\" \treturn ( \"}\r\n                      <li> {\" \t\t<> \"}\r\n                        <li> {\" \t\t\t<MapContainer id='map'> </MapContainer> \"} </li>\r\n                      </li>\r\n                      <li> {\" \t\t</> \"} </li>\r\n                    </li>\r\n                    <li> {\" \t); \"} </li>\r\n                  </li>\r\n                  <li> {\" }; \"} </li>\r\n                  <li> {\" export default SubPage; \"} </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiKakao;","import React from 'react';\r\n\r\nconst ApiFacebook = (props) => {\r\n    return (\r\n        <div className=\"common_style\">\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 페이스북 로그인 API </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className=\"h2\"> 📌 Facebook API 설정하기 </h2>\r\n                        <li> 0. <a href=\"https://developers.facebook.com/?locale=ko_KR\" target=\"_blank\" rel=\"noopener noreferrer\"> 페이스북 개발자 홈페이지  </a> </li>\r\n                        <li> 1. 페이스북 개발자 홈페이지 로그인 </li>\r\n                        <li> 2. 처음이면 우측 상단에 시작하기 아니면 내 앱 누르기 </li>\r\n                        <li> 3. 처음이면 앱 만들기 버튼 클릭 </li>\r\n                        <li> 4. 앱 유형 \"없음\" 선택 </li>\r\n                        <li> 5. 좌측메뉴 fackbook 로그인 설정 \"빠른시작\" </li>\r\n                        <li> 6. 웹 - 사이트 URL - http://localhost:8080  입력 </li>\r\n                        <li> 7. 좌측 메뉴 설정 - 기본 설정 </li>\r\n                        <li> 8. application.yml에 설정하기 </li>\r\n\r\n                        <h2 className=\"h2\"> ✔ 스프링 예시 </h2>\r\n                        <li> 소제목\r\n                            <div className='block3'>\r\n                                <h3 className=\"h3\"> 🎈 application.yml </h3>\r\n                                <li> security:\r\n                                    <li> oauth2:\r\n                                        <li> client:\r\n                                            <li> registration:\r\n                                                <li> facebook:\r\n                                                    <li> client-id: 클라이언트 ID </li>\r\n                                                    <li> client-secret: 클라이언트 보안 비밀번호 </li>\r\n                                                    <li> scope:\r\n                                                        <li> - email </li>\r\n                                                        <li> - pulic_profile </li>\r\n                                                    </li>\r\n                                                </li>\r\n                                            </li>\r\n                                        </li>\r\n                                    </li>\r\n                                </li> <br />\r\n\r\n                                <h3 className=\"h3\"> 🎈 html 코드 </h3>\r\n                                <li> {'<a href=\"/oauth2/authorization/facebook\"> 페이스북 로그인 </a>'} </li> <br />\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ApiFacebook;","import React from 'react';\r\n\r\nconst CloudOracle = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] 오라클 클라우드 설명(정리 x) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <div className='sstitle'> OCI에서 사용하는 용어 </div>\r\n              <div className='mblock'>\r\n                <li> 리전(Region) : 데이터 센터가 운영되는 지리적 영역 </li>\r\n                <li> AD(Availability) : 리전에서 실제 서비스가 운영되는 데이터센터,\r\n                  각 AD 독립적인 영역 </li>\r\n                <li> VCN(Virtual Cloud Network) : 가상 네트워크에서 통신 규칙 등을 설정할 수 있음 </li>\r\n                <li> CIDR(Classless Inter-Domain Routing) 블록 : IP주소 할당 방법\r\n                  사이더라고 불림, 123.123.123.123/24 \"/\" 문자 뒤에 숫자는 IP주소처럼\r\n                  네트워크 주소와 호스트 주소를 나누듯이 \"/\"문자 뒤에 숫자는 사이더의 접두어\r\n                  길이이고 그 뒤에 남은 비트는 IP주소 이다. </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [1] 오라클 회원가입 하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> <a href=\"https://www.oracle.com/kr/cloud/free/\" target=\"_blank\" rel=\"noopener noreferrer\"> 오라클 클라우드 사이트 </a> </li>\r\n              <li> 국가/지역 </li>\r\n              <li> 이름 </li>\r\n              <li> 성 </li>\r\n              <li> <a href=\"https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=1&ie=utf8&query=%EC%98%81%EB%AC%B8%EC%A3%BC%EC%86%8C+%EB%B3%80%ED%99%98\" target=\"_blank\" rel=\"noopener noreferrer\"> 네이버 영문 주소 변환기 </a> </li>\r\n              <li> 전자메일 : 이메일 인증 </li>\r\n              <li> 상세주소 </li>\r\n              <li> 시군구 </li>\r\n              <li> 도 : 서울이면 서울특별시 </li>\r\n              <li> Visa나 Master카드 필요, 2달러 정도 결제되었다가 반환 </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [2] 오라클 클라우드 (CentOS7)인스턴스 생성하고 설정하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 오라클 구획 생성하기(필수는 아님) </h2>\r\n            <div className=\"block4\">\r\n              <li> 중간에 뭔가 뺸것이 있을 수도 있어서 나중에 다시 할때 정리하기 </li>\r\n              <li> 검색하다보니 초기 세팅이 나쁘지 않아서 올려놓기 </li>\r\n              <li> <a href=\"https://eazymanual.com/oracle-cloud-compartment-and-network-settings/\"\r\n                target=\"_blank\" rel=\"noopener noreferrer\"> 참고 </a> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 오라클 구획 생성하기(필수는 아님) </h2>\r\n            <div className=\"block4\">\r\n              <li> 메뉴 - ID {'&'} 보안 - 구획 - 구획 생성  </li>\r\n              <li> 메뉴 - 네트워킹 - 가상클라우드네트워크 - 좌측에 구획 선택 - VCN 마법사 생성\r\n                <li> 이름 작성 , IPv4 CIDR 블록 10.0.0.0/16 입력 </li>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 서브넷 생성 </h2>\r\n            <div className=\"block4\">\r\n              <li> 서브넷 생성\r\n                <li> 이름 작성 , CIDR 블록 10.0.0.0/24 입력 </li>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 수신 규칙(인스턴스에 접근할 수 있는 포트 설정) </h2>\r\n            <div className=\"block4\">\r\n              <li> 서브넷 - 만든 서브넷 이름 클릭 - 디폴트 클릭 - 수신 규칙 추가\r\n                <li> <small> 소스 범위에는 입력하지 말것! , 입력하게되면 나중에 nginx설치하고 IP접속해도 무용지물 </small> </li>\r\n                <li> 소스 CIDR : 0.0.0.0/0 , 대상 포트 범위 : 80,443 , 설명 : HTTP, HTTPS </li>\r\n                <li> 소스 CIDR : 0.0.0.0/0 , 대상 포트 범위 : 3306,33060 , 설명 : mysql </li>\r\n                <li> 소스 CIDR : 0.0.0.0/0 , 대상 포트 범위 : 1521 , 설명 : oracle </li>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 인스턴스 생성 </h2>\r\n            <div className=\"block4\">\r\n              <li> 메뉴 - 컴퓨트 - 인스턴스 - 인스턴스 생성\r\n                <li> 이름 작성 , 이미지 및 구성 - 이미지 변경 - 원하는 운영체제(CentOS7)    </li>\r\n                <li> 전용키는 .ppk 확장자로 공개키는 .pub확장자로 저장하고 공개키 붙여넣기 </li>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 공용 IP주소 생성하고 인스턴스에 연결해주기 </h2>\r\n            <div className=\"block4\">\r\n              <li> <small> 오라클 무료라면 공용 IP주소를 2개를 만들어놓고 인스턴스 2개를 생성해서 각각 연결해야한다.\r\n                30일이 지나면 공용 IP주소를 더 이상 생성을 할 수 없다!!!\r\n              </small> </li>\r\n              <li> 메뉴 - 네트워킹 - IP관리 - 공용IP - 예약된 공용 IP주소 생성 </li>\r\n              <li> 메뉴 - 컴퓨트 - 인스턴스 클릭 - 내 VM - 연결된 VNIC 클릭  - 내 VNIC 클릭 - IPv4 주소 클릭 -\r\n                우측 점 3개에서 편집 - 공용 IP 없음 체크 그리고 업데이트 - 편집 - 예약된 공용IP 체크 -\r\n                -  위에서 생성한 IP 넣기 </li>\r\n              <li>  메뉴 - 컴퓨트 - 인스턴스 - 내 인스턴스 , 공용 IP 주소 복사 (opc , 146.56.171.3) </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [3] MobaXterm, Private Key로 오라클 클라우드 (CentOS7)인스턴스에 접속 </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1. MobaXterm을 실행 시키고 좌측상단 Sessions 클릭 </li>\r\n            <li> 2. New Session 클릭 </li>\r\n            <li> 3. SSH 클릭 </li>\r\n            <li> 4. Remote host에 VM 공용IP주소 적고, Specify username 체크하고 opc 입력 </li>\r\n            <li> 5. 그리고 아래쪽에 Advanced SSH settings 클릭 </li>\r\n            <li> 6. Use private key 체크하고 우측 파일 아이콘 클릭해서 저장해둔 pkk파일 불러오기 </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [4] ssh 명령어로 오라클 클라우드 인스턴스에 접속하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1. .ppk파일을 저장한다. (인스턴스를 생성한 사람이 가지고 있을 것이다.) </li>\r\n            <li> 2. cd 명령어를 이용해서 .ppk파일이 있는 폴더로 이동한다. </li>\r\n            <li> 3. ssh -i 파일.ppk opc@공인IP주소 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 오라클 클라우드로 웹서버 httpd 아파치 서버에 React 배포하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Package.json에 homepage속성을 도메인주소로 변경해야한다. </li>\r\n            <li> React를 실행시키고 npm run build 명령어를 입력 </li>\r\n            <li> 입력하면 폴더에 build 폴더가 생성 </li>\r\n            <li> build 폴더에 index.html 등 모든 파일을 리눅스에 웹서버가 실행되는 폴더에 옮겨 넣으면 된다. </li>\r\n            <li> vi /etc/httpd/conf/httpd.conf <small> document주소를 리액트 폴더주소와 맞춰준다. </small> </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 클라우드로 만든 리눅스 centos7에 mysql 만들고 mysql workbench와 연결하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> mysql을 리눅스에 설치했다고 가정하에 진행 </li>\r\n            <li> 방화벽 22포트 열어주고 </li>\r\n            <li> mysql 사용자 localhost 권한이 있어야 한다. </li>\r\n            <li> mysql workbench에 들어가서 +버튼 누르고 </li>\r\n            <li> Connection Method를 Standard TCP/IP over SSH로 변경 </li>\r\n            <li> SSH Hostname: 클라우드IP주소:22  </li>\r\n            <li> SSH Username : 클라우드인스턴스사용자명(오라클은 opc) </li>\r\n            <li> SSH Password - Store in Vault ... : 본인이 각자 알아서 입력 </li>\r\n            <li> SSH Key File : pkk 파일을 경로 지정하기(만약 설정했다면 사용) </li>\r\n            <li> mysql hostname : 원격접속한리눅스이후부터의 IP경로 이므로 127.0.0.1 </li>\r\n            <li> mysql server port : 3306 </li>\r\n            <li> username : root(원하는 사용자) </li>\r\n            <li> password - Store in Vault ... : mysql사용자 비밀번호 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 리눅스에 스프링 배포하는 방법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> git에 대한 사용법은 아직 모르니 일단 패스 </li>\r\n            <li> jdk 설치 </li>\r\n            <li> git clone github저장소 </li>\r\n            <li> sudo chmod 777 ./gradlew </li>\r\n            <li> .gradlew build </li>\r\n            <li> sudo chmod 664 ./gradlew </li>\r\n            <li> build/libs 폴더에 java -jar jar파일 실행(plain 말고) </li>\r\n            <li> (포트설정은 조사해보기) </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <ul>\r\n        <span className=\"lblock\">\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> 오라클 클라우드 생성 및 연결하기\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> 클라우드 공간에 DB생성하기 </div>\r\n                <div className='mblock'>\r\n                  <li> 메뉴 - Oracle Database - 자율운영 데이터베이스 - 자율운영 데이터베이스 생성 </li>\r\n                  <li> 구획, 표시이름, 데이터베이스 이름 적고, 트랜잭션 처리 클릭 , 항상 무료 구성 옵션만 표시 사용 - 생성완료 </li>\r\n                  <li> 프로비전 중 - 사용가능으로 변경될때 까지 대기  </li>\r\n                  <li> DB 접속 - 인스턴스 전자 지갑 다운로드 </li>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className='sstitle'> sql developer에 연결하기 </div>\r\n                <div className='mblock'>\r\n                  <li> 좌측상단 초록색 + 버튼 클릭  </li>\r\n                  <li> DB이름, 사용자 이름 : Admin , 비밀번호는 설정한 비밀번호 # Admin은 변경이 되지 않는것 같음 </li>\r\n                  <li> 접속 유형을 클라우드 전자 지갑으로 변경 </li>\r\n                  <li> 구성 파일에 오라클 클라우드 DB에서 받은 전자지갑 파일을 넣기 </li>\r\n                  <li> 일단 연결 </li>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className='sstitle'> JDBC 연결하기(미확인) </div>\r\n                <div className='mblock'>\r\n                  <li> 전자지갑 파일 압축 해제를 하고 tnsnames.ora 파일을 보면 오라클클라우드DB명_high 와같은 문구를 볼 수 있다. </li>\r\n                  <li> url: jdbc:oracle:thin:@오라클클라우드DB명_high?TNS_ADMIN=전자지갑경로(D:/Wallet) </li>\r\n                  <li> application.yml <small> 아래 내용들 확인 </small>\r\n                    <div className=\"sblock\">\r\n                      <li> spring:\r\n                        <li> datasource:\r\n                          <li> {' driver-class-name: oracle.jdbc.OracleDriver '} </li>\r\n                          <li> {' url: jdbc:oracle:thin:@ssssksss_medium?TNS_ADMIN=${./src/main/resources/Wallet_ssssksss} '} </li>\r\n                          <li> {' username: ${ssssksss.dbinfo.id} '} </li>\r\n                          <li> {' password: ${ssssksss.dbinfo.password} '} </li>\r\n                        </li>\r\n                      </li> <br />\r\n                      <li> jpa:\r\n                        <li> properties:\r\n                          <li> hibernate:\r\n                            <li> dialect: org.hibernate.dialect.Oracle10gDialect </li>\r\n                          </li>\r\n                        </li>\r\n                      </li>\r\n                    </div>\r\n                  </li> <br />\r\n                  <li> build.gradle <small> #아래와 같이 되어 있는지 확인 </small>\r\n                    <div className=\"sblock\">\r\n                      <li> \timplementation 'com.oracle.database.security:oraclepki' </li>\r\n                      <li> \timplementation 'com.oracle.database.security:osdt_core' </li>\r\n                      <li> \timplementation 'com.oracle.database.security:osdt_cert' </li>\r\n                      <li> runtimeOnly 'com.oracle.database.jdbc:ojdbc8' </li>\r\n                    </div>\r\n                  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n        </span>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CloudOracle;","import React from 'react';\r\n\r\nconst DockerBasic = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 도커란? </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> <a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> 도커 홈페이지 </a> </li>\r\n              <li> 컨테이너 기술 </li>\r\n              <li> 빌드, 배포, 실행을 도와준다. </li>\r\n              <li> 집중되는 많은 트래픽을 처리할 수 있게 도와준다. </li>\r\n              <li> 컨테이너를 실행,관리,상태 등을 관리하게 해준다. </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <div className='block4'>\r\n              <li> 장점 : </li>\r\n              <li> 단점 : </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 도커 명령어 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DockerBasic;","import React from 'react';\r\n\r\nconst CicdJenkins = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] 젠킨스란? </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [1] 젠킨스 시작 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> vi /var/lib/jenkins/secrets/initialAdminPassword <small> 젠킨스 초기 비번 </small> </li>\r\n              <li> IP주소:9090 으로 접속 </li>\r\n              <li> 비번 입력 </li>\r\n              <li> Install Suggested Plugins </li>\r\n              <li> 회원가입 </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [2] 젠킨스 JDK, Git, Gradle 연결 </summary>\r\n          <div className='block2'>\r\n            <div className=\"block4\">\r\n              <li> Jenkins 관리 - Global Tool Configuration </li>\r\n              <li> <h2> 📌 JDK </h2> </li>\r\n              <li> JDK installations 클릭 </li>\r\n              <li> Name : jdk </li>\r\n              <li> JAVA_HOME : /usr/lib/jvm/java-11-openjdk-11.0.14.0.9-1.el7_9.x86_64 <small> echo $JAVA_HOME 나오는 경로 </small> </li>\r\n              <li> Install automatically 체크 해제 </li>\r\n              <li> <h2> 📌 Git </h2> </li>\r\n              <li> Name : git </li>\r\n              <li> Path to Git executable : /usr/bin/git <small> which git 명령어로 나오는 경로 </small> </li>\r\n              <li> <h2> 📌 Gradle </h2> </li>\r\n              <li> Gradle installations 클릭 </li>\r\n              <li> name : gradle </li>\r\n              <li> GRADLE_HOME : /opt/gradle/gradle-7.0.2/bin <small> echo $GRADLE_HOME 명령어로 나오는 경로 + /bin </small> </li>\r\n              <li> Install automatically 체크 해제 </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [3] 젠킨스 깃허브 연결 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> <h2> 깃허브 토큰 생성하는 방법(참고) </h2> </li>\r\n              <div className=\"block3\">\r\n                <li> github - settings - Developer settings - Personal access tokens - Generate new token </li>\r\n                <li> Note에 Jenkins 입력 </li>\r\n                <li> repo 클릭, admin:repo_hook 클릭, 토큰 생성 클릭 </li>\r\n                <li> Personal access tokens 값 저장해놓기(다시 확인 불가)  </li>\r\n              </div>\r\n              <li> Jenkins 관리 - 시스템 설정 </li>\r\n              <li> <h2> 📌 Jenkins Location </h2> </li>\r\n              <li> Jenkins URL : http://152.70.234.5:9090/ <small> 젠킨스 공유 IP URL </small> </li>\r\n              <li> <h2> 📌 GitHub </h2> </li>\r\n              <li> GitHub Server </li>\r\n              <li> Name : github_server </li>\r\n              <li> API URL : https://api.github.com </li>\r\n              <li> Add - Jenkins 클릭 </li>\r\n              <li> Kind : Secret text </li>\r\n              <li> Scope : Global (Jenkins, nodes, items, all child items, etc) </li>\r\n              <li> Secret : 깃허브토큰값 </li>\r\n              <li> ID : Credentials를 구분하기 위한 이름 </li>\r\n              <li> Description : 설명 </li>\r\n              <li> Add </li>\r\n              <li> Test connection </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [4] 젠킨스 프로젝트 생성 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 새로운 Item </li>\r\n              <li> Enter an item name : ssssksss_server <small> 알아서 </small> </li>\r\n              <li> Freestyle project 클릭하고 OK 클릭 </li>\r\n              <li> Github project 클릭 </li>\r\n              <li> Project url : https://github.com/ssssksss/React_Blog_Server <small> 깃허브 프로젝트 주소 </small> </li>\r\n              <li> <h2> 📌 소스 코드 관리 </h2> </li>\r\n              <li> Git 체크 </li>\r\n              <li> Repository URL : https://github.com/ssssksss/React_Blog_Server.git <small> 깃허브 저장소 URL </small>  </li>\r\n              <li> Credentials </li>\r\n              <li> Add 클릭 - Jenkins 클릭 </li>\r\n              <li> Kind : Username with password </li>\r\n              <li> Scope : Global (Jenkins, nodes, items, all child items, etc)  </li>\r\n              <li> Username : 깃허브 ID <small> Username or Email </small> </li>\r\n              <li> Password : <small> 깃허브 password </small> </li>\r\n              <li> ID : github_account <small> 굳이 입력할 필요는 없다. </small> </li>\r\n              <li> <h2> 📌 빌드 유발 </h2> </li>\r\n              <li> GitHub hook trigger for GITScm polling </li>\r\n              <li> <h2> 📌 Build </h2> </li>\r\n              <li> Add build step 클릭 </li>\r\n              <li> Invoke Gradle script </li>\r\n              <li> Use Gradle Wrapper 체크 </li>\r\n              <li> Make gradlew executable 체크 </li>\r\n              {/*<li> Wrapper location : /opt/gradle/gradle-7.0.2 <small> $GRADLE_HOME에서 나오는 경로 </small> </li>*/}\r\n              <li> Tasks : clean build </li>\r\n              <li> Apply하고 저장 </li>\r\n              <li> Build Now 해서 성공이 되는지 확인 </li>\r\n              <li> 성공하면 /var/lib/jenkins/workspace/젠킨스프로젝트명(ssssksss_server)/build/libs 에서 war파일 확인 </li>\r\n              <li> ln -s /var/lib/jenkins/workspace/ssssksss_server/build/libs/ssssksss_server.war /usr/local/tomcat8/webapps/ssssksss_server.war </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [5] springboot gradle war 파일 만들기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Application.java </h2>\r\n            <div className='block4'>\r\n              <li> package com.ssssksss.ssssksss_server; </li>\r\n              <li> import org.springframework.boot.SpringApplication; </li>\r\n              <li> import org.springframework.boot.autoconfigure.SpringBootApplication; </li>\r\n              <li> import org.springframework.boot.builder.SpringApplicationBuilder; </li>\r\n              <li> import org.springframework.boot.web.servlet.support.SpringBootServletInitializer; </li>\r\n              <li> @SpringBootApplication </li>\r\n              <li> public class SsssksssServerApplication extends SpringBootServletInitializer {\"{\"}\r\n                <li> \tpublic static void main(String[] args) {\"{\"}\r\n                  <li> \t\tSpringApplication.run(SsssksssServerApplication.class, args); </li>\r\n                </li>\r\n                <li> \t{\"}\"} </li>\r\n                <li> \t@Override </li>\r\n                <li> \tprotected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\"{\"}\r\n                  <li> \t\treturn super.configure(builder); </li>\r\n                </li>\r\n                <li> \t{\"}\"} </li>\r\n              </li>\r\n              <li> {\"}\"} </li>\r\n            </div>\r\n\r\n\r\n            <h2 className='h2'> 📌 build.gradle </h2>\r\n            <div className='block4'>\r\n              <div className=\"block3\">\r\n                <li> plugins {\"{\"} <small> 추가 작성 </small>\r\n                  <li> id 'war' </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n              <div className=\"block3\">\r\n                <li> apply plugin:'war' <small> 새로 작성 </small> </li>\r\n                <li> bootWar {\"{\"}\r\n                  <li> \tarchiveBaseName='파일명' </li>\r\n                  <li> \tarchiveFileName='파일명.war' </li>\r\n                  <li> \tarchiveVersion = \"0.0.0\" </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n                <li> war.enabled = true </li>\r\n              </div>\r\n              <div className=\"block3\">\r\n                <li> bootWar.enabled = false </li>\r\n                <li> war.enabled = true </li>\r\n              </div>\r\n              <div className=\"block3\">\r\n                <li> dependencies {\"{\"} <small> 추가 작성 </small>\r\n                  <li> providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat' <small> 외부 톰캣 사용? </small> </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 build하고 자동으로 tomcat 재시작 </h2>\r\n            <div className='block4'>\r\n              <li> <h2> 📌 Build </h2> </li>\r\n              <li> Add build step </li>\r\n              <li> Excute shell <small> 쉘 스크립트 이용하기 </small> </li>\r\n              <li> Command에 아래와 같이 입력 </li>\r\n              <li> sleep 20 </li>\r\n              <li> sudo systemctl stop tomcat8.service </li>\r\n              <li> sleep 10 </li>\r\n              <li> sudo systemctl start tomcat8.service </li>\r\n              <li> <h2> 📌 리눅스에서 jenkins가 sudo 를 사용할 수 있게 설정해주기 </h2> </li>\r\n              <li> sudo vi /etc/sudoers </li>\r\n              <li> sudo visudo </li>\r\n              <li> 100번째 줄정도 root 아래에 아래 줄 추가 </li>\r\n              <li> jenkins         ALL=(ALL)       NOPASSWD:ALL </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Jenkins 프로젝트 생성 ( 미정리 ) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 빌드 후 조치 추가 클릭 - deploy war/ear to a container </li>\r\n              <li> add container - tomcat 8.x </li>\r\n              <li> credentials 클릭 - add - jenkins </li>\r\n              <li> kind : username with password </li>\r\n              <li> username : 톰캣 conf/tomcat-users.xml 파일에 설정해놓은 username </li>\r\n              <li> password : 톰캣 conf/tomcat-users.xml 파일에 설정해놓은 password </li>\r\n              <li> id : 대충 </li>\r\n              <li> description : 대충 </li>\r\n              <li> ok 클릭 </li>\r\n              <li> tomcat url : http:~~~:8080 <small> 알아서 작성 </small> </li>\r\n              <li> war/ear files : **/*.war </li>\r\n              <li> apply하고 저장 </li>\r\n              <li> /var/lib/jenkins/workspace/ssssksss_server_jenkins/build/libs <small> 이러한 경로에 가면 war파일이 존재 </small> </li>\r\n              <li> Execute shell - Command : java -jar ~~~.war </li>\r\n              <li> ln -s /var/lib/jenkins/workspace/ssssksss_server_jenkins/build/libs/ssssksss_server.war /usr/local/tomcat8/webapps/ssssksss-server.war </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CicdJenkins;","import React from 'react';\r\n\r\nconst CicdGithubAction = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] 깃허브 액션이란(정리 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> Workflow : yml로 작성되서 사용되는 프로세스, 프로젝트의 .github/workflows 폴더에 저장해서 사용 </li>\r\n              <li> Event : Workflow가 작동이 되는 규칙 </li>\r\n              <li> Job : Workflow에서 작업의 단위라고 보면된다. , Job은 여러개의 Step으로 이루어져 있다. </li>\r\n              <li> Step : Job에서 여러 단계로 진행되는 단위 </li>\r\n              <li> Action :  </li>\r\n              <li> Runner :  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Secret 레포지토리 설정 </h2>\r\n            <div className='block4'>\r\n              <li> Settings - Secrets - New repository Secret </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 git 토큰 설정하기 </h2>\r\n            <div className='block4'>\r\n              <li> Settings - Developer settings - personal access tokens에서 토큰 생성 </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 작업 시작? </h2>\r\n            <div className='block4'>\r\n              <li> 깃허브 - Actions - New workflow - set up a workflow yourself 클릭 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 yml 파일 설정하기 </h2>\r\n            <div className='block4'>\r\n              <li> {\" .github > workflow > main.yml \"} 로 프로젝트에 폴더 만들기  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [1] 깃허브 액션 관련 명령어 (정리 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 예시 </h3>\r\n                <div className='block4'>\r\n                  <li> name: 워크플로우 이름 </li>\r\n                  <li> on:\r\n                    <li> push: <small> push가 되었을 때 이벤트 발생 </small>\r\n                      <li> branches: [master] <small> 작업할 브랜치 설정 </small> </li>\r\n                    </li>\r\n                  </li>\r\n                  <li> jobs:\r\n                    <li> build:\r\n                      <li> runs-on: ubuntu-latest <small> 어떤 OS에서 사용할지 설정 </small> </li>\r\n                      <li> steps:\r\n                        <li> - name: 스텝의 이름 </li>\r\n                        <li> uses: 다른사람의액션을 가져와서 사용가능, 깃허브마켓플레이스action사용가능 </li>\r\n                        <li> run: <small> 명령을 아래와 같이 적을 수 있음 </small>\r\n                          <li> npm install </li>\r\n                          <li> npm test </li>\r\n                          <li> npm build </li>\r\n                          <li>  </li>\r\n                        </li>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [2] 깃허브 액션 클라우드 인스턴스에 폴더 생성해보기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 yml 설정 </h2>\r\n            <li> 아래 파일은 프로젝트에 .github/workflows/main.yml로 만든다. </li>\r\n            <div className='block4'>\r\n              <li> {\" name: remote ssh command \"} </li>\r\n              <li> {\" on: [push] \"} </li>\r\n              <li> {\" jobs: \"}\r\n                <li> {\"   build: \"}\r\n                  <li> {\"     name: Build \"}\r\n                    <li> {\"     runs-on: ubuntu-latest \"} </li>\r\n                    <li> {\"     steps: \"}\r\n                      <li> {\"       - name: executing remote ssh commands using password \"}\r\n                        <li> {\"         uses: appleboy/ssh-action@master \"} </li>\r\n                        <li> {\"         with: \"}\r\n                          <li> {\"           host: ${{ secrets.HOST }} \"} </li>\r\n                          <li> {\"           username: ${{ secrets.USERNAME }} \"} </li>\r\n                          <li> {\"           key: ${{ secrets.KEY }} \"} </li>\r\n                          <li> {\"           port: ${{ secrets.PORT }} \"} </li>\r\n                          <li> {\"           script: | \"}\r\n                            <li> {\"             sudo mkdir /app   \"} </li>\r\n                          </li>\r\n                        </li>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 github secret 설정 </h2>\r\n            <div className='block4'>\r\n              <li> 프로젝트 저장소 - Settings - Secrets - Actions - New repository secret </li>\r\n              <li> Name : HOST , Value : 공인IP주소 </li>\r\n              <li> Name : USERNAME , Value : opc 혹은 ubuntu 혹은 본인이 설정해놓은 인스턴스 사용자명 </li>\r\n              <li> Name : KEY , Value : .ppk 파일에 내용을 넣으면 되는데 -----BEGIN RSA PRIVATE KEY----- ~ -----END RSA PRIVATE KEY----- 까지 전부 복사해서 넣어주어야 한다. </li>\r\n              <li> Name : PORT , Value : 22 (ssh 포트가 다르다면 알아서 바꾸기) </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CicdGithubAction;","import React from 'react';\r\n\r\nconst WindowCommand = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ cmd 명령어 <a href=\"#!\" name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> cd 폴더 : 폴더로 이동 </li>\r\n                  <li> cd.. : 이전 폴더로 돌아가기 </li>\r\n                  <li> dir : 폴더가 포함하고 있는 파일 목록 보여주기 </li>\r\n                  <li> 파일명 tasks : 파일로 실행할 수 있는 명령어 보여주기 </li>\r\n                  <li> clear : 터미널 초기화 </li>\r\n                  <li> tree : 디렉토리의 구조를 보여준다? (너무많이 나옴) </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ window 실행창 명령어 <a href=\"#!\" name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> appwiz.cpl : 윈도우 제어판 실행 </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a href=\"#!\" name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a href=\"#!\" name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WindowCommand;","import React from 'react';\r\n\r\nconst WindowSystem = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ Wifi </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 인터넷 속도 측정 사이트 </span>\r\n                <span className=\"mblock\">\r\n                  <li> <a href=\"https://www.speedtest.net/\" target=\"_blank\" rel=\"noopener noreferrer\"> Speedtest.net </a> </li>\r\n                  <li> 100정도가 안나오면 문제가 있을 수도 있음 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 인터넷 속도 증가 하는 방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 실행창 - gpedit.msc - 컴퓨터 구성 - 관리 템플릿 - 네트워크 - qos 패킷 스케줄러\r\n                    - 예약대역폭제한 - 사용 - 100% </li>\r\n                  <small> 기본이 80%이지만 개인 사용자는 상관 없음 ( 20%는 서비스 등으로 사용되는것 같음 ) </small>\r\n                  <li> 와이파이 아이콘 우측클릭 - 네트워크 및 인터넷 설정 열기 - 어댑터 옵션 변경 -\r\n                    사용하는 네트워크 우측클릭 속성 - 인터넷 프로토콜 버전 4 속성 - 다음 DNS 서버 주소 사용\r\n                    - 기본 설정 DNS 서버 8.8.8.8 , 보조 DNS 서버 8.8.8.4 (Google)혹은\r\n                    1.1.1.1, 1.0.0.1 (Cloudflare)사용 </li>\r\n                  <li> cmd - ipconfig/displaydns - ipconfig/flushdns </li>\r\n                  <li> 브라우저 옵션 초기화(캐시나 쿠키)등등 지워주기  </li>\r\n                  <li> 고클린 설치 - 인터넷이 느려질때 </li>\r\n                  <li> 실행창 - regedit - 컴퓨터\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Multimedia\\SystemProfile\r\n                    - NetworkThrottlingIndex - 10진수, 70으로 변경 </li>\r\n                  <li> cmd - netsh interface tcp set global autotuninglevel=highlyrestricted </li>\r\n                  <small> 더 안좋아지면 원상태로 복구 netsh interface tcp set global autotuninglevel=normal </small>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 컴퓨터가 전원절약하기 위해서 장치를 끄지 못하게 하는 방법  </span>\r\n                <small> 오류 : 무선 어댑터 또는 액세스 지점 문제 </small>\r\n                <span className=\"mblock\">\r\n                  <li> \"제어판\" - \"하드웨어 및 소리\" - \"장치 관리자\" - \"네트워크 어댑터\" - 랜 관련 네크워크 우측클릭 - 속성 - 전원관리 -\r\n                    \"전원을 절약하기 위해 컴퓨터가 이 장치를 끌 수 있음\" 체크해제 </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 알약 광고 제거 </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 알약 광고 제거 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 환경설정 - 작업설정 - 업데이트 설정 - 업데이트 완료 메시지 보기, 업데이트 실패 알림 메시지 보기 2개 항목 체크해제 </li>\r\n                  <li> 환경설정 - 기타설정 - 게임모드 - 업데이트 연기, 예약작업 연기, 알림메시지 보지않음 3개 항목 모두 체크되었는지 확인 </li>\r\n                  <li> 환경설정 - 기타설정 - 기타 - 보안 안내 메시지 보기, 인터넷 연결 알림 메시지 보기, 알약 알리미 보기 3개 항목 체크 해제 </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 윈도우 10 관리자 권한 실행창 없애는 방법 </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 관리자 권한을 사용하는 이유 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 사용자 컴퓨터 레지스트리에 접근이 필요한 경우 , 레지스트리는 윈도우 시스템의 모든 설정 데이터를 모아두는 중앙 저장소 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 윈도우 10 관리자 권한 실행창 없애는 방법  </span>\r\n                <span className=\"mblock\">\r\n                  <li> 돋보기 검색 \"사용자 계정 컨트롤 설정 변경\" - </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 관리자 권한으로 실행하기 1 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 실행 프로그램 우측클릭해서 관리자 권한으로 실행하기 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 관리자 권한으로 실행하기 2 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 실행 프로그램 우측클릭해서 속성 - 고급 - 관리자 권한으로 실행 체크 </li>\r\n                </span>\r\n                <span className=\"sstitle\"> 관리자 권한으로 실행하기 3 (권장x) </span>\r\n                <span className=\"mblock\">\r\n                  <li> 실행(Win+R) - regedit - EnableLUA 항목 찾아서 0으로 만들면 되는데 그냥 모르느게 편함  </li>\r\n                  <small>  경로 : 컴퓨터 - 키로컬머신 - 소프트웨어  - 마이크로소프트 - 윈도우즈 - 현재버전 - 정책들 - 시스템 </small>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 컴퓨터에 문제가 생겼을 때 </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> chkdsk /f </li>\r\n                  <li> sfc /scannow  </li>\r\n                  <li> DISM.exe/Online/Cleanup-image/Restorehealth </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WindowSystem;","import React from 'react';\r\n\r\nconst LinuxBasic = (props) => {\r\n\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 리눅스 한국시간으로 변경하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> ls /usr/share/zoneinfo/Asia | grep Seoul <small> 설정하려는 나라의 시간이 있는지 확인 </small> </li>\r\n              <li> sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime </li>\r\n              <li> date <small> 한국시간 확인 </small> </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 리눅스를 시작하기 전에 알아야 할것 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1. 리눅스의 모든 파일과 디렉토리에는 inode라는 여러 권한이나 파일의 위치 등의 정보를 가지고 있다.  </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 리눅스 내부 시스템 설정 폴더? </h2>\r\n            <li> cd /etc/systemd/system </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <span className=\"lblock\">\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ 리눅스 다운로드 <a name=\"\" style={{ visibility: \"hidden\" }}> 리눅스 다운로드 </a> </summary>\r\n            <span className=\"sblock\">\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 7-zip 다운로드 </span>\r\n              <span className=\"mblock\">\r\n                <li> <a href=\"https://www.7-zip.org/download.html\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                <li> .exe 64-bit x64 다운로드하기 </li>\r\n                <li> 실행해서 설치하기 </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> VMware Workstation Pro 다운로드 </span>\r\n              <span className=\"mblock\">\r\n                <li> <a href=\"https://www.vmware.com/kr/products/workstation-pro/workstation-pro-evaluation.html\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                <li> Windows용 Workstation 16 Pro 지금 다운로드 </li>\r\n                <li> Custom Setup 2개다 체크해제 </li>\r\n                <li> User Experience Settings 2개다 체크해제 </li>\r\n                <li> 인증 키 넣어주기 #개인이 알아서 찾아보기를... </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ 리눅스의 탄생과 역사 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 리눅스의 탄생 </span>\r\n              <span className=\"mblock\">\r\n                <li>  1970년도 이전의 컴퓨터는 공장에 맞는 고유의 운영체제를 가지고 있어서\r\n                  하나의 운영체제로 운영이 불가능 그래서 벨 연구소에서 유닉스라는 운영체제를 개발하기 시작 후에 C언어도 개발 </li>\r\n                <li> 리눅스는 1991년 핀란드 헬싱키 대학의 리누스 토발즈(Linus Benedict Torvalds)라는 학생에 의해 만들어진 운영체제  </li>\r\n                <li> 리눅스의 첫 시작은 유닉스 호환 운영체제를 목표로 하는 GNU 프로젝트(모두가 공유할 수 있는 소프트웨어) </li>\r\n                <li> 유닉스 운영체제로 학교에서 하나의 컴퓨터를 놓고 여러사람이 입력장치와 출력장치를 연결해서 사용하고\r\n                  복제,변경,소스코드사용제한에 불만을 가져 리눅스를 만들어버림(레드햇이나 우분투같은 배포판 OS가 아닌\r\n                  커널만 존재하는 초기의 리눅스)  </li>\r\n                <li>   </li>\r\n                <li>   </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ 리눅스 구조 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 1. Hardware(CPU,RAM) </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 2. 커널 </span>\r\n              <span className=\"mblock\">\r\n                <li> 하드웨어와 소프트웨어 사이에서 제어 역할을 해주는 곳 </li>\r\n                <li> <span className=\"sstitle\"> 커널의 기능 </span>\r\n                  <li> 1. 메모리가 어디에서 무엇을 저장하는 데 얼마나 사용되는지를 확인 </li>\r\n                  <li> 2. 프로세스가 CPU를 언제 얼마나 사용할지 결정 </li>\r\n                  <li> 3. 하드웨어와 프로세스 사이에서 중재자의 역할 </li>\r\n                  <li> 4. 프로세스의 서비스 요청을 수신 </li>\r\n                  <li>  </li>\r\n                  {/*  */}\r\n                  <p className=\"sblock\">  <span className=\"sstitle\"> 1. Task 관리  </span>\r\n                    <li> 물리적인 자원을 task라는 추상적인 자원으로 제공 </li>\r\n                    <li> task의 생성, 실행, 스케줄링, 프로세스간 통신등의 서비스를 제공 </li>\r\n                    <li> Task : 컴퓨터 상에서 하나의 작업 </li>\r\n                    <li> Process : 컴퓨터 상에서 하나의 작업을 이루는 과정 </li>\r\n                    <li> Thread : 프로세스를 이루는 하나 하나의 개별 작업 </li>\r\n                  </p>\r\n                  {/*  */}\r\n                  <p className=\"sblock\">  <span className=\"sstitle\"> 2. 메모리 관리 </span>\r\n                    <li> 메모리를 세그먼트나 페이지라는 개념으로 제공 </li>\r\n                    <li> 물리 메모리 관리, 가상메모리 관리 그리고 이들을 위한 세그멘테이션, 페이징,\r\n                      페이지 부재 결함 처리등의 서비스를 제공 </li>\r\n                  </p>\r\n                  {/*  */}\r\n                  <p className=\"sblock\">  <span className=\"sstitle\"> 3. 파일시스템관리 </span>\r\n                    <li> 디스크를 파일이라는 개념으로 제공 </li>\r\n                    <li> 파일의 생성, 접근 제어, inode관리? , 디렉토리 관리, 수퍼 블록 관리 등의\r\n                      서비스를 제공 </li>\r\n                  </p>\r\n                  {/*  */}\r\n                  <p className=\"sblock\">  <span className=\"sstitle\"> 4. 디바이스 관리 </span>\r\n                    <li> 각종 장치를 디바이스 드라이버를 통해 일관되게 접속하도록 해줌 </li>\r\n                    <li> 디스크 터미널, CD, 네트워크 카드 등과 같은 주변 장치를 구동하는 드라이버들로 구성 </li>\r\n                  </p>\r\n                  {/*  */}\r\n                  <p className=\"sblock\">  <span className=\"sstitle\"> 5. 네트워크 관리 </span>\r\n                    <li> 네트워크 장치를 소켓이라는 개념으로 제공해줌 </li>\r\n                    <li> 소켓 인터페이스, TCP/IP 같은 통신 프로토콜 등의 서비스를 제공함 </li>\r\n                  </p>\r\n                  {/*  */}\r\n                </li>\r\n                <li> <span className=\"sstitle\"> 커널의 종류? </span>\r\n                  <li> 모놀리식 커널(단일형커널) </li>\r\n                  <li> 마이크로 커널 </li>\r\n                  <li> 하이브리드 커널(혼합형커널) </li>\r\n                  <li> 나노 커널 </li>\r\n                  <li> 엑소 커널 </li>\r\n                </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 3. 쉘(sh, csh, bash) </span>\r\n              <small> sh : 최초의 쉘 , bash : 현재 리눅스에서 표준으로 채택된 쉘 , csh : C언어 기반으로 만들어진 쉘 </small>\r\n              <span className=\"mblock\">\r\n                <li> 사용자가 컴퓨터에게 명령하는 것을 해석하는 곳 , 명령어 해석기, 명령어와 커널의 대화 통로 </li>\r\n                <li> bash 셀의 특징\r\n                  <span className=\"sblock\">\r\n                    <li> Alias기능(명령어 단축 기능) </li>\r\n                    <li> History 기능(위/아래 화살표 키) </li>\r\n                    <li> 연산 기능 </li>\r\n                    <li> Job Control 기능 </li>\r\n                    <li> 자동 이름 완성 기능(탭키) </li>\r\n                    <li> 프롬프트 제어 기능 </li>\r\n                    <li> 명령 편집 기능 </li>\r\n                  </span>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 4. 응용프로그램 </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ 리눅스 파일의 종류와 특징 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 1. 일반 파일 </span>\r\n              <span className=\"mblock\">\r\n                <li> 데이터를 저장하는 데 주로 사용, 텍스트파일, 실행파일, 이미지파일 등 대다수 파일 </li>\r\n                <li> 실행파일이나 이미지 파일은 바이너리 형태로 저장이 된다. 그리고 보려면은 응용프로그램이 필요 </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 2. 디렉터리 </span>\r\n              <span className=\"mblock\">\r\n                <li> 해당 디렉터리에 저장된 파일이나 하위 디렉터리에 대한 정보를 저장 </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 3. 심볼릭 링크 </span>\r\n              <span className=\"mblock\">\r\n                <li> 윈도우의 바로가기와 비슷 </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 장치 파일 </span>\r\n              <span className=\"mblock\">\r\n                <li> 하드디스크나 키보드 같은 장치도 파일로 취급 </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶리눅스 용어 공부 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> 하이퍼바이저 : 호스트 컴퓨터에서 다수의 OS를 사용하기 위한 플랫폼(가상) </li>\r\n                <li> native방식의 하이퍼바이저 : 이미 설치가 되어있는 윈도우나 리눅스가 바로 운영체제가 클릭이 되는것 </li>\r\n                <li> hosted방식의 하이퍼바이저 : 일반 프로그램처럼 VM으로 운영을 하는 방식 </li>\r\n                <li> KVM :  </li>\r\n                <li> XEN </li>\r\n                <li> Vmware : </li>\r\n                <li> HyperV : ms에서 제공하는 상용 하이퍼바이저 , window를 실행하는데 가장 우수함 </li>\r\n                <li> Docker </li>\r\n                <li> 커널 : </li>\r\n                <li> 쉘 : </li>\r\n                <li> 레드햇 리눅스 :  </li>\r\n                <li> CentOs 리눅스 : </li>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ 리눅스 압축 파일 종류\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 종류 </span>\r\n              <span className=\"mblock\">\r\n                <li> tar 압축 : 압축률 x , 파일을 모아줌, 압축시간이 빠름 </li>\r\n                <li> bz 압축 : 압축률 중간, 압축시간도 중간 </li>\r\n                <li> gz 압축 : 압축률 높음 , 압축시간이 느림 </li>\r\n                <li> unzip 압축 :  </li>\r\n                <li> xz 압축 :  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ 리눅스 사용자 정의 패키지 배포\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> rpm file build toold install  </li>\r\n                <li> yum -y install rpm - build rpm-sign </li>\r\n                <li> # rgnd  # 랜덤한 값을 생성해주는 툴? </li>\r\n                <li> mk </li>\r\n                <li> mktemp XXXXX # 랜덤한 파일 생성</li>\r\n                <li> /dev/random # 랜덤한 값을 가지고 있는곳? </li>\r\n                <li> kill -9 'ps -ef | grep rnge | grep -v grep | awk '{'{print $2}'}'' </li>\r\n                <li> ps -ef | grep gpg-agent </li>\r\n                <li> rngd -r /dev/urandom </li>\r\n                <li> gpg-agent --use-standard-socket --daemon </li>\r\n                <li> cd /app/script </li>\r\n                <li> vim keymemo\r\n                  <li> %echo Generating a Standard key </li>\r\n                  <li> Key-Type: default </li>\r\n                  <li> Key-Length: 2048 </li>\r\n                  <li> Subkey-Type: default </li>\r\n                  <li> Subkey-Length: 2048 </li>\r\n                  <li> Name-Real: ssssksss </li>\r\n                  <li> Expire-Date: 0 </li>\r\n                  <li> Passphrase: P@ssw0rd! # 서명에 사용할 비번 </li>\r\n                  <li> %commit </li>\r\n                  <li> %echo done </li>\r\n                </li>\r\n                <li> gpg2 --batch --no-tty --gen-key keymemo </li>\r\n                <li> gpg --fingerprint #지금까지 서명한 것을 보여줌(비밀키) </li>\r\n                <li> gpg --list-secret-keys #지금까지 서명한 것을 보여줌(공개키) </li>\r\n                <li> GPG_KEY=0856D448 # pub 2048R/이곳에위치한번호 </li>\r\n                <li> gpg -a --yes -o /root/RPM-GPG-KEY --export 0856D448 #gpg에 저장된 공개키를 추출 </li>\r\n                <li> ls -la /root/RPM-GPG-KEY # 추출된 공개키를 확인 </li>\r\n                <li> echo '%_gpg_name 0856D448' {'>'} /root/.rpmmacros  </li>\r\n                <li> cd /app/script </li>\r\n                <li> mkdir hello-1.0.0  </li>\r\n                <li> cd /hello-1.0.0 </li>\r\n                <li> vi hello\r\n                  <span className='sblock'>\r\n                    <li> #!/bin/bash </li>\r\n                    <li> echo hello </li>\r\n                  </span>\r\n                </li>\r\n                <li> tar czvf hello-1.0.0.tar.gz hello-1.0.0/ </li>\r\n                <li> vi hello.spec\r\n                  <span className='sblock'>\r\n                    <li> Name:\t\thello </li>\r\n                    <li> Version:\t1.0.0 </li>\r\n                    <li> Release:\t1%{'{'}?dist{'}'} </li>\r\n                    <li> Summary:\tA hello package </li>\r\n                    <li> Group:\t\tTesting </li>\r\n                    <li> License:\tGPL </li>\r\n                    <li> URL:\t\thttp://www.test.com/testing </li>\r\n                    <li> Source0:\thello-1.0.0.tar.gz </li>\r\n                    <li> {' BuildRoot:\t%{mktemp -ud %{_tmppath}/hello-1.0.0-%{release}-XXXXXX} '} # 압축을 해제하면 잠시\r\n                      압축푸는 임시 파일 공간 </li>\r\n                    <li> BuildRequires: /bin/rm, /bin/mkdir, /bin/cp # 의존성 파일 </li>\r\n                    <li> Requires: /bin/bash </li>\r\n                    <li> %description </li>\r\n                    <li>  A hello Package </li>\r\n                    <li> %prep </li>\r\n                    <li> %setup -q </li>\r\n                    <li> %build </li>\r\n                    <li> %install </li>\r\n                    <li> rm -rf $RPM_BUILD_ROOT </li>\r\n                    <li> mkdir -p $RPM_BUILD_ROOT/usr/local/bin </li>\r\n                    <li> cp hello $RPM_BUILD_ROOT/usr/local/bin </li>\r\n                    <li> %clean </li>\r\n                    <li> rm -rf $RPM_BUILD_ROOT </li>\r\n                    <li> %files </li>\r\n                    <li> %defattr(-,root,root,-) </li>\r\n                    <li> %attr(0755,root,root)/usr/local/bin/hello </li>\r\n                    <li> %changelog </li>\r\n                    <li> {'* Sat May 11 2021 test <test@test.com) - 1.0.0 '}  # 잘은 모르겠지만 월단위를 작성할 때 풀네임을\r\n                      사용하는 건 아닌것 같다.(날짜에러발생 ㅠㅠ )</li>\r\n                    <li> - Initial RPM </li>\r\n                  </span>\r\n                </li>\r\n                <li> rpmbuild -ba /app/script/hello.spec # 그런 파일이나 디렉토리~~~ 없습니다 출력\r\n                  <li> 만약에 rpmbuild 명령어가 없다고 나오면 yum install rpm-build 로 설치 </li>\r\n                </li>\r\n                <li> cp /app/script/hello.spec /root/rpmbuild/SPECS/ </li>\r\n                <li> cp /app/script/hello-1.0.0.tar.gz /root/rpmbuild/SOURCES/ </li>\r\n                <li> rpmbuild -ba /app/script/hello.spec </li>\r\n                <li> ls -la /root/rpmbuild/RPMS/x86_64 </li>\r\n                <li> rpm -ivh /root/rpmbuild/RPMS/x86_64/hello-1.0.0-1.el7.x86_64.rpm # 프로그램 설치 </li>\r\n                <li> ls -la /usr/local/bin/hello # 설치된 위치 </li>\r\n                <li>  서명을 rpm 파일에 넣는 작업\r\n                  <span className='sblock'>\r\n                    <li> ls -la /root/rpmbuild/RPMS/x86_64 </li>\r\n                    <li> rpmsign --addsign /root/rpmbuild/RPMS/x86_64/hello-1.0.0-1.el7.x86_64.rpm </li>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ 관련 사이트\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> pkgs.org # 패키지들의 모임 </li>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinuxBasic;","import React from 'react';\r\n\r\nconst LinuxCommand = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 기타 명령어 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> command [-단일문자옵션] [--다중문자옵션] </li>\r\n            <li> dir : 현재 디렉토리에 파일 목록을 조회 </li>\r\n            <li> clear : 터미널창을 초기화 </li>\r\n            <li> history : 입력했던 값들을 볼수 있음 (grep으로 이용해서 찾으면 편함) </li>\r\n            <li> touch 파일명 : 파일을 생성 </li>\r\n            <li> file [파일명,디렉토리] : 파일의 종류를 알려줌 </li>\r\n            <li> cat [파일명] : 파일의 내용을 보여줌 </li>\r\n            <li> cat -n [파일명] : 파일의 내용을 행번호를 붙여서 보여줌 </li>\r\n            <li> df -k : 분할된 영역이나 사용량을 볼 수 있는 명령어? </li>\r\n            <li> HEREDOC (sh,csh,Tcsh,ksh,bash,zsh에서 지원 , 별도의 파일인 것처럼 동작 , 표준입력으로 동작, 주석의 용도로 사용)\r\n              <li> &lt;&lt;[구문문자 식별자] </li>\r\n              <li> [내용] </li>\r\n              <li> [구문문자 식별자] </li>\r\n              <li></li>\r\n              <li> &lt;&lt;[\"구문문자 식별자\"] , # 쌍따옴표로 감쌀경우 특수문자가 일반문자로 인식이 된다. </li>\r\n              <li> [$내용] </li>\r\n              <li> $(printf '\\t') </li>\r\n              <li> [구문문자 식별자] </li>\r\n            </li>\r\n            <li> 탭키 : 자동완성 </li>\r\n            <li> 탭 2번 연속 : 입력가능한 파일 목록을 보여줌 </li>\r\n            <li> ./test.sh 매개변수(start, stop, restart) , #이와 같이 사용 </li>\r\n            <li> 리다이렉션\r\n              <li> [내용] &gt; [파일명] : 파일이 생성되면서 내용이 추가됨 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n              <li> [내용] &gt;&gt; [파일명] : 파일이 생성되면서 내용이 추가됨 , 기존의 파일이 존재한다면 하단에 추가됨 </li>\r\n              <li> cat [파일] 1&gt; [파일명]  : 파일이 생성되면서 표준출력이 추가됨 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n              <li> cat [파일] 2&gt; [파일명] : 파일이 생성되면서 표준에러가 추가됨 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n              <li> cat [파일] 1&gt; [파일명] 2&gt;&amp;1  : 표준출력과 에러가 추가됨 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n              <li> cat [파일] 1&gt; [파일명] 2&gt;/dev/null  : 표준출력 추가, 표준에러 버림 , 기존의 파일이 존재하면 덮어쓰기됨 </li>\r\n            </li>\r\n            <li>  </li>\r\n            <li> more [디렉토리] : 화면의 크기를 계산해서 일정 %로 보여주고 엔터를 눌러서 한줄씩 더 볼수 있음 </li>\r\n            <li> less [디렉토리] : 화면의 크기를 계산해서 일정부분 보여준다. </li>\r\n            <small> j: 한줄씩 다음행, k: 한줄씩 이전행, spacebar : 다음화면 , b : 이전화면 , q : 종료 </small>\r\n            <small> cat -n [디렉토리] | more이나less 사용 가능 </small>\r\n            <li> tail [디렉토리] : 디렉토리 파일에서 뒷부분의 10줄을 읽어준다. </li>\r\n            <li> tail -n : 디렉토리 파일에서 뒷부분의 n줄을 읽어준다. </li>\r\n            <li> tail -f : 파일 출력이 종료되지 않고 주기적으로 계속 출력된다. </li>\r\n            <li> head : 디렉토리 파일에서 앞부분의 10줄을 읽어준다. </li>\r\n            <li> ps -ef | head -10 </li>\r\n            <li> --color=[none,auto,always] #ansi escape 색을 따름? </li>\r\n            <small> echo $GREP COLOR (grep색깔확인) , export GREP_COLOR=22 (grep색깔변경</small>\r\n            <li> passwd 계정명 : 계정의 패스워드를 설정 </li>\r\n            <li> umask -S, umask : 기본 퍼미션을 보는방법  </li>\r\n            <li> umask 022 : 기본 퍼미션값을 변경 (보안 권고사항 022 이상의 숫자사용) </li>\r\n            <li> stat [파일명] : 파일에 대한 정보를 알려줌\r\n              <li> atime이 변할 때 : cat와 같이 접근을 하면 변경 </li>\r\n              <li> mtime이 변할 때 : vi편집기로 수정을 했다면 변경 </li>\r\n              <li> ctime이 변할 때 : Inode가 변경될 때 변경 <small> Inode가 변할 때 : chmod, chown이 변경될 때 </small> </li>\r\n            </li>\r\n            <li>  </li>\r\n            <li> alias\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> alias 명령어='명령어 옵션' </span>\r\n                <small> 재시작하면 유지가 되지 않음 </small>\r\n                <small> ls -ld /root/.bashrc #이곳에서 설정을 추가해야 영구적 </small>\r\n                <li> alias cat='cat -n' #정보를 출력할 때 줄번호를 붙여줌 </li>\r\n                <li>  </li>\r\n              </span>\r\n            </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 리눅스 단축키 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Ctrl + A,E : 커서를 줄 앞뒤로 이동 </li>\r\n            <li> Ctrl + F,B : 커서를 글자 앞뒤로 이동  </li>\r\n            <li> ALT + F,B : 커서를 단어 앞뒤로 이동 </li>\r\n            <li> Ctrl+ P,N : 커서를 위아래로 이동 </li>\r\n            <li> Ctrl + L : 화면을 지우고 커서를 제일 왼쪽으로 </li>\r\n            <li> Ctrl + D : 현재 글자 지우기 </li>\r\n            <li> Ctrl + K : 현재부터 그 줄 끝까지 지우기 </li>\r\n            <li> Ctrl + U : 현재부터 그 줄 처음까지 지우기 </li>\r\n            <li> ALT + D :  </li>\r\n            <li> ALT + BackSpace : 현재 위치부터 그 단어 앞까지 삭제 </li>\r\n            <li> Ctrl + Y : 잘라낸 텍스트를 현재 위치에 삽입 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> cd 명령어 - <small> 지정한 디렉토리 위치로 이동 </small> </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 cd [디렉토리경로] </h2>\r\n            <li> - : 이전의 경로로 이동  </li>\r\n            <li> . : 현재 디렉토리로 이동 </li>\r\n            <li> .. : 상위 디렉토리로 이동  </li>\r\n            <li> ~ : 현재 계정의 홈 디렉토리로 이동 </li>\r\n            <li> / : 최상위 디렉토리로 이동 </li>\r\n            <li> /경로1/경로2 : 절대경로로 찾아서 이동 </li>\r\n            <li> /경로1/경로* : 조건을 만족하는 첫번째 경로로 이동 </li>\r\n            <li> 경로1* : 상대경로로 찾아서 이동 </li>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> ls 명령어 - <small> 디렉토리,파일 정보출력  </small> </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 ls [옵션s] [파일명] </h2>\r\n            <li> -a : 숨겨진 파일까지 출력 , .을 포함하여 경로 안의 모든 내용을 출력 </li>\r\n            <li> -A : 숨겨진 파일까지 출력 ,  .과 ..을 제외한 모든 내용을 출력 </li>\r\n            <li> -l : 파일의 상세정보 까지 출력\r\n              <div className=\"block4\">\r\n                <details> {/* [file,user,group,guest] | link | user | group | size | date | name  */}\r\n                  <summary className=\"stitle\"> ▶ [file,user,group,guest] | link | user | group | size | date | name </summary>\r\n                  <li> [file] : -(일반파일), d(다랙토리) , c(character 장치파일), b(block 장치파일), p(명명된파이프), l(심볼릭링크파일), s(소켓파일) </li>\r\n                  <li> [user,group,guest] : 사용자권한, 그룹권한, 그외권한, rwx(읽기쓰기실행) </li>\r\n                  <li> link : 연결된 링크수</li>\r\n                  <li> user : 사용자 이름 </li>\r\n                  <li> group : 그룹 이름 </li>\r\n                  <li> size : 크기 </li>\r\n                  <li> date : 생성날짜 </li>\r\n                  <li> name : 파일명 </li>\r\n                </details>\r\n              </div>\r\n              <li> -d(+l) : 현재 디렉토리의 상세정보를 표시 </li>\r\n              <li> -h(+l) : 사람이 보기쉽게 파일의 크기를 출력 </li>\r\n              <li> -r : 하위 디렉토리까지 출력 </li>\r\n              <li> -R : 하위 디렉토리의 내용까지 출력 </li>\r\n              <li> -k , -s : kb단위로 크기 출력 </li>\r\n              <li> -m : 쉼표로 구분하여 출력 </li>\r\n              <li> -i : 첫 번째 행에 inode 번호를 출력 </li>\r\n              <li> -r : 역순으로 출력 </li>\r\n              <li> -t : 최종수정시간 순서로 출력 </li>\r\n              <li> -u(+l) : 최종엑세스시간 순서로 출력 </li>\r\n              <li> -F : 디렉토리에 있는 파일의 종류와 내용을 출력한다. ( * : 실행파일 , / : 디렉토리 파일 , @ : 심벌릭 링크)  </li>\r\n              <li> -L : 심볼릭 링크 파일의 경우 원본 파일의 정보를 출력  </li>\r\n              <li> -ld 파일명 : 파일명을 조회해서 자세한 정보를 출력  </li>\r\n            </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> ls -al 파일명,디렉토리 </li>\r\n                  <li> ls -l --time-style=\"+%Y%m%d\" | awk '{'{print $6\" \"$7}'}' , 파일,디렉토리 생성일을 년월일로 보여준다. </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> mkdir 명령어 - <small> 디렉토리 생성 </small> </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 mkdir [옵션s] [생성할디렉토리명] </h2>\r\n            <li> -m [777] : 디렉토리생성할 때 권한생성 , default=755 </li>\r\n            <li> -p /경로/경로 : 상위 경로가 존재하지 않으면 한꺼번에 생성 </li>\r\n            <li> -v : 디렉토리를 생성후에 메시지를 출력 </li>\r\n            <li> --version : mkdir의 버전 출력 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> cp 명령어 <small> 파일이나 디렉토리 복사 </small> </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 cp [옵션s] [파일명] [파일명] , [파일명s] [디렉토리] , [디렉토리] [디렉토리] </h2>\r\n            <li> [파일명1] [파일명2] [디렉토리2] : 파일명1,파일명2를 디렉토리2로 복사한다. </li>\r\n            <li> -i [파일명1] [파일명2] : 복사를 하면 물어봄 </li>\r\n            <li> -f [파일명1] [파일명2] : 강제적으로 복사 , 이미 존재하면 덮어쓰기 </li>\r\n            <li> -r [디렉토리1] [디렉토리2] : 디렉토리1에 있는 파일을 모두 디렉토리2로 복사한다. </li>\r\n            <li> -l : 심볼릭링크 형식으로 복사 </li>\r\n            <li> -P : 원본 파일명에 디렉토리 경로도 같이 입력했다면 경로 그대로 복사 </li>\r\n            <li> -p : 원본파일의 사용자,그룹,권한,시간 정보들을 그대로 복사 </li>\r\n            <li> -v : 복사 상태를 출력 </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li> cp file1 file2 </li>\r\n                  <li> cp /test/test1/file1 /test/test2  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> ln 명령어 - <small> 링크파일을 만드는 명령어 </small> </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 링크파일? </h2>\r\n            <div className=\"block4\">\r\n              <li> 폴더나 파일을 다른 이름(별명)처럼 부르기 위한 파일  </li>\r\n              <li> 하드 링크 파일 : 1개의 파일에 여러개의 별명을 가진다. 지우려면 관계된 모든 별명을 지워야한다. </li>\r\n              <li> 심볼릭 링크 : 윈도우의 바로가기 처럼 파일의 위치를 가리킨다. 파일이 바뀌면 사용 불가 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 ln [옵션s] </h2>\r\n            <div className=\"block4\">\r\n              <li> ln -s [원본파일] [심볼릭링크파일] : 심볼릭 파일 생성   </li>\r\n              <li> ln [원본파일] [심볼릭링크파일] : 하드 링크 파일 생성   </li>\r\n              <li> -b : 링크 파일 생성시 대상 파일이 존재하면 백업파일을 만들고 링크파일을 생성  </li>\r\n              <li> -d : 디렉토리 대한 하드링크 파일을 생성 가능하게 한다. <small> # 나중에 사용할 때 알아볼것  </small> </li>\r\n              <li> -f : 대상 파일이 존재하면 지우고 생성 </li>\r\n              <li> -i : 대상파일이 존재하면 지우는 것을 물어봄 </li>\r\n              <li> -s : 심볼릭 링크파일 생성 </li>\r\n              <li> -S : 백업 파일 생성시 접미사 지정 가능 <small> # 나중에 사용할 때 알아볼것  </small> </li>\r\n              <li> -t : 링크파일을 생성할 디렉토리 지정 </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 압축 풀기,해제 <small> //TODO: 좀더 나중에 알아볼것 </small> </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className=\"h2\"> 📌 tar 옵션 </h2>\r\n            <li> -c : tar로 압축 </li>\r\n            <li> -p : 파일 권한 저장 </li>\r\n            <li> -v : 파일 압축이나 해제할 때 화면에 출력 </li>\r\n            <li> -f : 파일이름을 지정 </li>\r\n            <li> -C : 경로를 지정 </li>\r\n            <li> -x : tar 압축해제 </li>\r\n            <li> -z : gzip 압축하거나 해제 </li>\r\n\r\n            <h2 className='h2'> 📌 명령어 </h2>\r\n            <li> 팁 : tar 압축으로 하나의 파일로 만들고 그다음 gz로 압축하면 좋음 </li>\r\n            <li> tar -cvf [파일명.tar] [폴더] <small> # 폴더를 파일명.tar로 tar 압축 </small> </li>\r\n            <li> tar -xvf [파일명.tar] <small> # 파일명.tar 압축해제 </small> </li>\r\n            <li> tar -zcvf [파일명.tar.gz] [폴더] <small> # 폴더를 파일명.tar.gz로 tar.gz 압축 </small> </li>\r\n            <li> tar -zxvf [파일명.tar.gz] <small> # 폴더를 파일명.tar.gz 압축해제 </small> </li>\r\n            <li> zip [파일명.zip] [폴더] <small> #  </small> </li>\r\n            <li> unzip [파일명.zip] <small> # zip 압축해제 </small> </li>\r\n            <li> unzip [파일명.zip] -d [디렉토리] <small> # 특정 폴더에 zip 압축해제 </small> </li>\r\n            <li> bzip2 -k [폴더명]  <small> # -k는 원본파일을 유지하면서 압축  </small> </li>\r\n            <li> bzip2 -d [압축파일명.bz2]  <small> # 원본파일 제거하면서 압축해제 </small> </li>\r\n            <li> gzip -k [파일명]  <small> # 압축 </small> </li>\r\n            <li> gzip -d [압축파일명]  <small> # 압축해제 </small> </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/*///////////////////////////////////////////////////////////////////////////*/}\r\n      <span className=\"lblock\">\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ mv 명령어  <small> (파일,디렉토리) 이동,이름변경 </small>\r\n              <a name=\"mv 명령어\" style={{ visibility: \"hidden\" }}> mv 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> mv [옵션s] [파일명]  </li>\r\n                <li> -f : 강제로 이동 </li>\r\n                <li> [파일명1] [파일명1] : 파일명1을 파일명2로 이름을 바꾸기 </li>\r\n                <li> mv 원본폴더 변경할이름폴더 <small> 폴더 이름 변경하기 </small> </li>\r\n                <li> mv 원본폴더 목적지폴더 <small> 폴더이동 </small> </li>\r\n                <li> -t : 전체 원본 파일을 대상 디렉토리로 이동 </li>\r\n                <li> -n : 존재하는 파일을 덮어쓰지 않음 </li>\r\n                <li> -v : 이동이나 이름바꾸는 정보를 출력 </li>\r\n                <li> -i : 존재하는 파일을 덮어쓸 경우 물어봄 </li>\r\n                <li>  </li>\r\n                {/*  */}\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"mblock\">\r\n                <span className=\"sstitle\"> 사용 예시 </span>\r\n                <span className=\"sblock\">\r\n                  <li> mv test1.txt test2.txt #파일의 이름을 바꿈 </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ rm 명령어 <small> 파일이나 디렉토리를 삭제 </small>\r\n              <a name=\"rm 명령어\" style={{ visibility: \"hidden\" }}> rm 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> rm [옵션s] [파일명]  </li>\r\n                <small> testdisk라는 프로그램으로 복구가 가능하다고 한다. (포렌식에서 사용) </small>\r\n                <li> -r , -R : 디렉토리를 삭제하는 방법 , 이 옵션을 추가하지 않으면 디렉토리를 삭제할 수 없음 </li>\r\n                <li> -d : 빈 디렉토리만 제거 </li>\r\n                <small> rmdir이라는 명령어는 빈 디렉토리를 삭제하는 명령어이지만 안전하게 빈 디렉토리들만을 삭제하는 데 유용하지만\r\n                  잘 사용하지는 않는다.  </small>\r\n                <li> -f : 강제로 파일이나 디렉토리를 삭제 </li>\r\n                <li> -i : 삭제할 때 마다 물어봄 </li>\r\n                <li> -v : 지워지는 파일의 정보를 출력 </li>\r\n                <li> [파일명1] [파일명2] .. : 파일명1, 파일명2를 삭제  </li>\r\n                {/*  */}\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"mblock\">\r\n                <span className=\"sstitle\"> 사용 예시 </span>\r\n                <span className=\"sblock\">\r\n                  <li> rm -rf ab* : ab이름으로 시작하는 모든 파일과 디렉토리를 삭제 </li>\r\n                  <li> rm -rf ./* : 현재 경로에 있는 모든 파일과 디렉토리를 삭제 </li>\r\n                </span>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ pwd 명령어  <small> 현재 위치 절대경로 출력 </small>\r\n              <a name=\"pwd 명령어\" style={{ visibility: \"hidden\" }}> pwd 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> pwd [옵션]  </li>\r\n                <li> -L : 심볼릭 포함, pwd 환경변수 사용</li>\r\n                <li> -P : 심볼릭 정보를 포함 </li>\r\n                {/*  */}\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ halt 명령어 <small> 리눅스 시스템 종료 </small>\r\n              <a name=\"halt 명령어\" style={{ visibility: \"hidden\" }}> halt 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> halt [옵션s]  </li>\r\n                <li> -f : 강제로 종료 </li>\r\n                <li> -d : wtmp 파일에 로그를 남기지 않음 </li>\r\n                <li> -n : 종료할 때 싱크를 하지 않음 </li>\r\n                <li> -w : /var/log/wtmp에 파일에 로그를 남기고 , 실제 종료를 하지 않음 </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ shutdown 명령어 <small> 리눅스 시스템 종료 </small>\r\n              <a name=\"shutdown 명령어\" style={{ visibility: \"hidden\" }}> shutdown 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> shutdown [옵션s] [시간]  </li>\r\n                <li> -r [+시간] : 시스템 종료후 재부팅 , 단위는 분 </li>\r\n                <li> -h : shutdown이 완료된후 시스템을 종료 </li>\r\n                <li> -k : 경고메세지만 출력 , 실제로 종료되지 않음 </li>\r\n                <li> -f : 재부팅을 빠르게 진행 </li>\r\n                <li> -c : 시스템 종료/재시작 예약 취소  </li>\r\n                <li> 시간 : +m(분) , hh:mm(시분) , now(지금) </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"mblock\">\r\n                <span className=\"sstitle\"> 사용 예시 </span>\r\n                <span className=\"sblock\">\r\n                  <li> shutdown -h 1 #1분뒤 종료</li>\r\n                </span>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ w 명령어 <small> 서버에 접속한 사용자 접속,작업 정보 </small>\r\n              <a name=\"w 명령어\" style={{ visibility: \"hidden\" }}> w 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> w [옵션s] [파일명]  </li>\r\n                {/*  */}\r\n                <li> w 명령어\r\n                  <span className=\"sblock\">\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ USER | TTY | FROM | LOGIN@ | IDLE | JCPU | PCPU | WHAT  </summary>\r\n                      <small> 현재시간 현재 접속한 사용자, 시스템 실행 시간 , 1,5,15분 동안 시스템 로드 평균시간 </small>\r\n                      <li> USER : 서버 접속 계정 </li>\r\n                      <li> TTY : 접속 TTY 명 </li>\r\n                      <li> FROM : 접속한 IP 주소 </li>\r\n                      <li> LOGIN@ : 접속자 로그인 시간 </li>\r\n                      <li> IDLE : 최종 명령 수행 후의 대기시간 </li>\r\n                      <li> JCPU : TTY필드에서 사용하는 장치의 모든 프로세스의 CPU 사용시간 출력 </li>\r\n                      <li> PCPU : what필드에 나타나는 프로세스의 CPU 총 사용시간을 출력 </li>\r\n                      <li> WHAT : 접속자 현재 사용 명령어 </li>\r\n                    </details>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> -h : 헤더를 제외하고 출력 </li>\r\n                <li> -s : LOGIN@ , JCPU, PCPU 를 제외한 값 출력 </li>\r\n                <li> -f : from을 제외한 값 출력 </li>\r\n                <li> -i : 호스트 이름 일 때 from에 IP주소로 표기  </li>\r\n                <li> -o : IDLE,JCPU,PCPU에 값이 1분 보다 작으면 빈칸으로 출력 </li>\r\n                <li> - :  </li>\r\n                {/*  */}\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ grep 명령어 <small> 파일들에서 하나이상의 내용을 검색 </small>\r\n              <a name=\"grep 명령어\" style={{ visibility: \"hidden\" }}>  grep 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <small>  </small>\r\n                <li className=\"sstitle\"> grep [옵션s] [검색내용] [파일명]  </li>\r\n                <li> -i : 대소문자 구분없이 검색 </li>\r\n                <li> -l : 검색패턴과 일치하면 파일명을 출력 </li>\r\n                <li> -n :  검색패턴과 일치하면 출력 값에 줄 번호를 붙여서 출력 </li>\r\n                <li> -v :  검색내용을 제외한 정보 출력 </li>\r\n                <li> -c :  패턴과 일치하는 라인 수 출력 </li>\r\n                <li> -w :  단어단위의 패턴을 사용하여 검색 </li>\r\n                <li> --color=[none,auto,always] \"찾을내용\" 파일명 : 찾는 내용을 컬러로 표현해줌 </li>\r\n                <li> -E : 정규식을 사용하겠다.  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"mblock\">\r\n                <span className=\"sstitle\"> 사용 예시 </span>\r\n                <span className=\"sblock\">\r\n                  <li> cat /etc/passwd | grep \"14\" #표준출력을 파일로 만들지 않고도 파이프(|)를 이용해서 원하는 내용을 찾음 </li>\r\n                  <li> grep --help | grep -E '\\-.,' # \\:정규식문자로 사용하겠다. , .:모든문자 ,: 모르겠다. </li>\r\n                  <li> grep --help | grep --color=always -E '\\-.,' | head -10 #always로 해야 파이프로 넘겼을 때 색깔로 표시가됨 </li>\r\n                  <li> 문장~~~ | grep -E \"^abc\" , # \"abc\"로 시작하는 문장을 찾음 </li>\r\n                  <li> 문장~~~ | grep -E \"abc$\" , # \"abc\"로 끝나는 문장을 찾음 </li>\r\n                  <li> 문장~~~ | grep -E \"[12]\" , # 1이나 2가 들어간 문장을 찾음 </li>\r\n                  <li> 문장~~~ | grep -E \"{'a{2,3}'}\" , # a가 2나3회 입력이 된 문장을 찾음 </li>\r\n                  <li> ifconfig | grep -A 2 ens | grep \"inet \" | awk ' {'{ printf $2 }'} , #본인의 IP주소만을 가져옴 </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ find 명령어 <small> 지정한 위치에서 조건에 맞는 파일을 찾는다. </small>\r\n              <a name=\"find 명령어\" style={{ visibility: \"hidden\" }}> find 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> find [경로] [옵션] [정규식/표현] </li>\r\n                <li> -name 파일명 : 파일이름으로 검색  </li>\r\n                <li> -type 파일종류 : 파일종류로 검색 </li>\r\n                <small> d:디렉토리, f:일반파일, l:링크파일, b:블록디바이스, c:캐릭터디바이스, p:파이프디바이스, s:소켓파일 </small>\r\n                <li> -user 사용자ID : 사용자가 소유한 모든 파일을 검색  </li>\r\n                <li> -perm 775 : 접근권한과 일치하는 파일을 검색 </li>\r\n                <li> -group : 그룹 소유의 모든 파일이나 디렉토리를 검색  </li>\r\n                <li> -uid : UID소유의 파일이나 디렉토리를 검색(아이디번호로) </li>\r\n                <li> -gid : UID소유의 파일이나 디렉토리를 검색(그룹번호로) </li>\r\n                <li> -atime [n,+n,-n] : n일 이전, n보다 오래된, 지금부터 n일내로 접근한 파일들을 검색 </li>\r\n                <li> -ctime n : 퍼미션(권한 등)이 변경되었을 때 </li>\r\n                <li> -mtime n : 내부 내용이 수정된 시간 기준으로 검색 </li>\r\n                <li> -mmin n : 분(시간)을 기준으로 검색 </li>\r\n                <li> -empty : 빈 파일을 찾음 </li>\r\n                <li> -size n : n블록 길이의 파일을 검색 </li>\r\n                <li> -exec :  </li>랴\r\n                <li> -ls : ls -l </li>\r\n                <li> -inum n :  </li>\r\n                <li> -iname :  </li>\r\n                <li> -maxdepth n : 현재 디렉토리부터 n깊이 만큼 디렉토리를 검색 </li>\r\n                <li> -mindepth n : n번째 하위디렉토리부터 하위디렉토리르 검색 </li>\r\n                <li> -prune :  </li>\r\n                <li> -newer :  </li>\r\n                <li> -cnewer :  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"mblock\">\r\n                <span className=\"sstitle\"> 사용 예시 </span>\r\n                <span className=\"sblock\">\r\n                  <li> find /app -name \"abc.*\" #app경로에 abc.으로 시작하는 폴더를 검색 </li>\r\n                  <li> find /app -name \"abc.*\" type -d #app경로에 abc.으로 시작하고 파일유형이 디렉토리인 폴더를 검색 </li>\r\n                  <li> find /app \"abc.*\" | head -10  </li>\r\n                  <li> find . -name \"*.txt\" -mtime +10 -delete #수정시간이 10일이상된 오래된 파일을 삭제 </li>\r\n                  <li> find . -size +100k #파일100kb이상 검색 </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ group 명령어 <small> 권한 그룹 </small>\r\n              <a name=\"group 명령어\" style={{ visibility: \"hidden\" }}>  group 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> groups [사용자]  </li>\r\n                <li> sudo groupadd 그룹명 , #그룹을 생성 </li>\r\n                <li> sudo groupdel 그룹명 , #그룹을 삭제  </li>\r\n                <li> sudo gpasswd 그룹명 , #그룹의 암호를 설정(사용자가 그룹에 로그인하기 위해 설정)  </li>\r\n                <li> sudo gpasswd -r 그룹명 , #그룹의 암호를 제거  </li>\r\n                <li> sudo gpasswd -A 사용자명 그룹명 , #그룹의 관리자를 사용자로 설정  </li>\r\n                <li> sudo gpasswd -a 사용자명 그룹명 , #그룹에 사용자를 포함시킴  </li>\r\n                <li> sudo gpasswd -d 사용자명 그룹명 , #그룹에서 사용자를 제외 시킴  </li>\r\n                <li> sudo usermod -a -g 사용자명 그룹명 , #사용자의 그룹을 변경  </li>\r\n                <li> sudo usermod -a -G 사용자명 그룹명 , #사용자의 주 그룹 + 그룹을 하나 추가  </li>\r\n                <li> newgrp 그룹명 , #다른 그룹으로 로그인  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ user 명령어 <small>  </small>\r\n              <a name=\"user 명령어\" style={{ visibility: \"hidden\" }}>  user 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"mblock\">\r\n                <li className=\"sstitle\"> useradd [옵션s] [계정이름] , useradd [계정이름] , adduser [옵션s] [계정이름] , adduser [계정이름] </li>\r\n                <li> [계정이름] : 계정을 생성 </li>\r\n                <li> -p :  </li>\r\n                <li> -d : 홈 디렉토리를 지정할 때 사용, 중간 경로는 생성을 해주지 않는다. </li>\r\n                <li> -u : 사용자 추가시 UID 지정 </li>\r\n                <small> useradd -u UID번호 계정명 </small>\r\n                <li> -g : 그룹(GID)을 지정할 때 사용 </li>\r\n                <li> -G : 2번쨰 그룹(GID)을 지정할 때 사용 </li>\r\n                <li> -c : 사용자 생성 시 사용자에 대한 설명을 설정 </li>\r\n                <li> -s : 사용자 생성 시 사용자가 사용할 셸을 지정 </li>\r\n                <li> -D : /etc/default/useradd에 설정된 유저 추가와 관련된 기본 사항들을 보여준다. </li>\r\n                <li> -m : 사용자 생성시 홈 디렉토리를 생성해주는 옵션 </li>\r\n                <li> -k : 사용자 생성 시 제공되는 파일은 기본적으로 /etc/skel에 있는데 이외으 디렉토리를 지정할 때 사용  </li>\r\n                <li> -f : 패스워드의 만기일을 날짜로 지정 </li>\r\n                <li> -e : 계정의 만기일을 YYYY-MM-DD 형식으로 지정 </li>\r\n                <small>  </small>\r\n                <li> </li>\r\n                {/*  */}\r\n                <li> 소제목\r\n                  <span className=\"sblock\">\r\n                    <details>\r\n                      <summary className=\"stitle\"> ▶   </summary>\r\n                      <li>   </li>\r\n                    </details>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> - :  </li>\r\n                {/*  */}\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"mblock\">\r\n                <span className=\"sstitle\"> 사용 예시 </span>\r\n                <span className=\"sblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ AWK 명령어 <small> 스크립트 파일을 필터,추가,행과열로 출력 </small>\r\n              <a name=\"AWK 명령어\" style={{ visibility: \"hidden\" }}> AWK 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> awk {'{action}'} </span>\r\n              <span className=\"mblock\">\r\n                <li> -F \"구분자\": 일반적으로는 공백으로 열을 구분하지만 구분자를 설정해서 바꿈 </li>\r\n                <li> {'{\\'print(\"name: \" $1)\\'}'}  </li>\r\n                <li> {'{\\'if($1 >= 10) print(\"name: \" $1)\\'}'}  </li>\r\n                <li> '/문자열/' 파일명 , #파일에 abc라는 문자열이 포함된 레코드를 출력  </li>\r\n                <li> {'{\\'print(\"name: \" length($1) )\\'}'} #length 내장함수 </li>\r\n                <li> {'{\\'print(\"name: \" substr($1,0,3) )\\'}'} #substr 내장함수 </li>\r\n                <li> {'{\\' for(i=0;i<10;i++) print(\"name: \" $1)\\'}'} #반복문  </li>\r\n                <li> 변수 사용하는 방법\r\n                  <span className=\"sblock\">\r\n                    <li> 'BEGIN {' {a=0 b=0} '} </li>\r\n                    <li>  {' {a+=$1 b++} '} </li>\r\n                    <li> END {' {avg=a/b print() }'}' 파일명 </li>\r\n                  </span>\r\n                </li>\r\n                <li>   </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ sed 명령어 <small> vi편집기가 아닌 원본 텍스트 파일을 편집할수 있는 유용한 명령어 </small>\r\n              <a name=\"sed 명령어\" style={{ visibility: \"hidden\" }}> sed 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> sed [스크립트] [명령어] </span>\r\n              <span className=\"mblock\">\r\n                <small> 패턴버퍼에 내용을 가져오고 데이터의 변형과 추가하기 위해 홀드 버퍼를 사용하고 패턴버퍼에 그\r\n                  임시결과를 저장한다. 그리고 실제 저장할 때  </small>\r\n                <li> -n : 해당하는 행만 출력 </li>\r\n                <li> -e : 스크립트를 여러개 사용할 수 있도록 한다. </li>\r\n                <small> sed -n -e '1p' -e '3p' 파일명 , #1번행과 3번행 출력 </small> <br />\r\n                <li> -i : 파일을 실제로 수정하도록 한다. </li>\r\n                <li> 'p' : 행을 출력해주는 명령어 </li>\r\n                <li> 'm,np' : m번째에서 n번째 까지 행을 출력 </li>\r\n                <li> 'n,%p' : n번째에서 마지막 까지 행을 출력 </li>\r\n                <li> '/정규식/p' : 정규식  사용   </li>\r\n                <small> sed '/[Rr]oot/p' 파일명  </small>\r\n                <li> 'nd' : n번째 행을 제외하고 출력 </li>\r\n                <li> 'n,md' : n번째에서 마지막 까지 제외하고 행을 출력 </li>\r\n                <li> 'n,$d' : n번째째부터 마지막까지 제외하고 출력 </li>\r\n                <li> 's/오래된단어/바꿀단어/' : 오래된 단어 첫번째만? 바꿈 </li>\r\n                <li> 's/오래된단어/바꿀단어/g' : 오래된 단어 전체를 바꿈 </li>\r\n                <li> 's/오래된단어/바꿀단어/gi' : 오래된 단어 전체를 대소문자 상관없이 바꿈 </li>\r\n                <li> 's/^오래된단어/바꿀단어/gi' : 오래된단어로 시작하는 줄의 단어를 바꾼다 </li>\r\n                <li> 's/오래된단어$/바꿀단어/gi' : 오래된단어로 끝나는 줄의 단어를 바꾼다. </li>\r\n                <li> 'n,/정규식/p' : n번째 정규식에 해당하는 행을 발견할 때 까지 행을 출력   </li>\r\n                <li> '/root/,'/root1/p' : root,root1 이라는 내용 있으면 출력   </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ lasttr 명령어 <small> 파일의 속성 확인 </small>\r\n              <a name=\"lasttr 명령어\" style={{ visibility: \"hidden\" }}> lasttr 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> lasttr [옵션] [파일,디렉토리] </span>\r\n              <span className=\"mblock\">\r\n                <li> -d [디렉토리] : 파일 형식으로 출력  </li>\r\n                <li> -R [디렉토리] : 하위 모든 파일에 대한 속성 표시 </li>\r\n                <li> -a [디렉토리] : 숨긴 파일 출력 </li>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ chattr 명령어 <small> 파일의 속성을 추가 </small>\r\n              <a name=\"chattr 명령어\" style={{ visibility: \"hidden\" }}> chattr 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> chattr [+옵션] [파일] </span>\r\n              <span className=\"mblock\">\r\n                <li> a : 추가 모드로만 오픈 가능 </li>\r\n                <li> i : 변경, 삭제, 링크 금지 </li>\r\n                <li> s : 안전한 삭제 </li>\r\n                <li> A : atime 갱신 불가 </li>\r\n                <li> c : 커널에 의해서 압출 상태로 저장 </li>\r\n                <li> d : dump 명령으로 백업 금지 </li>\r\n                <li> j : 저널링 </li>\r\n                <li> t : 하위 결합 불가 </li>\r\n                <li> u : 삭제시 내용 저장 </li>\r\n                <li> D : 디렉토리 실시간 동기화 </li>\r\n                <li> S : 파일 수정 시 실시간 동기화 </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ echo 명령어 <small> 문자열이나 파일의 내용을 화면에 출력 </small>\r\n              <a name=\"echo 명령어\" style={{ visibility: \"hidden\" }}> echo 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> echo [옵션] [문자열] </span>\r\n              <span className=\"mblock\">\r\n                <li> echo 문자열 </li>\r\n                <li> echo $\"문자열\" &gt;&gt; 파일명.txt , # 입력한 문자열을 파일로 저장 </li>\r\n                <li> echo $(expr $요소1 + $요소2) , #연산식에서 사용 , 공백 필요 , 특수문자( (,),*,$ )을 사용하려면 \\를 붙여야 사용이 가능하다. </li>\r\n                <li> echo -n 내용 : 후행 줄 바꿈을 생략하는데 사용  </li>\r\n                <li>  <span className=\"sstitle\">  echo -e 내용 : 정규표현식을 사용할 수 있는 옵션 </span>\r\n                  <span className=\"sblock\">\r\n                    <ul style={{ listStyle: \"none\" }}>\r\n                      <li> \\b : 공백을 지움 </li>\r\n                      <li> \\c : 줄 바꿈을 억제 </li>\r\n                      <li> \\n : 줄 바꿈  </li>\r\n                      <li> \\t : 수평 탭 공간을 만듬  </li>\r\n                      <li> \\r : 이후에 출력할 위치를 지정  </li>\r\n                      <li> \\v : 수직 탭 공간을 만듬  </li>\r\n                      <li> \\a : 경고음이 울림  </li>\r\n                      <li> \\\\ : 역슬래시  </li>\r\n                    </ul>\r\n                  </span>\r\n                </li>\r\n                <li> <span className=\"sstitle\">  echo 이미지정된변수 </span>\r\n                  <span className=\"sblock\">\r\n                    <ul style={{ listStyle: \"none\" }}>\r\n                      <li> $USER, $USERNAME : <small> 현재 사용자 이름 </small> </li>\r\n                      <li> $PWD : <small>  현재 디렉토리 </small> </li>\r\n                      <li> $OSTYPE : <small> 현재 운영체제를 알려줌 </small> </li>\r\n                      <li> $PATH : <small> 실행 파일을 찾는 디렉토리 경로</small> </li>\r\n                      <li> $SHELL : <small> 로그인해서 사용하는 셸 </small> </li>\r\n                      <li> $HOME : <small> 현재 사용자의 홈 디렉토리 </small> </li>\r\n                      <li> $HOSTNAME : <small> 호스트 이름 </small> </li>\r\n                      <li> $LANG : <small> 사용가능한 언어 </small> </li>\r\n                      <li> $LOGNAME : <small> 로그인 이름 </small> </li>\r\n                      <li> $TERM : <small> 로그인 터미널 타입 </small> </li>\r\n                      <li> $COLUMNS : <small> 현재 터미널 컬럼수  </small> </li>\r\n                      <li> $BASH : <small> bash 셸의 경로 </small> </li>\r\n                      <li> $PS1 : <small> 1차 명령 프롬프트 변수 </small> </li>\r\n                      <li> $HISTFILE : <small> 히스토리 파일의 경로 </small> </li>\r\n                      <li> $MAIL : <small> 메일을 보관하는 경로 </small> </li>\r\n                      <li> $DISPLAY : <small> X 디스플레이 이름 </small> </li>\r\n                      <li> $LINES : <small> 현재 터미널 라인수  </small> </li>\r\n                      <li> $PS2 : <small> 2차 명령 프롬프트 </small> </li>\r\n                      <li> $BASH_VERSION : <small> bash 버전 </small> </li>\r\n                      <li> $HISTSIZE : <small> 히스토리 파일에 저장되는 개수 </small> </li>\r\n                      <li> $LS_COLORS : <small> 'ls' 명령어의 확장자 색상 옵션 </small> </li>\r\n                      <li> $$ : <small> 사용되는 PID 출력 </small> </li>\r\n                      <li> export PATH=$PATH: /경로/ : <small> PATH경로에 추가하는 방법(재부팅시 초기화) </small> </li>\r\n                      <li>  </li>\r\n                    </ul>\r\n                  </span>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ rpm 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> rpm -qa : 시스템에 설치된 모든 패키지명 </li>\r\n                <li> rpm -qi 패키지명 : 시스템에 설치된 모든 패키지명 </li>\r\n                <li> rpm -ql 패키지명 : 패키지의 파일 리스트 </li>\r\n                <li> rpm -qf 파일명 : 지정한 파일이 포함된 패키지  </li>\r\n                <li> rpm -ivh rpm파일경로 : 직접 rpm파일을 직접 설치하지만 문제가 많아 권장하지 않음 </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ yum 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> yum check-update # 현재 설치된 프로그램 중 업데이트 된것을 확인 </li>\r\n                <li> yum clean all # 캐시 삭제</li>\r\n                <li> yum deplist # yum 패키지에 대한 의존성 테스트 </li>\r\n                <li> yum downgrade 패키지 # yum을 통한 패키지 다운그레이드 </li>\r\n                <li> yum erase 패키지 # yum을 이용해서 시스템에서 삭제 </li>\r\n                <li> yum groupinfo 그룹 # 그룹 패키지 정보 조회</li>\r\n                <li> yum groupinstall 그룹 # 그룹패키지 설치 </li>\r\n                <li> yum grouplist 그룹 # 그룹 리스트에 관한 정보 확인</li>\r\n                <li> yum groupremove 그룹 #그룹 리스트 삭제 </li>\r\n                <li> yum help # yum 도움말 </li>\r\n                <li> yum info 그룹 또는 패키지 # 패키지 또는 그룹의 패키지를 상세 확인 </li>\r\n                <li> yum install 패키지 # 패키지 설치 </li>\r\n                <li> yum list # 서버에 있는 그룹 및 패키지 리스트 </li>\r\n                <li> yum localinstall 패키지 # 로컬에 설치를 실시 </li>\r\n                <li> yum makecache # 캐쉬를 올림 </li>\r\n                <li> yum provides 파일패스명 # 파일이 제공하는 패키지 정보 조회 </li>\r\n                <li> yum reinstall 패키지 # 패키지 재설치 </li>\r\n                <li> yum update 패키지 # 패키지 업데이트 </li>\r\n                <li> yum upgrade 패키지 # 패키지 업그레이드 </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ lsof 명령어 <small> 열려있는 파일 정보 </small>\r\n              <a name=\"lsof 명령어\" style={{ visibility: \"hidden\" }}> lsof 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> lsof -i udp:67 , # ip기반의 67번 포트에 접속을 확인  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ ps 명령어 <small> 현재 돌아가는 프로세스를 확인 </small>\r\n              <a name=\"ps 명령어\" style={{ visibility: \"hidden\" }}> ps 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> ps -ef | grep dnsmasq , # dnsmasq dns서버 프로세스를 확인 </li>\r\n                <li> ps -l -ef # 진행중인 긴 메뉴 프로세스\r\n                  <span className=\"sblock\">\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ F | S | UID | PID | PPID | C | PRI | NI | ADDR | SZ | WCHAN | STIME | TTY | TIME | CMD </summary>\r\n                      <li> F : 프로세스 플래그 </li>\r\n                      <li> S : 현재 프로세스의 상태 코드 ( S:Sys V, STAT:BSD ) </li>\r\n                      <li> UID : 실행 유저 </li>\r\n                      <li> PID : 프로세스 ID </li>\r\n                      <li> PPID : 부모 프로세스 ID </li>\r\n                      <li> C : CPU 사용량 </li>\r\n                      <li> PRI : 실행 우선순위 </li>\r\n                      <li> NI : nice 우선순위 번호 </li>\r\n                      <li> ADDR :  </li>\r\n                      <li> SZ : 가상 메모리 사용량? </li>\r\n                      <li> WCHAN :  </li>\r\n                      <li> STIME : Start Time </li>\r\n                      <li> TTY : tty1(콘솔) , pts/1(원격) </li>\r\n                      <li> TIME : 구동시간 </li>\r\n                      <li> CMD : 실행 명령어 </li>\r\n                    </details>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li> ps -f -ef # 진행중인 완전한 메뉴 프로세스\r\n                  <span className=\"sblock\">\r\n                    <details>\r\n                      <summary className=\"sstitle\"> ▶ UID | PID | PPID | C | STIME | TTY | TIME | CMD  </summary>\r\n                      <li> UID : 실행 유저 </li>\r\n                      <li> PID : 프로세스 ID </li>\r\n                      <li> PPID : 부모 프로세스 ID </li>\r\n                      <li> C : CPU 사용량 </li>\r\n                      <li> STIME : Start Time </li>\r\n                      <li> TTY : tty1(콘솔) , pts/1(원격) </li>\r\n                      <li> TIME : 구동시간 </li>\r\n                      <li> CMD : 실행 명령어 </li>\r\n                    </details>\r\n                  </span>\r\n                </li>\r\n                {/*  */}\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ xargs 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> | 파이프 명령어 앞에 서 받은 파라미터를 하나씩 넘겨주는 </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ dirname,basename 명령어 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> dirname 명령어 </span>\r\n              <span className=\"mblock\">\r\n                <li> dirname /경로1/경로2 , #최상위 경로인 /경로1 출력  </li>\r\n                <li> dirname /경로1 , #최상위 경로인 / 출력  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> basename 명령어 </span>\r\n              <span className=\"mblock\">\r\n                <li> basename /경로1/경로2/ , #하위경로의 상위 경로인 경로2 출력 </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ export 명령어 <small> 쉘 변수를 환경변수로 저장 </small>\r\n              <a name=\"export 명령어\" style={{ visibility: \"hidden\" }}> export 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 명령어 사용 </span>\r\n              <span className=\"mblock\">\r\n                <li> export 값 <small> 재접속 하면 사라짐 , 쉘스크립트 내부에서 사용 </small> </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 변수를 영구적으로 환경변수로 사용하는 방법 </span>\r\n              <span className=\"mblock\">\r\n                <li> vi ~/.bashrc에 들어감 </li>\r\n                <li> export 변수명=변수값 </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ at 명령어 <small> 지정된 시간에 1회 자동으로 작업 실행, 간단한 예약 작업 </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> at 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> yum install at </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> CentOS7 at 사용 </span>\r\n              <span className=\"mblock\">\r\n                <li> systemctl stop ntpd , 혹시나 영향을 줄까봐 </li>\r\n                <li> systemctl stop chronyd , 혹시나 영향을 줄까봐 </li>\r\n                <li> systemctl start atd </li>\r\n                <li> systemctl enable atd </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> at [option] \"시간\" </span>\r\n              <span className=\"mblock\">\r\n                <ul style={{ listStyle: \"none\" }}>\r\n                  <li> -f 파일명 : 스크립트 파일 등을 실행\r\n                    <li>  <small> at HHMM DDMMYYYY -f test.sh </small> </li>\r\n                  </li>\r\n                  <li> -m : 완료되면 사용자에게 메일을 보냄\r\n                    <li> <small> at -m HHMM DDMMYYYY </small> </li>\r\n                  </li>\r\n                  <li> -M : 메일 보내지 않기\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> -t : YYYYMMDDHHMM로 시간 지정\r\n                    <li> <small> at -t YYYYMMDDHHMM  </small> </li>\r\n                  </li>\r\n                  <li> -l : 예약된 작업 목록을 보여줌(atq 명령어와 같음)\r\n                    <li> <small> at -l </small> </li>\r\n                  </li>\r\n                  <li> -r 번호 : 예약된 작업 삭제(unix)\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> -d 작업번호 : 예약된 작업 삭제(linux)\r\n                    <li> <small> -d 1 </small> </li>\r\n                  </li>\r\n                  <li> -q : queue 이름을 지정\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> -V : 버전 확인\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> -v : 작업 시간 상세보기\r\n                    <li> <small> at -v HHMM DDMMYYYY </small> </li>\r\n                  </li>\r\n                  <li> -c : 예약 작업 상세보기\r\n                    <li> <small> at -v HHMM DDMMYYYY </small> </li>\r\n                  </li>\r\n                  <li> -b : 시스템에 부하를 주지 않게 실행\r\n                    <li> <small> at -b HHMM DDMMYYYY </small> </li>\r\n                  </li>\r\n                  <li> atq : 예약된 작업 목록을 보여줌\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> atrm : 예약된 작업 목록을 삭제\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> batch : 시스템 부하가 일정 이하일 때 명령을 실행\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> cron : 정기적으로 예약된 작업을 수행\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                </ul>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ crontab 명령어 <small> 예약 작업 자동 실행 명령어 </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> crontab 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li>  CentOS\r\n                  <li> sudo yum update -y </li>\r\n                  <li> sudo yum install -y cronie </li>\r\n                  <li> sudo systemctl start crond </li>\r\n                  <li> sudo systemctl enable crond , 활성화 </li>\r\n                </li>\r\n                <li>  Ubuntu\r\n                  <li> sudo apt update -y  </li>\r\n                  <li> sudo apt install -y cron  </li>\r\n                  <li> sudo service cron start  </li>\r\n                  <li> sudo systemctl enable cron.service  </li>\r\n                </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> cron 설정 파일 위치 </span>\r\n              <span className=\"mblock\">\r\n                <li> /var/spool/cron/ID : BSD 계열 </li>\r\n                <li> /var/spool/cron/crontabs/ID : 솔라리스 계열 </li>\r\n                <li> /etc/cron.d :  </li>\r\n                <li> /etc/crontab : 크론 데몬 파일 </li>\r\n                <li> /etc/rc.d/init.d/crond : 데몬 실행 스크립트(service) </li>\r\n                <li> /usr/lib/systemd/system/crond.service : 데몬 실행 스크립트(systemctl) </li>\r\n                <li> /usr/sbin/anacron : 서버가 일정 시간 중지 되었을 때 작업이 실행되는 것을 보장하기 위해 사용되는 도구 </li>\r\n                <li> ls -la /etc | grep cron : cron은 일,시,월,주 등 디렉토리 파일이 있고 그안에 실행할 파일들을 넣어놓고 작동 </li>\r\n                <li> /var/log/cron : 크론 실행내용 로그 </li>\r\n                <li> /etc/cron.allow , etc/cron.deny : 크론을 허용,비허용 등을 설정하는 파일 </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> crontab [option] 파일명 </span>\r\n              <span className=\"mblock\">\r\n                <ul style={{ listStyle: \"none\" }}>\r\n                  <li> crontab -l : crontab 조회\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> crontab -e : crontab 작성 및 수정\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> crontab -r : crontab 삭제\r\n                    <li> <small>  </small> </li>\r\n                  </li>\r\n                  <li> crontab -u : 루트가 특정 사용자의 crontab파일을 다룰 때 사용\r\n                    <li> <small> crontab -u 사용자명 -e </small> </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </ul>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> crontab 파일 작성 </span>\r\n              <span className=\"mblock\">\r\n                <li> [ minute hour day month week user command ] </li>\r\n                <li> minute(분) : 0~59 </li>\r\n                <li> hour(시) : 0~23 </li>\r\n                <li> day(일) : 1~31 </li>\r\n                <li> month(월) : 1~12 </li>\r\n                <li> week(주) : 0~7(0과7은 일요일) </li>\r\n                <li> user : 사용자이름 </li>\r\n                <li> command : 실행할 명령어 </li>\r\n                <li> 정규표현식 문자 : *(모든날짜) (10일)-(20일) (요일1),(요일2),(요일3) (날짜)/(값) (주기를 나타냄) </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> crontab 파일 예시  </span>\r\n              <span className=\"mblock\">\r\n                <li> 0 12 * * * 명령어 <small> 12시에 명령어 실행 </small> </li>\r\n                <li> 0 0,12 * * * 명령어 <small> 0,12시에 명령어 실행 </small> </li>\r\n                <li> 0 /2 * * * 명령어 <small> 12시간마다 명령어 실행 </small> </li>\r\n                <li> 0 12-18 * * * 명령어 <small> 12-18 시간마다 명령어 실행 </small> </li>\r\n                <li> 0 18 * * fri 명령어 <small> 18시 금요일마다 명령어 실행 </small> </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ wget 명령어 <small> 웹에서 다운로드 하기 위한 명령어 </small>\r\n              <a name=\"wget 명령어\" style={{ visibility: \"hidden\" }}> wget 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> wget 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> wget : wget가 설치되어 있으면 missing URL 이라고 출력된다. </li>\r\n                <li> CentOS\r\n                  <li> sudo yum install wget </li>\r\n                </li>\r\n                <li> Ubuntu, Debian\r\n                  <li> sudo apt install wget </li>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> wget [options] [url]  사용 </span>\r\n              <span className=\"mblock\">\r\n                <li> wget -q [url] : 다운로드 진행률 표시를 끔 </li>\r\n                <li> wget -O 저장할파일이름.확장자 [url]  </li>\r\n                <li> wget -P 경로 [url] : 특정 위치에 파일을 다운로드 </li>\r\n                <li> wget -c [url] : 파일을 이어서 다운로드, 이어서 다운로드 지원을 하지 않으면 기존 파일 덮어쓰기 </li>\r\n                <li> wget -b [url] : 백그라운드에서 다운로드 </li>\r\n                <li> wget -i [다운로드할 url이 담겨있는 파일] :  </li>\r\n                <li> wget --ftp-user=FTP유저명 --ftp-password=FTP패스워드 [url] :  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ openssl 명령어 <small> 해쉬값 관련 명령어 </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> openssl passwd -1 -salt 솔트값 비번 </li>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ Host 명령어 <small>  </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> hostname # 서버의 이름을 조회 </li>\r\n                <li> hostname test.com # 서버의 이름을 test.com으로 변경 </li>\r\n                <li> hostnamectl set-hostname 호스트이름 # 서버의 이름 변경  </li>\r\n                <li> hostnamectl set-hostname --static 호스트이름 # 서버의 이름 변경 </li>\r\n                <li> hostname -i # 서버의 IP주소 출력 </li>\r\n                <li> hostname -d # 서버의 도메인 주소 출력1 </li>\r\n                <li> hostname -h # hostname 명령어 설명 </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ <small>  </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinuxCommand;","import React from 'react';\r\n\r\nconst LinuxMobaXterm = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> MobaXterm 다운로드 </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> Home Edition - Portable edition 다운로드 </li>\r\n                            <li> 알집파일 우측클릭 - 7-zip - \"\"에 풀고 폴더명을 MobaXterm으로 바꾸기   </li>\r\n                            <li> C드라이브 - app - 새폴더로 Run과 Terminal 이라고 만들기   </li>\r\n                            <li> Terminal 폴더안에 MobaXterm폴더를 이동시키기  </li>\r\n                            <li> MobaXterm폴더에 들어가서 MobaXterm_Personal.exe파일 바로가기 생성하기  </li>\r\n                            <li> 바로가기 생성한 파일을 Ctrl+X를 이용해서 잘라내기 그리고 잘라낸 파일 Ctrl+C로 복사  </li>\r\n                            <li> 복사한 파일을 아까 만들었던 상위폴더 Run에 Ctrl+V   </li>\r\n                            <li> 시스템 환경 변수 편집 - 고급 - 환경 변수 - 사용자 변수 Path 더블클릭   </li>\r\n                            <li> 새로만들기 - C:\\app\\Run 넣어주기  </li>\r\n                            <li> 그리고 Win + R 누르고 mob입력했을 때 실행되면 성공   </li>\r\n\r\n                            <h2 className=\"h2\"> 📌 사용 </h2>\r\n                            <li> ssh root@[본인의IP주소입력] </li>\r\n                            <li> P@ssW0rd! 입력 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> MobaXterm SFTP </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> chmod 755 /etc/ssh/ssh_config <small> # sftp(ssh) error #114 해결 </small> </li>\r\n                            <li> vi /etc/ssh/sshd_config\r\n                                <div className=\"block4\">\r\n                                    <li> #Subsystem sftp /user/libexec/openssh/sftp-server <small> # 이부분은 주석처리 </small> </li>\r\n                                    <li> Subsystem sftp internal-sftp <small> # 이부분은 작성 </small>  </li>\r\n                                    <li> 그 아래에 Match 부분에 주석들 4~5개 해제 </li>\r\n                                    <li> Chroot Directory /var/ww/html만 Match 아래쪽에 추가 </li>\r\n                                </div>\r\n                            </li>\r\n                            <li> chown [계정]:[계정] [디렉토리] -R <small> # 디렉토리부터 상위에 있는 모든 파일에 권한주기? </small> </li>\r\n                            <li> chmod 544 /etc/ssh/ssh_config <small> # sftp(ssh) error #114 해결 </small> </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MobaXterm 다운로드 <a name=\"MobaXterm 다운로드\" style={{ visibility: \"hidden\" }}> MobaXterm 다운로드 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <li> <a href=\"https://mobaxterm.mobatek.net/download.html\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                                <li> Home Edition - Portable edition 다운로드 </li>\r\n                                <li> 알집파일 우측클릭 - 7-zip - \"\"에 풀고 폴더명을 MobaXterm으로 바꾸기   </li>\r\n                                <li> C드라이브 - app - 새폴더로 Run과 Terminal 이라고 만들기   </li>\r\n                                <li> Terminal 폴더안에 MobaXterm폴더를 이동시키기  </li>\r\n                                <li> MobaXterm폴더에 들어가서 MobaXterm_Personal.exe파일 바로가기 생성하기  </li>\r\n                                <li> 바로가기 생성한 파일을 Ctrl+X를 이용해서 잘라내기 그리고 잘라낸 파일 Ctrl+C로 복사  </li>\r\n                                <li> 복사한 파일을 아까 만들었던 상위폴더 Run에 Ctrl+V   </li>\r\n                                <li> 시스템 환경 변수 편집 - 고급 - 환경 변수 - 사용자 변수 Path 더블클릭   </li>\r\n                                <li> 새로만들기 - C:\\app\\Run 넣어주기  </li>\r\n                                <li> 그리고 Win + R 누르고 mob입력했을 때 실행되면 성공   </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ MobaXterm 사용\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> ssh root@[본인의IP주소입력] </li>\r\n                                    <li> P@ssW0rd! 입력 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinuxMobaXterm;","import React from 'react';\r\n\r\nconst LinuxVimEditor = (props) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ vim 에디터 명령어 <a href=\"#!\" name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 기타 </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> vi 파일명 # vi 편집기로 파일 실행</li>\r\n                    <li> # : vi 편집기에서 주석 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 명령모드 </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> u :실행한것 되돌리기 </li>\r\n                    <li> x :  문자 삭제하기 </li>\r\n                    <li> dd : 커서가 위치한곳 문장 삭제가능 </li>\r\n                    <li> dw : 커서가 위치한곳 단어 삭제가능 </li>\r\n                    <li> d$ : 커서가 위치한곳에서 문장 끝까지 삭제가능 </li>\r\n                    <li> d^ : 커서가 위치한곳에서 문장 앞까지 삭제가능 </li>\r\n                    <li> ndd : 커서가 위치한곳에서 n숫자를 입력한 만큼 문장을 삭제 </li>\r\n                    <li> yy : 커서가 위치한곳의 줄을 복사 </li>\r\n                    <li> nyy : 커서가 위치한곳의 줄을 n번째까지의 줄을 복사 </li>\r\n                    <li> p : 복사한 내용을 붙여넣기 </li>\r\n                    <li> G : 가장 마지막 줄로 이동 </li>\r\n                    <li> gg : 가장 첫번째 줄로 이동 </li>\r\n                    <li> ngg : n번째에 해당하는 줄로 이동 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 삽입모드 </summary>\r\n                  <span className=\"mblock\">\r\n                    <small> 명령모드에서 삽입모드로 변경 [i,I,a,A,o] </small>\r\n                    <li> i : 현재커서가 위치한 곳에서 입력가능 </li>\r\n                    <li> I : 현재커서가 위치한 곳에 가장 첫문장부터 입력가능 </li>\r\n                    <li> a : 현재커서가 위치한 다음 부터 입력가능 </li>\r\n                    <li> A : 현재커서가 위치한 가장 끝문장부터 입력가능 </li>\r\n                    <li> o : 다음줄 부터 문자를 입력가능 </li>\r\n                    <li> esc : 명령모드로 돌아가기 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 실행모드 </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> : : 명령모드에서 실행모드로 변경</li>\r\n                    <li> w : 현재 파일 내용을 저장 </li>\r\n                    <li> q : 현재 파일에서 빠져나옴 </li>\r\n                    <li> wq : 현재 파일 내용을 저장하고 빠져나옴 </li>\r\n                    <li> q! : 현재 파일을 저장하지 않고 빠져나옴 </li>\r\n                    <li> set nu : 에디터에 줄번호 표시 </li>\r\n                    <li> set nonu : 에디터에 줄번호 표시를 제거 </li>\r\n                    <li> %s/[변경하려는단어]/[변경할단어]/g : 모든 문장의 단어 바꾸기 </li>\r\n                    <li> ns/[변경하려는단어]/[변경할단어]/g : n번째 문장의 단어 바꾸기 </li>\r\n                    <li> n,ms/[변경하려는단어]/[변경할단어]/g : n~m번째 문장의 단어 바꾸기 </li>\r\n                    <li className=\"sblock\"> <span className=\"sstitle\"> Ubuntu </span>\r\n                      <li> set number : 줄번호를 표시해주는 명령어 </li>\r\n                      <li> set nocp : 오리지널 vi의 기능을 없앰 </li>\r\n                      <li> set bs=2 : 삽입모드에서 백스페이스를 사용하게함 </li>\r\n                      <li> vi /root/.exrc #vi에 적용 </li>\r\n                      <li> source /root/.exrc #껏다가 킨것처럼 적용 </li>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 검색모드 </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> / : 명령모드에서 검색모드로 변경 </li>\r\n                    <li> /[검색할내용] : 검색모드일 때 </li>\r\n                    <li> n : 검색모드일 때 , 검색한 문자열을 아래로 계속 찾음</li>\r\n                    <li> N : 검색모드일 때 , 검색한 문자열을 위로 계속 찾음</li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 기타 </summary>\r\n                  <span className=\"mblock\">\r\n                    <li>  </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a href=\"#!\" name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <summary className=\"sstitle\">  </summary>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a href=\"#!\" name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <summary className=\"sstitle\">  </summary>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxVimEditor;","import React from 'react';\r\n\r\nconst LinuxDirectory = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> etc </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 yum.repos.d </h2>\r\n              <li> yum저장소 </li>\r\n\r\n              <h2 className='h2'> 📌 /etc/login.defs </h2>\r\n              <div className=\"block4\">\r\n                <li> UID,GID가 1000~60000번으로 자동으로 생성되는 범위 설정 </li>\r\n                <li> 패스워드의 최소길이,경고만료일,최소~최대 만료일을 설정 가능 </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 /etc/group </h2>\r\n              <div className=\"block4\">\r\n                <li> 그룹들에 대한 정보 </li>\r\n              </div>\r\n\r\n              <h2 className='h2'> 📌 /etc/passwd </h2>\r\n              <div className=\"block4\">\r\n                <li> 사용자들에 대한 정보 </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 리눅스 디렉토리 계층 구조 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 최상위 디렉토리 / </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 뿌리 , 윈도우의 C드라이브 같은거 , 디렉토리의 최상단 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ dev </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 장치 파일이 담긴 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ home </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 사용자가 사용하는 홈 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ media </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> CD, USB 등 외부장치(마운트)를 사용하는 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ opt </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 추가 패키지가 설치되는 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ root - [시작시실행파일설정] </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> root계정의 홈 디렉토리, / 와는 다름 </li>\r\n                    <li> .bashrc : 실행될 때 작동하는 파일 , alias 설정을 해놓는 파일\r\n                      <li> alias [별칭]='[명령어] [옵션]' , [su 사용자명] 명령어로 재로그인 해야 설정적용 </li>\r\n                    </li>\r\n                    <small> .bashrc 파일에 alias설정을 해놓으면 우선순위로 적용되어 다른 옵션을 무시하게 된다. </small>\r\n                    <li> </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ sys </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 리눅스 커널과 관련된 파일이 있는 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ usr </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 기본 실행 파일과 라이브러리 파일, 헤더 파일 등 많은 파일이 있다. </li>\r\n                    <li> /bin/sh </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ boot </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 부팅에 필요한 커널 파일을 가지고 있다. </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ etc </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 리눅스 설정을 위한 각종 파일을 가지고 있다. </li>\r\n                    {/*  */}\r\n                    <li> /passwd : 시스템에 등록된 사용자의 정보들이 감겨있는 파일\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶  [사용자계정 | 패스워드 | UID | GID | comment | 홈디렉토리 | 로그인쉘] </summary>\r\n                          <li> 사용자계정 :   </li>\r\n                          <li> 패스워드 : [ x:shadow에암호화되어저장 | ]  </li>\r\n                          <li> UID : 사용자의 User ID </li>\r\n                          <li> GID : 사용자의 Group ID </li>\r\n                          <li> comment : 기타 정보(일반적으로는 사용자의 이름) </li>\r\n                          <li> 홈디렉토리 : 사용자의 홈 디렉토리 </li>\r\n                          <li> 로그인쉘 : 사용자가 로그인시 사용하는 쉘(bash로 끝나지 않으면 로그인이 불필요한 계정)  </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /shadow : 시스템에 등록된 사용자의 암호화된 패스워드를 저장하는 파일\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ [사용자계정 | 암호화된 패스워드 | ]  </summary>\r\n                          <li> 사용자계정 :   </li>\r\n                          <li> 암호화된 패스워드 : $algorithm_id$salt$encrypted_password\r\n                            <span className=\"mblock\">\r\n                              <li> algorithm_id : 해시 알고리즘 [1:MD5, 2:BlowFish, 5:SHA-256, 6:SHA-512 ] </li>\r\n                              <li> salt : 해쉬 암호화에 추가되는 랜덤값 </li>\r\n                              <li> encrypted_password :\r\n                                <li> * : 패스워드가 잠긴 상태이고  로그인 불가 </li>\r\n                                <li> ! : 패스워드가 잠신 상태이고 로그인 불가 또는 사용자를 생성하고 패스워드를 설정하지 않은 상태 </li>\r\n                                <li> empty : 패스워드가 설정되지 않았지만 로그인이 가능 </li>\r\n                              </li>\r\n                              <li>  </li>\r\n                            </span>\r\n                          </li>\r\n                          <li> 마지막 비번 변경 날짜 : 1970년 1월 1일 이후를 기준으로 며칠이 지났는지 표시  </li>\r\n                          <li> 패스워드 최소 사용기간 : 변경한 후에 최소 사용기간 동안 사용하지 않으면 변경불가  </li>\r\n                          <li> 패스워드 최대 사용기간 : 패스워드의 만료기간  </li>\r\n                          <li> 경고 : 패스워드 만료되기전에 경고할 일수  </li>\r\n                          <li> 비활성화 : 패스워드 만료된후에 비활성화 일수, 기간이 지나면 잠김  </li>\r\n                          <li> 만료일 : 계정 만료일 , 1970년 1월 1일 기준  </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /securetty : 루트가 로그인이 가능한 터미널 목록을 정의해둔 파일\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ /bin/login 프로세스가 현재 파일을 참조하여 사용  </summary>\r\n                          <small>  </small>\r\n                          <li> tty(TeleTYpewriter) : 콘솔이나 터미널을 의미 </li>\r\n                          <li> pts(Pseudo TTY Slave) : 네트워크를 통해 원격접속 했을때 열리는 터미널 </li>\r\n                          <li> ttyS : 시리얼 라인 또는 모뎀을 통했을때 허용하는 터미널 </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /ssh/sshd_config\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ ssh의 설정을 가진 파일  </summary>\r\n                          <li>  PermitRootLoing yes #root로그인을 막는 설정 </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /group\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ 사용자의 그룹들을 모아놓은 파일  </summary>\r\n                          <li> sudo groupadd 그룹명 , #그룹을 생성 </li>\r\n                          <li> sudo groupdel 그룹명 , #그룹을 삭제  </li>\r\n                          <li> sudo gpasswd 그룹명 , #그룹의 암호를 설정(사용자가 그룹에 로그인하기 위해 설정)  </li>\r\n                          <li> sudo gpasswd -r 그룹명 , #그룹의 암호를 제거  </li>\r\n                          <li> sudo gpasswd -A 사용자명 그룹명 , #그룹의 관리자를 사용자로 설정  </li>\r\n                          <li> sudo gpasswd -a 사용자명 그룹명 , #그룹에 사용자를 포함시킴  </li>\r\n                          <li> sudo gpasswd -d 사용자명 그룹명 , #그룹에서 사용자를 제외 시킴  </li>\r\n                          <li> sudo usermod -a -g 사용자명 그룹명 , #사용자의 그룹을 변경  </li>\r\n                          <li> sudo usermod -a -G 사용자명 그룹명 , #사용자의 주 그룹 + 그룹을 하나 추가  </li>\r\n                          <li> newgrp 그룹명 , #다른 그룹으로 로그인  </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /default/useradd\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ 사용자 생성 설정  </summary>\r\n                          <li> GROUP : 기본등록 그룹의 GID , 100 </li>\r\n                          <li> HOME : 생성될 홈 디렉토리의 위치 , /home </li>\r\n                          <li> INACTIVE : 패스워드 만료 이후의 유효기간 설정 , 1  </li>\r\n                          <li> EXPIRE : 계정 종료일 지정 , 1 </li>\r\n                          <li> SHELL : 기본 사용 쉘 지정 , /bin/bash </li>\r\n                          <li> SKEL : 홈 디렉토리에 복사할 기본환경파일위치(사용자가 생성될 때 자동으로 홈 디렉토리에 자동으로 추가되는 파일들을 담은 폴더) , /etc/skel </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /login.defs\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ 사용자 계정 설정과 관련된 기본 값을 정의한 파일 </summary>\r\n                          <li> MAIL_DIR : 기본 메일 디렉토리 , # /var/spool/mail  </li>\r\n                          <li> PASS_MAX_DAYS : 패스퉈드 최대 사용일 , # 99999 </li>\r\n                          <li> PASS_MIN_DAYS : 패스워드 최소 사용일 , # 0 </li>\r\n                          <li> PASS_MIN_LEN\t : 패스워드 최소 길이 , # 5 </li>\r\n                          <li> PASS_WARN_AGE : 패스워드 만료 경고일 , # 7 </li>\r\n                          <li> UID_MIN , UID_MAX : 사용자 계정 UID범위 , # 1000,60000 </li>\r\n                          <li> SYS_UID_MIN , SYS_UID_MAX : 시스템 계정 UID범위 , # 210 , 999 </li>\r\n                          <li> GID_MIN , GID_MAX : 사용자 계정 GID범위 , # 1000,60000 </li>\r\n                          <li> SYS_GID_MIN , SYS_GID_MAX : 시스템 계정 GID범위 , # 210 , 999 </li>\r\n                          <li> CREATE_HOME : 홈 디렉토리 생성 여부 , # yes  </li>\r\n                          <li> UMASK : umask 값 설정(권한설정) , # 077 , 허가권=777-unmask값 </li>\r\n                          <li> USERGROUPS_ENAB : 사용자 계정 삭제시 그룹 삭제 여부 , # yes  </li>\r\n                          <li> ENCRYPT_METHOD : 암호화 기법 , # SHA512  </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> etc/dhcp/dhcpd.conf\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶ dhcp 설정 파일 </summary>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /resolv.conf\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶   </summary>\r\n                          <li>   </li>\r\n                          <li>   </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶   </summary>\r\n                          <li>   </li>\r\n                          <li>   </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ lost+found </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 파일 시스템에 문제가 발생하여 복구할 경우 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ mnt </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 파일 시스템을 임시로 마운팅 하는 디렉토리 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ proc </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 프로세스 정보 등 커널 관련 정보가 저장되는 디렉토리 </li>\r\n                    <li> ls -la /proc : 현재 작동되는 프로세스들을 보여줌 </li>\r\n                    <li> ls -la /proc/PID번호 : PID번호에 맞는 프로세스 파일들을 보여줌 </li>\r\n                    <li> ls -la /proc/$$/fd : 파일 디스크립터  </li>\r\n                    <li> exec 0&lt;&amp;- : 0번 표준입력을 꺼버림 , 문제가 발생  </li>\r\n                    <li> exec 1&lt;&amp;- : 1번 표준입력을 꺼버림 , 문제가 발생  </li>\r\n                    <li> exec 2&lt;&amp;- : 2번 표준입력을 꺼버림 , 문제가 발생  </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ run </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 실행 중인 서비스와 관련된 파일이 저장 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ srv </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> FTP나 Web 등 시스템에서 제공하는 서비스의 데이터가 저장된다. </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ tmp </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 시스템에 사용중에 발생하는 임시데이터 저장공간, 재부팅 되면 모두 삭제 </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ var </summary>\r\n                  <span className=\"mblock\">\r\n                    <li> 시스템 운영 중에 발생하는 데이터나 로그 등이 저장되는 디렉토리 </li>\r\n                    {/*  */}\r\n                    <li> /lib/dhcpd/dhcpd.leases\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶   </summary>\r\n                          <li>   </li>\r\n                          <li>   </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                    <li> /\r\n                      <span className=\"sblock\">\r\n                        <details>\r\n                          <summary className=\"sstitle\"> ▶   </summary>\r\n                          <li>   </li>\r\n                          <li>   </li>\r\n                        </details>\r\n                      </span>\r\n                    </li>\r\n                    {/*  */}\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxDirectory;","import React from 'react';\r\n\r\nconst LinuxUbuntu = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] 초기 root 계정 접속 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> hostnamectl <small> 우분투 버전 확인 </small> </li>\r\n              <li> sudo passwd root 입력 </li>\r\n              <li> 새로운 패스워드 입력 </li>\r\n              <li> 새로운 패스워드 재입력 </li>\r\n              <li> su root </li>\r\n              <li> 비밀번호 입력 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 root계정을 ssh로 접속하기(테스트 해보지 않음) </h2>\r\n            <div className='block4'>\r\n              <li> vi /etc/ssh/sshd_config </li>\r\n              <li> #PermitRootLogin prohibit-password <small> 34번째 줄 </small> </li>\r\n              <li> PermitRootLogin yes </li>\r\n              <li> systemctl restart sshd </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [1] docker </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 우분투 20.04(LTS)에서 설치 </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <span className=\"lblock\">\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ VMware에 Ubuntu 설치하는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}> </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> <a href=\"https://ubuntu.com/download/desktop/thank-you?version=20.04.2.0&amp;architecture=amd64\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n                <li> CentOS-7-x86_64-DVD-2009.iso 다운로드 </li>\r\n                <li> VMware Workstation 실행 </li>\r\n                <li> Create a New Virtual Machine </li>\r\n                <li> Typical 클릭 </li>\r\n                <li> I will install the operation system later 클릭 </li>\r\n                <li> Linux , CentOS 7 64-bit 클릭 </li>\r\n                <li> Virtual machine name: CentOS7_Server 이름으로 바꾸기 (안바꾸어도 상관은 없음) </li>\r\n                <li> 20GB , Split virtual disk into multiple files 클릭 </li>\r\n                <li> Customize Hardware... 클릭 </li>\r\n                <li> Memory : 가상 램은 2GB(2048MB)로 변경 </li>\r\n                <li> New CD/DVD (IDE) : Use ISO image file:에 아까받은 CentOS7 넣기 </li>\r\n                <li> Network Adapter : Custom 부분에 VMnet8(NAT)로 선택 </li>\r\n                <li> Sound Card, Printer는 remove (아래쪽에 버튼이 있음) </li>\r\n                <li> close하고 finish </li>\r\n                <li> 한국어 선택하고 Ubuntu 설치  </li>\r\n                <li> 키보드 레이아웃 선택: Korean 하고 101/104 선택하고 계속하기 </li>\r\n                <li> 건드리지 않고 계속하기 클릭 </li>\r\n                <li> 디스크를 지우고 Ubuntu설치 클릭 - 지금 설치 - 계속하기 </li>\r\n                <li> 거주지역 Seoul </li>\r\n                <li> 이름 : 이름 </li>\r\n                <li> 컴퓨터 이름 : 이름.com </li>\r\n                <li> 사용자 이름 선택 : </li>\r\n                <li> 암호 선택 : P@ssw0rd! </li>\r\n                <li>  </li>\r\n                <li> 프로그램 - 시스템 도구 - 설정 - 개인 정보 - 화면잠금 - 끔 </li>\r\n                <li> 프로그램 - 시스템 도구 - 설정 - 전원 - 빈화면 - 안함 </li>\r\n                <li> 프로그램 - 시스템 도구 - 설정 - 터미널   </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ Ubuntu 터미널 명령어 <a name=\"Ubuntu 터미널 명령어\" style={{ visibility: \"hidden\" }}> Ubuntu 터미널 명령어 </a> </summary>\r\n            <span className=\"sblock\">\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> sudo passwd root #루트의 비번을 변경 </li>\r\n                <li> su - root #루트로 접속 </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 네트워크 설정 </span>\r\n              <span className=\"mblock\">\r\n                <li> ls -la /etc/netplan : 우분투에서 네트워크 설정이 있는 경로에서 파일보기  </li>\r\n                <li> cd /etc/netplan 경로이동 - vi 01-network-manager-all.yaml </li>\r\n                <li> ethernets:  </li>\r\n                <li> &nbsp;ens33:  </li>\r\n                <li> &nbsp;&nbsp;addresses: [192.168.10.90/24] </li>\r\n                <li> &nbsp;&nbsp;gateway4: 192.168.10.2 </li>\r\n                <li> &nbsp;&nbsp;nameservers: </li>\r\n                <li> &nbsp;&nbsp;&nbsp;addresses: [168.126.63.1,8.8.8.8] </li>\r\n                <li> &nbsp;&nbsp;dhcp4: no </li>\r\n                <li> cat 01-network-manager-all.yaml 으로 확인 </li>\r\n                <li> netplan apply #netplan이 관리해서 적용한다?</li>\r\n                <li> ip route #확인해보면 ip가 변경된 것을 볼 수 있음 </li>\r\n                <li> 참고 구글에 winmerge 검색하고 다운로드 하고 실행</li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ telnet 서버 설치하는 방법 <a name=\"telnet 서버 설치하는 방법\" style={{ visibility: \"hidden\" }}> telnet 서버 설치하는 방법 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <small> 텔넷서버: 원격 접속을 지원하는 프로그램, 보안에 취약해서 대분분 SSH를 사용 </small>\r\n              <span className=\"sstitle\"> 방법1 </span>\r\n              <span className=\"mblock\">\r\n                <li> 0. sudo passwd root </li>\r\n                <li> 0. su - # 루트 계정으로 접속하는 방법 </li>\r\n                <li> 1. apt-get install xinetd </li>\r\n                <li> 2. apt-get install telnetd </li>\r\n                <li> 3. vi /etc/xinetd.conf\r\n                  <li> {'service telnet '} </li>\r\n                  <li> {'{ '} </li>\r\n                  <li> {'        disable = no '} #서비스를 사용하지 않을것인지 no면 사용한다는 의미</li>\r\n                  <li> {'        flags = REUSE '} #재사용한다는 의미</li>\r\n                  <li> {'        socket_type = stream '} #소켓형태 스트림</li>\r\n                  <li> {'        wait = no '} #바로 서버를 사용?</li>\r\n                  <li> {'        user = root '} #접속할수 있는 유저</li>\r\n                  <li> {'        server = /usr/sbin/in.telnetd '} #텔넷서버에 대한 명령어 </li>\r\n                  <li> {'        log_on_failure += USERID '} #접속실패했을때 유저의 아이디를 로그로 남겨라</li>\r\n                  <li> {'} '} </li>\r\n                </li>\r\n                <li> /etc/init.d/xinetd restart </li>\r\n                <li> apt-get install net-tools # netstat 보려고 다운 </li>\r\n                <li> netstat -tnlp #tcp에 대한 포트를 보겠다? , 우분투에서는 없음</li>\r\n                <li> ufw enable #방화벽 활설화? </li>\r\n                <li> ufw statue #방확벽의 활성화 여부 확인 </li>\r\n                <li> ufw allow 23/tcp #tcp23포트를 방화벽에서 허용 </li>\r\n                <li> vi /etcpam.d/login로 가서 10번쨰 줄 정도에 auth required pam_securetty.so 추가  </li>\r\n                <li> systemctl restart xinetd </li>\r\n                <li> vi etc/securetty </li>\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ 쉘 설치하기 <a name=\"쉘 설치하기\" style={{ visibility: \"hidden\" }}> 쉘 설치하기 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> csh 설치하기 </span>\r\n              <span className=\"mblock\">\r\n                <li> 과거에 사용한 C기반의 쉘 </li>\r\n                <li> apt-get install csh </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ dhcp 서버 설치하는 방법 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> dhcp 서버란? </span>\r\n              <span className=\"mblock\">\r\n                <li> Dynamic Host Configuration Protocol </li>\r\n                <li> 자신의 네트워크 안에 클라이언트 컴퓨터가 부팅될 때 자동으로 IP주소, 서브넷마스크, 게이트웨이 주소, DNS 서버 주소를\r\n                  할당해주는 것 </li>\r\n                <li> 일반 사용자는 IP에 관련된 어려운 정보를 알지 못해도 사용을 하는데 문제가 없음 </li>\r\n                <li> dhcp 서버는 관리가 편하고 이용자도 편함 </li>\r\n                <li> 한정된 IP주소를 가지고 더많은 IP주소가 있는 것처럼 사용하여 여러명의 사용자가 사용할 수 있게 함 </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> dhcp 서버 작동원리 </span>\r\n              <span className=\"mblock\">\r\n                <li> 1. dhcp클라이언트 컴퓨터 부팅 </li>\r\n                <li> 2. 자동으로 IP 주소를 dhcp서버로 요청 </li>\r\n                <li> 3. dhcp서버에 있는 할당 되지 않은 IP를 선택하고 할당됨으로 변경 </li>\r\n                <li> 4. IP주소를 dhcp클라이언트에게 할당 </li>\r\n                <li> 5. dhcp클라이언트는 dhcp서버에게 받은 IP로 인터넷을 이용  </li>\r\n                <li> 6. dhcp클라이언트가 접속을 종료하게 되면 dhcp서버에 IP주소를 반납 </li>\r\n                <li> 7. dhcp서버에 있는 IP주소 목록에서 반납된 IP주소를 다시 할당해제를 시켜준다. </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> dhcp 서버 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> apt-get -y install isc-dhcp-server , # LOCK이 걸려있으면 아래 명령어 참고  </li>\r\n                <small> rm /var/lib/apt/lists/lock </small> <br />\r\n                <small> rm /var/cache/apt/archives/lock </small> <br />\r\n                <small> rm /var/lib/dpkg/lock* </small> <br />\r\n                <li> apt install net-tools , # ifconfig를 지원하지 않아 설치 </li>\r\n                <li> systemctl restart isc-dhcp-server </li>\r\n                <li> lsof -i upd:67 </li>\r\n                <li>  </li>\r\n\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> dhcp 서버 설정 </span>\r\n              <span className=\"mblock\">\r\n                <li> /etc/dhcp/dhcpd.conf 에 아래와 같은 내용을 넣어 주면 된다.  </li>\r\n                <li> subnet 192.168.10.0 netmask 255.255.255.0 , # netmask는 앞에 9자리가 네트워크 대역이라는 것을 알려줌 </li>\r\n                <li> {'{'}  </li>\r\n                <li> host client1  </li>\r\n                <li> {'{'}  </li>\r\n                <li> option host-name \"client1\";  </li>\r\n                <li> hardware ethernet 하드웨어주소; , # ifconfig에서 ether 주소를 참조 </li>\r\n                <li> fixed-address 102.168.10.251;  </li>\r\n                <li> {'}'}  </li>\r\n                <li> option routers 192.168.10.2; , #dhcp서버가 보는 나의 게이트웨이 주소  </li>\r\n                <li> option subnet-mask 255.255.255.0;  , # 네트워크 대역을 255로 알려줘  </li>\r\n                <li> range dynamic-bootp 192.168.10.30 192.168.10.50; , #30~50번 IP를 나누어 준다.   </li>\r\n                <li> option domain-name-servers 8.8.8.8;  , # 도메인 주소를 설정 </li>\r\n                <li> default-lease-time 86400; , # 클라이언트에게 준 IP의 시간을 초단위로 설정  </li>\r\n                <li> max-lease-time 172800; , # 클라이언트에게 준 동일한 IP의 최대 시간을 초단위로 설정, 오랜기간 사용하면 악용의 소지때문에 제한  </li>\r\n                <li> {'}'}  </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> dhcp 클라이언트 설정 </span>\r\n              <span className=\"mblock\">\r\n                <li> vi /etc/netplan/01-network-manager-all.yaml </li>\r\n                <li> netplan apply </li>\r\n                <li> ip route , # 아무것도 나오지 않으면 아래 참고 </li>\r\n                <small>  우분트 우측 상단 - 전원 버튼 - 유선으로 관리되지 않음 - 연결 , 이래도 안되면 아래방법 참고  </small> <br />\r\n                <small>    </small> <br />\r\n                <li> vi /etc/netplan/01-network-manager-all.yaml\r\n                  <li> renderer: ~~~~ 아래부터 작성 </li>\r\n                  <li> ethernets: </li>\r\n                  <li> &nbsp;ens33: , # ls /sys/class/net 참고 </li>\r\n                  <li> &nbsp;&nbsp;dhcp4: yes </li>\r\n                </li>\r\n                <li> systemctl restart isc-dhcp-server </li>\r\n                <li> lsof -i udp:67  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinuxUbuntu;","import React from 'react';\r\n\r\nconst LinuxCentOS7 = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] 초기 root 계정 접속 </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> sudo passwd root 입력 </li>\r\n              <li> 새로운 패스워드 입력 </li>\r\n              <li> su root 명령어 입력 </li>\r\n              <li> 비밀번호 입력 </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [1] 방화벽 설정하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 시작 </h2>\r\n            <div className=\"block4\">\r\n              <li> firewall-cmd --state <small> running </small> </li>\r\n              <li> systemctl disable firewalld </li>\r\n              <li> systemctl stop firewalld </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 방화벽 명령어  </h2>\r\n            <div className=\"block4\">\r\n              <li> firewall-cmd --reload <small> 방화벽 적용(변경할 때 마다 사용!!!!!!!!!!!!!!!!!!) </small> </li>\r\n              <li> firewall-cmd --state <small> 방화벽 상태 </small> </li>\r\n              <li> firewall-cmd --list-ports <small> 방화벽 개방 목록 </small> </li>\r\n              <li> firewall-cmd --list-all <small> 방화벽 설정 상태 </small> </li>\r\n              <li> firewall-cmd --get-zones </li>\r\n              <li> firewall-cmd --list-all-zones </li> <br />\r\n              <li> systemctl start firewalld <small> 방화벽 시작 </small> </li>\r\n              <li> systemctl enable firewalld <small> 재부팅시 자동 설정 </small> </li>\r\n              <li> systemctl stop firewalld <small> 방화벽 중지 </small> </li>\r\n              <li> systemctl disable firewall <small> 재부팅시 자동 설정x </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 방화벽 허용 </h2>\r\n            <div className=\"block4\">\r\n              <li> firewall-cmd --permanent --add-port=[포트번호]/[프로토콜(ex) tcp] <small> # 방화벽 포트번호 허용 </small> </li>\r\n              <li> firewall-cmd --permanent --remove-port=[포트번호 포트번호-포트번호]/[프로토콜(ex) tcp)] </li>\r\n              <li> firewall-cmd --permanent --add-service=[서비스명(ex) http https] </li>\r\n              <li> firewall-cmd --permanent --remove-service=[서비스명] </li>\r\n              <li> firewall-cmd --permanent --add-source=[IP주소]  <small> # 특정 IP 허용 </small> </li>\r\n              <li> firewall-cmd --permanent --remove-source=[IP주소]  <small> # 특정 IP 제거 </small> </li>\r\n              <li> firewall-cmd --permanent --add-source=[IP주소/서브넷마스크]  <small> # 특정 IP대역 허용 </small> </li>\r\n              <li> firewall-cmd --permanent --remove-source=[IP주소/서브넷마스크]  <small> # 특정 IP대역 제거 </small> </li>\r\n              <li> firewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=[IP주소] reject' <small> # 특정IP 접근 막기 </small> </li>\r\n              <li> firewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=[IP주소] drop' <small> # 특정IP 접근 막기 </small> </li>\r\n              <li> firewall-cmd --permanent --remove-rich-rule='rule family=\"ipv4\" source address=[IP주소] reject' <small> # 특정IP 접근 막기 제거 </small> </li>\r\n              <li> firewall-cmd --permanent --remove-rich-rule='rule family=\"ipv4\" source address=[IP주소] drop' <small> # 특정IP 접근 막기 제거 </small> </li>\r\n              <li> firewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=[IP주소] port port=[포트번호] protocol=\"tcp\" accept' <small> # 특정IP에 특정Port 허용</small> </li>\r\n              <li> firewall-cmd --permanent --remove-rich-rule='rule family=\"ipv4\" source address=[IP주소] port port=[포트번호] protocol=\"tcp\" accept' <small> # 특정IP에 특정Port 허용 제거</small> </li>\r\n              <li> firewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=[IP주소/서브넷마스크] port port=[포트번호] protocol=\"tcp\" accept' <small> # 특정IP대역에 특정Port 허용 </small> </li>\r\n              <li> firewall-cmd --permanent --remove-rich-rule='rule family=\"ipv4\" source address=[IP주소/서브넷마스크] port port=[포트번호] protocol=\"tcp\" accept' <small> # 특정IP대역에 특정Port 허용 제거 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 방화벽 설정 파일? </h2>\r\n            <div className=\"block4\">\r\n              <li> vi /usr/lib/systemd/system/firewalld.service </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 방화벽 관련 에러 </h2>\r\n            <div className=\"block4\">\r\n              <li className=\"col_red\"> 에러 : FirewallD is not running </li>\r\n              <li className=\"col_blue\"> 해결 : systemctl start firewalld </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [2] SELinux </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> sestatus <small> selinux 모드 확인 </small>   </li>\r\n              <li> setenforce [0,1] <small> 0은 끄기, 1은 켜기, 재부팅하면 다시 활성화(그러므로 영구적으로 설정 필요) </small> </li>\r\n              <li> vi /etc/selinux/config\r\n                <li> SELINUX=[enforcing] <small> 영구켜기 </small> </li>\r\n                <li> SELINUX=[disabled] <small> 영구끄기, 이와 같이 변경해주기 </small> </li>\r\n              </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [3] IP, 네트워크 (고정 IP 설정하기) (완벽하지 않음) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 모든 설정을 할 필요는 없다. </h2>\r\n            <div className='block4'>\r\n              <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33 <small> 뒤에 숫자는 다를 수 있으므로 확인해보기 </small>\r\n                <div className=\"block3\">\r\n                  <li> BOOTPROTO=static <small> [static=IP고정, dhcp=동적, bootp=?, none] </small> </li>\r\n                  <li> PREFIX=24 <small> #24까지가 네트워크 대역이다라고 알려주는것, 서브넷 마스크? </small> </li>\r\n                  <li> IPADDR=[고정할IP주소] <small> (ex 192.168.10.20), 고정할 IP주소 </small>  </li>\r\n                  <li> DNS1=[DNS서버주소] <small> (ex 8.8.8.8, 168.126.63.1) </small> (ex 168.126.63.1) </li>\r\n                  <li> GATEWAY=[게이트웨이주소] <small> (ex 192.168.10.2), 게이트웨이 주소 </small> </li> <br />\r\n                  <li> ONBOOT=yes <small> 부팅시 설정 활성화 여부 </small> </li>\r\n                  <li> BROADCAST=@.@.@.255 <small> 브로드캐스드 주소 </small> </li>\r\n                  <li> DEVICE=ens33 <small> 대충 느낌으로는 알겠지만 잘 모르겠다. </small> </li>\r\n                  <li> HWADDR=@:@:@:@:@:@ <small> MAC주소 </small> </li>\r\n                  <li> NETMASK <small> 넷마스크 주소 </small> </li>\r\n                  <li> NETWORK <small> 네트워크 주소 </small> </li>\r\n                  <li> PEERDNS=yes <small> dhcp서버의 dns정보를 resolv.conf에 저장할지 말지 </small> </li>\r\n                  <li> DNS1 </li>\r\n                  <li> DNS2 </li>\r\n                  <li> USERCTL=no <small> 일반 유저가 설정 가능 여부 </small> </li>\r\n                </div>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 네트워크 명령어 </h2>\r\n            <div className='block4'>\r\n              <li> systemctl restart network <small> 네트워크 재시작 </small>  </li>\r\n              <li> ping [IP주소] <small> IP주소로 ping을 보내서 인터넷이 연결이 되었는지\r\n                확인하는 방법 , 168.126.63.1(KT) </small>  </li>\r\n              <li> ifconfig <small> 네트워크 인터페이스 정보 확인 </small> </li>\r\n              <li> ip route <small> 본인 컴퓨터의 ip만 출력 </small>  </li>\r\n              <li> ip addr </li>\r\n              <li> vi /etc/resolv.conf <small> nameserver 설정파일 </small> </li>\r\n              <li> netstat -lntp </li>\r\n              <li> netstat -antp </li>\r\n              <li> netstat -antp | grep LISTEN </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [4] Yum, Rpm </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 yum 명령어 </h2>\r\n            <div className='block4'>\r\n              <li> yum update 혹은 yum -y install </li>\r\n              <li> yum remove </li>\r\n              <li> yum erase 패키지명 </li>\r\n              <li> yum info 패키지명 <small> 설치여부확인, yum info로 입력시 엄청 많이 나온다. </small> </li>\r\n              <li> yum clean all <small> cash에 있는 저장소 비우기 </small> </li>\r\n              <li> yum check -update </li>\r\n              <li> yum update 패키지명 </li>\r\n              <li> yum upgrade 패키지명 </li>\r\n              <li> yum reinstall 패키지명 </li>\r\n              <li> yum install 패키지명 </li>\r\n              <li> yum localinstall 패키지명 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 yum 폴더 경로 </h2>\r\n            <div className='block4'>\r\n              <li> /etc/yum </li>\r\n              <li> /etc/yum.conf </li>\r\n              <li> /etc/yum.repos.d </li>\r\n              <li> /etc/resolv.conf </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 yum 레포지토리 경로 변경(필수 아님) </h2>\r\n            <div className='block4'>\r\n              <li> 외국 repo서버에 문제가 있거나 느린경우 국내 repo서버를 이용하는 방법  </li>\r\n              <li> vi /etc/yum.repos.d/CentOS-Base.repos\r\n                <div className=\"block4\">\r\n                  <li> mirrorlist.centos.org {\"=>\"} mirror.kakao.com </li>\r\n                </div>\r\n              </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 rpm 명령어 </h2>\r\n            <div className='block4'>\r\n              <li> rpm -Uvh 패키지명.rpm <small> rpm 패키지 설치 </small> </li>\r\n              <li> rpm -e 패키지명 <small> rpm 패키지 삭제 </small> </li>\r\n              <li> rpm -qa 패키지명 <small> 설치 여부 확인 </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [5] Unzip </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> yum install unzip </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [6] Java </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 명령어 </h2>\r\n            <div className='block4'>\r\n              <li> java -version <small> 자바 버전 확인, 없으면 안나옴 </small> </li>\r\n              <li> which javac <small> 자바 위치 </small> </li>\r\n              <li> yum list installed | grep java <small> 설치된 자바 버전 확인 </small> </li>\r\n              <li> 설치할 폴더로 이동(/usr/lib나 /usr/local/lib나 폴더를 만들어서 이용) </li>\r\n              <li> 자바에서 리눅스 jdk 설치파일 경로를 가져온다.(서버에서는 jre로 가능하지만 그냥 jdk) </li>\r\n              <li> 버전에 맞는 파일 경로 복사하기 (32,64 버전 확인은 getconf LONG_BIT 명령어를 사용하면된다.) </li>\r\n              <li> yum remove -y java-1.8.0-openjdk.x86_64 <small> 자바 설치 제거 </small> </li>\r\n              <li> yum remove -y java-1.8.0-openjdk-headless.x86_64 <small> 자바 설치 제거 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 yum으로 자바 1.8 설치 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 yum으로 자바 11 설치 </h2>\r\n            <div className='block4'>\r\n              <li> cd /usr/lib </li>\r\n              <li> yum install java-11-openjdk-devel.x86_64 </li>\r\n              <li> java --version  </li>\r\n              <li> which javac <small> 설치 경로 확인 </small> </li>\r\n              <li> readlink -f /bin/javac <small> 설치된 자바 파일 경로 </small> </li>\r\n              <li> vi /etc/profile <small> 환경변수 설정 </small>\r\n                <div className=\"block3\">\r\n                  <li> export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.14.0.9-1.el7_9.x86_64 <small> 마지막에 추가 그리고 파일명 정확히 확인하기.. </small> </li>\r\n                </div>\r\n              </li>\r\n              <li> source /etc/profile </li>\r\n              <li> echo $JAVA_HOME <small> 경로가 잘 설정되었는지 확인 </small> </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [7] Nginx </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> Apache와 달리 구성 시스템이 없어 빠른 속도 </li>\r\n              <li> Request 에 대해 Event-Driven 방식으로 동작 </li>\r\n              <li>정적 파일에 대해 Apache 요청의 2배량을 제공  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <div className='block4'>\r\n              <li> vi /etc/yum.repos.d/nginx.repo\r\n                <div className=\"block3\">\r\n                  <li> [nginx] </li>\r\n                  <li> name=nginx repo </li>\r\n                  <li> baseurl=http://nginx.org/packages/centos/7/$basearch/ </li>\r\n                  <li> gpgcheck=0 </li>\r\n                  <li> enabled=1 </li>\r\n                </div>\r\n              </li>\r\n              <li> yum install nginx </li>\r\n              <li> systemctl start nginx </li>\r\n              <li> systemctl enable nginx </li>\r\n              <li> systemctl status nginx </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 추가 명령어 </h2>\r\n            <div className='block4'>\r\n              <li> yum list installed ngnix <small> # nginx yum 설치 여부 </small> </li>\r\n              <li> yum remove [설치된패키지이름] <small> # nginx 패키지 삭제 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 경로 </h2>\r\n            <div className='block4'>\r\n              <li> /etc/nginx/conf.d/default.conf <small> 초기 설정 </small> </li>\r\n              <li> /usr/share/nginx/html <small> html 파일 경로가 있는곳 </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 React 배포 설정 </h2>\r\n            <div className='block4'>\r\n              <li> vi /etc/nginx/conf.d/default.conf 내부 전부 주석처리하고 아래 2줄 넣어주기 </li>\r\n              <div className=\"block3\">\r\n                <li> include /etc/nginx/conf.d/*.conf; </li>\r\n                <li> include /etc/nginx/sites-enabled/*.conf; </li>\r\n              </div>\r\n              <li> mkdir /etc/nginx/sites-available </li>\r\n              <li> mkdir /etc/nginx/sites-enabled </li>\r\n              <li> vi /etc/nginx/sites-available/앱이름.conf </li>\r\n              <div className=\"block3\">\r\n                <li> server {\"{\"}\r\n                  <li> listen 80; </li>\r\n                  <li> location / {\"{\"}\r\n                    <li> root /app/ssssksss-server-react/build; </li>\r\n                    <li> index index.html index.htm; </li>\r\n                    <li> try_files $uri $uri/ /index.html; </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n              <li> ln -s /etc/nginx/sites-available/앱이름.conf /etc/nginx/sites-enabled/앱이름.conf </li>\r\n              <li> nginx -t <small> ok 나 successful이 나오면된다. </small> </li>\r\n              <li> systemctl stop nginx </li>\r\n              <li> systemctl start nginx </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [8] Tomcat8 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 톰캣 8.5.7 설치 </h2>\r\n            <div className='block4'>\r\n              <li> <a href=\"http://archive.apache.org/dist/tomcat/tomcat-8/\" target=\"_blank\" rel=\"noopener noreferrer\"> 톰캣 설치 이동 </a> </li>\r\n              <li> 버전 클릭 - bin/ - (아파치톰캣-버전.tar.gz) 우측클릭해서 링크 주소 복사 </li>\r\n              <li> cd /home으로 이동 , mkdir download 명령어로 폴더를 생성 </li>\r\n              <li> cd /home/download </li>\r\n              <li> wget http://archive.apache.org/dist/tomcat/tomcat-8/v8.5.70/bin/apache-tomcat-8.5.70.tar.gz\r\n                <div className=\"block3\">\r\n                  <li> yum install -y wget <small> 웹서버에서 콘텐츠를 가져오는 프로그램(없다면은 설치) </small> </li>\r\n                </div>\r\n              </li>\r\n              <li> tar zxvf apache-tomcat-8.5.70.tar.gz </li>\r\n              <li> mv apache-tomcat-8.5.70 /usr/local/tomcat8 </li>\r\n              <li> vi /usr/local/tomcat8/conf/server.xml <small> 70번째 줄, 포트, 인코딩 설정 가능 </small>\r\n                <div className=\"block3\">\r\n                  <li> URIEncoding=\"UTF-8\" <small> 71번째 줄 정도에 추가해주기 </small> </li>\r\n                </div>\r\n              </li>\r\n              <li> vi /etc/profile\r\n                <div className=\"block3\">\r\n                  <li> export JAVA_HOME=~~~ <small> # 이미 위에서 설정을 해놓았다. </small> </li>\r\n                  <li> export CATALINA_HOME=/usr/local/tomcat8 <small> # 톰캣 폴더 경로 </small> </li>\r\n                  <li> export CLASSPATH=$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar:$CATALINA_HOME/lib-jsp-api.jar:$CATALINA_HOME/lib/servlet-api.jar </li>\r\n                  <li> export PATH=$PATH:$JAVA_HOME/bin:/bin:/sbin </li>\r\n                </div>\r\n              </li>\r\n              <li> source /etc/profile </li>\r\n              <li> vi /usr/local/tomcat8/conf/server.xml </li>\r\n              <li> $CATALINA_HOME/bin/startup.sh <small> JAVA_HOME 관련 에러가 발생하면 jdk 설치와 JAVA_HOME 경로가 설정이 되지 않아서 그럴 것이다. </small> </li>\r\n              <li> ps -ef | grep tomcat <small> 톰캣 프로세스 확인 </small> </li>\r\n              <li> netstat -tln <small> 톰캣 포트 8080 확인 </small> </li>\r\n              <li> vi /etc/systemd/system/tomcat8.service\r\n                <div className=\"block3\">\r\n                  <li> [Unit] </li>\r\n                  <li> Description=Apache Tomcat Web Application Container </li>\r\n                  <li> After=syslog.target network.target </li>\r\n                  <li>  </li>\r\n                  <li> [Service] </li>\r\n                  <li> Type=forking </li>\r\n                  <li> Environment=\"JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.14.0.9-1.el7_9.x86_64\" </li>\r\n                  <li> Environment=\"CATALINA_HOME=/usr/local/tomcat8\" </li>\r\n                  <li> Environment=\"CATALINA_BASE=/usr/local/tomcat8\" </li>\r\n                  <li> Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\" </li>\r\n                  <li> Environment=\"JAVA_OPTS=-Djava.security.egd=file:///dev/urandom\" </li>\r\n                  <li> ExecStart=/usr/local/tomcat8/bin/startup.sh </li>\r\n                  <li> ExecStop=/usr/local/tomcat8/bin/shutdown.sh </li>\r\n                  <li> User=root </li>\r\n                  <li> Group=root </li>\r\n                  <li> UMask=0007 </li>\r\n                  <li> RestartSec=10 </li>\r\n                  <li> Restart=always </li>\r\n                  <li> [Install] </li>\r\n                  <li> WantedBy=multi-user.target </li>\r\n                </div>\r\n              </li>\r\n              <li> vi /usr/local/tomcat8/conf/tomcat-users.xml </li>\r\n              <div className=\"block3\">\r\n                <li> {\"<tomcat-user>\"}\r\n                  <li> {' <role rolename=\"admin-gui\"/> '} </li>\r\n                  <li> {' <role rolename=\"manager-gui\"/> '} </li>\r\n                  <li> {' <role rolename=\"manager-script\"/> '} </li>\r\n                  <li> {' <role rolename=\"manager-status\"/> '} </li>\r\n                  <li> {' <role rolename=\"manager-jmx\"/> '} </li>\r\n                  <li> {' <user username=\"tomcat\" password=\"tomcat\" roles=\"adming-gui,manager-gui,manager-script,manager-status,manager-jmx\"/> '}\r\n                    <small> jenkins나 다른 사용자가 접근 가능하게 추가 </small> </li>\r\n                </li>\r\n                <li> {\"</tomcat-user>\"} </li>\r\n              </div>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 명령어 </h2>\r\n            <div className=\"block4\">\r\n              <li> systemctl enable tomcat8.service </li>\r\n              <li> systemctl start tomcat8.service </li>\r\n              <li> systemctl stop tomcat8.service </li>\r\n              <li> systemctl disable tomcat8.service </li>\r\n              <li> systemctl status tomcat8.service </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 경로 </h2>\r\n            <div className=\"block4\">\r\n              <li> /usr/local/tomcat8/webapps <small> 배포파일 경로 </small> </li>\r\n              <li> /usr/local/tomcat8/conf/server.xml <small> 설정파일 </small> </li>\r\n              <li> /etc/systemd/system <small> 서비스 되고 있는 파일 경로 </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 배포1 - root.war 명으로 사용할 때 </h2>\r\n            <div className=\"block4\">\r\n              <li> cd /usr/local/tomcat8/webapps <small> 배포파일 경로 </small> </li>\r\n              <li> ROOT.war 파일을 넣어준다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 배포2 - 커스텀.war 명으로 사용할 때 </h2>\r\n            <div className=\"block4\">\r\n              <li> cd /usr/local/tomcat8/webapps <small> 배포파일 경로 </small> </li>\r\n              <li> 커스텀명.war 파일을 넣어준다. </li>\r\n              <li> vi /usr/local/tomcat8/conf/server.xml </li>\r\n              <li> 아래쪽에 {\"<Host> </Host> 태그 내부에 아래와 같이 선언 \"} </li>\r\n              <div className=\"block3\">\r\n                <li> {' <Context path=\"/\" docBase=\"커스텀명\" reloadable=\"false\" > </Context> '} </li>\r\n              </div>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 톰캣 서비스 종료 </h2>\r\n            <div className=\"block4\">\r\n              <li> cd /usr/lib/systemd/system </li>\r\n              <li> systemctl list-units --type service </li>\r\n              <li> service tomcat stop </li>\r\n              <li> systemctl stop tomcat.service </li>\r\n              <li> systemctl list-units --type service | grep tomcat </li>\r\n              <li> systemctl disable tomcat.service </li>\r\n              <li> systemctl reset-failed </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [9] Mysql </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              {/*<li> yum install wget <small> # 웹서버에서 컨텐츠를 가져올 수 있는 프로그램 </small> </li>*/}\r\n              <li> <a href=\"https://dev.mysql.com/downloads/repo/yum/\" target=\"_blank\" rel=\"noopener noreferrer\"> mysql yum 다운로드 저장소 사이트 </a> </li>\r\n              <li> sudo yum localinstall https://dev.mysql.com/get/mysql80-community-release-el7-5.noarch.rpm <small> 위에 사이트 주소에서 최신 버전으로 다운받기 </small> </li>\r\n              <li> sudo yum install mysql-community-server <small>  용량 500MB </small> </li>\r\n              <li> sudo systemctl enable mysqld </li>\r\n              <li> sudo systemctl start mysqld <small>  5초이상 걸림 </small> </li>\r\n              <li> sudo systemctl status mysqld <small>  상태확인 </small> </li>\r\n              <li> sudo grep 'temporary password' /var/log/mysqld.log <small>  끝에 이러한 비번(dn0eRWYvj,eZ) 복사해놓기 바로사용 </small> </li>\r\n              <li> sudo mysql_secure_installation <small>  mysql 보안 설정 </small>\r\n                <li> 1. Enter password for user root: <small>  이러한 비번(dn0eRWYvj,eZ) 넣기 </small> </li>\r\n                <li> 2. New password: 새로운비번넣기(8자리이상,대문자,소문자,특수문자 섞어서 넣어주기) </li>\r\n                <li> 3. Re-enter new password: 새로운비번넣기(8자리이상,대문자,소문자,특수문자 섞어서 넣어주기) </li>\r\n                <li> 4. Change the password for root ? : y </li>\r\n                <li> 5. New password: 새로운비번넣기(8자리이상,대문자,소문자,특수문자 섞어서 넣어주기) </li>\r\n                <li> 6. Re-enter new password: 새로운비번넣기(8자리이상,대문자,소문자,특수문자 섞어서 넣어주기) </li>\r\n                <li> 7. Do you wish to continue with the password provided? : y</li>\r\n                <li> 8. Remove anonymous users? : y </li>\r\n                <li> 9. Disallow root login remotely? n </li>\r\n                <li> 10. Remove test database and access to it?  : y </li>\r\n                <li> 11. Reload privilege tables now? : y  </li>\r\n              </li>\r\n              <li> vi /etc/my.cnf <small>  mysql 설정 </small>\r\n                <li> port=[포트] <small>  원하는 포트로 변경, 디폴트가 3306 </small> </li>\r\n              </li>\r\n              <li> mysql -u root -p <small>  mysql 접속 </small> </li>\r\n              <li> 외부에서 접속하려면 IP권한을 열어주어야 하는 등의 설정이 필요하다. </li>\r\n            </div>\r\n            <h2 className='h2'> 📌 완전 삭제 </h2>\r\n            <div className=\"block4\">\r\n              <li> yum list installed | grep mysql\r\n                <div className=\"block3\">\r\n                  <li> mysql-community-client.x86_64          8.0.28-1.el7 @mysql80-community </li>\r\n                  <li> mysql-community-client-plugins.x86_64  8.0.28-1.el7 @mysql80-community </li>\r\n                  <li> mysql-community-common.x86_64          8.0.28-1.el7 @mysql80-community </li>\r\n                  <li> mysql-community-icu-data-files.x86_64  8.0.28-1.el7 @mysql80-community </li>\r\n                  <li> mysql-community-libs.x86_64            8.0.28-1.el7 @mysql80-community </li>\r\n                  <li> mysql-community-libs-compat.x86_64     8.0.28-1.el7 @mysql80-community </li>\r\n                  <li> mysql-community-server.x86_64          8.0.28-1.el7 @mysql80-community </li>\r\n                </div>\r\n              </li>\r\n              <li> yum remove -y mysql-community-* </li>\r\n              <li> rm -rf /var/lib/mysql </li>\r\n              <li> rpm -qa | grep mysql </li>\r\n              <li> rpm -e mysql80-community-release <small> rpm -qa | grep mysql 에서 뭐가 있으면 삭제 </small> </li>\r\n              <li> find / -name 'mysql*rpm' </li>\r\n              <li> rm -rf 위에서나온것들붙여넣기 <small> find / -name 'mysql*rpm' 에서 나오는 내용 복사 붙여넣기 </small> </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [10] Gradle 설치 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <div className='block4'>\r\n              <li> <a href=\"https://services.gradle.org/distributions\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                gradle 다운 페이지 </a> </li>\r\n              <li> wget https://services.gradle.org/distributions/gradle-7.0.2-bin.zip </li>\r\n              <li> mkdir /opt/gradle </li>\r\n              <li> unzip -d /opt/gradle gradle-7.0.2-bin.zip </li>\r\n              <li> vi /etc/profile.d/gradle.sh </li>\r\n              <div className=\"block3\">\r\n                <li> {\" export GRADLE_HOME=/opt/gradle/gradle-7.0.2 \"} </li>\r\n                <li> {\" export PATH=${GRADLE_HOME}/bin:${PATH} \"} </li>\r\n              </div>\r\n              <li> chmod +x /etc/profile.d/gradle.sh </li>\r\n              <li> source /etc/profile.d/gradle.sh </li>\r\n              <li> gradle -v </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [11] Jenkins 설치(보류) </summary>\r\n          <div className=\"block2\">\r\n\r\n            <div className=\"h2\"> 설명 </div>\r\n            <div className=\"block4\">\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <div className=\"h2\"> 설치 </div>\r\n            <div className=\"block4\">\r\n              <li> <a href=\"https://jenkins.io/download/\" target=\"_blank\" rel=\"noopener noreferrer\"> 젠킨스 다운로드 홈페이지 </a> </li>\r\n              <li> wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo </li>\r\n              <li> rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key </li>\r\n              <li> yum install jenkins </li>\r\n              <li> vi /etc/sysconfig/jenkins <small> 기본포트 8080이라서 변경필요 </small> </li>\r\n              <div className=\"block3\">\r\n                <li> JENKINS_PORT=\"9090\" 58번째줄에 변경 </li>\r\n              </div>\r\n              <li> service jenkins start <small> 젠킨스 시작 </small> </li>\r\n              <li> service enable jenkins <small> 젠킨스 재시작시 자동 시작 </small> </li>\r\n              <li> service jenkins stop <small> 젠킨스 중단 </small> </li>\r\n              <li> service jenkins restart <small> 젠킨스 재시작 </small> </li>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [12] npm 설치 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> 빌드용도로 npm을 설치하였다. </li>\r\n              <li> yum install npm </li>\r\n              <li> npm install <small> React 같은 파일들을 npm run build할때는 이렇게 프로젝트 폴더에 설치 </small> </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [13] nodejs 설치 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <div className='block4'>\r\n              <li> npm cache clean -f <small> 클라우드에서 보호되어 있는 것 같다. </small> </li>\r\n              <li> yum remove -y nodejs npm </li>\r\n              <li> <a href=\"https://github.com/nodesource/distributions/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\"> nodejs 버전 보기 </a> </li>\r\n              <li> 16버전 </li>\r\n              <li> curl -sL https://rpm.nodesource.com/setup_16.x | sudo -E bash - </li>\r\n              {/*<li> apt-get install -y nodejs </li>*/}\r\n              <li> yum install -y nodejs </li>\r\n              <li> node -v </li>\r\n              <li> yum install npm </li>\r\n              <li> npm -v </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [] 리눅스 관련 설정 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> /etc/ssh/sshd_config </li>\r\n              <div className=\"block3\">\r\n                <li> PermitRootLogin <small> root 원격 접속 제한(no : 막아버림) </small> </li>\r\n                <li> systemctl restart sshd.service </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> ========================================= </summary>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> VMware에 CentOS7 설치하는 방법 </summary>\r\n          <div className='block2'>\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> <a href=\"https://www.centos.org/download/\" target=\"_blank\" rel=\"noreferrer\"> 다운로드 페이지 </a> </li>\r\n              <li> CentOS Linux 7 ISO x86_64 클릭 </li>\r\n              <li> <a href=\"http://ftp.kaist.ac.kr/CentOS/7.9.2009/isos/x86_64/\" target=\"_blank\" rel=\"noreferrer\"> http://ftp.kaist.ac.kr/CentOS/7.9.2009/isos/x86_64/ 파일 다운로드 </a>  </li>\r\n              <li> CentOS-7-x86_64-DVD-2009.iso 다운로드 </li>\r\n              <li> VMware Workstation 실행 </li>\r\n              <li> Create a New Virtual Machine </li> <br />\r\n              <li> Typical 클릭 </li>\r\n              <li> I will install the operation system later 클릭 </li>\r\n              <li> Linux , CentOS 7 64-bit 클릭 </li>\r\n              <li> Virtual machine name: CentOS7_Server 이름으로 바꾸기 (안바꾸어도 상관은 없음) </li>\r\n              <li> 20GB , Split virtual disk into multiple files 클릭 </li>\r\n              <li> Customize Hardware... 클릭 </li>\r\n              <li> Memory : 가상 램은 2GB(2048MB)로 변경 </li>\r\n              <li> New CD/DVD (IDE) : Use ISO image file:에 아까받은 CentOS7 넣기 </li>\r\n              <li> Network Adapter : Custom 부분에 VMnet8(NAT)로 선택 </li>\r\n              <li> Sound Card, Printer는 remove (아래쪽에 버튼이 있음) </li>\r\n              <li> close하고 finish </li> <br />\r\n              <li> Test this media &amp; install CentOS 7 클릭  </li>\r\n              <li> 스크롤로 내려서 한국어 누르고 계속 진행 </li>\r\n              <li> 키보드 - '+'키 클릭 -  english검색하고 영어(미국) 추가</li>\r\n              <li> 소프트웨어 설치 - 개발 및 창조를 위한 워크스테이션 - 완료 <small> GUI 등을 추가하기 위해서 선택 </small> </li>\r\n              <li> 설치대상 - 상단에 VMware 아이콘 체크박스를 클릭하고 다시한번더 클릭해서 인식되게 만듬 </li>\r\n              <li> KDUMP 활성화는 비활성화 #메모리를 좀더 절약하기 위해서 </li>\r\n              <li> 네트워크 및 호스트명 끔 → 켬  - 완료 </li>\r\n              <li> 설치 시작 </li>\r\n              <li> root 암호 : P@ssw0rd! </li>\r\n              <li> 사용자 생성 : 영어로된아이디나이름 </li>\r\n              <li> 라이센스 동의 - 완료     </li>\r\n              <li> 한국 - 한국어(Hangul) - 다음  - 위치정보 끔 - 다음 - 건너뛰기 - 시작 </li>\r\n              <li> 라이센스 동의 해주기 </li> <br />\r\n              <li> 프로그램 - 시스템 도구 - 설정 - 알림 - 알림팝업,잠근화면알림 끄기 </li>\r\n              <li> 프로그램 - 시스템 도구 - 설정 - 전원 - 빈화면 안함으로 바꿈 </li>\r\n              <li> 프로그램 - 시스템 도구 - 개인 정보 - 화면 잠금 끄기 </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Apache Tomcat 설치하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설정 파일 </h2>\r\n            <li> app이라는 폴더는 스스로 만든 폴더이므로 참고  </li>\r\n            <li> /app/server/tomcat/conf/server.xml </li>\r\n            <li> /app/server/tomcat/webapps <small> # html코드 등이 들어있는 공간 </small> </li>\r\n            <li> /app/server/tomcat/bin <small> # tomcat을 실행하고 중단할 수 있는 쉘 스크립트가 있는 공간 </small> </li>\r\n\r\n            <h2 className='h2'> 📌 아파치 톰캣 v8.5.70 설치 과정 </h2>\r\n            <div className=\"block4\">\r\n              <li> <a href=\"https://tomcat.apache.org/download-80.cgi\" target=\"_blank\" rel=\"noopener noreferrer\"> 아파치 톰캣 다운 주소 </a> </li>\r\n              <li> 1. Core tar.gz 파일을 우측클릭하여 링크 주소를 복사  </li>\r\n              <li> 2. mkdir -p /app/install <small> # tar.gz파일을 저장할 폴더 만들기 </small> </li>\r\n              <li> 3. cd /app/install </li>\r\n              <li> 4. mkdir -p /app/server/tomcat  </li>\r\n              <li> 5. yum install -y wget <small> # 웹서버에서 콘텐츠를 가져오는 프로그램(없다면은 설치) </small> </li>\r\n              <li> 6. wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.73/bin/apache-tomcat-8.5.73.tar.gz -O /app/install/tomcat8.5.tar.gz <small> # 버전이 조금씩 변경되어서 복붙하지말고 홈페이지가서 주소복사 할것 !!! </small>  </li>\r\n              <li> 7. tar xvfz /app/install/tomcat8.5.tar.gz -C /app/server/tomcat --strip-components=1 <small> # --strip-components=1 상위 n번쨰 이후 폴더부터 압축해제 </small> </li>\r\n              <li> 8. cd /app/server/tomcat/bin </li>\r\n              <li> 9. ./startup.sh <small> # JAVA_HOME 관련 에러가 발생하면 jdk 설치와 JAVA_HOME 경로가 설정이 되지 않아서 그럴 것이다. </small>\r\n                <div className=\"block4\">\r\n                  <li> 1. mkdir -p /app/install/dkit/jdk </li>\r\n                  <li> 2. cd /app/install/dkit/jdk </li>\r\n                  <li> <a href=\"https://www.oracle.com/kr/java/technologies/javase/javase8-archive-downloads.html\" target=\"_blank\" rel=\"noopener noreferrer\"> 3. 자바 다운로드 주소(다운 받으려면 로그인 필요) </a> </li>\r\n                  <li> 4. /app/install/dkit/jdk/ 에 다운파일(jdk-8u202-linux-x64.tar.gz) 설치해주기 <small> # 하다가 하는 방법을 몰라서 mobaxterm을 이용해서 넣어주었다. </small>\r\n                    <div className=\"block4\">\r\n                      <li> 1. 좌측 상단 Session 클릭 </li>\r\n                      <li> 2. SFTP 클릭 </li>\r\n                      <li> 3. Remote host에 (클라우드)공인IP주소 입력, Username에 유저명 입력 <small> # 유저명은 확실하지는 않지만 관리하는 사람의 이름을 입력하는 것 같다. </small>  </li>\r\n                      <li> 4. 원하는 리눅스 폴더에 윈도우에 있는 파일 옮기기 </li>\r\n                      <li> MobaXterm으로 SFTP로 옮기는 데 Permission Denied 에러가 발생할 때 </li>\r\n                      <li> 5. chown -R [계정]:[계정] [파일을 옮기려는 폴더 경로] <small> # 하위 디렉토리 전부에 소유자를 변경, // TODO: 보안문제에 대해서는 좀더 알아보야할 방법 </small> </li>\r\n                    </div>\r\n                  </li>\r\n                  <li> 5. mkdir -p /app/dkit/jdk/1.8.0 </li>\r\n                  <li> 6. tar xvfz /app/install/dkit/jdk/jdk-8u202-linux-x64.tar.gz -C /app/dkit/jdk/1.8.0 --strip-components=1  </li>\r\n                  <li> 7. ln -Tfs /app/dkit/jdk/1.8.0 /app/dkit/jdk/release <small> # t: 링크파일 생성할 디렉토리 지정, f: 대상 파일이 존재하면 지우고 생성, s: 심볼릭 링크 생성 </small> </li>\r\n                  <li> 8. ln -Tfs /app/dkit/jdk/release/bin/java /usr/bin/java </li>\r\n                  <li> 9. vi /etc/systemd/system/tomcat.service\r\n                    <div className=\"block4\">\r\n                      <li> [Unit] </li>\r\n                      <li> Description=Apache Tomcat Web Application Container </li>\r\n                      <li> After=syslog.target network.target </li>\r\n                      <li> [Service] </li>\r\n                      <li> Type=forking </li>\r\n                      <li> Enviroment=JAVA_HOME=/app/dkit/jdk/release <small> 자바 홈 환경변수 설정 </small> </li>\r\n                      <li> Enviroment=CATALINA_PID=/app/server/tomcat/temp/tomcat.pid </li>\r\n                      <li> Enviroment=CATALINA_HOME=/app/server/tomcat </li>\r\n                      <li> Enviroment=CATALINA_BASE=/app/server/tomcat </li>\r\n                      <li> Enviroment='CATALINA_OPTS=Xms512M -Xmx1024M -server -XX:+UseParallelGC' </li>\r\n                      <li> Enviroment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom' </li>\r\n                      <li> ExecStart=/app/server/tomcat/bin/startup.sh </li>\r\n                      <li> ExecStop=/bin/kill -15 $MAINPID </li>\r\n                      <li> User=root </li>\r\n                      <li> Group=root </li>\r\n                      <li> [Install] </li>\r\n                      <li> WantedBy=multi-user.target </li>\r\n                    </div>\r\n                  </li>\r\n                  <li> 10. java -version   </li>\r\n                  <li> 11. systemctl restart tomcat </li>\r\n                  <li> 12. netstat -tnlp <small> # 8080포트를 보면 자바를 볼 수 있다. </small> </li>\r\n                </div>\r\n              </li>\r\n              <li> 10. vi /app/server/tomcat/conf/tomcat-users.xml\r\n                <div className=\"block4\">\r\n                  <li> {' <role rolename=\"admin-gui\"/> '} </li>\r\n                  <li> {' <role rolename=\"manager-gui\"/> '} </li>\r\n                  <li> {' <role rolename=\"manager-script\"/> '} </li>\r\n                  <li> {' <role rolename=\"manager-status\"/> '} </li>\r\n                  <li> {' <role rolename=\"manager-jmx\"/> '} </li>\r\n                  <li> {'<user username=\"tomcat\" password=\"tomcat\" roles=\"adming-gui,manager-gui,manager-script,manager-status,manager-jmx\"/> '}\r\n                    <small> # 다른 사용자가 접근 가능하게 , 56번쨰 줄에 추가 </small> </li>\r\n                </div>\r\n              </li>\r\n              <li> 11. vi /app/server/tomcat/conf/Catalina/localhost/manager.xml\r\n                <div className=\"block4\">\r\n                  <li> {' <Context privileged=\"true\" antiResourceLocking=\"false\" docBase=\"${catalina.home}/webapps/manager\"> '}\r\n                    <li> {' <Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"^.*$\" /> '} </li>\r\n                  </li>\r\n                  <li> {' </Context> '} </li>\r\n                </div>\r\n              </li>\r\n              <li> 12. systemctl restart tomcat </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <li> 10. systemctl stop firewalld | setenforce  </li>\r\n            <li> 만약에 안된다면 httpd -v <small> httpd가 설치되었는지 확인 </small> </li>\r\n\r\n            <h2 className='h2'> 📌 톰캣 삭제 </h2>\r\n            <div className=\"block4\">\r\n              <li> rpm -qa httpd</li>\r\n              <li> rpm -qa | grep http </li>\r\n              <li> yum remove -y httpd </li>\r\n              <li> rpm -qa httpd </li>\r\n              <li>  </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Tomcat 서버(정리) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <div className='block4'>\r\n              <li> vim startup.bat </li>\r\n              <li> which java </li>\r\n              <li> 이거는 별개인데 md5sum 파일명 # 해쉬값이 나오는데 동일하면 같은 파일 </li>\r\n\r\n              <li> 브라우저에 192.168.10.80:8080 에서 manager app을 클릭 #에러 발생 </li>\r\n              <li> yum -y install gcc gcc-c++ httpd-devel libtool make # 아파치 확장 파일 httpd-devel </li>\r\n              <li> 구글에서 톰캣에 들어가 톰캣 커넥터 파일 리눅스.tar.gz 링크복사\r\n                <li> <a href=\"http://tomcat.apache.org/download-connectors.cgi\" target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"> 아파치 커넥터 사이트 </a> </li>\r\n                <li> <a href=\"https://dlcdn.apache.org/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.48-src.tar.gz\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\"> 아파치 커넥터 JK 1.2.48 </a> </li>\r\n              </li>\r\n              <li> mkdir -p /app/temp/mod_jk </li>\r\n              <li> wget https://dlcdn.apache.org/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.48-src.tar.gz -O /app/install/tomcat-connectors-1.2.48-src.tar.gz </li>\r\n              <li> tar xvfz /app/install/tomcat-connectors-1.2.48-src.tar.gz -C /app/temp/mod_jk/\r\n                --strip-components=1 </li>\r\n              <li> cd /app/temp/mod_jk/native </li>\r\n              <li> ./configure --with-apxs=/usr/bin/apxs #configure는 설치파일 </li>\r\n              <li> make </li>\r\n              <li> make install </li>\r\n              <li> chcon -u system_u -r object_r -t httpd_modules_t /etc/httpd/modules/mod_jk.so # se리눅스에서 권한을 주는 방법\r\n                몰라도 된다.. </li>\r\n              <li> cd /etc/httpd/conf </li>\r\n              <li> mkdir /etc/httpd/conf/extra </li>\r\n              <li> touch /etc/httpd/conf/extra/httpd-ssl.conf </li>\r\n              <li> cat httpd.conf | grep conf </li>\r\n              <li> vi /etc/httpd/conf/workers.properties\r\n                <div className=\"block3\">\r\n                  <li> worker.list=worker1 #아파치와-톰캣이 여러개 일 수 있으므로 이름지정 </li>\r\n                  <li> worker.worker1.port=8009 #아파치-톰캣 포트 연동 </li>\r\n                  <li> worker.worker1.host=localhost #아파치 서버의 위치  </li>\r\n                  <li> worker.worker1.type=ajp13 #아파치-톰캣 프로토콜? 연동 </li>\r\n                  <li> worker.worker1.lbfactor=1 #  </li>\r\n                </div>\r\n              </li>\r\n              <li> vi /etc/httpd/conf/uriworkermap.properties\r\n                <div className=\"block3\">\r\n                  <li> /*=worker1 #서브 디렉토리를 모두 worker1이라는 곳에서 참조해라 </li>\r\n                </div>\r\n              </li>\r\n              <li> vi /etc/httpd/conf/httpd.conf\r\n                <div className=\"block3\">\r\n                  <li> \"/var/www/html\"을 \"/app/server/tomcat/webapps\" 이걸로 변경 #119번쨰줄 </li>\r\n                </div>\r\n              </li>\r\n              <li> ls -la /app/server/tomcat/webapps #(루트경로처럼 사용) </li>\r\n              <li> 따라 하지 않아도됨 , sed -i \"s/^\\s*#.//g\" /etc/httpd/conf/httpd.conf # 파일안에 주석을 모두 제거 </li>\r\n              <li> 따라 하지 않아도됨 , sed -i \"/^$/d\" /etc/httpd/conf/httpd.conf # 파일안에 공백제거  </li>\r\n              <li> vim /etc/httpd/conf/httpd.conf\r\n                <div className=\"block3\">\r\n                  <li> {' <Directory /> '} 이부분의 denied 를 granted로 변경 </li>\r\n                  <li> {' <Directory /var/www> <Directory /var/html> '} 이 두부분은 필요가 없음 </li>\r\n                  <li> LoadModule jk_module modules/mod_jk.so #가장 아래쪽에 추가 </li>\r\n                  <li> {'<IfModule jk_module>'}\r\n                    <li> JkWorkersFile conf/workers.properties </li>\r\n                    <li> JkLogFile logs/mod_jk.log </li>\r\n                    <li> JkLogLevel info </li>\r\n                    <li> JkLogStampFormat \"[%y %m %d %H:%M:%S]\" </li>\r\n                    <li> JkShmFile logs/mod_jk.shm </li>\r\n                    <li> JkMountFile conf/uriworkermap.properties </li>\r\n                    <li> JkUnMount /mail/* worker1 </li>\r\n                    <li> JkUnMount /*.php worker1 </li>\r\n                  </li>\r\n                  <li> {'<IfModule>'} </li>\r\n                </div>\r\n              </li>\r\n              <li> systemctl restart httpd  </li>\r\n              <li> vi /app/server/tomcat/conf/server.xml\r\n                <li> 117번 AJP부분을 보면 주석 처리가 되어있음 </li>\r\n                <li> 위아래에 주석을 해제  </li>\r\n                <li> address=\"::1\" 을 \"0.0.0.0\" 으로 수정 </li>\r\n                <li> secretRequired=\"false\" # 추가 </li>\r\n              </li>\r\n              <li> systemctl restart tomcat  </li>\r\n              <li> netstat -tnlp에서 8009번포트가 열렸는지 확인 </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> CentOS7에 아파치 서버 설치하는 방법(정리 필요) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설치 </h2>\r\n            <li> yum install httpd <small> # http demon, http를 처리해주는 서비스 </small> </li>\r\n\r\n            <h2 className='h2'> 📌 시작,중단,실행확인 </h2>\r\n            <li> systemctl enable httpd <small> # httpd 실행 허용 </small> </li>\r\n            <li> systemctl start httpd <small> # httpd 실행 시작 </small> </li>\r\n            <li> systemctl restart httpd <small> # httpd 실행 재시작 </small> </li>\r\n            <li> systemctl stop httpd <small> # httpd 실행 중단 </small> </li>\r\n            <li> systemctl status httpd <small> # httpd 실행 상태 확인 </small> </li>\r\n            <li> httpd -v <small> # httpd 버전 확인 </small> </li>\r\n            <li> service httpd start <small> # 아파치 실행 </small> </li>\r\n            <li> ps -ef | grep httpd <small> # httpd가 정상 실행 되는지 확인 </small> </li>\r\n\r\n            <h2 className='h2'> 📌 방화벽 </h2>\r\n            <li> systemctl enable firewalld <small> # 방화벽 실행 허용 </small> </li>\r\n            <li> firewall-cmd --reload <small> # 방화벽 재시작 </small> </li>\r\n            <li> firewall-cmd --permanent --add-service=http </li>\r\n            <li> firewall-cmd --permanent --add-service=https </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> CentOS7 관련 명령어 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> su - : 루트 계정으로 접속하는 방법 </li>\r\n            <li> su 계정명 : 원하는 계정으로 접속하는 방법 </li>\r\n            <li> netstat -tnlp , 텔넷은 23번포트트 사용한다. </li>\r\n            <li> cd /etc/xinetd.d/ 그리고 vi telnet </li> <br />\r\n            <li> {'service telnet {'}\r\n              <li> {' disable = no '} <small> #서비스를 사용하지 않을것인지 no면 사용한다는 의미 </small> </li>\r\n              <li> {' flags = REUSE '}   <small> #재사용한다는 의미 </small></li>\r\n              <li> {' socket_type = stream '}   <small> #소켓형태 스트림 </small></li>\r\n              <li> {' wait = no '}   <small> #바로 서버를 사용? </small></li>\r\n              <li> {' user = root '}   <small> #접속할수 있는 유저 </small></li>\r\n              <li> {' server = /usr/sbin/in.telnetd '}   <small> #텔넷서버에 대한 명령어 </small> </li>\r\n              <li> {' log_on_failure += USERID '}   <small> #접속실패했을때 유저의 아이디를 로그로 남겨라 </small></li>\r\n            </li>\r\n            <li> {'} '} </li> <br />\r\n            <li> systemctl restart xinetd </li>\r\n            <li> centos7 client에서 centos7 server로 접속하기\r\n              <li> ping 168.126.63.1 </li>\r\n              <li> ping 192.168.10.2 </li>\r\n              <li> ip route </li>\r\n              <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33 </li>\r\n              <li> firewall-cmd --permanent --add-port=23/tcp #방화벽을 열음 </li>\r\n              <li> firewall-cmd --reload </li>\r\n              <li> tty : 현재 접속중인 터미널 번호 </li>\r\n              <li> echo$$ </li>\r\n              <li> vi /etc/securetty :  </li>\r\n              <li>  </li>\r\n              <li> yum install xinetd telnet #client에서 설치하는 거 </li>\r\n              <li> telnet l root 192.168.10.1 </li>\r\n              <li> ip route </li>\r\n            </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> telnet 서버 설치하는 방법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 텔넷서버: 원격 접속을 지원하는 프로그램, 보안에 취약해서 대분분 SSH를 사용 </li>\r\n            <li> 0. su - # 루트 계정으로 접속하는 방법 </li>\r\n            <li> 1. yum -y install telnet-server # telnet서버 설치 1번방법 </li>\r\n            <li> 1-1. yum install xinetd telnet-server # telnet서버 설치 2번방법 </li>\r\n            <li> 2. rpm -qa telnet-server , rpm -qa | grep telnet # 설치가 잘 되었는지 확인 </li>\r\n            <li> 3. systemctl start telnet.socket # 서버를 가동 </li>\r\n            <li> 4. systemctl status telnet.socket # 서버가 잘 가동 되었는지 확인 </li>\r\n            <li> 5. firewall-config - 메뉴 - 설정은 영구적으로 변경, 영역 - public - 서비스 -telnet 체크박스 체크  # 방화벽 해제 </li>\r\n            <li> 6. 이어서 옵션 - firewalld 다시 불러오기 - 창닫기 </li>\r\n            <li> 6-1. firewall-cmd --permanent --add-port=23/tcp #방확벽에서 23포트 오픈  </li>\r\n            <li> 6-2. firewall-cmd --permanent --add-service=telnet   </li>\r\n            <li> 7. firewall-cmd --reload  #방화벽 설정 적용 </li>\r\n            <li> 8. systemctl enable telnet.socket #재부팅 후에도 텔넷 서버가 돌아가도록 만듬 </li>\r\n            <li>  </li> <br />\r\n            <li> 0. adduser 사용자명, passwd 사용자명 </li>\r\n            <li> 1. yum -y install telnet </li>\r\n            <li> 2. 제어판 - Window 기능 켜기/끄기 - 텔넷 클라이언트 체크박스 체크 </li>\r\n            <li> 3. ping telnet서버IP주소  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> dhcp 서버 설치하는 방법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 dhcp 서버 설치 </h2>\r\n            <li> yum install dhcp  </li>\r\n            <li> r pm -qa | grep dhcp , # dhcp서버 설치되었는지 확인  </li>\r\n            <li> systemctl restart dhcpd </li>\r\n            <li> lsof -i updL67 </li>\r\n            <li> dnsmasq라는 간소화된 dhcp/dns서버가 설치 되어있다. 그러므로 제거가 필요 </li>\r\n            <li> ps -ef | grep dnsmasq | grep -v grep | xargs kill -9 </li>\r\n            <li> systemctl disable libvirtd </li>\r\n\r\n            <h2 className='h2'> 📌 dhcp 서버 설정 </h2>\r\n            <li> subnet 192.168.10.0 netmask 255.255.255.0 <small> netmask는 앞에 9자리가 네트워크 대역이라는 것을 알려줌 </small> </li>\r\n            <li> {'{'}\r\n              <li> host client1  </li>\r\n              <li> {'{'}\r\n                <li> option host-name \"client1\";  </li>\r\n                <li> hardware ethernet 하드웨어주소; , # ifconfig에서 ether 주소를 참조 </li>\r\n                <li> fixed-address 102.168.10.251;  </li>\r\n              </li>\r\n              <li> {'}'}  </li>\r\n              <li> option routers 192.168.10.2; <small> # dhcp서버가 보는 나의 게이트웨이 주소 </small> </li>\r\n              <li> option subnet-mask 255.255.255.0; <small> # 네트워크 대역을 255로 알려줘 </small> </li>\r\n              <li> range dynamic-bootp 192.168.10.30 192.168.10.50;  <small> #30~50번 IP를 나누어 준다. </small>  </li>\r\n              <li> option domain-name-servers 8.8.8.8;  <small> # 도메인 주소를 설정 </small> </li>\r\n              <li> default-lease-time 86400; <small> # 클라이언트에게 준 IP의 시간을 초단위로 설정 </small>  </li>\r\n              <li> max-lease-time 172800; <small> # 클라이언트에게 준 동일한 IP의 최대 시간을 초단위로 설정, 오랜기간 사용하면 악용의 소지때문에 제한 </small>  </li>\r\n            </li>\r\n            <li> {'}'}  </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <ul>\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ php 설치\r\n              </summary>\r\n              <span className=\"sblock\">\r\n                <h2 className='h2'> 📌 설치 </h2>\r\n                <span className=\"mblock\">\r\n                  <li> yum install gcc glibc glibc-common gd gd-devel -y\r\n                    <li> ps -ef | grep yum | grep -v grep | awk '{'{print $2}'}' | xargs kill -9 2{'>'}/dev/null </li>\r\n                  </li>\r\n                  <li>  yum -y install libxml2-devel </li>\r\n                  <li>  yum -y install sqlite-devel </li>\r\n                  <li>  yum -y install make </li>\r\n                  <li>  mkdir -p /app/install </li>\r\n                  <li>  wget https://www.php.net/distributions/php-8.0.10.tar.gz -O /app/install/php-8.0.10.tar.gz\r\n                    <li>  <a href=\"https://www.php.net/downloads.php\" target=\"_blank\" rel=\"noopener noreferrer\"></a> php설치 주소 </li>\r\n                  </li>\r\n                  <li> mkdir -p /app/temp/php/8.0.10  </li>\r\n                  <li> tar xvfz /app/install/php-8.0.10.tar.gz -C /app/temp/php/8.0.10 --strip-components=1  </li>\r\n                  <li> cd /app/temp/php/8.0.10  </li>\r\n                  <li> ./configure --prefix=/app/dkit/php/8.0.10  </li>\r\n                  <li> make {'&&'} make install  # 매우 오래 걸림 </li>\r\n                  <li> ls -la /app/dkit/php/8.0.10/  </li>\r\n                  <li> /app/dkit/php/8.0.10/bin/php -version  </li>\r\n                  <li> 환경변수 등록하기  </li>\r\n                  <li> cd /app/dkit/php/  </li>\r\n                  <li> ln -Tfs /app/dkit/php/8.0.10 /app/dkit/php/release  </li>\r\n                  <li> rm -rf /app/temp/php/8.0.10  </li>\r\n                  <li> ls -la /usr/bin #윈도우의 환경변수같음  </li>\r\n                  <li> ln -Tfs /app/dkit/php/release/bin/php /usr/bin/php  </li>\r\n                  <li> php -version  </li>\r\n                  <li> ls -la /usr/bin/php  </li>\r\n                  <li>   </li>\r\n                  <li>   </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 워드프레스 설치\r\n              </summary>\r\n              <span className=\"sblock\">\r\n                <h2 className='h2'> 📌 워드프레스 설치 </h2>\r\n                <span className=\"mblock\">\r\n                  <li> pkgs.org 에 가보면 php 5.4나 7까지만 지원 </li>\r\n                  <li> yum -y install epel-release # yum에 올라온 공식적인 패키지가 아닌 unofficial에서\r\n                    third party에 대한 repo서버의 정보가 필요한데 대표적인 사람들의 정보가 존재? </li>\r\n                  <li> yum -y install httpd mariadb mariadb-server </li>\r\n                  <li> yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm #remi 파일에 대해 설치 필요\r\n                    <li> 안된다면 아래와 같이 입력 </li>\r\n                    <li> yum -y install https://rpms.remirepo.net/enterprise/remi-release-7.rpm </li>\r\n                    <li> 안된다면 아래와 같이 한번 받고나서 다시 위에 명령어 입력 </li>\r\n                    <li> rpm -Uvh install http://rpms.remirepo.net/enterprise/remi-release-7.rpm </li>\r\n                  </li>\r\n                  <li> yum -y install php80-php php80-php-mysql </li>\r\n                  <li> systemctl restart mariadb </li>\r\n                  <li> mysql -e \"CREATE DATABASE wordpress;\" # 데이터베이스 생성 </li>\r\n                  <li> mysql -e \"GRANT ALL PRIVILEGES ON wordpress.* TO test@localhost IDENTIFIED BY 'P@ssw0rd\"'!'\"';\" </li>\r\n                  <li> mysql -e \"FLUSH PRIVILEGES;\" </li>\r\n                  <li> mysql -e \"SELECT User,Host FROM mysql.user;\"\r\n                    <li> 아래는 할 필요 없음 실수로 비번을 잘못입력하고 워드프레스에 비번 잘못 입력해서 사용 </li>\r\n                    <li> mysql -e \"SELECT User,Password From mysql.user;\" # 테이블의 유저,유저비번 조회 </li>\r\n                    <li> mysql -e \"UPDATE mysql.user Set Password=Password('P@ssw0rd\"'!'\"') WHERE User='test';\" #유저 비번 바꾸기</li>\r\n                    <li> mysql -e \"SHOW DATABASES;\" </li>\r\n                    <li> mysql -e \"DROP DATABASE wordpress;\" </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li> vi /etc/httpd/conf/httpd.conf\r\n                    <span className='sblock'>\r\n                      <li> 164번째 줄 index.html 뒤에 index.php 추가 </li>\r\n                      <li> 가장 아래에 추가 </li>\r\n                      <li> AddType application/x-httpd-php .php .html .htm .inc </li>\r\n                      <li> AddType application/x-httpd-php-source .phps </li>\r\n                    </span>\r\n                  </li>\r\n                  <li> systemctl restart httpd </li>\r\n                  <li> mkdir -p /app/install </li>\r\n                  <li> <a href=\"https://ko.wordpress.org/download/\" target=\"_blank\" rel=\"noopener noreferrer\"></a> 워드프레스 홈페이지 </li>\r\n                  <li> wget https://ko.wordpress.org/latest-ko_KR.tar.gz -O /app/install/wordpress.tar.gz </li>\r\n                  <li> mkdir -p /var/www/html/wordpress </li>\r\n                  <li> tar xvfz /app/install/wordpress.tar.gz -C /var/www/html/wordpress --strip-components=1 </li>\r\n                  <li> cd /var/www/html/wordpress/ </li>\r\n                  <li> cd wp-content </li>\r\n                  <li> mkdir uploads # 워드프레스 메뉴얼에 적혀져 있음 </li>\r\n                  <li> cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php </li>\r\n                  <li> vi /var/www/html/wordpress/wp-config.php\r\n                    <span className='sblock'>\r\n                      <li> 'database_name_here' 에 'wordpress' 입력 #데이터베이스 입력 </li>\r\n                      <li> 'username_here' 에 'test' 입력 # DB 사용자 입력 </li>\r\n                      <li> 'password_here' 에 'P@ssw0rd!' 입력 # DB 사용자 비번 입력 </li>\r\n                    </span>\r\n                  </li>\r\n                  <li> systemctl restart httpd </li>\r\n                  <li> setenforce 0 </li>\r\n                  <li> systemctl stop firewalld </li>\r\n                  <li> 브라우저에 192.168.10.80/wordpress 입력해서 나와야 함 </li>\r\n                  <li> 그리고 정보를 입력(비밀번호 바꿀것)  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ mariaDB 설치 <small>  </small>\r\n              </summary>\r\n              <span className=\"sblock\">\r\n                <h2 className='h2'> 📌  </h2>\r\n                <span className=\"mblock\">\r\n                  <li> CentOS 설치\r\n                    <li> yum -y install mariadb mariadb-server </li>\r\n                    <li> yum -y install php-mysqlnd <small> php와 mariadb를 연동 </small> </li>\r\n                    <li> systemctl restart mariadb </li>\r\n                    <li> mysql <small> mariadb 실행 </small> </li>\r\n                    <li> GRANT ALL PRIVILEGES ON xeDB.* TO xeUser@localhost IDENTIFIED BY '1234'; </li>\r\n                    <li> exit </li>\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <h2 className='h2'> 📌 사용 </h2>\r\n                <span className=\"mblock\">\r\n                  <li> mysql -u 유저명 -p비번 </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ xpressengine 설치  </summary>\r\n              <span className=\"sblock\">\r\n                <h2 className='h2'> 📌 xpressengine 설치 </h2>\r\n                <span className=\"mblock\">\r\n                  <li> CentOS 설치\r\n                    <li> <a href=\"https://www.xpressengine.com/download\" target=\"_blank\">\r\n                      https://www.xpressengine.com/download </a> 로 가서 xe core 다운로드 - 다운로드 우측클릭 링크 주소 복사 </li>\r\n                    <small> http://download.xpressengine.com/download/18325662/22756225 </small>\r\n                    <li> cd /var/www/html  </li>\r\n                    <li> wget 링크주소URL -O xe.zip </li>\r\n                    <li> unzip xe.zip </li>\r\n                    <li> chmod 707 xe </li>\r\n                    <li> 브라우저 URL에 ip주소/xe 입력 (localhost/xe 입력도 가능) </li>\r\n                    <li> setenforce 0 , 리눅스 보안 끔(일시적, 아래방법은 영구적) </li>\r\n                    <li> <small> vim /etc/sysconfig/selinux , SELINUX=disabled (default=enforcing)로 변경 </small> </li>\r\n                    <li> 창이 나오면 한국어 - 동의 - 다음 - 제일위에 mysql 선택 -  </li>\r\n                    <li> 만약에 퍼미션 에러가 나온다면 chmod 707문제거나 selinux문제이다. 꼭 setenforce 0 해주기 </li>\r\n                    <li> DB아이디, DB비밀번호, DB이름 적어주기 </li>\r\n                    <li> 한국시간으로 설정 Korea Standard Time, Japan Standard Time </li>\r\n                    <li> 이메일주소는 실제 이메일주소를 입력하지 않아도 됨 test@test.com </li>\r\n                    <li> 그러면 사이트가 만들어짐 </li>\r\n                    <li> ftp서버를 설정한 후에는 아래 과정 가능 </li>\r\n                    <li> 우측 관리(톱니바퀴) - 사이트 제작/편집 - 사이트 디자인 설정 - 다른 레이아웃 설치\r\n                      - 이나 Paper 레이아웃 다운로드 버튼 클릭 - 확인(FTP 설정 어쩌구) - 아이디와 비번 입력하고\r\n                      - 고급 아래 화살표 클릭 - 에러발생 - 다시 xe로 접속해서 이나 Paper 레이아웃 다운로드 -\r\n                      이나레이아웃으로 설정하고 저장 한후에 다시 xe로 접속하면 완료 </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ C언어 설치  </summary>\r\n              <span className=\"sblock\">\r\n                <h2 className='h2'> 📌 설치 </h2>\r\n                <span className=\"mblock\">\r\n                  <li> yum install gcc glibc glibc-common gd gd-devel -y </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <h2 className='h2'> 📌  </h2>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 파이썬 설치\r\n              </summary>\r\n              <span className=\"sblock\">\r\n                <h2 className='h2'> 📌  </h2>\r\n                <span className=\"mblock\">\r\n                  <li> <a href=\"https://www.python.org/downloads/source/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    https://www.python.org/downloads/source/ </a> </li>\r\n                  <li> https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz # 3.9.6 버전 Gzipped 우측클릭 링크복사 </li>\r\n                  <li> mkdir -p /app/temp </li>\r\n                  <li> cd /app/temp </li>\r\n                  <li> wget https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz </li>\r\n                  <li> ls -la # 파일 확인  </li>\r\n                  <li> tar xvfz ./Python-3.9.6.tgz </li>\r\n                  <li> 설치를 진행하기 위해서는 C언어, make가 설치되어 있어야 한다..\r\n                    <li> yum install gcc glibc glibc-common gd gd-devel -y </li>\r\n                    <li> yum -y install make </li>\r\n                  </li>\r\n                  <li> mkdir -p /app/dkit/python/3.9.6 </li>\r\n                  <li> ./configure --prefix=/app/dkit/python/3.9.6 # 의존성 파일이 있는지 검사 </li>\r\n                  <li> ls -la ./Makefile </li>\r\n                  <li> make # 의존성 파일을 가지고 빌드 파일로 만들어 주는 역할 </li>\r\n                  <li> make install # 빌드 파일을 가지고 실제 설치를 해주는 역할 </li>\r\n                  <li> ls -la /app/dkit/python/3.9.6/bin/ </li>\r\n                  <li> cd /app/dkit/python/3.9.6/bin </li>\r\n                  <li> cd / </li>\r\n                  <li> python --version # 설치한 버전이 다르다는 것을 볼 수 있음(기본적으로 설치된 버전) </li>\r\n                  <li> ls -ld /usr/bin/python\r\n                    <li> 권한을 보면 제일 앞에 l(심볼릭 링크,바로가기)로 되어있는것을 볼 수 있다. </li>\r\n                  </li>\r\n                  <li> cd /app/dkit/python/3.9.6/bin </li>\r\n                  <li> ./python3 --version </li>\r\n                  <li> cd /app/dkit/python </li>\r\n                  <li> ln -Tfs /app/dkit/python/3.9.6/bin/python3 /usr/bin/python3 #전역변수에 바로가기 생성 </li>\r\n                  <li> ln -Tfs /usr/bin/python3 /usr/bin/python </li>\r\n                  <li> python # 파이썬 실행 , exit()를 입력해서 나올 수 있음 </li>\r\n                  <li> yum -y install vsftpd (ftp서버를 설치하려 하지만 에러 발생) </li>\r\n                  <li> vi /usr/bin/yum # 배쉬가 python으로 변경이 된것을 볼 수 있음 </li>\r\n                  <li> 파이썬 2는 지원하나 파이썬 3에서는 yum을 지원하지 않음 </li>\r\n                  <li> 파이썬 버전을 바꾸어주는 쉘 스크립트 만들기\r\n                    <li> mkdir -p /app/script </li>\r\n                    <li> cd /app/script </li>\r\n                    <li> <h2 className='h2'> 📌 vi chvpython.sh </h2>\r\n                      <span className=\"sblock\">\r\n                        <li> #!/bin/bash </li>\r\n                        <li> if [ -n \"$1\" ]  #공백인지 검사 </li>\r\n                        <li> then\r\n                          <li> PYTHON_VERSION=$1 </li>\r\n                        </li>\r\n                        <li> else\r\n                          <li> echo \"Input Change Python Version(2 or 3) :\" </li>\r\n                          <li> read PYTHON_VERSION </li>\r\n                        </li>\r\n                        <li> fi </li> <br />\r\n                        <li> {'if [ \"${PYTHON_VERSION}\" == \"2\" ]'} </li>\r\n                        <li> then\r\n                          <li> ln -Tfs /usr/bin/python2 /usr/bin/python </li>\r\n                        </li>\r\n                        <li> {'elif [ \"${PYTHON_VERSION}\" == \"3\" ]'} </li>\r\n                        <li> then\r\n                          <li> ln -Tfs /usr/bin/python3 /usr/bin/python </li>\r\n                        </li>\r\n                        <li> else\r\n                          <li> echo \"Input Vaild Python Version(2 or 3)\" </li>\r\n                        </li>\r\n                        <li> fi </li> <br />\r\n                        <li> python --version </li>\r\n                      </span>\r\n                    </li>\r\n                  </li>\r\n                  <li> chmod 755 chvpython.sh </li>\r\n                  <li> ./chvpython  </li>\r\n                  <li>  </li>\r\n                </span>\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </ul>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinuxCentOS7;","import React from 'react';\r\n\r\nconst LinuxShell = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ rsh(remote shell) <a name=\"rsh(remote shell)\" style={{ visibility: \"hidden\" }}> rsh(remote shell) </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 컴퓨터 네트워크의 다른 컴퓨터에서 다른 사용자로 셸 명령을 실행할 수 있는 명령줄 컴퓨터 프로그램 </li>\r\n                                    <li> rsh 연결시 원격 시스템은 rsh 데몬을 실행 , rsh데몬은 전송제어프로토콜(TCP) 포트 514를 사용 </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                                <span className=\"sstitle\"> 장단점 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li className=\"col_r\"> rsh 프로토콜은 네트워크 용도로 안전하지 않음, 암호화되지 않음 정보를 전송함  </li>\r\n                                    <li className=\"col_be\">  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 정의 및 설명 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 사용 방법 및 실행 및 삭제 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> 장단점 </span>\r\n                            <span className=\"mblock\">\r\n                                <li className=\"col_r\">  </li>\r\n                                <li className=\"col_be\">  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinuxShell;","import React from 'react';\r\n\r\nconst LinuxShellScript = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 쉘 스크립트의 기본 설명 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 주석 </span>\r\n                <span className=\"mblock\">\r\n                  <li> # </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> #!(Shebang) </span>\r\n                <span className=\"mblock\">\r\n                  <li> 스크립트를 처리할 인터프리터 </li>\r\n                  <li> 처리할 인터프리터 종류\r\n                    <li> #!/bin/sh (Bourne Shell) </li>\r\n                    <li> #!/bin/csh (C Shell) </li>\r\n                    <li> #!/bin/ksh (Korn Shell) </li>\r\n                    <li> #!/bin/bash (Bash Shell) </li>\r\n                    <li> #!/usr/bin/perl (Perl)</li>\r\n                    <li> #!/usr/bin/python (Python) </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 공백(띄어쓰기) </span>\r\n                <span className=\"mblock\">\r\n                  <li> 스크립트에서 공백은 무시할 수 없는 중요한 요소이다. </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 쉘 스크립트를 사용하는 이유 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 여러개의 명령을 작업하는 것보다 여러개의 명령어를 하나의 공간(스크립트)에 담아서\r\n                    하나의 스크립트만을 실행하여 작업하는 것이 편해서 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 쉘 스크립트 사용하는 방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 1. vi 파일명.sh 로 스크립트를 생성 </li>\r\n                  <li> 2. #!/bin/bash , 파일의 최상단에 선언(스크립트를 무슨 인터프리터로 사용해서 처리하겠다.) </li>\r\n                  <li> 3. 코드를 작성 </li>\r\n                  <li> 4. 코드를 다 작성하고 실행해서 실행이 되지 않으면 chmod 명령어로 실행권한을 준다. </li>\r\n                  <li> 5. ./파일명.sh  를 사용해서 실행 가능 , bash쉘은 sh 파일명.sh 로도 실행 가능 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 쉘 스크립트 실행하고 입력값 넣는방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> read 변수명  을 쉡 스크립트 안에 써놓으면 사용할 때 입력값을 넣을 수 있다. </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 변수 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 변수 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 변수명=\"문자열\" , # 공백이 존재하면 안됨, 특수문자나숫자로 변수명이 시작하면 안됨 </li>\r\n                  <li> 변수명=변수값 , # 공백이 존재하면 안됨, 특수문자나숫자로 변수명이 시작하면 안됨 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 변수 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> ${'{변수명}'} : 변수 출력 </li>\r\n                  <li> ${'{변수명^}'} : 제일 앞에 글자만 대문자로 변경 </li>\r\n                  <li> ${'{변수명^^}'} : 모든 글자 대문자로 변경 </li>\r\n                  <li> ${'{변수명,}'} : 제일 앞에 글자만 소문자로 변경 </li>\r\n                  <li> ${'{변수명,,}'} : 모든 글자 소문자로 변경 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 변수 다른 쉡 스크립트에서 사용하기  </span>\r\n                <span className=\"mblock\">\r\n                  <li> export 변수명=\"변수값\" </li>\r\n                  <li> ./@.sh , # 다른 쉘 스크립트 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 내부에서 정의한 변수를 매개변수(파라미터)처럼 사용하는 방법  </span>\r\n                <span className=\"mblock\">\r\n                  <li> set $(변수)  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 매개변수 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 매개변수 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> ${0} , ${1} , ${2} : 매개변수가 들어온 순서대로 사용 , 0번은 실행된 스크립트 </li>\r\n                  <li> ${'{#}'} ,매개변수의 갯수 </li>\r\n                  <li> ${'{*}'} ,매개변수의 모든 값  </li>\r\n                  <li> ${'{@}'} ,매개변수의 모든 값 </li>\r\n                  <li> ${'{매개변수명:start:count}'} : 시작인덱스 부터 갯수만큼 출력 </li>\r\n                  <li> ${'{배열[index]}'} : 인덱스값에 맞는 배열값을 출력 </li>\r\n                  <li> ${'{$!}'} ,  </li>\r\n                  <li> ${'{$$}'} , 쉘 스크립트의 PID </li>\r\n                  <li> ${'{$?}'} , 실행한 뒤의 반환값 </li>\r\n                  <li> ${'{$_}'} , 지난 명령의 마지막 인자로 설정된 특수 변수 </li>\r\n                  <li> ${'{$-}'} , 현재 Shell이 호출될 때 사용한 옵션들 </li>\r\n                  <li> ${'{#매개변수명}'} : 매개변수의 길이 출력 </li>\r\n                  <li> ${'{#배열[*]}'} : 배열의 길이 출력 </li>\r\n                  <li> ${'{매개변수명:start:count}'} : 시작인덱스 부터 갯수만큼 출력 </li>\r\n                  <li> ${'{매개변수명:=\"값\"'} #값이 존재한다면 그대로 사용하고 없으면 추가 </li>\r\n                  <li> ${'{매개변수명+\"값\"'} #값이 존재한다면 저장하지 않고 값만 출력만 해줌 </li>\r\n                  <li> ${'{매개변수명-\"값\"'} #값이 존재한다면 원래 값을 출력 값이 없다면 값만 출력 해준다. </li>\r\n                  <li> ${'{#매개변수명#입력값}'} : 입력값을 제일앞에서부터 첫번째 것을 찾음  </li>\r\n                  <li> ${'{#매개변수명##입력값}'} : 입력값을 제일앞에서부터 마지막 것을 찾음  </li>\r\n                  <li> ${'{#매개변수명%입력값}'} : 입력값을 제일뒤에서부터 첫번째 것을 찾음   </li>\r\n                  <li> ${'{#매개변수명%%입력값}'} : 입력값을 제일뒤에서부터 마지막 것을 찾음 </li>\r\n                  <li> ${'{#매개변수명/입력값/변경값}'} : 입력값과 첫번째로 일치하는 값을 변경 </li>\r\n                  <li> ${'{#매개변수명//입력값/변경값}'} : 입력값과 일치하는 모든 값을 변경 </li>\r\n                  <li> ${'{#매개변수명/#입력값/변경값}'} : 제일 앞에 있는 값이 입력값과 같을 경우만 변경 </li>\r\n                  <li> ${'{#매개변수명/%입력값/변경값}'} : 제일 뒤에 있는 값이 입력값과 같을 경우만 변경 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 매개변수 인자 전달하는 방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> ./@.sh 매개변수1 매개변수2 매개변수3 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 매개변수를 한칸씩 밀어내는 방법 </span>\r\n                <span className=\"mblock\">\r\n                  <li> shift , #반복문에서 이용을 하면 S1이 사라지는 것을 볼 수 있을 것이다.  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 시스템 변수 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 시스템 변수 종류 </span>\r\n                <span className=\"mblock\">\r\n                  <li> HOME : 사용자 홈 디렉토리 </li>\r\n                  <li> PATH : 실행 파일의 경로 </li>\r\n                  <li> LANG : 실행시 사용되는 언어 </li>\r\n                  <li> UID : 사용자의 UID </li>\r\n                  <li> SHELL : 로그인시 실행되는 쉘 </li>\r\n                  <li> USER : 사용자 계정 </li>\r\n                  <li> FUNCNAME : 현재 실행되고 있는 함수 이름 </li>\r\n                  <li> TERM : 로그인 터미널 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 조건문 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> if 조건문 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> if  조건문 {'&&'} 조건문 {'||'} 조건문 ; then </li>\r\n                  <li> 내용 </li>\r\n                  <li> elif [조건문] ; then </li>\r\n                  <li> 내용 </li>\r\n                  <li> else </li>\r\n                  <li> 내용 </li>\r\n                  <li> fi </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> else 조건문 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> case ${'{1}'} in </li>\r\n                  <li> 값1 | 값2) 내용 ;; </li>\r\n                  <li> [fF]*{')'} 내용 ;; </li>\r\n                  <li> *{')'} 내용 ;; </li>\r\n                  <li> esac </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 조건문 연산자 </span>\r\n                <span className=\"mblock\">\r\n                  <li> -a : AND </li>\r\n                  <li> -o : OR </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 조건문 종류 , []괄호 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> if [ ${'{요소1}'} -eq  ${'{요소2}'} ]; , # equal(=)</li>\r\n                  <li> if [ ${'{요소1}'} -ne  ${'{요소2}'} ]; , # not equal(!=)</li>\r\n                  <li> if [ ${'{요소1}'} -gt  ${'{요소2}'} ]; , # greater(&gt;) </li>\r\n                  <li> if [ ${'{요소1}'} -ge  ${'{요소2}'} ]; , # greater or equal(&lt;)</li>\r\n                  <li> if [ ${'{요소1}'} -lt  ${'{요소2}'} ]; , # little(&lt;)</li>\r\n                  <li> if [ ${'{요소1}'} -le  ${'{요소2}'} ]; , # little or equal(&lt;=)</li>\r\n                  <li> if [ -n  문자열 ]; , # 문자열의 길이가 0이 아닌경우 </li>\r\n                  <li> if [ -z  문자열 ]; , # 문자열이 길이가 0인 경우 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 파일과 관련된 조건문 종류 . []괄호 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> if [  -d $(요소) ]; , # 디렉토리가 존재하면 참 </li>\r\n                  <li> if [ ! -d $(요소)];  , # 디렉토리가 존재하지 않으면 참 </li>\r\n                  <li> if [  -e $(요소) ]; , # 파일이 존재하면 참 </li>\r\n                  <li> if [ ! -e $(요소)];  , # 파일이 존재하지 않으면 참 </li>\r\n                  <li> if [  -L $(요소) ]; , # 파일이 심볼릭 링크이면 참 </li>\r\n                  <li> if [  -S $(요소) ]; , # 파일이 소켓이면 참 </li>\r\n                  <li> if [  -s $(요소) ]; , # 파일이 크기가 0보다 크면 참 </li>\r\n                  <li> if [  -r $(요소) ]; , # 파일을 읽을 수 있으면 참 </li>\r\n                  <li> if [  -w $(요소) ]; , # 파일을 쓸 수 있으면 참 </li>\r\n                  <li> if [  -x $(요소) ]; , # 파일을 실행 할 수 있으면 참 </li>\r\n                  <li> if [  -f $(요소) ]; , # 파일이 정규 파일이면 참 </li>\r\n                  <li> if [  -c $(요소) ]; , # 파일이 문자 장치이면 참 </li>\r\n                  <li> if [  -g $(요소) ]; , # 파일에 set-user-id가 설정되면 참 </li>\r\n                  <li> if [ $(요소1) -nt $(요소2) ]; , # 요소1이 더 최신이면 참 </li>\r\n                  <li> if [ $(요소1) -os $(요소2) ]; , # 요소1이 더 오래되면 참 </li>\r\n                  <li> if [ $(요소1) -ef $(요소2) ]; , # 요소1,요소2가 동일하면 참 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 반복문 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> for 반복문 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> for 반복문조건; </li>\r\n                  <li> do </li>\r\n                  <li> 내용 </li>\r\n                  <li> done </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> while 반복문 정의 (거짓이면 반복되는 until도 존재는 한다.) </span>\r\n                <span className=\"mblock\">\r\n                  <li> while ((반복문조건)); , while [ true ] , while [ $i -le 10 ] </li>\r\n                  <li> do</li>\r\n                  <li> 내용</li>\r\n                  <li> ((숫자와 변수의 연산 내용))</li>\r\n                  <li> `expr $i + 1`  , # backtick, backquoto , grave accent, 억음부호 </li>\r\n                  <li> done </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 반복문조건 </span>\r\n                <span className=\"mblock\">\r\n                  <li> for i in 1 2 3 4 5 </li>\r\n                  <li> for i in ${'{list}'} , list = \"1 2 3 4 5\" </li>\r\n                  <li> for i in {'{1..5}'} . # 1~5 </li>\r\n                  <li> for i in {'{1..5..2}'} , # 1,3,5 </li>\r\n                  <li> for i in `seq 1 2 10` , # 1,3,5,7,9 </li>\r\n                  <li> for i in `seq 10 -2 1` , # 10,8,6,4,2 </li>\r\n                  <li> for i in ${'{arr[@]}'} , arr = (1 2 3 4 5) </li>\r\n                  <li> for ((i=0; i&gt;5; i++)); </li>\r\n                  <li> for i in * .*  , # 현재 폴더에 모든 숨긴 파일</li>\r\n                  <li> for i in f*  , # f로 시작하는 모든파일 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 배열 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 배열 선언 및 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 배열 = (요소1 요소2 요소3)  </li>\r\n                  <li> 1. 공백으로 구분 </li>\r\n                  <li> 2. 1차원 배열만 지원 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 배열 요소 바꾸기 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 배열[인덱스] = 값  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 배열 요소 삭제 </span>\r\n                <span className=\"mblock\">\r\n                  <li> unset 배열[인덱스]  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 배열 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> ${'{배열[@]}'} , # 배열의 모든 요소 </li>\r\n                  <li> ${'{배열[인덱스]}'} </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 함수 <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 함수 정의 </span>\r\n                <span className=\"mblock\">\r\n                  <li> function 함수명(){'{'} </li>\r\n                  <li> 내용 </li>\r\n                  <li> {'}'} </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 함수 사용 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 함수명 매개변수 매개변수 , # 스크립트 내부에서 사용 </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ printf <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> printf \"%5.2f\" \\n\\n \\t %s \\n\" $var1 \"$var2\" </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶ 기타  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li> sleep 초(시간) </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> ▶  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\">  </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinuxShellScript;","import React from 'react';\r\n\r\nconst LinuxServer = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 서버 실행전에 확인할 것들 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1. 방화벽 </li>\r\n            <li> 2. selinux 같은것(centos에서 사용되는거) </li>\r\n            <li> 3. 서비스가 enable인지 </li>\r\n            <li> 4. 서비스가 실행되고 있는지 </li>\r\n            <li> 5. 클라우드에서 포트가 열려있는지 </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> nginx 서버 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 nginx 설명 </h2>\r\n            <li> HTTP 프록시와 웹 서버 기능 </li>\r\n            <li> 정적 파일과 인덱스 파일 표현, 자동 인덱싱 기능. </li>\r\n            <li> 캐싱을 통한 리버스 프록시 </li>\r\n            <li> 로드 밸런싱 </li>\r\n            <li> 고장 진단 </li>\r\n            <li> SSL 지원 </li>\r\n            <li> 캐싱을 통한 FastCGI 지원 </li>\r\n            <li> Name-, IP-기반 가상서버 </li>\r\n            <li> FLV 스트리밍 </li>\r\n            <li> MP4 스트리밍 모듈을 이용한 MP4 스트리밍 </li>\r\n            <li> 웹페이지 접근 인증 </li>\r\n            <li> gzip 압축 </li>\r\n            <li> 10000개의 동시 접속을 처리할 수 있는 능력 </li>\r\n            <li> URL 다시쓰기 (URL rewriting) </li>\r\n            <li> 맞춤 로깅 </li>\r\n            <li> 서버 사이드 기능 포함 </li>\r\n            <li> WebDAV </li>\r\n            <li> SMTP, POP3, IMAP 프록시 </li>\r\n            <li> STARTTLS 지원 </li>\r\n            <li> SSL 지원 </li>\r\n\r\n            <h2 className='h2'> 📌 centos7 </h2>\r\n            <li> 서버 설치 <span className='command'> dnf install nginx  </span> </li>\r\n            <li> 프로세스 확인  <span className='command'> ps -ef | grep nginx </span>  </li>\r\n            <li> 서버 가동  <span className='command'> (sudo) nginx </span> </li>\r\n            <li> 서버 시작  <span className='command'> systemctl start nginx  </span> </li>\r\n            <li> 서비스 상태 확인 <span className='command'> sudo systemctl status nginx </span> </li>\r\n            <li> 서비스 중지 <span className='command'>  systemctl stop nginx </span> </li>\r\n            <li> 서비스 재시작 <span className='command'>  systemctl restart nginx </span> </li>\r\n            <li> 설정 반영 <span className='command'>  systemctl reload nginx </span> </li>\r\n            <li> 서비스 재로드1  <span className='command'> sudo systemctl reload nginx </span> </li>\r\n            <li> 서비스 재로드2  <span className='command'> sudo service nginx reload  </span> </li>\r\n            <li> 버전 확인 <span className='command'> sudo nginx -v </span> </li>\r\n            <li> 버전 + 구성 옵션 확인 <span className='command'> sudo nginx -V </span> </li>\r\n            <li> 구성 테스트(구성 파일 변경하거나 서비스 재로드하기전에 테스트) <span className='command'> sudo nginx -t</span> </li>\r\n            <li>  <span className='command'>   </span> </li>\r\n            <li>  <span className='command'>   </span> </li>\r\n            <li>  <span className='command'>   </span> </li>\r\n            <li>  <span className='command'>   </span> </li>\r\n\r\n\r\n\r\n            <h2 className='h2'> 📌 conf 같은 설정 </h2>\r\n            <li> <a href=\"https://architectophile.tistory.com/12\" target=\"_blank\" rel=\"noopener noreferrer\"> 참고 </a> </li>\r\n            <li>  </li>\r\n            <li> /etc/nginx/conf.d/커스텀파일.d\r\n              <div className=\"block4\">\r\n                <li> server {\"{\"}\r\n                  <li> listen 포트; </li>\r\n                  <li> listen [::]:포트; </li>\r\n                  <li> server_name www.example.com; <small> 이주소를 입력하면 www.example.com:포트에 대해서 모두 받아들임 </small> </li>\r\n                  <li> location / {\"{\"}\r\n                    <li> return 301 http://example.com;$request_uri; <small> 보내버림 </small> </li>\r\n                    <li> return 301 https://$host$request_uri; <small> 보내버림 </small> </li>\r\n                    <li> proxy_pass http://example:포트/경로; <small> 이동시켜줌 </small> </li>\r\n                  </li>\r\n                  <li> {\"}\"} </li>\r\n                </li>\r\n                <li> {\"}\"} </li>\r\n              </div>\r\n            </li>\r\n\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> dhcp 서버란? </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Dynamic Host Configuration Protocol </li>\r\n            <li> 호스트의 IP주소와 각종 TCP/IP 프로토콜의 기본 설정을 자동적으로 클라이언트에게 제공해주는 프로토콜 </li>\r\n            <li> 자신의 네트워크 안에 클라이언트 컴퓨터가 부팅될 때 자동으로 IP주소, 서브넷마스크, 게이트웨이 주소, DNS 서버 주소를 할당해주는 것 </li>\r\n            <li> 일반 사용자는 IP에 관련된 어려운 정보를 알지 못해도 사용을 하는데 문제가 없음 </li>\r\n            <li> dhcp 서버는 관리가 편하고 이용자도 편함 </li>\r\n            <li> 한정된 IP주소를 가지고 더많은 IP주소가 있는 것처럼 사용하여 여러명의 사용자가 사용할 수 있게 함 </li>\r\n            <li> 단점 : 서버가 중단되면 IP할당이 제대로 되지 않는다.  </li>\r\n\r\n            <h2 className='h2'> 📌 dhcp 서버 작동원리 </h2>\r\n            <li> 1. dhcp클라이언트 컴퓨터 부팅 </li>\r\n            <li> 2. 자동으로 IP 주소를 dhcp서버로 요청 </li>\r\n            <li> 3. dhcp서버에 있는 할당 되지 않은 IP를 선택하고 할당됨으로 변경 </li>\r\n            <li> 4. IP주소를 dhcp클라이언트에게 할당 </li>\r\n            <li> 5. dhcp클라이언트는 dhcp서버에게 받은 IP로 인터넷을 이용  </li>\r\n            <li> 6. dhcp클라이언트가 접속을 종료하게 되면 dhcp서버에 IP주소를 반납 </li>\r\n            <li> 7. dhcp서버에 있는 IP주소 목록에서 반납된 IP주소를 다시 할당해제를 시켜준다. </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> git 서버 구축 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> git --version <small> 깃 버전 확인 </small> </li>\r\n            <li> yum install http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-1.noarch.rpm </li>\r\n            <li> yum remove git </li>\r\n            <li> yum install git </li>\r\n            <li> git --version <small> 깃 버전 확인 </small> </li>\r\n            <li> mkdir -p /opt/git/project.git </li>\r\n            <li> git init --bare /opt/git/project.git/ </li>\r\n            <li> useradd git </li>\r\n            <li> echo 'git:비밀번호입력' | chpasswd </li>\r\n            <li> chown -R git:git /opt/git/ </li>\r\n            <li> cd /home/git/ </li>\r\n            <li> ll ~/.ssh/id_rsa* <small> ssh키 있는지 확인 </small> </li>\r\n            <li> ssh-keygen , 엔터 누르다보면 키가 나온다. </li>\r\n            <li> sshpass -p \"위에서입력한비밀번호\" ssh-copy-id git@ssssksss </li>\r\n            <li> yum --enablerepo=epel -y install sshpass <small> sshpass 설치 </small> </li>\r\n            <li> 서버에서 git 사용자가 서버 쉘에 접근하는것을 막는방법(일단은 적용하지 않음)\r\n              <div className=\"block4\">\r\n                <li> which git-shell </li>\r\n                <li> chsh git -s /usr/bin/git-shell </li>\r\n                <li> cat /etc/passwd | grep git </li>\r\n                <li> (클라이언트키 추가 등록하는 방법) chsh git -s /bin/bash <small> 입력하고 나서 위에 3개를 다시 반복해야한다. </small> </li>\r\n              </div>\r\n            </li>\r\n            <li> git clone 깃주소 <small> 불러올 폴더에다가 하기 </small> </li>\r\n            <li>  </li> <br />\r\n            <li> PROJECT=프로젝트명 </li>\r\n            <li> mkdir -p /opt/git/$PROJECT.git </li>\r\n            <li> git init --bare /opt/git/$PROJECT.git </li>\r\n            <li> rm -rf /opt/git/프로젝트명.git </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      {/* 끝 */}\r\n\r\n      <span className=\"lblock\">\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  httpd 서버 <small> </small>\r\n              <a name=\"httpd 서버\" style={{ visibility: \"hidden\" }}> httpd 서버 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> httpd 서버 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li>  <h3> CentOS7 </h3>\r\n                  <li> yum install -y libjpeg* libpng* freetype* gd-* gcc gcc-c++ gdbm-devel libtermcap-devel\r\n                    <small> 의존성 라이브러리 설치 </small></li>\r\n                  <li> yum install httpd* <small> 설치 명령어 </small> </li>\r\n                  <li> systemctl status httpd <small> 설치 확인 명령어 </small></li>\r\n                  <li> systemctl start httpd <small> 서비스 시작 명령어 </small></li>\r\n                  <li> systemctl stop httpd <small> 서비스 중지 명령어 </small></li>\r\n                  <li> systemctl restart httpd <small> 서비스 재시작 명령어 </small></li>\r\n                  <li> firewall-cmd --list-all <small> 방화벽 리스트 확인 </small></li>\r\n                  <li> firewall-cmd --permanent --add-port=80/tcp <small> 방화벽 포트80번 허용 </small></li>\r\n                  <li> firewall-cmd --reload <small> 방화벽 재시작 </small></li>\r\n                  <li> vi /etc/httpd/conf/httpd.conf 에서 :set nu 입력 그리고\r\n                    151번째 줄 AllowOverride ALL 로 변경 <small>  </small></li>\r\n                  <li>  <small>  </small></li>\r\n                  <li>  <small>  </small></li>\r\n                </li>\r\n                <li> <h3> Ubuntu  </h3>\r\n                  <li> apt-get install apache2 </li>\r\n                  <li> service apache2 status <small> 설치 확인 명령어 </small></li>\r\n                  <li> service apache2 start <small> 서비스 시작 명령어 </small></li>\r\n                  <li> service apache2 stop <small> 서비스 중지 명령어 </small></li>\r\n                  <li> service apache2 restart <small> 서비스 재시작 명령어 </small></li>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> httpd 서버 디렉토리 </span>\r\n              <span className=\"mblock\">\r\n                <li> /var/www/html <small> index.html이 있는 경로(없으면 만들어서 사용) </small></li>\r\n                <li> /etc/httpd/conf <small> MIME 형식을 지정하기 위한 파일인 magic 파일이 있는곳 </small></li>\r\n                <small> MIME(Multipurpose Internet Mail Extensions) : 과거에는 메일  </small>\r\n                <li> /etc/httpd/conf.d <small>  아파치의 주요설정을 분리해서 저장하는 곳 </small></li>\r\n                <li> /etc/httpd/conf.modules.d <small> 아파치 모듈 설치 디렉토리 </small></li>\r\n                <li> /etc/httpd/modules <small> 아파치 모듈 설치 디렉토리 </small></li>\r\n                <li> /etc/httpd/logs <small> 로그 파일 저장 위치 </small></li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> httpd 서버 로그 </span>\r\n              <span className=\"mblock\">\r\n                <li> cat /var/log/httpd/error_log\r\n                  <div className=\"sblock\">\r\n                    <li> <span className='sstitle'> client denied by server configuration </span> </li>\r\n                    <li> 폴더 경로가 잘 잡혔는지 확인 </li>\r\n                    <li>  </li>\r\n                  </div>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  ftp 서버 <small> </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> ftp 서버 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> <h3> CentOS </h3>\r\n                  <li> yum -y install vsftpd </li>\r\n                  <li> systemctl enable vsftpd <small> 시스템을 꺼도 작동되게함 </small> </li>\r\n                  <li> systemctl restart vsftpd <small>  </small> </li>\r\n                  <li> netstat -tnlp 로 21번포트가 존재하는지 검색 <small>  </small> </li>\r\n                  <li> firewall-cmd --permanent --add-port=21/tcp </li>\r\n                  <li> firewall-cmd --permanent --add-port=20/tcp </li>\r\n                  <li> firewall-cmd --reload </li>\r\n                  <li> vi /etc/vsftpd/ftpusers에서 root를 지움 (이곳에 등록된 유저는 패스워드를 확인후 접근 불가) </li>\r\n                  <li> vi /etc/vsftpd/user_list에서 root를 지움 (이곳에 등록된 유저는 접속 불가) </li>\r\n                  <li> 구글에 winscp 검색 다운로드 , ftp 서버에 접속하는 프로그램  </li>\r\n                  <li> winscp 다음 누르다가 FTP로 변경, 호스트이름은 IP주소 , root , 본인비번 입력 </li>\r\n                  <li> 고급 - 연결 - 패시브모드 체크 해제  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> <h3> Ubuntu </h3>\r\n                  <li>  </li>\r\n                </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  dns 서버 <small> 도메인을 IP주소로 바꿔주는 서버 </small>\r\n              <a name=\"dns 서버\" style={{ visibility: \"hidden\" }}> dns 서버 </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 설명 </span>\r\n              <span className=\"mblock\">\r\n                <li> 기본포트 53번 포트 </li>\r\n                <li> zone 영역 :\r\n                  <li> 정방향(IP주소를 문자로)과 역방향(문자를 IP주소로)이 있다. </li>\r\n                  <li> <h3> zone 파일의 구조 </h3> <small> 최초 TTL(Time To Live) 값 설정 이후 레코드가 나뉨 </small>\r\n                    <li> <h4> SOA 레코드  </h4>\r\n                      <li> nameserver = dns서버의호스트명.도메인명.루트도메인. (ex host.test.com ) </li>\r\n                      <li> contact_email_address = 계정.도메인.루트도메인. (ex root.test.com) </li>\r\n                      <li> serial = 0 , YYYYMMDDNN형식으로 기입(NN은 수정횟수) </li>\r\n                      <li> refresh = 1D , 2차 DNS서버가 정보를 업데이트 하는 주기(초단위) </li>\r\n                      <li> retry = 1H , 2차 DNS서버가 주 DNS서버로 접속 실패했을 경우 재시도하는 주기 </li>\r\n                      <li> expire = 1W , 2차 DNS서버가 주 DNS서버로 접속 실패했을 경우 만기되는 시간 </li>\r\n                      <li> minimum = 3H , zone파일 정보의 최소 보관 시간 설정 </li>\r\n                    </li>\r\n                    <li> <h4> 자원 레코드 </h4>\r\n                      <li> IN : 네트워킹 주소 클래스 </li>\r\n                      <li> NS : 도메인의 네임서버 정보 </li>\r\n                      <li> MX : 도메인의 Mail 서버로, MX 다음 숫자는 메일처리의 우선순위를 명시한 것. </li>\r\n                      <li> A : 해당 도메인의 실제 IP주소(IPv4)를 설정 하는 레코드 </li>\r\n                      <li> CNAME : 별칭으로 부여된 name (서브도메인을 사용하기 위해 지정) </li>\r\n                      <li> HINFO : 호스트의 CPU정보와 운영체제 정보 </li>\r\n                      <li> MINFO : 메일박스와 메일 리스트 정보  </li>\r\n                      <li> PTR : IP주소에 대한 호스트명 </li>\r\n                      <li> TXT : 호스트에 대한 텍스트 정보 </li>\r\n                      <li> UINFO : 사용자 정보 </li>\r\n                      <li> ANY : 호스트에 관련된 모든 레코드들의 정보 </li>\r\n                    </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> 리졸빙(resolving) : 데이터베이스를 검색하는 역할 </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> <h3> CentOS - bind(DNS서버 프로그램) </h3>\r\n                  <li> yum -y install bind bind-chroot </li>\r\n                  <li> vi /etc/named.conf\r\n                    <span className=\"sblock\">\r\n                      <li> options\r\n                        <li> listen-on port 53 {'{ any; }'} , #누구든 접속할 수 있게 허용(default=127.0.0.1) </li>\r\n                        <li> listen-on-v6 port 53 {'{ none; }'} , #ipv6를 사용 유무(default=;;1) </li>\r\n                        <li> directory  , #zone파일의 위치 </li>\r\n                        <li> dump-file , #named정보가 갱신될 때 dump파일에 저장이 되므로 dump파일의 생성위치 및 파일명 </li>\r\n                        <li> statistics-file , # 네임서버의 통계파일의 생성위치 및 파일명 </li>\r\n                        <li> memstatistics-file , # 네임서버의 메모리 통계파일의 생성위치 및 파일명 </li>\r\n                        <li> allow-query {' {none;} '} , #질의문 허용 유무(default=localhost) </li>\r\n                        <li> datasize 512M; , # DNS 관련 정보를 캐싱하는데 사용하는 메모리 제한 </li>\r\n                        <li> recursion yes; , # 하위도메인 검색 가능 유무 </li>\r\n                        {/*  */}\r\n                        <li> zone \"test.com\" IN {'{'}  <small>  # 정방향 </small>\r\n                          <li> type [master | slave | hint ]; , # master는 본인이 관리,  </li>\r\n                          <li> file \"zone파일명.zone\"; </li>\r\n                          <li> allow-update {'{none;}'}; </li>\r\n                          <li> allow-transfer {'{192.168.10.81;}'}; ,# 서브 도메인 서버를 사용할 경우 </li>\r\n                        </li>\r\n                        <li> {'};'} </li>\r\n                        <li> zone \"0.168.80.in-addr.arpa\" IN {'{'} <small>  # 역방향 </small>\r\n                          <li> type [master | slave | hint ]; , # master는 본인이 관리,  </li>\r\n                          <li> file \"zone파일명.rev.zone\"; </li>\r\n                          <li> allow-update {'{none;}'}; </li>\r\n                        </li>\r\n                        <li> {'};'} </li>\r\n                        <li> zone \"test.com\" IN {'{'} <small>  # 서브도메인에다가 정의 </small>\r\n                          <li> type slave;  </li>\r\n                          <li> file \"slaves/test.zone\"; </li>\r\n                          <li> masters{'{192.168.10.80;}'}; </li>\r\n                          <li> masterfile-format text; </li>\r\n                        </li>\r\n                        <li> {'};'} </li>\r\n                        <small> zone영역은 include로 다른 파일에서 관리할 수도 있다. </small>\r\n                      </li>\r\n                    </span>\r\n                  </li>\r\n                  <li> cd /var/named </li>\r\n                  <li> vi zone파일명.zone ( ex test.zone , /etc/named.conf 에서 생성한 zone파일명을 사용해야 한다. )\r\n                    <span className=\"sblock\">\r\n                      <li>\r\n                        <span> $TTL </span>\r\n                        <span className=\"tab_4\"> 3H </span>\r\n                      </li>\r\n                      <li>\r\n                        <span> @ </span>\r\n                        <span className=\"tab_4\"> SOA </span>\r\n                        <span className=\"tab_4\"> @ </span>\r\n                        <span className=\"tab_4\"> root. </span>\r\n                        <span className=\"tab_4\"> (20201111 1D 1H 1W 1H) <small> root는 파일을만든사용자이름,\r\n                          뒤에는 생성 날짜 </small></span>\r\n                      </li>\r\n                      <li>\r\n                        <span> 공백 </span>\r\n                        <span className=\"tab_4\"> IN </span>\r\n                        <span className=\"tab_4\"> NS </span>\r\n                        <span className=\"tab_4\"> @ <small> 메인 DNS서버의 있다고 알려줌? , NS는 네임서버 </small></span>\r\n                      </li>\r\n                      <li>\r\n                        <span> 공백 </span>\r\n                        <span className=\"tab_4\"> IN </span>\r\n                        <span className=\"tab_4\"> NS </span>\r\n                        <span className=\"tab_4\"> ns2. <small> 서브 DNS서버의 있다고 알려줌? </small></span>\r\n                      </li>\r\n                      <li>\r\n                        <span> 공백 </span>\r\n                        <span className=\"tab_4\"> IN </span>\r\n                        <span className=\"tab_4\"> A </span>\r\n                        <span className=\"tab_4\"> 192.168.10.80 <small> DNS서버의 IP주소가 뭔지를 알려줌 , A는 주소? </small> </span>\r\n                      </li>\r\n                      <li>\r\n                        <span> 공백 </span>\r\n                        <span className=\"tab_4\"> ns </span>\r\n                        <span className=\"tab_4\"> A </span>\r\n                        <span className=\"tab_4\"> 192.168.10.80 <small> 메인 DNS서버의 IP주소가 뭔지를 알려줌 </small> </span>\r\n                      </li>\r\n                      <li>\r\n                        <span> 공백 </span>\r\n                        <span className=\"tab_4\"> ns2 </span>\r\n                        <span className=\"tab_4\"> A </span>\r\n                        <span className=\"tab_4\"> 192.168.10.81 <small> 서브 DNS서버의 IP주소가 뭔지를 알려줌 </small> </span>\r\n                      </li>\r\n                      <li>\r\n                        <span> 호스트주소 ( ex www , ftp 등) </span>\r\n                        <span className=\"tab_4\"> IN (파일형식?) </span>\r\n                        <span className=\"tab_4\"> A </span>\r\n                        <span className=\"tab_4\"> 알려줄 IP 주소 (ex 192.168.10.80) <small> 호스트.test.com 파일의 IP주소를 알려줌 </small> </span>\r\n                      </li>\r\n                      <li>\r\n                        <span> www </span>\r\n                        <span className=\"tab_4\"> IN </span>\r\n                        <span className=\"tab_4\"> A </span>\r\n                        <span className=\"tab_4\"> 192.168.10.80 <small> www.test.com 파일의 IP주소를 알려줌 </small> </span>\r\n                      </li>\r\n                    </span>\r\n                  </li>\r\n                  <li> named-checkconf /etc/named.conf </li>\r\n                  <li> named-checkconf /etc/named.rfc1912.zones </li>\r\n                  <li> named-checkzone zone파일명.com zone파일명.zone (com,zone순서대로 안하면 에러) </li>\r\n                  <li> <small> 위에 코드가 되지 않는다면 아래와 같이 입력 </small>\r\n                    <span className=\"sblock\">\r\n                      <li> cp /var/named/zone파일명.zone /var/named/chroot/var/named/ </li>\r\n                      <li> named-checkzone zone파일명.com zone파일명.zone (com,zone순서대로 안하면 에러) </li>\r\n                    </span>\r\n                  </li>\r\n                  {/*<li> named-checkzone zone파일명.rev.zone </li>*/}\r\n                  <li> 실행 - ncpa.cpl - 사용하는 네트워크(이더넷이나 와이파이) 우측 클릭 후 속성 - 2개 (인터넷프로토콜버전4,VMwareNetwork Adapter VMnet8)\r\n                    속성 -  기본설정 DNS 서버의 포트를 DNS설정(192.168.10.80)으로 전환 ,   </li>\r\n                  <li> systemctl enabled named </li>\r\n                  <li> systemctl restart named </li>\r\n                  <li> systemctl stop firewalld | setenforce 0 </li>\r\n                  {/*<li> vim /etc/resolv.conf <small> DNS 서버의 주소 IP를 설정 </small> </li>*/}\r\n                </li>\r\n                <li> <h3> CentOS</h3>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> <h3> Ubuntu </h3>\r\n                  <li>  </li>\r\n                </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> dns 서버 디렉토리 </span>\r\n              <span className=\"mblock\">\r\n                <li> <h3> bind(DNS서버 프로그램) </h3>\r\n                  <li> /etc/hosts </li>\r\n                  <li> /etc/resolv.conf </li>\r\n                  <li> /etc/named.conf : 환경설정 담당 파일 , 서버에서 사용하는 zone파일을 지정 </li>\r\n                  <li> /etc/named.rfc1912.zones : 사용자의 도메인 zone이 참조 </li>\r\n                  <li> /var/named : 루트도메인서버 정보가 담긴 파일(named.ca) 과 사용자가 선언하는 zone파일 등이 위치 </li>\r\n                  <li> /etc/rc.d/init.d/named : DNS서버 가동을 위한 스크립트, named 데몬을 제어 </li>\r\n                  <li> /var/named/named.empty : 도메인 데이터베이스 파일 양식 </li>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> dns 보안 </span>\r\n              <span className=\"mblock\">\r\n                <li> <h3> CentOS , zone파일 암호화키 생성 </h3>\r\n                  <li> /var/named/keys 폴더만들기 </li>\r\n                  <li> dnssec-keygen -a NSEC3RSASHA1 - r /dev/urandom -b 1024 -n ZONE test.com </li>\r\n                  <li> dnssec-keygen -a NSEC3RSASHA1 - r /dev/urandom -b 2048 -n ZONE -f KSK test.com </li>\r\n                  <li> DNS서버의 /var/named/test.zone 파일 내부에 아래 내용 추가\r\n                    <li> $INCLUDE /var/named/keys/test.com. +123+12345. key , # 공개키 붙여넣기(경로만 절대경로)   </li>\r\n                    <li> $INCLUDE /var/named/keys/test.com. +123+12345. key , # 공개키 붙여넣기(경로만 절대경로)  </li>\r\n                  </li>\r\n                  <li> dnssec-signzone -S -K /var/named/keys/ -3 96e920 -o test.com. /var/named/test.zone  </li>\r\n                  <li> /var/named/named.conf 에 가서 존 부분을 보면\r\n                    <li> file \"test.zone\"; 이 부분을 file \"test.zone.signed\"; 로 변경 </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  ssh 서버 <small> </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> ssh 서버 설명 </span>\r\n              <span className=\"mblock\">\r\n                <li> 포트 22번 </li>\r\n                <li> 암호화 방식 사용(텔넷 방식보다 좋은 이유) </li>\r\n                <li> 원격접속 서비스 </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> ssh 서버 설치</span>\r\n              <span className=\"mblock\">\r\n                <li> <h3> CentOS </h3>\r\n                  <li> 0. rpm -qa openssh-server # ssh 서버 설치 확인</li>\r\n                  <li> 0. systemctl status sshd  # sshd 데몬이 동작중인지 확인 </li>\r\n                  <li> 1. yum -y install openssh-server openssh-clients openssh-askpass </li>\r\n                  <li> 2. firewall-cmd --list-services # 방화벽 허용 리스트</li>\r\n                  <li> 3. firewall-cmd --permanent --zone=public --add-port=22/tcp # 22번 포트 방화벽 해제 </li>\r\n                  <li> 3. firewall-cmd --reload </li>\r\n                  <li> 4. systemctl start sshd </li>\r\n                  <li> 5. systemctl enable sshd </li>\r\n                  <li> 6. netstat -ntlp | grep sshd </li>\r\n                  <li> 7. service sshd status </li>\r\n                  <li> 8. vim /etc/ssh/sshd_config\r\n                    <li> Port 22 # 이 부분 주석해제 , 17번째 줄 </li>\r\n                  </li>\r\n                  <li> 9. 끝 </li>\r\n                </li>\r\n                <li> <h3> Ubuntu (미완성) </h3>\r\n                  <li> 0. dpkg --get-selections | grep ssh # ssh 서버 설치 확인 </li>\r\n                  <li> 0. service ssh status # sshd 데몬이 동작중인지 확인  </li>\r\n                  <li> 추가작성 필요~~ </li>\r\n                  <li> ufw allow 22/tcp  # 방화벽 허용 </li>\r\n                  <li> service ssh restart </li>\r\n                  <li> service ssh status </li>\r\n                  <li> netstat -ntlp | grep sshd </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> <h3>  </h3>\r\n                  <li>  </li>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> ssh 서버 디렉토리 </span>\r\n              <span className=\"mblock\">\r\n                <li> vim /etc/ssh/sshd_config  # ssh 설정 파일\r\n                  <li> Port 포트번호 # 포트번호 변경시 사용 </li>\r\n                  <li> PermitRootLogin yes # 루트 계정 로그인 허용 </li>\r\n                  <li> ListenAddress 0.0.0.0 # 모든 네트워크 접속 허용(그냥 주석으로 놔두기) </li>\r\n                  <li> ListenAddress IP #  네트워크 접속 허용(그냥 주석으로 놔두기) </li>\r\n                  <li> HostKey ~~~ # 호스트를 구분할 때 사용되는 공개키 </li>\r\n                  <li> UsePrivilegeSeparation yes # 권한 분리 설정 여부 </li>\r\n                  <li> LoginGraceTime  # 로그인 제한 시간 기본 120 </li>\r\n                  <li> PubkeyAuthentication yes # 공개키 사용 옵션 </li>\r\n                  <li> AuthorizedKeysFile # 공개키 사용시 저장 위치 </li>\r\n                  <li> PermitEmptyPasswords no # 패스워드 인증 시 비어있는 패스워드 허용 여부 </li>\r\n                  <li> PasswordAuthentication yes  #패스워드 인증 사용 여부 </li>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  raid 서버 <small> </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> raid 서버 설명 </span>\r\n              <span className=\"mblock\">\r\n                <li> 디스크의 용량이 부족할 때 데이터 손실 없이 증가 시킬 때 사용 </li>\r\n                <li> 여러개의 디스크를 배열하여 속도의 증대, 안정성의 증대, 효율성, 가용성의 증대를 하는데 사용 </li>\r\n                <li> 비용 절감 (하나의 좋은 하드디스크보다 여러개의 싼 디스크를 이어서 사용하면 좋음)  </li>\r\n                <li> 하드웨어 RAID (전문업체에서 만든 장비, 안정적이지만 비쌈)  </li>\r\n                <li> 소프트웨어 RAID (운영체제를 이용해서 사용하므로 저가) </li>\r\n                <li> 관련 용어:\r\n                  <li> 패리티: </li>\r\n                  <li> 마운트: 리눅스에서는 하드디스크나 USB를 인식하게 하기위해서는 마운트라는 작업을 해야함 </li>\r\n                  <li>  </li>\r\n                </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> raid의 종류 </span>\r\n              <span className=\"mblock\">\r\n                <li> 단순 불륨 (디스크 1개) </li>\r\n                <li> Linear RAID (컴퓨터처럼 하드, SSD 장착하는 것처럼 순서대로, 2개이상) </li>\r\n                <li> RAID0: 2개 이상 동시 저장 하는 방식, Stripping 방식, 공간(N)\r\n                  <li> 1개의 데이터를 여러개의 공간에 분산해서 저장하는 방식 </li>\r\n                  <li> 저장 속도가 빠른다.하지만 하나가 고장나면 원본 데이터의 손실이 발생하여 신뢰성이 적다.</li>\r\n                </li>\r\n                <li> RAID1: 2개 동시저장 느림, 결함 허용 제공, Mirroring 방식, 공간(N/2)\r\n                  <li> 1개의 데이터를 여러개의 공간에 복사해서 각각 저장 </li>\r\n                  <li> 데이터의 저장 용량이 2배 필요, 하나가 고장나도 원본데이터를 가지고 있어 신뢰성이 높음 </li>\r\n                  <li> 저장속도는 똑같음, 즉 데이터의 손실을 방지할 경우에 사용 </li>\r\n                </li>\r\n                <li> RAID5: 3개 이상, 결함 허용 제공, 공간 효율 좋음, 패리티 정보 사용, 공간(N-1)\r\n                  <li> 1개의 디스크 공간에는 나머지 다른 디스크에서 분산된 패리티 데이터를 조합한 값을 저장  </li>\r\n                  <li> 4개의 공간이 있다면 1 + 1 + 0 +?와 같이 이진수로 나누어서 데이터를 넣어서 총합이 짝수가 나오게 함\r\n                    그러므로?에는 0이 들어감  </li>\r\n                  <li> 위와 같이 조합을 하면 1개의 디스크가 고장나도 값을 유추할 수 있지만 2개가 고장나면 복구 불가 </li>\r\n                  <li> 속도는 raid1 {'<'} raid5 {'<'} raid0, 신뢰성 raid0 {'<'} raid5 {'<'} raid1 </li>\r\n                </li>\r\n                <li> RAID6: 4개 이상, RAID5의 개선, 결함 허용 제공, 중복 패리티 정보 사용, 공간(N-2)\r\n                  <li> 홀수 패리티와 짝수 패리티 2개의 공간을 이용해서 신뢰성을 보장하는 방법 </li>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> raid 서버 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> <h3> CentOS </h3>\r\n                  <li> CentOS 설정 하는 부분에서 ram은 2gb에서 3gb로 변경 </li>\r\n                  <li> Virtual Machine Settings에서 하드디스크(SCSI)가 1개 있으므로 아래\r\n                    add버튼 클릭해서 추가 - 하드디스크(SCSI) 5gb, Store virtual disk as a single file로 7개 추가하기  </li> <br />\r\n                  <li> ls -la /dev/sd* # 디스크 목록 보기 </li>\r\n                  <li> fdisk -l | more # 현재 디스크 및 파티션 확인 명령어 </li>\r\n                  <li> fdisk /dev/sdb # sdb디스크 설정하기\r\n                    <li> m: 명령어들의 목록을 보여줌 </li>\r\n                    <li> p: 파티션을 보여줌 </li>\r\n                    <li> n: 파티션을 생성 (p: 주 영역, e: 보조 영역), 섹터를 작게하면 신뢰성이 떨어짐\r\n                      섹터하나가 고장나면 전체가 고장 </li>\r\n                    <li> t: 파일 시스템을 변경 (l 을 입력해서 hex code보기), rd: (rinux raid auto) </li>\r\n                    <li> w: 현재 까지 설정한 내용을 저장 </li>\r\n                  </li>\r\n                  <li> sfdisk--help | grep '\\-d' </li>\r\n                  <li> sfdisk -d /dev/sdb </li>\r\n                  <li> sfdisk -d /dev/sdb {'>'} /tmp/sdb.tmp # 설정 파일 복사 </li>\r\n                  <li> sfdisk--force /dev/sdc {'<'} /tmp/sdb.dmp # sdc에 덮어쓰기 </li>\r\n                  <li> sfdisk--force /dev/sdd {'<'} /tmp/sdb.dmp # sdd에 덮어쓰기 </li>\r\n                  <li> sfdisk--force /dev/sde {'<'} /tmp/sdb.dmp # sde에 덮어쓰기 </li>\r\n                  <li> sfdisk--force /dev/sdf {'<'} /tmp/sdb.dmp # sdf에 덮어쓰기 </li>\r\n                  <li> sfdisk--force /dev/sdg {'<'} /tmp/sdb.dmp # sdg에 덮어쓰기 </li>\r\n                  <li> sfdisk--force /dev/sdh {'<'} /tmp/sdb.dmp # sdh에 덮어쓰기 </li> <br />\r\n\r\n                  <li> <h4> 레이드0 방식 </h4> </li>\r\n                  <li> mdadm --create /dev/md0 --level=0 --raid-devices=2 /dev/sdb1 /dev/sdc1 #\r\n                    레이드 공간을 2개를 사용, level: 레이드방식설정 </li>\r\n                  <li> mdadm--detail /dev/md0 # 만들어진 레이드공간을 본다</li>\r\n                  <li> cat /proc/mdstat # 레이드들에 대한 정보를 볼 수 있음 </li>\r\n                  <li> mkfs.ext4 /dev/md0 # 새로 만들어진 공간에 대해서도 리눅스가 아는 파일포맷 설정 </li>\r\n                  <li> mkdir /data1 </li>\r\n                  <li> mount /dev/md0 /data1 </li>\r\n                  <li> df -Th # 마운트가 된 리스트를 확인 </li> <br />\r\n                  <li> <h4> 레이드1 방식 </h4> </li>\r\n                  <li> mdadm --create /dev/md1 --level=1 --raid-devices=2 /dev/sdd1 /dev/sde1\r\n                    <li> 미러링을 할것이냐고 물음: Y </li>\r\n                  </li>\r\n                  <li> mkfs.ext4 /dev/md1 </li>\r\n                  <li> mkdir /data2 </li>\r\n                  <li> mount /dev/md1 /data2 </li> <br />\r\n\r\n                  <li> <h4> 레이드5 방식 </h4> </li>\r\n                  <li> mdadm --create /dev/md5 --level=5 --raid-devices=3 /dev/sdf1 /dev/sdg1 /dev/sdh1 </li>\r\n                  <li> mdadm --detail /dev/md5 # Consistency Policy 100% 가 된 후에 사용가능 </li>\r\n                  <li> mkfs.ext4 /dev/md5 </li>\r\n                  <li> mkdir /data3 </li>\r\n                  <li> mount /dev/md5 /data3 </li> <br />\r\n\r\n                  <li> <h4> 레이드6 방식 </h4> </li>\r\n                  <li> mdadm --create /dev/md6 --level=6 --raid-devices=4 /dev/sdb1 /dev/sdc1 /dev/sdd1 /dev/sde1 </li>\r\n                  <li> mdadm --detail /dev/md6 # Consistency Policy 100% 가 된 후에 사용가능 </li>\r\n                  <li> mkfs.ext4 /dev/md6 </li>\r\n                  <li> mkdir /data6 </li>\r\n                  <li> mount /dev/md6 /data6 </li> <br />\r\n\r\n                  <li> <h4> 레이드(1+0) 방식 </h4> </li>\r\n                  <li> mdadm --create /dev/md1 --level=1 --raid-devices=2 /dev/sdb1 /dev/sdc1 </li>\r\n                  <li> mdadm --create /dev/md2 --level=1 --raid-devices=2 /dev/sdd1 /dev/sde1 </li>\r\n                  <li> mdadm --detail /dev/md1 # Consistency Policy 100% 가 된 후에 사용가능 </li>\r\n                  <li> mdadm --detail /dev/md2 # Consistency Policy 100% 가 된 후에 사용가능 </li>\r\n                  <li> cat /proc/mdstat # 레이드가 묶인것을 확인 </li>\r\n                  <li> mdadm--create /dev/md10 --level=0 --raid-devices=2 /dev/md1 /dev/md2 </li>\r\n                  <li> mkfs.ext4 /dev/md10 </li>\r\n                  <li> mkdir /data10 </li> <br />\r\n                  <li> mount /dev/md1 #이거 왜하는거지? </li> <br />\r\n                  <li> mount /dev/md10 /data10 </li> <br />\r\n\r\n                  <li> 리눅스에서는 재부팅을 하면 마운트가 자동으로 풀려서 오토마운트라는 것을 사용해야됨 </li>\r\n                  <li> /etc/fstab 라는 곳을 보고 리눅스가 자동으로 마운트를 해준다.</li>\r\n                  <li> vi /etc/fstab\r\n                    <li> /dev/md0 /data1 ext4 defaults 0 0 # 위에 줄여 적혀있는 내용에 탭 간격으로 구분해주기!! </li>\r\n                    <li> /dev/md1 /data2 ext4 defaults 0 0  </li>\r\n                    <li> /dev/md5 /data3 ext4 defaults 0 0  </li>\r\n                  </li>\r\n                  <li> 이제부터 잘못하면 부팅이 안되므로 주의 </li>\r\n                  <li> mount -a # 입력해서 뭐가 나오면 잘못됨 그러므로 수정필요 </li>\r\n                  {/*  */}\r\n                  <li> cp /boot/vmlinuz ~~~~ /data1 </li>\r\n                  <li> cp /boot/vmlinuz ~~~~ /data2 </li>\r\n                  <li> cp /boot/vmlinuz ~~~~ /data3 </li>\r\n                  <li> shutdown -h now  </li>\r\n                  <li> 기존에 있는 하드디스크 중에 6번,4번,2번 하드디스크 삭제 </li>\r\n                  <li> 그리고 부팅하면 부팅이 안된다 (설정해놓은 마운트가 실행되야 되는데 망가져서 안되기 때문) </li>\r\n                  <li> 그러므로 실행을 하고 검은 화면에서 e 버튼을 누르면 안전모드로 부팅 가능 </li>\r\n                  <li> centos-root r\\o rd.lvm 부분을 centos-root r\\w rd.lvm으로 변경 </li>\r\n                  <li> swap rhgb quiet 부분을 swap init=\\bin\\bash 으로 변경 </li>\r\n                  <li> ctrl + x </li>\r\n                  <li> vi /etc/fastab\r\n                    <li> 마운트했던 부분들을 모두 #으로 주석처리하고 강제로 재부팅시키기(명령어가 안먹힘) </li>\r\n                  </li>\r\n                  <li> ls -la /dev/sd*  # 하드디스크를 순차적으로 인식하므로 sdh가 sde가 되어있다.</li>\r\n                  <li> cat /proc/mdstat </li>\r\n                  <li> madam--detail /dev/md0 </li>\r\n                  <li> madam--detail /dev/md1 </li>\r\n                  <li> madam--detail /dev/md5 </li>\r\n                  <li> madam--run /dev/md0 # 레이드0은 고장이나서 사용할 수 없다고 나옴 </li>\r\n                  <li> madam--run /dev/md1 </li>\r\n                  <li> madam--run /dev/md5 </li>\r\n                  <li> 다시 삭제한 만큼의 수의 디스크를 만든다.</li>\r\n                  <li> sfdisk--force /dev/sdb {'<'} /tmp/sdb.dmp </li>\r\n                  <li> sfdisk--force /dev/sdd {'<'} /tmp/sdb.dmp </li>\r\n                  <li> sfdisk--force /dev/sdf {'<'} /tmp/sdb.dmp </li>\r\n                  <li> ls -la /dev/sd* </li>\r\n                  <li> mdadm /dev/md1--add /dev/sdb1 </li>\r\n                  <li> madam--detail /dev/md1 # 100% 될 때 까지 확인 </li>\r\n                  <li> mdadm /dev/md5--add /dev/sdf1 </li>\r\n                  <li> madam--detail /dev/md5 # 100% 될 때 까지 확인 </li>\r\n                  <li> vi /etc/fastab\r\n                    <li> md1,md5에 주석처리를 한것을 해제 </li>\r\n                  </li>\r\n                  <li> mount -a # 에러가 없다면 성공 </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                  <li>  </li> <br />\r\n                </li>\r\n                <li> <h3> Ubuntu </h3>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> <h3>  </h3>\r\n                  <li>  </li>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> raid 서버 해제 </span>\r\n              <span className=\"mblock\">\r\n                <li> <h3> CentOS </h3>\r\n                  <li> cd / </li>\r\n                  <li> vi /etc/fstab # 마운트된것을 주석처리(해제가 되는것은 아님) </li>\r\n                  <li> mount -a  </li>\r\n                  <li> df -Th </li>\r\n                  <li> umount /dev/md1 # 마운트 해제</li>\r\n                  <li> umount /dev/md5 </li>\r\n                  <li> df -Th </li>\r\n                  <li> mdadm --misc --stop /dev/md0 # 강제적으로 동기화 중지 </li>\r\n                  <li> mdadm --stop /dev/md1 # 동기화 중지 </li>\r\n                  <li> mdadm --stop /dev/md5 </li>\r\n                  <li> fdisk -l | grep -v sda | grep sd </li>\r\n                  <li> cat /proc/mdstat # 현재 레이드를 볼 수 있음 </li>\r\n                  <li> mdadm --zero-superblock /dev/sdb1 </li>\r\n                  <li> mdadm --zero-superblock /dev/sdc1 </li>\r\n                  <li> mdadm --zero-superblock /dev/sdd1 </li>\r\n                  <li> mdadm --zero-superblock /dev/sde1 </li>\r\n                  <li> mdadm --zero-superblock /dev/sdf1 </li>\r\n                  <li> mdadm --zero-superblock /dev/sdg1 </li>\r\n                  <li> mdadm --zero-superblock /dev/sdh1 </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> <h3> Ubuntu </h3>\r\n                  <li>  </li>\r\n                </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> raid 서버 디렉토리 </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  mail 서버 <small> </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 메일 서버 설명 </span>\r\n              <span className=\"mblock\">\r\n                <li> SMTP(25번 포트) 프로토콜을 이용하여 메일서버로 보냄 </li>\r\n                <li> POP3 , IMAP 프로토콜을 이용하여 메일서버에서 받음 </li>\r\n                <li> MUA(Mail User Agent) : 유저 </li>\r\n                <li> MTA(Mail Transfer Agent) : 메일 서버 </li>\r\n                <li> MDA(Mail Delivery Agent) 메일 송신,수신 프로그램? </li>\r\n                <li> MRA(Mail Retrieval Agent) : 유저에게 메일을 전달해주는 프로그램(dovecot) </li>\r\n                <li> 메일 박스 : 메일을 보관하는 공간 </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 메일 서버 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> <h4> CentOS - Server (DNS서버 설정 필요) </h4>\r\n                  <span className=\"sblock\">\r\n                    <li> cd /var/named </li>\r\n                    <li> DNS 서버 설정에서 vi test.zone\r\n                      <li> $TTL 3H  </li>\r\n                      <li> 공백 @ SOA @ root. (20201111 1D 1H 1W 1H)  </li>\r\n                      <li> 공백 IN NS @  </li>\r\n                      <li> 공백 IN A 192.168.10.80  </li>\r\n                      <li> 공백 IN MX 10 (탭여백) mail.test.com.  </li>\r\n                      <li> mail IN A 192.168.10.80 </li>\r\n                    </li>\r\n                    <li> named-checkzone test.com test.zone </li>\r\n                    <li> cp test.zone linux.zone </li>\r\n                    <li> vi linux.zone\r\n                      <li> $TTL 3H  </li>\r\n                      <li> 공백 @ SOA @ root. (20201111 1D 1H 1W 1H)  </li>\r\n                      <li> 공백 IN NS @  </li>\r\n                      <li> 공백 IN A 192.168.10.80  </li>\r\n                      <li> 공백 IN MX 10 (탭여백) mail.linux.com.  </li>\r\n                      <li> mail IN A 192.168.10.111 # 클라이언트의 IP 주소를 적어야 함</li>\r\n                    </li> <br />\r\n                    <li> <h4> 메일 서버 설치 </h4> </li>\r\n                    <span className=\"mblock\">\r\n                      <li> yum -y install sendmail sendmail-cf dovecot </li> <br />\r\n                      <li> vi /etc/mail/sendmail.cf\r\n                        <li> Cwtest.com # 85번 째 줄 변경 </li>\r\n                        <li> O DaemonPortOptions=Port=smtp, Name=MTA # 264번째 addr 지워주기  </li>\r\n                      </li> <br />\r\n                      <li> systemctl restart sendmail </li> <br />\r\n                      <li> vi /etc/mail/access #접근 권한 설정\r\n                        <li> ssssksss.com                            RELAY </li>\r\n                        <li> linux.com                               RELAY </li>\r\n                        <li> 192.168.10                             RELAY </li>\r\n                      </li> <br />\r\n                      <li> {' makemap hash /etc/mail/access < /etc/mail/access'} # DB로 만들어서 사용해야함 </li>\r\n                      <li> ls -la /etc/mail </li>\r\n                      <li> cat /etc/mail/access.db # 새로 생성이 됨 </li>\r\n                      <li> strings /etc/mail/access.db # DB파일로 생성이 된것을 볼 수 있음</li> <br />\r\n                      <li> vi /etc/dovecot/conf.d/10-ssl.conf # 송수신하는 설정파일\r\n                        <li> ssl = required를 ssl = yes 로 변경 # 8번째 줄</li>\r\n                      </li> <br />\r\n                      <li> vi /etc/dovecot/conf.d/10-mail.conf\r\n                        <li> mail_location = mbox:~/mail:INBOX=/var/mail/%u # 25줄 주석해제, 메일이 저장되는 위치 </li>\r\n                        <li> mail_access_groups = mail # 121번째 줄 주석해제 및 수정 </li>\r\n                        <li> lock_method = fcntl # 166번째 줄 주석해제 </li>\r\n                      </li> <br />\r\n                      <li> vi /etc/dovecot/conf.d/10-auth.conf\r\n                        <li> disable_plaintext_auth = no # 평문으로 보내지 못하게 하는 설정 , SSH설정이 복잡해서 일단 넘어감 </li>\r\n                      </li> <br />\r\n                      <li> vi /etc/hostname\r\n                        <li> localhost.localdomain 삭제하고 mail.test.com 추가 </li>\r\n                      </li> <br />\r\n                      <li> vi /etc/mail/local-host-names\r\n                        <li> 주석내용 삭제하고 mail.test.com 추가 </li>\r\n                      </li> <br />\r\n                      <li> vi /etc/sysconfig/network\r\n                        <li> HOSTNAME=mail.test.com </li>\r\n                      </li> <br />\r\n                      <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33  # 네트워크 설정 파일\r\n                        <li> DNS1=192.168.10.80 # 본인의 IP주소로 변경 </li>\r\n                      </li> <br />\r\n                      <li> useradd service </li>\r\n                      <li> echo -e \"1234\\n1234\" | passwd service </li>\r\n                      <li> systemctl restart named </li>\r\n                      <li> systemctl restart sendmail </li>\r\n                      <li> systemctl restart dovecot </li>\r\n                      <li> systemctl enable named </li>\r\n                      <li> systemctl enable sendmail </li>\r\n                      <li> systemctl enable dovecot </li>\r\n                      <li> systemctl disable firewalld # 포트를 개방할 것이 너무 많아서 그냥 중단 </li>\r\n                      <li> setenforce 0  # se리눅스 끄기</li>\r\n                      <li> systemctl restart network </li>\r\n                      <li> cat /etc/resolv.conf # 본인의 네임서버  확인 </li>\r\n                      <li> 끝 , 이제 클라이언트 설정 </li> <br />\r\n                    </span>\r\n                  </span>\r\n                </li>\r\n                <li> <h4> CentOS - Client  </h4>\r\n                  <span className=\"sblock\">\r\n                    <li> <h4> 메일 서버 설치 </h4> </li>\r\n                    <li> yum -y install thunderbird </li>\r\n                    <li> yum -y install sendmail sendmail-cf dovecot </li> <br />\r\n                    <li> vi /etc/mail/sendmail.cf\r\n                      <li> Cwlinux.com # 85번 째 줄 변경 </li>\r\n                      <li> O DaemonPortOptions=Port=smtp, Name=MTA # 264번째 addr 지워주기 </li>\r\n                    </li> <br />\r\n                    <li> vi /etc/mail/access\r\n                      <li> test.com RELAY </li>\r\n                      <li> linux.com RELAY </li>\r\n                      <li> 192.168.10 RELAY </li>\r\n                    </li> <br />\r\n                    <li> {' makemap hash /etc/mail/access < /etc/mail/access '} </li>\r\n                    <li> strings /etc/mail/access.db </li>\r\n                    <li> vi /etc/dovecot/conf.d/10-ssl.conf # 송수신하는 설정파일\r\n                      <li> ssl = required를 ssl = yes 로 변경 # 8번째 줄</li>\r\n                    </li> <br />\r\n                    <li> vi /etc/dovecot/conf.d/10-mail.conf\r\n                      <li> mail_location = mbox:~/mail:INBOX=/var/mail/%u # 25줄 주석해제, 메일이 저장되는 위치 </li>\r\n                      <li> mail_access_groups = mail # 121번째 줄 주석해제 및 수정 </li>\r\n                      <li> lock_method = fcntl # 166번째 줄 주석해제 </li>\r\n                    </li> <br />\r\n                    <li> vi /etc/dovecot/conf.d/10-auth.conf\r\n                      <li> disable_plaintext_auth = no # 10번째 줄 평문으로 보내지 못하게 하는 설정 , SSH설정이 복잡해서 일단 넘어감 </li>\r\n                    </li> <br />\r\n                    <li> vi /etc/hostname\r\n                      <li> localhost.localdomain 삭제하고 mail.linux.com 추가 </li>\r\n                    </li> <br />\r\n                    <li> vi /etc/mail/local-host-names\r\n                      <li> 주석내용 삭제하고 mail.linux.com 추가 </li>\r\n                    </li> <br />\r\n                    <li> vi /etc/sysconfig/network\r\n                      <li> HOSTNAME=mail.linux.com </li>\r\n                    </li> <br />\r\n                    <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33  # 네트워크 설정 파일\r\n                      <li> DNS1=192.168.10.80 # 본인이 만든 DNS서버의 IP주소로 변경 </li>\r\n                    </li> <br />\r\n                    <li> useradd admin </li>\r\n                    <li> echo -e \"1234\\n1234\" | passwd admin </li>\r\n                    <li> systemctl restart sendmail </li>\r\n                    <li> systemctl restart dovecot </li>\r\n                    <li> systemctl enable sendmail </li>\r\n                    <li> systemctl enable dovecot </li>\r\n                    <li> systemctl disable firewalld  </li>\r\n                    <li> systemctl stop firewalld | setenforce 0 </li>\r\n                    <li> systemctl restart network </li>\r\n                    <li> cat /etc/resolv.conf # 본인의 네임서버 주소 확인 </li>\r\n                    <li> 끝 </li> <br />\r\n                    <li> thunderbird &amp; # 시간이 조금 걸림 </li>\r\n                    <li> server에 service라는 계정으로 접속\r\n                      <span className=\"mblock\">\r\n                        <li> 이름 : service </li>\r\n                        <li> 메일주소 : service@test.com </li>\r\n                        <li> 비밀번호 : 1234 </li>\r\n                        <li> 수동으로 구성 클릭 </li>\r\n                      </span>\r\n                      <span className=\"mblock\">\r\n                        <li> 프로토콜 : POP3 </li>\r\n                        <li> 서버 : mail.test.com , mail.test.com </li>\r\n                        <li> 포트 : 110 , 25 </li>\r\n                        <li> SSL : 암호화 안함 , 암호화 안함 </li>\r\n                        <li> 인증 방법 : 평문 비밀번호 , 인증 없음 </li>\r\n                        <li> 아이디 : service </li> <br />\r\n                        <li> 접속이 되지 않는 다면 nslookup mail.ssssksss.com 해보기\r\n                          <li> 서버의 방화벽 제거 , 서버로 이동 , systemctl stop firewalld | setenforce 0 </li>\r\n                          <li> 유저가 추가되있지 않아서 해결이 안되어 있을 수도 있음 </li>\r\n                        </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> 좌측에 이메일 계정 우측클릭 설정 - 좌측 하단에 계정작업 - 메일 계정 추가\r\n                      <span className=\"mblock\">\r\n                        <li> 이름 : admin </li>\r\n                        <li> 메일주소 : admin@linux.com </li>\r\n                        <li> 비밀번호 : 1234 </li>\r\n                        <li> 수동으로 구성 클릭 </li>\r\n                      </span>\r\n                      <span className=\"mblock\">\r\n                        <li> 프로토콜 : POP3 </li>\r\n                        <li> 서버 : mail.linux.com , mail.linux.com </li>\r\n                        <li> 포트 : 110 , 25 </li>\r\n                        <li> SSL : 암호화 안함 , 암호화 안함 </li>\r\n                        <li> 인증 방법 : 평문 비밀번호 , 인증 없음 </li>\r\n                        <li> 아이디 : admin </li> <br />\r\n                        <li> 접속이 되지 않는 다면 nslookup mail.linux.com 해보기\r\n                          <li> 클라이언트의 방화벽 제거 , systemctl stop firewalld | setenforce 0 </li>\r\n                          <li> 유저가 추가되있지 않아서 해결이 안되어 있을 수도 있음 </li>\r\n                        </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> 좌측에 계정이 2개 있는 것을 볼 수 있음 </li>\r\n                    <li> 좌측에 계정이 2개 있는 것을 볼 수 있음 , 보내기를 테스트 해보고 안된다면 서버 재시작 </li>\r\n                    <li> 양쪽 서버에 setenforce 0  </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\"> 메일 서버 디렉토리 </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  Repositoy 서버(미완성) <small> </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li> yum -y install createrepo # 저장소 생성을 위한 패키지 </li>\r\n                <li> yum -y install httpd # 웹서버를 이용해서 rpm파일을 배포하기위해 httpd서버 설치 </li>\r\n                <li> mkdir -p /app/repo  </li>\r\n                <li> createrepo /app/repo # rpm파일을 yum을 통해 배포할수 있는 공간으로 지정 </li>\r\n                <li> ls -la  /app/repo/repodata # 의존성에 대한 다양한 정보가 보관된다고 이해 </li>\r\n                <li> vi /etc/httpd/conf/httpd.conf\r\n                  <div className=\"sblock\">\r\n                    <li> 제일 마지막 줄에 추가 </li>\r\n                    <li> <a href=\"https://httpd.apache.org/docs/2.4/en/mod/core.html#directory\"\r\n                      target=\"_blank\" rel=\"noopener noreferrer\"> Directory 아파치 문서 참조 </a> </li> <br />\r\n                    <li> Alias /repo \"/app/repo\" # 도메인/repo 으로이동하면 /app/repo로 이동하라는 의미  </li>\r\n                    <li> {' <Directory \"/app/repo\"> '}\r\n                      <li> {' \tOptions FollowSymLinks '} </li>\r\n                      <li> {' \tDirectoryIndex index.html index.jsp *.jsp '} </li>\r\n                      <li> {' \tOrder allow,deny '} # 모두 접근 허용 </li>\r\n                      <li> {' \tAllow from all '} # 모두 접근 허용 </li>\r\n                      <li> {' \tRequire all granted '} # 모두 접근 가능하게 하겠다. </li>\r\n                    </li>\r\n                    <li> {' </Directory> '} </li>\r\n                  </div>\r\n                </li>\r\n                <li> systemctl stop firewalld | setenforce 0 </li>\r\n                <li> systemctl start httpd </li>\r\n                <li> cd /app/repo </li>\r\n                <li> yum install --downloadonly --downloaddir=/app/repo vsftpd # 다운만받고 설치까지는 하지 않음 </li>\r\n                <li> yum install --downloadonly --downloaddir=/app/repo net-snmp # 다운만받고 설치까지는 하지 않음 </li>\r\n                {/*<li> cp /root/rpmbuild/RPMS/x86_64/hello-1.0.0-1.el7.x86_64.rpm /app/repo #개인적으로 만든 rpm파일 </li>*/}\r\n                <li> ls -la </li>\r\n                <li> 인터넷에서 URL에 localhost/repo/파일명.rpm # 인터넷창 아래쪽에 다운이 되면 성공\r\n                  <div className=\"sblock\">\r\n                    <li> You don't have permission to access ~~~ 에러 발생</li>\r\n                    <li> 1. 아파치가 접근 할 수 있는 권한 문제 , 경로에 읽기 권한이 있는지 한번 확인 </li>\r\n                    <li> 2. 만약에 되지 않는 다면 vi /etc/httpd/conf/httpd.conf\r\n                      <li> 104번 째 줄 </li>\r\n                      <li> #Require all denied # 주석처리해주고 </li>\r\n                      <li> Require all granted # 내용을 추가해준다. </li>\r\n                    </li>\r\n                  </div>\r\n                </li>\r\n                <li> createrepo --update /app/repo # rpm파일들이 있다고 repodata에 알려주어야 한다. </li>\r\n                <li> yum clean all </li>\r\n                <li> ls -la /etc/yum.repos.d/ # yum install 사이트들의 목록을 가지고 있는 공간 </li>\r\n                <li> cat CentOS-Base.repd # 그중에 하나 열어보면 다운로드 받는 경로들의 위치가 있다는 것을 보여준다. </li>\r\n                {/* 여기까지 진행함 1:57:00 강의 참고 */}\r\n                <li> mkdir /etc/yum.repos.d/backup  </li>\r\n                <li> mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup/ #기존에 있던 yum 다운 지원을 하는 repo파일을 다른곳으로 옮김 </li>\r\n                <li> yum -y install vsftpd # 에러가 발생함 이유는 다운받는 repo 경로가 하나도 없음 </li>\r\n                <li> vi repo-server.repo  # repo 서버를 만듬\r\n                  <div className=\"sblock\">\r\n                    <li> [repo-server] </li>\r\n                    <li> name=Repository Server </li>\r\n                    <li> {' baseurl=file:///app/repo '} </li>\r\n                    <li> enabled=1 </li>\r\n                    <li> gpgcheck=0 </li>\r\n                  </div>\r\n                </li>\r\n                <li> yum clean all </li>\r\n                <li> yum install net-snmp # 기존에 사용하던 yum파일들이 모여있는 경로는 없지만\r\n                  아까 /app/repo 파일에 다운을 받아놓았기 때문에 설치가 가능   </li> <br />\r\n                <li> 클라이언트 CentOS 열기 - 레포지토리서버에서 받아오기 테스트\r\n                  <li> cd /etc/yum.repos.d/ </li>\r\n                  <li> mkdir /etc/yum.repos.d/backup </li>\r\n                  <li> mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup </li>\r\n                  <li> vi repo-server.repo\r\n                    <div className=\"sblock\">\r\n                      <li> [repo-server] </li>\r\n                      <li> name=Repository Server </li>\r\n                      <li> {' baseurl=file://192.168.10.80/repo '} </li>\r\n                      <li> enabled=1 </li>\r\n                      <li> gpgcheck=1 </li>\r\n                    </div>\r\n                  </li>\r\n                  <li> yum clean all </li>\r\n                  <li> 만약 yum lock이 있다면 , 반복 시도\r\n                    <div className=\"sblock\">\r\n                      <li> ps -ef | grep yum | grep -v grep | awk '{'{'}print $2{'}'}' | xargs kill -9 2{'>'}/dev/null </li>\r\n                    </div>\r\n                  </li>\r\n                  <li> cat /root/RPM-GPG-KEY 의 내용을 모두 복사 </li>\r\n                  <li> vi /tmp/key 에 복사한 내용을 넣어주기 </li>\r\n                  <li> yum install net-snmp # 설치할 필요는 없음 , 되는지만 확인 안되면\r\n                    <li> vi repo-server.repo 에 가서 gpgcheck=0으로 변경 </li>\r\n                  </li>\r\n                  <li> rpm --import /tmp/key # 공개키를 임포트를 함 </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </li>\r\n                <li> <div className=\"sstitle\"> 의존성을 고려한 파일 만들고 배포하기 </div> </li>\r\n                <li> yum deplist net-snmp | grep \"dependency:\" # net-snmp 파일에 필요한 의존성파일들을 볼 수 있는 방법 </li>\r\n                <li> cd /app/script </li>\r\n                <li> vi lyum.sh\r\n                  <div className=\"sblock\">\r\n                    <li> #!/bin/bash </li>\r\n                    <li> yum install --downloadonly --downloaddir=/app/repo $1 #매개변수를 전달하여 의존성 파일 다운 </li>\r\n                    <li> yum reinstall --downloadonly --downloaddir=/app/repo $1 #이미 파일이 깔려있어도 다운받게 한다 </li>\r\n                    <li> yum deplist $1 | grep \"dependency:\" | awk '{'{print $2}'}' | awk -F \"(\" '{'{print $1}'}' | xargs\r\n                      yum install --downloadonly --downloaddir=/app/repo  </li>\r\n                    <li> yum deplist $1 | grep \"dependency:\" | awk '{'{print $2}'}' | awk -F \"(\" '{'{print $1}'}' | xargs\r\n                      yum reinstall --downloadonly --downloaddir=/app/repo  </li>\r\n                    <li> createrepo --update /app/repo # repodata라는 db파일에 어떠한 rpm파일들이 있는지 알수 있는 공간인데\r\n                      이 공간에 업데이트\r\n                    </li>\r\n                    <li> yum clean all </li>\r\n\r\n                  </div>\r\n                </li>\r\n                <li> chmod 755 lyum/sh </li>\r\n                <li> /app/script/lyum.sh net-snmp </li>\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n              {/*  */}\r\n            </span>\r\n          </details>\r\n        </span>\r\n\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  PXE 서버 <small> </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 설명 </span>\r\n              <span className=\"mblock\">\r\n                <li> 여러대의 컴퓨터의 프로그램을 동시에 설치하는 방법 </li>\r\n                <li> DHCP, TFTP , syslinux 부팅파일, FTP나 웹서버  </li>\r\n                <li>  </li>\r\n              </span>\r\n              <span className=\"sstitle\"> 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> ps -ef | grep yum | grep -v grep | awk '{'{print $2}'}' | xargs kill -9 2{'>'}/dev/null  </li>\r\n                <li> yum -y install syslinux tftp-server vsftpd dhcp xinetd  </li>\r\n                {/* 여기까지 진행 */}\r\n                <li> vi /etc/dhcp/dhcpd.conf\r\n                  <li> subnet 192.168.10.0 netmask 255.255.255.0 {'{'}\r\n                    <li> option routers 192.168.10.2;  </li>\r\n                    <li> option subnet-mask 255.255.255.0;  </li>\r\n                    <li> range dynamic-bootp 192.168.10.30 192.168.10.50;  </li>\r\n                    <li> option domain-name-servers 8.8.8.8;  </li>\r\n                    <li> allow booting;  </li>\r\n                    <li> allow bootp;  </li>\r\n                    <li> next-server 192.168.10.80;  </li>\r\n                    <li> filename \"pxelinux.0\";  </li>\r\n                  </li>\r\n                  <li> {'}'}  </li>\r\n                </li>\r\n                <li> systemctl restart dhcpd </li>\r\n                <li> vim /etc/xinetd.d/tftp\r\n                  <li> disable = yes 를 disable = no로 변경 </li>\r\n                </li>\r\n                <li> df # 현재 마운트 목록을 보여줌  </li>\r\n                <li> USB 등이 꽂혀있는 공간을 삭제하고 다시 만들기 </li>\r\n                <li> umount /dev/cdrom # 연결 usb가 꽂혀 있는 공간을 비움 </li>\r\n                <li> mkdir /mnt/cdrom </li>\r\n                <li> mount /dev/cdrom /mnt/cdrom # /dev/cdrom 에 있는 것을 /mnt/cdrom 마운트 한다.\r\n                  <li> mount: no medium found on /dev/sr0 이렇게 나온다면 꽂혀있는 CD가 없다는 이야기</li>\r\n                  <li> 좌측에 실행중인 CentOS 우측클릭 - Settings - CD/DVD - Connected 체크 </li>\r\n                </li>\r\n                <li> df </li>\r\n                <li> umount /dev/cdrom  </li>\r\n                <li> mount /dev/cdrom /mnt/cdrom  </li>\r\n                <li> ls -la /mnt/cdrom </li>\r\n                <li> cp -r /mnt/cdrom/* /var/ftp/pub # 시간 오래걸림 </li>\r\n                <li> ls -la /var/ftp/pub </li>\r\n                <li> umount /dev/cdrom </li>\r\n                <li> chmod 777 /var/ftp/pub </li>\r\n                <li> ls -la /var/lib/tftpboot </li>\r\n                <li> cp /var/ftp/pub/images/pxeboot/vmlinuz /var/lib/tftpboot/ </li>\r\n                <li> cp /var/ftp/pub/images/pxeboot/initrd.img /var/lib/tftpboot/ </li>\r\n                <li> cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/ </li>\r\n                <li> mkdir /var/lib/tftpboot/pxelinux.cfg </li>\r\n                <li> cd /var/lib/tftpboot/pxelinux.cfg/ </li>\r\n                <li> vim default\r\n                  <div className=\"sblock\">\r\n                    <li> DEFAULT CentOS7_Auto_Install # pxe서버에서 기본적으로 설치할 파일</li>\r\n                    <li> LABEL CentOS7_Auto_Install # 설치할 파일에 대한 내용\r\n                      <li> kernel vmlinuz </li>\r\n                      <li> APPEND initrd=initrd.img repo=ftp://192.168.10.80/pub </li>\r\n                    </li>\r\n                  </div>\r\n                </li>\r\n                <li> ps -ef | grep dnsmasq # 기본적으로 설치하지 않아도 실행되는 dhcp서버 </li>\r\n                <li> kill -9 1955 # 사람마다 다름 </li>\r\n                <li> systemctl restart dhcpd  </li>\r\n                <li> systemctl restart vsftpd </li>\r\n                <li> systemctl restart xinetd </li>\r\n                <li> systemctl enable dhcpd   </li>\r\n                <li> systemctl enable vsftpd  </li>\r\n                <li> systemctl enable xinetd  </li>\r\n                <li> systemctl stop firewalld | setenforce 0 </li>\r\n                <li> systemctl disable firewalld  </li>\r\n                <li> Virtual Network Editor에서 Use local DHCP service to distribute IP address to VMs 체크해제\r\n                  # 사용하고 있는 dhcp 끄기 </li>\r\n                <li> 새롭게 PXE_Client CentOS를 생성 , 단 CD ROOM은 넣지 않고 설치하면 설치가 가능 </li>\r\n                <li> 전부 설치하지 말고 언어 설정 나오면 잠시 중지 </li>\r\n                <li> 이제 언어 등 설정까지 다 해주는 킥스타트  </li>\r\n                <li> yum -y install system-config-kickstart system-config-keyborard </li>\r\n                <li> system-config-kickstart\r\n                  <div className=\"sblock\">\r\n                    <li> 기본설정 - 언어 - 한국어 </li>\r\n                    <li> 기본설정 - 시간대 - Asia/Seoul </li>\r\n                    <li> 기본설정 - 암호 - P@ssw0rd! </li>\r\n                    <li> 기본설정 - 고급설정 - \"설치후 시스템 재부팅\" 체크 </li>\r\n                    <li> 설치 방법 - FTP - FTP 서버 192.168.10.80 </li>\r\n                    <li> 설치 방법 - FTP - FTP 디렉토리 : pub </li>\r\n                    <li> 부트로더 옵션 - 설치유형 - 새로운 부트로더 설치 </li>\r\n                    <li> 파티션 정보 - 마스터 부트 레코드 - 마스터 부트 레코드 내용 삭제 , 디스크레이블 - 디스크레이블 초기화 </li>\r\n                    <li> 파티션 정보 - 디스크레이블 - 디스크레이블 초기화 </li>\r\n                    <li> 파티션 정보 - 레이아웃 추가 - 파일시스템 유형 swap , 크기옵션 수정된용량 2048  </li>\r\n                    <li> 파티션 정보 - 레이아웃 추가 - 마운트할 지점 / , 크기옵션 사용안된 디스크 공간 모두 채움  </li>\r\n                    <li> 좌측 상단 - 파일 - 저장 - 파일시스템 - var - ftp - centos.ks 라는 파일로 저장 </li>\r\n                    <li> 좌측 상단 - 파일 - 끝내기 </li>\r\n                  </div>\r\n                </li>\r\n                <li> cd /var/ftp </li>\r\n                <li> ls -la . </li>\r\n                <li> vi centos.ks\r\n                  <div className=\"sblock\">\r\n                    <li> 제일 아래에 아래내용 추가 </li>\r\n                    <li> %packages </li>\r\n                    <li> @base </li>\r\n                    <li> @core </li>\r\n                    <li> @directory-client </li>\r\n                    <li> @fonts </li>\r\n                    <li> @gnome-desktop </li>\r\n                    <li> @input-methods </li>\r\n                    <li> @internet-browser </li>\r\n                    <li> @java-platform </li>\r\n                    <li> @multimedia </li>\r\n                    <li> @network-file-system-client </li>\r\n                    <li> @x11 </li>\r\n                    <li> %end </li>\r\n                  </div>\r\n                </li>\r\n                <li> vim /var/lib/tftpboot/pxelinux.cfg/default\r\n                  <li> 192.168.10.80/pub 뒤쪽에 ks=ftp://192.168.10.80/centos.ks 추가 </li>\r\n                </li>\r\n                <li> systemctl restart dhcpd  </li>\r\n                <li> systemctl restart vsftpd </li>\r\n                <li> systemctl restart xinetd </li>\r\n                <li> 그리고 다시 미설치된 PXE_Client CentOS 재실행 </li>\r\n                <li> root , P@ssw0rd! 입력 </li>\r\n              </span>\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  svn 서버\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 설명 </span>\r\n              <span className=\"mblock\">\r\n                <li> git 이전의 사용하던 형상관리 서버 </li>\r\n                <li>  </li>\r\n              </span>\r\n              <span className=\"sstitle\"> 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> yum install -y subversion </li>\r\n                <li> mkdir -p /app/repo/svn </li>\r\n                <li> vim /etc/sysconfig/svnserve\r\n                  <div className=\"sblock\">\r\n                    <li> OPTIONS=\"-r /var/svn\" 을 \"--threads --root /app/repo/svn\" 으로 변경 </li>\r\n                  </div>\r\n                </li>\r\n                <li> firewall-cmd --permanent --zone=public --add-port=3690/tcp </li>\r\n                <li> firewall-cmd --reload </li>\r\n                <li> cd /app/repo/svn </li>\r\n                <li> mkdir proj1 </li>\r\n                <li> cd proj1 </li>\r\n                <li> svnadmin create --fs-type fsfs /app/repo/svn/proj1 </li>\r\n                <li> ls -la </li>\r\n                <li> cd conf </li>\r\n                <li> vi svnserve.conf\r\n                  <div className=\"sblock\">\r\n                    <li> 19번째 줄 주석해제하고 anon-access = read 를 anon-access = none 로 변경 </li>\r\n                    <li> 20번째 줄 주석해제 anon-access = write </li>\r\n                    <li> 27번째 줄 주석해제 password-db = passwd </li>\r\n                    <li> 34번째 줄 주석해제 authz-db = authz </li>\r\n                    <li> 39번째 줄 주석해제 realm = My First Repository 를 project1 으로 변경 </li>\r\n                  </div>\r\n                </li>\r\n                <li> vi passwd\r\n                  <div className=\"sblock\">\r\n                    <li> test = P@ssw0rd! # 내용 추가 </li>\r\n                  </div>\r\n                </li>\r\n                <li> vi authz\r\n                  <div className=\"sblock\">\r\n                    <li> {'[/]'} </li>\r\n                    <li> test = rw </li>\r\n                  </div>\r\n                </li>\r\n                <li> systemctl restart svnserve </li>\r\n                <li> systemctl stop firewalld | setenforce 0 </li>\r\n                <li> chkconfig svnserve on </li>\r\n                <li> 윈도우에서 구글에 tortoisesvn 검색 </li>\r\n                <li> <a href=\"https://osdn.net/projects/tortoisesvn/storage/1.14.1/Application/TortoiseSVN-1.14.1.29085-x64-svn-1.14.1.msi/\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\"> tortoisesvn 64비트 1.14.1 다운로드 사이트 </a> </li>\r\n                <li> <a href={process.env.PUBLIC_URL + '/Download/TortoiseSVN-1.14.1.29085-x64-svn-1.14.1.msi'}\r\n                  download=\"TortoiseSVN-1.14.1.29085-x64-svn-1.14.1.msi\" > TortoiseSVN-1.14.1.29085-x64-svn-1.14.1.msi </a> </li>\r\n                <li> msi 설치 </li>\r\n                <li> svn1 snv2 새폴더 2개 만들기 </li>\r\n                <li> svn1 폴더 우측클릭해서 SVN Checkout 클릭 </li>\r\n                <li> URL에 svn://192.168.10.80/proj1 </li>\r\n                <li> test , P@ss0wrd! 입력하기 </li>\r\n                <li> 윈도우 검색에 TortoiseSVN Repository Browser 실행 </li>\r\n                <li> 윈도우에서 svn1 폴더로 가서 README.txt 파일 만들고 svn1 폴더 우측클릭하고 SVN Commit 클릭 </li>\r\n                <li> svn2 폴더 우측클릭해서 SVN Checkout 클릭 </li>\r\n                <li> svn2 폴더 우측클릭해서 update 하면 svn1폴더에서 작성했던 README.txt 파일이 생성되는 것을 볼 수 있다. </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className='stitle'>  Kerberos 서버\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 설명 </span>\r\n              <span className=\"mblock\">\r\n                <li> 커버로스에서 나온 유래 , 문지기 </li>\r\n                <li> 인증을 처리해주는 서버 </li>\r\n                <li> kDC서버에서 인증, 승인을 처리하고 신분 증명서를 발급 해주는 서버 </li>\r\n                <li> <a href=\"https://web.mit.edu/kerberos/krb5-devel/doc/index.html\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\"> 커버로스 공식문서 </a> </li>\r\n                <li> <span className='sstitle'> 티켓에 담긴 정보 </span>\r\n                  <div className=\"sblock\">\r\n                    <li> 유저 아이디 </li>\r\n                    <li> 유저 호스트 IP 주소 </li>\r\n                    <li> 타임 스탬프 ( 시간 기록 ) </li>\r\n                    <li> 티켓 수명 </li>\r\n                    <li> 세션 키 </li>\r\n                  </div>\r\n                </li>\r\n                <li> <span className='sstitle'> 커버로스 동작 과정 </span>\r\n                  <div className=\"sblock\">\r\n                    <li> AS서버는 TGS비밀키를 알고있고, TGS서버는 SS의비밀키를 알고 있다 </li>\r\n                    <li> 1. 유저가 암호화 되지 않는 아이디를 AS서버에 보낸다. </li>\r\n                    <li> 2. AS서버에서 DB에 저장된 아이디가 유효하면 DB에 저장되어 있는 사용자의 PW로 암호화한 TGS 세션키를 생성 </li>\r\n                    <li> 3. AS서버에서 사용자의PW암호화된TGS세션키( enc_key : 사용자의 PW 비밀키 , enc_data : TGS 세션키 ) , TGT( enc_key : TSG비밀키 , enc_data : 유저ID,주소,유효시간,TGS세션키) 을 발송</li>\r\n                    <li> 4. 사용자가 받은 TGS세션키를 사용자PW를 이용하여 복호화하여 TGS세션키를 얻을 수 있음 </li>\r\n                    <li> 5. 사용자가 Authenticator( enc_key : TGS 세션키 , enc_data : 유저ID,타임스탬프 ) , TGT( enc_key : TSG비밀키 , enc_data : 유저ID,주소,유효시간,TGS세션키) 을 발송</li>\r\n                    <li> 6. TGS서버에서(Ticket Granting Service) Authenticator와 TGT 정보를 이용해서 TGS 세션키를 이용해 SS 세션키를 생성  </li>\r\n                    <li> 7. TGS서버에서 사용자에게 사용자의TGS로암호화된SS세션키(enc_key : TGS세션키 , enc_data : SS세션키) , Ticket(enc_key : SS비밀키 , enc_data : 유저ID,주소,유효기간,SS세션키) 을 발송 </li>\r\n                    <li> 8. 사용자가 TGS세션키를 이용해서 SS세션키를 얻어냄 </li>\r\n                    <li> 9. 사용자가 Authenticator( enc_key : SS 세션키 , enc_data : 유저ID,주소,타임스탬프 ) , Ticket( enc_key : SS비밀키 , enc_data : 유저ID,주소,유효시간,SS세션키)를 실제 서비스 서버에 보낸다. </li>\r\n                    <li> 10. 서비스 서버에서는 티켓이 있으니 접근을 허용 </li>\r\n                  </div>\r\n                </li>\r\n                <li> <span className='sstitle'> 커버로스 단점 </span>\r\n                  <div className=\"sblock\">\r\n                    <li> 서버가 다운되면 기존 유저들을 제외한 나머지는 로그인 불가 </li>\r\n                    <li> AS,TGS,SS 가 비밀키를 서로 알고 있어야 하는 문제점 </li>\r\n                    <li> 티겟이 유저에게 보관이 되므로 탈취가 될 가능성이 존재 </li>\r\n                    <li>  </li>\r\n                  </div>\r\n                </li>\r\n              </span>\r\n              <details>\r\n                <summary className=\"sstitle\"> 명령어 </summary>\r\n                <span className=\"mblock\">\r\n                  <span className=\"sstitle\"> kdb5_util 명령어 </span>\r\n                  <span className=\"sblock\">\r\n                    <li> kdb5_util create -r TEST.COM -s # 커버로스DB영역 생성하고 실행 , -s : stash 파일 생성 , -r : 인증영역을 지정  , 이미 존재하면 실패 </li>\r\n                    <li> kdb5_util [-f] destroy -r TEST.COM # 커버로스DB영역 삭제 </li>\r\n                    <li>  </li>\r\n                  </span>\r\n                  <li>  </li>\r\n                </span>\r\n              </details>\r\n              <span className=\"sstitle\"> 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> hostname # 리눅스 시스템의 이름을 확인</li>\r\n                <li> hostnamectl --static set-hostname kdc.test.com # --static 대소문자 구분, 서버의 이름 변경 </li>\r\n                <li> yum -y install bind bind-chroot # dns 서버 설치 , 테스트 해보려고? </li>\r\n                <li> vi /etc/named.conf\r\n                  <div className=\"sblock\">\r\n                    <li> 127.0.0.1을 any로 변경 # 13번 째 줄 </li>\r\n                    <li> ::1을 none로 변경 # 14번 째 줄 </li>\r\n                    <li> localhost를 any로 변경 # 21번 째 줄 </li>\r\n                    <li> zone \"test.com\" IN {'{'} 59번 째 줄\r\n                      <li> type master; </li>\r\n                      <li> file \"test.zone\"; </li>\r\n                      <li> allow-update {'{none;};'} </li>\r\n                    </li>\r\n                    <li> {'};'} </li>\r\n                  </div>\r\n                </li>\r\n                <li> named-checkconf # named.conf 파일을 검사하는 명령어 </li>\r\n                <li> cd /var/named  </li>\r\n                <li> vi test.zone\r\n                  <span className=\"sblock\">\r\n                    <li>\r\n                      <span> $TTL </span>\r\n                      <span className=\"tab_4\"> 3H </span>\r\n                    </li>\r\n                    <li>\r\n                      <span> @ </span>\r\n                      <span className=\"tab_4\"> SOA </span>\r\n                      <span className=\"tab_4\"> @ </span>\r\n                      <span className=\"tab_4\"> root. </span>\r\n                      <span className=\"tab_4\"> (20201111 1D 1H 1W 1H) <small> root는 파일을만든사용자이름,\r\n                        뒤에는 생성 날짜 </small></span>\r\n                    </li>\r\n                    <li>\r\n                      <span> 공백 </span>\r\n                      <span className=\"tab_4\"> IN </span>\r\n                      <span className=\"tab_4\"> NS </span>\r\n                      <span className=\"tab_4\"> @ <small> 메인 DNS서버의 있다고 알려줌? , NS는 네임서버 </small></span>\r\n                    </li>\r\n                    <li>\r\n                      <span> 공백 </span>\r\n                      <span className=\"tab_4\"> IN </span>\r\n                      <span className=\"tab_4\"> A </span>\r\n                      <span className=\"tab_4\"> 192.168.10.80 <small> DNS서버의 IP주소가 뭔지를 알려줌 , A는 주소? </small> </span>\r\n                    </li>\r\n                    <li>\r\n                      <span> kdc </span>\r\n                      <span className=\"tab_4\"> IN </span>\r\n                      <span className=\"tab_4\"> A </span>\r\n                      <span className=\"tab_4\"> 192.168.10.80 </span>\r\n                    </li>\r\n                  </span>\r\n                </li>\r\n                <li> yum -y install krb5-server krb5-workstation pam_krb5 # KDC 서버 설치하는 방법\r\n                  <li> krb5-libs , krb5-auth-dialog # 나중에 알아보기  </li>\r\n                </li>\r\n                <li> vi /etc/krb5.conf  # KDC 설정파일\r\n                  <div className=\"sblock\">\r\n                    <li> default_realm = EXAMPLE.COM 을 TEST.COM  으로 변경 # 16번째 줄 주석처리 제거하고 수정 </li>\r\n                    <li> EXAMPLE.COM 을 TEST.COM 으로 변경# 20번째 주석해제 및 수정,  영역이름 </li>\r\n                    <li> kdc = kerberos.example.com 을 kdc.test.com 으로 변경 # 21번째 줄 주석해제, 마스터 KDC  </li>\r\n                    <li> admin_server = kerberos.example.com 을 kdc.test.com 으로 변경 # 22번 째 줄 주석해제, 인증 서버  </li>\r\n                    <li> .example.com = EXAMPLE.COM 을 .test.com = TEST.COM 변경 # 주석해제 </li>\r\n                    <li> example.com = EXAMPLE.COM 을 test.com = TEST.COM 변경  # 주석해제  </li>\r\n                  </div>\r\n                </li>\r\n                <li> vi /var/kerberos/krb5kdc/kadm5.acl\r\n                  <div className=\"sblock\">\r\n                    <li> */admin@EXAMPLE.COM 을 */admin@TEST.COM 변경 </li>\r\n                  </div>\r\n                </li>\r\n                <li> vi /var/kerberos/krb5kdc/kdc.conf\r\n                  <div className=\"sblock\">\r\n                    <li> #master_key_type = aes256-cts # 주석 처리되어 있는 부분 제거  </li>\r\n                    <li> EXAMPLE.COM 을 TEST.COM으로 변경  </li>\r\n                  </div>\r\n                </li>\r\n                <li> kdb5_util create -r TEST.COM -s # 커버로스 관리프로그램(kdb5_util)\r\n                  <div className=\"sblock\">\r\n                    <li> 비번입력 </li>\r\n                    <li> 비번입력확인  </li>\r\n                  </div>\r\n                </li>\r\n                <li> systemctl restart kadmin krb5kdc  </li>\r\n                <li> kadmin.local # DB Principal 관리?\r\n                  <div className=\"sblock\">\r\n                    <li> add_principal root/admin # Principal 추가(티겟을 할당할 수 있는 고유ID 추가)\r\n                      <span className='mblock'>\r\n                        <li> 비번입력 </li>\r\n                        <li> 비번입력확인  </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> add_principal krbuser\r\n                      <span className='mblock'>\r\n                        <li> 비번입력 </li>\r\n                        <li> 비번입력확인  </li>\r\n                      </span>\r\n                    </li>\r\n                    <li> listprincs # 모든 Principal 조회 </li>\r\n                    <li> ktadd -k /var/kerberos/krb5kdc/kadm5.keytab kadmin/admin  </li>\r\n                    <li> ktadd -k /var/kerberos/krb5kdc/kadm5.keytab kadmin/changepw #패스워드 권한도 kadmin에게 준다? </li>\r\n                    <li> addprinc -randkey host/kdc.test.com  </li>\r\n                    <li> ktadd host/kdc.test.com  </li>\r\n                    <li> quit  </li>\r\n                  </div>\r\n                </li>\r\n                <li> vi /etc/ssh/sshd_config\r\n                  <div className=\"sblock\">\r\n                    <li> GSSAPIAuthentication # 79번째 줄이 yes로 되있으면 된다. </li>\r\n                    <li> GSSAPICleanupCredentials no # 80번째 줄이 no로 되있으면 된다. </li>\r\n                  </div>\r\n                </li>\r\n                <li> vi /etc/ssh/ssh_config\r\n                  <div className=\"sblock\">\r\n                    <li> GSSAPIAuthentication yes # 59번째 줄 </li>\r\n                    <li> GSSAPIDelegateCredentials yes # 아래에 내용추가 ,   </li>\r\n                  </div>\r\n                </li>\r\n                <li> systemctl restart sshd  </li>\r\n                <li> systemctl restart krb5kdc </li>\r\n                <li> systemctl restart kadmin</li>\r\n                <li> useradd krbuser  </li>\r\n                <li> systemctl stop firewalld | setenforce 0 </li> <br />\r\n\r\n                <li> <div className=\"sstitle\"> CentOS 클라이언트로 이동 </div>   </li>\r\n                <li> ps -ef | grep yum | grep -v grep | awk '{'{'}print $2{'}'}' | xargs kill -9 2{'>'}/dev/null </li>\r\n                <li> yum -y install krb5-workstation pam_krb5  </li>\r\n                <li> vi /etc/sysconfig/network-scripts/ifcfg-ens33\r\n                  <div className=\"sblock\">\r\n                    <li> DNS1=192.168.10.80  # 추가 </li>\r\n                  </div>\r\n                </li>\r\n                <li> systemctl restart network  </li>\r\n                <li> cat /etc/resolv.conf </li>\r\n                <li> scp root@test.com:/etc/krb5.conf /etc/krb5.conf # 서버에있는 파일을 가져와서 덮어쓰기 작동이 안됨\r\n                  {/*<div className=\"sblock\">\r\n                        <li> default_realm = EXAMPLE.COM 을 TEST.COM  으로 변경 # 16번째 줄 주석처리 제거하고 수정 </li>\r\n                        <li> EXAMPLE.COM 을 TEST.COM 으로 변경# 20번째 주석해제 및 수정,  영역이름 </li>\r\n                        <li> kdc = kerberos.example.com 을 kdc.test.com 으로 변경 # 21번째 줄 주석해제, 마스터 KDC  </li>\r\n                        <li> admin_server = kerberos.example.com 을 kdc.test.com 으로 변경 # 22번 째 줄 주석해제, 인증 서버  </li>\r\n                        <li> .example.com = EXAMPLE.COM 을 .test.com = TEST.COM 변경 # 주석해제 </li>\r\n                        <li> example.com = EXAMPLE.COM 을 test.com = TEST.COM 변경  # 주석해제  </li>\r\n                      </div>*/}\r\n                </li>\r\n                <li> vi /etc/ssh/sshd_config\r\n                  <div className=\"sblock\">\r\n                    <li> GSSAPIAuthentication yes # 79번 째줄 </li>\r\n                  </div>\r\n                </li>\r\n                <li>  vi /etc/ssh/ssh_config\r\n                  <div className=\"sblock\">\r\n                    <li> GSSAPIAuthentication yes # 59번째 줄 </li>\r\n                    <li> GSSAPIDelegateCredentials yes # 아래에 내용추가 ,   </li>\r\n                  </div>\r\n                </li>\r\n                <li> kinit krbuser # kinit는 티겟 발급 명령어, krbuser 라는 티겟을 받겠다.  </li>\r\n                <li> klist </li>\r\n                <li> ssh krbuser@kdc.test.com # 티겟을 가지고 접속 , 비번 없이 접속 가능 </li>\r\n                <li> exit  </li>\r\n                <li>   </li>\r\n                <li>   </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  Proxy 서버 <small> </small>\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <span className=\"sblock\">\r\n              <span className=\"sstitle\"> 설명 </span>\r\n              <span className=\"mblock\">\r\n                <li> 포트번호 3128  </li>\r\n                <li> 캐시를 사용하여 리소스를 빠르게 접근하기 위해서  </li>\r\n                <li> 웹 프록시는 웹 서버의 웹 페이지를 캐시로 저장하는데 사용  </li>\r\n                <li> 익명으로 컴퓨터 유지  </li>\r\n                <li> 사용률을 기록하기 위해  </li>\r\n                <li> 밖으로 나가는 내용을 검사하기 위해 </li>\r\n                <li>   </li>\r\n                <li> 보안 밎 통제를 나가기 위해  </li>\r\n                <li> IP추적을 피하기 위해  </li>\r\n                <li> 지역 제한을 우회하기 위해서  </li>\r\n              </span>\r\n              <span className=\"sstitle\"> squid 설치 </span>\r\n              <span className=\"mblock\">\r\n                <li> ps -ef | grep yum | grep -v grep | awk '{'{'}print $2{'}'}' | xargs kill -9 2{'>'}/dev/null </li>\r\n                <li> yum -y install squid </li>\r\n                <li> vi /etc/squid/squid.conf\r\n                  <div className='sblock'>\r\n                    <li> acl centos7 src 192.168.10.0/255.255.255.0 #26번째 줄 추가   </li>\r\n                    <li> http_access allow centos7 # 55번째 줄 추가, 프록시 서버에 접근을 허용해주겠다. </li>\r\n                    <li> cache_dir ufs /var/spool/squid 1000 16 256 # 64번 째 줄주석 해제 및 수정 , 캐시를 얼마만큼의\r\n                      용량으로 저장 하겠느냐 , 뒤에 숫자 3개 [MB 자주쓰는폴더디렉토리갯수 하위디렉토리갯수]  </li>\r\n                    <li> cache_access_log /var/log/squid/access.log # , 프록시 서버에 접근할 때 생기는 로그 </li>\r\n                    <li> cache_log /var/log/squid/cache.log # 프록시 서버에서 발생하는 로그 </li>\r\n                    <li> cache_store_log /var/log/squid/store.log # 발생하는 세부정보를 store에 저장하는 로그 </li>\r\n                    <li> cache_mem 8 MB </li>\r\n                    <li> visible_hostname centos7 # 마지막줄에 추가 , 프록시서버의 이름을 지정  </li>\r\n                  </div>\r\n                </li>\r\n                <li> systemctl restart squid  </li>\r\n                <li> cd /var/spool/squid | ll # 00 ~ 0F 는 사이트라고 생각하면 된다. 아까 지정한 16 의미 </li>\r\n                <li> find * -type f # 현재 파일에서 모든 파일을 검사 , 처음에는 없음  </li>\r\n                <li> systemctl stop firewalld | setenforce 0 </li>\r\n                <li> <div className=\"sstitle\"> CentOS 클라이언트로 이동 </div>  </li>\r\n                <li> firefox 열기  </li>\r\n                <li> 우측 위에 메뉴 - 환경 설정 - 일반 - 네트워크 설정으로 이동 </li>\r\n                <li> 수동 프록시 설정, HTTP 프록시 192.168.10.80  포트  3128 , 모든 프로토콜에 위의 프록시 설정 사용 체크  </li>\r\n                <li> 네이버로 가서 여러개를 눌러보기 , 그리고 서버로 이동해서 프록시 서버의 캐시를 보기  </li>\r\n                <li> <div className=\"sstitle\"> CentOS 서버로 이동 </div>  </li>\r\n                <li> find * -type f </li>\r\n                <li> 보다보면 css 파일로 저장되어있는 것을 볼 수 있음  </li>\r\n                <li> cat /var/log/squid/access.log # 접근한 사이트에 대해서 볼 수 있음  </li>\r\n                <li> cat /var/log/squid/cache.log # 캐시 파일이 언제 만들어졌는지 등 </li>\r\n                <li> cat /var/log/squid/store.log # 어떤 캐시파일이 저장되었는지 알 수 있음  </li>\r\n                <li> 윈도우 실행창 에서 inetcpl.cpl - 연결 - LAN 설정 - 사용자 프록시 서버 사용 체크 -\r\n                  192.168.10.80 , 3128 이라고 설정하면 CentOS에서 확인 가능(다시 설정해두지 않으면 인터넷이 안됨)  </li>\r\n                <li> tail -f /var/log/squid/access.log </li>\r\n                <li> 회사에서 프록시 서버를 이용해서 막아버리면 통제가능 </li>\r\n              </span>\r\n              <span className=\"sstitle\">  </span>\r\n              <span className=\"mblock\">\r\n                <li>  </li>\r\n              </span>\r\n            </span>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> Ldap 서버\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <div className=\"sblock\">\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li> Lightweight Directory Access Protocol </li>\r\n                <li> 로그인 인증을 처리해주는 서버 </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'> 설치 </div>\r\n              <div className='mblock'>\r\n                <li> DNS_SERVER_IP=$(ifconfig | grep -A 2 ens | grep \"inet \" | awk '{'{'} print $2 {'}'}') </li>\r\n                <li> DOMAIN_NAME=test.com </li>\r\n                <li> yum -y install bind bind-chroot </li>\r\n                <li> sed -i \"s/^\\s*listen-on port 53.*/\\tlisten-on port 53 {'{'} any; {'}'};/g\" /etc/named.conf </li>\r\n                <li> sed -i \"s/^\\s*listen-on-v6 port 53.*/\\tlisten-on-v6 port 53 {'{'}none; {'}'};/g\" /etc/named.conf </li>\r\n                <li> sed -i \"s/^\\s*allow-query.*/\\tallow-query\\t{'{'} any; {'}'};/g\" /etc/named.conf </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\"> NFS 서버\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <div className=\"sblock\">\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li> Network File System </li>\r\n                <li> 리눅스끼리 저장공간을 공유할 수 있도록 하는 시스템 </li>\r\n                <li> 서버의 디렉토리는 본인의 디렉토리와 연결하여 사용 </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'> 설치 </div>\r\n              <div className='mblock'>\r\n                <div className='sstitle'> NFS 서버 </div>\r\n                <div className='sblock'>\r\n                  <li> yum -y install nfs-utils  </li>\r\n                  <li> systemctl start nfs-server  </li>\r\n                  <li> systemctl start rpcbind  </li>\r\n                  <li> systemctl enable nfs-server  </li>\r\n                  <li> systemctl enbale rpcbind  </li>\r\n                  <li> mkdir /nfsfolder  </li>\r\n                  <li> chmod 700 /nfsfolder  </li>\r\n                  <li> vi /etc/exports # NFS 설정 파일 </li>\r\n                  <li> /nfsfolder 192.168.0.*(rw,no_root_squash,rync) #no_root_squash , 클라이언트가 서버의 root계정으로\r\n                    접근하면 서버의 root와 같은 권한을 가지게됨, 보안 취약 </li>\r\n                  <li> system restart nfs-server  </li>\r\n                  <li> firewall-cmd --permanent --add-service=nfs  </li>\r\n                  <li> exportfs -v </li>\r\n                  <li>   </li>\r\n                </div>\r\n                <div className='sstitle'> NFS 클라이언트 </div>\r\n                <div className='sblock'>\r\n                  <li> yum -y install nfs-utils  </li>\r\n                  <li> systemctl start nfs-server  </li>\r\n                  <li> systemctl enable nfs-server  </li>\r\n                  <li> mkdir /nfsfolder </li>\r\n                  <li> chmod 700 /nfsfolder  </li>\r\n                  <li> mount -t nfs IP:/nfsfolder /nfsfolder # 외부 nfs폴더를 로컬 nfs폴더와 연결  </li>\r\n                  <li> vi /etc/fstab\r\n                    <li> IP:/서버폴더 /클라폴더 nfs hard 0 0  </li>\r\n                    <li> hard : 연결이 되지 않아도 연결 지속 시도, 성능 영향  </li>\r\n                    <li> soft : 연결할 수 없으면 오류 응답, 성능 영향 적음, 트랜잭션 중 중단되면 데이터 손상  </li>\r\n                    <li>   </li>\r\n                  </li>\r\n                  <li> df # 마운트 상태 확인  </li>\r\n                  <li>   </li>\r\n                </div>\r\n              </div>\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <div className=\"sblock\">\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n        <span className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">\r\n              <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n            <div className=\"sblock\">\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </span>\r\n        {/*  */}\r\n      </span>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default LinuxServer;","import React from 'react';\r\n\r\nconst LinuxNetwork = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> httpd </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 관련 명령어 </h2>\r\n            <li> rpm -qa httpd <small> # httpd 버전 확인 </small> </li>\r\n            <li> yum install -y httpd <small> # httpd 설치 </small> </li>\r\n            <li> systemctl status httpd, systemctl status httpd.service <small> # httpd 서비스 상태 확인 </small> </li>\r\n            <li> apachectl configtest <small> # Syntax Error 점검 </small> </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> iptables 명령어 - <small> # 포트포워딩 설정 </small> </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 리눅스에서 방화벽을 설정하는 도구이며 패킷필터링과 처리방식을 지원 </li>\r\n            <li> INPUT, FORWARD, OUTPUT : 서버로 들어오는것, 서버에서 포워딩하는것, 서버에서 나가는것 </li>\r\n            <li> SNAT와 DNAT : SNAT는 내부사설IP에서 외부공인IP로 변환, DNAT는 외부공인IP를 내부사설IP로 변환 </li>\r\n            <li> NEW(새로접속시도패킷), ESTABLISHED(접속한상태에있는패킷), INVALID(유효하지않은패킷), RELATED(접속과연관된패킷) </li>\r\n            <li> DROP, ACCEPT <small> # 규칙에 맞는 패킷을 어떻게 할지 </small> </li>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> rpm -qa | grep iptables <small> # iptables 설치 확인 </small> </li>\r\n            <li> systemctl enable iptables </li>\r\n            <li> systemctl start iptables </li>\r\n            <li> systemctl status iptables </li>\r\n            <li>  </li>\r\n            <li> iptables -F <small> # 설정 초기화 </small> </li>\r\n            <li> iptables -N <small> # 새로운 제안생성 </small> </li>\r\n            <li> iptables -L <small> # 새로운 규칙 출력, 목록 출력 </small> </li>\r\n            <li> iptables -X <small> # 비어있는 체인 삭제 </small> </li>\r\n            <li> iptables -P <small> # 기본 정책 변경 </small> </li>\r\n            <li> iptables -A [INPUT]<small> # 새로운 규칙을 맨 아래 추가 </small> </li>\r\n            <li> iptables -I <small> # 새로운 규칙을 삽입 맨 앞에 추가 </small> </li>\r\n            <li> iptables -R <small> # 새로운 규칙을 교체 </small> </li>\r\n            <li> iptables -D <small> # 규칙을 삭제 </small> </li>\r\n            <li> iptables -C <small> # 패킷을 테스트 </small> </li>\r\n            <li> iptables -s [IP주소] <small> # 출발지 주소 </small> </li>\r\n            <li> iptables -d [IP주소,] <small> # 목적지 주소 </small> </li>\r\n            <li> iptables -p [TCP, ] <small> # 프로토콜 </small> </li>\r\n            <li> iptables -i <small> # 패킷이 들어오는 네트워크 인터페이스 </small> </li>\r\n            <li> iptables -o <small> # 패킷이 나가는 네트워크 인터페이스 </small> </li>\r\n            <li> iptables -f <small> # 분절된 패킷? </small> </li>\r\n            <li> iptables -j [DROP, ACCEPT]<small> # 규칙에 맞는 패킷을 어떻게 처리할지 명시 </small> </li>\r\n            <li> recent --update --seconds [초] --hitcount [카운트] --name HTTP\r\n              <small> # 몇초 동안 똑같은 곳에서 온다면(여러번 접속시도하면 공격으로 인식하게하여 드랍) </small> </li>\r\n            <li> --sport [포트번호] <small> # 출발지 포트번호 </small> </li>\r\n            <li> --dport [포트번호, :포트번호(포트번호이하?미만?)] <small> # 목적지 포트번호 </small> </li>\r\n            <li> --tcp-flags [SYN,RST,ACK] [SYN,RST,ACK] <small> # TCP플래그에 따라 패킷을 제어 </small> </li>\r\n            <li> -m state --state [NEW, ESTABLISHED, INVALID RELATED] <small> # 패킷의 상태와 목적에 따라 제어 </small> </li>\r\n            <li>  </li> <br />\r\n\r\n            <li> vi /etc/sysconfig/iptables\r\n              <li> -A PREROUTING -i eth0 -p tcp -m tcp --dport [포워딩서버포트주소] -j DNAT --to-destination [타겟서버IP와포트번호] </li>\r\n              <li>  </li>\r\n            </li>\r\n            <li> /etc/init.d/iptables restart </li>\r\n\r\n            <h2 className=\"h2\"> 📌 예시 </h2>\r\n            <li> iptables -t nat -A PREROUTING -p tcp --dport [포트1] -j REDIRECT --to-port [포트2] <small> # 포트1을 포트2로 포워딩 </small> </li>\r\n            <li> iptables -t nat -D PREROUTING -p tcp --dport [포트1] -j REDIRECT --to-port [포트2] <small> # 포트1을 포트2로 포워딩 한 것을 삭제 </small> </li>\r\n            <li> iptables -I INPUT -p tcp -s 0.0.0.0/0 -d [IP주소] --dport [포트] -j ACCEPT <small> # 모든곳에서 오는 IP주소:포트로 오는 패킷 허용  </small> </li>\r\n            <li> iptables -I FORWARD -m tcp -p tcp -d [IP주소] --dport [포트] -j ACCEPT <small> # 호스트에서 IP주소:포트로 포워딩 허용 </small> </li>\r\n            <li> iptables -I FORWARD -m state -p tcp -d [IP주소/서브넷] --state NEW,RELATED,ESTABLISHED -j ACCEPT <small> # NEW,RELATED,ESTABLISHED 상태인 패킷에 대해서는 포워드 허용 </small> </li>\r\n            <li> iptables -t nat -I PREROUTING -p tcp -d [IP주소1] --dport [포트1] -j DNAT --to-destination [IP주소2:포트2] <small> # IP1:포트1으로 들어오는 패킷을 IP2:포트2로 보낸다 </small>   </li>\r\n            <li> iptables -t nat -nL <small> # 내부 테이블을 조회 </small> </li>\r\n            <li> iptables -l INPUT 1 -p tcp --dport [포트] -j ACCEPT <small> # </small>  </li>\r\n            <li> iptables --list </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinuxNetwork;","import React from 'react';\r\n\r\nconst LinuxAccountCommand = (props) => {\r\n    return (\r\n        <div className=\"common_style\">\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> passwd <small> # 사용자 비번 관련 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> passwd [사용자명] <small> # 사용자 비번 변경 </small> </li>\r\n                        <li> vi /etc/passwd <small> # 사용자 비번 정보 저장 </small>\r\n                            <div className=\"block4\">\r\n                                <li> [사용자명]:[암호]:[UID]:[GID]:[comment]:[사용자홈디렉토리]:[기본사용셸] </li>\r\n                                <li> 암호가 x이면 /etc/shadow 파일에 비번이 저장되어 있음 </li>\r\n                                <li> 기본사용셸은 기본적으로 /bin/bash </li>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> adduser, useradd <small> # 계정을 추가 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> [adduser, useradd] [사용자명] <small> # 사용자 추가 </small> </li>\r\n                        <li> [adduser, useradd] -u [UID] <small> # 사용자 UID 지정 </small> </li>\r\n                        <li> [adduser, useradd] -g [GID] <small> # 사용자 GID 지정 </small> </li>\r\n                        <li> [adduser, useradd] -d [/홈디렉토리] <small> # 사용자 홈 디렉토리 지정</small> </li>\r\n                        <li> [adduser, useradd] -m -d [/홈디렉토리] <small> # 사용자 홈 디렉토리를 생성해서 지정</small> </li>\r\n                        <li> [adduser, useradd] -s [/사용자셸] <small> # 기본 사용자 셸 지정 </small> </li>\r\n                        <li> [adduser, useradd] -c [설명] [사용자명] <small> # 사용자에게 설명 추가 </small> </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> id <small> # 현재 사용자의 정보 보기 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> id <small> # </small> </li>\r\n                        <li> cat /etc/passwd <small> # </small> </li>\r\n\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> su sudo <small> # 현재 연결된 계정 변경하기 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> su <small> # root 계정 변경 </small> </li>\r\n                        <li> su [사용자명] <small> # 사용자 계정 변경 </small> </li>\r\n\r\n                        <h2 className='h2'> 📌 root이외의 계정에서 sudo명령어 사용할 수 있게 하기 </h2>\r\n                        <div className=\"block4\">\r\n                            <li> su로 root계정에 접근 </li>\r\n                            <li> visudo -f /etc/sudoers </li>\r\n                            <li> 100번째 쯤에 root ALL=(ALL) ALL 같이 </li>\r\n                            <li> [사용자명] ALL=(ALL) ALL 입력 </li>\r\n                            <li> 만약에 사용자에게 sudo권한이 필요없다면 다시 없애주기 </li>\r\n                        </div>\r\n                        <div className=\"block4\">\r\n                            <li> 위에 방법이 더 간편하다. </li>\r\n                            <li> su로 root계정에 접근 </li>\r\n                            <li> cd /etc </li>\r\n                            <li> chmod u+w sudoers </li>\r\n                            <li> vi /etc/sudoers 입력 </li>\r\n                            <li> 100번째 쯤에 root ALL=(ALL) ALL 같이 </li>\r\n                            <li> [사용자명] ALL=(ALL) ALL 입력 </li>\r\n                            <li> chmod u-w sudoers </li>\r\n                            <li> 만약에 사용자에게 sudo권한이 필요없다면 다시 없애주기 </li>\r\n                        </div>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> change <small> # 리눅스 사용자 계정 암호 주기적 변경 설정하기 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> change -l [사용자명] <small> # 사용자 계정에 설정된 비밀번호 정보 보기 </small> </li>\r\n                        <li> change -E YYYY/MM/DD [사용자명] <small> # 사용자 계정 비번 만료 설정 </small> </li>\r\n                        <li> change -m [DAY] [사용자명] <small> # 사용자 계정 비번 변경 최소날짜 설정?, 이해가 잘.. </small> </li>\r\n                        <li> change -M [DAY] [사용자명] <small> # 사용자 계정 비번 변경없이 사용가능 만료일 설정 </small> </li>\r\n                        <li> change -W [DAY] [사용자명] <small> # 사용자 계정 비번 만료일 [DAY]전에 메시지를 보여준다. </small> </li>\r\n                        <li> change -I [DAY] [사용자명] <small> # 사용자 계정 변경 만료일 [DAY]가 지나면 계정을 잠근다. </small> </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> usermod <small> # 사용자 정보를 변경 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> usermod [사용자] -c [바꿀사용자명] <small> # 사용자명을 바꾸기 </small> </li>\r\n                        <li> usermod -d [/디렉토리] [사용자] <small> # 사용자 디렉토리 변경 </small> </li>\r\n                        <li> usermod -s [셸] [사용자] <small> #  </small> </li>\r\n                        <li> usermod -c [설명] [사용자] <small> # 사용자 설명 변경 </small> </li>\r\n                        <li> usermod -e [YYYY-MM-DD] [사용자] <small> # 계정이 특정 날짜에 만료되게 설정 </small> </li>\r\n                        <li> usermod -g [그룹] [사용자] <small> # 사용자의 그룹을 변경 </small> </li>\r\n                        <li> usermod -G [그룹] [사용자] <small> # </small> </li>\r\n                        <li> usermod -a -G [그룹] [사용자] <small> # 사용자에 그룹을 추가 </small> </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> userdel <small> # 사용자를 제거 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> userdel [사용자명] </li>\r\n                        <li> userdel -r [사용자명] <small> # 사용자가 사용하는 디렉터리까지 전부 삭제 </small> </li>\r\n\r\n\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> gpasswd <small> # 그룹에 비번설정,사용자추가,관리자지정 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> gpasswd [그룹명] <small> # 그룹에 비번을 설정한다. </small> </li>\r\n                        <li> gpasswd -a [사용자명] [그룹명] <small> # 그룹에 사용자를 추가한다. </small> </li>\r\n                        <li> gpasswd -A [사용자명] [그룹명] <small> # 그룹의 관리자로 사용자를 지정 </small> </li>\r\n                        <li> gpasswd -d [사용자명] [그룹명] <small> # 그룹에서 사용자 제거하기 </small> </li>\r\n                        <li> gpasswd -r <small> # 그룹에 설정된 패스워드 제거 </small> </li>\r\n                        <li> gpasswd -R [그룹명] <small> # 그룹 사용 금지 </small> </li>\r\n                        <li> gpasswd -M [사용자명] [그룹명] <small> # 그룹 사용자를 초기화하고 사용자를 추가 </small> </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> groupadd <small> # 그룹을 추가 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> groupadd [그룹명] <small> # 그룹명을 추가 </small> </li>\r\n                        <li> groupadd -g [GID] [그룹명] <small> # 그룹명에 GID를 지정해서 추가, 기존 GID 확인 필요 </small> </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> groupmod <small> # 그룹의 이름을 변경 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> groupmod -g [새로운그룹GID] [이전그룹GID] <small> # 그룹GID 변경하기 </small> </li>\r\n                        <li> groupmod -n [새로운그룹명] [이전그룹명] <small> # 그룹명 변경하기 </small> </li>\r\n                        <li> groupmod -o <small> # 그룹 GID 중복허용, 사용할 때 알아볼것 </small> </li>\r\n                        <li> vi /etc/group  <small> # 등록되어 있는 그룹 보기 </small> </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> groupmems <small> # 그룹 사용자를 관리 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> groupmems -g [그룹명] -l <small> # 그룹에서 사용자들을 조회 </small> </li>\r\n                        <li> groupmems -g [그룹명] -a [사용자] <small> # 그룹에서 사용자를 추가 </small> </li>\r\n                        <li> groupmems -g [그룹명] -d [사용자] <small> # 그룹에서 사용자를 제거 </small> </li>\r\n                        <li> vi /etc/group <small> # 그룹 정보 편집 가능 </small>\r\n                            <div className=\"block4\">\r\n                                <li> [그룹명]:x:[GID]: <small> # 이와같이 입력 </small> </li>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> groupdel <small> # 그룹을 삭제 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> groupdel [그룹명] <small> # 그룹을 삭제 </small> </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> groups <small> # 현재 사용자가 속한 그룹 조회 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 명령어 </h2>\r\n                        <li> groups <small> # 현재 사용자가 속한 그룹 조회 </small> </li>\r\n                        <li> cat /etc/group <small> # 현재 사용자가 속한 그룹 조회 </small> </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> chmod 명령어 <small> # 파일 사용권한 변경 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 chmod [옵션] [모드] [파일명] </h2>\r\n                        <small> 퍼미션 = #소유자(u)/그룹(g)/게스트(o),모두(a) 777 = r(4),w(2),x(1) , t(Sticky bit) , X(실행권한적용) , s(SUID) </small>\r\n                        <li> chmod 퍼미션(755) 파일명 , 파일명에 권한을 준다. </li>\r\n                        <li> chmod ugo+rwx 파일명 , #파일에 user,group,other 사용자에게 r(읽기),w(쓰기),x(실행) 권한을 준다.  </li>\r\n                        <li> chmod ugo=rwx 파일명 , #파일에 user,group,other 사용자에게 r(읽기),w(쓰기),x(실행) 권한을 지정  </li>\r\n                        <li> chmod ugo-rwx 파일명 , #파일에 user,group,other 사용자에게 r(읽기),w(쓰기),x(실행) 권한을 제거한다.  </li>\r\n                        <li> chmod ug=w,o=r 파일명 , #파일에 user,group,other 사용자에게 r(읽기),w(쓰기),x(실행) 권한을 제거한다.  </li>\r\n                        <li> chmod 퍼미션(775) * , #현재 위치한 파일에 모두 접근 권한 부여 </li>\r\n                        <li> chmod 퍼미션(1775) * , #현재 위치한 파일에 모두 접근 권한 부여 , 단 소유자만이 삭제가능(Sticky bit)  </li>\r\n                        <li> chmod 퍼미션(4775) * , #현재 위치한 파일에 모두 접근 권한 부여 ,\r\n                            SUID, {'유저 -> 파일1 (가능)'} | {'유저 -> 파일2(불가능)'} | {'유저->파일1->파일2(가능하게 해줌)'} 실행 권한이 없을때 다른 파일을 거쳐서 실행을 가능하게 해준다. </li>\r\n                        <li> chmod -R 퍼미션 디렉토리 , #디렉토리 하위에 위치한 모든 파일 접근 권한 부여 </li>\r\n                        <li> chmod -c 퍼미션 파일명 : 기존 파일 모드가 변경되는 경우만 진단 메시지 출력 </li>\r\n                        <li> chmod -f 퍼미션 파일명 : 에러 메시지를 출력하지 않음 </li>\r\n                        <li> chmod -v 퍼미션 파일명 : 모든 파일에 대해 모드가 적용되는 진단 메시지 출력 </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> chown 명령어 <small> # 파일,디렉토리의 소유자 변경 </small> </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 설명 </h2>\r\n                        <li> chown [소유자] [파일명] , # 파일의 소유자를 변경하는 방법 </li>\r\n                        <li> chown [소유자]:[소유그룹] 변경할파일 , # 파일의 소유자,소유그룹을 변경하는 방법 </li>\r\n                        <li> chown -R [소유자]:[소유그룹] [디렉토리] , # 하위 디렉토리도 변경</li>\r\n                        <li> chown -h [소유자] [심볼릭링크] , # 심볼릭 링크의 소유자를 변경  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinuxAccountCommand;","import React from 'react';\r\n\r\nconst Term = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 글쓰기 방법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1. 무엇에 대해서 쓰고, 어떻게 쓸지에 대해 생각하기(주제나 개요잡기) </li>\r\n            <li> 2. 그래서, 그러니까, 하지만 등등 최대한 줄이기 </li>\r\n            <li> 3. 반복되는 내용은 없게하기 </li>\r\n            <li> 4. 문장은 1~2줄로 만들기 </li>\r\n            <li> 5. 본인의 개성을 담아서 쓰기 </li>\r\n            <li> 6. 짧게라도 여러번 쓰기 </li>\r\n            <li> 7. 어떤 내용을 쓰기 위해서는 많은 생각이나 경험들이 필요 </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div className='block1'>\r\n\r\n        <details>\r\n          <summary> 캐시, 쿠키, 세션, 토큰 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 캐시 </h2>\r\n            <li> 반복적이고 자주사용하는 데이터들을 보관하는 작은 공간 </li>\r\n            <li> 시간 지역성(시간이 지남에 따라 많이 사용하는 데이터), 공간 지역성(필요한 데이터가 가까운 위치에 있는 경우 한번에 가져오면 좋다)  </li>\r\n            <li> Cache Hit, Cache Miss : 캐시의 공간에 원하는 데이터의 존재 유무 </li>\r\n            <li> SRAM : 속도가 빠르면 용량이 작고 비싸다, 전기 끊어지면 삭제, 구조 복잡, 소비전력 많이 필요 </li>\r\n            <li> 웹 캐시 : 브라우저캐시, 프록시캐시, 게이트웨이 캐시  </li>\r\n            <li> http header에 캐쉬의 만료여부와 이전의 값과 비교하여 변경되었는지를 판단  </li>\r\n            <li>   </li>\r\n\r\n            <h2 className='h2'> 📌 캐시 관련 내용 </h2>\r\n            <li> Long Tail 법칙 : 시스템에 소수의 요구가 리소스를 거의 차지한다는 법칙 </li>\r\n            <li> 캐시 추상화(Spring 에서만) </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 캐시의 장소 </h2>\r\n            <li> 로컬 캐쉬 : 본인의 컴퓨터에 데이터를 보관하는 작은 공간, 데이터 공유가 어렵다. </li>\r\n            <li> 서버 캐쉬 : 서버에도 캐쉬들을 모아놓는 공간이 있다.  </li>\r\n            <li> DB 캐쉬 :  </li>\r\n            <li> 브라우저 캐쉬 : </li>\r\n            <li> DNS 캐쉬 :  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 L1,L2,L3 캐시 </h2>\r\n            <li>  CPU에 있는 Cache, L은 Level을 뜻한다.  </li>\r\n            <li>  L1 Cache : 데이터(처리한 데이터 저장), 명령어(다음 수행해야할 작업 정보 저장) 용도의 2개의 종류가 있다.  </li>\r\n            <li>  L1 Cache : 용량이 매우 작고(256KB), 매우빠름(1150GB/s) </li>\r\n            <li>  L2 Cache : 사용할 명령과 데이터를 저장 </li>\r\n            <li>  L2 Cache : 용량이 작고(256KB~) , 빠름(470GB/s) </li>\r\n            <li>  L3 Cache : 용량이 크고(4MB~64MB), 보통(200GB/s) </li>\r\n            <li> CPU-Z 프로그램을 이용하면 L1,L2,L3 용량을 볼 수 있다. </li>\r\n\r\n            <h2 className='h2'> 📌 캐시를 사용하면 좋은점 </h2>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 캐시 참고 글 </h2>\r\n            <li> https://mangkyu.tistory.com/69 </li>\r\n            <li> https://www.windowsnoticias.com/ko/%EC%BA%90%EC%8B%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-l1-l2-%EB%B0%8F-l3%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%95%8C-%EC%88%98-%EC%9E%88%EC%8A%B5%EB%8B%88%EA%B9%8C%3F/ </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 쿠키 </h2>\r\n            <li>   </li>\r\n\r\n            <h2 className='h2'> 📌 세션 </h2>\r\n            <li>   </li>\r\n\r\n            <h2 className='h2'> 📌 토큰 </h2>\r\n            <li>   </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> JWT Token </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> <a href=\"https://jwt.io/\" target=\"_blank\" rel=\"noopener noreferrer\"> JWT사이트 </a> </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 Header </h2>\r\n            <li> \"alg\": \"HS256\" <small> # HS256, HS512, ES256 등등 </small> </li>\r\n            <li> \"typ\": \"JWT\" <small> # 토큰의 타입 </small> </li>\r\n\r\n            <h2 className='h2'> 📌 Payload </h2>\r\n            <li> \"iss\": \"생성자\"</li>\r\n            <li> \"sub\": \"제목\" </li>\r\n            <li> \"aud\": \"사용자\" </li>\r\n            <li> \"exp\": \"만료시간\" <small> # NumericDate 형식 </small> </li>\r\n            <li> \"nbf\": \"활성날짜\" <small> # 토큰이 시간이 지나야 활성화가 된다.(약간 이해가 될듯 말듯) </small> </li>\r\n            <li> \"iat\": \"발급경과시간\" </li>\r\n            <li> \"jti\": \"식별자\" </li>\r\n            <li> \"URI주소\": 값 <small> # 공개클레임 </small> </li>\r\n            <li> \"정보\" : 값 <small> # 사용자와 서버가 사용하는 정보 </small> </li>\r\n\r\n            <h2 className='h2'> 📌 Signature </h2>\r\n            <li> ( header base64 인코딩값 + payload base64 인코딩값 )을 비밀키를 사용해 지정한 알고리즘으로 해싱하고 다시\r\n              base64로 인코딩한 값  </li>\r\n\r\n            <h2 className='h2'> 📌 과정(미작성) </h2>\r\n            <li>  </li>\r\n            <li> signature의 값을 공개키로 열어서 payload의 값과 비교해 조작이 되었는지 아닌지 판단 </li>\r\n\r\n            <h2 className='h2'> 📌 장점 </h2>\r\n            <li> 서버에서 클라이언트를 관리할 필요가 없다. </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌 단점 </h2>\r\n            <li> 토큰에 내용이 많이 들어가면 크기가 커진다 </li>\r\n            <li> 토큰이 해킹당하면 모든 권한을 빼앗긴다 </li>\r\n            <li> 토큰을 매번 전송해야 해서 서버에 부하가 생긴다. </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 컴퓨터 구성 및 작동 방법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 1. CPU(중앙 처리 장치) - 사람의 두뇌 </h2>\r\n            <div className=\"block3\">\r\n              <h3 className='h3'> 🎈 CPU의 3가지 기능 </h3>\r\n              <li> 1. 제어장치 </li>\r\n              <div className=\"block4\">\r\n                <li className='h4'> 제어장치 구성요소 </li>\r\n                <li> 명령해독기(Decoder) : 명령 레지스터에 있는 명령을 해독하는 회로 </li>\r\n                <li> 부호기(Encoder) : 해독된 명령에 따라 각 장치로 보낼 제어신호를 생성하는 회로 </li>\r\n                <li> 제어 주소 레지스터(CAR) : 다음에 실행할 마이크로명령어의 주소를 저장하는 레지스터 </li>\r\n                <li> 제어 버퍼 레지스터 : 제어 기억장치로부터 읽혀진 마이크로 명령어 비트들을 일시적으로 저장하는 레지스터 </li>\r\n                <li> 제어 기억장치 : 마이크로 명령어들로 이루어진 마이크로 프로그램을 저장하는 내부 기억장치 </li>\r\n                <li> 순서 제어 모듈 : 마이크로 명령어의 실행순서를 결정하는 회로들의 집합 </li>\r\n                <li>  </li>\r\n                <h4 className='h4'>  </h4>\r\n              </div>\r\n              <li> 2. 연산장치(ALU) </li>\r\n              <div className=\"block4\">\r\n                <li className='h4'> 연산장치 구성요소 </li>\r\n                <li> 산술,논리,관계,이동 등의 연산 </li>\r\n                <li> 가산기,누산기,보수기,데이터레지스터,어버플로검출기, 쉬프트 레지스터 </li>\r\n              </div>\r\n              <li> 3. 레지스터(임시 기억장치) </li>\r\n              <li> CPU 내부에서 처리할 명령어나 연산의 중간 결과값 등을 일시적으로 기억하는 임시 기억장소 </li>\r\n              <div className=\"block4\">\r\n                <li className=\"h4\">  </li>\r\n                <li> Program Counter : 다음에 수행할 명령어 주소를 기억하는 레지스터 </li>\r\n                <li> Memory Address Register : 주소를 기억하는 레지스터 </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className=\"block4\">\r\n                <li className=\"h4\"> 레지스터간의 자료 전송 </li>\r\n                <li> 직렬전송 : 직렬 시프트 마이크로 오퍼레이션, 병렬전송보다 속도가 느림 </li>\r\n                <li> 병렬전송 : 하나의 클록 펄스 동안 레지스터 내의 모든 비트가 동시에 전송되는 방식 </li>\r\n                <li> 버스전송 : 모든 레지스터들이 이용하는 경로로 결선의 수를 줄일 수 있다는 장점을 가진다. </li>\r\n              </div> <br />\r\n\r\n              <h3 className=\"h3\"> 📌 CPU 성능 평가 단위 </h3>\r\n              <li> MIPS(Million Instruction Per Second) : 명령갯수/1초 (단위 1000000) </li>\r\n              <li> FLOPS(FLoating-point Operations Per Second) : 부동소수점연산횟수/1초 </li>\r\n              <li> Clock : 클럭주파수발생횟수/1초 , 1초마다 얼마나 많은 작업이 가능한지 알려줌, 높을수록 비싸고 좋다.  </li>\r\n              <li> Hz : 클럭속도의 단위, 요즘에는 GHz </li> <br />\r\n\r\n              <h3 className=\"h3\"> 📌 CPU Core, Process, Thread, Cache, Process Control Block</h3>\r\n              <li> Core : 물리적으로 존재하고 핵심적인 연산을 처리하는 역할,\r\n                코어가 많으면 여러 프로그램을 작동하여도 속도가 느려지지 않는다. </li>\r\n              <li> Cache : 자주 사용하는 변수나 참조 값들을 보관하는 공간  </li>\r\n              <li> Process : 실행중인 프로그램을 뜻한다.  </li>\r\n              <div className=\"block4\">\r\n                <li className=\"h4\"> Inter Process Communication </li>\r\n                <li> 프로세스 간의 통신을 하는 것 </li>\r\n                <li> <a href=\"https://doitnow-man.tistory.com/110\" target=\"_blank\" rel=\"noopener noreferrer\"> 필요할 때 공부할 사이트 </a> </li>\r\n              </div>\r\n              <li> Thread : 논리적으로 존재하여 process 작업을 처리해주는 역할 </li>\r\n              <div className=\"block4\">\r\n                <li className=\"h4\"> Multi Thread </li>\r\n                <li> 1개의 process를 논리적인 방법으로 쓰레드를 번갈아가면서 작업하는 방법\r\n                  , 인텔에서는 하이퍼스레딩, AMD에서는 SMT라는 기술로 불리운다.\r\n                  process의 resource를 여러 Thread가 공유가 가능하다.\r\n                  단 Thread의 Stack은 각각 가지고 있고 공유되지 않는다.  </li>\r\n                <li> 사용하는 이유 : Single Thread를 사용하면 병목 현상(다른 작업을\r\n                  처리하기 위해서 기다려야하는 현상)이 발생하고 처리속도도 더 늦기 때문이다. </li>\r\n              </div>\r\n              <div className=\"block4\">\r\n                <li className=\"h4\"> Context Switch </li>\r\n                <li> 멀티프로세스 환경에서 실행중인 Process가 Interrupt에 의해서 잠시 중단이 될 때\r\n                  기존 실행중인 Process 정보를 실행중인 Process PCB에 저장하고 Interrupt에서 다음 실행될\r\n                  Process를 PCB를 참조하여 실행을 시키는 것, 간단하게 말하면 Process를 교체하는 것  </li>\r\n                <li> Context Switch가 많이 발생하면 CPU가 작업을 하지를 못해서 문제가 발생하므로\r\n                  멀티프로세스 환경에서 사용을 할 때 고려를 잘 해야된다. </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className=\"block4\">\r\n                <li className=\"h4\"> Interrupt </li>\r\n                <li> 인터럽트는 현재 작업중인것을 일시적으로 중단을 시키고 이벤트를 발생시켜\r\n                  작업을 처리해주는 역할을 한다.  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className=\"block4\">\r\n                <li className=\"h4\"> </li>\r\n                <li>  </li>\r\n              </div>\r\n              <li> Process Control Block : 여러 Process를 관리하는 정보를 가지고 있는 공간(CPU에 존재?) </li>\r\n            </div>\r\n\r\n            <div className='block1'>\r\n              <details>\r\n                <summary> 병렬 프로그래밍 </summary>\r\n                <div className='block2'>\r\n\r\n                  <h2 className='h2'> 📌 Message Passing </h2>\r\n                  <li> 하나의 프로그램을 여러개의 프로세스에서 처리를 할 때 서로\r\n                    통신이 필요한데 메시지들의 송신과 수신으로 구현하는 기법 </li>\r\n                  <li> 프로세스끼리 메모리를 서로 공유가 가능하지만\r\n                    직접적으로 공유하지 않는 것 </li>\r\n                  <li>  </li>\r\n\r\n                  <h2 className='h2'> 📌 설명 </h2>\r\n                  <li> 1 </li>\r\n\r\n                </div>\r\n              </details>\r\n            </div>\r\n\r\n            {/* ======================================================================== */}\r\n\r\n            <h2 className='h2'> 📌 RAM </h2>\r\n            <li>  </li>\r\n            <li> data area </li>\r\n            <div className=\"block4\">\r\n              <li> 전역변수, Static 변수 </li>\r\n              <li>  </li>\r\n            </div>\r\n            <li> Stack </li>\r\n            <div className=\"block4\">\r\n              <li> 지역변수, 매개변수(컴파일 타임 크기에 결정) </li>\r\n              <li>  </li>\r\n            </div>\r\n            <li> Heap </li>\r\n            <div className=\"block4\">\r\n              <li> 프로그래머가 할당 (런타임 크기에 결정) </li>\r\n              <li> Object 값들을 보관한다.(스택 영역에서 heap을 참조) </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Harddisk(SSD, HDD) </h2>\r\n            <li> cell로 구성되어 있다. (1cell = 1byte) </li>\r\n            <li> 1개의 하드디스크에 여러개의 운영체제를 설치할 수 있는 이유가 파티션을 나눌 수 있기 때문이다. </li>\r\n            <li> 4개의 공간 구성(Partition) </li>\r\n            <div className=\"block4\">\r\n              <li> 1. MBR(Master Boot Recoder): Harddisk에서 가장 먼저 읽는 부분 </li>\r\n              <li> 2. Primary Drive : 파티션 앞에 부트 섹터가 있어서 운영체제를 설치할 수 있다.\r\n                Primary는 3개정도까지 되고 활성되는 Primary는 1개만 존재할 수 있다.\r\n              </li>\r\n              <li> 3. Exteded Drive : Exteded은 1개만 설정가능하고 Logical Drive를 구분해주는 역할? </li>\r\n              <li> 4. Logical Drive : 데이터를 저장하는 공간(운영체제 설치를 할 수 없는 공간) </li>\r\n            </div>\r\n            <li> 가상 메모리(Swap) : RAM공간이 부족할 때 하드에 RAM처럼 사용할 수 있는 공간이 있다.\r\n              이런 공간에 존재하는 파일을 paging file이나 swap file이라고 하고 이런 파일을\r\n              사용하는 것을 Hard swap(Disk thrashing)이라고 칭한다.\r\n            </li>\r\n            <li> 2 </li>\r\n\r\n            <h2 className='h2'> 📌 가상 메모리 </h2>\r\n            <li> 2 </li>\r\n            <li> 2 </li>\r\n\r\n            <h2 className='h2'> 📌 Process </h2>\r\n            <li> 운영체제로부터 자원을 할당받는 작업의 단위 </li>\r\n            <li> 1개의 어플리케이션에는 1개이상의 process가 작업  </li>\r\n            <li> 각각의 Process는 서로 자원을 공유할 수 없다. </li>\r\n            <li> Multi Process </li>\r\n            <div className=\"block4\">\r\n              <li> 1개의 어플리케이션을 여러개의 process로 나누어서 처리를 하는 방법 </li>\r\n              <li> process 1개가 고장나도 어플리케이션은 동작한다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 Thread </h2>\r\n            <li> process에 할당 받은 자원을 이용하는 실행 단위 </li>\r\n            <li> 1개의 process는 1개이상의 쓰레드를 이용하여 작업을 한다. </li>\r\n            <li> 쓰레드가 포함되어 있는 process의 메모리에 대해서는 접근이 가능하다. </li>\r\n            <li> 2 </li>\r\n\r\n            <h2 className='h2'> 📌 Context Switching </h2>\r\n            <li> 현재 진행하고 있는 Process,Thread의 상태를 저장하고 다음 진행할\r\n              Process,Thread 상태값을 읽어 적용하는 과정 </li>\r\n            <li> Process,Thread는 Register에 저장되고 Process Control Block에 관리된다. </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary>  </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n            <h2 className='h2'> 📌 장점, 단점 </h2>\r\n            <li> 장점 : </li>\r\n            <li> 단점 : </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li> 소제목\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className=\"lblock\">\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> 개발 관련 용어 </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> API </div>\r\n              <div className='mblock'>\r\n                <li> Application Programming Interface  </li>\r\n                <li> 서버가 클라이언트에게 리소스를 주고 받는 방식 </li>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'>  </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> 서버,네트워크  </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'> 예시 </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='mblock'>\r\n          <details>\r\n            <summary className='stitle'> </summary>\r\n            <div className='sblock'>\r\n              <div className='sstitle'> 설명 </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n              <div className='sstitle'> 예시 </div>\r\n              <div className='mblock'>\r\n                <li>  </li>\r\n                <li>  </li>\r\n              </div>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className=\"mtitle\">   용어 정리  </div>\r\n        <li> <small>   </small> </li>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  프론트엔드 관련용어 <small> </small>\r\n              <a name=\"프론트엔드 관련용어\" style={{ visibility: \"hidden\" }}> 프론트엔드 관련용어 </a> </summary>\r\n            <div className=\"sblock\">\r\n              <details>\r\n                <summary className=\"sstitle\">  MIME(Multipurpose Internet Mail Extensions) </summary>\r\n                <div className=\"mblock\">\r\n                  <li> 과거에 이메일에 파일을 텍스트문자로 변환하여 같이 보냈는데 MIME가 변환 역할을 함 </li>\r\n                  <li> 현재는 웹을 통해 여러형태의 파일을 변환(인코딩)해서 전달하는 역할 </li>\r\n                  <li> 웹에서 Content-Type 정보를 파일의 앞부분에 담음 </li>\r\n                  <li> <div className=\"sstitle\">  MIME 형식 [파일종류/파일포맷]  </div>\r\n                    <small> 바이너리파일은 8비트, 텍스트파일은 7비트 데이터 </small>\r\n                    <div className=\"sblock\">\r\n                      <li> text/plain </li>\r\n                      <li> text/html </li>\r\n                      <li> text/css </li>\r\n                      <li> text/javascript </li>\r\n                      <li> text/xml </li>\r\n                      <li> Application/xml </li>\r\n                      <li> Application/pdf </li>\r\n                      <li> Application/json </li>\r\n                      <li> Application/javascript </li>\r\n                      <li> Application/ogg </li>\r\n                      <li> Application/octet-stream </li>\r\n                      <li> Application/ </li>\r\n                      <li> Application/x-www-form-urlencode </li>\r\n                      <li> multipart/formed-data : 브라우저에서 서버로 HTML Form 내용 전송시 사용</li>\r\n                      <li> image/jpeg </li>\r\n                      <li> image/gif </li>\r\n                      <li> image/png </li>\r\n                      <li> image/svg+xml </li>\r\n                      <li> audio/midi </li>\r\n                      <li> audio/mpeg </li>\r\n                      <li> audio/webm </li>\r\n                      <li> audio/x-ms-wma </li>\r\n                      <li> audio/ogg </li>\r\n                      <li> audio/wav </li>\r\n                      <li> video/webm </li>\r\n                      <li> video/ogg </li>\r\n                      <li> application/msword </li>\r\n                      <li> application/pdf </li>\r\n                      <li> application/zip </li>\r\n                      <li> application/x-javascript </li>\r\n                      <li> application/ </li>\r\n                      <li> application/ </li>\r\n                      <li>  </li>\r\n                    </div>\r\n                  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  백엔드 관련용어  <small> </small>\r\n            </summary>\r\n            <div className=\"sblock\">\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  네트워크 관련용어  <small> </small>\r\n            </summary>\r\n            <div className=\"sblock\">\r\n              <details>\r\n                <summary className=\"sstitle\"> URL(Uniform Resource Locator) </summary>\r\n                <div className=\"mblock\">\r\n                  <li> <h3> URL 구조 </h3>\r\n                    <li> <div className=\"sstitle\"> http://www.naver.com:80/webtoon_folder/webtoon.jsp?id=123 </div> </li>\r\n                    <li> http : 통신 프로토콜(http, https, ftp, file 등)  </li>\r\n                    <li> www : 호스트 이름 </li>\r\n                    <li> naver : 2차도메인 / 메인도메인  </li>\r\n                    <li> .com : 1차도메인 / 최상위도메인  </li>\r\n                    <li> 80 : 포트번호  </li>\r\n                    <li> webtoon_folder : 디렉토리 </li>\r\n                    <li> webtoon.jsp : 파일명과파일형식  </li>\r\n                    <li> id=123 : 쿼리,매개변수 (get방식)  </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n                {/*  */}\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  서버 관련용어  <small> </small>\r\n            </summary>\r\n            <div className=\"sblock\">\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  호스팅, 클라우드 서버 </summary>\r\n                <div className=\"mblock\">\r\n                  <li> <h3> 호스팅 서버 </h3>  : 서버 공간을 돈받고 빌려주는 서버 , 24시간 켜져있는 서버 </li>\r\n                  <li> <h3> 공유 호스팅 </h3> : 서버1개를 여러명이서 사용, 가격이 저렴(개인), 하나의 서버를\r\n                    여러명의 사용자가 나누어씀, 한명의 사용자에 트래픽이 급격하게 발생하면 같은 서버를 사용하는 다른\r\n                    사용자들에게 문제가 발생  </li>\r\n                  <li> <h3> 전용 호스팅 </h3> : 서버1개를 통째로 빌려서 관리,권한 등을 가짐, 가격이 비쌈(개인이 부담하기에는 부담스러움) </li>\r\n                  <li> <h3> VPS(Vitual Private Server) 호스팅 </h3> : 서버 1개를 여러개의 구역으로 나눔 그리고 각 사용자들이\r\n                    구역을 사용하게 하는 방식, 서로에게 간섭이 되지 않음, 단 직접 서버를 구축해야함으로 리눅스에 대한 지식이 필요 </li>\r\n                  <li> <h3> 클라우드 </h3> : IaaS(하드웨어) , PaaS(IaaS+가상서버) , SaaS(PaaS+소프트웨어) </li>\r\n                  <li> <h3> IaaS 업체 </h3> 아마존, 구글, Azure, 네이버 클라우드 (1년간 무료제공)  </li>\r\n                  <li> <h3> StasS 업체 </h3>  </li>\r\n                  <li> <h3> PaaS 업체 </h3>  heroku , netlify  </li>\r\n                  <li> <h3> DaaS 업체 </h3>  </li>\r\n                  <li> <h3> FaaS 업체 </h3>  </li>\r\n                  <li> <h3> SaaS 업체 </h3>   </li>\r\n                </div>\r\n                {/*  */}\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  DNS 서버(네임서버) </summary>\r\n                <div className=\"mblock\">\r\n                  <div className=\"sstitle\"> 설명 </div>\r\n                  <li> 과거에는 URL과 IP주소를 hosts파일에 기록해서 가지고 있었음(수동적, 실시간반영이 안됨) </li>\r\n                  <li> 클라이언트가 naver.com이라는 주소를 입력하면 DNS서버에서 naver.com이라는 도메인 주소에 맞는지\r\n                    IP주소(호스팅서버의주소)를 찾아서 클라이언트에게 보내준다. </li>\r\n                  <li> DNS서버는 1개로 구성되어있지 않고 단계적으로 구성되어 있음\r\n                    <li> Root DNS 서버(com,org,net 등) : ICANN이라는 비영리 기관이 관리 , TLD DNS서버 IP들을 가지고 있음 </li>\r\n                    <li> 최상위 도메인(TLD) DNS 서버(A.com,B.net 등) : 도메인 등록기관이 관리 , 권한 DNS서버 IP들을 가지고 있음 </li>\r\n                    <li> 권한(Authoriatative) DNS 서버() : 개인도메인과 IP주소의 관계(기록,저장,변경)가 있는 서버,\r\n                      도메인/호스팅 업체의 네임서버 , 개인 DNS서버가 여기에 속한다. </li>\r\n                    <li> 캐싱 서버(recursive server) : 클라이언트가 제일 먼저 접근하는 DNS서버, 일정기간동안 도메인과 맞는 IP를 캐시라는\r\n                      형태로 저장하는 DNS서버(ISP(통신사),google,Cloudflare 등) , 이 요청하는 서버는 개인이\r\n                      바꿀 수 있음(일반적으로 ISP(통신사) 캐싱 DNS 서버로 지정되어 있음) </li>\r\n                    <li> <a href=\"https://www.dnsperf.com/#!dns-providers,Asia\" target=\"_blank\">\r\n                      해외 DNS 서버 속도 비교사이트 </a>  </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <div className=\"sstitle\"> DNS 서버 종류 </div>\r\n                  <li> <h3> 주 서버(Primary)  </h3>\r\n                    <li> 도메인 등록기관에 DNS서버를 등록할 때 주 DNS서버를 사용 </li>\r\n                    <li> 도메인을 IP로 바꾸는 역할을 한다. </li>\r\n                    <li> 클라이언트의 질의에 대한 응답 , 클라이언트에게 보낼\r\n                      질의에 대한 응답이 없으면 상위 도메인 서버에 다시 질의 </li>\r\n                  </li>\r\n                  <li> <h3> 보조 서버(Secondary) </h3>\r\n                    <li> 주 서버의 정보를 가지고 있다가 주 서버의 문제가 생기면 역할을 대신함 </li>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <li> <h3> 캐싱 서버(Cacging)  </h3>\r\n                    <li>  </li>\r\n                  </li>\r\n                  <div className=\"sstitle\">  </div>\r\n                  <li>  </li>\r\n                  <div className=\"sstitle\">  </div>\r\n                  <li>  </li>\r\n                  {/*  */}\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  아키텍처 관련용어 <small> </small>\r\n            </summary>\r\n            <div className=\"sblock\">\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  DB 관련용어  <small> </small>\r\n            </summary>\r\n            <div className=\"sblock\">\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  보안 관련용어  <small> </small>\r\n            </summary>\r\n            <div className=\"sblock\">\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <details>\r\n            <summary className=\"stitle\">  회사 관련용어  <small> </small>\r\n            </summary>\r\n            <div className=\"sblock\">\r\n              <details>\r\n                <summary className=\"sstitle\">  직위, 담당 업무,  </summary>\r\n                <div className=\"mblock\">\r\n                  <li> FE\t：프론트 엔드\t</li>\r\n                  <li> BE\t：백 엔드\t</li>\r\n                  <li> DB : 데이터베이스 </li>\r\n                  <li> 개발자 : 프로그램 개발 , DB 지식 필요\t</li>\r\n                  <li> PL(Project Leader) : 프로젝트의 프레임워크,DB,개발 가이드 등을 설계/작성하는 역할(핵심인력) </li>\r\n                  <li> PM(Project Manager) : 고객의 요구사항을 듣고 프로젝트 전체적인 기획, 일정, 인력 등을 관리하는 업무\t</li>\r\n                  <li> 실무 담당자 : 시스템의 실제 업무를 담당하는 사람\t</li>\r\n                  <li> 현업 담당자 : 고객사의 모든 업무 담당자를 말함\t</li>\r\n                  <li> \t</li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  마케팅? 업무 </summary>\r\n                <div className=\"mblock\">\r\n                  <li> B2B(Business To Business) : 기업대 기업  </li>\r\n                  <li> B2C(Business To Customer) : 기업대 고객  </li>\r\n                  <li> 리뉴얼 : 시스템을 새로 만듬(소규모) </li>\r\n                  <li> SI(System Integration) : 아무것도 없는 상태에서 새로 만드는 업체 </li>\r\n                  <li> SM(System Management) : 시스템 유지 보수 업체 </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  계약 관련 </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n              <details>\r\n                <summary className=\"sstitle\">  </summary>\r\n                <div className=\"mblock\">\r\n                  <li>  </li>\r\n                </div>\r\n              </details>\r\n              {/*  */}\r\n            </div>\r\n          </details>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"프레임워크와 라이브러리\"> 프레임워크와 라이브러리  </a> </div>\r\n          <li> 프레임워크 : 소프트웨어의 특정 문제를 해결하기 위해서 상호 협력하는 클래스와 인터페이스의 집합,\r\n            어플리케이션 개발할 때 코드,자료구조,DB연결 등 기능들이 제공이 되는 소프트웨어 프로그램(Maven,Gradle 등)  </li>\r\n          <li> 라이브러리 : 특정 기능들과 도구들을 모아놓은 집합 </li>\r\n          <li>   </li>\r\n          <li>   </li>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"Restful API\">  Restful API </a> </div>\r\n          <li> 어떤 자원에 대해 CRUD 연산을 수행하기 위해 URI(Resource)로 요청을 보내는 것 </li>\r\n          <li> Resource(자원,URI) + Method(행위,POST) + Representation of Resource(자원형태,JSON) = REST </li>\r\n          <div className=\"sblock\">\r\n            <div className=\"sstitle\"> Uniform Interface (유니폼 인터페이스) </div>\r\n            <li> HTTP표준이면 어떤 플랫폼에서도 사용가능 </li>\r\n            <div className=\"sstitle\">Stateless (상태 정보 유지 안함) </div>\r\n            <li> 서버는 요청을 별개의 것으로 인식  </li>\r\n            <div className=\"sstitle\"> Cacheable (캐시 가능)</div>\r\n            <li> http캐싱기능 적용 가능 </li>\r\n            <div className=\"sstitle\"> Client-Server Architecture </div>\r\n            <li> 서버는 api(자원)를 제공하고 클라이언트는 인증,세션 등을 관리하여 역할을 구분시킴 </li>\r\n            <div className=\"sstitle\"> Self-Descriptiveness(자체 표현 구조) </div>\r\n            <li> REST API 메시지만 보고도 이해할 수 있는 구조 </li>\r\n            <div className=\"sstitle\"> Layerd System (계층화) </div>\r\n            <li> 보안, 로드 밸런싱, 암호화 등을 계층을 추가하여 구조를 변경할 수 있다. 또한 Proxy,GateWay와 같은 네트워크\r\n              기반의 중간매체를 사용할 수 있게 해준다. 하지만 클라이언트는 직접 통신하는지, 중간 서버와\r\n              통신하는지 알 수 없다. </li>\r\n            <div className=\"sstitle\"> REST 규칙 </div>\r\n\r\n            <ol> URI는 명사를 사용 </ol>\r\n            <ol> 슬래시로 계층 관계를 표현 </ol>\r\n            <ol> URI의 마지막에는 슬래시를 붙이지 않는다. </ol>\r\n            <ol> URI는 소문자로 구성 </ol>\r\n            <ol> 가독성이 떨어지는 경우 하이푼을 사용 </ol>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"URL과 URI\">  URL과 URI </a> </div>\r\n          <li> URL(Uniform Resource Locator) : 인터넷에 있는 자원의 위치 </li>\r\n          <li> URI(Uniform Resource Identifier) : 인터넷 상의 자원을 식별하는 문자열, URL을 포함하고 있음 </li>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"IOC와 DI,POJO\">  IOC와 DI,POJO </a> </div>\r\n          <li>  </li>\r\n          <li> DI(의존성 주입) : 객체 의존 관계를 외부에서 넣어주는 방법 @Autowired로 스프링에서는 넣어줌 ,\r\n            방법은 생성자 주입,수정자(setter) 주입,필드 주입 3가지 방법중에 생성자 주입을 추천\r\n          </li>\r\n          <li>  </li>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"TDD (테스트 주도 개발)\">  TDD (테스트 주도 개발) </a> </div>\r\n          <li> 단위테스트를 작성 {\"->\"} 구현 클래스믈 작성 {\"->\"} 통합테스트 {\"->\"} </li>\r\n          <li>  </li>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"ORM(Object Relation Mapping)\"> ORM(Object Relation Mapping) </a> </div>\r\n          <li> 객체(Object)와 DB의 테이블을 Mapping 시켜 RDB 테이블을 객체지향적으로 사용하게 해주는 기술 </li>\r\n          <li> 과거에는 MyBatis라는 Object Mapping기술로 Java코드와 직접 작성한 SQL 코드를 Mapping하여\r\n            사용하였지만 현재는 JPA와 구현체 Hibernate로 처리를 한다. </li>\r\n          <li> 하지만 복잡한 쿼리를 작성하기에는 MyBatis가 더 편할 수도 있지만 생산성은 Hibernate가 더 좋다 그렇지만\r\n          </li>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"JPA(Java Persistence API)\">  JPA(Java Persistence API) </a> </div>\r\n\r\n          <div className=\"sblock\">\r\n            <li> 자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 인터페이스 </li>\r\n            <li> SQL언어가 아닌 자바 언어를 사용하여 객체지향 관점으로 관리할 수 있게 해준다.</li>\r\n            <li> 개발자가 DB작업에 집중을 덜 하여도 되고 CRUD를 사용하기 쉬우며 SQL을 수정하기도 쉽고\r\n              객체와 DB에 넣은 데이터타입의 불일치도 해결을 해준다.\r\n            </li>\r\n            <div className=\"sstitle\"> JPQL(Java Persistence Query Language) </div>\r\n            <li> 자바 객체를 이용하여 SQL 쿼리를 이용할 수 있는 언어</li>\r\n            <li> JPA(인터페이스)의 구현체 </li>\r\n            <li> JPA를 사용하기 위해서 필수로 사용해야할 필요는 없다. </li>\r\n            <li> 다른 구현체 ( DataNucleus,EclipseLink 등) 사용 가능 혹은 사용자 정의 구현체로도 사용 가능</li>\r\n            <div className=\"sstitle\"> Spring Data JPA</div>\r\n            <li> Repository 인터페이스로 메소드를 입력하면 적절한 쿼리를 날려준다. </li>\r\n            <div className=\"sstitle\"> JDBC API </div>\r\n            <li> JPA를 사용하면 SQL을 보내 DB와 통신하는 API 직접적으로 사용하는 일은 없다. </li>\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"Spring MVC\">  Spring MVC </a> </div>\r\n          <div className=\"sblock\">\r\n            <li className=\"sstitle\"> Dispatcher Servlet </li>\r\n            <li> 클라이언트 요청을 받고 HandlerMapping에게 찾으라고 지시  </li>\r\n            <li className=\"sstitle\"> HandlerMapping </li>\r\n            <li> Dispatcher Servlet에게 맵핑정보를 받아 Controller를 찾아 요청   </li>\r\n            <li className=\"sstitle\"> front controller </li>\r\n            <li> Controller의 명령에 따라 작업을 하고 View를 리턴 Dispatcher Servlet으로 보냄 </li>\r\n            <li className=\"sstitle\"> ViewResolver </li>\r\n            <li> Controller리턴 값 View를 검색 </li>\r\n            <li className=\"sstitle\"> View </li>\r\n            <li> 처리결과를 View에 송신하여 처리하고 그 View를 Dispatcher Servlet으로 이동하고 클라이언트에게 보냄 </li>\r\n            <li className=\"sstitle\">  </li>\r\n            <li>  </li>\r\n            <li className=\"sstitle\">  </li>\r\n            <li>  </li>\r\n            {/* <li className=\"sstitle\">  </li>\r\n                            <li>  </li> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"DataSource\"> DataSource  </a> </div>\r\n          <li> 자바에서는 Connection Pool을 구현하여 사용하였는데 DB연동과 관련되 로직들이 추상화 되어있다. </li>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"Controller와 RestController\">  Controller와 RestController </a> </div>\r\n          <a href=\"https://mangkyu.tistory.com/49?category=761302\"> 참고 </a>\r\n          <li> @Controller : 클라이언트의 요청을 받아 View를 반환 </li>\r\n          <li> @RestController(@Controller+@ResponseBody) :\r\n            클라이언트의 요청을 받아 객체형태(JSON 등)로 http에 담아 반환 </li>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"Transaction(트랜잭션)\"> Transaction(트랜잭션)  </a> </div>\r\n          <div className=\"sblock\">\r\n\r\n            <li> 장바구니에 담기 여러개 상품구매나 호텔+항공 예약 등 여러개의 쿼리를 사용하여 처리할 때 도중에 문제가 생기면 처음으로\r\n              돌려놓기 위한 방법   </li>\r\n            <div className=\"sstitle\">  1. 트랜잭션 동기화 </div>\r\n            <li> Connection 객체를 특정 장소에 보관하고 필요할 때 꺼내쓰는 방법, 작업 쓰레드마다 Connection 객체를\r\n              독립적으로 관리하기 때문에, 멀티쓰레드 환경에서 충돌이 발생할 여지가 없다. JDBC와 같은 종속적인 트랜잭션 동기화 코드는\r\n              hibernate에서 Connection이 아닌 session객체를 사용하기 때문에 문제를 유발한다. </li>\r\n            <div className=\"sstitle\">  2. 트랜잭션 추상화</div>\r\n            <li> 스프링에서는 트랜잭션 기술의 공통점을 담은 추상화 기술을 제공하여 종속적인 코드를 이용하지 않고\r\n              일관된 트랜잭션을 처리할 수 있게 도와준다.\r\n            </li>\r\n            <div className=\"sstitle\">  3. AOP를 이용한 트랜잭션</div>\r\n            <li>  트랜잭션을 담당하는 코드를 비즈니스 로직과 분리하여 처리한다.\r\n              <div className=\"mblock\">\r\n\r\n                <li> 트랜잭션 전파 : Propagation Requied(추가), Propagation Requires New(생성), Propagation Not Supported(별도로 동작)\r\n                  이외에도 처리방법이 존재 </li>\r\n                <li> 격리수준 : 서버에 여러 개의 트랜잭션이 동시에 진행될 때 순차진행 방법이 아닌 동시에 여러개를 진행하기 위해 조정 </li>\r\n                <li> 제한시간 : 트랜잭션을 수행하는 시간을 설정 </li>\r\n                <li> 읽기전용 : 트랜잭션 내에서 데이터를 조작하는 시도를 막고, 성능이 향상될 수 있다. </li>\r\n\r\n              </div>\r\n            </li>\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"세션,쿠키,토큰\"> 세션,쿠키,토큰,캐시  </a> </div>\r\n          <div className=\"sblock\">\r\n            <div className=\"sstitle\"> 세션 </div>\r\n            <div className=\"mblock\">\r\n            </div>\r\n            <div className=\"sstitle\"> 쿠키 </div>\r\n            <div className=\"mblock\">\r\n            </div>\r\n            <div className=\"sstitle\"> 토큰 </div>\r\n            <div className=\"mblock\">\r\n            </div>\r\n            <div className=\"sstitle\"> 캐시 </div>\r\n            <small> 자주 사용하는 데이터를 복사해 놓는 임시 장소, 캐시는 저장 공간이 작고 비용이 비싸지만 빠른\r\n              성능을 제공한다.  </small>\r\n            <div className=\"mblock\">\r\n              <li> 1. 접근 시간에 비해 원래 데이터를 접근하는 시간이 오래 걸리는 경우 </li>\r\n              <li> 2. 반복적으로 동일한 결과를 돌려주는 경우(이미지나 썸네일 등) </li>\r\n              <li> 3. memory에 저장하므로 DBMS의 부하를 줄일 수 있는 장점이 있다. </li>\r\n              <li> 4. Cache Hit는 캐시에 해당 데이터가 존재하면 반환\r\n                , Cache Miss는 데이터가 캐시에 존재하지 않으면 DBMS 또는 서버에\r\n                요청을 하는 경우\r\n              </li>\r\n            </div>\r\n            <div className=\"mblock\">\r\n              <div className=\"sstitle\"> Local Cache </div>\r\n              <li> Local 장비에서만 사용되는 캐시, Local 장비의 Resource를 이용 </li>\r\n              <li> Local에서만 작동되므로 속도가 빠름 </li>\r\n              <li> Local에서 작동하므로 다른 서버와 데이터 공유가 어렵다. </li>\r\n              <div className=\"sstitle\"> Global Cache </div>\r\n              <li> 여러 서버에서 Cache Server에 접근하여 사용하는 캐시로 분산된 서버에서 데이터를 저장하고 조회할 수 있다 </li>\r\n              <li> 네트워크를 통해 데이터를 가져오므로, Local Cache에 비해 상대적으로 느리다  </li>\r\n              <li> 별도의 Cache서버를 이용하기 때문에 서버 간의 데이터 공유가 쉽다. </li>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"서버기반, 토큰기반 인증시스템 차이\"> 서버기반, 토큰기반 인증시스템 차이  </a> </div>\r\n          <div className=\"sblock\">\r\n            <div className=\"sstitle\"> 서버 기반 인증 시스템  </div>\r\n            <li> 서버측에서 사용자의 정보를 기억하는 방식 </li>\r\n            <li> 서버에서 세션을 유지하는 방식 </li>\r\n            <li>  Sateful 서버</li>\r\n            <li>  하지만 세션을 저장하기 위해 메모리나 DB에 저장하는데 사용자가 많아지면 서버에 부하가 걸린다.\r\n              또한 세션을 분산처리하기는 어렵고 그리고 CORS를 이용하기에도 번거로움</li>\r\n            <div className=\"sstitle\"> 토큰 기반 인증 시스템  </div>\r\n            <li> 인증받은 사용자에게 토큰을 발급하고 서버에 요청을 보낼때 헤더에 토큰을 함께\r\n              보내도록 하여 유효성 검사를 하는 방식 </li>\r\n            <li> Stateless서버 </li>\r\n            <li> 여러개의 서버를 작동시키고 있을 경우 한개의 서버에만 세션이 저장될 경우 다른 서버를 이용하게 되면\r\n              이용이 되지 않지만 토큰 방식은 클라이언트가 가지고 있으므로 서버가 변경이 되어도 어떤 서버에서\r\n              처리를 해도 상관이 없어지는 장점이 있다. </li>\r\n            <li> OAuth를 이용하게 되면 Facebook, Google 등과 같이 소셜계정을 이용하여 다른 웹서비스에 로그인을 할 수 있다.  </li>\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"JWT(Json Web Token)\"> JWT(Json Web Token)  </a> </div>\r\n          <small> Json 포맷을 이용하여 사용에 대한 속성을 저장하는 Web Token 기반  </small>\r\n          <li> 토큰 자체를 정보로 사용하는 Self-Contained 방식으로 정보를 안전하게 전달한다. </li>\r\n          <li> 토큰을 static변수(매번 로컬스토리지에 꺼내지 않기 위해서)와 로컬 스토리지에 저장 </li>\r\n          <div className=\"sblock\">\r\n            <div className=\"sstitle\"> JWT 구조 </div>\r\n            <small> Base64로 인코딩, 각 부분을 .구분자를 사용하여 구분 </small>\r\n\r\n            <li> Header </li>\r\n            <div className=\"mblock\">\r\n              <li> typ : 토큰의 타입을 지정 </li>\r\n              <li> alg : 알고리즘 방식 지정, 서명 및 토큰 검증에 사용 </li>\r\n            </div>\r\n            <li> Payload </li>\r\n            <small> 토큰에 사용되는 정보의 조각 클레임이 담겨있다. JSON형태로 다수의 정보를 넣는다.  </small>\r\n            <div className=\"mblock\">\r\n\r\n              <div className=\"sstitle\"> 등록된 클레임(Registered Claim) </div>\r\n\r\n              <li> iss : 토큰 발급자 </li>\r\n              <li> sub : 토큰 제목 </li>\r\n              <li> aud : 토큰 대상자 </li>\r\n              <li> exp : 토큰 만료 시간(NumericDate형식으로 되야한다.) </li>\r\n              <li> nbf : 토큰 활성 날짜 , 토큰이 활성되는 날짜 </li>\r\n              <li> iat : 토큰 발급 시간 , 토큰 발급 경과 시간 </li>\r\n              <li> jti : JWT 토큰 식별자 , 중복 방지를 위해 사용, 일회용 토큰 등에 사용  </li>\r\n\r\n              <div className=\"sstitle\"> 공개 클레임(Public Claim) </div>\r\n              <li> 사용자 정의 클레임, 공개용 정보를 위해 사용, 충동 방지를 위해 URI포맷을 사용 </li>\r\n              <div className=\"sstitle\"> 비공개 클레임(Private Claim) </div>\r\n              <li> 사용자 정의 클레임, 서버와 클라이언트 사이에 임의로 지정한 정보를 저장 </li>\r\n\r\n            </div>\r\n            <li> Signature(서명) </li>\r\n            <div className=\"mblock\">\r\n              <li> 토큰을 인코딩하거나 유효성 검증을 할 때 사용하는 고유한 암호화 코드 </li>\r\n              <li> 인코딩한 값을 비밀키를 이용해 헤더에서 정의한 알고리즘으로 해싱을 하고 다시 BASE64로 인코딩하여 생성한다. </li>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"sblock\">\r\n\r\n            <div className=\"sstitle\"> JWT의 단점 </div>\r\n            <li> 토큰 자체에 정보를 담으므로 보안문제가 있을 수 있다. </li>\r\n            <li> 토큰에 3개로 구분이 되므로 정보가 많으면 토큰의 길이가 늘어난다. </li>\r\n            <li> 인코딩된 데이터는 탈취하여 디코딩하여 정보를 볼 수 있으므로 중요 데이터를 넣으면 안된다. </li>\r\n            <li> JWT는 Stateless이므로 토큰에 만료시간을 꼭 넣어주어야 한다. </li>\r\n            <li> 토큰을 클라이언트 측에서 관리해야 하기 때문에 토큰을 저장해야 한다. </li>\r\n\r\n          </div>\r\n          <div className=\"sblock\">\r\n\r\n            <div className=\"sstitle\"> 로그인 </div>\r\n            <li> 로컬 스토리지에 토큰이 존재하는지 유무 확인 </li>\r\n            <li> 만일 존재한다면 로그인 </li>\r\n            <li> 존재하지 않는다면 서버에서 토큰 발행 응답 헤더에 담아서 클라이언트에 보냄 </li>\r\n            <li> 클라이언트는 로컬스토리지와 static변수에 저장 그리고 로그인 </li>\r\n\r\n          </div>\r\n          <div className=\"sblock\">\r\n            <div className=\"sstitle\"> 로그아웃  </div>\r\n            <li> 로그아웃을 할 경우 토큰을 제거 </li>\r\n            <li> 실제 서비스에서는 사용한 토큰을 DB테이블에 넣어서 접근을 막아준다.  </li>\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"RequestBody, ModelAttribute, RequestParam의 차이\"> RequestBody, ModelAttribute, RequestParam의 차이  </a> </div>\r\n          <div className=\"sblock\">\r\n            <li className=\"sstitle\"> RequestParam </li>\r\n            <li> 1개의 HTTP 요청 파라미터를 받기 위해 사용 </li>\r\n            <li> 파라미터가 필수적으로 전송되어야 한다.(400에러 발생) </li>\r\n            <li className=\"sstitle\"> RequestBody </li>\r\n            <li> Json형태의 HTTP  Body 데이터를 MessageConverter를 통해 변환시킴 </li>\r\n            <li> 바인딩이 아닌 변환이므로 Setter함수가 없어도 변수들이 저장됨 </li>\r\n            <li className=\"sstitle\"> ModelAttribute </li>\r\n            <li>  multipart/form-data 형태의 HTTP Body 내용과 HTTP 파라미터들을 Setter를 통해 1대1로 객체에 바인딩시킴 </li>\r\n            <li> 변환이 아닌 바인딩 작업이므로 Setter함수가 필요(없으면 에러발생 )</li>\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"Bean, Configuration, Component\"> Bean, Configuration, Component </a> </div>\r\n          <div className=\"sblock\">\r\n            <div className=\"sstitle\"> Bean </div>\r\n            <li> Spring (Ioc 컨테이너,DI 컨테이너)에 의해 관리되는 POJO를 Bean라고 한다. </li>\r\n\r\n            <li> class : Bean으로 등록할 Java 클래스 </li>\r\n            <li> id : Bean의 고유 식별자 </li>\r\n            <li> scope : Bean을 생성하기 위한 방법(singleton(기본), prototype, web(request,session,application)) </li>\r\n            <li> constructor-arg : Bean 생성 시 생성자에 전달할 파라미터 </li>\r\n            <li> property : Bean 생성 시 setter에 전달할 인수 </li>\r\n\r\n            <div className=\"sstitle\"> Configuration </div>\r\n            <li> Bean을 사용하기위해 명시 </li>\r\n            <div className=\"sstitle\"> Component </div>\r\n            <li> 개발한 클래스를 Bean으로 등록할 때 사용, Spring에서는 @Bean을 사용하면 그안에 포함이 되어있다 </li>\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"OOP의 5가지 원칙(SOLID)\"> OOP의 5가지 원칙(SOLID)  </a> </div>\r\n          <div className=\"sblock\">\r\n\r\n            <div className=\"sstitle\"> 단일 책임 원칙(Single responsibility principle) </div>\r\n            <li> 하나의 클래스는 오직 하나의 책임(기능)만을 가져야 한다는 원칙, 예를 들어 로그인 클래스면 로그인만\r\n              담당을 해야지 회원가입이나 인증과 같은 기능들을 가지고 있으면 나중에 코드를 수정하거나 문제가 생길 때\r\n              파악이 어려울 수 있음 </li>\r\n            <div className=\"sstitle\"> 개방 폐쇄 원칙(Open/closed principle) </div>\r\n            <li> 클래스,모듈 함수 등은 쉽게 확장(코드 추가, 연결)이 되어야하고 수정에 대해서는 쉽게 일어나지 못하게\r\n              닫혀있어야 한다는 원칙 </li>\r\n            <div className=\"sstitle\"> 리스코프 치환 원칙(Liskov substitution principle) </div>\r\n            <li> 부모 클래스자리에 자식 클래스를 넣어도 작동이 잘 되어야 한다는 뜻, 자료형P의 객체를 자료형 C의 객체로\r\n              교체되어도 문제가 없어야 한다는 원칙 </li>\r\n            <div className=\"sstitle\"> 인터페이스 분리 원칙(Interface segregation principle) </div>\r\n            <li> 큰 덩어리의 인터페이스를 구체적이고 작은 단위들로 분리시킴으로 필요한 메서드 들만 이용한다는 원칙,\r\n              필요없는 모듈이나 기능을 가지고 있지 않게 하는 의미도 있고\r\n              인터페이스를 작은 단위들로 분리 시켜놓으면 리팩토링, 수정 등을 쉽게 할 수 있다. </li>\r\n            <div className=\"sstitle\"> 의존관계 역전 원칙(Dependency inversion principle) </div>\r\n            <li> 상위 모듈이 하위 모듈에 종속되어서는 안된다는 원칙, 하위 모듈에서 상위 모듈을 객체로 만들고\r\n              그 객체의 상위모듈에 영향을 주게 된다면 제일 하위 모듈에서 코드를 수정하게 되면 상위모듈에 영향을\r\n              미치게 되어 수정하기 어려운 경우가 될 수도 있다. </li>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"Spring Security\"> Spring Security </a> </div>\r\n          <small> 어플리케이션의 보안(인증,권한 등)을 처리하는 프레임워크  </small>\r\n          <li> 스프링 기반의 보안관련 프레임워크, 인증과 권한을 담당 </li>\r\n          <li> API서버에 특정 토큰을 Request헤더에 담아 보내면 인증이 완료되고\r\n            api 기능을 사용할 권한을 갖게 된다.  </li>\r\n          <li> 필터 기반으로 동작 </li>\r\n          <li> 세션-쿠키 방식으로 인증, DB에 검증이 된 회원일 경우 JSESSIONID부여한 후\r\n            다음 요청부터 JSESSIONID를 검증해서 유효하면 인증을 준다.\r\n          </li>\r\n          <li> 스프링 필터에는 엄청나게 많은 필터가 존재한다. </li>\r\n          <div className=\"sblock\">\r\n            <div className=\"sstitle\"> 인증(Authorization) </div>\r\n            <li> 사용자가 맞는지 확인 </li>\r\n            <div className=\"sstitle\"> 인가(Authentication) </div>\r\n            <li> 인증 성공 후 사용자가 자원에 접근 가능한지를 결정하는 절차 </li>\r\n            <div className=\"sstitle\"> Principal(접근주체) </div>\r\n            <li> Resource에 접근하는 대상 </li>\r\n            <div className=\"sstitle\"> Credential(비밀번호) </div>\r\n            <li> Resource에 접근하는 대상의 비밀번호 </li>\r\n          </div>\r\n        </div>\r\n        <div className=\"mblock\">\r\n          <li className=\"stitle\" > <a name=\"Cors(Cross Origin Resource Sharing)\"> Cors(Cross Origin Resource Sharing) 교차 출처 자원 공유  </a>   </li>\r\n          <li> API서버에 SPA프레임워크(react,vue 등)을 사용하게 되면 스프링과SPA프레임워크의\r\n            포트가 다르거나 서버가 다르면 서로 자원을 공유할 수 없게 하는 보안 정책 </li>\r\n          <li> 스프링 시큐리티에서 특정 도메인을 열거나 닫을 수 있음 </li>\r\n          <li> 필터나 mvc설정 등으로 처리가능 </li>\r\n        </div>\r\n\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"도메인\"> 도메인  </a> </div>\r\n          <a href=\"https://krnic.or.kr/jsp/popup/agencyFeePop.jsp\"> 도메인 비용 참고 </a>\r\n\r\n          <li> IP(255.255.255.1)이 아닌 문자로 사용하는 방식 </li>\r\n          <li> 서버의 확장 준비  </li>\r\n          <li> 서버를 분리하여 서버 기능의 명확성 과 문제발생시 빠른 문제점을 파악  </li>\r\n\r\n          <div className=\"sblock\">\r\n\r\n            <div className=\"sstitle\"> 도메인이란? </div>\r\n            <li> www.naver.com </li>\r\n            <div className=\"sstitle\"> 서브 도메인 </div>\r\n            <li> m.naver.com </li>\r\n            <li> cafe.naver.com </li>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"인증서\"> 인증서  </a> </div>\r\n          <div className=\"sblock\">\r\n\r\n            <div className=\"sstitle\"> SSL 인증서 </div>\r\n            <small> 인증서 등급 : OV </small>\r\n            <li> 도메인 * 서브도메인 갯수 만큼 받아야함 </li>\r\n            <li> *.naver.com 와 같이 사용하면 도메인 갯수 만큼 받아야함 </li>\r\n            <div className=\"sstitle\"> SAN 인증서 </div>\r\n            <small> 인증서 등급 : OV </small>\r\n            <li> 대표 도메인을 하나 두고 250개 까지 붙여서 사용 가능 </li>\r\n            <div className=\"sstitle\"> </div>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"WWW(World Wide Web)\">  WWW(World Wide Web) </a> </div>\r\n\r\n          <li> 인터넷에 연결된 컴퓨터를 이용해 사람들과 정보를 공유하는 공간 </li>\r\n          <li> HTTP프로토콜을 기반으로 HTML 작성된 하이퍼텍스트 페이지를 웹브라우저에서 읽을 수 있는곳 </li>\r\n          <li>  </li>\r\n\r\n          <div className=\"sblock\">\r\n\r\n            <div className=\"sstitle\">  </div>\r\n            <li>  </li>\r\n            <div className=\"sstitle\"> </div>\r\n            <li>  </li>\r\n            <div className=\"sstitle\"> </div>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"서버\"> 서버 </a> </div>\r\n          <div className=\"sblock\">\r\n\r\n            <div className=\"sstitle\"> 서버의 종류 </div>\r\n            <li> Web, FTP(파일전송), DB, File(이미지,음악,동영상 등), WAS, Proxy , DNS(도메인-&gt;IP로 변경)\r\n              MTA(메일 서버), TELNET(원격제어)    </li>\r\n            <div className=\"sstitle\"> Web 서버 </div>\r\n            <li> 정적 페이지 처리 </li>\r\n            <li> Apache , Nginx(추천) , IIS(비추)  </li>\r\n            <div className=\"sstitle\"> AWS 서버 </div>\r\n            <li> 동적 페이지 처리 </li>\r\n            <div className=\"sstitle\"> Proxy 서버 </div>\r\n            <li> 요청된 내용들을 캐시로 저장 </li>\r\n            <li> 원격서버에 접근해서 직접적으로 가져올 필요가 없음 , 시간 절약 </li>\r\n            <div className=\"sstitle\">  </div>\r\n            <li>  </li>\r\n            <div className=\"sstitle\"> 서버 운영 방식 </div>\r\n            <div> 웹 호스팅 , 호스팅(외부) 업체에서 1개의 서버의 일부분을 빌려 사용, 월 결제 </div>\r\n            <li> 장점 : 비용부담적음 , 단점 : 서버 리모델링,제약조건 등에 불리 </li>\r\n            <div> 서버 호스팅 , 호스팅(외부) 업체에서 1개의 서버를 임대나 구매하여 운영 </div>\r\n            <li> 장점 : 리모델링, 높은 성능, , 단점 : 비용 증가 </li>\r\n            <div> 클라우드 </div>\r\n            <li> 서버 여러대를 호스팅으로 운영이 가능하다. </li>\r\n            <li> 장점 : 사용자 폭증해도 대응 가능, 단점 : 비용이 사용하는 만큼 나감 </li>\r\n            {/* <div className=\"sstitle\">  </div>\r\n                                <li>  </li> */}\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"Dto, Dao, Vo, Entity\"> Dto, Dao, Vo, Entity </a> </div>\r\n          <div className=\"sblock\">\r\n\r\n            <div className=\"sstitle\">  </div>\r\n            <li>  </li>\r\n            <div className=\"sstitle\"> </div>\r\n            <li>  </li>\r\n            <div className=\"sstitle\"> </div>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mblock\">\r\n          <div className=\"stitle\"> <a name=\"업무 용어\"> 업무 용어 </a> </div>\r\n          <div className=\"sblock\">\r\n            <div className=\"sstitle\"> 스타트업 관련 용어</div>\r\n            <li> Wrap-up : 전에 것을 다시 보다 </li>\r\n            <li> Silo : 팀간에 협조하지 않음 </li>\r\n            <li> Issue : 문제 </li>\r\n            <li> R&amp;R : 역할과 책임 </li>\r\n            <li> Squad : 독립적인 조직(10명 내외) </li>\r\n            <li> Agile : 업무환경에 바로 반응하고 적극적으로 소통 </li>\r\n            <li> MVP(Minimum Viable Product) : 최소한의 요건이 충족되는 제품 </li>\r\n            <li> Launching : 시장에 출시 </li>\r\n            <li> Daily Scrum : 짧은 회의(진행상황, 문제, 진행율, 도움원조 등 공유하는 시간) </li>\r\n            <li> Pivot : 사업 방향 전환 </li>\r\n            <li> Sprint : 짧은 시간에 완료하는 프로젝트 </li>\r\n            <li> Demo day : 스타트 업에서 사업제품, 방향 등을 모델을 공개하는 행사 </li>\r\n            <li> Accelerator : 스타트업을 지원해주는 단체 </li>\r\n            <li> Incubating : 하드웨어나 장비 등을 지원해주는 공간 </li>\r\n            <li> Milestone : 과정 중에 해야할 중간 목표 </li>\r\n            <li> Series A B C : 초기시장진입투자 , 진출단계투자 , 확대투자 </li>\r\n            <li> Angel Investor : 스타트업에 직접 투자하는 개인,소수 투자자 </li>\r\n            <li> Venture Capital : 투자 전문 회사나 자본 </li>\r\n            <li> Exit(엑싯) : 상장이나 매각을 통해 투자자들에게 수익을 주는것 </li>\r\n            <li>  </li>\r\n            <div className=\"sstitle\">  </div>\r\n            <li>  </li>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Term;\r\n","import React from 'react';\r\n\r\nconst KeyMapVscode = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> VScode 터미널 코드 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 터미널 코드로 파일 열기 </h2>\r\n              <li> cd [폴더경로] </li>\r\n              <li> code [파일이나폴더1] [파일이나폴더2] [.] [파일명.확장자] <small> # WorkSpace에 여러개의 폴더를 한번에 열 수 있음 </small> </li>\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Extension - 자동완성 및 유용한 기능 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n\r\n              <li> 🚩 Turbo Console Log </li>\r\n              <div className=\"block3\">\r\n                <li> 콘솔로그를 생성하고 주석처리 삭제 등 유용한 콘솔로그 기능 탑재 </li>\r\n                <li> Ctrl + K , Ctrl + S - \"turbo\" 입력(turbo 키워드 설정) </li>\r\n                <li> Ctrl + , - turbo 입력 (turbo 설정) </li>\r\n                <div className=\"block4\">\r\n                  <li> Ctrl + Alt + L : (js,html script내부) console.log 생성 </li>\r\n                  <li> Shift + Alt + C : 이 익스텐션으로 사용된 console.log 모두 주석처리 </li>\r\n                  <li> Shift + Alt + U : 이 익스텐션으로 사용된 console.log 모두 주석해제 </li>\r\n                  <li> Shift + Alt + D : 이 익스텐션으로 사용된 console.log 모두 주석삭제 </li>\r\n                </div>\r\n              </div>\r\n\r\n              <li> 🚩 Visual Studio IntelliCode </li>\r\n              <div className=\"block3\">\r\n                <li> AI 보조 도구로 알맞은 API나 코드를 추천해준다. </li>\r\n              </div>\r\n\r\n              <li> 🚩 vscode-icons , Material Icon Theme </li>\r\n              <div className=\"block3\">\r\n                <li> 기존 vscode의 파일 아이콘을 변경하는 기능 </li>\r\n              </div>\r\n\r\n              <li> 🚩 npm Intellisense (사용한적 없음) </li>\r\n              <div className=\"block3\">\r\n                <li> 라이브러리의 이름이 일부 일치하면 코드를 추천해주는 기능 </li>\r\n              </div>\r\n\r\n              <li> 🚩 Bookmarks </li>\r\n              <div className=\"block3\">\r\n                <li> ctrl + alt + k 를 코드 줄에서 누르면 좌측 북마크 목록에 기록이 된다. </li>\r\n              </div>\r\n\r\n              <li> 🚩 Korean Language Pack for Visual Studio Code </li>\r\n              <div className=\"block3\">\r\n                <li> 한국어 팩 </li>\r\n              </div>\r\n\r\n              <li> 🚩 Settings Sync (사용해본적은 없지만 나중에 참고) </li>\r\n              <div className=\"block3\">\r\n                <li> 기존에 개발환경 세팅을 GitHub gist에 업로드 해놓고서 사용 </li>\r\n                <li> settings.json도 동기화 가능 </li>\r\n              </div>\r\n\r\n              <li> 🚩 Live Server </li>\r\n              <div className=\"block3\">\r\n                <li> 코드를 작성하면 바로 브라우저에서 적용해서 보여주는 기능 </li>\r\n              </div>\r\n\r\n              <li> 🚩 Todo Tree ( 나중에 사용해보기 ) </li>\r\n              <div className=\"block3\">\r\n                <li>  주석으로 내가 무엇을 하려고 했는지 표시를 해주고 기록해주는 기능 </li>\r\n              </div>\r\n\r\n              <li> 🚩 REST Client ( 좀더 알아볼 것) </li>\r\n              <div className=\"block3\">\r\n                <li> Postman에서 사용하는 Rest API 기능을 사용할 수 있다. </li>\r\n                <li> 본인 Project Workspace에 확장자를 .http 혹은 .rest로 파일을 만든다. </li>\r\n                <div className=\"block4\">\r\n                  <li> GET http://주소  </li>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className=\"block4\">\r\n                  <li> POST http://주소 </li>\r\n                  <li> Content-Type: application/json </li>\r\n                  <li> {'{'}\r\n                    <li> \"id\": 123, </li>\r\n                    <li> \"pasword\": 123, </li>\r\n                  </li>\r\n                  <li>  </li>\r\n                  <li> {'}'} </li>\r\n                </div>\r\n                <div className=\"block4\">\r\n                  <li> DELETE http://주소 </li>\r\n                  <li>  </li>\r\n                </div>\r\n                <div className=\"block4\">\r\n                  <li> PUT http://주소 </li>\r\n                  <li>  </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n\r\n              <li> 🚩 Sort Lines ( 나중에 사용해보기 ) </li>\r\n              <div className=\"block3\">\r\n                <li> 드래그를 한 후에 설정을 하면 코드가 알파벳 순서로 정렬이 되게 하는 기능 </li>\r\n              </div>\r\n\r\n              <li> 🚩  </li>\r\n              <div className=\"block3\">\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <li> 🚩  </li>\r\n              <div className=\"block3\">\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <li> 🚩 TODO Highlight </li>\r\n              <div className=\"block3\">\r\n                <li> TODO와 FIXME 주석 기능을 사용할 수 있게 해준다.  </li>\r\n                <div className=\"block4\">\r\n                  <li> Ctrl + Shift + P - \"todo-highlight\" 입력 - todo-highlight: List highlighted annotations 클릭 </li>\r\n                  <li> {'//'} TODO: todo 사용 <small> # {' \"//\" 문자뒤에 한칸을 띄어쓰기 해야한다. '} </small> </li>\r\n                  <li> {'//'} FIXME: todo 사용 <small> # {' \"//\" 문자뒤에 한칸을 띄어쓰기 해야한다. '} </small> </li>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n\r\n              <li> 🚩 advanced-new-file </li>\r\n              <div className=\"block3\">\r\n                <li> 새 파일을 만들 때 코드를 입력하고 저장하고 폴더이름을 입력하는 방법을 생략하고 바로 파일이름하고 만들어짐 </li>\r\n                <li> Ctrl + Shift + P - Advanced New File - 파일 만들 경로 선택 - \"파일명.확장자명\" 입력 </li>\r\n                <li> 기존 새로운 파일 만들기 변경해서 사용하기 : Ctrl + K , Ctrl + S - \"new file\" 입력 - Advanced New File에 Key Binding 변경하기  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <li> 🚩 Prettier </li>\r\n              <div className=\"block3\">\r\n                <li> 사용자가 설정하여 코드의 통일성을 부여하는 기능  </li>\r\n                <li> File - Preferences - settings - Extensions - Prettier </li>\r\n                <li> File - Preferences - settings - 우측 상단에 -\r\n                  Open Settings(JSON) 아이콘 클릭 - 구버전 방식의 Prettier 코드  추가적으로 입력 </li>\r\n                <div className=\"block4\">\r\n                  <li> prettier.printWidth (default: 80) <small> 한 줄의 글자수를 설정 </small> </li>\r\n                  <li> prettier.tabWidth (default: 2) <small> 탭을 눌렀을 때 간격 </small>  </li>\r\n                  <li> prettier.singleQuote (default: false) <small> 객체, 배열, 함수 등 줄 뒤에 쉼표를 사용할지 선택 </small>  </li>\r\n                  <li> <small> none : 사용x , es5 : ES5에서 유효한 후행 쉼표 , all : 가능하면 후행 쉼표 </small>  </li>\r\n                  <li> prettier.bracketSpacing (default: true) <small> 객체 내부의 공백을 제어 </small></li>\r\n                  <li> prettier.jsxBracketSameLine (default: false) <small> jsx 요소 마지막 다음 줄에 닫기 &gt; 표시 </small> </li>\r\n                  <li> prettier.parser (default: 'babylon') <small> javascript에서만 사용됨, 파서를 설정 </small>  </li>\r\n                  <li> prettier.semi (default: true) <small> 문장 뒤에 세미콜론 설정 여부 </small>  </li>\r\n                  <li> prettier.useTabs (default: false) <small> 탭이 있는 줄은 들여쓰기를 사용 여부 </small>  </li>\r\n                  <li> prettier.proseWrap (default: 'preserve') <small> 여러 줄에 걸쳐 산문을 랩핑 ??? </small>  </li>\r\n                  <li> prettier.arrowParens (default: 'avoid') <small> 화살표 함수의 매개변수 주위에 괄호를 자동으로 붙힘 </small>  </li>\r\n                  <li> prettier.jsxSingleQuote (default: false)  <small> 큰 따옴표대신 작은 따옴표를 사용한다는 의미 </small>  </li>\r\n                  <li> prettier.htmlWhitespaceSensitivity (default: 'css') <small> HTML 파일의 공백 감도 지정 ??? </small>  </li>\r\n                  <li> prettier.endOfLine (default: 'auto') <small> ? </small>  </li>\r\n                  <li> prettier.quoteProps (default: 'as-needed') <small> 객체의 속성이 인용될 때 변경 </small>  </li>\r\n                  <li> prettier.requireConfig (default: false) <small> prettierconfig 파일 적용 선택 </small>  </li>\r\n                  <li> prettier.ignorePath (default: 파일명) <small> 파일명(.prettierignore)에 prettier이 적용 안되게함 </small>  </li>\r\n                  <li> prettier.disableLanguages (default: [\"vue\"]) <small> 확장 기능을 비활성화 할 언어 ID 목록 </small>  </li>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Extension - 색깔, 디자인 ,이펙트 등 </summary>\r\n            <div className='block2'>\r\n\r\n              <li> 🚩 indent-rainbow </li>\r\n              <div className=\"block3\">\r\n                <li> 공백 탭 공간을 색깔로 구분하여 구분하기 쉽게 해준다. </li>\r\n              </div>\r\n\r\n              <li> 🚩 Bracket Pari Colorizer, Bracket Pair Colorizer 2 </li>\r\n              <div className=\"block3\">\r\n                <li> 각 태그의 영역을 색깔로 구분지어 보기 쉽게해준다.  </li>\r\n              </div>\r\n\r\n              <li> 🚩 Theme 종류 (현재 Panda Theme 사용) </li>\r\n              <div className=\"block3\">\r\n                <li> 코드의 태그,클래스, 등등의 색깔을 바꾸거나 배경의 색, 테두리 색등을 바꾸는 기능 </li>\r\n                <li> 너무 많아서 본인에게 맞는 것을 찾아서 사용 </li>\r\n              </div>\r\n\r\n              <li> 🚩 Better Comments </li>\r\n              <div className=\"block3\">\r\n                <li>  주석에 색을 입히는 것이 가능하다 </li>\r\n              </div>\r\n\r\n\r\n              <li> 🚩 open in browser </li>\r\n              <div className=\"block3\">\r\n                <li> browser로 열어서 바로 볼 수 있게 해준다. </li>\r\n                <li> 우측 클릭 - open in Default Browser </li>\r\n              </div>\r\n\r\n              <li> 🚩 Polacode  </li>\r\n              <div className=\"block3\">\r\n                <li> 입력한 코드를 이미지로 바꾸어주는 기능 </li>\r\n              </div>\r\n\r\n              <li> 🚩 </li>\r\n              <div className=\"block3\">\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> Extension - HTML/CSS/JS </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n\r\n              <li> 🚩 Auto Rename Tag 👍 </li>\r\n              <div className=\"block3\">\r\n                <li> 태그를 변경할 시 마감태그가 자동으로 변경되게 해준다. </li>\r\n              </div>\r\n\r\n              <li> 🚩 Auto Close Tag 👍 </li>\r\n              <div className=\"block3\">\r\n                <li> HTML 여는태그만 입력해도 닫는태그 코드가 자동으로 생성 </li>\r\n              </div>\r\n\r\n              <li> 🚩 HTML to CSS autocompletion </li>\r\n              <div className=\"block3\">\r\n                <li> html에서 작성한 클래스나 아이디명을 css파일에서 자동으로 완성을 해주는 기능 </li>\r\n              </div>\r\n\r\n              <li> 🚩 Html Css Support </li>\r\n              <div className=\"block3\">\r\n                <li> html에서 css를 추천해주는 기능 </li>\r\n              </div>\r\n\r\n              <li> 🚩 CSS Peek </li>\r\n              <div className=\"block3\">\r\n                <li> html에서 클래스나 아이디를 클릭하여 css내용을 쉽게 찾아볼 수 있게 해준다.  </li>\r\n                <li> Ctrl 버튼을 누르고 마우스 왼쪽을 클릭하면 참조된 위치로 이동이 가능하다. </li>\r\n              </div>\r\n\r\n              <li> 🚩 colorize , Color Highlight </li>\r\n              <div className=\"block3\">\r\n                <li> css 파일에서 색을 입력하면 css코드에서 색을 보여줌 </li>\r\n              </div>\r\n\r\n              <li> 🚩 Highlight Matching Tag </li>\r\n              <div className=\"block3\">\r\n                <li> 현재 태그의 쌍이 어디인지를 알려준다. </li>\r\n              </div>\r\n\r\n              <li> 🚩 Live Sass Compiler </li>\r\n              <div className=\"block3\">\r\n                <li> sass,scss 컴파일을 자동으로 해준다. </li>\r\n                <li> 설치하고 코드를 입력후에 아래에 Watch Sass를 클릭하면 자동으로 코드가 생성 </li>\r\n                <a href=\"https://github.com/ritwickdey/vscode-live-sass-compiler/blob/master/docs/settings.md\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  sass 파일 설정은 이 곳을 참고\r\n                </a>\r\n                <li> 만들어진 map,css 파일에 주석을 만들지 않는 설정 방법 : Ctrl + , - \"live sass compile\" 입력 -\r\n                  Live Sass Compile {'>'} Settings: Generate Map - settings.json - \"liveSassCompile.settings.generateMap\": false로 변경\r\n                </li>\r\n                <li> 만들어지는 css파일 저장 경로 지정하기 : 만들어진 map,css 파일에 주석을 만들지 않는 설정 방법 : Ctrl + , - \"live sass compile\" 입력 -\r\n                  Live Sass Compile {'>'} Settings: Generate Map - settings.json - \"liveSassCompile.settings.formats\"의 \"savaPath\"를 변경해주면된다.  </li>\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <li> 🚩 scss-lint </li>\r\n              <div className=\"block3\">\r\n                <li> scss 문법 검사를 해준다. </li>\r\n              </div>\r\n\r\n              <li> 🚩 JavaScript code snippets </li>\r\n              <div className=\"block3\">\r\n                <li> 자바스크립트 코드 스니펫이다. </li>\r\n                <li> 약간의 암기가 필요하다. </li>\r\n              </div>\r\n\r\n              <li> 🚩 Quokka.js </li>\r\n              <div className=\"block3\">\r\n                <li> 노드를 실행하지 안혹서도 결과를 알 수 있다. </li>\r\n                <li> Ctrl + Shift + P - Start on Current File </li>\r\n              </div>\r\n\r\n              <li> 🚩  </li>\r\n              <div className=\"block3\">\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> VScode 단축키 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n\r\n              <li> 🚩 새로운 윈도우 창 열기 <span className=\"col_keymap\">  Ctrl + Shift + N  </span> </li>\r\n              <li> 🚩 새로운 탭 열기 <span className=\"col_keymap\"> Ctrl + N </span> </li>\r\n              <li> 🚩 파일 열기 <span className=\"col_keymap\"> Ctrl + O </span> </li>\r\n              <li> 🚩 현재 탭 닫기 <span className=\"col_keymap\"> Ctrl + F4, Ctrl + W </span> </li>\r\n              <li> 🚩 왼쪽에 익스플로러 창 열기 <span className=\"col_keymap\"> Ctrl + Shift + E </span> </li>\r\n              <li> 🚩 왼쪽에 익스텐션 창 열기 <span className=\"col_keymap\"> Ctrl + K +S </span> </li>\r\n              <li> 🚩 이전에 닫힌 창 다시 열기 <span className=\"col_keymap\"> Ctrl + Shift + T </span> </li>\r\n              <li> 🚩 화면 창 분할 <span className=\"col_keymap\"> Ctrl + \\, Ctrl + 2 </span> </li>\r\n              <li> 🚩 분할된 화면 창 포커싱 이동하기 <span className=\"col_keymap\"> Ctrl + 번호 </span> </li>\r\n              <li> 🚩 들여쓰기 <span className=\"col_keymap\"> Tab </span> </li>\r\n              <li> 🚩 코드 줄 이동 <span className=\"col_keymap\"> Alt + 👆 , Alt + 👇 </span> </li>\r\n              <li> 🚩 코드 줄 복사 <span className=\"col_keymap\"> Shift + Alt + 👆 </span> </li>\r\n              <li> 🚩 코드 잘라내기,삭제하기 <span className=\"col_keymap\"> Ctrl + X </span> </li>\r\n              <li> 🚩 코드 줄 번호로 이동하기 <span className=\"col_keymap\"> Ctrl + g </span> </li>\r\n              <li> 🚩 이전에 작성하던 코드 줄로 이동하기 <span className=\"col_keymap\"> Alt + 👈,Alt + 👉 </span> </li>\r\n              <li> 🚩 코드 영역 접고 펼치기 <span className=\"col_keymap\"> Ctrl + Shift + [, Ctrl + Shift + ] </span> </li>\r\n              <li> 🚩 드래그된 코드 자동 정렬하기 <span className=\"col_keymap\"> Ctrl + K + F </span> </li>\r\n              <li> 🚩 한 줄 전체 드래그 <span className=\"col_keymap\"> Ctrl + L </span> </li>\r\n              <li> 🚩 한 줄 주석처리하기 <span className=\"col_keymap\"> Ctrl + / </span> </li>\r\n              <li> 🚩 세로 줄로 코드 수정하기 <span className=\"col_keymap\"> Ctrl + Shift + 마우스 왼쪽 버튼 </span> </li>\r\n              <li> 🚩 코드 화면 이동하기 <span className=\"col_keymap\"> Ctrl + 👆 , Ctrl + 👇 </span> </li>\r\n              <li> 🚩 코드에서 단어 검색하기 <span className=\"col_keymap\"> Ctrl + F </span> </li>\r\n              <li> 🚩 코드에서 단어 변경하기 <span className=\"col_keymap\"> Ctrl + H </span> </li>\r\n              <li> 🚩 모든 파일 코드에서 단어 검색하기 <span className=\"col_keymap\"> Ctrl + Shift + F </span> </li>\r\n              <li> 🚩 모든 파일 코드에서 단어 변경하기 <span className=\"col_keymap\"> Ctrl + Shift + H </span> </li>\r\n              <li> 🚩 파일 찾기 <span className=\"col_keymap\"> Ctrl + P  </span> </li>\r\n              <li> 🚩 명령어 검색하는 창 열기 <span className=\"col_keymap\"> Ctrl + Shift + P, F1 </span> </li>\r\n              <li> 🚩 VScode 설정 창 이동 <span className=\"col_keymap\"> Ctrl + , </span> </li>\r\n              <li> 🚩 VScode Keymap창 이동 <span className=\"col_keymap\"> Ctrl + K , Ctrl + S  </span> </li>\r\n              <li> 🚩 드래그 한 라인 양쪽에 태그 달기(htmltagwrap 익스텐션) <span className=\"col_keymap\"> Alt + W  </span> </li>\r\n              <li> 🚩  <span className=\"col_keymap\">  </span> </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> VScode 설정 </summary>\r\n            <div className='block2'>\r\n\r\n              <li> 🚩 워크스페이스 계단식으로 만들기 </li>\r\n              <div className=\"block3\">\r\n                <li> File - Preferences - Settings - Features - Explorer - Compact Folders 체크 해제 </li>\r\n              </div>\r\n\r\n              <li> 🚩 탭키가 안 먹힐때 </li>\r\n              <div className=\"block3\">\r\n                <li> Ctrl + M을 누르면 포커스 이동으로 바뀜 </li>\r\n              </div>\r\n\r\n              <li> 🚩 django html 자동변환 되는것을 .html로 바꾸는 방법 </li>\r\n              <div className=\"block3\">\r\n                <li> Ctrl +, - settings.json 검색 - settings.json 파일 열기 - 아래 코드 추가\r\n                  <li> {'     \"files.associations\": {  '} </li>\r\n                  <li> {'         \"*.html\": \"html\"  '} </li>\r\n                  <li> {'     },  '} </li>\r\n                </li>\r\n              </div>\r\n\r\n              <li> 🚩 공백문자 표기 설정하기 (공백 문자열을 설정하는 것이 아니라 그닥 의미는 없다.) </li>\r\n              <div className=\"block3\">\r\n                <li> 1. File - Preferences - Settings - User - Text Editor - Render Whitespace  </li>\r\n                <div className=\"block4\">\r\n                  <li> none : 공백을 표시하지 않음 </li>\r\n                  <li> boundary : 공백이 2글자이상부터 표시 </li>\r\n                  <li> selection(default) : 선택된 텍스트만 공백문자를 표시 </li>\r\n                  <li> all : 공백을 모두 표시 </li>\r\n                </div> <br />\r\n\r\n                <li> 2. Ctrl + Shift + P - \"settings.json\" 클릭 - \"editor.renderWhitespace\": \"[none,boundary,selection,all]\" 4개중에 하나 선택해서 입력하기 </li>\r\n              </div>\r\n\r\n              <li> 🚩 좌측 Workspace에서 보고 싶지 않은 확장자 파일들 숨기기 </li>\r\n              <div className=\"block3\">\r\n                <li> Ctrl + , - \"Files: Exclude\" - Add Pattern 누르고 확장자명 입력 </li>\r\n              </div>\r\n\r\n              <li> 🚩  </li>\r\n              <div className=\"block3\">\r\n                <li>  </li>\r\n              </div>\r\n\r\n              <li> 🚩  </li>\r\n              <div className=\"block3\">\r\n                <li>  </li>\r\n              </div>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> VScode Snippet </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설정 </h2>\r\n              <li> 1. File - Preferences - User Snippets - New Global Snippets File </li>\r\n              <li> 2. Ctrl + Shift + P - \"snippets\" 입력 -New Global Snippets File </li>\r\n              <li> extension 스니펫이 존재 </li>\r\n\r\n              <h2 className='h2'> ✔ 예시 </h2>\r\n              <li> 소제목\r\n                <div className='block3'>\r\n                  <h3 className='h3'> 🎈 스니펫 코드 예시 </h3>\r\n                  <div className='block4'>\r\n                    <li> {'{'}\r\n                      <li>\t\"스니펫이름\": {'{'} </li>\r\n                      <li> \"scope:\" \"사용언어\", </li>\r\n                      <li> \"prefix\": \"스니펫약어, 코드에서 쓰는 약어\" </li>\r\n                      <li>\r\n                        <li> \"body\": [ </li>\r\n                        <li> \"내용1\", </li>\r\n                        <li> \"내용2\", </li>\r\n                      </li>\r\n                      <li> ], </li>\r\n                      <li> \"description\": \"스니펫설명\" </li>\r\n                      <li> {'}'} </li>\r\n                    </li>\r\n                    <li> {'}'} </li>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div className='block1'>\r\n          <details>\r\n            <summary> VScode에서 Java사용하는 방법 </summary>\r\n            <div className='block2'>\r\n\r\n              <h2 className='h2'> 📌 설명 </h2>\r\n              <li> 1 </li>\r\n              <li> VS Code Extension에서 Java Extension Pack 설치 </li>\r\n              <li> VS Code 재시작 </li>\r\n              <li> File - Preperences - Settings - java.home 검색 - edit in settings.json - \"java.home\": \"\" 에 자바\r\n                설치된 경로를 넣어준다.\r\n                <li> C:/Program Files/Java/jdk-11.0.10  # 경로 기호 /로 변경해서 넣어야 함</li>\r\n              </li>\r\n              <li> VS Code에서 자바로 시작해서 실행을 하면 작동이 되는 것을 볼 수 있다. </li>\r\n\r\n              <h2 className='h2'> 📌 VS COde에서 Spring Boot Project 시작하기 </h2>\r\n              <li> VS Code Extension에서 Spring Boot Extension Pack 설치 </li>\r\n              <li> Ctrl + Shift + P - Java:Overview 검색 </li>\r\n              <li> Create Spring Boot Project.. 클릭 </li>\r\n              <li> Gradle  </li>\r\n              <li> Spring Boot Version 설정 </li>\r\n              <li> groupId : 프로젝트 식별자 <small> # com.example </small> </li>\r\n              <li> artifactId : 패키지이름 </li>\r\n              <li> version : 버전 정보 </li>\r\n              <li> package : 기본 패키지 정보 </li>\r\n\r\n              <h2 className='h2'> 📌 VS COde에서 Maven Project 시작하기 </h2>\r\n              <li> Ctrl + Shift + P - Java:Overview 검색 </li>\r\n              <li> Create a Maven project </li>\r\n              <li> maven-archetype-quickstart </li>\r\n              <li> 버전 선택(1.4) </li>\r\n              <li> groupId : 프로젝트 식별자 # com.test.maven</li>\r\n              <li> artifactId : 패키지이름 </li>\r\n              <li> version : 버전 정보 </li>\r\n              <li> package : 기본 패키지 정보 </li>\r\n              <li> 자바11을 설치해서 maven버전을 3.8이상으로 바꾸려고 했는데\r\n                버전을 보니 4.0.0이 되어있어서 건드릴 필요는 없는것 같다. </li>\r\n              <li>  </li>\r\n\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default KeyMapVscode;","import React from 'react';\r\n\r\nconst KeyMapIntellij = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\" >\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 인텔리제이 설정 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 주석 </h2>\r\n            <li> 주석 색깔 변경하는 방법\r\n              <div className=\"block4\">\r\n                <li> File - Settings - todo 검색( Editor - TODO) </li>\r\n                <li> + 클릭하고 아래와 같이 입력  </li>\r\n                <li> Pattern : \\b(키워드|fixme)\\b.* </li>\r\n                <li> Use color scheme TODO default colors 체크 해제 </li>\r\n                <li> 원하는 색깔 지정 </li>\r\n                <li> OK 누르기 </li>\r\n                <li> //키워드 주석입력 , 이와 같이 이제 사용하면 주석색깔이 변경되어 사용가능 </li>\r\n              </div>\r\n            </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <li> 주석 색깔 변경하는 방법 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 인텔리제이 파일 생성때 자동 주석 생성 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className='block4'>\r\n              <li> Ctrl+Alt+S - File and Code Templates </li>\r\n              <div className=\"block3\">\r\n                <li> {\" /** \"} </li>\r\n                <li> {\"     * PackageName : ${PACKAGE_NAME} \"} </li>\r\n                <li> {\"     * FileName : ${NAME} \"} </li>\r\n                <li> {\"     * Author : 이 름 \"} </li>\r\n                <li> {\"     * Date : ${DATE} \"} </li>\r\n                <li> {\"     * Description :  \"} </li>\r\n                <li> {\" */ \"} </li>\r\n              </div>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <ul>\r\n        <span className=\"lblock\">\r\n\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> Intellij 단축키\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'> Intellij 단축키 </div>\r\n                <div className='mblock'>\r\n                  <li> <a href=\"https://gmlwjd9405.github.io/2019/05/21/intellij-shortkey.html\" target=\"_blank\"> 참고 </a></li>\r\n                  <li> Ctrl + D   : 코드 한줄 아래 복사 붙여넣기 </li>\r\n                  <li> Ctrl + R   : 내용 바꾸기 </li>\r\n                  <li> Ctrl + Shift + R   : 모든 파일 내용 바꾸기 </li>\r\n                  <li> Alt + Insert   : 생성자, getter,setter 등 </li>\r\n                  <li> Ctrl + O : 오버라이딩 메소드 선택 </li>\r\n                  <li> Ctrl + X   : 코드 한줄 지우기 </li>\r\n                  <li> Ctrl + Alt + l   : 코드 정리 </li>\r\n                  <li> Alt + Shift + 방향키   :  코드 라인 위치 옮기기 </li>\r\n                  <li> Ctrl + /   : 해당 줄 주석 처리 </li>\r\n                  <li> Ctrl + E   : 최근 실행 파일 확인 </li>\r\n                  <li> </li>\r\n                  <li> Alt + 1  : Project View 열고 닫기 </li>\r\n                  <li> Ctrl + Shift + T   : 테스트 코드 작성 </li>\r\n                  <li> Shift + F6   : 이름 변경(동일이름 전부 변경) </li>\r\n                  <li> Ctrl + A   : 코드 전체 드래그 </li>\r\n                  <li> Alt + Enter   :  코드 수정 제안 </li>\r\n                  <li> Ctrl + B   : 코드에서 선택된 필드 코드로 이동 </li>\r\n                  <li> Alt + F7   : 항목이 사용된 위치를 모두 표시 </li>\r\n                  <li> Ctrl + W   : 코드 주위 영역 드래그 확대 </li>\r\n                  <li> Ctrl + Shift + W   : 코드 주위 영역 드래그 축소 </li>\r\n                  <li> Shift + Ctrl + A   : 모든 액션을 검색 가능  </li>\r\n                  <li> Ctrl + Alt +Shift + T : 무엇인가를 실행할 때 윈도우용 단축키를 보는 방법(미확인) </li>\r\n                  <li> </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> Intellij 설정\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className=\"sblock\">\r\n                <div className=\"sstitle\"> 폰트 크기 마우스 휠로 설정하기 </div>\r\n                <li>  File - Settings - Editor - General - Change font size with Ctrl+Mouse Wheel 체크하기 </li>\r\n                <div className=\"sstitle\"> 자동 저장 설정 , 저장하지 않은 파일 표시 </div>\r\n                <li> File - Settings - Appearance &amp; Behavior - Systme Settings - Autosave탭</li>\r\n                <li> File - Settings - Editor - General - Editor Tabs - Mark modified(*) 체크 </li>\r\n                <div className=\"sstitle\"> 탭 갯수 제한 설정 </div>\r\n                <li> File - Settings - Editor - General - Editor Tabs - Tab limit: 갯수 설정하기 </li>\r\n                <li>   </li>\r\n                <div className=\"sstitle\"> Gradle 사용할 경우 실행 속도를 빠르게 하기 위한 설정 </div>\r\n                <li> File - Settings - Build,Extension,Deployment - Build Tools - Gradle - Build and run using, Run tests using\r\n                  을 둘다 Intellij IDEA 로 바꾸기 </li>\r\n                <div className=\"sstitle\"> 콘솔창 가로 스크롤 생성하지 않게 하는 방법 </div>\r\n                <li> 아래 아이콘들 중에 메뉴바3개에 줄바꿈을 표시하는 soft-wrap 아이콘을 클릭하면 된다. </li>\r\n                <div className='sstitle'> 인텔리 제이 한글 깨짐 </div>\r\n                <div className='mblock'>\r\n                  <li> [1] 파일 설정 encoding 바꾸기\r\n                    <li> ctrl+alt+s - settings - editor - file encodings </li>\r\n                    <li> Global Encoding , Project Encoding , Default encoding for properties files 3곳 UTF-8로 변경 </li>\r\n                  </li>\r\n                  <li> [2] 인텔리제이 VM Options 바꾸기\r\n                    <li> Help - Edit Custom VM Options </li>\r\n                    <li> 제일 아래에 -Dfile.encoding=UTF-8 코드 추가 </li>\r\n                  </li>\r\n                  <li> [3] 1,2을 하고서 인텔리제이 종료하고 재실행해보기 </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n\r\n          <div className='mblock'>\r\n            <details>\r\n              <summary className='stitle'> 깃허브에 올리는 방법(좀 더 확인 필요)\r\n                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n              <div className='sblock'>\r\n                <div className='sstitle'>  </div>\r\n                <div className='mblock'>\r\n                  <li> VCS - Enable Version Control Integration - Git </li>\r\n                  <li> VCS - Git - commit - 모두체크하고 commit </li>\r\n                  <li> VCS - Git - remote - github 연결 </li>\r\n                  <li> VCS - Git - push </li>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          {/*  */}\r\n\r\n        </span>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeyMapIntellij;","import React from 'react';\r\n\r\nconst KeyMapEclipse = (props) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"common_style\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<span className=\"lblock\">\r\n\t\t\t\t\t\t<span className=\"mtitle\"> 단축키 및 설정 </span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"Eclipse 단축키\"> Eclipse 단축키 </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li>  </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"Eclipse Spring 설정\"> Eclipse Spring 설정 </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<li> <i> 초기 설정 </i> </li>\r\n\t\t\t\t\t\t\t\t<li> <i>1.</i> Window - Preferencs - enc 입력 - Workspace, Css Files, HTML Files, JSP Files 인코딩\r\n\t\t\t\t\t\t\t\t\tUTF-8로 모두 바꾸어 주기  </li>\r\n\t\t\t\t\t\t\t\t<li> <i>2.</i> Help - Eclipse MarketPlace - Spring Tools 3(Standalone Edition) 설치 </li>\r\n\t\t\t\t\t\t\t\t<li> <i>3.</i> Help - Eclipse MarketPlace - Spring Tools 3(Add-On for Spring Tools)) 설치?? </li>\r\n\t\t\t\t\t\t\t\t<li> <i>4.</i> Help - Install New Software - Add - Name에 STS ,\r\n\t\t\t\t\t\t\t\t\tLocation에 https://dist.springsource.com/snapshot/TOOLS/nightly/e4.18 입력\r\n\t\t\t\t\t\t\t\t\t그리고 Add버튼 클릭\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> <i>5.</i> 체크박스 모드 체크 그리고 Next 버튼 클릭 그리고 모두 동의 및 Next </li>\r\n\t\t\t\t\t\t\t\t<li> <i>6.</i> File - New - Other - spring 입력 - Spring Legacy Project - 프로젝트 이름 입력-\r\n\t\t\t\t\t\t\t\t\ttemplates에서 Spring MVC Project로 선택 하고 다음 - com.spring.app 와 같이 3단계 이상으로\r\n\t\t\t\t\t\t\t\t\t이름 입력\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li> <i>7.</i> 프로젝트 우클릭 - Properties - Project Facets - 자바버전 맞추어주기\r\n\t\t\t\t\t\t\t\t\t(cmd창에서 java -version 으로 확인가능) - 우측에 runtimes 탭에 가서 - 아파치톰캣버전 선택하고 apply </li>\r\n\t\t\t\t\t\t\t\t<li> <i>8.</i> src/main/resources 에서 log4j.xml만 남기고 다 삭제 </li>\r\n\t\t\t\t\t\t\t\t<li> <i>9.</i> src - main - webapp - WEB-INF - spring과 views 파일 삭제 그리고 web.xml에 &lt;web-app&gt; 상단\r\n\t\t\t\t\t\t\t\t\t부분 뺴고 내부에 맵핑코드 삭제 </li>\r\n\t\t\t\t\t\t\t\t<li> <i>10.</i> pom.xml에 springframework버전을 4.2.4로 수정을 하고 강제 업데이트 하기</li>\r\n\t\t\t\t\t\t\t\t<li> <i>11.</i> 프로젝트 우클릭 - Maven - Update Project - 확인</li>\r\n\t\t\t\t\t\t\t\t<li> <i>12.</i> 제대로 설치되었으면 Java Resources - Libraries - Maven Dependencies 에서 버전 확인 </li>\r\n\t\t\t\t\t\t\t\t<li> <i>13.</i> 혹시 포로젝트 익스프롤러에 빨간줄이 보이면 버전이 자바버전이 틀려서 그럴수 있음\r\n\t\t\t\t\t\t\t\t\tpom.xml에거서 java-version, 아래쪽에 maven.plugins에 source,target 버전을 11(본인버전)으로 변경하고\r\n\t\t\t\t\t\t\t\t\t강제 업데이트 </li>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"stitle\">  </span>\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<span className=\"mblock\">\r\n\t\t\t\t\t\t\t<span className=\"stitle\"> <a name=\"\">  </a> </span>\r\n\t\t\t\t\t\t\t<span className=\"sblock\">\r\n\t\t\t\t\t\t\t\t<span className=\"sstitle\">  </span>\r\n\t\t\t\t\t\t\t\t<li> </li>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default KeyMapEclipse;","import React from 'react';\r\n\r\nconst KeyMapWindow = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mtitle\"> 단축키 및 설정 </span>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"Window 단축키\"> Window 단축키 </a> </span>\r\n                        <span className=\"sblock\">\r\n                            <span className=\"sstitle\"> 내가 자주 사용하는 Window 단축키 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> F2 : 폴더이름 바꾸기  </li>\r\n                                <li> Win + 방향키 : 화면 분할 </li>\r\n                                <li> Win + S : 윈도우 검색창 열기 </li>\r\n                                <li> Win + L : 화면 잠금 </li>\r\n                                <li> Win + E : 파일 탐색기 열기 </li>\r\n                                <li> Win + R : 실행 파일 열기 </li>\r\n                                <li> Win + D : 모든 프로그램,브라우저 최소화 , 한번더 클릭하면 원래대로 </li>\r\n                                <li> Win + 숫자키 : 작업 표시줄에 고정된 프로그램 실행 </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                            <span className=\"sstitle\"> Window 단축키 </span>\r\n                            <span className=\"mblock\">\r\n                                <li> Win + I : 윈도우 설정창 열기 </li>\r\n                                <li> Win + Ctrl +D : 가상 데스크탑 생성 </li>\r\n                                <li> Win + Ctrl + 방향키 : 가상 데스크탑 이동 </li>\r\n                                <li> Win + Tab : 모든 가상 데스크톱 보기 </li>\r\n                                <li> Win + Ctrl + F4 : 현재 창 닫기 </li>\r\n                                <li> Win + , : 누르고 있는 동안 바탕화면 보기 </li>\r\n                                <li> Win + Home : 현재 보고 있는 창을 제외한 창들은 모두 최소화 </li>\r\n                                <li> Win + '+' , Win + '-' : 브라우저 화면 확대, 축소(돋보기 용도) </li>\r\n                                <li> Win + Shift + S : 화면 캡쳐 관리창 열기 </li>\r\n                                <li> Win + . : 이모지 아이콘 보기 </li>\r\n                                <li>  </li>\r\n                            </span>\r\n                            {/*  */}\r\n                        </span>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 부팅 후 자동으로 프로그램 실행 <a name=\"부팅 후 자동으로 프로그램 실행\" style={{ visibility: \"hidden\" }}> 부팅 후 자동으로 프로그램 실행 </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                                {/*  */}\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 윈도우 스크린샷( Win + PrintScreen )\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 윈도우 스크린샷이 되지 않을 때 , 저장 위치를 변경하고 싶을 때 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> Win + S - regedit 입력  </li>\r\n                                    <li> 컴퓨터\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders 이동  </li>\r\n                                    <li> {' {B7BEDE81-DF94-4682-A7D8-57A52620B86F} '} 이 레지스트리가 윈도우 스크린샷과 관련\r\n                                        <li> <span className='sstitle'> 만약에 이 레지스트리가 없다면 </span> </li>\r\n                                        <span className='sblock'>\r\n                                            <li> 좌측 위에 편집 - 새로만들기 - 확장 가능한 문자열 값 </li>\r\n                                            <li> 이름 바꾸기 해서 {' {B7BEDE81-DF94-4682-A7D8-57A52620B86F} '} 복사 붙여넣기  </li>\r\n                                            <li> 수정 - 값 데이터에 %USERPROFILE%\\Pictures\\Screenhots 붙여넣기  # 저장위치를 지정 할 수 있는 곳  </li>\r\n                                        </span>\r\n                                    </li>\r\n                                    <li> 그리고 윈도우 재시작 </li>\r\n                                    <li> Win + PrintScreen 누르고  </li>\r\n                                    <li> C드라이브 - 사용자 - 계정 - Pictures - 스크린샷 에 폴더가 있는지 확인  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default KeyMapWindow;","import React from 'react';\r\n\r\nconst KeyMapBrowser = (props) => {\r\n\r\n    return (\r\n        <div className=\"common_style\">\r\n\r\n            <div className='block1'>\r\n                <details>\r\n                    <summary> 네이버 웨일 </summary>\r\n                    <div className='block2'>\r\n\r\n                        <h2 className='h2'> 📌 단축키 </h2>\r\n                        <li>  </li>\r\n                        <li> 우측 상단 - 설정 - 단축키 <small> # 웨일 브라우저 단축키 보는 방법 </small> </li>\r\n                        <li> alt+1 , alt+2 , alt+3 , alt+4 <small> # 캡처 </small> </li>\r\n                        <li> ctrl + tab <small> # 탭 전환 </small> </li>\r\n                        <li> ctrl + shift + m <small> # 모바일 창  </small> </li>\r\n                        <li> ctrl + t <small> # 새로운 탭 열기 </small> </li>\r\n                        <li> ctrl + k <small> # 현재 탭 복사하고 열기 </small> </li>\r\n                        <li> ctrl + n <small> # 새로운 창으로 새화면 열기  </small> </li>\r\n                        <li> alt+r <small> # 읽기모드  </small> </li>\r\n\r\n                        <h2 className='h2'> 📌 네이버 웨일 캐시 파일 모여있는 공간 </h2>\r\n                        <li> 브라우저에서 whale://version/ 입력하고 프로필 경로 복사해서 폴더경로에 붙여넣기 </li>\r\n                        <li> 그리고 cache폴더 들어가기 </li>\r\n\r\n                        <h2 className='h2'> 📌 네이버 브라우저 쿠키 모여있는 공간 </h2>\r\n                        <li> 우측상단 점 3개 - 설정 - 개인정보 보호 - 쿠키 및 기타 사이트 데이터 - 모든 쿠키 및 사이트 데이터 보기 </li>\r\n                        <li>  </li>\r\n\r\n                    </div>\r\n                </details>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeyMapBrowser;","import React from 'react';\r\n\r\nconst KeyMapSublimeText = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> 단축키\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 단축키 설명 </div>\r\n                                <div className='mblock'>\r\n                                    <li> Alt + V : 상단 메뉴바 보기 </li>\r\n                                    <li>   </li>\r\n                                </div>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n\r\n                    <div className='mblock'>\r\n                        <details>\r\n                            <summary className='stitle'> 단축키 커스텀 설정하는 방법\r\n                                <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'> 설명 </div>\r\n                                <div className='mblock'>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                                <div className='sstitle'> 예시 </div>\r\n                                <div className='mblock'>\r\n                                    <li> 상단 메뉴 - Preferences - Key Bindings - User </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </div>\r\n\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default KeyMapSublimeText;","import React from 'react';\r\n\r\nconst CollaborationTool_Github = (props) => {\r\n\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [0] git bash 계정 설정, 조회, 삭제 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 생성 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 조회 </h2>\r\n            <div className='block4'>\r\n              <li> git config user.name </li>\r\n              <li> git config user.email </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 변경 </h2>\r\n            <div className='block4'>\r\n              <li> git config --global user.name 변경하려는계정명 </li>\r\n              <li> git config --global user.email 변경하려는이메일명 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 삭제 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 에러 관련 </h2>\r\n            <div className='block4'>\r\n              <li> push할때 에러가 발생하게 되면 Window 자격증명 제거 필요 </li>\r\n              <li> 제어판 - 사용자계정 - 자격 증명 관리 - Windows 자격 증명 - github항목 삭제 후 수정 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [1] 깃허브 리드미 작성방법 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 (1) 제목(머리글) 작성 </h2>\r\n            <div className='block4'>\r\n              <li> # <small> h1 태그 </small> </li>\r\n              <li> ## <small> h2 태그 </small> </li>\r\n              <li> ### <small> h3 태그 </small> </li>\r\n              <li> #### <small> h4 태그 </small> </li>\r\n              <li> ##### <small> h5 태그 </small> </li>\r\n              <li> ###### <small> h6 태그 </small> </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 (2) 리스트 작성 </h2>\r\n            <div className='block4'>\r\n              <div className=\"h3\"> 번호없는 리스트 </div>\r\n              <li> * 리스트1 </li>\r\n              <li> - 리스트2 </li>\r\n              <li> + 리스트3 </li>\r\n              <div className=\"h3\"> 순서있는 리스트 </div>\r\n              <li> 1. 리스트1 </li>\r\n              <li> 2. 리스트2 </li>\r\n              <li> 3. 리스트3 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 (3) 글씨 모양 </h2>\r\n            <div className='block4'>\r\n              <li> *기울어진글씨* , _기울어진글씨_ </li>\r\n              <li> **굵은글씨** , __굵은글씨__ </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 (4) 인용문 사용 방법 </h2>\r\n            <div className='block4'>\r\n              <li> {\">\"} 설명1 </li>\r\n              <li> {\"> >\"} 설명2 </li>\r\n              <li> {\"> > >\"} 설명3 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 (5) 수평 밑줄 넣기 </h2>\r\n            <div className='block4'>\r\n              <li> *** </li>\r\n              <li> --- </li>\r\n              <li> ___ </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 (6) 링크 </h2>\r\n            <div className='block4'>\r\n              <li> [링크텍스트](#링크주소) </li>\r\n              <li> #이 붙은 것들은 링크주소로 인식 </li>\r\n              <li>  </li> <br />\r\n              <li> [링크텍스트][참조명] </li>\r\n              <li> [참조명]: 링크주소 </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 (7) 코드 넣기  </h2>\r\n            <div className='block4'>\r\n              <li> ``` 와 ``` 사이에 코드를 작성해서 넣는다. </li>\r\n              <li> 안에서는 띄워쓰기와 줄바꿈이 자동으로 된다. </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 (8) 표 만들기 </h2>\r\n            <div className='block4'>\r\n              <li> |:---|:---:|---:| </li>\r\n              <li> |좌측|중간|우측| </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 (9) 체크박스 </h2>\r\n            <div className='block4'>\r\n              <li> * [x] 체크박스 x표시 </li>\r\n              <li> * [ ] 체크박스 표시 </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌  </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [2] git branch </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 git branch 생성 </h2>\r\n            <div className='block4'>\r\n              <li> git branch 새로운branch명 <small> 새로운 브랜치 생성 </small> </li>\r\n              <li> git branch 분리할branch명(master1) 기존branch명(master) <small> 기존 branch에서 브랜치 생성 </small> </li>\r\n              <li> git switch -t origin/원격브랜치명 <small> 원격 브랜치와 동일 이름으로 생성하고 변경 </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 default 브랜치 변경, 이동하기 </h2>\r\n            <div className='block4'>\r\n              <li> 깃허브 저장소 - 설정 - 브랜치 - Default branch로 변경하면된다. </li> <br />\r\n              {/*<li> git config --global init.defaultBranch master </li> */}\r\n              <li> git checkout(co) 브랜치명 <small> 현재 사용하는 브랜치 변경 </small> </li>\r\n              {/*<li> git switch 브랜치명 </li> <small> 브랜치 생성? </small> */}\r\n              {/*<li> git switch -c 브랜치명 </li> <small> 브랜치 생성하면서 변경 </small> */}\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 현재 등록된 깃허브 브랜치 조회 </h2>\r\n            <div className='block4'>\r\n              <li> git branch </li>\r\n              <li> git branch -v <small> 상세조회 </small> </li>\r\n              <li> git branch -r <small> 원격 저장소의 브랜치 조회 </small> </li>\r\n              <li> git branch -a <small> 원격 저장소, 로컬 저장소의 브랜치 조회 </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 git branch 최신화 하기 </h2>\r\n            <div className='block4'>\r\n              <li> git remote update <small> git 저장소에 branch가 추가되었을 때 최신화하기 </small> </li>\r\n              <li> git branch -d 브랜치명 </li>\r\n              <li> git branch -D 브랜치명 <small> 브랜치 강제 삭제 </small> </li>\r\n              <li> git push origin --delete 브랜치명 <small> 원격 브랜치 삭제 </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 git branch 삭제 </h2>\r\n            <div className='block4'>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 git clone 특정 브랜치 </h2>\r\n            <div className='block4'>\r\n              <li> git clone -b 브랜치명 원격저장소URL.git </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [3] git pull </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <div className=\"block4\">\r\n              <li> git pull </li>\r\n              <li> git pull origin master(브랜치명) </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 git pull 강제로 받기 </h2>\r\n            <div className=\"block4\">\r\n              <li> git fetch --all </li>\r\n              <li> git reset --hard origin/master </li>\r\n              <li> git pull origin master </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 에러 </h2>\r\n            <div className=\"block4\">\r\n              <li> refusing to merge unrelated histories <small> git pull origin 브런치명 --allow-unrelated-histories </small> </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [4] git remote (깃허브 원격 저장소 관련) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 조회 </h2>\r\n            <div className='block4'>\r\n              <li> 터미널 창에 cd [로컬저장소폴더경로] 입력 </li>\r\n              <li> git remote -v </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 연결 </h2>\r\n            <div className='block4'>\r\n              <li> git remote add origin [깃허브저장소주소.git] </li>\r\n              <li> git remote -v </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 삭제 </h2>\r\n            <div className='block4'>\r\n              <li> git remote -v </li>\r\n              <li> git remote remove [위명령어에서나온제일앞에단어] </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> [5] git push </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 옵션 </h2>\r\n            <div className='block4'>\r\n              <li> git push <small> 이미 설정된 원격저장소에 push </small> </li>\r\n              <li> git push origin 브랜치명 <small> 정해진 브랜치에 push하기 </small> </li>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n            <h2 className='h2'> 📌 에러 </h2>\r\n            <div className='block4'>\r\n              <li> fatal: The current branch master has no upstream branch </li>\r\n              <li> To push the current branch and set the remote as upstream, use </li>\r\n              <div className=\"block3\">\r\n                <li> git push --set-upstream origin master </li>\r\n              </div>\r\n              <li>  </li>\r\n              <li>  </li>\r\n            </div>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> =================================== </summary>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 깃허브 에러 모음 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 pull이나 push할때 발생하는 경고 </h2>\r\n            <li> fatal: refusing to merge unrelated histories\r\n              <div className=\"block4\">\r\n                <li> 로컬과 원격저장소의 내용이 많이 차이나서 오류가 날것을 경고 </li>\r\n                <li> git pull origin 브런치명 --allow-unrelated-histories <small> 해결방법 </small> </li>\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"block4\">\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"block4\">\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"block4\">\r\n                <li>  </li>\r\n              </div>\r\n            </li>\r\n\r\n            <h2 className='h2'> ✔ 예시 </h2>\r\n            <li>\r\n              <div className='block3'>\r\n                <h3 className='h3'> 🎈 </h3>\r\n                <div className='block4'>\r\n                  <li>  </li>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> *********************************** </summary>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 깃허브 저장소 만들기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Repositories 클릭 </li>\r\n            <li> New </li>\r\n            <li> Repository name에 저장소명(프로젝트명) 입력 </li>\r\n            <li> Public / Private 에서 이왕이면 Public </li>\r\n            <li> Add a README file을 체크안해도 상관은 없음 </li>\r\n            <li> 나머지는 체크 안하고 Create repository 클릭 </li>\r\n            <li> 완료 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 깃허브 저장소 삭제하기  </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> Settings - Options - 스크롤 제일 밑에 - Delete this repository 클릭 </li>\r\n            <li> Please type 이부분복사붙여넣기 to confirm </li>\r\n            <li> 완료 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 깃허브 프로젝트 인원 추가하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 원작자 </h2>\r\n            <li> Settings - Manage access Add people </li>\r\n\r\n            <h2 className='h2'> 📌 참가자 </h2>\r\n            <li> 원작자의 프로젝트로 이동 </li>\r\n            <li> View invitation 클릭 </li>\r\n            <li> Accept invitation </li>\r\n            <li> 상단에 you now have push access to the 원작자/저장소명 repository. 보이면 초대완료 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 다른 사람 저장소 같이 사용하기(Clone) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 VScode에서 하는 방법 </h2>\r\n            <li> 다른 사람 깃허브 저장소 가기 </li>\r\n            <li> 초록색 Code 버튼 클릭 - HTTPS에 있는 코드 복사 </li>\r\n            <li> 새로운 파일 열고 Ctrl + Shift + P </li>\r\n            <li> Git: clone 입력 </li>\r\n            <li> 위에서 복사한 코드 붙여넣기 </li>\r\n            <li> 컴퓨터에 저장할 로컬 저장소 선택하기  </li>\r\n            <li> 우측 하단에 open클릭하고 체크박스 체크하고 all authors trust한다고 선택 </li>\r\n            <li> 완료 </li>\r\n\r\n            <h2 className='h2'> 📌 터미널에 코드 입력하기 </h2>\r\n            <li> git clone [다른 사람 저장소에 초록색 Code눌렀을 때 나오는 HTTPS 코드 붙여넣기] [로컬저장소의 경로넣기, 넣지 않으면 현재 터미널에서 가리키는 위치에 폴더 생성] </li>\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 원격저장소에서 특정 브런치만 가져오기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> git clone --branch [TAG] [REPO_URL] </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 다른 사람 깃허브에 브랜치 만들고 push 하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 다른 사람 깃허브 저장소에서 branch 생성하기 </li>\r\n            <li> git init </li>\r\n            <li> git remote add origin 상대방깃허브주소 </li>\r\n            <li> git pull origin 브랜치명 </li>\r\n            <li> 둘중 1개 입력\r\n              <li> git checkout -b 브랜치명 <small> # 내가 사용할 브랜치 만들고? 변경 </small> </li>\r\n              <li> git checkout 브랜치명 <small> # 내가 사용할 브랜치로 변경 </small> </li>\r\n            </li>\r\n            <li> git add . </li>\r\n            <li> git commit -m \"커밋내용\" </li>\r\n            <li> git push origin 브랜치명 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 브랜치 하나로 merge 시키기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> git checkout 브랜치명 </li>\r\n            <li>  </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 저장소의 모든 내용을 탐색하지 않고 최근 변경 코드만 가져오기(얕은 클론) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> git clone --depth=1 [REPO_URL] </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 깃허브 원격 저장소에 현재 작업한 내용 올리기(push) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> git init </li>\r\n            <li> git add . </li>\r\n            <li> git commit -m \"커밋내용\" </li>\r\n            <li> git remote add [원격저장소별칭,origin] [https://github.com/깃허브계정/깃허브저장소.git] <small> # 처음에만 추가하고 이후에는 코드 입력x </small> </li>\r\n            <li> git push -u [원격저장소별칭,origin] [브랜치명,master] <small> # 이후에는 git psuh만 사용 </small> </li>\r\n            <li> </li> <br />\r\n            <li> git pull <small> # 원격저장소에 있는 내용을 전부 받아오는 것이다. </small></li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 깃허브 pull request 설정 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 다른 사람이 push를 해도 구성원이 모두 허용하지 않는다면 push가 되지 않는다. </li>\r\n\r\n            <li> 깃허브1 - Branches - Branch protection rules - Branch name pattern에 \"master\"\r\n              - Require a pull request before merging - Require approvals(허용사람수 선택) -\r\n              include administrators(소유주도 똑같은 정책 허용) - create  </li>\r\n            <li> 깃허브2의 브런치 생성- commit - push - create pull request - 내용적고,create pull request버튼을 누르면 된다,\r\n              - 우측에 reviewers  </li>\r\n            <li> 깃허브1에 상단에 pull requests - file change - review changes클릭 - 내용하고 승인 - master branch에 merge해주기\r\n            </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 다른 사람 저장소에서 fork 해서 저장소 만들고 사용하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 다른 사람의 깃허브저장소에 가서 fork 누르기 </li>\r\n            <li> 터미널에 입력 </li>\r\n            <li> git rm * </li>\r\n            <li> git init </li>\r\n            <li> git config --global user.name \"사용자이름\" </li>\r\n            <li> git config --global user.email \"사용자이메일\" </li>\r\n            <li> git remote set-url origin https://깃아이디:깃비밀번호@github.com/깃허브주소.git <small> # 깃허브 주소 넣을 때 앞에 .com ~ .git 사이에 값을 넣으면 된다. </small> </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> git에서 중요하거나 큰 파일 등 제외시키기 (미완성) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> .gitgnore 파일 생성 </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 제목 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 Git 설명 </h2>\r\n            <li> 1. 버전관리 툴 </li>\r\n            <li> 2. git은 로컬 저장소에서 버전을 관리하는 것이고 github는 원격저장소에서 버전을 관리하는 것이다. </li>\r\n            <li> 3. 작업공간\r\n              <li> working directory : PC에서 git을 사용하는 작업공간 </li>\r\n              <li> local repository : 임시 버전이 올라가는 공간, 개인 전용 저장소 </li>\r\n              <li> remote repository : 최종 버전이 올라가는 공간 </li>\r\n            </li>\r\n            <li> 깃을 사용하는 이유\r\n              <li> 이전 버전의 코드 불러오기 </li>\r\n              <li> 개발자들과의 협업에서 잘못된 코드 복원 용도 </li>\r\n              <li> 개발자들끼리의 코드(작업 상황) 공유  </li>\r\n              <li> 새로운 버전 백업  </li>\r\n            </li>\r\n            <li> git은 로컬과 원격저장소(Github)에서 관리가 가능하다. </li>\r\n            <li> git은 CLI(터미널)을 이용하여 명령어로 작업을 수행  </li>\r\n            <li> Source Tree라는 GUI 어플리케이션이 있음 </li>\r\n            <li> git은 작업을 따로 하다가 하나로 합칠수도 있다. </li>\r\n            <li>  </li>\r\n            <h2 className='h2'> 📌 Git 명령어 </h2>\r\n            <li> git-version : git 버전을 확인 </li>\r\n            <li> git init : git에 파일을 연동  <small> # 로컬에 저장소를 생성 </small>  </li>\r\n            <li> git add . : git에 파일은 올려놓음 <small> # 임시공간에 잠시 보관 </small> </li>\r\n            <li> git commit -m \"메모\" <small> # 로컬 저장소에 저장(C언어의 포인터 같이 저장된 데이터의 위치를 기억)  </small></li>\r\n            <li> git push origin master : github 저장소에 파일을 올리기 <small> 원격저장소에 저장 </small> </li>\r\n            <li> git remote add origin 깃허브저장소주소 <small> # 깃허브에 연결 </small> </li>\r\n            <li> git fetch # 깃허브에서 local 저장소로 파일을 가져옴 </li>\r\n            <li> git merge # git을 합침, 이거는 에러도 발생하는 것으로 기억 </li>\r\n            <li> git pull # git fetch + git merge 사용 </li>\r\n            <li> git status # git에 현재상태를 보는 방법 </li>\r\n            <li> git clone : 깃허브에서 전체 내용을 가져옴 </li>\r\n            <li> git branch \"브랜치명\" # 브랜치를 생성 </li>\r\n            <li> git merge \"브랜치명\" # 마스터 브랜치에 브랜치를 합침 </li>\r\n\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> 깃허브 터미널로 설정하기 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 git 환경설정 파일 열기 </h2>\r\n            <li> git config --global -e </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default CollaborationTool_Github;\r\n\r\n","import React from 'react';\r\n\r\nconst CollaborationTool_Slack = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <div className='block1'>\r\n                    <details>\r\n\r\n                        <summary> 슬랙에서 깃허브 (commit,push,PR) 알림 받기(웹훅 사용) </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 디스코드 - 서버설정(서버 관리자일때만 가능) - 연동 - 웹 후크 만들기 - 알림할 채널 설정 - 웹 후크 URL복사 </li>\r\n                            <li> 깃허브 - Settings - Webhooks - Add webhook </li>\r\n                            <li> Payload URL : 깃허브 웹 후크 URL붙여넣기/github </li>\r\n                            <li> Content Type : application/json </li>\r\n                            <li> Which events would you like to trigger this webhook? : Send me everything </li>\r\n                            <li> Update webhook 초록 버튼 클릭 </li>\r\n                            <li> 그러면 commit,push 할 때 알림이 옵니다. </li>\r\n                        </div>\r\n\r\n                    </details>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CollaborationTool_Slack;","import React from 'react';\r\n\r\nconst CollaborationTool_Diagram = (props) => {\r\n  return (\r\n    <div className=\"common_style\">\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> ERD 설명 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> UML 설명 </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> Flowchart </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 1 </li>\r\n            <li> 2 </li>\r\n            <li> 3 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> GitMind(2022.01.05기준 비추천) </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 삼발이 표시가 어려움 </li>\r\n            <li> 무료, 부분유료(파일갯수 무제한, 모든 플랫폼, 고객지원, 월9달러이하) </li>\r\n            <li> Web, Window, Mac OS </li>\r\n            <li> 실시간 협업 가능(비번설정가능, 유효기간 설정가능) </li>\r\n            <li> 한국어 지원 </li>\r\n            <li> 이전에 작업하던 버전 복원 가능 </li>\r\n            <li> ERD, UML, Diagram, Flowchart 등 지원 </li>\r\n            <li> 여러 분야의 마인드맵, 테마, 레이아웃 등 지원 </li>\r\n            <li> Hot Key(단축키) 지원 </li>\r\n            <li> 노드 단위로 이동 가능 </li>\r\n            <li> JPG,PNG,PDF,SVG,(유료: WORD,TXT,GITMIND) 내보내기 가능(무료는 갯수 제한있음????, 설명과 왜 다르지..) </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> StarUML </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> c++,java,c# 등 플러그인으로 사용가능 (좀더 알아볼것) </li>\r\n            <li> ERD를 작성하기 쉬움, 여러 대기업에서 사용하는 프로그램 </li>\r\n            <li> 무료, 유료 있음 </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> dbdiagram.io </summary>\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> <a href=\"https://dbdiagram.io/d\" target=\"_blank\" rel=\"noopener noreferrer\"> 링크 </a> </li>\r\n            <li> ERD 용도 </li>\r\n            <li> 협업x </li>\r\n            <li> 코드로 테이블을 만들수 있음 </li>\r\n            <li> 잘 사용하려면 러닝커브가 있음 </li>\r\n            <li> 웹 프레임워크에서 데이터베이스 스키마 업로드가 가능한듯 싶다. </li>\r\n            <li>  </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n      <div className='block1'>\r\n        <details>\r\n          <summary> AqueryTool </summary>\r\n\r\n          <div className='block2'>\r\n\r\n            <h2 className='h2'> 📌 설명 </h2>\r\n            <li> 사람들이 많이 사용하는 툴 </li>\r\n            <li> 개인적으로는 불편.. </li>\r\n\r\n          </div>\r\n        </details>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollaborationTool_Diagram;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst CollaborationTool_Markdown = (props) => {\r\n\r\n\r\n\r\n\r\n return (\r\n  <div className=\"common_style\">\r\n   <div className='block1'>\r\n    <details>\r\n     <summary> Markdown 이란 </summary>\r\n     <div className='block2'>\r\n\r\n      <h2 className='h2'> 📌 설명 </h2>\r\n      <li> 간단하다. </li>\r\n\r\n      <h2 className='h2'> 📌 문법 </h2>\r\n      <li> h1태그: # 제목 </li>\r\n      <li> h2태그: ## 제목 </li>\r\n      <li> h3태그: ### 제목 </li>\r\n      <li> h4태그: #### 제목 </li>\r\n      <li> h5태그: ##### 제목 </li>\r\n      <li> h6태그: ###### 제목 </li>\r\n      <li> i태그: *글자* , _글자_ </li>\r\n      <li> b태그: **글자** , __글자__ </li>\r\n      <li> i+b: **_글자_ </li>\r\n      <li> del태그: ~~글자~~ </li>\r\n      <li> u태그: {\"<u></u>\"} </li>\r\n      <li> a태그: [글자클릭](url경로) , [글자클릭][참조경로] , [참조경로]: url경로 , {\"<url경로>\"} , \"일반url\" </li>\r\n      <li> 줄바꿈: {\"<br>\"}, 띄어쓰기2번 </li>\r\n      <li> 수평선: ---, ***, ___ </li>\r\n      <li> 인용문: {\">\"}, {\">>\"}, {\">>>\"} </li>\r\n      <li> 테이블: |값|의미|기본값| , `static(디폴트값)` , `relative` , `absolute`, `fixed` </li>\r\n      <li> 강조: ```(html, css, javascript, bash, python, 공백) 코드 ``` </li>\r\n      <li> 이미지: ![이미지][이미지경로] </li>\r\n      <li> 이미지링크: [![이름](이미지경로)](링크)  </li>\r\n      <li>  </li>\r\n\r\n     </div>\r\n    </details>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default CollaborationTool_Markdown;","import React from 'react';\r\n\r\nconst RefBlog = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <span className=\"lblock\">\r\n                    <span className=\"mtitle\"> <a name=\"참고 블로그\">  참고 블로그  </a> </span>\r\n                    <p> <small> 공부에 도움되는 블로그를 모으고 공부한 내용 정리 </small> </p>\r\n                    <span className=\"mblock\">\r\n                        <span className=\"stitle\"> <a name=\"우아한 형제들\"> 우아한 형제들  </a> </span>\r\n                        <a href=\"https://techblog.woowahan.com/\"> 우아한 형제들 기술 블로그 링크  </a>\r\n\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default RefBlog;\r\n\r\n","import React from 'react';\r\n\r\nconst PythonBasic = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mtitle\"> 파이썬 공부 </span>\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 설치\r\n                                    <a name=\"설치\" style={{ visibility: \"hidden\" }}> 설치 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <li> <h4> vscode에 설치 </h4> </li>\r\n                                    <li> vscode extension에 가서 Python, python for VSCode , Python Extension Pack 설치 </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                    <li> <h4>  </h4> </li>\r\n                                    <li>  </li>\r\n                                    <li> <h4>  </h4> </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ Python이란?\r\n                                    <a name=\"Python이란?\" style={{ visibility: \"hidden\" }}> Python이란? </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <li> <small> 인터프리터 언어 </small> </li>\r\n                                    <li> <small> .py코드 실행 - 바이트 코드 상태 - PVM(파이썬 가상 머신) - 처리 </small> </li>\r\n                                    <li> <small> 객체지향언어 지원 </small> </li>\r\n                                    <li> <small> 자료형이 정해져 있지 않음, 변수를 따로 선언하지도 않음 </small> </li>\r\n                                    <li> <small> 영상처리, 딥러닝 등 수학적인 내용이 들어갈때 자바보다 유리한것 같다.(numpy를 사용) </small> </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 출력메소드\r\n                                    <a name=\"출력메소드\" style={{ visibility: \"hidden\" }}> 출력메소드 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 메소드 - 문자열 메소드 참고 </small>\r\n                                    <span className=\"sstitle\"> 문자열 형식 </span>\r\n                                    <li> %d(정수), %o(8진수) , %x(16진수), %f(실수), %s(문자열) </li>\r\n                                    <span className=\"sstitle\"> 이스케이프 문자 </span>\r\n                                    <li> \\' , \\\" , \\n , \\t , \\\\ , \\b 등등 </li>\r\n                                    <span className=\"sstitle\"> print()함수 </span>\r\n                                    <li>  print('hello') </li>\r\n                                    <li>  print('hello', end='') , #줄을 바꾸지 않고 출력 </li>\r\n                                    <li>  print('hello' + 'world') , 공백없음 </li>\r\n                                    <li>  print('hello+\"world\"') , \"\"지워지지 않고 존재 </li>\r\n                                    <li>  print('hello'+end='abc') , hello 끝에 abc추가 , 그리고 개행(new line)을 하지 않음</li>\r\n                                    <li>  print('hello'+'world',sep='&nbsp;') , &nbsp;문자로 구분을 한다. </li>\r\n                                    <li>  print('hello'+'world') </li>\r\n                                    <li>  print('hello'+'world',file=sys.stdout) , 사용하면 모니터에 출력x? 확인필요 </li>\r\n                                    <li>  print('hello'+'world',flush=false) ,  </li>\r\n                                    <li>  pirnt('''asd asd asd''') , 여러줄을 줄바꿈 하여서 출력하기 </li>\r\n                                    <li>  print(변수) ,변수 출력 </li>\r\n                                    <li>  f=open('파일명.txt','w') , print('hello',file=f) , 텍스트 파일에 출력내용이 저장이 된다 </li>\r\n                                    <li>  str1 = '%s는 %d원입니다' print(str1%(변수,변수))  </li>\r\n                                    <li>  print('%d,%f,%s',(변수,변수,변수)) , 데이터 타입에 맞게 출력</li>\r\n                                    <li>  print('%5d,%2.2f,%2s',(변수,변수,변수)) , 자릿수와 소수점을 고려한 출력방법 </li>\r\n                                    <li>  print('%5d,%2.2',(변수,변수)) , 자릿수와 소수점을 고려한 출력방법</li>\r\n                                    <li>  print('{\"{}\"},{\"{}\"},{\"{}\"}'.format(변수,변수,변수)) , 순서대로 출력</li>\r\n                                    <li>  print('{\"{2}\"},{\"{1}\"},{\"{0}\"}'.format(변수,변수,변수)) , 순서를 바꾸어서 사용가능 </li>\r\n                                    <li>  print('{\"{a}\"},{\"{b}\"},{\"{c}\"}'.format(a=변수,b=변수,c=변수)) </li>\r\n                                    <li>  print('{\"{0[a]}\"},{\"{0[b]}\"}'.format(locals())) , 변수로 선언된 변수들이 맞게 들어감 </li>\r\n                                    <li>  print('{\"{a}\"},{\"{b}\"}'.format(**locals())) , 변수로 선언된 변수들이 맞게 들어감 </li>\r\n                                    <li>  print(True) , True가 출력됨 </li>\r\n                                    <li>  pirnt(list(range(1,5)) , 1~5가 배열로 출력) </li>\r\n\r\n                                    <span className=\"sstitle\"> f-string 문자열 포매팅(파이썬 버전 3.6이상) </span>\r\n                                    <li> print(f'hello{\"{변수}\"}') </li>\r\n                                    <li> print(f'hello{\"{변수}\"}:^10') , 총 10칸 가운데 정렬</li>\r\n                                    <li> print(f'hello{\"{변수}\"}:&gt;10') ,총 10칸 우측 정렬</li>\r\n                                    <li> print(f'hello{\"{변수}\"}:&lt;10') ,총 10칸 좌측 정렬</li>\r\n                                    <span className=\"sstitle\"> 출력 모양(별로 필요없는 내용이라 접어둠) </span>\r\n                                    <details>\r\n                                        <summary> 출력의 모양(간격조정) </summary>\r\n                                        <li> print('hello'.center(10)) </li>\r\n                                        <li> print('hello'.rjust(10,\"@\")) , 글자수가 부족한 부분은 왼쪽에 특정문자로 채움 </li>\r\n                                        <li> print('hello'.ljust(10,\"@\")) , 글자수가 부족한 부분은 우측에 특정문자로 채움 </li>\r\n                                        <li> print('hello'.zfill(10) , 글자수가 부족한 부분은 왼쪽에 0으로 채움) </li>\r\n                                        <li> print('hello'.capitalize() , 첫글자만 대문자) </li>\r\n                                        <li> print('hello'.upper()) , 대문자로 변경 </li>\r\n                                        <li> print('hello'.lower()) , 소문자로 변경 </li>\r\n                                    </details>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 주석\r\n                                    <a name=\"주석\" style={{ visibility: \"hidden\" }}> 주석  </a> </summary>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <span className=\"sstitle\"> 한줄 주석 </span>\r\n                                    <li> # </li>\r\n                                    <span className=\"sstitle\"> 여러줄 주석 </span>\r\n                                    <li> ''' ''' 혹은  \"\"\" \"\"\" </li>\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 자료형과 변수\r\n                                    <a name=\"자료형과 변수\" style={{ visibility: \"hidden\" }}>  자료형과 변수 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 변수 </span>\r\n                                    <li> 파이썬의 변수는 자료형을 따로 지정하지 않아도 변수의 값에 따라서 알아서 지정을 해준다.\r\n                                        그러므로 대입연산자(=)를 사용해서 값만 넣어주면 변수가 생성이 된다. </li>\r\n                                    <span className=\"sstitle\"> 자료형  </span>\r\n                                    <li> 정수(int), 실수(float), 논리(bool), 문자열,   </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 문자열\r\n                                    <a name=\"문자열\" style={{ visibility: \"hidden\" }}> 문자열  </a> </summary>\r\n                                <p> 문자열은 추가,중복,순서,정렬 등은 되지만 수정은 되지 않는다.  </p>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 인덱싱(indexing) </span>\r\n                                    <li> 문자열[인덱스] </li>\r\n                                    <li> 문자열[-인덱스]  # -1이 제일 뒷문자 </li>\r\n                                    <span className=\"sstitle\"> 슬라이싱(slicing) </span>\r\n                                    <li> 문자열[start:end:step]  </li>\r\n                                    <li> 문자열[start:end] </li>\r\n                                    <li> 문자열[start:] </li>\r\n                                    <li> 문자열[:end] </li>\r\n                                    <span className=\"sstitle\"> 문자열 길이(len) </span>\r\n                                    <li> len(문자열)  </li>\r\n                                    <span className=\"sstitle\"> 여백공간제거(strip) </span>\r\n                                    <li> 문자열.strip() </li>\r\n                                    <span className=\"sstitle\"> 특정기호로 구분하여 리스트로 반환(split) </span>\r\n                                    <li> 리스트 = 문자열.split(\"특수문자,문자\")  </li>\r\n                                    <span className=\"sstitle\"> 문자열 연산 </span>\r\n                                    <li> 문자열3 = 문자열1 + 문자열2 </li>\r\n                                    <li> 문자열3 = 문자열1 * 10 </li>\r\n                                    <span className=\"sstitle\"> 문자열 포맷팅 </span>\r\n                                    <li> \"%s\" % [\"문자열\" | 문자열변수 ]</li>\r\n                                    <li> \"%d\" % [숫자 | 숫자변수 ] </li>\r\n                                    <li> \"%s %d\" % ([\"문자열\" | 문자열변수 ], [숫자 | 숫자변수 ]) </li>\r\n                                    <li> %c %s %d %f %o %x %%(\"%\" 문자출력) </li>\r\n                                    <li> %숫자s : 숫자만큼 좌측으로 공간을 비움 </li>\r\n                                    <li> %0.숫자f : 소수점 몇 째 짜리까지 나타낼지 </li>\r\n                                    <li> \" {'{0}'} \".format(3) </li>\r\n                                    <li> \" {'{name}'} \".format(name=값) </li>\r\n                                    <li> \" {'{0:>10}'} \".format(3) # 우측정렬 공간 10칸 </li>\r\n                                    <li> \" {'{0:문자>10}'} \".format(3) # 우측정렬 공간 10칸 , 빈공간은 문자로 채움 </li>\r\n                                    <span className=\"sstitle\"> 문자열 함수 </span>\r\n                                    <li> 문자열.replace(\"바꿀문자열\",\"대체할문자열\") </li>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 연산자\r\n                                    <a name=\"연산자\" style={{ visibility: \"hidden\" }}> 연산자  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 산술 연산자 </span>\r\n                                    <li> +, -, *, **(제곱) , / , //(몫) , %(나머지)  </li>\r\n                                    <li>  문자열에 *를 사용하면 문자열이 2번 반복이 된다. </li>\r\n                                    <span className=\"sstitle\"> 대입 연산자, 복합대입 연산자 </span>\r\n                                    <li>  =, +=, -=, *=, **= , /= ,//= , %= </li>\r\n                                    <span className=\"sstitle\"> 관계 연산자 </span>\r\n                                    <li> &gt;, &gt;=, &lt;, &lt;=, ==, != </li>\r\n                                    <span className=\"sstitle\"> 논리 연산자 </span>\r\n                                    <li> and, or, not  </li>\r\n                                    <span className=\"sstitle\"> 비트 연산자 </span>\r\n                                    <li> &nbsp;, |, ^, ~, &lt;&lt;, &gt;&gt;   </li>\r\n                                    <span className=\"sstitle\"> 기타 연산자 </span>\r\n                                    <li>  시퀸스 연산(리스트, 튜플 등 데이터 구조가 있는 곳에서 사용 가능) , * 혹은 + 사용  </li>\r\n                                    <li>  'a' in 문자열 : 문자열에 a라는 문제가 있으면 true, 없으면 false (멤버쉽연산자)</li>\r\n                                    <li>  변수 = 조건식 ? 참 : 거짓 : 삼항연산자  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 입력메소드\r\n                                    <a name=\"입력 메소드\" style={{ visibility: \"hidden\" }}>  입력메소드 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> input() </span>\r\n                                    <li> 2.x 버전에서 입력값을 받아 판단하고 그에 맞게 자료형으로 초기화 </li>\r\n                                    <li> 표준 입력 장치(키보드)로 입력받을 때 사용  </li>\r\n                                    <li> raw_input() # 입력값을 문자열로만 받음, 2.x버전에서만 존재, 3.x에서는 사라짐  </li>\r\n                                    <li> input('') 입력은 문자열로 반환하므로 다른 자료형은 형변환을 해야한다.  </li>\r\n                                    <li> input('입력을 하시오 : ')  </li>\r\n                                    <li> input().split() , 입력값을 띄어쓰기로 구분하여 저장  </li>\r\n                                    <li> input().split(\",\") , 입력값을 \",\" 로 구분하여 저장  </li>\r\n                                    <li> input().split(\",\")   </li>\r\n                                    <li> str = input('')   </li>\r\n                                    <li> x = int(input())   </li>\r\n                                    <li> x = float(input())   </li>\r\n                                    <li> x,y = map(int,input().split())   </li>\r\n                                    <span className=\"sstitle\"> import sys  </span>\r\n                                    <li> a = sys.stdin # 여러줄 입력 </li>\r\n                                    <li> a = sys.stdin.readline() # 한줄 입력 \\n 개행문자 끝에 존재 </li>\r\n                                    <li> a = sys.stdin.readline().strip() # 한줄 입력 , 앞뒤로 개행 문자 제거 </li>\r\n                                    <li> x,y = map(int,sys.stdin.readline().split()) # 한줄 입력 \\n 개행문자 끝에 추가됨 </li>\r\n                                    <li> 혹시 알고리즘 문제를 풀다가 EOF, ValueError 문제가 생긴다면\r\n                                        <li> for line in sys.stdin: # 이와 같이 사용해서 해결  </li>\r\n                                    </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 리스트(list)\r\n                                    <a name=\"리스트(list)\" style={{ visibility: \"hidden\" }}> 리스트(list)  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 리스트 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 타입이 다르더라도 하나의 리스트에 저장 가능  </li>\r\n                                        <li> {'{}'}기호를 이용하여 사용  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트와 문자열 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 객체 = \"\".join(리스트) <small> # 리스트를 문자열로 반환 </small>  </li>\r\n                                        <li> 객체 = \"특수문자,문자\".join(리스트) <small> # 리스트를 문자를 구분자로 사용하여 반환 </small>  </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 기타 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> len(리스트) <small> 리스트 길이 보기 </small> </li>\r\n                                        <li> 리스트.count(요소) <small> 리스트의 요소의 갯수를 반환  </small> </li>\r\n                                        <li> 리스트[인덱스1],리스트[인덱스2] = 리스트[인덱스2],리스트[인덱스1] <small> 리스트 SWAP </small> </li>\r\n                                        <li> 요소 in 리스트 <small> 리스트에 요소가 있는지 확인 , boolean 값으로 반환 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 위치 , 인덱싱,  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트.index(요소) <small> 리스트에서 맞는 요소 값의 위치 반환, 요소가 없으면 ValueError  </small> </li>\r\n                                        <li> 리스트[인덱스]  <small> # 리스트 인덱싱(음수값도 지원) </small> </li>\r\n                                        <li> 리스트[:인덱스] , 리스트[인덱스:] , 리스트[인덱스:인덱스] <small> 리스트 슬라이싱 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 추가, 생성, 수정 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트1 = 리스트2 + 리스트3 <small> # +연산을 이용하여 리스트 합치기 </small> </li>\r\n                                        <li> 리스트1 = 리스트2 * 5 <small> # *연산을 이용하여 리스트 여러개 추가하기 </small> </li>\r\n                                        <li> 리스트[인덱스] = 값 , 리스트[-인덱스] = 값 <small> # 리스트 값 수정하기 </small> </li>\r\n                                        <li> 리스트.append(요소) <small> # 리스트 뒤에 요소(값,리스트) 추가 </small> </li>\r\n                                        <li> 리스트.update([리스트],값) <small> # 리스트 뒤에 여러 요소 추가 </small> </li>\r\n                                        <li> 리스트.insert(a,b) <small> 리스트의 a번째에 b값을 넣는다, 남은 요소들 인덱스는 뒤로 밀린다.\r\n                                            만약에 넣은 요소위치 앞쪽이 비어있으면 비어있는 공간을 제외하고 리스트의 제일 뒤에 추가한다. </small> </li>\r\n                                        <li> 리스트.extend(리스트) <small> 기존 리스트에 리스트를 더해서 확장 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 1차원 배열 만들기 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 배열 = [0]*10 <small> # 1차원 배열 만들기 </small> </li>\r\n                                        <li> 배열 = [[0] for i in range(10)] <small> # 연산을 이용하여 리스트 여러개 추가하기 </small> </li>\r\n                                        <li> 배열 = [[0] for i in range(10) if 조건 ] <small> # 조건에 맞는 배열 생성 </small> </li>\r\n                                        <li> 배열 = [값1,값2,값3] <small> 1차원 배열 만들기 </small> </li>\r\n                                        <li> 배열 = [값1,값2,값3] <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 2차원 배열 만들기 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 배열 = [[값1,값2,값3],[값1,값2,값3]] <small> 2차원 배열 만들기 </small> </li>\r\n                                        <li className=\"col_r\"> list = [0 * col] * row <small> 잘못된 2차원 배열 만들기 </small> </li>\r\n                                        <li> list = [[0 for col in range(10) ] for row in range(10)] <small> 2차원 배열 만들기 </small> </li>\r\n                                        <li> list = [[0 * col ] for row in range(10)] <small> 2차원 배열 만들기 </small> </li>\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 순서 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트.sort() <small> 리스트 정렬하기 , 반환값은 None , 원본이 바뀜 </small> </li>\r\n                                        <li> 리스트.sort(reverse=True) <small> 리스트 역정렬하기 , 반환값은 None , 원본이 바뀜 </small> </li>\r\n                                        <li> 리스트.reverse() <small> 리스트 순서 바꾸기 , 반환값은 None , 원본이 바뀜 </small> </li>\r\n                                        <li> 리스트2 = sorted(리스트1) <small> 리스트를 정렬해서 반환, 깊은복사처럼 정렬됨 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 삭제 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> del 리스트[인덱스] <small> 리스트 요소 삭제하기 </small> </li>\r\n                                        <li> del 리스트[인덱스:] <small> 리스트 요소 슬라이싱 이용하여 삭제하기 </small> </li>\r\n                                        <li> 리스트.remove(요소) <small> 리스트 제일 앞에 보이는 요소를 제거한다. </small> </li>\r\n                                        <li> 리스트.pop() <small> 리스트 마지막 요소를 반환하고 삭제 </small> </li>\r\n                                        <li> 리스트.pop(인덱스) <small> 리스트 인덱스 요소를 반환하고 삭제  </small> </li>\r\n                                        <li> 리스트.clear() <small> 리스트 초기화, 빈 배열존재 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 복사 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트1 = 리스트2.copy() <small> 리스트 깊은복사 </small> </li>\r\n                                        <li> 리스트1 = 리스트2 <small> 리스트 얕은복사 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 형변환 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> list1 = list(튜플) <small> 튜플을 리스트로 변환 </small> </li>\r\n                                        <li> list1 = list(세트) <small> 세트를 리스트로 변환 </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 리스트 중복 요소 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 리스트2 = list(set(리스트)) <small> 리스트의 중복요소를 제거하고 리스트로 반환 </small> </li>\r\n                                        <li> 리스트1 = list(set(리스트2).intersection(리스트3)) <small> 리스트2와 리스트3의 중복요소 반환 </small> </li>\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 튜플(tuple)\r\n                                    <a name=\"튜플(tuple)\" style={{ visibility: \"hidden\" }}> 튜플(tuple) </a> </summary>\r\n                                <small> 저장된 값을 수정,삭제 할 수 없는 리스트 </small>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 튜플 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> {'()'}기호를 이용하여 사용 <small>  </small> </li>\r\n                                        <li> 중복된 값을 허용하지 않음 <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 튜플 인덱싱 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  <small>  </small> </li>\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  <small>  </small> </li>\r\n                                    </span>\r\n                                    <span className=\"sstitle\"> 튜플의 일반적인 형태 </span>\r\n                                    <li> tuple1 = (값,값,값) </li>\r\n                                    <span className=\"sstitle\"> 튜플 생성 </span>\r\n                                    <li> tuple1 = () </li>\r\n                                    <li> tuple1 = tuple() </li>\r\n                                    <li> tuple1 = (값,) , (값)으로 하면 일반적인 값만 들어가서 튜플의 형태가 되지 않는다. </li>\r\n                                    <span className=\"sstitle\"> 튜플 인덱싱 </span>\r\n                                    <li> 튜플[인덱스] </li>\r\n                                    <span className=\"sstitle\"> 튜플 슬라이싱 </span>\r\n                                    <li> 튜플[인덱스:인덱스] </li>\r\n                                    <span className=\"sstitle\"> 튜플 길이 </span>\r\n                                    <li> len(tuple1) </li>\r\n                                    <span className=\"sstitle\"> 튜플 덧셈 곱셈 </span>\r\n                                    <li> tuple1+tuple2 , tuple1*2 </li>\r\n                                    <span className=\"sstitle\"> 튜플 swap </span>\r\n                                    <li> tuple1,tuple2 = tuple2,tuple1 </li>\r\n                                    {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 세트(set)\r\n                                    <a name=\"세트(set)\" style={{ visibility: \"hidden\" }}> 세트(set) </a> </summary>\r\n                                <small> 세트는 순서가 없지만 중복된 값이 저장이 되지 못하게 한다. </small>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <span className=\"sstitle\"> 세트의 일반적인 형태 </span>\r\n                                    <li> set1 = {\"{값,값,값\"} </li>\r\n                                    <span className=\"sstitle\"> 세트 생성 </span>\r\n                                    <li> set1 = set() , 빈 세트 생성</li>\r\n                                    <li> set1 = set(리스트,튜플 등) </li>\r\n                                    <span className=\"sstitle\"> 세트 인자 추가하기 </span>\r\n                                    <li> set1.add(값) </li>\r\n                                    <li> set1.update(리스트) , 리스트 전체를 추가 </li>\r\n                                    <li> set1.update(튜플) , 튜플 전체를 추가 </li>\r\n                                    <span className=\"sstitle\"> 세트 값 제거 </span>\r\n                                    <li> set1.remove(값) , 없으면 에러 발생 </li>\r\n                                    <li> set1.discard() , 없어도 에러 발생x </li>\r\n                                    <span className=\"sstitle\"> 세트 교집합 </span>\r\n                                    <li> set1.interserction(set2) </li>\r\n                                    <li> set1 &nbsp; set2</li>\r\n                                    <span className=\"sstitle\"> 세트 합집합 </span>\r\n                                    <li> set1.union(set2) </li>\r\n                                    <li> set1 | set2</li>\r\n                                    <span className=\"sstitle\"> 세트 차집합 </span>\r\n                                    <li> set1.difference(set2) </li>\r\n                                    <li> set1 - set2</li>\r\n                                    <span className=\"sstitle\"> 세트 (합집합-교집합) </span>\r\n                                    <li> set1.symmetric_difference(set2) </li>\r\n                                    <li> set1 ^ set2</li>\r\n                                    {/* <span className=\"sstitle\">  </span>\r\n                                <li>  </li> */}\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 딕셔너리(dictionary)\r\n                                    <a name=\"딕셔너리(dictionary)\" style={{ visibility: \"hidden\" }}> 딕셔너리(dictionary) </a> </summary>\r\n                                <small> 키와 값으로 구분되는 리스트 , 요소의 타입이 문자인지숫자인지 섞어도 상관이 없다. </small>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <span className=\"sstitle\"> 딕셔너리 일반적인 형태 </span>\r\n                                    <li> dict1 = {\"'키':값, '키':값\"} </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 생성하기 </span>\r\n                                    <li> dict1={\"{}\"} , 빈 딕셔너리 </li>\r\n                                    <li> dict() , 빈 딕셔너리 </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 수정하기 </span>\r\n                                    <li> dict1[키] = 값 </li>\r\n                                    <li> dict1.update(키 = 값) </li>\r\n                                    <li> dict1.update(['키' , 값]) </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리에 요소 추가하기 </span>\r\n                                    <li> dict1[키] = 값 </li>\r\n                                    <li> dict1.setdefault('키':값) , 키와 값으로 요소 추가하기 </li>\r\n                                    <li> dict1.setdefault('키') , 값은 없는 키만 있는 요소 추가하기 </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 제거하기 </span>\r\n                                    <li> del dict1[키] </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 초기화 </span>\r\n                                    <li> dict1.clear() </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 키 가져오기 </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li> max(딕셔너리,key=딕셔너리.get) #딕셔너리 값중에 최댓값을 가진 키를 반환 </li>\r\n                                        <li> min(딕셔너리,key=딕셔너리.get) #딕셔너리 값중에 최솟값을 가진 키를 반환 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    <li> dict1.get(키) </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 값 가져오기 </span>\r\n                                    <li> dict1.get(키) </li>\r\n                                    <span className=\"sstitle\"> 리스트나 튜플로 딕셔너리 만들기  </span>\r\n                                    <li> dict객체 = dict.fromkeys(리스트 혹은 튜플) , 키만 갖는 리스트로 만들어짐 </li>\r\n                                    <li> dict객체 = dict.fromkeys(리스트 혹은 튜플, 값) </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 키 목록 가져오기 </span>\r\n                                    <li> dict1.keys() </li>\r\n                                    <li> for 값 in dict1.keys(): 딕셔너리의 키가 일치하면 반복문 실행 </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 값 목록 가져오기 </span>\r\n                                    <li> dict1.values() </li>\r\n                                    <li> for 값 in dict1.values(): 딕셔너리의 값이 일치하면 반복문 실행 </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 키와값을 튜플 목록으로 가져오기 </span>\r\n                                    <li> dict1.items() </li>\r\n                                    <span className=\"sstitle\"> 딕셔너리 조회하기 ( return boolean ) </span>\r\n                                    <li> 키 in dict1 , 딕셔너리에 키가 존재하는지 확인 </li>\r\n                                    <span className=\"sstitle\"> </span>\r\n                                    <li>  </li>\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 조건문\r\n                                    <a name=\"조건문\" style={{ visibility: \"hidden\" }}> 조건문 </a> </summary>\r\n                                <small> 띄어쓰기를 이용, 탭간격으로 구분 , 에러가 이런 부분에서 발생하므로 주의 </small>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> if, if-else, if-elif, if-elif-else </span>\r\n                                    <li> if 조건식: </li>\r\n                                    <li> elif 조건식: </li>\r\n                                    <li> else: </li>\r\n                                    <span className=\"sstitle\"> 삼항 연산 </span>\r\n                                    <li> 변수 = 참값 if 조건값 else 거짓값 , 조건값이 참값과 일치하면 참값 반환, 틀리면 거짓값 반환</li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 반복문\r\n                                    <a name=\"반복문\" style={{ visibility: \"hidden\" }}> 반복문 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> while , for </span>\r\n                                    <li> while 조건식: </li>\r\n                                    <li> for 사용할변수 in 리스트,튜플,문자열,세트,딕셔너리: </li>\r\n                                    <li> continue(조건이 맞으면 다음 인덱스로 넘어감), break(조건에 맞으면 반복문 종료) </li>\r\n                                    <span className=\"sstitle\"> range() </span>\r\n                                    <li> range(10) ※0~9까지  </li>\r\n                                    <li> range(5,10) ※5~9까지  </li>\r\n                                    <li> range(1,10,3) ※1,4,7 간격이 3만큼씩  </li>\r\n                                    <li> for i in range(10 혹은 변수)  </li>\r\n                                    <span className=\"sstitle\"> eumerate(리스트 등) </span>\r\n                                    <li> for i,j in enumerate(리스트 등) </li>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 메소드\r\n                                    <a name=\"메소드\" style={{ visibility: \"hidden\" }}>  메소드 </a> </summary>\r\n                                <span className=\"sblock\">\r\n\r\n                                    <span className=\"sstitle\"> 문자열 메소드 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> .format() : 문자열 정렬,  </li>\r\n                                        <span classname=\"sblock\">\r\n                                            <li> '1:{'{ }'}, 2:{'{ }'}'.format(x,y); #순서대로 넣기</li>\r\n                                            <li> '1:{'{0}'}, 2:{'{1}'}'.format(x,y); #순서 지정해서 넣기</li>\r\n                                            <li> '1:{'{0}'}, 2:{'{0}'}', 3:{'{1}'}'.format(x,y); #중복해서 넣기</li>\r\n                                            <li> '1:{'{1}'}, 2:{'{0}'}'.format(x,y); #순서 바꿔서 넣기</li>\r\n                                            <li> '1:{'{0}'}'.format('text'); #문자열로 넣기</li>\r\n                                            <li> '1:{'{x}'}'.format(x=123); #이름으로 넣기</li>\r\n                                            <li> '1:{'{0}'}', 중괄호출력:{'{{}}'} .format('test'); #중괄호 출력하기 </li>\r\n                                            <li> '중괄호출력:{'{{0}}'}'.format(1234); #중괄호 출력하기 </li>\r\n                                            <li> '좌측정렬 : {'{0:<10}'}'.format('left') </li>\r\n                                            <li> '우측정렬 : {'{0:>10}'}'.format('right') </li>\r\n                                            <li> '중간정렬 : {'{0:^10}'}'.format('center') </li>\r\n                                            <li> '여백정렬 : {'{0:@<10}'}'.format('center') #여백에 다른 문자(@대신 아무거나)를 채워서 정렬 </li>\r\n                                            <li> '정수표현 : {'{0:05d}'}'.format(123) #00123 정수의 자릿수가 부족하면 채워짐  </li>\r\n                                            <li> '소수표현 : {'{0:0.3f}'}'.format(1.123456) #1.123 소수점 표현, 소수점 자리가 남으면 0으로 표현 </li>\r\n                                        </span>\r\n                                        <li> 변수 = 문자열.count() : 문자열의 갯수 </li>\r\n                                        <li> 문자열.find(\"abc\") : \"abc\" 문자를 문자열 앞에서 찾기 ,없다면 -1 리턴 </li>\r\n                                        <li> 문자열.rfind(\"abc\") : \"abc\" 문자를 문자열 뒤에서 찾기 ,없다면 -1 리턴 </li>\r\n                                        <li> 문자열.index() : 특정문자열의 위치 찾기 ,없다면 에러 발생 </li>\r\n                                        <li> 문자열.upper() : 모두 대문자로 변환 </li>\r\n                                        <li> 문자열.lower() : 모두 소문자로 변환 </li>\r\n                                        <li> 문자열.capitalize() : 첫글자만 대문자로 변환 </li>\r\n                                        <li> 문자열 = \"\".join('123','456') 혹은 \"\".join('문자배열') : 여러문자열을 하나의 문자열로 합쳐서 반환  </li>\r\n                                        <li> 문자열 = \"_(구분자)\".join('123','456')  : 여러문자열을 \"_\"(구분자)로 구분하여 하나의 문자열로 합쳐서 반환  </li>\r\n                                        <li> 문자열.split(sep='구분자', maxsplit=분할횟수) #문자열을 구분자로 잘라서 리스트로 반환 </li>\r\n                                        <li> 문자열.replace(old,new,[count]) #변경하고 싶은 문자를 바꾸는 메소드 </li>\r\n                                        <li> 문자열.[rstrip('문자열') | lstript('문자열') | stript('문자열') ] #불필요한 공백, 문자열 제거 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n\r\n                                    <span className=\"sstitle\"> 사용자 정의 메소드 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> def 메소드명(매개변수): </li>\r\n                                        <li> &nbsp;코드작성 </li>\r\n                                        <li> &nbsp;return 반환값 <small> 리턴은 필수가 아님 </small> </li>\r\n                                    </span>\r\n\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 라이브러리,패키지,모듈\r\n                                    <a name=\"라이브러리,패키지,모듈\" style={{ visibility: \"hidden\" }}> 라이브러리,패키지,모듈  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 패키지 : 특정 기능과 여러 모듈을 하나의 폴더에 보관 </small> <br />\r\n                                    <small> 라이브러리 : 모듈과 패키지를 묶은 단위 </small> <br />\r\n                                    <small> 모듈 : 함수,변수,클래스 등이 묶인 단위 </small> <br />\r\n                                    <small> 선언 : import.패키지명.모듈명 , import 모듈명 , from 모듈명 import 함수명1,함수명2,\r\n                                        from 모듈 import *, import 모듈명 as 별명 </small> <br />\r\n\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ calculator (수학 함수) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li> add(x,y) : 덧셈 </li>\r\n                                            <li> subtract(x,y) : 뺄셈 </li>\r\n                                            <li> multiple(x,y) : 곱셈 </li>\r\n                                            <li> divide(x,y) : 나눗셈 </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ numpy (수학 관련 모듈) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ math (수학 관련)  </summary>\r\n                                        <span className=\"mblock\">\r\n                                            <li> round(값,소수점몇번째까지살리는위치) : 반올림 </li>\r\n                                            <li> sqrt(@) : 제곱근, 루트 </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ datatime (날짜) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ os (운영체제) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\"> ▶ random (랜덤) </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\">  </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\">  </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n                                    <details>\r\n                                        <summary className=\"sstitle\">  </summary>\r\n                                        <span className=\"sstitle\">  </span>\r\n                                        <span className=\"mblock\">\r\n                                            <li>  </li>\r\n                                        </span>\r\n                                    </details>\r\n                                    {/*  */}\r\n\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 파일 관련\r\n                                    <a name=\"파일 관련\" style={{ visibility: \"hidden\" }}> 파일 관련 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 파일 읽기 (확인 필요) </span>\r\n                                    <span className=\"mblock\">\r\n                                        {/* 이거 실행해봐야함.. 뭔지 아직 잘 모름 */}\r\n                                        <li> with open('주소','r') as f: </li>\r\n                                        <li> for line in f: </li>\r\n                                        <li> print(line) </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 파일 쓰기 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> with open('파일주소.txt','w') as f:   #txt파일에 내용 덮어쓰기 </li>\r\n                                        <li>  f.write(\"Hello world\\n\") </li>\r\n                                        <li>  </li>  <br />\r\n                                        <li> with open('파일주소.txt','a') as f    #txt파일에서 내용 추가하기 </li>\r\n                                        <li>  f.write(\"Hello world\\n\") </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 데코레이터 함수\r\n                                    <a name=\"데코레이터 함수\" style={{ visibility: \"hidden\" }}> 데코레이터 함수 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <small> 기존 함수를 바꾸지 않고 추가적으로 코드를 작성하여 사용하거나 반환 </small>\r\n                                    <span className=\"sstitle\"> 사용방법1 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 함수1에다가 코드를 추가 작성하여 함수2로 만드는 방법 기존코드는 수정하지 않고 만들어냄 </small>\r\n                                        <li> def deco_func(함수명1) </li>\r\n                                        <li> &nbsp;def deco_new_func(): </li>\r\n                                        <li> &nbsp;&nbsp;함수명1() 혹은 코드작성 </li>\r\n                                        <li> &nbsp;return deco_new_func </li> <br />\r\n                                        <li> 함수명2 = deco_func(함수명1) </li>\r\n                                        <li> 함수명2()  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> @을 이용한 사용방법2 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <small> 함수명1()에 함수명2()가 들어가서 새로운 함수를 만들어내는 방법 </small>\r\n                                        <li> def deco_func(함수명1) </li>\r\n                                        <li> &nbsp;def deco_new_func(): </li>\r\n                                        <li> &nbsp;&nbsp;함수명1() 혹은 코드작성 </li>\r\n                                        <li> &nbsp;return deco_new_func </li> <br />\r\n                                        <li> @deco_func </li>\r\n                                        <li> def 함수명2():  </li>\r\n                                        <li> &nbsp;코드작성  </li>\r\n                                        <li> 함수명2()  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 람다(lambda,익명함수)\r\n                                    <a name=\"람다(lambda,익명함수)\" style={{ visibility: \"hidden\" }}> 람다(lambda,익명함수) </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 사용방법 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> 정의 : lam1 = lambda 변수,변수,변수 :range(변수,변수,변수) </li>\r\n                                        <li> 사용 : lam1(1,10,2) , 1~10까지 2의 간격으로 반환 </li>\r\n                                        <li> 정의 : lam2 = lambda 변수 :변수[-1] </li>\r\n                                        <li> 사용 : sorted(리스트,lam2 = lambda n:n[-1]) , 역순으로 정렬? </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 클래스\r\n                                    <a name=\"클래스\" style={{ visibility: \"hidden\" }}> 클래스 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 클래스 생성자 정의 및 사용 </span>\r\n                                    <small> 멤버변수를 따로 선언할 필요는 없고 생성자로 만들면 사용이 되는것 같다. </small>\r\n                                    <span className=\"mblock\">\r\n                                        <li> class 클래스명: </li>\r\n                                        <li> &nbsp;def initialize(self,매개변수1,매개변수2): </li>\r\n                                        <li> &nbsp;&nbsp;self.멤버변수1 = 매개변수1 </li> <br />\r\n                                        <li> &nbsp;&nbsp;self.멤버변수2 = 매개변수2</li> <br />\r\n                                        <li> 변수 = 클래스명() </li>\r\n                                        <li> 변수.initialize(매개변수1,매개변수2) </li>\r\n                                        <li> print(변수.멤버변수1, 변수.멤버변수2) </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ 형변환\r\n                                    <a name=\"형변환\" style={{ visibility: \"hidden\" }}> 형변환 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 형변환 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> float(5) </li>\r\n                                        <li> int(5.0) </li>\r\n                                        <li> str(5) </li>\r\n                                        <li> hex(5) </li>\r\n                                        <li> oct(5) </li>\r\n                                        <li> bin(2) </li>\r\n                                        <li> tuple([5,5])  # 리스트를 튜플로 </li>\r\n                                        <li> list((5,5)) # 튜플을 리스트로 </li>\r\n                                        <li> set([5,5]) #리스트를 집합 데이터형으로 바꿈 </li>\r\n                                        <li> dict([[5,5]]) # 쌍으로 존재할 때 만 딕셔너리로 </li>\r\n                                        <li> chr(숫자) # 아스키코드로  </li>\r\n                                        <li> ord(\"문자\")  # 아스키코드로 </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▷ _(언더바) 사용\r\n                                    <a name=\"_(언더바) 사용\" style={{ visibility: \"hidden\" }}> _(언더바) 사용 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 사용방법 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <h4> 반복문 인덱스 용도 </h4> , _ 는 인덱스 값을 가지지 않음\r\n                                            <li> for _ in range(10):\r\n                                                <li> print('test') </li>\r\n                                            </li>\r\n                                        </li>\r\n                                        <li> <h4> 값 무시 용도 </h4>\r\n                                            <li> a,b,_,c = 1,2,3,4 </li>\r\n                                            <li> print(a) print(b) print(c) # 1,2,4 출력 </li>\r\n                                        </li>\r\n                                        <li> <h4> 자릿수 표기 용도 </h4>\r\n                                            <li> num = 100_000_000 </li>\r\n                                            <li> print(num) # 100000000 출력 </li>\r\n                                        </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> numpy 모듈\r\n                                    <a name=\"\" style={{ visibility: \"hidden\" }}> ▷  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\"> 설명 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> <a href=\"https://numpy.org/doc/stable/index.html\" target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"> numpy 공식 사이트 </a> </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\"> 사용 </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> import numpy as np # 선언 </li>\r\n                                        <li> arr1 = np.array(배열) # array 정의 </li>\r\n                                        <li> arr1 = np.array(2ckdnjs배열) # array 정의 </li>\r\n                                        <li> arr1.shape # array 행과 열 조회 </li>\r\n                                        <li> arr1.dtype # array 자료형 조회 </li>\r\n                                        <li> np.zeros(10) # 1행 10열 0 요소를 가진 1차원 array </li>\r\n                                        <li> np.zeros((10,10)) # 10행 10열 0 요소를 가진 2차원 array </li>\r\n                                        <li> np.ones(1) </li>\r\n                                        <li> np.ones((10,10)) </li>\r\n                                        <li> np.arange(10) # 0~9 까지  </li>\r\n                                        <li> np.arange(1,10) # 1~9 까지  </li>\r\n                                        <li> arr1 + arr2 , np.add(arr1,arr2) # 행열의 각 요소끼리 덧셈 </li>\r\n                                        <li> arr1 - arr2 , np.subtract(arr1,arr2) # 행열의 각 요소끼리 뺄셈 </li>\r\n                                        <li> arr1 * arr2 , np.multiply(arr1,arr2) # 행열의 각 요소끼리 곱셈 </li>\r\n                                        <li> arr1 / arr2 , np.dividev(arr1,arr2) # 행열의 각 요소끼리 나눗셈 </li>\r\n                                        <li> arr1 = 2행 2열 , arr2 = 1행 2열 (브로드 캐스트)\r\n                                            <li> arr1 + arr2 # arr2가 행을 1개 확장하여 계산 </li>\r\n                                            <li> arr1 - arr2 # arr2가 행을 1개 확장하여 계산 </li>\r\n                                            <li> arr1 * arr2 # arr2가 행을 1개 확장하여 계산 </li>\r\n                                            <li> arr1 / arr2 # arr2가 행을 1개 확장하여 계산 </li>\r\n                                        </li>\r\n                                        <li> arr1 * 10 # 각요소의 곱셈 </li>\r\n                                        <li> arr1 ** 2 # 각요소의 제곱 </li>\r\n                                        <li> arr1[1] #인덱스 조회 </li>\r\n                                        <li> arr1[1:10] # 슬라이싱 </li>\r\n                                        <li> arr1[:10]  0부터 9까지 </li>\r\n                                        <li> arr1[1:] # 1부터 끝까지 </li>\r\n                                        <li> arr1[:] #모든 요소 </li>\r\n                                        <li> arr1[1,1] #2차원 인덱싱 </li>\r\n                                        <li> arr1[1,:] #2차원 1행 모든열 슬라이싱 </li>\r\n                                        <li> arr1[:,1] #2차원 모든행 1열 슬라이싱 </li>\r\n                                        <li> np.random.rand(10,10) # 0~1 의 난수를 발생시킨다. , 10행 10열 </li>\r\n                                        <li> np.random.randn(10,10) # 기대값 0, 표준편차 1의 가우시안 정규분포를 따르는\r\n                                            난수를 발생시킨다. , 10행 10열 </li>\r\n                                        <li> mask1 = ( arr1 == '값') # arr1에서 조건에 맞는 값들에 대한 boolean 값을 리턴 </li>\r\n                                        <li> arr1[arr2 == '값', : ] # arr1에서 arr2 조건에 맞는 행을 출력 </li>\r\n                                        <li> arr1[ (arr2 == '값') | (arr2 == '값') , :  ] # arr1에서 arr2 조건에 맞는 행을 출력 </li>\r\n                                        <li> arr1[arr1[ (arr2 == '값') ] {'>'} 0, : ]  </li>\r\n                                        <li> np.abs(arr1) </li>\r\n                                        <li> np.sqrt(arr1) , arr1 ** 0.5 # 음수를 제곱근 하면 경고 발생, nan 출력 </li>\r\n                                        <li> np.square(arr1) , arr1 ** 2 </li>\r\n                                        <li> np.exp(arr1) </li>\r\n                                        <li> np.log(arr1) # 자연로그 ln , log<sub>e</sub> </li>\r\n                                        <li> np.log10(arr1) # 상용로그 log<sub>10</sub> </li>\r\n                                        <li> np.log2(arr1) # 상용로그 log<sub>2</sub> </li>\r\n                                        <li> np.sign(arr1) # +는 1, -는 -1 , 0은 0 </li>\r\n                                        <li> np.isnan(arr1) # nan이면 True , 아니면 False </li>\r\n                                        <li> np.isinf(arr1) # 무한대이면 True , 아니면 False </li>\r\n                                        <li> np.ceil(arr1) # 1번째 자리에서 올림 </li>\r\n                                        <li> np.floor(arr1) # 1번째 자리에서 내림 </li>\r\n                                        <li> np.sin(arr1) </li>\r\n                                        <li> np.sinh(arr1) </li>\r\n                                        <li> np.cos(arr1) </li>\r\n                                        <li> np.cosh(arr1) </li>\r\n                                        <li> np.tan(arr1) </li>\r\n                                        <li> np.tanh(arr1) </li>\r\n                                        <li> np.maximum(arr1,arr2) # arr1,arr2 배열에서 최댓값 출력 </li>\r\n                                        <li> np.minimum(arr1,arr2) # arr1,arr2 배열에서 최솟값 출력 </li>\r\n                                        <li> np.sum(arr1) # 모든 요소 합 </li>\r\n                                        <li> np.sum(arr1, axis=0) #각 열의 합 </li>\r\n                                        <li> np.sum(arr1, axis=1) #각 행의 합</li>\r\n                                        <li> np.mean(arr1) # 평균값 출력 </li>\r\n                                        <li> np.std(arr1) # 표준편차 </li>\r\n                                        <li> np.var(arr1) # 분산 </li>\r\n                                        <li> np.min(arr1) # 최댓값 </li>\r\n                                        <li> np.max(arr1) # 최솟값 </li>\r\n                                        <li> np.argmin(arr1) # arr1의 최솟값 인덱스 반환 </li>\r\n                                        <li> np.argmax(arr1) # arr1의 최댓값 인덱스 반환 </li>\r\n                                        <li> np.cumsum(arr1) # 첫항부터 누적합을 계산 </li>\r\n                                        <li> np.cumprod(arr1) # 첫항부터 누적곱을 계산 </li>\r\n                                        <li> np.sort(arr1) #오름차순 정령 </li>\r\n                                        <li> np.sort(arr1)[::-1] #내림차순 정령 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                    {/*  */}\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n\r\n                        <div className='mblock'>\r\n                            <details>\r\n                                <summary className='stitle'> 판다스 문법\r\n                                    <a name='' style={{ visibility: 'hidden' }}>  </a> </summary>\r\n                                <div className='sblock'>\r\n                                    <div className='sstitle'>  </div>\r\n                                    <div className='mblock'>\r\n                                        <li> row_df = pd.DataFrame(['a','b','c','d'], axis=0) # axis=0은 아래로 추가, 디폴트값 </li>\r\n                                        <li> row_df = pd.DataFrame(['a','b','c','d'], axis=0) # axis=1은 우측으로 추가 </li>\r\n                                        <li> column_df = pd.DataFrame([['a','b','c','d']]) </li>\r\n                                        <li> column_df = pd.DataFrame([['a','b','c','d']], columns=['A','B','C','D']) </li>\r\n                                        <li> df2 = pd.concat([데이터프레임1,데이터프레임2]) </li>\r\n                                        <li> df2.append(데이터프레임3,ignore_index=True) </li>\r\n                                        <li> df4 = {'{'} 'A':'n1', 'B':'n2', 'C':'n3', 'D':'n4' {'}'} </li>\r\n                                        <li> df2.append(df4, ignore_index=True) # 딕셔너리형태로 데이터프레임에 넣으려면 인덱스가 필요 </li>\r\n                                        <li> df.  RangeIndex(start=0, stop=10, step=1) </li>\r\n                                        <li>  </li>\r\n                                    </div>\r\n                                </div>\r\n                            </details>\r\n                        </div>\r\n                        {/*  */}\r\n\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default PythonBasic;\r\n\r\n","import React from 'react';\r\n\r\nconst PythonRegex = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 설명\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> import re # 라이브러리를 사용  </li>\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 정규 표현식 문법\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 문자열 = r\"모든문자\" # 문자,특수문자 등등을 문자열로 출력 </li>\r\n                                    <li> 패턴{'{1,3}'} # 패턴을 1~3번 반복 </li>\r\n                                    <li> [abc] # a 혹은 b 혹은 c </li>\r\n                                    <li> [a|b|c] # a 혹은 b 혹은 c </li>\r\n                                    <li> [aA] # a 혹은 A  </li>\r\n                                    <li> [a-z] # a~z 까지의 범위 </li>\r\n                                    <li> [^a-z] # a~z가 아닌 문자 </li>\r\n                                    <li> [0-9] # 0~9 까지의 숫자 </li>\r\n                                    <li> [^0-9] # 0~9 까지의 숫자를 제외한 문자 </li>\r\n                                    <li> [a-zA-Z0-9] # 모든 문자와 숫자 </li>\r\n                                    <li> [가-힣] # 모든 한글 </li>\r\n                                    <li> a...z # a~z 까지의 문자 </li>\r\n                                    <li> ^[패턴] # 패턴이 제일 앞에 있는지 물어봄 </li>\r\n                                    <li> 패턴+ : 1번이상의패턴 </li>\r\n                                    <li> 패턴* : 0번 이상의 패턴\r\n                                        <li> [0-9]* # 0~9로 이루어진 문자열 </li>\r\n                                    </li>\r\n                                    <li> 패턴? : 0~1번의 패턴 </li>\r\n                                    <li> 패턴. : 어떠한 문자 패턴도 가능 </li>\r\n                                    <li> \\문자$ # 마지막에 문자의 위치를 찾는다고 하는데 (미확인) </li>\r\n                                    <li> 문자$ # 문자열의 마지막의 문자가 맞는지\r\n                                        <li> [a-zA-Z0-9]+.@ # 문자열의 끝이 @으로 끝나는지 확인  </li>\r\n                                    </li>\r\n                                    <li> \\d : 0-9와 동일 </li>\r\n                                    <li> \\D : [^0-9] 와동일 </li>\r\n                                    <li> \\s : 공백문자(띄어쓰기,탭 등) </li>\r\n                                    <li> \\S : 공백이아닌문자 </li>\r\n                                    <li> \\w : [0-9a-zA-Z]와 동일 </li>\r\n                                    <li> \\W : [^0-9a-zA-Z]와 동일 </li>\r\n                                    <li> 옵션 : re.IGNORECASE # 대소문자를 무시 </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ re 문법\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> re.match('패턴','문자열') </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 문자열의 시작부분에서부터 패턴이 일치하는지 검색 </li>\r\n                                    <li> 처음부터 일치하지 않으면 None  </li>\r\n                                    <li> re.match('패턴','문자열') </li>\r\n                                    <span className='title4'> 예시 </span>\r\n                                    <span className='sblock'>\r\n                                        <li> re.match('aaa','aaab') (o) </li>\r\n                                        <li> re.match('baaa','aaab') (x) </li>\r\n                                    </span>\r\n                                </span>\r\n                                <span className=\"sstitle\"> re.search('패턴','문자열') </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 문자열에서 패턴이 매칭되는 곳이 있는지 확인 </li>\r\n                                    <span className=\"title4\"> 예시 </span>\r\n                                    <span className=\"sblock\">\r\n                                        <li> re.search('aaa','aaab') (o) </li>\r\n                                        <li> re.search('baaa','aaab') (o) </li>\r\n                                    </span>\r\n                                </span>\r\n                                <span className=\"sstitle\"> re.findall('패턴','문자열') </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 정규식과 일치하는 모든 문자열을 리스트로 반환 </li>\r\n                                    <li> 만약에 정규식이 일치하는 부분이 겹치다면 중복을 허용하지 않음 </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> re.finditer('패턴','문자열') </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> 정규식과 일치하는 모든 문자열을 iterator로 반환 </li>\r\n                                    <li> 만약에 정규식이 일치하는 부분이 겹치다면 중복을 허용하지 않음 </li>\r\n                                </span>\r\n                                <span className=\"sstitle\"> match 객체 사용방법 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li> re.finditer('패턴','문자열') #문자열에서 패턴이 일치하면 iterator로 반환(겹치는값은x)  </li>\r\n                                    <li> re.fullmatch('패턴','문자열') #시작부터 끝까지 모두 일치하면 match객체 반환 </li>\r\n                                    <li> re.split('패턴','문자열',split횟수) </li>\r\n                                    <li> re.sub('패턴','바꿀문자열','문자열','바꿀횟수') #바꾸어진 문자열 반환 </li>\r\n                                    <li> re.subn('패턴','바꿀문자열','문자열') # (문자열,바뀐횟수)로 반환 </li>\r\n                                    <li> re객체명 = re.compile('패턴') #패턴이 반복되면 공통적으로 적용시킴\r\n                                        <li> re객체명.match('문자열') #이와 같이 패턴을 쓰지 않고 사용 </li>\r\n                                    </li>\r\n                                    <li> re.purge() #compile은 캐시에 100개가 넘어가면 초기화 그것을 방지 하는 용도 </li>\r\n                                    <li> re.escape('특수문자') #모든 특수문자 앞쪽에 백슬래쉬(\\)를 붙여서 반환 </li>\r\n                                    <li> match객체\r\n                                        <li> match객체명.group() #일치하는 패턴 문자열  </li>\r\n                                        <li> match객체명.start() #일치한 패턴 시작 위치 인덱스</li>\r\n                                        <li> match객체명.end() #일치한 패턴 끝 위치 인덱스 </li>\r\n                                        <li> match객체명.span() #일치한 패턴이 어디부터 어디까지인지 인덱스 </li>\r\n                                        <li> match객체명.groups() #일치한 패턴들을 반환 </li>\r\n                                        <li> match객체명.group(인덱스) #일치한 패턴들의 인덱스 값을 반환 </li>\r\n                                    </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶ 사용 예시\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\"> 컴파일 사용해서 반복적으로 적용 </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                    <li>  </li>\r\n                                </span>\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> ▶\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                            <span className=\"sblock\">\r\n                                <span className=\"sstitle\">  </span>\r\n                                <span className=\"mblock\">\r\n                                    <li>  </li>\r\n                                </span>\r\n                            </span>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PythonRegex;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst AiBasic = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"common_style\" >\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AiBasic;","import React from 'react';\r\n\r\nconst BlockChainPow = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <ul>\r\n                    <span className=\"lblock\">\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ 작업 증명 합의 알고리즘 <a name=\"작업 증명 합의 알고리즘\" style={{ visibility: \"hidden\" }}> 작업 증명 합의 알고리즘 </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li> bitcoin 에서 사용되는 알고리즘 </li>\r\n                                        <li>  </li>\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                        <span className=\"mblock\">\r\n                            <details>\r\n                                <summary className=\"stitle\"> ▶ <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n                                <span className=\"sblock\">\r\n                                    <span className=\"sstitle\">  </span>\r\n                                    <span className=\"mblock\">\r\n                                        <li>  </li>\r\n                                    </span>\r\n                                </span>\r\n                            </details>\r\n                        </span>\r\n                        {/*  */}\r\n                    </span>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BlockChainPow;","import React from 'react';\r\n\r\nconst CTBaekJoon = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <ul>\r\n          <span className=\"lblock\">\r\n            <span className=\"mtitle\"> 백준 문제 </span>\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 0 - 1000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 1001 - 2000 </summary>\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 1339 번 - 단어 수학  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li> 수학문제는 N개의 단어로 이루어짐 </li>\r\n                      <li> 단어는 알파벳 대문자로만 이루어져 있다. </li>\r\n                      <li> 각 알파벳 대문자를 0~9까지의 숫자 중 하나로 바꾸어서 N개의 수를 합치는 문제 </li>\r\n                      <li> 같은 알파벳은 같은 숫자로 바뀌며, 다른 알파벳과 같은 숫자가 되어서는 안된다. </li>\r\n                      <li> N개의 단어를 합해서 최댓값을 구하는 프로그램 </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 첫째 줄에는 N을 입력한다. {' 1 <= N <= 10 '}  </li>\r\n                      <li> 2번째 줄부터는 단어가 한줄에 1개씩 주어진다. </li>\r\n                      <li> 모든 단어에 포함되어 있는 알파벳은 최대 10개 </li>\r\n                      <li> 단어의 최대 길이는 8 </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 1번째 줄에 단어 합의 최댓값을 출력하라 </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 알파벳의 최대 갯수는 10개 , 일단 값에대한 매칭이 필요하다. </li>\r\n                      <li> 최댓갑이 발생하려면 숫자가 큰 수의 제일 앞에 숫자가 9이어야 한다.  </li>\r\n                      <li> 문제가 경우의 수가 크게 많지가 않아 그냥 브루트포스로 풀면 될것 같다.  </li>\r\n                      <li> 브루트 포스가 아닌 간단한 해쉬테이블을 만들어서 풀어보려고 한다. </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li> import sys </li>\r\n                          <li> N = int(sys.stdin.readline()) </li>\r\n                          <li> word_list = []  # 입력받은 단어들을 보관하는 리스트 </li>\r\n                          <li> word_alphabet = []  # 단어들의 모든 알파벳을 저장하는 리스트 </li>\r\n                          <li> alphabet_kind = { }  # 단어들의 알파벳에서 중복을 제거하고 저장하는 리스트 </li>\r\n                          <li> alphabet_hashtable = { }  # 중복되지 않은 단어들의 값이 빈 해쉬테이블 생성, 추후에 값을 넣음 </li>\r\n                          <li> num_list = []  # 처음에 문자열로 입력한 단어를 숫자 바꿔놓은 리스트 </li>\r\n                          <li> num = 9  # 해쉬테이블에 제일 큰값인 9부터 넣기 위해서 선언 </li> <br />\r\n                          <li> for i in range(N):\r\n                            <li> word_list.append(sys.stdin.readline().rstrip())  </li>\r\n                            <li> for j in word_list[i]:\r\n                              <li> word_alphabet.append(j) </li>\r\n                            </li>\r\n                          </li> <br />\r\n                          <li> alphabet_kind = dict.fromkeys(list(set(word_alphabet)), 0) </li>\r\n                          <li> alphabet_hashtable = dict.fromkeys(list(set(word_alphabet)), 0) </li> <br />\r\n                          <li> for i in range(N): </li>\r\n                          <li> num_position = len(word_list[i])\r\n                            <li>  for j in word_list[i]: </li>\r\n                            <li> rank = 10**(num_position-1) </li>\r\n                            <li> alphabet_kind[j] += rank  </li>\r\n                            <li> num_position = num_position - 1 </li>\r\n                          </li>\r\n                          <li> for i in alphabet_kind:\r\n                            <li> alphabet_hashtable[max(alphabet_kind, key=alphabet_kind.get)] = num </li>\r\n                            <li> alphabet_kind[max(alphabet_kind, key=alphabet_kind.get)] = 0 </li>\r\n                            <li> num -= 1 </li>\r\n                          </li>\r\n                          <li> for word in word_list:\r\n                            <li> temp = \"\" </li>\r\n                            <li> for alpha in word:\r\n                              <li> </li>\r\n                            </li>\r\n                            <li> </li>\r\n                          </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 1399번 끝 */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 번 끝 */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 번 끝 */}\r\n              </details>\r\n            </span>\r\n            {/* 1000번대 끝 */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 2001 - 3000 </summary>\r\n                {/* 2000번대 */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 2529 번 - 부등호 </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li> 부등호 기호 {'< , >'} k개가 나열된 순서열 A가 있다. </li>\r\n                      <li> 부등호 사이에 숫자를 넣어서 순서열을 만족시키는 수를 찾고자한다. </li>\r\n                      <li> 들어갈수 있는 숫자는 0~9이고 각 1개씩 밖에 존재하지 않는다. </li>\r\n                      <li> 조건을 만족할 때 부등호를 없애고 이어 붙인 숫자를 찾는다. </li>\r\n                      <li> 조건을 만족하는 수는 1개가 아니라 여러개일 수 있다. </li>\r\n                      <li> 이때 최솟값과 최댓값을 찾으려 한다. </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 첫줄에 부등호의 갯수 k ({'2 ≤ k ≤ 9'}) </li>\r\n                      <li> 2번째 줄에 부등호를 공백으로 두면서 입력 </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 1번째 줄에는 만족하는 최소 정수 </li>\r\n                      <li> 2번째 줄에는 만족하는 최소 정수 </li>\r\n                      <li> 0으로 시작하는 정수여도 0 표기 , 문자열로 출력 </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 브루트포스로 풀면 최대 10!의 숫자가 들어가고 조건이 일치하는지도 확인을 해야한다.(아닐듯 싶다) </li>\r\n                      <li> 부등호의 갯수를 왼쪽,오른쪽을 먼저 구분해서 문제를 풀어보려 했는데 이게 아니다..  </li>\r\n                      <li> 결론은 DFS 방식 + 백트래킹 </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  import sys </li>\r\n                          <li>  k = int(sys.stdin.readline().rstrip()) </li>\r\n                          <li>  bracket = sys.stdin.readline().rstrip().split() </li>\r\n                          <li>  num_visit = [\"false\" for i in range(10)] </li>\r\n                          <li>  num_list = [] </li> <br />\r\n                          <li> def dfs(front_num, count_num, str_num):\r\n                            <li> if count_num == k:\r\n                              <li> num_list.append([str_num]) </li>\r\n                            </li>\r\n                            <li> else:\r\n                              <li> for j in range(10):\r\n                                <li> if num_visit[j] == \"false\":\r\n                                  <li> if bracket[count_num] == \"{'<'}\":\r\n                                    <li> if front_num {'>'} j:\r\n                                      <li> continue  </li>\r\n                                    </li>\r\n                                  </li>\r\n                                  <li> elif bracket[count_num] == \"{'>'}\":\r\n                                    <li> if front_num {'<'} j:\r\n                                      <li> continue </li>\r\n                                    </li>\r\n                                  </li>\r\n                                  <li> num_visit[j] = \"true\" </li>\r\n                                  <li> dfs(j, count_num+1, str_num+str(j)) </li>\r\n                                  <li> num_visit[j] = \"false\" </li>\r\n                                </li>\r\n                              </li>\r\n                            </li>\r\n                          </li> <br />\r\n                          <li> for i in range(10):\r\n                            <li> num_visit[i] = \"true\" </li>\r\n                            <li> dfs(i, 0, str(i)) </li>\r\n                            <li> num_visit[i] = \"false\" </li>\r\n                          </li> <br />\r\n                          <li> print(\" \".join(num_list[-1])) </li>\r\n                          <li> print(\" \".join(num_list[0])) </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 2000번대 끝 */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 3001 - 4000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 4001 - 5000  </summary>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 4377 번 - Tight words(영문) </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제(번역) </h3>\r\n                      <li> 1~k ({'0 <= k <= 9'}) 의 알파벳이 있다. </li>\r\n                      <li> n의 길이를 가진 단어에서 2개의 이웃한 문자가 1이하인\r\n                        단어를 tight word라고 한다. </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) (번역) </h3>\r\n                      <li> 연속으로 줄에 입력하는데 , 각 라인은 2가지의 정수숫자를 포함한다. </li>\r\n                      <li> k n ({'1 <= n <= 100'}) </li>\r\n                    </li>\r\n                    <li> <h3> 출력 (번역) </h3>\r\n                      <li> 입력값에 대하여 각 줄에 tight한 word가 나타날 확률을\r\n                        소수점 5자리숫자까지 확률로 출력하라 </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 전체 경우의 수는 k^n 최대경우의수는 9^100 </li>\r\n                      <li> 양 옆에 자릿수가 1이하의 차이가 나야한다.  </li>\r\n                      <li> 트리구조인것 같은데..  </li>\r\n                      <li> 자릿수의 값이 0이거나 k이면 다음에 올수 있는 자릿수는 2가지이다.  </li>\r\n                      <li> 자릿수의 값이 0,k 가 아니면 다음에 올수 있는 자릿수는 3가지이다.  </li>\r\n                      <li> arr[n][k] : (n+1)자리에서 k의 값을 가질때 이전의 자릿수의 값과 비교해서\r\n                        tight word조건을 만족할 수 있는 값의 경우의 수(말로 설명하기가 어렵다..)  </li>\r\n                      <li> k=2 n=5 예시를 들어보겠다.\r\n                        <span className=\"mblock\">\r\n                          <li> {'0<=k<=2 , n은 5자리의 숫자 , '} 가로줄은 n번째 자릿수 , <br /> 세로줄은\r\n                            k의 값이 n번째 자릿수에 올 수 있는 경우의 수를 보여준다. </li>\r\n                          <li> # 0  1 2 </li>\r\n                          <li> 1 1  1 1 </li>\r\n                          <li> 2 2  3 2</li>\r\n                          <li> 3 5  7 5</li>\r\n                          <li> 4 12 17 12</li>\r\n                          <li> 5 29 41 29 </li>\r\n                          <li> <h4> 결과 : </h4>\r\n                            <li> 29+41+29 = 99 , 99/243 = 40.74074 </li>\r\n                          </li>\r\n                        </span>\r\n                      </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li> import sys </li>\r\n                          <li> for line in sys.stdin:\r\n                            <li> k, n = map(int, line.split()) </li>\r\n                            <li> array = [[0]*(k+1) for i in range(n)] </li>\r\n                            <li>                     for i in range(k+1):\r\n                              <li> array[0][i] = 1 </li>\r\n                            </li>\r\n                            <li> if k != 0:\r\n                              <li> for i in range(1, n):\r\n                                <li> for j in range(k+1):\r\n                                  <li> array[i][j] = array[i-1][j]+array[i-1][j+1] </li>\r\n                                </li>\r\n                                <li> elif j == k:\r\n                                  <li> array[i][j] = array[i-1][j]+array[i-1][j-1] </li>\r\n                                </li>\r\n                                <li> else:\r\n                                  <li> array[i][j] = array[i-1][j-1]+array[i-1][j]+array[i-1][j+1] </li>\r\n                                </li>\r\n                              </li>\r\n                            </li>\r\n                            <li> elif k == 0:\r\n                              <li> for i in range(n):\r\n                                <li> array[i][k] = 1 </li>\r\n                              </li>\r\n                            </li>\r\n                            <li> print('%0.5f' % (sum(array[n-1])/pow(k+1, n)*100)) </li>\r\n                          </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 5001 - 6000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 6001 - 7000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 7001 - 8000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 8001 - 9000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 9001 - 10000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 10001 - 11000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 11001 - 12000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 12001 - 13000  </summary>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 12002 번 - Field Reduction (Silver) </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 (번역) </h3>\r\n                      <li> 농장에 소가 N마리 ({'5<=N<=50000'})는 2차원적인 영역에 있다. </li>\r\n                      <li> 농부는 소들을 x,y축 평행한 울타리로 막기를 원하고,  </li>\r\n                      <li> 가능한 작게 모든 소를 포함시키기를 원한다. ( 경계의 소들도 가능하다.) </li>\r\n                      <li> 그래서 최대 3마리의 소를 팔 수 있다.  </li>\r\n                      <li> 소는 점으로 생각하고 , 울타리는 수평이고 수직인 직선으로 구성되어 있다.  </li>\r\n                      <li> 즉 좌표명면 1사분면에 점을 찍고 점을 수직으로 이은 사각형의 면적이 제일 작은것을 구하라 </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 1번째 줄에는 N(소의 숫자)을 입력한다, </li>\r\n                      <li> 그 다음줄에는 구체적인 소의 위치(x,y)를 입력한다. </li>\r\n                      <li> 소의 위치는 1~40000까지 된다. </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 최소 면적을 출력하시오 </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 소를 최대 3마리를 팔수 있다는 생각을 해야한다.  </li>\r\n                      <li> 소의 위치는 양의 정수  </li>\r\n                      <li> 1. 모든 수의 중점을 찾아서 멀리떨어진 수를 제거하자니 중점 계산하고\r\n                        5만번의 좌표 거리 계산이 필요한데 이것도 맞을까????  </li>\r\n                      <li> 2. 경우의 수를 해보기? , 만약에 N=50000이면 너무 많아서 이거는 아닐듯 싶다 </li>\r\n                      <li> 3. 상하좌우 끝에서부터 각 3개의 좌표중에 제거해야되는 점이 존재한다. </li>\r\n                      <li> 3-1. <sub> 12 </sub> C <sub> 3 </sub> 이므로 </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 13001 - 14000  </summary>\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 13395 번 - 팬린드롬 행렬 </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li> N행 M열로 이루어진 행렬 A </li>\r\n                      <li> N,M 은 짝수, 행렬의 각 원소는 0 또는 1 </li>\r\n                      <li> 행렬의 행은 1번부터 N번까지 번호가 매겨져 있음 </li>\r\n                      <li> 행렬의 열은 1번부터 M번까지 번호가 매겨져 있음 </li>\r\n                      <li> 팰린드롬이란? 앞에서 읽으나 뒤에서 읽으나 똑같은 번호를 가진 행렬 </li>\r\n                      <li> 행렬 A의 일부 행과 열은 팰린드롬이다. </li>\r\n                      <li> 행렬 A와 두 정수 R과 C가 주어진다. </li>\r\n                      <li> 행렬 A의 팰린드롬 행의갯수는 최소 R개 , 열의 갯수는 최소 C개가 되어야 한다. </li>\r\n                      <li> 위 조건을 만족시키기 위해 바꾸어야하는 행렬 A의 원소의 갯수를 구하는 프로그램을 작성하라. </li>\r\n                      <li> 원소를 바꾼다는 의미는 0을 1로 1을 0으로 바꾼다는 의미이다. </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 첫째 줄에 N M R C 입력 (2 ≤ N, M ≤ 14, N과 M은 짝수, 0 ≤ R ≤ N, 0 ≤ C ≤ M ) </li>\r\n                      <li> 둘째 줄부터 N개의 줄에 행렬 A의 원소가 1행 부터 순서대로 주어진다. </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 위의 조건을 만족하게 끔 행렬 A의 원소를 최소한으로 바꾸어야 하는 갯수를 출력 </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 1. 25분초과 </li>\r\n                      <li> 2. 펠린드롬을 만족하는 행과열의 합은 홀수 일수는 없다. </li>\r\n                      <li> 3.  </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/*  */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 14001 - 15000  </summary>\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶ 14888 번 - 연산자 끼워넣기 </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li> N개의 수로 이루어진 수열이 있다. </li>\r\n                      <li> 수와 수 사이에 연산자를 끼어넣을 수 있다. </li>\r\n                      <li> 연산자는 + , - , / , * 이 있다. </li>\r\n                      <li> 식의 계산은 연산자의 우선순위를 무시하고 순서대로 계산한다. </li>\r\n                      <li> 나눗셈은 몫만 챙기고 나머지는 버린다. </li>\r\n                      <li> 음수를 나누면 양수로 바꾼후 몫을 가지고 음수로 바꾼다. </li>\r\n                      <li> 식의 결과가 최대인 것과 최소인 값을 구하라 </li>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li> 1번째 줄에 N {' 2 <= N <= 11'}의 갯수가 주어진다. </li>\r\n                      <li> 2번째 줄에 공백을 구분으로 수열의 수를 입력한다. </li>\r\n                      <li> 3번쨰 줄에 공백을 구분으로 +,-,*,/ 의 개수가 주어진다. </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li> 1번째 줄에는 최댓값 출력 </li>\r\n                      <li> 2번째 줄에는 최솟값 출력 </li>\r\n                      <li> 계산이 되는 중에 값들은 -10억 ~ 10억 사이의 값만 갖는다. </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li> 1. 연산자를 넣을 때 중복되는 연산자는 제외한다. </li>\r\n                      <li> 2. 연산자의 우선순위가 없다는 것은 이웃한 수끼리 묶어서 계산해야한다. </li>\r\n                      <li> 3. 연산자가 음수일 경우에 대해서 판단을 해야한다.\r\n                        <li> 파이썬에서는 양수를 음수로 나누어도 결과값이 나온다... C는 안그랬던거 같은데 ㅠㅠ </li>\r\n                      </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li> import sys </li>\r\n                          <li> N = int(sys.stdin.readline().rstrip()) </li>\r\n                          <li> A_list = list(map(int, sys.stdin.readline().rstrip().split())) </li>\r\n                          <li> operator_list = list(map(int, sys.stdin.readline().rstrip().split())) </li>\r\n                          <li> sum_list = [] </li> <br />\r\n                          <li> def dfs(A_value, count): <br />\r\n                            <li> if count == N-1:\r\n                              <li> sum_list.append(A_value) </li> <br />\r\n                            </li>\r\n                            <li> for i in range(4):\r\n                              <li> if operator_list[i] {'>'} 0:\r\n                                <li> if i == 0:\r\n                                  <li> temp = A_value + A_list[count+1] </li>\r\n                                </li>\r\n                                <li> if i == 1:\r\n                                  <li> temp = A_value - A_list[count+1] </li>\r\n                                </li>\r\n                                <li> if i == 2:\r\n                                  <li> temp = A_value * A_list[count+1] </li>\r\n                                </li>\r\n                                <li> if i == 3:\r\n                                  <li> if A_value {'<'} 0 and A_list[count+1] {'<'} 0:\r\n                                    <li> temp = int((A_value * -1) / (A_list[count+1] * -1)) </li>\r\n                                  </li>\r\n                                  <li> elif A_value {'<'} 0 or A_list[count+1] {'<'} 0:\r\n                                    <li> temp = int((abs(A_value) / abs(A_list[count+1])) * -1) </li>\r\n                                  </li>\r\n                                  <li> else:\r\n                                    <li> temp = int(A_value / A_list[count+1]) </li>\r\n                                  </li>\r\n                                </li>\r\n                                <li> operator_list[i] -= 1 </li>\r\n                                <li> dfs(temp, count+1) </li>\r\n                                <li> operator_list[i] += 1 </li>\r\n                              </li>\r\n                            </li>\r\n                          </li> <br />\r\n                          <li> dfs(A_list[0], 0) </li>\r\n                          <li> print(max(sum_list)) </li>\r\n                          <li> print(min(sum_list)) </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 번 끝 */}\r\n                <details>\r\n                  <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n                  <span className=\"sblock\">\r\n                    <li> <h3> 문제 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 입력(문제 조건) </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 출력 </h3>\r\n                      <li>  </li>\r\n                    </li>\r\n                    <li> <h3> 풀이 방법 - 생각 </h3>\r\n                      <li>   </li>\r\n                    </li>\r\n                    <li> <h3> 정답 코드 </h3>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ Python </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                      <details>\r\n                        <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                        <span className=\"mblock\">\r\n                          <li>  </li>\r\n                          <li>  </li>\r\n                        </span>\r\n                      </details>\r\n                    </li>\r\n                  </span>\r\n                </details>\r\n                {/* 번 끝 */}\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 15001 - 16000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 16001 - 17000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n            <span className=\"mblock\">\r\n              <details>\r\n                <summary className=\"stitle\"> ▶ 17001 - 18000  </summary>\r\n              </details>\r\n            </span>\r\n            {/*  */}\r\n          </span>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CTBaekJoon;\r\n\r\n\r\n{/*\r\n<details>\r\n    <summary className=\"sstitle\"> ▶  번 -  </summary>\r\n    <span className=\"sblock\">\r\n        <li> <h3> 문제 </h3>\r\n            <li>  </li>\r\n        </li>\r\n        <li> <h3> 입력(문제 조건) </h3>\r\n            <li>  </li>\r\n        </li>\r\n        <li> <h3> 출력 </h3>\r\n            <li>  </li>\r\n        </li>\r\n        <li> <h3> 풀이 방법 - 생각 </h3>\r\n            <li>   </li>\r\n        </li>\r\n        <li> <h3> 정답 코드 </h3>\r\n            <details>\r\n                <summary className=\"sstitle\"> ▶ Python </summary>\r\n                <span className=\"mblock\">\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                </span>\r\n            </details>\r\n            <details>\r\n                <summary className=\"sstitle\"> ▶ C </summary>\r\n                <span className=\"mblock\">\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                </span>\r\n            </details>\r\n            <details>\r\n                <summary className=\"sstitle\"> ▶ C++ </summary>\r\n                <span className=\"mblock\">\r\n                    <li>  </li>\r\n                    <li>  </li>\r\n                </span>\r\n            </details>\r\n        </li>\r\n    </span>\r\n</details>\r\n\r\n*/}","import React from 'react';\r\n\r\nconst ProgramRecDev = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common_style\">\r\n        <span className=\"lblock\">\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\">  Everything - 윈도우에서 빠른 검색으로 파일 찾기\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 윈도우 검색 창을 사용하면 매번 찾을 때마다 모든 내용을 찾음 하지만 Everything은\r\n                    검색해둔 색인을 기억해두어서 빠르게 찾을 수 있음 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> <a href=\"https://www.voidtools.com/ko-kr/downloads/\" target=\"_blank\"> 다운로드 링크 </a> </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\"> PuTTY\r\n                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li> 윈도우에서 리눅스나 유닉스 계열에 원격으로 접속할 수 있는 클라이언트 프로그램 </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> <a href={process.env.PUBLIC_URL + '/Download/putty-0.76-installer.msi'}\r\n                    download=\"putty-0.76-installer.msi\"> putty-0.76-installer.msi </a> </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n          <span className=\"mblock\">\r\n            <details>\r\n              <summary className=\"stitle\">  <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n              <span className=\"sblock\">\r\n                <span className=\"sstitle\"> 설명 </span>\r\n                <span className=\"mblock\">\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n                <span className=\"sstitle\"> 설치 </span>\r\n                <span className=\"mblock\">\r\n                  <li> <a href=\"#!\" target=\"_blank\"> 다운로드 링크 </a> </li>\r\n                  <li>  </li>\r\n                </span>\r\n                {/*  */}\r\n              </span>\r\n            </details>\r\n          </span>\r\n          {/*  */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProgramRecDev;","import React from 'react';\r\n\r\nconst ProgramRecWin = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"common_style\" >\r\n                <span className=\"lblock\">\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> QTTabar - 윈도우 폴더 탭키를 생성해줌\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li> <a href=\"http://qttabbar.wikidot.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        QTTabBar 사이트 </a> </li>\r\n                                    <li> <a href={process.env.PUBLIC_URL + '/Download/QTTabBar_1043.zip'}\r\n                                        download=\"QTTabBar_1043.zip\"> QTTabBar.exe </a> </li>\r\n                                    <li> QTT 설치후 폴더 열고 - 보기 - 옵션 - QTTabBar 클릭 </li>\r\n                                    <li> 폴더 상단에 탭 공간 비어있는 곳에 우측클릭 QTTabBar Options </li>\r\n                                    <li> Download update now.. 클릭 - 한국어 더블클릭 - 원하는 위치에저장  </li>\r\n                                    <li> language file 우측에 ... 클릭 - Apply 하고 폴더 전부 닫기  </li>\r\n                                    <li> 폴더 열고 탭 공간 비어있는 곳에 우측클릭 QTTabBar Options </li>\r\n                                    <li> 이벤트 - 폴더 뷰 - 여백 더블클릭 - 없음으로 변경 </li>\r\n                                    <li> 하위폴더 메뉴 - 하위폴더 메뉴 사용 체크해제 </li>\r\n                                    <li> 미리보기 - 미리보기 표시 - ~~~ 체크해제 </li>\r\n                                    <li>  </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\"> Qick Startup - 윈도우 자동 실행 프로그램 관리\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\">\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                    <span className=\"mblock\">\r\n                        <details>\r\n                            <summary className=\"stitle\">\r\n                                <a name=\"\" style={{ visibility: \"hidden\" }}>  </a> </summary>\r\n\r\n                            <div className='sblock'>\r\n                                <div className='sstitle'>  </div>\r\n                                <div className='mblock'>\r\n                                    <li> </li>\r\n                                    <li> </li>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                    </span>\r\n                    {/*  */}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProgramRecWin;","import React from 'react';\r\n\r\nconst FigmaBasic = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"common_style\">\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> figma - color </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 gradient </h2>\r\n                            <li> fill - 색깔네모클릭 - 좌측상단에서 linear로 변경 </li>\r\n                            <li> 색깔을 추가하고 싶다면 색깔 띠 빈공간에 마우스 클릭 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"common_style\">\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> figma - space </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 간격 보기 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"common_style\">\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> figma -  </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"common_style\">\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> figma -  </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"common_style\">\r\n                <div className='block1'>\r\n                    <details>\r\n                        <summary> figma -  </summary>\r\n                        <div className='block2'>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                            <h2 className='h2'> 📌 설명 </h2>\r\n                            <li> 1 </li>\r\n\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FigmaBasic;","import React from 'react';\r\nimport './Main.css';\r\nimport './commonStyle.css';\r\nimport { Route, Routes } from 'react-router-dom';\r\n// ========== 백엔드 ==========\r\n// 자바\r\nimport JavaBasic from './Main/JavaContent/JavaBasic';\r\nimport JavaBasic2 from './Main/JavaContent/JavaBasic2';\r\nimport JavaModifier from './Main/JavaContent/JavaModifier';\r\nimport JavaAnnotation from './Main/JavaContent/JavaAnnotation';\r\n\r\n\r\n// PHP\r\nimport PhpBasic from './Main/PhpContent/PhpBasic';\r\n\r\n// 노드JS\r\nimport NodejsBasic from './Main/NodejsContent/NodejsBasic';\r\n\r\n// 스프링\r\nimport SpringError from './Main/SpringContent/SpringError';\r\nimport SpringJpa from './Main/SpringContent/SpringJpa';\r\nimport SpringBasic from './Main/SpringContent/SpringBasic';\r\nimport SpringThymeleaf from './Main/SpringContent/SpringThymeleaf';\r\nimport SpringLombok from './Main/SpringContent/SpringLombok';\r\nimport SpringDaoDto from './Main/SpringContent/SpringDaoDto';\r\nimport SpringYml from './Main/SpringContent/SpringYml';\r\nimport SpringAPI from './Main/SpringContent/SpringAPI';\r\nimport SpringOAuth2 from './Main/SpringContent/SpringOAuth2';\r\nimport SpringController from './Main/SpringContent/SpringController';\r\nimport SpringSecurity from './Main/SpringContent/SpringSecurity';\r\nimport SpringValidator from './Main/SpringContent/SpringValidator';\r\nimport SpringAop from './Main/SpringContent/SpringAop';\r\nimport SpringService from './Main/SpringContent/SpringService';\r\nimport SpringJackson from './Main/SpringContent/SpringJackson';\r\nimport SpringCommunication from './Main/SpringContent/SpringCommunication';\r\nimport SpringConverter from './Main/SpringContent/SpringConverter';\r\nimport SpringException from './Main/SpringContent/SpringException';\r\nimport SpringTestCode from './Main/SpringContent/SpringTestCode';\r\nimport SpringSecurityExCode1 from './Main/SpringContent/SpringSecurityExCode1';\r\nimport SpringSecurityExCode2 from './Main/SpringContent/SpringSecurityExCode2';\r\nimport SpringSecurityExCode3 from './Main/SpringContent/SpringSecurityExCode3';\r\nimport SpringBasicEx1 from './Main/SpringContent/SpringBasicEx1';\r\n\r\n// JSP, Servlet\r\nimport JspServletBasic from './Main/JspServletContent/JspServletBasic';\r\nimport JspServletBulletinBoard from './Main/JspServletContent/JspServletBulletinBoard';\r\nimport JspServletJstl from './Main/JspServletContent/JspServletJstl';\r\nimport JspServletEl from './Main/JspServletContent/JspServletEl';\r\nimport JspServletJdbc from './Main/JspServletContent/JspServletJdbc';\r\nimport JspServletInformation from './Main/JspServletContent/JspServletInformation';\r\n\r\n// 백엔드 개발자\r\nimport BackendBasic from './Main/BackendContent/BackendBasic';\r\nimport BackendSolid from './Main/BackendContent/BackendSolid';\r\nimport BackendBrowserDevTool from './Main/BackendContent/BackendBrowserDevTool';\r\nimport BackendSCTCache from './Main/BackendContent/BackendSCTCache';\r\nimport BackendCompilerInterpreter from './Main/BackendContent/BackendCompilerInterpreter';\r\nimport BackendCodingConvention from './Main/BackendContent/BackendCodingConvention';\r\n\r\n// ========== 프론트엔드 ==========\r\n// HTML\r\nimport HtmlBasic from './Main/HtmlContent/HtmlBasic';\r\nimport HtmlTest from './Main/HtmlContent/HtmlTest';\r\n\r\n// CSS\r\nimport CssBasic from './Main/CssContent/CssBasic';\r\nimport CssBasic2 from './Main/CssContent/CssBasic2';\r\nimport CssScss from './Main/CssContent/CssScss';\r\nimport CssAnimation from './Main/CssContent/CssAnimation';\r\nimport CssUse from './Main/CssContent/CssUse';\r\nimport CssBlurBusinessCard from './Main/CssContent/CssBlurBusinessCard';\r\nimport CssTextAndVideo from './Main/CssContent/CssTextAndVideo';\r\n\r\n// 부트스트랩\r\nimport BootstrapBasic from './Main/BootstrapContent/BootstrapBasic';\r\nimport BootstrapTable from './Main/BootstrapContent/BootstrapTable';\r\n\r\n// 타입스크립트\r\nimport TypeScriptBasic from './Main/TypeScriptContent/TypeScriptBasic';\r\n\r\n// 자바스크립트\r\nimport JavaScriptBasic from './Main/JavaScriptContent/JavaScriptBasic';\r\nimport JavaScriptBasic2 from './Main/JavaScriptContent/JavaScriptBasic2';\r\nimport JavaScriptDocument from './Main/JavaScriptContent/JavaScriptDocument';\r\nimport JavaScriptElement from './Main/JavaScriptContent/JavaScriptElement';\r\nimport JavaScriptEvent from './Main/JavaScriptContent/JavaScriptEvent';\r\nimport JavaScriptEventObject from './Main/JavaScriptContent/JavaScriptEventObject';\r\nimport JavaScriptAjax from './Main/JavaScriptContent/JavaScriptAjax';\r\nimport JavaScriptAttribute from './Main/JavaScriptContent/JavaScriptAttribute';\r\nimport JavaScriptLocation from './Main/JavaScriptContent/JavaScriptLocation';\r\nimport JavaScriptStyle from './Main/JavaScriptContent/JavaScriptStyle';\r\nimport JavaScriptWindow from './Main/JavaScriptContent/JavaScriptWindow';\r\nimport JavaScriptTable from './Main/JavaScriptContent/JavaScriptTable';\r\nimport JavaScriptScroll from './Main/JavaScriptContent/JavaScriptScroll';\r\n\r\n// 리액트\r\nimport ReactBasic from './Main/ReactContent/ReactBasic';\r\nimport ReactJavaScript from './Main/ReactContent/ReactJavaScript';\r\nimport ReactHooks from './Main/ReactContent/ReactHooks';\r\nimport ReactClass from './Main/ReactContent/ReactClass';\r\nimport ReactAnimation from './Main/ReactContent/ReactAnimation';\r\nimport ReactRouter from './Main/ReactContent/ReactRouter';\r\nimport ReactRedux from './Main/ReactContent/ReactRedux';\r\nimport ReactReduxSaga from './Main/ReactContent/ReactReduxSaga';\r\nimport ReactModal from './Main/ReactContent/ReactModal';\r\nimport ReactStyledComponent from './Main/ReactContent/ReactStyledComponent';\r\nimport ReactFetchAPI from './Main/ReactContent/ReactFetchAPI';\r\nimport ReactAxios from './Main/ReactContent/ReactAxios';\r\nimport ReactAjax from './Main/ReactContent/ReactAjax';\r\nimport ReactBabel from './Main/ReactContent/ReactBabel';\r\n\r\n// 프론트 개발자\r\nimport FrontendBasic from './Main/FrontendContent/FrontendBasic';\r\nimport FrontendBrowserDevTool from './Main/FrontendContent/FrontendBrowserDevTool';\r\nimport FrontendRegex from './Main/FrontendContent/FrontendRegex';\r\nimport FrontendBuildName from './Main/FrontendContent/FrontendBuildName';\r\nimport FrontendHttp from './Main/FrontendContent/FrontendHttp';\r\nimport FrontendPrettier from './Main/FrontendContent/FrontendPrettier';\r\n\r\n\r\n// ========== 기타 ==========\r\n// 데이터 베이스\r\nimport DBOracleBasic from './Main/DatabaseContent/DBOracleBasic';\r\nimport DBMySQLBasic from './Main/DatabaseContent/DBMySQLBasic';\r\nimport DBNamingConvention from './Main/DatabaseContent/DBNamingConvention';\r\nimport DBMariaBasic from './Main/DatabaseContent/DBMariaBasic';\r\nimport DBError from './Main/DatabaseContent/DBError';\r\nimport DBTable from './Main/DatabaseContent/DBTable';\r\nimport DBErd from './Main/DatabaseContent/DBErd';\r\n\r\n// 디자인 패턴\r\nimport DPMvc2 from './Main/DesignPatternContent/DPMvc2';\r\nimport DPMvp from './Main/DesignPatternContent/DPMvp';\r\nimport DPMvvm from './Main/DesignPatternContent/DPMvvm';\r\nimport DPGof from './Main/DesignPatternContent/DPGof';\r\n\r\n// 보안\r\nimport SecurityBasic from './Main/SecurityContent/SecurityBasic';\r\nimport SecurityJwt from './Main/SecurityContent/SecurityJwt';\r\nimport SecurityHmac from './Main/SecurityContent/SecurityHmac';\r\nimport SecurityHash from './Main/SecurityContent/SecurityHash';\r\nimport SecurityEncryption from './Main/SecurityContent/SecurityEncryption';\r\nimport SecurityHackingAttack from './Main/SecurityContent/SecurityHackingAttack';\r\nimport SecurityIpSpoofing from './Main/SecurityContent/SecurityIpSpoofing';\r\n\r\n// 네트워크\r\nimport NetworkBasic from './Main/NetworkContent/NetworkBasic';\r\nimport NetworkCommand from './Main/NetworkContent/NetworkCommand';\r\nimport NetworkArpprotocol from './Main/NetworkContent/NetworkArpprotocol';\r\nimport NetworkOSI7Layer from './Main/NetworkContent/NetworkOSI7Layer';\r\nimport NetworkThreeWayHandshake from './Main/NetworkContent/NetworkThreeWayHandshake';\r\nimport NetworkDevice from './Main/NetworkContent/NetworkDevice';\r\nimport NetworkWireshark from './Main/NetworkContent/NetworkWireshark';\r\nimport NetworkProtocol from './Main/NetworkContent/NetworkProtocol';\r\n\r\n// 알고리즘\r\nimport Algorithm_Backtracking from './Main/AlgorithmContent/Algorithm_Backtracking';\r\nimport Algorithm_Divide_Conquer from './Main/AlgorithmContent/Algorithm_Divide_Conquer';\r\nimport Algorithm_Dynamic from './Main/AlgorithmContent/Algorithm_Dynamic';\r\nimport Algorithm_Graph from './Main/AlgorithmContent/Algorithm_Graph';\r\nimport Algorithm_Greedy from './Main/AlgorithmContent/Algorithm_Greedy';\r\nimport Algorithm_Hash from './Main/AlgorithmContent/Algorithm_Hash';\r\nimport Algorithm_Recursive from './Main/AlgorithmContent/Algorithm_Recursive';\r\nimport Algorithm_Search from './Main/AlgorithmContent/Algorithm_Search';\r\nimport Algorithm_Sort from './Main/AlgorithmContent/Algorithm_Sort';\r\nimport Algorithm_Basic from './Main/AlgorithmContent/Algorithm_Basic';\r\n\r\n// API\r\nimport ApiNaver from './Main/ApiContent/ApiNaver';\r\nimport ApiGoogle from './Main/ApiContent/ApiGoogle';\r\nimport ApiKakao from './Main/ApiContent/ApiKakao';\r\nimport ApiFacebook from './Main/ApiContent/ApiFacebook';\r\n\r\n// 자료구조\r\n\r\n// 클라우드\r\nimport CloudOracle from './Main/CloudContent/CloudOracle';\r\n\r\n// 도커\r\nimport DockerBasic from './Main/DockerContent/DockerBasic';\r\n\r\n// CI/CD\r\nimport CicdJenkins from './Main/CicdContent/CicdJenkins';\r\nimport CicdGithubAction from './Main/CicdContent/CicdGithubAction';\r\n\r\n// 윈도우\r\nimport WindowCommand from './Main/WindowContent/WindowCommand';\r\nimport WindowSystem from './Main/WindowContent/WindowSystem';\r\n\r\n// 리눅스\r\nimport LinuxBasic from './Main/LinuxContent/LinuxBasic';\r\nimport LinuxCommand from './Main/LinuxContent/LinuxCommand';\r\nimport LinuxMobaXterm from './Main/LinuxContent/LinuxMobaXterm';\r\nimport LinuxVimEditor from './Main/LinuxContent/LinuxVimEditor';\r\nimport LinuxDirectory from './Main/LinuxContent/LinuxDirectory';\r\nimport LinuxUbuntu from './Main/LinuxContent/LinuxUbuntu';\r\nimport LinuxCentOS7 from './Main/LinuxContent/LinuxCentOS7';\r\nimport LinuxShell from './Main/LinuxContent/LinuxShell';\r\nimport LinuxShellScript from './Main/LinuxContent/LinuxShellScript';\r\nimport LinuxServer from './Main/LinuxContent/LinuxServer';\r\nimport LinuxNetwork from './Main/LinuxContent/LinuxNetwork';\r\nimport LinuxAccountCommand from './Main/LinuxContent/LinuxAccountCommand';\r\n\r\n// 용어\r\nimport Term from './Main/TermContent/Term';\r\n\r\n// 단축키, 설정\r\nimport KeyMapVscode from './Main/KeyMapContent/KeyMapVscode';\r\nimport KeyMapIntellij from './Main/KeyMapContent/KeyMapIntellij';\r\nimport KeyMapEclipse from './Main/KeyMapContent/KeyMapEclipse';\r\nimport KeyMapWindow from './Main/KeyMapContent/KeyMapWindow';\r\nimport KeyMapBrowser from './Main/KeyMapContent/KeyMapBrowser';\r\nimport KeyMapSublimeText from './Main/KeyMapContent/KeyMapSublimeText';\r\n\r\n// 협업도구\r\nimport CollaborationTool_Github from './Main/CollaborationToolContent/CollaborationTool_Github';\r\nimport CollaborationTool_Slack from './Main/CollaborationToolContent/CollaborationTool_Slack';\r\nimport CollaborationTool_Diagram from './Main/CollaborationToolContent/CollaborationTool_Diagram';\r\nimport CollaborationTool_Markdown from './Main/CollaborationToolContent/CollaborationTool_Markdown';\r\n\r\n//  참고사이트\r\nimport RefBlog from './Main/RefBlogContent/RefBlog';\r\n\r\n// 파이썬\r\nimport PythonBasic from './Main/PythonContent/PythonBasic';\r\nimport PythonRegex from './Main/PythonContent/PythonRegex';\r\n\r\n// 인공지능\r\nimport AiBasic from './Main/AIContent/AiBasic';\r\n\r\n// 블록체인\r\nimport BlockChainPow from './Main/BlockChainContent/BlockChainPow';\r\n\r\n// 코딩테스트\r\nimport CTBaekJoon from './Main/CodingTestContent/CTBaekJoon';\r\n\r\n// 추천 프로그램\r\nimport ProgramRecDev from './Main/ProgramContent/ProgramRecDev';\r\nimport ProgramRecWin from './Main/ProgramContent/ProgramRecWin';\r\n\r\n// Figma\r\nimport FigmaBasic from './Main/FigmaContent/FigmaBasic';\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <div className=\"main\">\r\n      <Routes>\r\n        {/*========== 백엔드 ========== */}\r\n        {/* 자바 */}\r\n        <Route path=\"/java_basic\" element={<JavaBasic />} />\r\n        <Route path=\"/java_basic2\" element={<JavaBasic2 />} />\r\n        <Route path=\"/java_modifier\" element={<JavaModifier />} />\r\n        <Route path=\"/java_annotation\" element={<JavaAnnotation />} />\r\n\r\n        {/* PHP */}\r\n        <Route path=\"/php_basic\" element={<PhpBasic />} />\r\n\r\n        {/* 노드JS */}\r\n        <Route path=\"/nodejs_basic\" element={<NodejsBasic />} />\r\n\r\n        {/* 스프링 */}\r\n        <Route path=\"/spring_error\" element={<SpringError />} />\r\n        <Route path=\"/spring_jpa\" element={<SpringJpa />} />\r\n        <Route path=\"/spring_basic\" element={<SpringBasic />} />\r\n        <Route path=\"/spring_thymeleaf\" element={<SpringThymeleaf />} />\r\n        <Route path=\"/spring_dao_dto\" element={<SpringDaoDto />} />\r\n        <Route path=\"/spring_lombok\" element={<SpringLombok />} />\r\n        <Route path=\"/spring_yml\" element={<SpringYml />} />\r\n        <Route path=\"/spring_api\" element={<SpringAPI />} />\r\n        <Route path=\"/spring_oauth2\" element={<SpringOAuth2 />} />\r\n        <Route path=\"/spring_security\" element={<SpringSecurity />} />\r\n        <Route path=\"/spring_controller\" element={<SpringController />} />\r\n        <Route path=\"/spring_validator\" element={<SpringValidator />} />\r\n        <Route path=\"/spring_aop\" element={<SpringAop />} />\r\n        <Route path=\"/spring_service\" element={<SpringService />} />\r\n        <Route path=\"/spring_jackson\" element={<SpringJackson />} />\r\n        <Route path=\"/spring_communication\" element={<SpringCommunication />} />\r\n        <Route path=\"/spring_converter\" element={<SpringConverter />} />\r\n        <Route path=\"/spring_exception\" element={<SpringException />} />\r\n        <Route path=\"/spring_testcode\" element={<SpringTestCode />} />\r\n        <Route path=\"/spring_securityexcode1\" element={<SpringSecurityExCode1 />} />\r\n        <Route path=\"/spring_securityexcode2\" element={<SpringSecurityExCode2 />} />\r\n        <Route path=\"/spring_securityexcode3\" element={<SpringSecurityExCode3 />} />\r\n        <Route path=\"/spring_basic_ex1\" element={<SpringBasicEx1 />} />\r\n\r\n        {/* JSP , Servlet */}\r\n        <Route path=\"/jspservlet_information\" element={<JspServletInformation />} />\r\n        <Route path=\"/jspservlet_basic\" element={<JspServletBasic />} />\r\n        <Route path=\"/jspservlet_bulletinboard\" element={<JspServletBulletinBoard />} />\r\n        <Route path=\"/jspservlet_jstl\" element={<JspServletJstl />} />\r\n        <Route path=\"/jspservlet_el\" element={<JspServletEl />} />\r\n        <Route path=\"/jspservlet_jdbc\" element={<JspServletJdbc />} />\r\n\r\n        {/* 백엔드 개발자 */}\r\n        <Route path=\"/backend_basic\" element={<BackendBasic />} />\r\n        <Route path=\"/backend_solid\" element={<BackendSolid />} />\r\n        <Route path=\"/backend_sctcache\" element={<BackendSCTCache />} />\r\n        <Route path=\"/backend_browserdevtool\" element={<BackendBrowserDevTool />} />\r\n        <Route path=\"/backend_compiler_interpreter\" element={<BackendCompilerInterpreter />} />\r\n        <Route path=\"/backend_codingconvention\" element={<BackendCodingConvention />} />\r\n\r\n        {/*========== 프론트엔드 ==========*/}\r\n\r\n        {/* HTML */}\r\n        <Route path=\"/html_basic\" element={<HtmlBasic />} />\r\n        <Route path=\"/html_test\" element={<HtmlTest />} />\r\n\r\n        {/* CSS */}\r\n        <Route path=\"/css_basic\" element={<CssBasic />} />\r\n        <Route path=\"/css_basic2\" element={<CssBasic2 />} />\r\n        <Route path=\"/css_scss\" element={<CssScss />} />\r\n        <Route path=\"/css_use\" element={<CssUse />} />\r\n        <Route path=\"/css_animation\" element={<CssAnimation />} />\r\n        <Route path=\"/css_blur business card\" element={<CssBlurBusinessCard />} />\r\n        <Route path=\"/css_text and video\" element={<CssTextAndVideo />} />\r\n\r\n        {/* Bootstrap */}\r\n        <Route path=\"/bootstrap_basic\" element={<BootstrapBasic />} />\r\n        <Route path=\"/bootstrap_table\" element={<BootstrapTable />} />\r\n\r\n        {/* 타입스크립트 */}\r\n        <Route path=\"/typescript_basic\" element={<TypeScriptBasic />} />\r\n\r\n        {/* 자바스크립트  */}\r\n        <Route path=\"/javascript_basic\" element={<JavaScriptBasic />} />\r\n        <Route path=\"/javascript_basic2\" element={<JavaScriptBasic2 />} />\r\n        <Route path=\"/javascript_document\" element={<JavaScriptDocument />} />\r\n        <Route path=\"/javascript_element\" element={<JavaScriptElement />} />\r\n        <Route path=\"/javascript_event\" element={<JavaScriptEvent />} />\r\n        <Route path=\"/javascript_event_object\" element={<JavaScriptEventObject />} />\r\n        <Route path=\"/javascript_ajax\" element={<JavaScriptAjax />} />\r\n        <Route path=\"/javascript_attribute\" element={<JavaScriptAttribute />} />\r\n        <Route path=\"/javascript_location\" element={<JavaScriptLocation />} />\r\n        <Route path=\"/javascript_style\" element={<JavaScriptStyle />} />\r\n        <Route path=\"/javascript_window\" element={<JavaScriptWindow />} />\r\n\r\n        <Route path=\"/javascript_table\" element={<JavaScriptTable />} />\r\n        <Route path=\"/javascript_scroll\" element={<JavaScriptScroll />} />\r\n\r\n        {/* 리액트 */}\r\n        <Route path=\"/react_basic\" element={<ReactBasic />} />\r\n        <Route path=\"/react_javascript\" element={<ReactJavaScript />} />\r\n        <Route path=\"/react_hooks\" element={<ReactHooks />} />\r\n        <Route path=\"/react_class\" element={<ReactClass />} />\r\n        <Route path=\"/react_animation\" element={<ReactAnimation />} />\r\n        <Route path=\"/react_router\" element={<ReactRouter />} />\r\n        <Route path=\"/react_modal\" element={<ReactModal />} />\r\n        <Route path=\"/react_redux\" element={<ReactRedux />} />\r\n        <Route path=\"/react_redux_saga\" element={<ReactReduxSaga />} />\r\n        <Route path=\"/react_styledcomponent\" element={<ReactStyledComponent />} />\r\n        <Route path=\"/react_fetchapi\" element={<ReactFetchAPI />} />\r\n        <Route path=\"/react_ajax\" element={<ReactAjax />} />\r\n        <Route path=\"/react_axios\" element={<ReactAxios />} />\r\n        <Route path=\"/react_babel\" element={<ReactBabel />} />\r\n\r\n        {/* 프론트 개발자 */}\r\n        <Route path=\"/frontend_basic\" element={<FrontendBasic />} />\r\n        <Route path=\"/frontend_browserdevtool\" element={<FrontendBrowserDevTool />} />\r\n        <Route path=\"/frontend_regex\" element={<FrontendRegex />} />\r\n        <Route path=\"/frontend_buildname\" element={<FrontendBuildName />} />\r\n        <Route path=\"/frontend_http\" element={<FrontendHttp />} />\r\n        <Route path=\"/frontend_prettier\" element={<FrontendPrettier />} />\r\n\r\n        {/*========== 기타 ==========*/}\r\n\r\n        {/* 데이터 베이스 */}\r\n        <Route path=\"/db_oraclebasic\" element={<DBOracleBasic />} />\r\n        <Route path=\"/db_mysqlbasic\" element={<DBMySQLBasic />} />\r\n        <Route path=\"/db_namingconvention\" element={<DBNamingConvention />} />\r\n        <Route path=\"/db_mariabasic\" element={<DBMariaBasic />} />\r\n        <Route path=\"/db_error\" element={<DBError />} />\r\n        <Route path=\"/db_table\" element={<DBTable />} />\r\n        <Route path=\"/db_erd\" element={<DBErd />} />\r\n\r\n        {/* 디자인 패턴 */}\r\n        <Route path=\"/dp_gof\" element={<DPGof />} />\r\n        <Route path=\"/dp_mvc2\" element={<DPMvc2 />} />\r\n        <Route path=\"/dp_mvp\" element={<DPMvp />} />\r\n        <Route path=\"/dp_mvvm\" element={<DPMvvm />} />\r\n\r\n        {/* 보안 */}\r\n        <Route path=\"/security_basic\" element={<SecurityBasic />} />\r\n        <Route path=\"/security_jwt\" element={<SecurityJwt />} />\r\n        <Route path=\"/security_hmac\" element={<SecurityHmac />} />\r\n        <Route path=\"/security_hash\" element={<SecurityHash />} />\r\n        <Route path=\"/security_encryption\" element={<SecurityEncryption />} />\r\n        <Route path=\"/security_hackingattack\" element={<SecurityHackingAttack />} />\r\n        <Route path=\"/security_ipspoofing\" element={<SecurityIpSpoofing />} />\r\n\r\n        {/* 네트워크 */}\r\n        <Route path=\"/network_basic\" element={<NetworkBasic />} />\r\n        <Route path=\"/network_command\" element={<NetworkCommand />} />\r\n        <Route path=\"/network_arpprotocol\" element={<NetworkArpprotocol />} />\r\n        <Route path=\"/network_osi7layer\" element={<NetworkOSI7Layer />} />\r\n        <Route path=\"/network_threewayhandshake\" element={<NetworkThreeWayHandshake />} />\r\n        <Route path=\"/network_device\" element={<NetworkDevice />} />\r\n        <Route path=\"/network_wireshark\" element={<NetworkWireshark />} />\r\n        <Route path=\"/network_protocol\" element={<NetworkProtocol />} />\r\n\r\n        {/* 알고리즘 */}\r\n        <Route path=\"/algorithm_backtracking\" element={<Algorithm_Backtracking />} />\r\n        <Route path=\"/algorithm_divide_conquer\" element={<Algorithm_Divide_Conquer />} />\r\n        <Route path=\"/algorithm_dynamic\" element={<Algorithm_Dynamic />} />\r\n        <Route path=\"/algorithm_graph\" element={<Algorithm_Graph />} />\r\n        <Route path=\"/algorithm_greedy\" element={<Algorithm_Greedy />} />\r\n        <Route path=\"/algorithm_hash\" element={<Algorithm_Hash />} />\r\n        <Route path=\"/algorithm_recursive\" element={<Algorithm_Recursive />} />\r\n        <Route path=\"/algorithm_search\" element={<Algorithm_Search />} />\r\n        <Route path=\"/algorithm_sort\" element={<Algorithm_Sort />} />\r\n        <Route path=\"/algorithm_basic\" element={<Algorithm_Basic />} />\r\n\r\n        {/* 자료구조 */}\r\n        <Route path=\"/api_naver\" element={<ApiNaver />} />\r\n        <Route path=\"/api_kakao\" element={<ApiKakao />} />\r\n        <Route path=\"/api_google\" element={<ApiGoogle />} />\r\n        <Route path=\"/api_facebook\" element={<ApiFacebook />} />\r\n\r\n        {/* 자료구조 */}\r\n\r\n        {/* 클라우드 */}\r\n        <Route path=\"/cloud_oracle\" element={<CloudOracle />} />\r\n\r\n        {/* 도커 */}\r\n        <Route path=\"/docker_basic\" element={<DockerBasic />} />\r\n\r\n        {/* CI/CD */}\r\n        <Route path=\"/cicd_jenkins\" element={<CicdJenkins />} />\r\n        <Route path=\"/cicd_github_action\" element={<CicdGithubAction />} />\r\n\r\n        {/* 윈도우 */}\r\n        <Route path=\"/window_command\" element={<WindowCommand />} />\r\n        <Route path=\"/window_system\" element={<WindowSystem />} />\r\n\r\n        {/* 리눅스 */}\r\n        <Route path=\"/linux_basic\" element={<LinuxBasic />} />\r\n        <Route path=\"/linux_command\" element={<LinuxCommand />} />\r\n        <Route path=\"/linux_mobaxterm\" element={<LinuxMobaXterm />} />\r\n        <Route path=\"/linux_vimeditor\" element={<LinuxVimEditor />} />\r\n        <Route path=\"/linux_directory\" element={<LinuxDirectory />} />\r\n        <Route path=\"/linux_ubuntu\" element={<LinuxUbuntu />} />\r\n        <Route path=\"/linux_centos7\" element={<LinuxCentOS7 />} />\r\n        <Route path=\"/linux_shell\" element={<LinuxShell />} />\r\n        <Route path=\"/linux_shellscript\" element={<LinuxShellScript />} />\r\n        <Route path=\"/linux_server\" element={<LinuxServer />} />\r\n        <Route path=\"/linux_network\" element={<LinuxNetwork />} />\r\n        <Route path=\"/linux_account_command\" element={<LinuxAccountCommand />} />\r\n\r\n        {/* 용어 */}\r\n        <Route path=\"/term\" element={<Term />} />\r\n\r\n        {/* 단축키,설정 */}\r\n        <Route path=\"/keymap_intellij\" element={<KeyMapIntellij />} />\r\n        <Route path=\"/keymap_vscode\" element={<KeyMapVscode />} />\r\n        <Route path=\"/keymap_eclipse\" element={<KeyMapEclipse />} />\r\n        <Route path=\"/keymap_window\" element={<KeyMapWindow />} />\r\n        <Route path=\"/keymap_browser\" element={<KeyMapBrowser />} />\r\n        <Route path=\"/keymap_sublimetext\" element={<KeyMapSublimeText />} />\r\n\r\n        {/* 협업 도구 */}\r\n        <Route path=\"/collaboration_github\" element={<CollaborationTool_Github />} />\r\n        <Route path=\"/collaboration_slack\" element={<CollaborationTool_Slack />} />\r\n        <Route path=\"/collaboration_diagram\" element={<CollaborationTool_Diagram />} />\r\n        <Route path=\"/collaboration_markdown\" element={<CollaborationTool_Markdown />} />\r\n\r\n        {/* 참고 사이트 */}\r\n        <Route path=\"/ref_blog\" element={<RefBlog />} />\r\n\r\n        {/* 파이썬 */}\r\n        <Route path=\"/python_basic\" element={<PythonBasic />} />\r\n        <Route path=\"/python_regex\" element={<PythonRegex />} />\r\n\r\n        {/* 인공지능 */}\r\n        <Route path=\"/ai_basic\" element={<AiBasic />} />\r\n\r\n        {/* 블록체인 */}\r\n        <Route path=\"/blockchain_pow\" element={<BlockChainPow />} />\r\n\r\n        {/* 코딩테스트 */}\r\n        <Route path=\"/codingtest_baekjoon\" element={<CTBaekJoon />} />\r\n\r\n        {/* 추천 프로그램 */}\r\n        <Route path=\"/program_recdev\" element={<ProgramRecDev />} />\r\n        <Route path=\"/program_recwin\" element={<ProgramRecWin />} />\r\n\r\n        {/* 피그마 */}\r\n        <Route path=\"/figma_basic\" element={<FigmaBasic />} />\r\n\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './NavMenu.css';\r\n\r\nconst NavMenu = (props) => {\r\n\r\n  function send(page) {\r\n    props.onChangePage(page)\r\n  }\r\n\r\n  return (\r\n    <div className=\"nav-menu\">\r\n      <div className=\"menu\">\r\n        <p> 프론트엔드 </p>\r\n        <button onClick={() => { send(\"html\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Html_icon.png'} /> HTML </button>\r\n        <button onClick={() => { send(\"css\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Css_icon.svg'} /> CSS </button>\r\n        <button onClick={() => { send(\"bootstrap\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Bootstrap_icon.svg'} /> <span> Bootstrap </span> </button>\r\n        {/*<button  onClick={() => { send(\"typescript\") }}> TypeScript </button>*/}\r\n        <button onClick={() => { send(\"javascript\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Javascript_icon.svg'} /> <span> JavaScript</span> </button>\r\n        <button onClick={() => { send(\"typescript\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Typescript_icon.svg'} /> <span> TypeScript</span> </button>\r\n        <button onClick={() => { send(\"react\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/React_icon.svg'} /> React </button>\r\n        <button onClick={() => { send(\"frontend\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Frontenddvl_icon.svg'} /> <span> 프론트 개발자 </span> </button>\r\n      </div>\r\n      <div className=\"menu\">\r\n        <p> 백엔드 </p>\r\n        <button onClick={() => { send(\"java\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Java_icon.png'} /> JAVA </button>\r\n        {/*<button  onClick={() => { send(\"php\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Php_icon.svg'} /> PHP </button>*/}\r\n        {/*<button  onClick={() => { send(\"nodejs\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Nodejs_icon.png'} /> Node.js </button>*/}\r\n        <button onClick={() => { send(\"spring\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Spring_icon.svg'} /> Spring </button>\r\n        <button onClick={() => { send(\"jspservlet\") }}> JSP </button>\r\n        <button onClick={() => { send(\"api\") }}>  API </button>\r\n        <button onClick={() => { send(\"backend\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Backenddvl_icon.svg'} /> <span> 백엔드 개발자 </span> </button>\r\n      </div>\r\n      <div className=\"menu\">\r\n        <p> 서버,DB </p>\r\n        <button onClick={() => { send(\"database\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Database_icon.svg'} /> DB </button>\r\n        <button onClick={() => { send(\"cloud\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Cloud_icon.svg'} /> 클라우드 </button>\r\n        <button onClick={() => { send(\"linux\") }}>   <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Linux_icon.svg'} /> Linux </button>\r\n        <button onClick={() => { send(\"collaborationtool\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Github_icon.svg'} /> 협업도구 </button>\r\n        <button onClick={() => { send(\"docker\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Docker_icon.svg'} /> Docker </button>\r\n        <button onClick={() => { send(\"cicd\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/DevOps_icon.svg'} /> CI/CD </button>\r\n      </div>\r\n      <div className=\"menu\">\r\n        <p> 기타 </p>\r\n        {/*<button  onClick={() => { send(\"python\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Python_icon.svg'} /> Python </button>*/}\r\n        {/*<button  onClick={() => { send(\"ai\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Ai_icon.svg'} /> 인공지능 </button>*/}\r\n        {/*<button  onClick={() => { send(\"algorithm\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Algorithm_icon.svg'} /> 알고리즘 </button>*/}\r\n        <button onClick={() => { send(\"designpattern\") }}> 디자인패턴 </button>\r\n        <button onClick={() => { send(\"security\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Security_icon.svg'} /> 보안</button>\r\n        <button onClick={() => { send(\"network\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Network_icon.svg'} /> 네트워크</button>\r\n        <button onClick={() => { send(\"window\") }}>  <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Window_icon.svg'} /> window</button>\r\n        <button onClick={() => { send(\"contructdata\") }}> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/DataStructure_icon.svg'} /> 자료구조 </button>\r\n        <button onClick={() => { send(\"term\") }}> 용어 </button>\r\n        <button onClick={() => { send(\"keymap\") }}> 단축키&amp;설정 </button>\r\n        <button onClick={() => { send(\"refblog\") }}> 참고 블로그 </button>\r\n        {/*<button  onClick={() => { send(\"blockchain\") }}>  블록체인 </button>*/}\r\n        <button onClick={() => { send(\"codingtest\") }}>  코딩테스트 </button>\r\n        <button onClick={() => { send(\"program\") }}>  추천 프로그램 </button>\r\n        <button onClick={() => { send(\"figma\") }}>  Figma </button>\r\n        <button onClick={() => { send(\"refactoring\") }}>  리팩토링 </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HtmlList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"html_basic\"> HTML 기본 문법 </Link>\r\n        <Link to=\"html_test\"> test </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HtmlList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CssList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"css_basic\"> CSS 기본 문법 </Link>\r\n        <Link to=\"css_basic2\"> CSS 기본 문법2 </Link>\r\n        <Link to=\"css_use\"> CSS 응용 </Link>\r\n        <Link to=\"css_scss\"> CSS Scss </Link>\r\n        <Link to=\"css_animation\"> CSS Animation </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"css_blur business card\"> 명함 불러 만들기</Link>\r\n        <Link to=\"css_text and video\"> 글씨 뒤로 비디오 효과주기 </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CssList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BootstrapList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"bootstrap_basic\"> bootstrap 기초 </Link>\r\n        <Link to=\"bootstrap_table\"> bootstrap 테이블 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"\">  </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BootstrapList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst JavaScriptList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"javascript_basic\"> JavaScript 기초 </Link>\r\n        <Link to=\"javascript_basic2\"> JavaScript 기초2 </Link>\r\n        <Link to=\"javascript_document\"> JavaScript Document </Link>\r\n        <Link to=\"javascript_element\"> JavaScript Element </Link>\r\n        <Link to=\"javascript_event\"> JavaScript Event </Link>\r\n        <Link to=\"javascript_event_object\"> JavaScript EventObject </Link>\r\n        <Link to=\"javascript_attribute\"> JavaScript Attribute </Link>\r\n        <Link to=\"javascript_window\"> JavaScript Window </Link>\r\n        <Link to=\"javascript_location\"> JavaScript Location </Link>\r\n        <Link to=\"javascript_style\"> JavaScript Style </Link>\r\n        <Link to=\"javascript_ajax\">  Ajax </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"javascript_table\"> JavaScript Table </Link>\r\n        <Link to=\"javascript_scroll\"> JavaScript Scroll </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JavaScriptList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TypeScriptList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"typescript_basic\"> 타입스크립트 기본 문법 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        {/*<Link to=\"\">  </Link>*/}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypeScriptList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ReactList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu75vw\">\r\n        <Link to=\"react_basic\"> Basic </Link>\r\n        <Link to=\"react_javascript\"> Javascript </Link>\r\n        <Link to=\"react_class\"> Class </Link>\r\n        <Link to=\"react_hooks\"> Hooks </Link>\r\n        <Link to=\"react_redux\"> Redux </Link>\r\n        <Link to=\"react_redux_saga\"> ReduxSaga </Link>\r\n        <Link to=\"react_recoil\"> Recoil </Link>\r\n        <Link to=\"react_router\"> Router </Link>\r\n        <Link to=\"react_animation\"> Animation </Link>\r\n        <Link to=\"react_modal\"> Modal </Link>\r\n        <Link to=\"react_styledcomponent\"> StyledComponent </Link>\r\n        <Link to=\"react_ajax\"> Ajax </Link>\r\n        <Link to=\"react_fetchapi\"> FetchAPI </Link>\r\n        <Link to=\"react_axios\"> Axios </Link>\r\n        <Link to=\"react_babel\"> Babel </Link>\r\n      </div>\r\n      <div className=\"menu menu25vw\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst JavaList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"java_basic\"> JAVA 공부 </Link>\r\n        <Link to=\"java_basic2\"> JAVA 공부 2 </Link>\r\n        <Link to=\"java_annotation\"> JAVA 어노테이션 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"java_serializable\"> 직렬화 </Link>\r\n        <Link to=\"java_modifier\"> 한정자 </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JavaList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PhpList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"php_basic\"> PHP 기본 문법 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhpList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NodeJsList = () => {\r\n\r\n  return (\r\n\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"nodejs_basic\"> NodeJs 기본 문법 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NodeJsList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst JspServletList = () => {\r\n\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"jspservlet_basic\"> JSP,Servlet 기초 </Link>\r\n        <Link to=\"jspservlet_information\"> JSP,Servlet 정보 </Link>\r\n        <Link to=\"jspservlet_bulletinboard\"> JSP,Servlet 게시판만들기 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"jspservlet_jstl\"> JSP JSTL </Link>\r\n        <Link to=\"jspservlet_el\"> JSP EL </Link>\r\n        <Link to=\"jspservlet_jdbc\"> JDBC </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JspServletList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SpringList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu75vw\">\r\n        <Link to=\"spring_error\"> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Error_icon.svg'} /> 스프링 오류 </Link>\r\n        <Link to=\"spring_basic\"> 스프링 기초 </Link>\r\n        <Link to=\"spring_thymeleaf\"> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Thymeleaf_icon.svg'} /> Thymeleaf </Link>\r\n        <Link to=\"spring_lombok\"> <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Lombok_icon.svg'} /> Lombok, Annotation </Link>\r\n        <Link to=\"spring_yml\"> 스프링 yml(properties) </Link>\r\n        <Link to=\"spring_dao_dto\"> 스프링 DaoDto </Link>\r\n        <Link to=\"spring_oauth2\">  스프링 OAuth2  </Link>\r\n        <Link to=\"spring_security\"> 스프링 Security </Link>\r\n        <Link to=\"spring_controller\"> 스프링 Controller </Link>\r\n        <Link to=\"spring_validator\"> 스프링 Validator </Link>\r\n        <Link to=\"spring_aop\"> 스프링 AOP </Link>\r\n        <Link to=\"spring_jackson\"> 스프링 Jackson </Link>\r\n        <Link to=\"spring_service\"> 스프링 Service </Link>\r\n        <Link to=\"spring_communication\"> 스프링 통신 </Link>\r\n        <Link to=\"spring_converter\"> 스프링 Converter </Link>\r\n        <Link to=\"spring_jpa\"> 스프링 JPA </Link>\r\n        <Link to=\"spring_exception\"> 스프링 Exception </Link>\r\n        <Link to=\"spring_testcode\"> 스프링 TestCode </Link>\r\n      </div>\r\n      <div className=\"menu25vw\">\r\n        <Link to=\"spring_securityexcode1\"> 스프링 로그인폼 테스트 </Link>\r\n        <Link to=\"spring_securityexcode2\"> MySQL - Login </Link>\r\n        <Link to=\"spring_securityexcode3\"> MySQL - Login - Security </Link>\r\n        <Link to=\"spring_basic_ex1\"> 스프링 기본 세팅1 </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpringList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DatabaseList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"db_oraclebasic\"> OreacleDB 공부 </Link>\r\n        <Link to=\"db_mysqlbasic\"> Mysql 공부 </Link>\r\n        <Link to=\"db_namingconvention\"> Database 네이밍컨벤션 </Link>\r\n        <Link to=\"db_erd\"> ERD </Link>\r\n        <Link to=\"db_mariabasic\"> MariaDB 공부 </Link>\r\n        <Link to=\"db_error\"> Database 에러 </Link>\r\n        <Link to=\"db_table\"> Database 테이블 예시 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabaseList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst WindowList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"window_command\"> 윈도우 명령어 </Link>\r\n        <Link to=\"window_system\"> 윈도우 시스템 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WindowList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinuxList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"linux_account_command\"> 리눅스 계정 관련 명령어 </Link>\r\n        <Link to=\"linux_command\"> 리눅스 명령어 </Link>\r\n        <Link to=\"linux_network\"> 리눅스 네트워크 </Link>\r\n        <Link to=\"linux_vimeditor\"> 리눅스 VimEditor </Link>\r\n        <Link to=\"linux_basic\"> 리눅스 공부 </Link>\r\n        <Link to=\"linux_directory\"> 리눅스 디렉토리 구조 </Link>\r\n        <Link to=\"linux_shellscript\"> 리눅스 쉘 스크립트 </Link>\r\n        <Link to=\"linux_server\"> 리눅스 서버 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"linux_ubuntu\"> 리눅스 우분투 </Link>\r\n        <Link to=\"linux_centos7\"> 리눅스 CentOS7 </Link>\r\n        <Link to=\"linux_mobaxterm\"> 리눅스 MobaXterm </Link>\r\n        <Link to=\"linux_shell\"> 리눅스 쉘 </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinuxList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NetworkList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"network_basic\"> 네트워크 기초 </Link>\r\n        <Link to=\"network_command\"> 네트워크 명령어 </Link>\r\n        <Link to=\"network_arpprotocol\"> 네트워크 ARP 프로토콜 </Link>\r\n        <Link to=\"network_osi7layer\"> 네트워크 OSI 7 계층 </Link>\r\n        <Link to=\"network_threewayhandshake\"> 네트워크 3WayHandshake </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"network_device\"> 네트워크 관련 장치 </Link>\r\n        <Link to=\"network_wireshark\"> 네트워크 와이어샤크 </Link>\r\n        <Link to=\"network_protocol\"> 네트워크 프로토콜 </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NetworkList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TermList = () => {\r\n\r\n  return (\r\n\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"term\"> 용어 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TermList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst KeyMapList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"keymap_intellij\"> Intellij 단축키, 설정 </Link>\r\n        <Link to=\"keymap_vscode\"> VScode 단축키, 설정 </Link>\r\n        <Link to=\"keymap_eclipse\"> Eclipse 단축키 및 설정 </Link>\r\n        <Link to=\"keymap_sublimetext\"> SublimeText 단축키 및 설정 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"keymap_window\"> Window 단축키 및 설정 </Link>\r\n        <Link to=\"keymap_browser\"> Browser 단축키 및 설정 </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeyMapList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CollaborationToolList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"collaboration_github\"> 깃허브 공부 </Link>\r\n        <Link to=\"collaboration_slack\"> 슬랙 </Link>\r\n        <Link to=\"collaboration_diagram\"> 다이어그램 </Link>\r\n        <Link to=\"Collaboration_markdown\"> 마크다운 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollaborationToolList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RefBlogList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"ref_blog\"> 참고 블로그 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RefBlogList;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PtyhonList = () => {\r\n\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"python_basic\"> Python 공부 </Link>\r\n        <Link to=\"python_regex\"> Python 정규표현식 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PtyhonList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AIList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"ai_basic\"> 인공지능 공부 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AlgorithmList = () => {\r\n\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"algorithm_basic\"> 알고리즘 기초 </Link>\r\n        <Link to=\"algorithm_backtracking\"> 백트래킹 </Link>\r\n        <Link to=\"algorithm_divide_conquer\"> 분할 알고리즘 </Link>\r\n        <Link to=\"algorithm_dynamic\"> 동적 계획법 </Link>\r\n        <Link to=\"algorithm_graph\"> 그래프 알고리즘 </Link>\r\n        <Link to=\"algorithm_greedy\"> 탐욕 알고리즘 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"algorithm_hash\"> 해시 알고리즘 </Link>\r\n        <Link to=\"algorithm_recursive\"> 재귀 알고리즘 </Link>\r\n        <Link to=\"algorithm_search\"> 검색 알고리즘 </Link>\r\n        <Link to=\"algorithm_sort\"> 정렬 알고리즘 </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlgorithmList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ApiList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        {/*<Link to=\"api_naverai\"> 네이버 ai </Link>*/}\r\n        <Link to=\"api_naver\"> 네이버 API </Link>\r\n        <Link to=\"api_kakao\"> 카카오 API </Link>\r\n        <Link to=\"api_google\"> 구글 API </Link>\r\n        <Link to=\"api_facebook\"> 페이스북 API </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FrontendList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"frontend_prettier\"> prettier </Link>\r\n        <Link to=\"frontend_basic\"> 프론트 개발 </Link>\r\n        <Link to=\"frontend_regex\"> 프론트 정규표현식 </Link>\r\n        <Link to=\"frontend_buildname\"> 프론트 이름 짓기  </Link>\r\n        <Link to=\"frontend_http\"> 프론트 HTTP </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"frontend_browserdevtool\"> 브라우저 개발자 도구 </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrontendList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BackendList = () => {\r\n\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"backend_basic\"> 백엔드 개발 </Link>\r\n        <Link to=\"backend_solid\"> Solid 5대 원칙 </Link>\r\n        <Link to=\"backend_sctcache\"> 세션 쿠키 토큰 캐시 </Link>\r\n        <Link to=\"backend_browserdevtool\"> 브라우저 개발자 도구 </Link>\r\n        <Link to=\"backend_compiler_interpreter\"> 컴파일러 와 인터프리터 </Link>\r\n        <Link to=\"backend_codingconvention\"> 코딩 컨벤션 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackendList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BlankList = () => {\r\n\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"security_basic\"> 보안 공부 </Link>\r\n        <Link to=\"security_jwt\"> JWT 토큰 </Link>\r\n        <Link to=\"security_hmac\"> HMAC 알고리즘 </Link>\r\n        <Link to=\"security_hash\"> HASH </Link>\r\n        <Link to=\"security_encryption\"> 암호화</Link>\r\n        <Link to=\"security_hackingattack\"> 해킹 공격 </Link>\r\n        <Link to=\"security_ipspoofing\"> IP Spoofing </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlankList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BlockChain = () => {\r\n\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"blockchain_pow\"> BlockChainPow  </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlockChain;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DesignPatternList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"dp_gof\"> Gof </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"dp_mvc2\"> MVC2 </Link>\r\n        <Link to=\"dp_mvp\">  MVP  </Link>\r\n        <Link to=\"dp_mvvm\"> MVVM </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DesignPatternList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CodingTestList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"codingtest_baekjoon\"> 백준 알고리즘 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"\">  </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodingTestList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProgramList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"program_recdev\"> 개발자 추천 프로그램 </Link>\r\n        <Link to=\"program_recwin\"> 윈도우 추천 프로그램 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"\">  </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgramList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CloudList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"cloud_oracle\"> 클라우드 오라클 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"\">  </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CloudList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FigmaList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"figma_basic\"> figma 기초 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"\">  </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FigmaList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RefactoringList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"refactoring_basic\"> 기초 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"\">  </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RefactoringList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DockerList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"docker_basic\"> 도커 기초 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n        <Link to=\"\">  </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DockerList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CicdList = () => {\r\n\r\n  return (\r\n    <div className=\"navMenuContainer2\">\r\n      <div className=\"menu menu1\">\r\n        <Link to=\"cicd_jenkins\"> 젠킨스 </Link>\r\n        <Link to=\"cicd_gitlab\"> GitLab </Link>\r\n        <Link to=\"cicd_github_action\"> 깃허브액션 </Link>\r\n      </div>\r\n      <div className=\"menu menu2\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CicdList;","import HtmlList from './NavMenuList/HtmlList.jsx';\r\nimport CssList from './NavMenuList/CssList.jsx';\r\nimport BootstrapList from './NavMenuList/BootstrapList.jsx';\r\nimport JavaScriptList from './NavMenuList/JavaScriptList.jsx';\r\nimport TypeScriptList from './NavMenuList/TypeScriptList.jsx';\r\nimport ReactList from './NavMenuList/ReactList.jsx';\r\nimport JavaList from './NavMenuList/JavaList.jsx';\r\nimport PhpList from './NavMenuList/PhpList.jsx';\r\nimport NodeJsList from './NavMenuList/NodeJsList.jsx';\r\nimport JspServletList from './NavMenuList/JspServletList.jsx';\r\nimport SpringList from './NavMenuList/SpringList.jsx';\r\nimport DatabaseList from './NavMenuList/DatabaseList.jsx';\r\nimport WindowList from './NavMenuList/WindowList.jsx';\r\nimport LinuxList from './NavMenuList/LinuxList.jsx';\r\nimport NetworkList from './NavMenuList/NetworkList.jsx';\r\nimport TermList from './NavMenuList/TermList.jsx';\r\nimport KeyMapList from './NavMenuList/KeyMapList.jsx';\r\nimport CollaborationToolList from './NavMenuList/CollaborationToolList.jsx';\r\nimport RefBlogList from './NavMenuList/RefBlogList.jsx';\r\nimport PythonList from './NavMenuList/PythonList.jsx';\r\nimport AIList from './NavMenuList/AIList.jsx';\r\nimport AlgorithmList from './NavMenuList/AlgorithmList.jsx';\r\nimport ApiList from './NavMenuList/ApiList.jsx';\r\nimport FrontendList from './NavMenuList/FrontendList.jsx';\r\nimport BackendList from './NavMenuList/BackendList.jsx';\r\nimport SecurityList from './NavMenuList/SecurityList.jsx';\r\nimport BlockChainList from './NavMenuList/BlockChainList.jsx';\r\nimport DesignPatternList from './NavMenuList/DesignPatternList.jsx';\r\nimport CodingTestList from './NavMenuList/CodingTestList.jsx';\r\nimport ProgramList from './NavMenuList/ProgramList.jsx';\r\nimport CloudList from './NavMenuList/CloudList.jsx';\r\nimport FigmaList from './NavMenuList/FigmaList.jsx';\r\nimport RefactoringList from './NavMenuList/RefactoringList.jsx';\r\nimport DockerList from './NavMenuList/DockerList.jsx';\r\nimport CicdList from './NavMenuList/CicdList.jsx';\r\nimport './NavMenu2.css';\r\n\r\nconst NavMenu2 = (props) => {\r\n\r\n  function send(page) {\r\n    props.onChangePage(page)\r\n  }\r\n\r\n  // NavMenu.jsx에서 선택한 목록을 보여주고 NavMenuList.jsx에서 클릭한 목록을 Main.jsx에 보여준다.\r\n  const showpage = () => {\r\n    // 프론트 엔드 메뉴\r\n    if (props.page === 'html') {\r\n      // { changeTitle('html') }\r\n      return <HtmlList onChangePage={(page2) => { send(page2) }}> </HtmlList>;\r\n    }\r\n    else if (props.page === 'css') {\r\n      return <CssList onChangePage={(page2) => { send(page2) }}> </CssList>;\r\n    }\r\n    else if (props.page === 'bootstrap') {\r\n      return <BootstrapList onChangePage={(page2) => { send(page2) }}> </BootstrapList>;\r\n    }\r\n    else if (props.page === 'javascript') {\r\n      return <JavaScriptList onChangePage={(page2) => { send(page2) }}> </JavaScriptList>;\r\n    }\r\n    else if (props.page === 'typescript') {\r\n      return <TypeScriptList onChangePage={(page2) => { send(page2) }}> </TypeScriptList>;\r\n    }\r\n    else if (props.page === 'react') {\r\n      return <ReactList onChangePage={(page2) => { send(page2) }}> </ReactList>;\r\n    }\r\n    else if (props.page === 'frontend') {\r\n      return <FrontendList onChangePage={(page2) => { send(page2) }}> </FrontendList>;\r\n    }\r\n    // 백엔드 메뉴\r\n    else if (props.page === 'java') {\r\n      return <JavaList onChangePage={(page2) => { send(page2) }}> </JavaList>;\r\n    }\r\n    else if (props.page === 'php') {\r\n      return <PhpList onChangePage={(page2) => { send(page2) }}> </PhpList>;\r\n    }\r\n    else if (props.page === 'nodejs') {\r\n      return <NodeJsList onChangePage={(page2) => { send(page2) }}> </NodeJsList>;\r\n    }\r\n    else if (props.page === 'spring') {\r\n      return <SpringList onChangePage={(page2) => { send(page2) }}> </SpringList>;\r\n    }\r\n    else if (props.page === 'jspservlet') {\r\n      return <JspServletList onChangePage={(page2) => { send(page2) }}> </JspServletList>;\r\n    }\r\n    else if (props.page === 'backend') {\r\n      return <BackendList onChangePage={(page2) => { send(page2) }}> </BackendList>;\r\n    }\r\n    //서버, DB\r\n    else if (props.page === 'cicd') {\r\n      return <CicdList onChangePage={(page2) => { send(page2) }}> </CicdList>;\r\n    }\r\n    //기타 메뉴\r\n    else if (props.page === 'database') {\r\n      return <DatabaseList onChangePage={(page2) => { send(page2) }}> </DatabaseList>;\r\n    }\r\n    else if (props.page === 'network') {\r\n      return <NetworkList onChangePage={(page2) => { send(page2) }}> </NetworkList>;\r\n    }\r\n    else if (props.page === 'window') {\r\n      return <WindowList onChangePage={(page2) => { send(page2) }}> </WindowList>;\r\n    }\r\n    else if (props.page === 'linux') {\r\n      return <LinuxList onChangePage={(page2) => { send(page2) }}> </LinuxList>;\r\n    }\r\n    else if (props.page === 'term') {\r\n      return <TermList onChangePage={(page2) => { send(page2) }}> </TermList>;\r\n    }\r\n    else if (props.page === 'keymap') {\r\n      return <KeyMapList onChangePage={(page2) => { send(page2) }}> </KeyMapList>;\r\n    }\r\n    else if (props.page === 'collaborationtool') {\r\n      return <CollaborationToolList onChangePage={(page2) => { send(page2) }}> </CollaborationToolList>;\r\n    }\r\n    else if (props.page === 'refblog') {\r\n      return <RefBlogList onChangePage={(page2) => { send(page2) }}> </RefBlogList>;\r\n    }\r\n    else if (props.page === 'python') {\r\n      return <PythonList onChangePage={(page2) => { send(page2) }}> </PythonList>;\r\n    }\r\n    else if (props.page === 'ai') {\r\n      return <AIList onChangePage={(page2) => { send(page2) }}> </AIList>;\r\n    }\r\n    else if (props.page === 'algorithm') {\r\n      return <AlgorithmList onChangePage={(page2) => { send(page2) }}> </AlgorithmList>;\r\n    }\r\n    else if (props.page === 'api') {\r\n      return <ApiList onChangePage={(page2) => { send(page2) }}> </ApiList>;\r\n    }\r\n    else if (props.page === 'security') {\r\n      return <SecurityList onChangePage={(page2) => { send(page2) }}> </SecurityList>;\r\n    }\r\n    else if (props.page === 'blockchain') {\r\n      return <BlockChainList onChangePage={(page2) => { send(page2) }}> </BlockChainList>;\r\n    }\r\n    else if (props.page === 'designpattern') {\r\n      return <DesignPatternList onChangePage={(page2) => { send(page2) }}> </DesignPatternList>;\r\n    }\r\n    else if (props.page === 'codingtest') {\r\n      return <CodingTestList onChangePage={(page2) => { send(page2) }}> </CodingTestList>;\r\n    }\r\n    else if (props.page === 'program') {\r\n      return <ProgramList onChangePage={(page2) => { send(page2) }}> </ProgramList>;\r\n    }\r\n    else if (props.page === 'cloud') {\r\n      return <CloudList onChangePage={(page2) => { send(page2) }}> </CloudList>;\r\n    }\r\n    else if (props.page === 'docker') {\r\n      return <DockerList onChangePage={(page2) => { send(page2) }}> </DockerList>;\r\n    }\r\n    else if (props.page === 'figma') {\r\n      return <FigmaList onChangePage={(page2) => { send(page2) }}> </FigmaList>;\r\n    }\r\n    else if (props.page === 'refactoring') {\r\n      return <RefactoringList onChangePage={(page2) => { send(page2) }}> </RefactoringList>;\r\n    }\r\n    else {\r\n      return <div> </div>;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"nav-menu2\">\r\n      <p> {props.page} </p>\r\n      <div>\r\n        {showpage()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavMenu2;","import React from 'react';\r\nimport './FootterMenu.css';\r\n\r\nconst FootterMenu = () => {\r\n  return (\r\n    <div className=\"FootMenu\">\r\n      <div className=\"submenu\">\r\n        <button> <a href=\"https://github.com/ssssksss\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Github_icon.svg'} alt=\"\" /> </a> </button>\r\n        <button> <a href=\"https://www.acmicpc.net/user/ssssksss\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Baekjoon_icon.svg'} alt=\"\" /> </a> </button>\r\n        <button> <a href=\"https://www.figma.com/file/jJaxrJ4zp0FmQyzJgViibu/Coding?node-id=2%3A9\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/Figma_icon.svg'} alt=\"\" /> </a> </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FootterMenu;","import React, { useState } from 'react';\r\nimport Main from './components/Main.jsx';\r\nimport NavMenu from './components/NavMenu';\r\nimport NavMenu2 from './components/NavMenu2';\r\nimport FootterMenu from './components/FootterMenu';\r\nimport styled from 'styled-components';\r\n\r\nconst BlogContainer = () => {\r\n\r\n  const [whatPage, setWhatPage] = useState('main');\r\n  const [whatPage2, setWhatPage2] = useState('main');\r\n\r\n  const changePage = (page, e) => {\r\n    setWhatPage(page);\r\n  }\r\n\r\n  const changePage2 = (page2, e) => {\r\n    setWhatPage2(page2);\r\n  }\r\n\r\n  const Container1 = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n  `;\r\n\r\n  const Container2 = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    min-height: 300px;\r\n  `;\r\n\r\n  const Container3 = styled.div`\r\n    width: 100%;\r\n  `;\r\n\r\n  return (\r\n    <div>\r\n      <Container1>\r\n        <NavMenu onChangePage={(page) => { { changePage(page) } }}> </NavMenu>\r\n        <NavMenu2 page={whatPage} onChangePage={(page2) => { { changePage2(page2) } }}> </NavMenu2>\r\n      </Container1>\r\n      <Container2>\r\n        <Main page2={whatPage2}> </Main>\r\n      </Container2>\r\n      <Container3>\r\n        <FootterMenu FootterMenu> </FootterMenu>\r\n      </Container3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MainContainer = styled.div`\r\n  width: calc(100% - 50px);\r\n  height: calc(100% - 60px);\r\n  border-radius: 10px;\r\n  overflow: scroll;\r\n`;\r\nconst ToDoTodayContainer = styled.div`\r\n  min-height: 240px;\r\n  height: calc(33% - 10px);  \r\n  background-color: #FFBB6D;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n  `;\r\nconst ToDoListContainer = styled.div`\r\n  min-height: 240px;\r\n  height: calc(33% - 10px);\r\n  background-color: #FFF3E3;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\nconst ToDoStudyContainer = styled.div`\r\n  min-height: 240px;\r\n  height: calc(34%);\r\n  background-color: #E3FFD3;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst TodoMain = () => {\r\n  return (\r\n    <MainContainer>\r\n      <ToDoTodayContainer>\r\n      </ToDoTodayContainer>\r\n      <ToDoListContainer>\r\n      </ToDoListContainer>\r\n      <ToDoStudyContainer>\r\n      </ToDoStudyContainer>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default TodoMain;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 80px;\r\n  background: #ffbb6d;\r\n  padding: 6px;\r\n  font-family: 'Cafe24Ssurround';\r\n  color: ${(props) => (props.color || \"black\")};\r\n  opacity: ${(props) => (props.opacity && \"0.6\")};\r\n`;\r\n\r\nconst Day = (props) => {\r\n\r\n  return (\r\n    <Container color={props.color} opacity={props.opacity}>\r\n      {props.day}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Day;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Day from '../Atoms/Day';\r\n\r\nconst Main = styled.main`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 5px;\r\n  `;\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  background: #ffbb6d;\r\n  margin-bottom: 10px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-family: 'Cafe24Ssurround';\r\n`;\r\nconst LeftButton = styled.button`\r\n  margin-right: 20px;\r\n  `;\r\nconst RightButton = styled.button`\r\n  margin-left: 20px;\r\n`;\r\nconst DayHeader = styled.div`\r\n  background: gray;\r\n  text-align: center;\r\n  height: 24px;\r\n  line-height: 24px;\r\n  font-family: 'Cafe24Ssurround';\r\n  border-radius: 10px;\r\n  background: #ffbb6d;\r\n  font-size: 1.4rem;\r\n\r\n  color: ${(props) => (props.color || \"black\")};\r\n`;\r\n\r\nconst Month = () => {\r\n\r\n\r\n  let todayDate = new Date();\r\n  let [dayList, setDayList] = useState([]);\r\n  let [year, setYear] = useState(parseInt(todayDate.getFullYear()));\r\n  let [month, setMonth] = useState(parseInt(todayDate.getMonth()));\r\n\r\n  const moveLeftDate = () => {\r\n    if (month === 0) {\r\n      setYear(year - 1);\r\n      setMonth(11);\r\n    } else {\r\n      setMonth(month - 1);\r\n    }\r\n  }\r\n\r\n  const moveRightDate = () => {\r\n    if (month === 11) {\r\n      setYear(year + 1);\r\n      setMonth(0);\r\n    } else {\r\n      setMonth(month + 1);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    let date = new Date(year, month, 1);\r\n\r\n    let prevDate = new Date(date.getFullYear(), date.getMonth(), 0);\r\n    let prevEndDay = prevDate.getDate(); //28-31\r\n    let prevEndDayW = prevDate.getDay(); //0-6\r\n\r\n    let nowDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    let nowStartDay = nowDate.getDate(); //1\r\n    let nowStartDayW = nowDate.getDay(); //0-6\r\n    let nowEndDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate(); //28-31\r\n\r\n    let nextDate = new Date(date.getFullYear(), date.getMonth() + 1, 1);\r\n    let nextStartDay = nextDate.getDate(); //1\r\n    let nextStartDayW = nextDate.getDay(); //0-6\r\n\r\n    setDayList([]);\r\n\r\n    //[1]시작일이 일요일일 경우\r\n    if (nowStartDayW === 0) {\r\n      //이번달\r\n      for (let i = 1; i <= nowEndDay; i++) {\r\n        setDayList(array => [...array, { \"day\": i, \"dayW\": (i - 1) % 7 }]);\r\n      }\r\n      //다음달\r\n      if (nextStartDayW !== 0) {\r\n        for (let i = 1; i <= 7 - nextStartDayW; i++) {\r\n          setDayList(array => [...array, { \"day\": i, \"dayW\": nextStartDayW + i - 1, \"opacity\": true }]);\r\n        }\r\n      }\r\n    }\r\n    //[2]시작일이 일요일이 아닌 경우\r\n    else {\r\n      //저번달\r\n      for (let i = prevEndDay - prevEndDayW, j = 0; i <= prevEndDay; i++, j++) {\r\n        setDayList(array => [...array, { \"day\": i, \"dayW\": j, \"opacity\": true }]);\r\n      }\r\n      //이번달\r\n      for (let i = 1; i <= nowEndDay; i++) {\r\n        setDayList(array => [...array, { \"day\": i, \"dayW\": (i - 1 + nowStartDayW) % 7 }]);\r\n      }\r\n      //다음달\r\n      if (nextStartDayW !== 0) {\r\n        for (let i = 1; i <= 7 - nextStartDayW; i++) {\r\n          setDayList(array => [...array, { \"day\": i, \"dayW\": nextStartDayW + i - 1, \"opacity\": true }]);\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [month])\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <LeftButton onClick={() => { moveLeftDate() }}> 👈 </LeftButton>\r\n        {year}년 {month + 1}월\r\n        <RightButton onClick={() => { moveRightDate() }}> 👉 </RightButton>\r\n      </Header>\r\n      <Main>\r\n        <DayHeader color={\"red\"}> 일 </DayHeader>\r\n        <DayHeader> 월 </DayHeader>\r\n        <DayHeader> 화 </DayHeader>\r\n        <DayHeader> 수 </DayHeader>\r\n        <DayHeader> 목 </DayHeader>\r\n        <DayHeader> 금 </DayHeader>\r\n        <DayHeader color={\"blue\"}> 토 </DayHeader>\r\n        {\r\n          dayList.map((i) => {\r\n            if (i.opacity) {\r\n\r\n              if (i.dayW === 6) {\r\n                return <Day color=\"blue\" day={i.day} opacity={i.opacity}> </Day>\r\n              }\r\n              else if (i.dayW === 0) {\r\n                return <Day color=\"red\" day={i.day} opacity={i.opacity}> </Day>\r\n              }\r\n              else {\r\n                return (\r\n                  <Day day={i.day} opacity={i.opacity}> </Day>\r\n                )\r\n              }\r\n            }\r\n            else {\r\n\r\n              if (i.dayW === 6) {\r\n                return <Day color=\"blue\" day={i.day}> </Day>\r\n              }\r\n              else if (i.dayW === 0) {\r\n                return <Day color=\"red\" day={i.day}> </Day>\r\n              }\r\n              else {\r\n                return (\r\n                  <Day day={i.day}> </Day>\r\n                )\r\n              }\r\n            }\r\n          })\r\n        }\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Month;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Month from '../Molecules/Month';\r\n\r\nconst Container = styled.div`\r\n  min-height: 240px;\r\n  background-color: white;\r\n  margin-bottom: 10px;\r\n  border: solid #c0b4fa 2px;\r\n  overflow: scroll;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Calender = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Month>\r\n\r\n      </Month>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calender;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Calender from '../Organisms/Calender';\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% - 50px);\r\n  height: 100%;\r\n  `;\r\n//height: calc(100% - 60px);\r\n\r\nconst TodoCalender = () => {\r\n  return (\r\n    <Container>\r\n      <Calender>\r\n\r\n      </Calender>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TodoCalender;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Private = ({ children }) => {\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        auth.isLogin ? <> {children} </> : <p> 로그인이 필요합니다. </p>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Private;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Route, Routes, Link } from 'react-router-dom';\r\nimport TodoMain from './component/Pages/TodoMain';\r\nimport TodoCalender from './component/Pages/TodoCalender';\r\n//import TodoStudy from './component/Pages/TodoStudy';\r\n//import TodoStatistics from './component/Pages/TodoStatistics';\r\n//import TodoList from './component/Pages/TodoList';\r\nimport Private from '../AuthContainer/Private';\r\n\r\n// 440, 960, 1440\r\nconst Container = styled.div`\r\n  min-width: 460px;\r\n  background-clip: content-box;\r\n  width: 100vw;\r\n  min-height: 500px;\r\n  height: 100%;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n\r\n`;\r\nconst Container1 = styled.div`\r\n  height: 100%;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #C4C4C4;\r\n`;\r\nconst Container2 = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  background-color: white;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  flex-flow: wrap row;\r\n`;\r\nconst TitleContainer = styled.header`\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #C0B4FA;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n  font-family: 'Cafe24Ssurround';\r\n  `;\r\nconst Title = styled.h2`\r\n  line-height: 50px;\r\n  text-align: center;\r\n`;\r\nconst SideContainer = styled.div`\r\n  width: 40px;\r\n  margin-right: 10px;\r\n  height: calc(100% - 60px);\r\n  text-align: center;\r\n  line-height: 40px;\r\n  font-family: 'GangwonEduPowerExtraBoldA';\r\n  font-size: 1.8rem;\r\n  position: relative;\r\n  overflow: scroll;\r\n  \r\n`;\r\nconst LinkStyle = styled(Link)`\r\n  display: block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #C0B4FA;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n  \r\n  &:hover {\r\n    color: #C0B4FA;\r\n    background: black;\r\n  }\r\n`;\r\n\r\nconst TodoContainer = () => {\r\n  return (\r\n    <Container>\r\n      <Container1>\r\n        <Container2>\r\n          <TitleContainer> <Title> 투두 메인 화면 </Title>  </TitleContainer>\r\n          <Private>\r\n            <SideContainer>\r\n              <LinkStyle to=\"main\"> 메인 </LinkStyle>\r\n              <LinkStyle to=\"calender\" > 달력 </LinkStyle>\r\n              <LinkStyle to=\"list\"> 목록 </LinkStyle>\r\n              <LinkStyle to=\"study\"> 공부 </LinkStyle>\r\n              <LinkStyle to=\"statistics\" > 통계 </LinkStyle>\r\n            </SideContainer>\r\n            <Routes>\r\n              <Route path={\"/main\"} element={<TodoMain />} />\r\n              <Route path={\"/calender\"} element={<TodoCalender />} />\r\n              {/*<Route path={\"/list\"} element={<TodoList />} />\r\n              <Route path={\"/study\"} element={<TodoStudy />} />\r\n              <Route path={\"/statistics\"} element={<TodoStatistics />} />*/}\r\n            </Routes>\r\n          </Private>\r\n        </Container2>\r\n      </Container1>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TodoContainer;","export const mediaQueryMaxSize = [\r\n  \"500px\"\r\n]","import React from 'react';\r\nimport { useState } from 'react';\r\nimport styled, { keyframes, css } from 'styled-components';\r\nimport { mediaQueryMaxSize } from '../util/CustomSize';\r\n\r\n// 스타일 컴포넌트\r\n\r\nconst Container = styled.div`\r\n  background: white;\r\n  max-width: 1400px;\r\n  margin: auto;\r\n`;\r\nconst Title = styled.div`\r\n  height: 400px;\r\n  background: #ececec;\r\n  padding: 20px;\r\n  text-align: center;\r\n  line-height: 360px;\r\n  position: relative;\r\n`;\r\nconst waterwave = keyframes`\r\n0%,100%{\r\n  clip-path: polygon(0 50%, 10% 52%, 20% 54%, 30% 54%, 40% 52%, 50% 50%, 60% 48%, 70% 46%, 80% 46%, 90% 48%, 100% 50%, 100% 100%, 0% 100%);\r\n}\r\n50%{\r\n  clip-path: polygon(0 50%, 10% 48%, 20% 46%, 30% 46%, 40% 48%, 50% 50%, 60% 52%, 70% 54%, 80% 54%, 90% 52%, 100% 50%, 100% 100%, 0% 100%);\r\n}\r\n`;\r\nconst Water = styled.div`\r\n  position: absolute;\r\n  animation: ${waterwave} 8s ease-in-out infinite;\r\n  background: rgba(0,0,255,0.5);\r\n  width: 100%;\r\n  height: 400px;\r\n  top: 0px;\r\n  left: 0px;\r\n  font-size: 10rem\r\n`;\r\nconst rotation = keyframes`\r\n0%,100%{\r\n  transform: rotate(0deg);\r\n}\r\n50%{\r\n  transform: rotate(60deg);\r\n}\r\n`;\r\nconst TitleIcon = styled.img`\r\n  width: 320px;\r\n  height: 320px;\r\n  border-radius: 160px;\r\n\r\n  ${props => {\r\n    if (props.rotateAni) {\r\n      return css`\r\n        animation: ${rotation} 8s ease-in-out infinite;\r\n      `;\r\n    }\r\n  }}\r\n`;\r\nconst Introduction = styled.div`\r\n  background: white;\r\n  height: 480px;\r\n  display: grid;\r\n  grid-template-rows: 100px 1fr 1fr 1fr 1fr 1fr;\r\n  grid-gap: 20px;\r\n  padding: 10px 20px;\r\n  margin-bottom: 20px;\r\n`;\r\nconst IntroductionTitle = styled.span`\r\n  height: 100px;\r\n  margin: auto;\r\n  line-height: 100px;\r\n  font-size: calc(3rem + 1.5vw);\r\n  font-family: SANGJUGyeongcheonIsland;\r\n  border-radius: 20px;\r\n  background: linear-gradient(100deg, #dfcff8 33%, #b085f5 100%);\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  color: transparent;\r\n`;\r\nconst IntroductionItem = styled.div`\r\n  display: flex;\r\n  flex-flow: wrap row;\r\n  align-content: center;\r\n  padding: 10px 10px 10px 10px;\r\n  border-radius: 10px;\r\n  font-size: 2rem;\r\n  font-family: SANGJUGyeongcheonIsland;\r\n  box-shadow: 2px 2px 1px 1px , 1px 1px 1px 0px inset;\r\n  background: linear-gradient(100deg, #fafafa 50%, #b085f5 100%);\r\n  color: #b085f5;\r\n\r\n  &>a {\r\n    color: #b085f5;\r\n  }\r\n`;\r\nconst Stack = styled.div`\r\n  background: #FFBB6D;\r\n  padding: 0px 20px 20px 20px;\r\n  height: 800px;\r\n  overflow: scroll;\r\n  font-family: \"Cafe24Ssurround\";\r\n`;\r\nconst StackTitle = styled.div`\r\n  height: 60px;\r\n  padding: 10px 0px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  flex-flow: wrap row;\r\n`;\r\nconst StackMenu = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst StackMenuButton = styled.button`\r\n  width: 100px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  font-size: 2rem;\r\n  box-shadow: 0px 0px 5px 0px white; \r\n  font-weight: 800;\r\n  &:hover {\r\n    color: white;\r\n    box-shadow: 0px 0px 10px 2px white; \r\n  }\r\n`;\r\nconst StackMain = styled.div`\r\n  background: white;\r\n  border-radius: 10px;\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  height: calc(100% - 180px);\r\n`;\r\nconst StackGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 245px calc(100% - 245px);\r\n  \r\n  @media only screen and (max-width: ${mediaQueryMaxSize[0]}) {\r\n    grid-template-columns: 205px calc(100% - 205px);\r\n  }\r\n`;\r\nconst StackGridList = styled.div`\r\n  width: 245px;\r\n  grid-gap: 15px;\r\n  display: grid;\r\n  grid-template-columns: 100px 100px;\r\n  \r\n  @media only screen and (max-width: ${mediaQueryMaxSize[0]}) {\r\n    width: 60px;\r\n    height: 60px;\r\n    grid-template-columns: 80px 80px;\r\n  }\r\n\r\n`;\r\nconst StackItem = styled.button`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin-left: 10px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-flow: wrap row;\r\n  justify-content: center;\r\n  align-content: center;\r\n  box-shadow: 0px 4px 2px 2px black, 0px -1px 1px 1px #6f6f6f;\r\n\r\n  @media only screen and (max-width: ${mediaQueryMaxSize[0]}) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`;\r\nconst StackImg = styled.img`\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  @media only screen and (max-width: ${mediaQueryMaxSize[0]}) {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n`;\r\nconst StackDescription = styled.div`\r\n  border-left: solid 3px #aeaeae;\r\n  padding: 10px;\r\n  height: auto;\r\n`;\r\nconst Project = styled.div`\r\n  background: white;\r\n  height: 800px;\r\n`;\r\nconst Career = styled.div`\r\n  min-height: 100px;\r\n  background: #aeaeae;\r\n`;\r\n\r\nconst PortfolioContainer = () => {\r\n\r\n  const [stackItem, setStackItem] = useState('frontend');\r\n\r\n  return (\r\n    <Container>\r\n      <Title>\r\n        <TitleIcon rotateAni alt=\"\" src={'/img/stackIcon/shipsteer.svg'} />\r\n        <Water>  </Water>\r\n      </Title>\r\n      <Introduction>\r\n        <IntroductionTitle> Introduce </IntroductionTitle>\r\n        <IntroductionItem> 이름 : 이수경 </IntroductionItem>\r\n        <IntroductionItem> 나이 : 1995년생 </IntroductionItem>\r\n        <IntroductionItem> 이메일 : ssssksss@naver.com </IntroductionItem>\r\n        <IntroductionItem> 깃허브 : <a href=\"https://github.com/ssssksss\" target=\"_blank\" rel=\"noopener noreferrer\"> https://github.com/ssssksss </a> 👈 </IntroductionItem>\r\n        <IntroductionItem> 블로그 : <a href=\"http://blog.ssssksss.xyz\" target=\"_blank\" rel=\"noopener noreferrer\"> blog.ssssksss.xyz </a> 👈 </IntroductionItem>\r\n      </Introduction>\r\n      <Stack>\r\n        <StackTitle> <h1> 기술/스택 </h1> </StackTitle>\r\n        <StackMenu>\r\n          <StackMenuButton onClick={() => setStackItem(\"frontend\")}>프론트엔드</StackMenuButton>\r\n          <StackMenuButton onClick={() => setStackItem(\"backend\")}>백엔드</StackMenuButton>\r\n          <StackMenuButton onClick={() => setStackItem(\"server\")}>서버</StackMenuButton>\r\n          <StackMenuButton onClick={() => setStackItem(\"database\")}>DB</StackMenuButton>\r\n        </StackMenu>\r\n        <br />\r\n        <StackMenu>\r\n          <StackMenuButton onClick={() => setStackItem(\"cicd\")}>CI/CD</StackMenuButton>\r\n          <StackMenuButton onClick={() => setStackItem(\"configuration_management\")}>형상관리</StackMenuButton>\r\n          <StackMenuButton onClick={() => setStackItem(\"communication_tool\")}>협업도구</StackMenuButton>\r\n          <StackMenuButton onClick={() => setStackItem(\"etc\")}>기타</StackMenuButton>\r\n        </StackMenu>\r\n        <StackMain>\r\n          {\r\n            stackItem === \"frontend\" &&\r\n            <>\r\n              <h2> 프론트엔드 </h2>\r\n              <hr size=\"3\" color=\"#aeaeae\" />\r\n              <StackGrid>\r\n                <StackGridList>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/html.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/css.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/javascript.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/react.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/redux.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/typescript.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/stylecomponent.svg'} />\r\n                  </StackItem>\r\n                </StackGridList>\r\n                <StackDescription>\r\n                  설명\r\n                </StackDescription>\r\n              </StackGrid>\r\n            </>\r\n          }\r\n          {\r\n            stackItem === \"backend\" &&\r\n            <>\r\n              <h2> 백엔드 </h2>\r\n              <hr size=\"3\" color=\"#aeaeae\" />\r\n              <StackGrid>\r\n                <StackGridList>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/java.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/springboot.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/springsecurity.svg'} />\r\n                  </StackItem>\r\n                </StackGridList>\r\n                <StackDescription>\r\n                  설명\r\n                </StackDescription>\r\n              </StackGrid>\r\n            </>\r\n          }\r\n          {\r\n            stackItem === \"server\" &&\r\n            <>\r\n              <h2> 서버 </h2>\r\n              <hr size=\"3\" color=\"#aeaeae\" />\r\n              <StackGrid>\r\n                <StackGridList>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/linux.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/centos.svg'} />\r\n                  </StackItem>\r\n                </StackGridList>\r\n                <StackDescription>\r\n                  설명\r\n                </StackDescription>\r\n              </StackGrid>\r\n            </>\r\n          }\r\n          {\r\n            stackItem === \"database\" &&\r\n            <>\r\n              <h2> Database </h2>\r\n              <hr size=\"3\" color=\"#aeaeae\" />\r\n              <StackGrid>\r\n                <StackGridList>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/mysql.svg'} />\r\n                  </StackItem>\r\n                </StackGridList>\r\n                <StackDescription>\r\n                  설명\r\n                </StackDescription>\r\n              </StackGrid>\r\n            </>\r\n          }\r\n          {\r\n            stackItem === \"cicd\" &&\r\n            <>\r\n              <h2> CICD </h2>\r\n              <hr size=\"3\" color=\"#aeaeae\" />\r\n              <StackGrid>\r\n                <StackGridList>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/jenkins.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/githubaction.svg'} />\r\n                  </StackItem>\r\n                </StackGridList>\r\n                <StackDescription>\r\n                  설명\r\n                </StackDescription>\r\n              </StackGrid>\r\n            </>\r\n          }\r\n          {\r\n            stackItem === \"configuration_management\" &&\r\n            <>\r\n              <h2> 형상관리 </h2>\r\n              <hr size=\"3\" color=\"#aeaeae\" />\r\n              <StackGrid>\r\n                <StackGridList>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/git.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/github.svg'} />\r\n                  </StackItem>\r\n                </StackGridList>\r\n                <StackDescription>\r\n                  설명\r\n                </StackDescription>\r\n              </StackGrid>\r\n            </>\r\n          }\r\n          {\r\n            stackItem === \"communication_tool\" &&\r\n            <>\r\n              <h2> 협업도구 </h2>\r\n              <hr size=\"3\" color=\"#aeaeae\" />\r\n              <StackGrid>\r\n                <StackGridList>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/figma.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/slack.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/notion.svg'} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/gathertown.svg'} />\r\n                  </StackItem>\r\n                </StackGridList>\r\n                <StackDescription>\r\n                  설명\r\n                </StackDescription>\r\n              </StackGrid>\r\n            </>\r\n          }\r\n          {\r\n            stackItem === \"etc\" &&\r\n            <>\r\n              <h2>  </h2>\r\n              <hr size=\"3\" color=\"#aeaeae\" />\r\n              <StackGrid>\r\n                <StackGridList>\r\n                  {/*<StackItem>\r\n                    <StackImg alt=\"\" src={'/img/stackIcon/springsecurity.svg'} />\r\n                  </StackItem>*/}\r\n                </StackGridList>\r\n                <StackDescription>\r\n                  설명\r\n                </StackDescription>\r\n              </StackGrid>\r\n            </>\r\n          }\r\n        </StackMain>\r\n      </Stack>\r\n      <Project>\r\n        프로젝트\r\n      </Project>\r\n      <Career>\r\n        경력\r\n      </Career>\r\n      <div>\r\n        풋터\r\n      </div>\r\n    </Container>\r\n  );\r\n\r\n};\r\n\r\nexport default PortfolioContainer;","export const enumColor = [\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n]\r\nexport const enumGradientColor = [\r\n  //블루계열\r\n  \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%)\",\r\n  \"linear-gradient(90deg, rgba(255, 128, 128, 0.65) 0%, rgba(255, 164, 128, 0.65) 10%,rgba(255, 202, 128, 0.65) 20%, rgba(255, 240, 128, 0.65) 30%, rgba(232, 255, 128, 0.65) 40%, rgba(193, 255, 128, 0.65) 50%, rgba(155, 255, 128, 0.65) 60%, rgba(128, 255, 138, 0.65) 70%, rgba(128, 255, 176, 0.65) 80%, rgba(128, 255, 215, 0.65) 90%, rgba(128, 255, 253, 0.65) 100%),linear-gradient(-90deg, rgba(204, 255, 254, 0.45) 0%, rgba(204, 241, 255, 0.45) 10%, rgba(204, 225, 255, 0.45) 20%, rgba(204, 210, 255, 0.45) 30%, rgba(213, 204, 255, 0.45) 40%, rgba(229, 204, 255, 0.45) 50%, rgba(244, 204, 255, 0.45) 60%, rgba(255, 204, 251, 0.45) 70%, rgba(255, 204, 235, 0.45) 80%, rgba(255, 204, 220, 0.45) 90%, rgba(255, 204, 205, 0.45) 100%)\",\r\n  \"linear-gradient(limegreen, transparent),\tlinear-gradient(90deg, skyblue, transparent),\tlinear-gradient(-90deg, coral, transparent);background-blend-mode: screen\",\r\n  \"linear-gradient(#7abcff, #60abf8 44%, #4096ee)\",\r\n  \"linear-gradient(135deg,  #ff2247, #1e3f9f)\",\r\n  \"linear-gradient(45deg, rgb(135, 28, 10) 20%, rgb(252, 124, 15) 61%, rgb(253, 121, 20) 100%)\",\r\n  \"linear-gradient(to right bottom, #CC59EA 20%, #647CF5, #4FC9FB 80%)\",\r\n  \"linear-gradient(135deg, rgba(244,226,156,0) 0%,rgba(59,41,58,1) 100%),linear-gradient(to right, rgba(244,226,156,1) 0%,rgba(130,96,87,1) 100%)\",\r\n  \"linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%)\",\r\n  \"linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%)\",\r\n]\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport CustomColor, { enumColor, enumGradientColor } from '../../util/CustomColor';\r\n\r\nlet sideWidth = 100;\r\nlet sideTranslate = sideWidth / 2;\r\nvar sideColor = enumGradientColor[Math.round(Math.random() * 10)];\r\nconst rotation = keyframes`\r\n  100% {\r\n    transform: rotate3d(1, 2, 3, 360deg);\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: ${sideWidth + \"px\"};\r\n  height: ${sideWidth + \"px\"};\r\n  transform-style: preserve-3d;\r\n  animation: ${rotation} 10s linear infinite;\r\n  left: 0px;\r\n  top: 0px;\r\n\r\n  &:hover {\r\n    animation-play-state: paused\r\n  }\r\n`;\r\nconst Side = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  text-align: center;\r\n  line-height: ${sideWidth + \"px\"};\r\n  opacity: .3;\r\n  border: solid white 1px;\r\n`;\r\nconst SideFront = styled(Side)`\r\ntransform: translateZ(${sideTranslate + \"px\"});\r\nbackground: ${sideColor};\r\n`;\r\nconst SideBack = styled(Side)`\r\ntransform: rotateY(180deg) translateZ(${sideTranslate + \"px\"});\r\nbackground: ${sideColor};\r\n`;\r\nconst SideTop = styled(Side)`\r\ntransform: rotateX(-90deg) translateZ(${sideTranslate + \"px\"});\r\nbackground: ${sideColor};\r\n`;\r\nconst SideBottom = styled(Side)`\r\ntransform: rotateX(90deg) translateZ(${sideTranslate + \"px\"});\r\nbackground: ${sideColor};\r\n`;\r\nconst SideLeft = styled(Side)`\r\ntransform: rotateY(-90deg) translateZ(${sideTranslate + \"px\"});\r\nbackground: ${sideColor};\r\n`;\r\nconst SideRight = styled(Side)`\r\ntransform: rotateY(90deg) translateZ(${sideTranslate + \"px\"});\r\nbackground: ${sideColor};\r\n`;\r\n\r\nconst Cube = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <SideFront></SideFront>\r\n      <SideBack></SideBack>\r\n      <SideTop></SideTop>\r\n      <SideBottom></SideBottom>\r\n      <SideLeft></SideLeft>\r\n      <SideRight></SideRight>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cube;","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  z-index: 5;\r\n`;\r\nconst PopupClose = styled.button`\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 10px;\r\n  font-size: 2rem;\r\n`;\r\nconst PopupNav = styled.div`\r\n  position: relative;\r\n  height: 40px;\r\n`;\r\n\r\nconst CustomModal = ({ header, children }) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <button onClick={() => setModalOpen(true)}> {header} </button>\r\n      <Modal isOpen={modalOpen} onRequestClose={() => setModalOpen(false)}>\r\n        <Container>\r\n          <PopupNav>\r\n            <PopupClose onClick={() => setModalOpen(false)}> 닫기 </PopupClose>\r\n          </PopupNav>\r\n          {children}\r\n        </Container>\r\n      </Modal>\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nexport default CustomModal;","import axios from 'axios';\r\n\r\nconst AxiosInstance = axios.create({\r\n  //baseURL: 'http://localhost:8080',\r\n  baseURL: 'http://blog.ssssksss.xyz:8080',\r\n  //timeout: 1000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  },\r\n  //withCredentials: true,\r\n});\r\n\r\nAxiosInstance.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    //토큰 만료 에러가 발생하면 로그인 페이지로 이동시키게 한다.\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\nexport default AxiosInstance;","export const IS_LOGIN = \"IS_LOGIN\";","import { IS_LOGIN } from './types';\r\nexport const isLogin = (payload) => {\r\n  return {\r\n    type: IS_LOGIN,\r\n    payload: payload\r\n  }\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AxiosInstance from '../util/AxiosInstance';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isLogin } from '../store/auth/actions';\r\nimport { useEffect } from 'react';\r\n\r\nconst Container = styled.div`\r\n  width:100%;\r\n  height:calc(100vh - 180px);\r\n  border-radius: solid black 1px;\r\n  box-sizing: content-box;\r\n  padding: 10px;\r\n  font-size: 2rem;\r\n`;\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #c0b4fa;\r\n  border-radius: 10px;\r\n  font-size: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Cafe24Ssurround';\r\n`;\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  background: #f0f0f0;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-content: center;\r\n  margin: 10px 0px;\r\n`;\r\nconst InputLabel = styled.label`\r\n  display: flex;\r\n  align-items: center; \r\n`;\r\nconst RememberCheckbox = styled.input`\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\nconst SubmitButton = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #c0b4fa;\r\n  border-radius: 10px;\r\n  font-family: 'Cafe24Ssurround';\r\n`;\r\n\r\nconst LoginPage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const submitLogin = () => {\r\n    AxiosInstance({\r\n      url: '/ssssksss/user/login',\r\n      method: 'POST',\r\n      data: {\r\n        email: document.getElementsByName(\"email\")[0].value,\r\n        password: document.getElementsByName(\"password\")[0].value\r\n      }\r\n    })\r\n      .then(res => {\r\n        window.localStorage.setItem('accessToken', res.data.accessToken);\r\n        dispatch(isLogin(true));\r\n        alert(\"로그인에 성공하였습니다.\");\r\n        console.log(res);\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const rememberCheckbox = window.localStorage.getItem('rememberCheckbox');\r\n    if (rememberCheckbox) {\r\n      document.getElementsByName(\"rememberCheckbox\")[0].checked = \"checked\";\r\n      document.getElementsByName(\"email\")[0].value = JSON.parse(rememberCheckbox).id;\r\n    }\r\n  }, []);\r\n\r\n  const rememberCheck = () => {\r\n    if (document.getElementsByName(\"rememberCheckbox\")[0].checked) {\r\n      window.localStorage.setItem('rememberCheckbox', JSON.stringify({ check: true, id: document.getElementsByName(\"email\")[0].value }));\r\n    } else {\r\n      window.localStorage.removeItem('rememberCheckbox');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Container>\r\n        <Header>\r\n          {\r\n            auth.isLogin ? <>로그아웃 페이지</> : <>로그인 페이지</>\r\n          }\r\n        </Header>\r\n        <InputContainer>\r\n          <InputLabel>\r\n            이메일 : <input type=\"text\" name=\"email\" placeholder=\"이메일을 입력하세요\" />\r\n          </InputLabel>\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <InputLabel>\r\n            패스워드 : <input type=\"password\" name=\"password\" placeholder=\"패스워드를 입력하세요\" />\r\n          </InputLabel>\r\n        </InputContainer>\r\n        <RememberCheckbox type=\"checkbox\" name=\"rememberCheckbox\" onChange={rememberCheck} /> 아이디 기억하기\r\n        <SubmitButton onClick={submitLogin}> 제출 </SubmitButton>\r\n      </Container>\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AxiosInstance from '../util/AxiosInstance';\r\n\r\nconst Container = styled.div`\r\n  width:100%;\r\n  height:calc(100vh - 180px);\r\n  border-radius: solid black 1px;\r\n  box-sizing: content-box;\r\n  padding: 10px;\r\n  font-size: 2rem;\r\n`;\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #c0b4fa;\r\n  border-radius: 10px;\r\n  font-size: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Cafe24Ssurround';\r\n`;\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  background: #f0f0f0;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-content: center;\r\n  margin: 10px 0px;\r\n`;\r\nconst InputLabel = styled.label`\r\n  display: flex;\r\n  align-items: center; \r\n`;\r\nconst EmailInput = styled.input`\r\n  \r\n`;\r\nconst PasswordInput = styled.input`\r\n  \r\n`;\r\nconst SubmitButton = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #c0b4fa;\r\n  border-radius: 10px;\r\n  font-family: 'Cafe24Ssurround';\r\n\r\n`;\r\n\r\nconst SignupPage = () => {\r\n  const submitSignup = async () => {\r\n    await AxiosInstance({\r\n      url: '/ssssksss/user/signup',\r\n      method: 'POST',\r\n      data: {\r\n        email: document.getElementsByName(\"email\")[0].value,\r\n        password: document.getElementsByName(\"password\")[0].value\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res);\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Header>\r\n        회원가입 페이지\r\n      </Header>\r\n      <Container>\r\n        <InputContainer>\r\n          <InputLabel>\r\n            이메일 : <EmailInput type=\"text\" name=\"email\" placeholder=\"이메일을 입력하세요\" />\r\n          </InputLabel>\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <InputLabel>\r\n            패스워드 : <PasswordInput type=\"password\" name=\"password\" placeholder=\"패스워드를 입력하세요\" />\r\n          </InputLabel>\r\n        </InputContainer>\r\n        <SubmitButton onClick={submitSignup}> 제출 </SubmitButton>\r\n      </Container>\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nexport default SignupPage;","import React, { useEffect, useState } from 'react';\r\nimport BlogContainer from './blogContainer/BlogContainer';\r\nimport TodoContainer from './todoContainer/TodoContainer';\r\nimport PortfolioContainer from './portfolioContainer/PortfolioContainer';\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\nimport Cube from './AtomicDesignComponent/Molecules/Cube.js';\r\nimport { Link, Route, Routes } from 'react-router-dom';\r\nimport { enumGradientColor } from './util/CustomColor';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport CustomModal from './util/CustomModal';\r\nimport LoginPage from './userContainer/LoginPage';\r\nimport SignupPage from './userContainer/SignupPage';\r\nimport ReactModal from 'react-modal';\r\nimport { isLogin } from './store/auth/actions';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst HomeButton = styled.button`\r\n  position: fixed;\r\n  right: 0px;\r\n  top: 240px;\r\n  opacity: 0.8;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 5px;\r\n  background: ${enumGradientColor[2]};\r\n`;\r\nconst TopButton = styled.button`\r\n  position: fixed;\r\n  right: 0px;\r\n  top: 200px;\r\n  opacity: 0.8;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 5px;\r\n  background: ${enumGradientColor[2]};\r\n`;\r\nconst AppContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-flow: wrap row;\r\n  align-content: space-evenly;\r\n\r\n  `;\r\nconst AppContainerRow = styled.div`\r\n  width: 100vw;  \r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`\r\nconst AppButton = styled.button`\r\n  width: 100px;\r\n  height: 100px;\r\n  border: 0px;\r\n  border-radius: 15px;\r\n  position: relative;\r\n  background: transparent;\r\n  font-size: 2rem;\r\n  text-ali\r\n  `;\r\nconst AbsText = styled.span`\r\n  width: 100px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  font-family: 'GangwonEduPowerExtraBoldA';\r\n  font-weight: 800;\r\n  word-break: keep-all;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n\r\n  ${(props) => (props.isAvailable ? { color: \"red\" } : { color: \"black\" })}\r\n`;\r\nconst StyleDiv = styled.div`\r\n  display: inline-block;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  padding: 5px;\r\n  background: ${enumGradientColor[8]};\r\n  margin: 5px;\r\n  font-size: 1.4rem;\r\n`;\r\nconst Nav = styled.div`\r\n  font-size: 2rem;\r\n  position : relative;\r\n  font-family: 'Cafe24Ssurround';\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 10px;\r\n`;\r\nReactModal.setAppElement('#root');\r\n\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  let todayDate = new Date();\r\n  let todayFullYear = todayDate.getFullYear();\r\n  let todayMonth = todayDate.getMonth() + 1;\r\n  let todayDay = todayDate.getDate();\r\n\r\n  const LogoutHandler = () => {\r\n    dispatch(isLogin(false));\r\n    window.localStorage.removeItem('accessToken');\r\n  }\r\n\r\n  const Home = (home) => {\r\n    navigate('/');\r\n  }\r\n  useEffect(() => {\r\n    const token = window.localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      var tokenDate = new Date(jwt.decode(token).exp * 1000);\r\n      if (tokenDate > new Date()) {\r\n        dispatch(isLogin(true));\r\n      }\r\n    }\r\n    else {\r\n      // null이 나오니까 처리하기\r\n      console.log(\"아무것도 없으니 에러\");\r\n    }\r\n    console.log(\"어떤 경로에서든 새로고침할때마다 렌더링\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Nav>\r\n        <StyleDiv> v 1.0.0 , {todayFullYear}년 {todayMonth}월 {todayDay}일 </StyleDiv>\r\n        <div>\r\n          {\r\n            auth.isLogin ?\r\n              <>\r\n                <StyleDiv>\r\n                  <button onClick={LogoutHandler}> 로그아웃 </button>\r\n                </StyleDiv>\r\n              </>\r\n              :\r\n              <>\r\n                <StyleDiv>\r\n                  <CustomModal header=\"로그인\">\r\n                    <LoginPage />\r\n                  </CustomModal>\r\n                </StyleDiv>\r\n                <StyleDiv>\r\n                  <CustomModal header=\"회원가입\">\r\n                    <SignupPage />\r\n                  </CustomModal>\r\n                </StyleDiv>\r\n              </>\r\n          }\r\n        </div>\r\n      </Nav>\r\n      {location.pathname === \"/\" &&\r\n        <AppContainer>\r\n          <AppContainerRow>\r\n            <AppButton disabled>\r\n              <Link to=\"/blog\">\r\n                <Cube> </Cube> <AbsText isAvailable> 블로그 <br /> (제작예정) </AbsText>\r\n              </Link>\r\n            </AppButton>\r\n            <AppButton disabled>\r\n              <Link to=\"/api_document\">\r\n                <Cube> </Cube> <AbsText isAvailable> API 작성 <br /> (제작예정) </AbsText>\r\n              </Link>\r\n            </AppButton>\r\n          </AppContainerRow>\r\n          <AppContainerRow>\r\n            <AppButton >\r\n              <Link to=\"/blog_container\">\r\n                <Cube> </Cube> <AbsText> 블로그 <br /> 창고 </AbsText>\r\n              </Link>\r\n            </AppButton>\r\n            <AppButton >\r\n              <Link to=\"/todo/main\">\r\n                <Cube> </Cube> <AbsText> 할일 <br /> </AbsText>\r\n              </Link>\r\n            </AppButton>\r\n          </AppContainerRow>\r\n          <AppContainerRow>\r\n            <AppButton>\r\n              <Link to=\"portfolio\">\r\n                <Cube> </Cube> <AbsText> 포트폴리오 <br /> </AbsText>\r\n              </Link>\r\n            </AppButton>\r\n            <AppButton disabled>\r\n              <Link to=\"/todo\">\r\n                <Cube> </Cube> <AbsText isAvailable> 프로젝트 <br /> (제작예정) </AbsText>\r\n              </Link>\r\n            </AppButton>\r\n          </AppContainerRow>\r\n        </AppContainer>\r\n      }\r\n      {location.pathname !== \"/\" &&\r\n        <Routes>\r\n          <Route path=\"/blog_container/*\" element={<BlogContainer />} />\r\n          <Route path=\"/todo/*\" element={<TodoContainer />} />\r\n          <Route path=\"/portfolio/*\" element={<PortfolioContainer />} />\r\n        </Routes>\r\n      }\r\n      <HomeButton onClick={() => { Home(true) }}> 홈 </HomeButton>\r\n      <TopButton onClick={() => { (document.documentElement.scrollTop = 0); }}>\r\n        <img alt=\"\" src={process.env.PUBLIC_URL + '/img/NavMenu/UpArrow_icon.svg'} />\r\n      </TopButton>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { IS_LOGIN } from './types';\r\nconst initialState = {\r\n  isLogin: false\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case IS_LOGIN:\r\n      return {\r\n        ...state,\r\n        isLogin: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './auth/reducer';\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer\r\n});\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './reducer';\r\nconst store = createStore(rootReducer);\r\nexport default store;","import { createBrowserHistory } from 'history'\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/index';\r\nimport history from './util/history';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter history={history}>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// 리액트 성능을 측정하기 위한 것이라는데 아직 잘 모르겠다.\r\nreportWebVitals();\r\n"],"sourceRoot":""}